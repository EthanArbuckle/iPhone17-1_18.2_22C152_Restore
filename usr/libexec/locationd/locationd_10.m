void sub_100679260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,void *__p,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  if (a47 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1006794C0(uint64_t result, uint64_t a2)
{
  *(_DWORD *)(*(void *)(result + 32) + 324) = 2 * (a2 != 0);
  return result;
}

uint64_t sub_1006794D8(uint64_t result, uint64_t a2)
{
  if (a2) {
    int v2 = 6;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(*(void *)(result + 32) + 336) = v2;
  return result;
}

uint64_t sub_1006794F0(uint64_t result, uint64_t a2)
{
  if (a2) {
    int v2 = 7;
  }
  else {
    int v2 = 0;
  }
  *(_DWORD *)(*(void *)(result + 32) + 340) = v2;
  return result;
}

void sub_100679508(int a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C1760);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLLocationController::onWifiNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C1760);
    }
    v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      v15 = "";
      __int16 v16 = 2082;
      v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLLocationController::onWifiNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_10067CB84(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006796D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006796F4(uint64_t a1)
{
  int v2 = *(std::__shared_weak_count **)(a1 + 744);
  if (v2) {
    sub_1000DB0A0(v2);
  }
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_100679744(__int32 a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C1760);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLLocationController::onGpsNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C1760);
    }
    v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      v15 = "";
      __int16 v16 = 2082;
      v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLLocationController::onGpsNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_10067CC50(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100679910(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100679930(__int32 a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C1760);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLLocationController::onPipelineNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C1760);
    }
    v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      v15 = "";
      __int16 v16 = 2082;
      v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLLocationController::onPipelineNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_10067D37C((int *)a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100679AFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100679B1C(__int32 a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C1760);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLLocationController::onWifi2Notification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C1760);
    }
    v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      v15 = "";
      __int16 v16 = 2082;
      v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLLocationController::onWifi2Notification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_10067DDAC((int *)a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100679CE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100679D08(__int32 a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C1760);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLLocationController::onAccessoryNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C1760);
    }
    v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      v15 = "";
      __int16 v16 = 2082;
      v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLLocationController::onAccessoryNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_10067E7E4(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100679ED4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

double sub_100679EF4(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1000DC48C(&v6, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 24);
  }
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v4 = v3 + 48;
  if (*(char *)(v3 + 71) < 0) {
    operator delete(*(void **)v4);
  }
  double result = *(double *)&v6;
  *(_OWORD *)uint64_t v4 = v6;
  *(void *)(v4 + 16) = v7;
  return result;
}

double sub_100679F78(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1000DC48C(&v6, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 8);
    uint64_t v7 = *(void *)(a2 + 24);
  }
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v4 = v3 + 48;
  if (*(char *)(v3 + 71) < 0) {
    operator delete(*(void **)v4);
  }
  double result = *(double *)&v6;
  *(_OWORD *)uint64_t v4 = v6;
  *(void *)(v4 + 16) = v7;
  return result;
}

void sub_100679FFC(unsigned int a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C1760);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLLocationController::onLoiNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C1760);
    }
    v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      v15 = "";
      __int16 v16 = 2082;
      v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLLocationController::onLoiNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_10067F048(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10067A1C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10067A1E8(uint64_t a1)
{
  sub_1006B7C30(a1);
  [*(id *)(a1 + 40) assertInside];
  [*(id *)(a1 + 656) invalidate];

  *(void *)(a1 + 656) = 0;
  uint64_t v2 = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  id v6 = [*(id *)(a1 + 32) vendor];
  uint64_t v7 = *(int **)(a1 + 264);
  if (v7 != (int *)(a1 + 272))
  {
    id v8 = v6;
    do
    {
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      v9 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        v10 = sub_1000A43BC(a1 + 240, v7 + 8);
        uint64_t v13 = v10[1];
        char v11 = v10 + 1;
        uint64_t v12 = v13;
        if (*((char *)v11 + 23) >= 0) {
          uint64_t v12 = (uint64_t)v11;
        }
        *(_DWORD *)buf = 136446210;
        uint64_t v37 = v12;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "shutting down %{public}s location provider", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022C17A0);
        }
        v25 = sub_1000A43BC(a1 + 240, v7 + 8);
        uint64_t v28 = v25[1];
        v26 = v25 + 1;
        uint64_t v27 = v28;
        if (*((char *)v26 + 23) >= 0) {
          uint64_t v27 = (uint64_t)v26;
        }
        int v34 = 136446210;
        uint64_t v35 = v27;
        v29 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationController::shutdown()", "%s\n", v29);
        if (v29 != (char *)buf) {
          free(v29);
        }
      }
      __int16 v14 = sub_1000A43BC(a1 + 240, v7 + 8);
      uint64_t v17 = v14[4];
      v15 = v14 + 4;
      uint64_t v16 = v17;
      if (*((char *)v15 + 23) >= 0) {
        __int16 v18 = v15;
      }
      else {
        __int16 v18 = (uint64_t *)v16;
      }
      uint64_t v19 = +[NSString stringWithUTF8String:v18];
      id v20 = +[CLSilo main];
      v33[0] = _NSConcreteStackBlock;
      v33[1] = 3221225472;
      v33[2] = sub_10067A6EC;
      v33[3] = &unk_10229FEB0;
      v33[4] = v8;
      v33[5] = v19;
      [v20 async:v33];
      uint64_t v21 = *((void *)v7 + 5);
      *((void *)v7 + 5) = 0;
      if (v21) {
        (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
      }
      v22 = (int *)*((void *)v7 + 1);
      if (v22)
      {
        do
        {
          v23 = v22;
          v22 = *(int **)v22;
        }
        while (v22);
      }
      else
      {
        do
        {
          v23 = (int *)*((void *)v7 + 2);
          BOOL v24 = *(void *)v23 == (void)v7;
          uint64_t v7 = v23;
        }
        while (!v24);
      }
      uint64_t v7 = v23;
    }
    while (v23 != (int *)(a1 + 272));
  }

  *(void *)(a1 + 648) = 0;
  uint64_t v30 = *(void *)(a1 + 632);
  if (v30)
  {
    [*(id *)(v30 + 16) unregister:*(void *)(v30 + 8) forNotification:0];
    [*(id *)(*(void *)(a1 + 632) + 16) unregister:*(void *)(*(void *)(a1 + 632) + 8) forNotification:9];
    [objc_msgSend(*(id *)(a1 + 32), "vendor") retireServiceWithName:@"CLLoiLocationProvider"];
    uint64_t v31 = *(void *)(a1 + 632);
    *(void *)(a1 + 632) = 0;
    if (v31) {
      (*(void (**)(uint64_t))(*(void *)v31 + 8))(v31);
    }
  }
  [*(id *)(a1 + 640) setHarvestingEnabled:0];
  [*(id *)(a1 + 640) shutdown];

  *(void *)(a1 + 640) = 0;
  [*(id *)(a1 + 1608) invalidate];

  *(void *)(a1 + 1608) = 0;
  [*(id *)(a1 + 5088) stopMonitoringEmergencyState:CLISP_ME_TOKEN];

  sub_10067A6F8((uint64_t *)(a1 + 712), 0);
  *(void *)(a1 + 5096) = 0;
  v32 = *(void **)(a1 + 5104);
  if (v32)
  {
    [v32 unregisterForUpdates:*(void *)(a1 + 32)];

    *(void *)(a1 + 5104) = 0;
  }
}

id sub_10067A6EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) retireServiceWithName:*(void *)(a1 + 40)];
}

uint64_t sub_10067A6F8(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_10078D498();
    operator delete();
  }
  return result;
}

void sub_10067A748(uint64_t a1, int a2)
{
  int v38 = a2;
  if (a2)
  {
    if (*(unsigned char *)(a1 + 664))
    {
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      uint64_t v3 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        *(void *)buf = &v38;
        uint64_t v4 = sub_100151D38((uint64_t **)(a1 + 240), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        uint64_t v5 = v4 + 6;
        if (*((char *)v4 + 71) < 0) {
          uint64_t v5 = (void *)*v5;
        }
        *(_DWORD *)buf = 136315138;
        *(void *)&uint8_t buf[4] = v5;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Unregistering %s location provider as bystander", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022C17A0);
        }
        *(void *)v39 = &v38;
        uint64_t v28 = sub_100151D38((uint64_t **)(a1 + 240), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)v39);
        v29 = v28 + 6;
        if (*((char *)v28 + 71) < 0) {
          v29 = (void *)*v29;
        }
        *(_DWORD *)v39 = 136315138;
        *(void *)&v39[4] = v29;
        uint64_t v30 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::stopLocationProvider(LocationProvider)", "%s\n", v30);
        if (v30 != buf) {
          free(v30);
        }
      }
      *(void *)buf = &v38;
      id v6 = sub_1000FEE0C((uint64_t **)(a1 + 264), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
      [(id)v6[5][2] unregister:v6[5][1] forNotification:4];
    }
    else
    {
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022C1820);
      }
      v9 = qword_1024193A8;
      if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
      {
        *(void *)buf = &v38;
        v10 = sub_100151D38((uint64_t **)(a1 + 240), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        char v11 = v10 + 6;
        if (*((char *)v10 + 71) < 0) {
          char v11 = (void *)*v11;
        }
        float v12 = sub_100151E24(a1);
        *(_DWORD *)buf = 136380931;
        *(void *)&uint8_t buf[4] = v11;
        __int16 v43 = 2050;
        *(double *)v44 = v12;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "@ClxProvider, stop, %{private}s, desiredAccuracy, %{public}.1f", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022C1820);
        }
        *(void *)v39 = &v38;
        uint64_t v31 = sub_100151D38((uint64_t **)(a1 + 240), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)v39);
        v32 = v31 + 6;
        if (*((char *)v31 + 71) < 0) {
          v32 = (void *)*v32;
        }
        float v33 = sub_100151E24(a1);
        *(_DWORD *)v39 = 136380931;
        *(void *)&v39[4] = v32;
        __int16 v40 = 2050;
        double v41 = v33;
        int v34 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::stopLocationProvider(LocationProvider)", "%s\n", v34);
        if (v34 != buf) {
          free(v34);
        }
      }
      if (v38 == *(_DWORD *)(a1 + 320))
      {
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022C1820);
        }
        uint64_t v13 = qword_1024193A8;
        if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "WlpReg, 0, loccontroller", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022C1820);
          }
          *(_WORD *)v39 = 0;
          uint64_t v35 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::stopLocationProvider(LocationProvider)", "%s\n", v35);
          if (v35 != buf) {
            free(v35);
          }
        }
      }
      if (v38 == *(_DWORD *)(a1 + 324))
      {
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022C1820);
        }
        __int16 v14 = qword_1024193A8;
        if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "UclpReg, 0, loccontroller", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022C1820);
          }
          *(_WORD *)v39 = 0;
          v36 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::stopLocationProvider(LocationProvider)", "%s\n", v36);
          if (v36 != buf) {
            free(v36);
          }
        }
      }
      *(void *)buf = &v38;
      v15 = sub_1000FEE0C((uint64_t **)(a1 + 264), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
      [(id)v15[5][2] unregister:v15[5][1] forNotification:0];
      *(void *)buf = &v38;
      uint64_t v16 = sub_1000FEE0C((uint64_t **)(a1 + 264), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
      [(id)v16[5][2] unregister:v16[5][1] forNotification:9];
      int v17 = v38;
      if (v38 == *(_DWORD *)(a1 + 328))
      {
        *(void *)buf = &v38;
        __int16 v18 = sub_1000FEE0C((uint64_t **)(a1 + 264), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        [(id)v18[5][2] unregister:v18[5][1] forNotification:26];
        *(void *)buf = &v38;
        uint64_t v19 = sub_1000FEE0C((uint64_t **)(a1 + 264), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        [(id)v19[5][2] unregister:v19[5][1] forNotification:18];
        int v17 = v38;
      }
      if (v17 == *(_DWORD *)(a1 + 336))
      {
        *(void *)buf = &v38;
        id v20 = sub_1000FEE0C((uint64_t **)(a1 + 264), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        [(id)v20[5][2] unregister:v20[5][1] forNotification:20];
        *(void *)buf = &v38;
        uint64_t v21 = sub_1000FEE0C((uint64_t **)(a1 + 264), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        [(id)v21[5][2] unregister:v21[5][1] forNotification:21];
        uint64_t v22 = *(void *)(a1 + 312);
        if (v22) {
          sub_100EDF5C8(v22);
        }
      }
      *(void *)buf = &v38;
      *((unsigned char *)sub_100151D38((uint64_t **)(a1 + 240), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 902) = 1;
      *(void *)buf = &v38;
      *((unsigned char *)sub_100151D38((uint64_t **)(a1 + 240), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 903) = 0;
      *(void *)buf = &v38;
      sub_100151D38((uint64_t **)(a1 + 240), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf)[113] = 0;
      *(void *)buf = &v38;
      if (*((double *)sub_100151D38((uint64_t **)(a1 + 240), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 23) < 0.0)
      {
        uint64_t v23 = sub_10016BA10();
        *(_DWORD *)buf = 0;
        double v24 = sub_10016BA54(v23, buf);
        *(void *)buf = &v38;
        *(double *)((char *)sub_100151D38((uint64_t **)(a1 + 240), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 172) = v24;
        *(void *)buf = &v38;
        sub_100151D38((uint64_t **)(a1 + 240), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)buf)[23] = 0;
        sub_1000DB3D4((uint64_t)buf);
        int v37 = 0;
        int v25 = (*(uint64_t (**)(uint64_t, int *, unsigned char *))(*(void *)a1 + 128))(a1, &v37, buf);
        if (*(double *)&v44[3] > 0.0) {
          int v26 = v25;
        }
        else {
          int v26 = 0;
        }
        if (v26 == 1)
        {
          int v27 = v45;
          *(void *)v39 = &v38;
          if (v27 == *((_DWORD *)sub_100151D38((uint64_t **)(a1 + 240), &v38, (uint64_t)&unk_101D0B290, (_DWORD **)v39)
                      + 48))
          {
            *(double *)&v44[31] = v24;
            *(void *)&v44[37] = 0;
            *(_DWORD *)v39 = 0;
            (*(void (**)(uint64_t, unsigned char *, unsigned char *))(*(void *)a1 + 136))(a1, v39, buf);
            *(_DWORD *)v39 = 2;
            (*(void (**)(uint64_t, unsigned char *, unsigned char *))(*(void *)a1 + 136))(a1, v39, buf);
            *(_DWORD *)v39 = 1;
            (*(void (**)(uint64_t, unsigned char *, unsigned char *))(*(void *)a1 + 136))(a1, v39, buf);
            *(_DWORD *)v39 = 3;
            (*(void (**)(uint64_t, unsigned char *, unsigned char *))(*(void *)a1 + 136))(a1, v39, buf);
            *(_DWORD *)v39 = 4;
            (*(void (**)(uint64_t, unsigned char *, unsigned char *))(*(void *)a1 + 136))(a1, v39, buf);
            *(_DWORD *)v39 = 39;
            (*(void (**)(uint64_t, unsigned char *, unsigned char *))(*(void *)a1 + 136))(a1, v39, buf);
          }
        }

        if (v50) {
          sub_1000DB0A0(v50);
        }
        if (v49 < 0) {
          operator delete(v48);
        }
        if (v47) {
          sub_1000DB0A0(v47);
        }
        if (v46) {
          sub_1000DB0A0(v46);
        }
      }
    }
  }
  else
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    uint64_t v7 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "LocationController,#Warning,stopLocation when provider is None", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      *(_WORD *)v39 = 0;
      id v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::stopLocationProvider(LocationProvider)", "%s\n", v8);
      if (v8 != buf) {
        free(v8);
      }
    }
  }
}

void sub_10067B3BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_100458658((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10067B400()
{
  if (!qword_10241D228) {
    operator new();
  }
  return qword_10241D228;
}

void sub_10067B464()
{
}

void sub_10067B488(uint64_t a1, int *a2, uint64_t a3)
{
  int v10 = 1;
  v9[0] = 1;
  v9[1] = sub_10016A9AC(&v10);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = sub_10016AB88();
  int v10 = 4;
  int v8 = v6;
  sub_1005BDC60(v7, (unsigned int *)&v10, (int32x4_t *)(a1 + 5124), v9, &v8, a2);
  sub_1001C0198(a1, (uint64_t)a2, a3, 0xFFFFFFFFLL);
}

uint64_t sub_10067B51C(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  if (*(_DWORD *)(a1 + 232) != 1) {
    return 0;
  }
  if (*(double *)(a2 + 904) <= 0.0) {
    return 0;
  }
  LODWORD(v4) = *sub_101413048();
  LODWORD(v5) = sub_101413048()[1];
  double v9 = *(double *)(a3 + 172);
  uint64_t v10 = sub_10016BA10();
  *(_DWORD *)buf = 1;
  double v11 = sub_10016BA54(v10, buf) - *(double *)(a2 + 904);
  if (v11 <= 0.0) {
    return 0;
  }
  double v12 = (double)v4;
  double v13 = (double)v5;
  double v14 = vabdd_f64(a4, v9);
  double v15 = *(double *)(a3 + 116);
  double v16 = *(double *)(a2 + 116);
  BOOL v17 = v11 < v12 && v14 < v13;
  if (!v17 || v15 >= v16) {
    return 0;
  }
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C17A0);
  }
  id v20 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v21 = sub_10016BA10();
    double v22 = sub_10018202C(v21);
    *(_DWORD *)buf = 134350592;
    double v26 = v11;
    __int16 v27 = 2050;
    double v28 = v12;
    __int16 v29 = 2050;
    double v30 = v14;
    __int16 v31 = 2050;
    double v32 = v13;
    __int16 v33 = 2050;
    double v34 = v16;
    __int16 v35 = 2050;
    double v36 = v15;
    __int16 v37 = 2050;
    double v38 = v22;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Ignored: GPS warmup,runtime,%{public}.1fs,thresh,%{public}.1fs,age,%{public}.1fs,thresh,%{public}.1fs,gacc,%{public}.1fm,wacc,%{public}fm,propagation_us,%{public}.3f", buf, 0x48u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    uint64_t v23 = sub_10016BA10();
    sub_10018202C(v23);
    double v24 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLLocationController::shouldUseWifiWhileGpsConverging(const CFAbsoluteTime, const ProvidersMap::iterator, const ProvidersMap::iterator) const", "%s\n", v24);
    if (v24 != (char *)buf) {
      free(v24);
    }
  }
  return 1;
}

uint64_t sub_10067B7E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  uint64_t v9 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 288) + 128))(*(void *)(a1 + 288), a3);
  if (v9)
  {
    (*(void (**)(void, uint64_t))(**(void **)(a1 + 288) + 144))(*(void *)(a1 + 288), a2);
    *a5 = 1;
    if (*(double *)(a2 + 20) > 0.0)
    {
      if (qword_102419650 != -1) {
        dispatch_once(&qword_102419650, &stru_1022C1840);
      }
      uint64_t v10 = qword_102419658;
      if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v11 = *(void *)(a2 + 4);
        uint64_t v30 = *(void *)(a2 + 12);
        uint64_t v33 = *(void *)(a2 + 20);
        unsigned int v12 = *(_DWORD *)(a2 + 96);
        double v32 = sub_10003E9A4(v12);
        uint64_t v36 = *(void *)(a2 + 44);
        uint64_t v37 = *(void *)(a2 + 60);
        int v38 = *(_DWORD *)(a2 + 84);
        uint64_t v39 = *(void *)(a2 + 88);
        uint64_t v40 = *(void *)(a2 + 76);
        uint64_t v13 = sub_10016BA10();
        *(_DWORD *)buf = 0;
        double v14 = sub_10016BA54(v13, buf) - *(double *)(a2 + 76);
        uint64_t v15 = *(void *)(a2 + 28);
        uint64_t v16 = *(void *)(a2 + 36);
        uint64_t v17 = *(void *)(a2 + 52);
        uint64_t v28 = *(void *)(a2 + 68);
        uint64_t v29 = *(void *)(a3 + 184);
        int v31 = *(_DWORD *)(a2 + 128);
        int v34 = *(_DWORD *)(a2 + 132);
        int v35 = *(_DWORD *)(a2 + 136);
        uint64_t v18 = sub_10016BA10();
        double v19 = sub_10018202C(v18);
        *(_DWORD *)buf = 136320515;
        *(void *)v42 = "CL-filtered";
        *(_WORD *)&v42[8] = 1024;
        *(_DWORD *)&v42[10] = 0;
        __int16 v43 = 2048;
        uint64_t v44 = v11;
        __int16 v45 = 2048;
        uint64_t v46 = v30;
        __int16 v47 = 2048;
        uint64_t v48 = v33;
        __int16 v49 = 1026;
        unsigned int v50 = v12;
        __int16 v51 = 2082;
        v52 = v32;
        __int16 v53 = 2050;
        uint64_t v54 = v36;
        __int16 v55 = 2050;
        uint64_t v56 = v37;
        __int16 v57 = 1026;
        int v58 = v38;
        __int16 v59 = 2050;
        uint64_t v60 = v39;
        __int16 v61 = 2050;
        uint64_t v62 = v40;
        __int16 v63 = 2050;
        double v64 = v14;
        __int16 v65 = 2049;
        uint64_t v66 = v15;
        __int16 v67 = 2050;
        uint64_t v68 = v16;
        __int16 v69 = 2050;
        uint64_t v70 = v17;
        __int16 v71 = 2050;
        uint64_t v72 = v28;
        __int16 v73 = 2050;
        uint64_t v74 = v29;
        __int16 v75 = 1026;
        int v76 = v31;
        __int16 v77 = 1026;
        int v78 = v34;
        __int16 v79 = 1026;
        int v80 = v35;
        __int16 v81 = 2050;
        double v82 = v19;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Type,%{public}d,%{public}s,Speed,%{public}.2f,Course,%{public}.2f,Confidence,%{public}d,Lifespan,%{public}.3f,LocationTimestamp,%{public}.3f,Age,%{public}.3f,Altitude,%{private}.3f,AltitudeAccuracy,%{public}.3f,SpeedAccuracy,%{public}.3f,CourseAccuracy,%{public}.1f,timestampGps,%{public}.3lf,integrity,%{public}d,referenceFrame,%{public}d,rawReferenceFrame,%{public}d,propagation_us,%{public}.3f", buf, 0xC6u);
      }
      if (sub_10013D1A0(117, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419650 != -1) {
          dispatch_once(&qword_102419650, &stru_1022C1840);
        }
        sub_10003E9A4(*(_DWORD *)(a2 + 96));
        sub_1005BFA38();
        uint64_t v20 = sub_10016BA10();
        sub_10018202C(v20);
        uint64_t v21 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("LOCATION", 1, 0, 2, "BOOL CLLocationController::updateLegacyLCLocationFilter(CLDaemonLocation &, const CLLocationProvider_Type::NotificationData &, const LocationProvider &, BOOL &)", "%s\n", v21);
        if (v21 != (char *)buf) {
          free(v21);
        }
      }
    }
  }
  else if (*(unsigned char *)(a1 + 666))
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    double v22 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_INFO))
    {
      int v23 = *(_DWORD *)(a3 + 96);
      uint64_t v24 = *(void *)(a3 + 100);
      uint64_t v25 = *(void *)(a3 + 108);
      *(_DWORD *)buf = 67240705;
      *(_DWORD *)v42 = v23;
      *(_WORD *)&v42[4] = 2049;
      *(void *)&v42[6] = v24;
      __int16 v43 = 2049;
      uint64_t v44 = v25;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "location rejected by KF,%{public}d,lat,%{private}.7lf,lon,%{private}.7lf", buf, 0x1Cu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      __int16 v27 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLLocationController::updateLegacyLCLocationFilter(CLDaemonLocation &, const CLLocationProvider_Type::NotificationData &, const LocationProvider &, BOOL &)", "%s\n", v27);
      if (v27 != (char *)buf) {
        free(v27);
      }
    }
    *a5 = 0;
  }
  return v9;
}

NSDictionary *sub_10067BEE4(uint64_t a1)
{
  v4[0] = @"client";
  v3[0] = @"provider";
  v3[1] = @"flow";
  v1 = +[NSString stringWithUTF8String:*(void *)(a1 + 32)];
  v3[2] = @"island";
  v4[1] = v1;
  v4[2] = @"null";
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:3];
}

NSDictionary *sub_10067BF90(uint64_t a1)
{
  v4[0] = @"client";
  v3[0] = @"provider";
  v3[1] = @"flow";
  v1 = +[NSString stringWithUTF8String:*(void *)(a1 + 32)];
  v3[2] = @"island";
  v4[1] = v1;
  v4[2] = @"sentinel";
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:3];
}

id sub_10067C03C(uint64_t *a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  v3[2] = sub_100682BA4;
  void v3[3] = &unk_1022C1D00;
  memset(v4, 0, sizeof(v4));
  sub_100682C20(v4, *a1, a1[1], 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3));
  id v1 = [v3 copy];
  unint64_t v5 = (void **)v4;
  sub_100682B1C(&v5);
  return v1;
}

void sub_10067C0F0(_Unwind_Exception *a1)
{
  *(void *)(v2 - 24) = v1;
  sub_100682B1C((void ***)(v2 - 24));
  _Unwind_Resume(a1);
}

uint64_t sub_10067C108(uint64_t a1)
{
  uint64_t v2 = sub_10016BA10();
  *(_DWORD *)buf = 1;
  double v3 = sub_10016BA54(v2, buf);
  unint64_t v4 = (uint64_t **)(a1 + 240);
  unint64_t v5 = (int *)(a1 + 320);
  *(void *)buf = v5;
  double v6 = *((double *)sub_100151D38(v4, v5, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 75);
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C17A0);
  }
  double v7 = v3 - v6;
  int v8 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v9 = sub_10016BA10();
    double v10 = sub_10018202C(v9);
    *(_DWORD *)buf = 134218240;
    *(double *)&uint8_t buf[4] = v7;
    __int16 v16 = 2050;
    double v17 = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "LocationController,isWiFiLocationProviderValidAndFresh,age,%.3f,propagation_us,%{public}.3f", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    uint64_t v13 = sub_10016BA10();
    sub_10018202C(v13);
    double v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLLocationController::isWiFiLocationProviderValidAndFresh()", "%s\n", v14);
    if (v14 != buf) {
      free(v14);
    }
  }
  *(void *)buf = v5;
  uint64_t v11 = sub_100151D38(v4, v5, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
  uint64_t result = sub_100BCE2EC((uint64_t)(v11 + 12));
  if (result)
  {
    if (v7 >= *((double *)sub_1000DBFA0() + 55))
    {
      return 0;
    }
    else
    {
      *(void *)buf = v5;
      return *(double *)((char *)sub_100151D38(v4, v5, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 132) < 20.0;
    }
  }
  return result;
}

uint64_t **sub_10067C3A4(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  *(_OWORD *)(a3 + 704) = *(_OWORD *)(a3 + 28);
  *(double *)(a3 + 720) = *(float *)(a3 + 476);
  *(_DWORD *)(a3 + 728) = *(_DWORD *)(a3 + 472);
  unint64_t v5 = (uint64_t **)(a1 + 240);
  double v7 = a2;
  *(void *)(a3 + 28) = *(uint64_t **)((char *)sub_100151D38((uint64_t **)(a1 + 240), a2, (uint64_t)&unk_101D0B290, &v7)
                                     + 124);
  double v7 = a2;
  *(void *)(a3 + 36) = *(uint64_t **)((char *)sub_100151D38(v5, a2, (uint64_t)&unk_101D0B290, &v7) + 132);
  double v7 = a2;
  *(_DWORD *)(a3 + 476) = *((_DWORD *)sub_100151D38(v5, a2, (uint64_t)&unk_101D0B290, &v7) + 143);
  double v7 = a2;
  uint64_t result = sub_100151D38(v5, a2, (uint64_t)&unk_101D0B290, &v7);
  *(_DWORD *)(a3 + 472) = *((_DWORD *)result + 142);
  return result;
}

uint64_t sub_10067C48C(uint64_t a1, uint64_t a2)
{
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C17A0);
  }
  unint64_t v4 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = sub_10016BA10();
    *(_DWORD *)buf = 0;
    double v6 = sub_10016BA54(v5, buf);
    double v7 = sub_10003E9A4(*(_DWORD *)(a2 + 96));
    uint64_t v8 = *(void *)(a2 + 504);
    uint64_t v9 = *(void *)(a1 + 4032);
    uint64_t v10 = *(void *)(a1 + 2504);
    uint64_t v11 = sub_10016BA10();
    double v12 = sub_10018202C(v11);
    *(_DWORD *)buf = 134350338;
    double v18 = v6;
    __int16 v19 = 2082;
    uint64_t v20 = v7;
    __int16 v21 = 2050;
    uint64_t v22 = v8;
    __int16 v23 = 2050;
    uint64_t v24 = v9;
    __int16 v25 = 2050;
    uint64_t v26 = v10;
    __int16 v27 = 2050;
    double v28 = v12;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "%{public}.1lf,DeadReckoning,%{public}s,%{public}.2lf,Propagating solution,lastGPSTime,%{public}.2lf,lastAccessoryTime,%{public}.2lf,propagation_us,%{public}.3f", buf, 0x3Eu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    sub_1005BFA38();
    sub_10003E9A4(*(_DWORD *)(a2 + 96));
    uint64_t v15 = sub_10016BA10();
    sub_10018202C(v15);
    __int16 v16 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::publishPropagatedCoordinates(CLLocationProvider_Type::NotificationData &)", "%s\n", v16);
    if (v16 != (char *)buf) {
      free(v16);
    }
  }
  double v13 = sub_100EFFB6C(a1 + 2000, *(_DWORD *)(a2 + 96), a2);
  uint64_t result = (*(uint64_t (**)(void, uint64_t, double))(**(void **)(a1 + 288) + 200))(*(void *)(a1 + 288), a2, v13);
  if (result)
  {
    *(unsigned char *)(a2 + 516) = 1;
    *(_DWORD *)(a2 + 696) = 1;
    *(_DWORD *)buf = 27;
    return (*(uint64_t (**)(uint64_t, uint8_t *, uint64_t, void, uint64_t, void))(*(void *)a1 + 152))(a1, buf, a2, 0, 0xFFFFFFFFLL, 0);
  }
  return result;
}

void sub_10067C7A4(unsigned char *a1, uint64_t a2)
{
  if (a1[667] && (a1[668] || a1[669]) && sub_100EFF914((uint64_t)(a1 + 2000), *(double *)(a2 + 504)))
  {
    sub_1000EF97C((uint64_t)v4, a2);
    int v5 = 1;
    sub_10067C48C((uint64_t)a1, (uint64_t)v4);

    if (v10) {
      sub_1000DB0A0(v10);
    }
    if (v9 < 0) {
      operator delete(__p);
    }
    if (v7) {
      sub_1000DB0A0(v7);
    }
    if (v6) {
      sub_1000DB0A0(v6);
    }
  }
}

void sub_10067C860(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100458658((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10067C874(uint64_t a1, uint64_t a2)
{
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C17A0);
  }
  unint64_t v4 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_INFO))
  {
    int v5 = *(int **)(a2 + 800);
    if (v5) {
      int v5 = (int *)sub_1010FB9FC(v5);
    }
    *(_DWORD *)buf = 134349056;
    uint64_t v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "GPSODOM,Batched locations obtained,size,%{public}zu", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    double v7 = *(int **)(a2 + 800);
    if (v7) {
      sub_1010FB9FC(v7);
    }
    uint64_t v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onRhythmicGnssBatchedLocationsUpdate(const CLLocationProvider_Type::NotificationData &)", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  *(_DWORD *)buf = 23;
  return (*(uint64_t (**)(uint64_t, uint8_t *, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, buf, a2, 1, 0xFFFFFFFFLL, 0);
}

void sub_10067CA84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 304);
  if (v2)
  {
    if (*(_DWORD *)(a2 + 1456) == 1) {
      char v3 = *(unsigned char *)(a2 + 1472) & (*(_DWORD *)(a2 + 1448) == 1);
    }
    else {
      char v3 = 0;
    }
    uint64_t v4 = sub_10016BA10();
    int v6 = 1;
    double v5 = sub_10016BA54(v4, &v6);
    sub_10100BDC0(v2, v3, v5);
  }
}

uint64_t sub_10067CAF0(uint64_t a1, int *a2)
{
  if (*(void *)(a1 + 1608) && (uint64_t v4 = sub_1010FB9FC(a2)) != 0)
  {
    uint64_t v5 = v4;
    unint64_t v6 = 0;
    int v7 = 0;
    do
      v7 |= [*(id *)(a1 + 1608) feedLocation:v9 sub_1010FB258((uint64_t)a2, v6++, (uint64_t)v9).n128_f64[0]];
    while (v5 != v6);
  }
  else
  {
    LOBYTE(v7) = 0;
  }
  return v7 & 1;
}

void sub_10067CB84(uint64_t a1, int a2, int *a3, uint64_t a4)
{
  int v10 = a2;
  uint64_t v7 = sub_10016BA10();
  sub_10016BC44((uint64_t)v11);
  sub_10016BE74(v7, v11[0].i64);
  int v12 = 13;
  v11[0].i32[0] = 13;
  v11[0].i32[1] = sub_10016A9AC(&v12);
  uint64_t v8 = sub_10016AB88();
  int v12 = 4;
  sub_100166814(v8, (unsigned int *)&v12, v11, (int *)(a1 + 5124), &v10, a3, a4);
  sub_10015040C(a1, *(_DWORD *)(a1 + 320), v9, (unsigned int *)a3, a4);
  sub_100E4C2D0((unsigned __int8 *)(a1 + 760), a4);
  sub_100394B78(a1 + 768, a3, a4);
}

void sub_10067CC50(uint64_t a1, __int32 a2, int *a3, uint64_t a4)
{
  v23.i32[2] = a2;
  uint64_t v7 = sub_10016BA10();
  sub_10016BC44((uint64_t)&buf);
  sub_10016BE74(v7, &buf);
  LODWORD(buf) = 15;
  v23.i32[0] = 15;
  v23.i32[1] = sub_10016A9AC((int *)&buf);
  uint64_t v8 = sub_10016AB88();
  LODWORD(buf) = 4;
  sub_100166814(v8, (unsigned int *)&buf, &v23, (int *)(a1 + 5124), &v23.i32[2], a3, a4);
  int v9 = *a3;
  if (*a3 <= 25)
  {
    if (v9 == 11)
    {
      sub_10067CF98(a1, a4 + 816);
      return;
    }
    if (v9 == 18)
    {
      sub_10067D194(a1, (unsigned int *)(a4 + 840));
      return;
    }
  }
  else
  {
    switch(v9)
    {
      case 26:
        sub_10067C7A4((unsigned char *)a1, a4);
        return;
      case 41:
        sub_10067CA84(a1, a4);
        return;
      case 43:
        sub_10067C874(a1, a4);
        return;
    }
  }
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C17A0);
  }
  int v10 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    int v11 = *(_DWORD *)(a4 + 96);
    uint64_t v12 = *(void *)(a4 + 4);
    uint64_t v13 = *(void *)(a4 + 12);
    uint64_t v14 = *(void *)(a4 + 20);
    int v15 = *a3;
    LODWORD(buf) = 67241217;
    HIDWORD(buf) = v11;
    __int16 v34 = 2049;
    uint64_t v35 = v12;
    __int16 v36 = 2049;
    uint64_t v37 = v13;
    __int16 v38 = 2050;
    uint64_t v39 = v14;
    __int16 v40 = 1026;
    int v41 = v15;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "onGpsNotification,locationType,%{public}d,lat,%{private}.7lf,long,%{private}.7lf,acc,%{public}.01lf,notification,%{public}d", (uint8_t *)&buf, 0x2Cu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    int v17 = *(_DWORD *)(a4 + 96);
    uint64_t v18 = *(void *)(a4 + 4);
    uint64_t v19 = *(void *)(a4 + 12);
    uint64_t v20 = *(void *)(a4 + 20);
    int v21 = *a3;
    v23.i32[3] = 67241217;
    int v24 = v17;
    __int16 v25 = 2049;
    uint64_t v26 = v18;
    __int16 v27 = 2049;
    uint64_t v28 = v19;
    __int16 v29 = 2050;
    uint64_t v30 = v20;
    __int16 v31 = 1026;
    int v32 = v21;
    uint64_t v22 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onGpsNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v22);
    if (v22 != (char *)&buf) {
      free(v22);
    }
  }
  sub_10015040C(a1, *(_DWORD *)(a1 + 328), v16, (unsigned int *)a3, a4);
  sub_100395124(a1 + 768, a3, a4);
}

void sub_10067CF98(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a2 == 1)
  {
    int v4 = *(unsigned __int8 *)(a2 + 4);
    int v5 = *(unsigned __int8 *)(a1 + 704);
    *(unsigned char *)(a1 + 704) = v4;
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    unint64_t v6 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *(unsigned __int8 *)(a2 + 4);
      *(_DWORD *)uint64_t buf = 67240192;
      int v10 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Got notification gps active state,%{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      uint64_t v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onGpsActiveNotification(const CLLocationProvider_Type::TechnologyStatus &)", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
    if (v4 != v5) {
      sub_10001F5E4(a1);
    }
    sub_100395480(a1 + 768, *(unsigned __int8 *)(a1 + 704), v4 != v5);
  }
}

void sub_10067D194(uint64_t a1, unsigned int *a2)
{
  (*(void (**)(void, void))(**(void **)(a1 + 288) + 280))(*(void *)(a1 + 288), *a2);
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C17A0);
  }
  char v3 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    *(_DWORD *)uint64_t buf = 67240192;
    int v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Got notification signal quality,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    int v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onGpsSignalQualityNotification(const CLLocationProvider_Type::SignalQuality &)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
}

void sub_10067D37C(int *a1, __int32 a2, int *a3, uint64_t a4)
{
  v41.i32[2] = a2;
  uint64_t v7 = sub_10016BA10();
  sub_10016BC44((uint64_t)&buf);
  sub_10016BE74(v7, &buf);
  LODWORD(buf) = 16;
  v41.i32[0] = 16;
  v41.i32[1] = sub_10016A9AC((int *)&buf);
  uint64_t v8 = sub_10016AB88();
  LODWORD(buf) = 4;
  sub_100166814(v8, (unsigned int *)&buf, &v41, a1 + 1281, &v41.i32[2], a3, a4);
  int v10 = *a3;
  if (*a3 < 5)
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    int v11 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      int v12 = *(_DWORD *)(a4 + 96);
      uint64_t v13 = *(void *)(a4 + 4);
      uint64_t v14 = *(void *)(a4 + 12);
      uint64_t v15 = *(void *)(a4 + 20);
      LODWORD(buf) = 67240961;
      HIDWORD(buf) = v12;
      __int16 v60 = 2049;
      uint64_t v61 = v13;
      __int16 v62 = 2049;
      uint64_t v63 = v14;
      __int16 v64 = 2050;
      uint64_t v65 = v15;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "onPipelineNotification,locationType,%{public}d,lat,%{private}.7lf,long,%{private}.7lf,acc,%{public}.01lf", (uint8_t *)&buf, 0x26u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      int v29 = *(_DWORD *)(a4 + 96);
      uint64_t v30 = *(void *)(a4 + 4);
      uint64_t v31 = *(void *)(a4 + 12);
      uint64_t v32 = *(void *)(a4 + 20);
      int v45 = 67240961;
      int v46 = v29;
      __int16 v47 = 2049;
      uint64_t v48 = v30;
      __int16 v49 = 2049;
      uint64_t v50 = v31;
      __int16 v51 = 2050;
      uint64_t v52 = v32;
      uint64_t v33 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onPipelineNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v33);
      if (v33 != (char *)&buf) {
        free(v33);
      }
    }
    sub_1000DB3D4((uint64_t)&v45);
    int v17 = *(_DWORD *)(a4 + 96);
    if (v17 == 11)
    {
      if (!a1[169])
      {
        int v19 = a1[83];
        LODWORD(buf) = 9;
        sub_10015040C((uint64_t)a1, v19, v16, (unsigned int *)&buf, (uint64_t)&v45);
      }
    }
    else
    {
      if (v17 != 10)
      {
LABEL_17:
        if (v17 == 10)
        {
          a1[169] = 0;
          sub_10015040C((uint64_t)a1, a1[83], v16, (unsigned int *)a3, a4);
        }
        else if (v17 == 11)
        {
          a1[169] = 1;
        }
        else
        {
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022C17A0);
          }
          uint64_t v20 = qword_102419388;
          if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
          {
            int v21 = *(_DWORD *)(a4 + 96);
            int v22 = *a3;
            LODWORD(buf) = 67240448;
            HIDWORD(buf) = v21;
            __int16 v60 = 1026;
            LODWORD(v61) = v22;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "LocationController,#Warning,Unhandled location type in onPipelineNotification,%{public}d,notification,%{public}d", (uint8_t *)&buf, 0xEu);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(&buf, 0x65CuLL);
            if (qword_102419380 != -1) {
              dispatch_once(&qword_102419380, &stru_1022C17A0);
            }
            int v34 = *(_DWORD *)(a4 + 96);
            int v35 = *a3;
            v41.i32[3] = 67240448;
            int v42 = v34;
            __int16 v43 = 1026;
            int v44 = v35;
            __int16 v36 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onPipelineNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v36);
            if (v36 != (char *)&buf) {
              free(v36);
            }
          }
        }

        if (v57) {
          sub_1000DB0A0(v57);
        }
        if (v56 < 0) {
          operator delete(v55);
        }
        if (v54) {
          sub_1000DB0A0(v54);
        }
        if (v53) {
          sub_1000DB0A0(v53);
        }
        return;
      }
      if (a1[169] == 1)
      {
        int v18 = a1[86];
        LODWORD(buf) = 9;
        sub_10015040C((uint64_t)a1, v18, v16, (unsigned int *)&buf, (uint64_t)&v45);
      }
    }
    int v17 = *(_DWORD *)(a4 + 96);
    goto LABEL_17;
  }
  if (v10 == 9)
  {
    int v23 = a1[169];
    if (v23)
    {
      if (v23 == 1)
      {
        sub_10015040C((uint64_t)a1, a1[86], v9, (unsigned int *)a3, a4);
      }
      else
      {
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022C17A0);
        }
        uint64_t v28 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
        {
          LOWORD(buf) = 0;
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEBUG, "LocationController,#Warning,Unavailable flagged when already in unavailable state", (uint8_t *)&buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022C17A0);
          }
          LOWORD(v45) = 0;
          __int16 v40 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onPipelineNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v40);
          if (v40 != (char *)&buf) {
            free(v40);
          }
        }
      }
    }
    else
    {
      sub_10015040C((uint64_t)a1, a1[83], v9, (unsigned int *)a3, a4);
    }
    a1[169] = -1;
  }
  else if (v10 == 11)
  {
    sub_10067DBC4((uint64_t)a1, a4 + 816);
  }
  else
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    int v24 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      int v25 = *a3;
      int v26 = *(_DWORD *)(a4 + 96);
      LODWORD(buf) = 67240448;
      HIDWORD(buf) = v25;
      __int16 v60 = 1026;
      LODWORD(v61) = v26;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "LocationController,#Warning,Suspect notification in onPipelineNotification,%{public}d,location type,%{public}d", (uint8_t *)&buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      int v37 = *a3;
      int v38 = *(_DWORD *)(a4 + 96);
      int v45 = 67240448;
      int v46 = v37;
      __int16 v47 = 1026;
      LODWORD(v48) = v38;
      uint64_t v39 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onPipelineNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v39);
      if (v39 != (char *)&buf) {
        free(v39);
      }
    }
    sub_10015040C((uint64_t)a1, a1[83], v27, (unsigned int *)a3, a4);
  }
}

void sub_10067DB8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_100458658((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10067DBC4(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a2 == 10)
  {
    int v4 = *(unsigned __int8 *)(a2 + 4);
    int v5 = *(unsigned __int8 *)(a1 + 705);
    *(unsigned char *)(a1 + 705) = v4;
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    unint64_t v6 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *(unsigned __int8 *)(a2 + 4);
      *(_DWORD *)uint64_t buf = 67240192;
      int v10 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Got notification indoor active state,%{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      uint64_t v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onIndoorActiveNotification(const CLLocationProvider_Type::TechnologyStatus &)", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
    if (v4 != v5) {
      sub_10001F5E4(a1);
    }
  }
}

void sub_10067DDAC(int *a1, __int32 a2, int *a3, uint64_t a4)
{
  v41.i32[2] = a2;
  uint64_t v7 = sub_10016BA10();
  sub_10016BC44((uint64_t)&buf);
  sub_10016BE74(v7, &buf);
  LODWORD(buf) = 17;
  v41.i32[0] = 17;
  v41.i32[1] = sub_10016A9AC((int *)&buf);
  uint64_t v8 = sub_10016AB88();
  LODWORD(buf) = 4;
  sub_100166814(v8, (unsigned int *)&buf, &v41, a1 + 1281, &v41.i32[2], a3, a4);
  int v10 = *a3;
  if (*a3 < 5)
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    int v11 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      int v12 = *(_DWORD *)(a4 + 96);
      uint64_t v13 = *(void *)(a4 + 4);
      uint64_t v14 = *(void *)(a4 + 12);
      uint64_t v15 = *(void *)(a4 + 20);
      LODWORD(buf) = 67240961;
      HIDWORD(buf) = v12;
      __int16 v60 = 2049;
      uint64_t v61 = v13;
      __int16 v62 = 2049;
      uint64_t v63 = v14;
      __int16 v64 = 2050;
      uint64_t v65 = v15;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "onWifi2Notification,locationType,%{public}d,lat,%{private}.7lf,long,%{private}.7lf,acc,%{public}.01lf", (uint8_t *)&buf, 0x26u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      int v29 = *(_DWORD *)(a4 + 96);
      uint64_t v30 = *(void *)(a4 + 4);
      uint64_t v31 = *(void *)(a4 + 12);
      uint64_t v32 = *(void *)(a4 + 20);
      int v45 = 67240961;
      int v46 = v29;
      __int16 v47 = 2049;
      uint64_t v48 = v30;
      __int16 v49 = 2049;
      uint64_t v50 = v31;
      __int16 v51 = 2050;
      uint64_t v52 = v32;
      uint64_t v33 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onWifi2Notification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v33);
      if (v33 != (char *)&buf) {
        free(v33);
      }
    }
    sub_1000DB3D4((uint64_t)&v45);
    int v17 = *(_DWORD *)(a4 + 96);
    if (v17 == 11)
    {
      if (!a1[169])
      {
        int v19 = a1[83];
        LODWORD(buf) = 9;
        sub_10015040C((uint64_t)a1, v19, v16, (unsigned int *)&buf, (uint64_t)&v45);
      }
    }
    else
    {
      if (v17 != 10) {
        goto LABEL_17;
      }
      if (a1[169] == 1)
      {
        int v18 = a1[86];
        LODWORD(buf) = 9;
        sub_10015040C((uint64_t)a1, v18, v16, (unsigned int *)&buf, (uint64_t)&v45);
      }
    }
    int v17 = *(_DWORD *)(a4 + 96);
LABEL_17:
    if (v17 != 11)
    {
      if (v17 == 10)
      {
        a1[169] = 0;
        goto LABEL_27;
      }
      if (v17 != 1)
      {
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022C17A0);
        }
        uint64_t v20 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
        {
          int v21 = *(_DWORD *)(a4 + 96);
          int v22 = *a3;
          LODWORD(buf) = 67240448;
          HIDWORD(buf) = v21;
          __int16 v60 = 1026;
          LODWORD(v61) = v22;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "LocationController,#Warning,Unhandled location type in onWifi2Notification,%{public}d,notification,%{public}d", (uint8_t *)&buf, 0xEu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022C17A0);
          }
          int v34 = *(_DWORD *)(a4 + 96);
          int v35 = *a3;
          v41.i32[3] = 67240448;
          int v42 = v34;
          __int16 v43 = 1026;
          int v44 = v35;
          __int16 v36 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onWifi2Notification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v36);
          if (v36 != (char *)&buf) {
            free(v36);
          }
        }
        goto LABEL_27;
      }
    }
    a1[169] = 1;
    sub_10015040C((uint64_t)a1, a1[86], v16, (unsigned int *)a3, a4);
LABEL_27:

    if (v57) {
      sub_1000DB0A0(v57);
    }
    if (v56 < 0) {
      operator delete(v55);
    }
    if (v54) {
      sub_1000DB0A0(v54);
    }
    if (v53) {
      sub_1000DB0A0(v53);
    }
    return;
  }
  if (v10 == 9)
  {
    int v23 = a1[169];
    if (v23)
    {
      if (v23 == 1)
      {
        sub_10015040C((uint64_t)a1, a1[86], v9, (unsigned int *)a3, a4);
      }
      else
      {
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022C17A0);
        }
        uint64_t v28 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
        {
          LOWORD(buf) = 0;
          _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEBUG, "LocationController,#Warning,Unavailable flagged when already in unavailable state", (uint8_t *)&buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(&buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022C17A0);
          }
          LOWORD(v45) = 0;
          __int16 v40 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onWifi2Notification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v40);
          if (v40 != (char *)&buf) {
            free(v40);
          }
        }
      }
    }
    else
    {
      sub_10015040C((uint64_t)a1, a1[83], v9, (unsigned int *)a3, a4);
    }
    a1[169] = -1;
  }
  else if (v10 == 11)
  {
    sub_10067E5FC((uint64_t)a1, a4 + 816);
  }
  else
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    int v24 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      int v25 = *a3;
      int v26 = *(_DWORD *)(a4 + 96);
      LODWORD(buf) = 67240448;
      HIDWORD(buf) = v25;
      __int16 v60 = 1026;
      LODWORD(v61) = v26;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "LocationController,#Warning,Suspect notification in onWifi2Notification,%{public}d,location type,%{public}d", (uint8_t *)&buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      int v37 = *a3;
      int v38 = *(_DWORD *)(a4 + 96);
      int v45 = 67240448;
      int v46 = v37;
      __int16 v47 = 1026;
      LODWORD(v48) = v38;
      uint64_t v39 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onWifi2Notification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v39);
      if (v39 != (char *)&buf) {
        free(v39);
      }
    }
    sub_10015040C((uint64_t)a1, a1[83], v27, (unsigned int *)a3, a4);
  }
}

void sub_10067E5C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_100458658((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10067E5FC(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a2 == 11)
  {
    int v4 = *(unsigned __int8 *)(a2 + 4);
    int v5 = *(unsigned __int8 *)(a1 + 706);
    *(unsigned char *)(a1 + 706) = v4;
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    unint64_t v6 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *(unsigned __int8 *)(a2 + 4);
      *(_DWORD *)uint64_t buf = 67240192;
      int v10 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Got notification wifi2 active state,%{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      uint64_t v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onWifi2ActiveNotification(const CLLocationProvider_Type::TechnologyStatus &)", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
    if (v4 != v5) {
      sub_10001F5E4(a1);
    }
  }
}

void sub_10067E7E4(uint64_t a1, __int32 a2, int *a3, uint64_t a4)
{
  v47.i32[2] = a2;
  uint64_t v7 = sub_10016BA10();
  sub_10016BC44((uint64_t)buf);
  sub_10016BE74(v7, (uint64_t *)buf);
  *(_DWORD *)uint64_t buf = 18;
  v47.i32[0] = 18;
  v47.i32[1] = sub_10016A9AC((int *)buf);
  uint64_t v8 = sub_10016AB88();
  *(_DWORD *)uint64_t buf = 4;
  sub_100166814(v8, (unsigned int *)buf, &v47, (int *)(a1 + 5124), &v47.i32[2], a3, a4);
  if (*a3 == 21)
  {
    *(_DWORD *)uint64_t buf = 21;
    (*(void (**)(uint64_t, unsigned char *, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, buf, a4, 1, 0xFFFFFFFFLL, 0);
  }
  else if (*a3 == 20)
  {
    LOBYTE(v38) = 0;
    v39[0] = 0xBFF0000000000000;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t *, void *))(**(void **)(a1 + 288) + 296))(*(void *)(a1 + 288), a4 + 856, a4 + 848, &v38, v39);
    if ((_BYTE)v38)
    {
      sub_1000DB3D4((uint64_t)buf);
      uint64_t v73 = v39[0];
      uint64_t v74 = *(void *)(a4 + 856);
      v47.i32[3] = 20;
      (*(void (**)(uint64_t, __int8 *, unsigned char *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, &v47.i8[12], buf, 1, 0xFFFFFFFFLL, 0);

      if (v77) {
        sub_1000DB0A0(v77);
      }
      if (v76 < 0) {
        operator delete(__p);
      }
      if (v72) {
        sub_1000DB0A0(v72);
      }
      if (v71) {
        sub_1000DB0A0(v71);
      }
    }
    if (*(double *)(a4 + 848) >= 0.0 && sub_100EFF648((double *)(a1 + 2000), *(double *)(a4 + 864)))
    {
      sub_1000DB3D4((uint64_t)buf);
      uint64_t v66 = *(void *)(a4 + 856);
      double v65 = *(double *)(a4 + 848);
      int v67 = 3;
      uint64_t v70 = *(void *)(a4 + 864);
      uint64_t v69 = *(void *)(a4 + 872);
      uint64_t v68 = v66;
      sub_10067C48C(a1, (uint64_t)buf);

      if (v77) {
        sub_1000DB0A0(v77);
      }
      if (v76 < 0) {
        operator delete(__p);
      }
      if (v72) {
        sub_1000DB0A0(v72);
      }
      if (v71) {
        sub_1000DB0A0(v71);
      }
    }
    sub_100396F80(a1 + 768);
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + 288);
    if (v9) {
      (*(void (**)(uint64_t, int *, uint64_t))(*(void *)v9 + 512))(v9, a3, a4);
    }
    sub_1000EF97C((uint64_t)v39, a4);
    *(void *)uint64_t buf = a1 + 328;
    if (*(double *)((char *)sub_100151D38((uint64_t **)(a1 + 240), (int *)(a1 + 328), (uint64_t)&unk_101D0B290, (_DWORD **)buf)+ 116) > 0.0)
    {
      uint64_t v11 = sub_10016BA10();
      *(_DWORD *)uint64_t buf = 0;
      double v12 = sub_10016BA54(v11, buf);
      *(void *)uint64_t buf = a1 + 328;
      double v13 = v12
          - *(double *)((char *)sub_100151D38((uint64_t **)(a1 + 240), (int *)(a1 + 328), (uint64_t)&unk_101D0B290, (_DWORD **)buf)+ 172);
      if (v13 >= 0.0 && v13 < 4.0)
      {
        uint64_t v38 = 0;
        *(void *)uint64_t buf = a1 + 328;
        uint64_t v38 = *(uint64_t *)((char *)sub_100151D38((uint64_t **)(a1 + 240), (int *)(a1 + 328), (uint64_t)&unk_101D0B290, (_DWORD **)buf)+ 100);
        uint64_t v37 = 0;
        *(void *)uint64_t buf = a1 + 328;
        uint64_t v37 = *(uint64_t *)((char *)sub_100151D38((uint64_t **)(a1 + 240), (int *)(a1 + 328), (uint64_t)&unk_101D0B290, (_DWORD **)buf)+ 108);
        *(void *)uint64_t buf = a1 + 328;
        if (*(double *)((char *)sub_100151D38((uint64_t **)(a1 + 240), (int *)(a1 + 328), (uint64_t)&unk_101D0B290, (_DWORD **)buf)+ 148) > 0.0)
        {
          *(void *)uint64_t buf = a1 + 328;
          if (*(double *)((char *)sub_100151D38((uint64_t **)(a1 + 240), (int *)(a1 + 328), (uint64_t)&unk_101D0B290, (_DWORD **)buf)+ 164) > 0.0)
          {
            *(void *)uint64_t buf = a1 + 328;
            double v15 = *(double *)((char *)sub_100151D38((uint64_t **)(a1 + 240), (int *)(a1 + 328), (uint64_t)&unk_101D0B290, (_DWORD **)buf)+ 100);
            *(void *)uint64_t buf = a1 + 328;
            double v16 = *(double *)((char *)sub_100151D38((uint64_t **)(a1 + 240), (int *)(a1 + 328), (uint64_t)&unk_101D0B290, (_DWORD **)buf)+ 108);
            *(void *)uint64_t buf = a1 + 328;
            double v17 = *(double *)((char *)sub_100151D38((uint64_t **)(a1 + 240), (int *)(a1 + 328), (uint64_t)&unk_101D0B290, (_DWORD **)buf)+ 140);
            *(void *)uint64_t buf = a1 + 328;
            int v18 = sub_100151D38((uint64_t **)(a1 + 240), (int *)(a1 + 328), (uint64_t)&unk_101D0B290, (_DWORD **)buf);
            sub_1004BDB54((double *)&v38, (double *)&v37, v15, v16, v13, v17, *(double *)((char *)v18 + 156));
          }
        }
        v39[60] = v38;
        v39[61] = v37;
        *(void *)uint64_t buf = a1 + 328;
        uint64_t v40 = *(uint64_t *)((char *)sub_100151D38((uint64_t **)(a1 + 240), (int *)(a1 + 328), (uint64_t)&unk_101D0B290, (_DWORD **)buf)+ 116);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022C17A0);
        }
        int v19 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v20 = v37;
          uint64_t v21 = v38;
          uint64_t v22 = v40;
          uint64_t v23 = sub_10016BA10();
          double v24 = sub_10018202C(v23);
          *(_DWORD *)uint64_t buf = 134284545;
          *(void *)&uint8_t buf[4] = v21;
          __int16 v58 = 2049;
          uint64_t v59 = v20;
          __int16 v60 = 2050;
          uint64_t v61 = v22;
          __int16 v62 = 2048;
          double v63 = v13;
          __int16 v64 = 2050;
          double v65 = v24;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "Accessory,propagated on-device GPS,lat,%{private}.7lf,lon,%{private}.7lf,hunc,%{public}.1lf,dt,%.3f,propagation_us,%{public}.3f", buf, 0x34u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022C17A0);
          }
          uint64_t v31 = v37;
          uint64_t v32 = v38;
          uint64_t v33 = v40;
          uint64_t v34 = sub_10016BA10();
          double v35 = sub_10018202C(v34);
          v47.i32[3] = 134284545;
          uint64_t v48 = v32;
          __int16 v49 = 2049;
          uint64_t v50 = v31;
          __int16 v51 = 2050;
          uint64_t v52 = v33;
          __int16 v53 = 2048;
          double v54 = v13;
          __int16 v55 = 2050;
          double v56 = v35;
          __int16 v36 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onAccessoryNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v36);
          if (v36 != buf) {
            free(v36);
          }
        }
      }
    }
    int v25 = *a3;
    if (!*a3)
    {
      if ((*(_DWORD *)(a4 + 792) & 0xFFFFFFFE) == 2)
      {
        int v26 = (unsigned char *)sub_10067B400();
        if (v26)
        {
          if (!v26[1] || !*v26)
          {
            uint64_t v27 = *(void *)(a1 + 288);
            int v28 = v27 ? (*(uint64_t (**)(uint64_t))(*(void *)v27 + 520))(v27) : 0x7FFFFFFF;
            uint64_t v29 = *(void *)(a1 + 312);
            if (v29)
            {
              if (sub_1000E6F24(v29) > (double)v28) {
                sub_100EDF3F0(*(void *)(a1 + 312), (double)v28);
              }
            }
          }
        }
      }
      int v25 = *a3;
    }
    if (v25 == 9)
    {
      uint64_t v30 = *(void *)(a1 + 312);
      if (v30) {
        sub_100EDF5C8(v30);
      }
    }
    sub_10015040C(a1, *(_DWORD *)(a1 + 336), v10, (unsigned int *)a3, (uint64_t)v39);

    if (v45) {
      sub_1000DB0A0(v45);
    }
    if (v44 < 0) {
      operator delete(v43);
    }
    if (v42) {
      sub_1000DB0A0(v42);
    }
    if (v41) {
      sub_1000DB0A0(v41);
    }
  }
}

void sub_10067EFE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_100458658((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10067F048(uint64_t a1, unsigned int a2, int *a3, uint64_t a4)
{
  unsigned int v9 = a2;
  uint64_t v7 = sub_10016BA10();
  sub_10016BC44((uint64_t)v10);
  sub_10016BE74(v7, v10[0].i64);
  int v11 = 20;
  v10[0].i32[0] = 20;
  v10[0].i32[1] = sub_10016A9AC(&v11);
  uint64_t v8 = sub_10016AB88();
  int v11 = 4;
  sub_100166814(v8, (unsigned int *)&v11, v10, (int *)(a1 + 5124), (int *)&v9, a3, a4);
  sub_10099B5F4(a1 + 352, v9, a3, a4);
}

uint64_t sub_10067F0F8(uint64_t a1, uint64_t a2)
{
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C17A0);
  }
  int v4 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Setting simulation to %{public}d for all location providers", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    double v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationController::setSimulationEnabled(BOOL)", "%s\n", v15);
    if (v15 != (char *)buf) {
      free(v15);
    }
  }
  int v5 = *(void **)(a1 + 240);
  if (v5 != (void *)(a1 + 248))
  {
    __asm { FMOV            V0.2D, #-1.0 }
    long long v16 = _Q0;
    do
    {
      if (*((_DWORD *)v5 + 8))
      {
        *((_DWORD *)v5 + 24) = 0xFFFF;
        *(void *)((char *)v5 + 108) = 0;
        *(void *)((char *)v5 + 100) = 0;
        *(_OWORD *)((char *)v5 + 116) = xmmword_101D1C320;
        *(_OWORD *)((char *)v5 + 132) = v16;
        *(_OWORD *)((char *)v5 + 148) = v16;
        *(_OWORD *)((char *)v5 + 164) = v16;
        *((_DWORD *)v5 + 45) = 0;
        v5[24] = 0;
        v5[25] = 0;
        v5[23] = 0xBFF0000000000000;
        *((_DWORD *)v5 + 52) = 0;
        *(void *)((char *)v5 + 212) = 0xBFF0000000000000;
        *((_DWORD *)v5 + 55) = 0x7FFFFFFF;
        v5[29] = 0;
        v5[30] = 0;
        v5[28] = 0;
        *((unsigned char *)v5 + 248) = 0;
        *(void *)uint64_t buf = v5 + 5;
        int v11 = sub_1000FEE0C((uint64_t **)(a1 + 264), (int *)v5 + 10, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        sub_1006B9068((uint64_t)v11[5], a2);
      }
      double v12 = (void *)v5[1];
      if (v12)
      {
        do
        {
          double v13 = v12;
          double v12 = (void *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          double v13 = (void *)v5[2];
          _ZF = *v13 == (void)v5;
          int v5 = v13;
        }
        while (!_ZF);
      }
      int v5 = v13;
    }
    while (v13 != (void *)(a1 + 248));
  }
  (*(void (**)(void))(**(void **)(a1 + 288) + 120))(*(void *)(a1 + 288));
  *(unsigned char *)(a1 + 672) = a2;
  *(_DWORD *)uint64_t buf = 0;
  (*(void (**)(uint64_t, uint8_t *))(*(void *)a1 + 120))(a1, buf);
  *(_DWORD *)uint64_t buf = 9;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint8_t *))(*(void *)a1 + 120))(a1, buf);
  *(void *)(a1 + 232) = 0;
  return result;
}

uint64_t sub_10067F434(uint64_t a1)
{
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C17A0);
  }
  uint64_t v2 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "LocationController,#Warning,Clearing all location data from the controller", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    double v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::clearAllLocationData()", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 304))(a1);
  (*(void (**)(void))(**(void **)(a1 + 288) + 120))(*(void *)(a1 + 288));
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(a1 + 288) + 168))(*(void *)(a1 + 288));
  int v4 = *(void **)(a1 + 240);
  if (v4 != (void *)(a1 + 248))
  {
    __asm { FMOV            V1.2D, #-1.0 }
    do
    {
      if (*((_DWORD *)v4 + 8))
      {
        *((_DWORD *)v4 + 24) = 0xFFFF;
        *(void *)((char *)v4 + 108) = 0;
        *(void *)((char *)v4 + 100) = 0;
        *(_OWORD *)((char *)v4 + 116) = xmmword_101D1C320;
        *(_OWORD *)((char *)v4 + 132) = _Q1;
        *(_OWORD *)((char *)v4 + 148) = _Q1;
        *(_OWORD *)((char *)v4 + 164) = _Q1;
        *((_DWORD *)v4 + 45) = 0;
        v4[24] = 0;
        v4[25] = 0;
        v4[23] = 0xBFF0000000000000;
        *((_DWORD *)v4 + 52) = 0;
        *(void *)((char *)v4 + 212) = 0xBFF0000000000000;
        *((_DWORD *)v4 + 55) = 0x7FFFFFFF;
        v4[29] = 0;
        v4[30] = 0;
        v4[28] = 0;
        *((unsigned char *)v4 + 248) = 0;
      }
      uint64_t v10 = (void *)v4[1];
      if (v10)
      {
        do
        {
          int v11 = v10;
          uint64_t v10 = (void *)*v10;
        }
        while (v10);
      }
      else
      {
        do
        {
          int v11 = (void *)v4[2];
          _ZF = *v11 == (void)v4;
          int v4 = v11;
        }
        while (!_ZF);
      }
      int v4 = v11;
    }
    while (v11 != (void *)(a1 + 248));
  }
  return result;
}

void sub_10067F6F0(uint64_t a1, int a2, int *a3, uint64_t a4)
{
  int v26 = a2;
  uint64_t v7 = sub_10016BA10();
  sub_10016BC44((uint64_t)buf);
  sub_10016BE74(v7, (uint64_t *)buf);
  *(_DWORD *)uint64_t buf = 3;
  v25[0] = 3;
  v25[1] = sub_10016A9AC((int *)buf);
  uint64_t v8 = sub_10016AB88();
  *(_DWORD *)uint64_t buf = 4;
  sub_1005B70E0(v8, (unsigned int *)buf, (int32x4_t *)v25, (int *)(a1 + 5124), &v26, a3, a4);
  if (*a3 == 4)
  {
    int v13 = *(_DWORD *)(a4 + 188);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    uint64_t v14 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v28 = 2082;
      uint64_t v29 = "";
      __int16 v30 = 1026;
      BOOL v31 = v13 == 1;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"LocationController,Location Services\", \"enabled\":%{public}d}", buf, 0x18u);
    }
    if (*(unsigned char *)(a1 + 5121) && v13 == 1)
    {
      if (*(unsigned char *)(sub_10016AB88() + 24))
      {
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022C17A0);
        }
        double v15 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "#locctl,#rec,session already open,no-op", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022C17A0);
          }
          long long v16 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v16);
          if (v16 != (char *)buf) {
            free(v16);
          }
        }
      }
      else
      {
        uint64_t v18 = sub_10016AB88();
        sub_1005B5290(v18);
        uint64_t v19 = sub_10016AB88();
        sub_1005B5794(v19);
        *(void *)uint64_t buf = 0x4000000000000000;
        sub_10067119C(a1, (double *)buf);
      }
    }
    else if (*(unsigned char *)(a1 + 5121) && v13 != 1)
    {
      uint64_t v17 = sub_10016AB88();
      sub_1005B5064(v17);
    }
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    uint64_t v20 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "LocationController,#Warning,Location Services state changed,clearing local cache", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      double v24 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v24);
      if (v24 != (char *)buf) {
        free(v24);
      }
    }
    sub_1006768E4(a1, 6, *(_DWORD *)(a4 + 188) != 1);
    sub_10067F434(a1);
    uint64_t v21 = *(void *)(a1 + 312);
    if (v21) {
      sub_100EDEAD4(v21, v13 == 1);
    }
  }
  else if (!*a3)
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    unsigned int v9 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "LocationController,#Warning,Location Services reset,clearing local cache", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      uint64_t v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
    }
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C1820);
    }
    uint64_t v10 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "@ClxNotify, LpReset, 0", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022C1820);
      }
      uint64_t v23 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v23);
      if (v23 != (char *)buf) {
        free(v23);
      }
    }
    sub_10067F434(a1);
    id v11 = [[[*(id *)(a1 + 32) vendor] proxyForService:@"CLClientManager"];
    if (byte_10247C8E7 >= 0) {
      double v12 = &qword_10247C8D0;
    }
    else {
      double v12 = (uint64_t *)qword_10247C8D0;
    }
    [v11 resetNotificationConsumedForIdentifier:[NSString stringWithUTF8String:v12]];
  }
}

void sub_10067FE0C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 1888)) {
    int v2 = 1;
  }
  else {
    int v2 = *(unsigned char *)(a1 + 1720) == 0;
  }
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C17A0);
  }
  char v3 = (unsigned char *)(a1 + 5192);
  int v4 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 67240192;
    int v13 = v2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "LocationController,gnss debounce benefit low:%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    id v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::tickGnssDebounce()", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
  }
  if (*v3 != v2)
  {
    *char v3 = v2;
    if (*(_DWORD *)(a1 + 328))
    {
      int v5 = (int *)(a1 + 328);
      if (*(unsigned char *)(a1 + 5193) || ((v2 ^ 1) & 1) != 0)
      {
        char v9 = v2;
        if (!*(unsigned char *)(a1 + 5193)) {
          char v9 = 1;
        }
        if ((v9 & 1) == 0)
        {
          uint64_t v10 = sub_1000A43BC(a1 + 264, v5);
          [*(id *)(*v10 + 16) unregister:*(void *)(*v10 + 8) forNotification:44];
          *(unsigned char *)(a1 + 5193) = 0;
        }
      }
      else
      {
        unint64_t v6 = sub_1000A43BC(a1 + 264, v5);
        [*(id *)(*v6 + 16) register:*(void *)(*v6 + 8) forNotification:44 registrationInfo:0];
        *(unsigned char *)(a1 + 5193) = 1;
      }
    }
    else
    {
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      uint64_t v7 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "LocationController,GpsProvider not available for Gnss debounce notification", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022C17A0);
        }
        uint64_t v8 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::tickGnssDebounce()", "%s\n", v8);
        if (v8 != (char *)buf) {
          free(v8);
        }
      }
    }
  }
}

void sub_10068018C(void *a1@<X0>, void *a2@<X8>)
{
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C17A0);
  }
  int v4 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = a1[12];
    *(_DWORD *)uint64_t buf = 134217984;
    *(void *)uint64_t v18 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "LocationController,requested client list,size,%zu", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    int v13 = (void *)a1[12];
    LODWORD(__p[0]) = 134217984;
    *(void **)((char *)__p + 4) = v13;
    uint64_t v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLLocationControllerRecorder_Types::ClientList CLLocationController::getLocationControllerClients() const", "%s\n", v14);
    if (v14 != (char *)buf) {
      free(v14);
    }
  }
  a2[2] = 0;
  a2[1] = 0;
  *a2 = a2 + 1;
  unint64_t v6 = (void *)a1[10];
  if (v6 != a1 + 11)
  {
    do
    {
      sub_100134750(__p, (char *)[[objc_msgSend((id)v6[8], "description") UTF8String]);
      *(_DWORD *)uint64_t buf = *((_DWORD *)v6 + 8);
      if (SHIBYTE(v16) < 0)
      {
        sub_1000DC48C(&v18[1], __p[0], (unint64_t)__p[1]);
        uint64_t v20 = 0;
        uint64_t v21 = 0;
        uint64_t v19 = &v20;
        if (SHIBYTE(v16) < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        *(_OWORD *)&v18[1] = *(_OWORD *)__p;
        *(void *)&v18[5] = v16;
        uint64_t v20 = 0;
        uint64_t v21 = 0;
        uint64_t v19 = &v20;
      }
      uint64_t v7 = (int *)v6[5];
      if (v7 != (int *)(v6 + 6))
      {
        do
        {
          sub_1000EDED4(&v19, v7 + 7, v7 + 7);
          uint64_t v8 = (int *)*((void *)v7 + 1);
          if (v8)
          {
            do
            {
              char v9 = v8;
              uint64_t v8 = *(int **)v8;
            }
            while (v8);
          }
          else
          {
            do
            {
              char v9 = (int *)*((void *)v7 + 2);
              BOOL v10 = *(void *)v9 == (void)v7;
              uint64_t v7 = v9;
            }
            while (!v10);
          }
          uint64_t v7 = v9;
        }
        while (v9 != (int *)(v6 + 6));
      }
      sub_100682FC8((uint64_t)a2, (int *)buf, (uint64_t)buf);
      sub_100681C3C((uint64_t)buf);
      id v11 = (void *)v6[1];
      if (v11)
      {
        do
        {
          double v12 = v11;
          id v11 = (void *)*v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          double v12 = (void *)v6[2];
          BOOL v10 = *v12 == (void)v6;
          unint64_t v6 = v12;
        }
        while (!v10);
      }
      unint64_t v6 = v12;
    }
    while (v12 != a1 + 11);
  }
}

void sub_100680494(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18)
{
}

void sub_1006804E0(uint64_t a1, void *a2)
{
  if (a2 && *(void *)(a1 + 5184) && [a2 _placeInference])
  {
    if (objc_msgSend(objc_msgSend(a2, "_placeInference"), "_loiIdentifier"))
    {
      [*(id *)(a1 + 5184) fetchLocationOfInterestWithIdentifier:withReply:];
    }
    else
    {
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      int v4 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "LocationController,updateCAHomeLoiFromVisit,invalid loi identifier", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022C17A0);
        }
        uint64_t v5 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLLocationController::updateCAHomeLoiFromVisit(const CLVisit *)", "%s\n", v5);
        if (v5 != (char *)buf) {
          free(v5);
        }
      }
    }
  }
}

void sub_1006806F8(uint64_t a1, void *a2, uint64_t a3)
{
  if (a3)
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    uint64_t v5 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_ERROR))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t buf = 68289539;
      *(_DWORD *)v83 = 0;
      *(_WORD *)&v83[4] = 2082;
      *(void *)&v83[6] = "";
      *(_WORD *)&v83[14] = 2113;
      *(void *)&v83[16] = v6;
      *(_WORD *)&v83[24] = 2114;
      *(void *)&v83[26] = a3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"LocationController,updateCAHomeLoiFromVisit,error fetching LOI\", \"loiIdentifier\":%{private, location:escape_only}@, \"error\":%{public, location:escape_only}@}", buf, 0x26u);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
    }
    uint64_t v7 = qword_102419388;
    if (os_signpost_enabled((os_log_t)qword_102419388))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t buf = 68289539;
      *(_DWORD *)v83 = 0;
      *(_WORD *)&v83[4] = 2082;
      *(void *)&v83[6] = "";
      *(_WORD *)&v83[14] = 2113;
      *(void *)&v83[16] = v8;
      *(_WORD *)&v83[24] = 2114;
      *(void *)&v83[26] = a3;
      char v9 = "LocationController,updateCAHomeLoiFromVisit,error fetching LOI";
      BOOL v10 = "{\"msg%{public}.0s\":\"LocationController,updateCAHomeLoiFromVisit,error fetching LOI\", \"loiIdentifier\":%"
            "{private, location:escape_only}@, \"error\":%{public, location:escape_only}@}";
      id v11 = v7;
      uint32_t v12 = 38;
LABEL_9:
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v11, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, v9, v10, buf, v12);
    }
  }
  else
  {
    if (a2)
    {
      uint64_t v14 = *(void *)(a1 + 48);
      id v15 = objc_alloc((Class)CLVisit);
      [objc_msgSend(a2, "location") latitude];
      CLLocationDegrees v17 = v16;
      [objc_msgSend(a2, "location") longitude];
      CLLocationCoordinate2D v19 = CLLocationCoordinate2DMake(v17, v18);
      [objc_msgSend(a2, "location") horizontalUncertainty];
      id v21 = [v15 initWithCoordinate:objc_msgSend(*(id *)(a1 + 40), "arrivalDate") horizontalAccuracy:objc_msgSend(*(id *)(a1 + 40), "departureDate") arrivalDate:objc_msgSend(*(id *)(a1 + 40), "detectionDate") departureDate:objc_msgSend(*(id *)(a1 + 40), "_placeInference") latitude:v19.latitude longitude:v19.longitude placeInference:v20];
      *(_DWORD *)uint64_t buf = 23;
      v53[0] = 23;
      v53[1] = sub_10016A9AC((int *)buf);
      uint64_t v22 = sub_10016AB88();
      sub_1005BE7A4(v22, (int32x4_t *)v53, (int *)(v14 + 5124), v21, 1);
      if ([a2 type])
      {
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022C17A0);
        }
        uint64_t v23 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
        {
          unsigned int v24 = [a2 type];
          *(_DWORD *)uint64_t buf = 67109120;
          *(_DWORD *)v83 = v24;
          _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "LocationController,updateCAHomeLoiFromVisit,place type is not home,%d", buf, 8u);
        }
        if (!sub_10013D1A0(115, 2)) {
          return;
        }
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022C17A0);
        }
        unsigned int v25 = [a2 type];
        int v63 = 67109120;
        LODWORD(v64) = v25;
        int v26 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::updateCAHomeLoiFromVisit(const CLVisit *)_block_invoke", "%s\n", v26);
        if (v26 == (char *)buf) {
          return;
        }
      }
      else
      {
        if (!objc_msgSend(objc_msgSend(a2, "visits"), "count")) {
          return;
        }
        if (objc_msgSend(objc_msgSend(a2, "location"), "referenceFrame") == 2) {
          return;
        }
        [a2 confidence];
        if (v31 < 0.0) {
          return;
        }
        int v63 = 0xFFFF;
        long long v67 = xmmword_101D1C570;
        __asm { FMOV            V0.2D, #-1.0 }
        long long v68 = _Q0;
        long long v69 = _Q0;
        unint64_t v70 = 0xBFF0000000000000;
        int v71 = 0;
        uint64_t v73 = 0;
        uint64_t v74 = 0;
        unint64_t v72 = 0xBFF0000000000000;
        unint64_t v76 = 0xBFF0000000000000;
        int v75 = 0;
        int v77 = 0x7FFFFFFF;
        uint64_t v79 = 0;
        uint64_t v80 = 0;
        uint64_t v78 = 0;
        char v81 = 0;
        [objc_msgSend(a2, "location") latitude];
        uint64_t v64 = v37;
        [objc_msgSend(a2, "location") longitude];
        uint64_t v65 = v38;
        [objc_msgSend(a2, "location") horizontalUncertainty];
        uint64_t v66 = v39;
        __n128 v40 = sub_1011FE8C4(v14 + 5200, (uint64_t)&v63);
        uint64_t v41 = *(void *)(v14 + 288);
        if (v41) {
          (*(void (**)(uint64_t, uint64_t, __n128))(*(void *)v41 + 488))(v41, 1, v40);
        }
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022C17A0);
        }
        int v42 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_INFO))
        {
          uint64_t v43 = v64;
          uint64_t v44 = v65;
          uint64_t v45 = v66;
          uint64_t v46 = sub_10016BA10();
          double v47 = sub_10018202C(v46);
          *(_DWORD *)uint64_t buf = 136381699;
          *(void *)v83 = "home";
          *(_WORD *)&v83[8] = 2049;
          *(void *)&v83[10] = v43;
          *(_WORD *)&v83[18] = 2049;
          *(void *)&v83[20] = v44;
          *(_WORD *)&v83[28] = 2050;
          *(void *)&v83[30] = v45;
          __int16 v84 = 2050;
          double v85 = v47;
          _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_INFO, "LocationController,updateCAHomeLoiFromVisit,LOI %{private}s location latitude,%{private}.7f,longitude,%{private}.7f,acc,%{public}.2f,propagation_us,%{public}.3f", buf, 0x34u);
        }
        if (!sub_10013D1A0(115, 2)) {
          return;
        }
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022C17A0);
        }
        uint64_t v48 = v64;
        uint64_t v49 = v65;
        uint64_t v50 = v66;
        uint64_t v51 = sub_10016BA10();
        double v52 = sub_10018202C(v51);
        v53[2] = 136381699;
        double v54 = "home";
        __int16 v55 = 2049;
        uint64_t v56 = v48;
        __int16 v57 = 2049;
        uint64_t v58 = v49;
        __int16 v59 = 2050;
        uint64_t v60 = v50;
        __int16 v61 = 2050;
        double v62 = v52;
        int v26 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::updateCAHomeLoiFromVisit(const CLVisit *)_block_invoke", "%s\n", v26);
        if (v26 == (char *)buf) {
          return;
        }
      }
      free(v26);
      return;
    }
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    uint64_t v27 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_ERROR))
    {
      uint64_t v28 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)v83 = 0;
      *(_WORD *)&v83[4] = 2082;
      *(void *)&v83[6] = "";
      *(_WORD *)&v83[14] = 2113;
      *(void *)&v83[16] = v28;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"LocationController,updateCAHomeLoiFromVisit,received nil LOI\", \"loiIdentifier\":%{private, location:escape_only}@}", buf, 0x1Cu);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
    }
    uint64_t v29 = qword_102419388;
    if (os_signpost_enabled((os_log_t)qword_102419388))
    {
      uint64_t v30 = *(void *)(a1 + 32);
      *(_DWORD *)uint64_t buf = 68289283;
      *(_DWORD *)v83 = 0;
      *(_WORD *)&v83[4] = 2082;
      *(void *)&v83[6] = "";
      *(_WORD *)&v83[14] = 2113;
      *(void *)&v83[16] = v30;
      char v9 = "LocationController,updateCAHomeLoiFromVisit,received nil LOI";
      BOOL v10 = "{\"msg%{public}.0s\":\"LocationController,updateCAHomeLoiFromVisit,received nil LOI\", \"loiIdentifier\":%{p"
            "rivate, location:escape_only}@}";
      id v11 = v29;
      uint32_t v12 = 28;
      goto LABEL_9;
    }
  }
}

void sub_100680F20(uint64_t a1, void *a2)
{
  if ([a2 referenceFrame] == (id)1)
  {
    uint64_t v4 = sub_10016BA10();
    sub_10016BC44((uint64_t)buf);
    sub_10016BE74(v4, buf[0].i64);
    int v10 = 24;
    buf[0].i32[0] = 24;
    buf[0].i32[1] = sub_10016A9AC(&v10);
    int v9 = 21;
    int v10 = 21;
    unsigned int v11 = sub_10016A9AC(&v9);
    uint64_t v5 = sub_10016AB88();
    sub_1005BF010(v5, buf, &v10, a2);
    uint64_t v6 = *(void *)(a1 + 304);
    if (v6) {
      sub_10100B06C(v6, a2);
    }
  }
  else
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    uint64_t v7 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_FAULT))
    {
      buf[0].i32[0] = 67240192;
      buf[0].i32[1] = [a2 referenceFrame];
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "LocationController,onBackgroundInertialOdometryState, unsupported reference frame: %{public}d", (uint8_t *)buf, 8u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C17A0);
      }
      int v10 = 67240192;
      unsigned int v11 = [a2 referenceFrame];
      uint64_t v8 = (int32x4_t *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLLocationController::onBackgroundInertialOdometryState(const CMOdometry *)", "%s\n", v8->i8);
      if (v8 != buf) {
        free(v8);
      }
    }
  }
}

void sub_100681164(uint64_t a1, uint64_t *a2)
{
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C17A0);
  }
  uint64_t v4 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = sub_10016BA10();
    *(_DWORD *)uint64_t buf = 1;
    double v6 = sub_10016BA54(v5, buf);
    unint64_t v7 = 0x8E38E38E38E38E39 * ((a2[1] - *a2) >> 3);
    uint64_t v8 = sub_10016BA10();
    double v9 = sub_10018202C(v8);
    *(_DWORD *)uint64_t buf = 134349568;
    double v17 = v6;
    __int16 v18 = 2050;
    unint64_t v19 = v7;
    __int16 v20 = 2050;
    double v21 = v9;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "LocationController,got IO samples,mct,%{public}.3f,count,%{public}zu,propagation_us,%{public}.3f", buf, 0x20u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    sub_1005B5034();
    uint64_t v14 = sub_10016BA10();
    sub_10018202C(v14);
    id v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::inertialOdometryManagerCallback(const std::vector<CLPIOSample> &)", "%s\n", v15);
    if (v15 != (char *)buf) {
      free(v15);
    }
  }
  uint64_t v12 = *(void *)(a1 + 288);
  if (v12) {
    (*(void (**)(uint64_t, uint64_t *))(*(void *)v12 + 472))(v12, a2);
  }
  uint64_t v13 = *(void *)(a1 + 312);
  if (v13) {
    sub_100EDF3E8(v13, a2, v10, v11);
  }
  sub_1003948D4(a1 + 768, a2);
}

uint64_t sub_100681414(uint64_t a1, uint64_t a2)
{
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C17A0);
  }
  uint64_t v4 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *(_DWORD *)(a2 + 1512);
    uint64_t v6 = *(void *)(a2 + 1520);
    *(_DWORD *)uint64_t buf = 67240448;
    int v10 = v5;
    __int16 v11 = 2050;
    uint64_t v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#CLProactiveLoc,ntfy,sess start,%{public}d,gnss usage sec,%{public}0.2f", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C17A0);
    }
    uint64_t v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLLocationController::onProactiveLocationSessionNotification(const CLLocationProvider_Type::NotificationData &)", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  *(_DWORD *)uint64_t buf = 46;
  return (*(uint64_t (**)(uint64_t, uint8_t *, uint64_t, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, buf, a2, 1, 0xFFFFFFFFLL, 0);
}

void sub_100681630()
{
}

void sub_1006816E8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete();
}

void sub_100681724(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100681754(id a1)
{
  qword_102418FB8 = (uint64_t)os_log_create("com.apple.locationd.Position", "TrackRun");
}

void sub_100681784(id a1)
{
  qword_102419388 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_1006817B4(id a1)
{
  qword_1024193D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

uint64_t sub_1006817E4(uint64_t a1)
{
  int v2 = *(std::__shared_weak_count **)(a1 + 2696);
  if (v2) {
    sub_1000DB0A0(v2);
  }
  if (*(char *)(a1 + 2455) < 0) {
    operator delete(*(void **)(a1 + 2432));
  }
  char v3 = *(std::__shared_weak_count **)(a1 + 2336);
  if (v3) {
    sub_1000DB0A0(v3);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 2216);
  if (v4) {
    sub_1000DB0A0(v4);
  }

  int v5 = *(std::__shared_weak_count **)(a1 + 1168);
  if (v5) {
    sub_1000DB0A0(v5);
  }
  if (*(char *)(a1 + 927) < 0) {
    operator delete(*(void **)(a1 + 904));
  }
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 808);
  if (v6) {
    sub_1000DB0A0(v6);
  }
  unint64_t v7 = *(std::__shared_weak_count **)(a1 + 688);
  if (v7) {
    sub_1000DB0A0(v7);
  }
  return a1;
}

uint64_t sub_100681888(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void, void))(**(void **)(a1[4] + 288) + 96))(*(void *)(a1[4] + 288), a1[5], a1[6], a1[7], a1[8]);
}

uint64_t sub_1006818BC(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void, void))(**(void **)(a1[4] + 288) + 104))(*(void *)(a1[4] + 288), a1[5], a1[6], a1[7], a1[8]);
}

uint64_t sub_1006818F0()
{
  if (qword_10247C908 != -1) {
    dispatch_once(&qword_10247C908, &stru_1022C17E0);
  }
  v0 = (uint64_t *)dlsym((void *)qword_10247C910, "NRPairedDeviceRegistryDeviceDidPairDarwinNotification");
  if (v0)
  {
    uint64_t result = *v0;
    qword_10247C900 = result;
  }
  else
  {
    uint64_t result = qword_10247C900;
  }
  off_10241D218[0] = sub_100681970;
  return result;
}

uint64_t sub_100681970()
{
  return qword_10247C900;
}

void sub_10068197C(id a1)
{
  qword_10247C910 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry", 2);
}

uint64_t sub_1006819A8()
{
  if (qword_10247C908 != -1) {
    dispatch_once(&qword_10247C908, &stru_1022C17E0);
  }
  v0 = (uint64_t *)dlsym((void *)qword_10247C910, "NRPairedDeviceRegistryDeviceDidUnpairDarwinNotification");
  if (v0)
  {
    uint64_t result = *v0;
    qword_10247C918 = result;
  }
  else
  {
    uint64_t result = qword_10247C918;
  }
  off_10241D220 = sub_100681A28;
  return result;
}

uint64_t sub_100681A28()
{
  return qword_10247C918;
}

void sub_100681A34(id a1)
{
  qword_1024193B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_100681A64(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

uint64_t sub_100681A94(uint64_t a1, int a2, long long *a3, long long *a4, int a5, char a6, char a7)
{
  *(_DWORD *)a1 = a2;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 8), *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v12 = *a3;
    *(void *)(a1 + 24) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 8) = v12;
  }
  uint64_t v13 = (unsigned char *)(a1 + 32);
  if (*((char *)a4 + 23) < 0)
  {
    sub_1000DC48C(v13, *(void **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v14 = *a4;
    *(void *)(a1 + 48) = *((void *)a4 + 2);
    *(_OWORD *)uint64_t v13 = v14;
  }
  *(_DWORD *)(a1 + 56) = 0xFFFF;
  *(void *)(a1 + 68) = 0;
  *(void *)(a1 + 60) = 0;
  *(_OWORD *)(a1 + 76) = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 92) = _Q0;
  *(_OWORD *)(a1 + 108) = _Q0;
  *(_OWORD *)(a1 + 124) = _Q0;
  *(_DWORD *)(a1 + 140) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 144) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 168) = 0;
  *(void *)(a1 + 172) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 180) = 0x7FFFFFFF;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 184) = 0;
  *(unsigned char *)(a1 + 208) = 0;
  sub_1000DBC34(a1 + 216);
  *(_DWORD *)(a1 + 856) = a5;
  *(unsigned char *)(a1 + 860) = a6;
  *(unsigned char *)(a1 + 861) = a7;
  *(_WORD *)(a1 + 862) = 1;
  *(void *)(a1 + 864) = 0;
  return a1;
}

void sub_100681BA8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_100681BC4(id a1)
{
  qword_102419658 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

void sub_100681C0C(id a1)
{
  qword_102419538 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

uint64_t sub_100681C3C(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_100681C7C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100681C7C(a1, *a2);
    sub_100681C7C(a1, a2[1]);
    sub_100681CD8((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_100681CD8(uint64_t a1)
{
  int v2 = *(std::__shared_weak_count **)(a1 + 752);
  if (v2) {
    sub_1000DB0A0(v2);
  }
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 39) < 0)
  {
    char v3 = *(void **)(a1 + 16);
    operator delete(v3);
  }
}

void sub_100681D3C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100681D3C(a1, *a2);
    sub_100681D3C(a1, a2[1]);
    uint64_t v4 = a2[5];
    a2[5] = 0;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    operator delete(a2);
  }
}

uint64_t sub_100681DC0(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_10100A9DC();
    operator delete();
  }
  return result;
}

uint64_t sub_100681E10(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100EDB9D0();
    operator delete();
  }
  return result;
}

void sub_100681E64()
{
}

void *sub_100681E78(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C18D0;
  result[1] = v3;
  return result;
}

uint64_t sub_100681EC0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C18D0;
  a2[1] = v2;
  return result;
}

id sub_100681EEC(uint64_t a1)
{
  id v1 = [[[*(id **)(a1 + 8)) vendor] proxyForService:@"CLClientManager"];

  return [v1 syncgetNonSystemLocationClientKeys];
}

uint64_t sub_100681F28(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100681F68()
{
}

void *sub_100681F74(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100681FFC()
{
}

void *sub_100682010(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C1960;
  result[1] = v3;
  return result;
}

uint64_t sub_100682058(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C1960;
  a2[1] = v2;
  return result;
}

uint64_t sub_100682084(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006820C4()
{
}

void sub_1006820D4()
{
}

void *sub_1006820E8(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C19E0;
  result[1] = v3;
  return result;
}

uint64_t sub_100682130(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C19E0;
  a2[1] = v2;
  return result;
}

uint64_t sub_10068215C(uint64_t a1, int *a2)
{
  return sub_100673CF4(*(void *)(a1 + 8), a2);
}

uint64_t sub_100682164(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006821A4()
{
}

void *sub_1006821B0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100682238()
{
}

void *sub_10068224C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C1A70;
  result[1] = v3;
  return result;
}

uint64_t sub_100682294(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C1A70;
  a2[1] = v2;
  return result;
}

id sub_1006822C0(uint64_t a1, long long *a2)
{
  long long v9 = a2[2];
  long long v11 = a2[3];
  long long v13 = a2[4];
  long long v5 = *a2;
  long long v7 = a2[1];
  uint64_t v2 = *(void *)(a1 + 8);
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022C17C0);
  }
  uint64_t v3 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)&uint8_t buf[8] = 2082;
    *(void *)&buf[10] = "";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"BarometricAltitude callback\"}", buf, 0x12u);
  }
  id result = [[[*(id *)(v2 + 32) vendor:v5, v7, v9, v11, v13] proxyForService:@"CLGnssProvider"];
  if (result)
  {
    long long v16 = v10;
    long long v17 = v12;
    long long v18 = v14;
    *(_OWORD *)uint64_t buf = v6;
    *(_OWORD *)&buf[16] = v8;
    return [result setBarometricAltitudeData:buf];
  }
  return result;
}

uint64_t sub_1006823EC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10068242C()
{
}

void *sub_100682438(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1006824C0()
{
}

void *sub_1006824D4(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_1022C1B00;
  result[1] = v3;
  return result;
}

uint64_t sub_10068251C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C1B00;
  a2[1] = v2;
  return result;
}

uint64_t sub_100682548(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100682588()
{
}

void *sub_100682594(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10068261C()
{
}

void *sub_100682630(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_1022C1B90;
  result[1] = v3;
  return result;
}

uint64_t sub_100682678(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C1B90;
  a2[1] = v2;
  return result;
}

uint64_t sub_1006826A4(uint64_t a1, uint64_t a2)
{
  return sub_100681414(*(void *)(a1 + 8), a2);
}

uint64_t sub_1006826AC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006826EC()
{
}

void sub_1006826FC()
{
}

void *sub_100682710(uint64_t a1)
{
  id result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *id result = off_1022C1C20;
  result[1] = v3;
  return result;
}

uint64_t sub_100682758(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C1C20;
  a2[1] = v2;
  return result;
}

uint64_t sub_100682784(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)(a1 + 8) + 288);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 496))();
  }
  return result;
}

uint64_t sub_1006827C0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100682800()
{
}

void *sub_10068280C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_100682890(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

__n128 sub_100682914@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a2 + 112) = v2;
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(a2 + 140) = *(_OWORD *)(a1 + 172);
  long long v3 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 48) = v3;
  long long v4 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 80) = v4;
  __n128 result = *(__n128 *)(a1 + 32);
  long long v6 = *(_OWORD *)(a1 + 48);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v6;
  return result;
}

uint64_t sub_100682948(uint64_t a1)
{
  *(_DWORD *)a1 = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 56) = 0xFFFF;
  *(void *)(a1 + 68) = 0;
  *(void *)(a1 + 60) = 0;
  *(_OWORD *)(a1 + 76) = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 92) = _Q0;
  *(_OWORD *)(a1 + 108) = _Q0;
  *(_OWORD *)(a1 + 124) = _Q0;
  *(_DWORD *)(a1 + 140) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 144) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 168) = 0;
  *(void *)(a1 + 172) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 180) = 0x7FFFFFFF;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(unsigned char *)(a1 + 208) = 0;
  *(void *)(a1 + 200) = 0;
  sub_1000DBC34(a1 + 216);
  *(_DWORD *)(a1 + 856) = 0;
  *(_DWORD *)(a1 + 860) = 1;
  *(void *)(a1 + 864) = 0;
  return a1;
}

void sub_1006829F0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_100681CD8((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t sub_100682A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      *(_DWORD *)(a4 + v7) = *(_DWORD *)(a2 + v7);
      sub_100118070(a4 + v7 + 8, a2 + v7 + 8);
      v7 += 40;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_100682AB0(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 32;
    do
    {
      sub_100118010(v4 + v2);
      v2 -= 40;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_100682AD4(uint64_t a1, void *a2, void *a3)
{
  *a2 = *a3;
}

void sub_100682AE0(uint64_t a1, void *a2, void *a3)
{
  *a2 = *a3;
}

void sub_100682AEC(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  *a2 = *a3;
}

float sub_100682AF8(uint64_t a1, _DWORD *a2, float *a3)
{
  float result = *a3;
  *a2 = *(_DWORD *)a3;
  return result;
}

double sub_100682B04(uint64_t a1, void *a2, double *a3)
{
  double result = *a3;
  *a2 = *(void *)a3;
  return result;
}

void sub_100682B10(uint64_t a1, unsigned char *a2, unsigned char *a3)
{
  *a2 = *a3;
}

void sub_100682B1C(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    uint64_t v4 = (char *)v1[1];
    long long v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        long long v6 = v4 - 40;
        sub_100118010((uint64_t)(v4 - 32));
        uint64_t v4 = v6;
      }
      while (v6 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_100682BA4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return sub_100682C20(a2, *(void *)(a1 + 32), *(void *)(a1 + 40), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a1 + 40) - *(void *)(a1 + 32)) >> 3));
}

void *sub_100682BCC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  uint64_t v2 = (void *)(a1 + 32);
  v2[2] = 0;
  return sub_100682C20(v2, *(void *)(a2 + 32), *(void *)(a2 + 40), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3));
}

void sub_100682BF4(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 32);
  sub_100682B1C(&v1);
}

void *sub_100682C20(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    sub_10054E250(result, a4);
    double result = (void *)sub_100682CA8((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_100682C88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_100682B1C(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100682CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      *(_DWORD *)(a4 + v7) = *(_DWORD *)(a2 + v7);
      sub_100118070(a4 + v7 + 8, a2 + v7 + 8);
      v7 += 40;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_100682D10(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 32;
    do
    {
      sub_100118010(v4 + v2);
      v2 -= 40;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100682D34(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x666666666666666) {
    sub_1001D7FD4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x333333333333333) {
    unint64_t v9 = 0x666666666666666;
  }
  else {
    unint64_t v9 = v5;
  }
  v14[4] = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_1002E5328(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  long long v11 = &v10[40 * v4];
  v14[0] = v10;
  v14[1] = v11;
  v14[3] = &v10[40 * v9];
  *(_DWORD *)long long v11 = *a2;
  sub_10011885C((uint64_t)(v11 + 8), (uint64_t)(a2 + 2));
  v14[2] = v11 + 40;
  sub_100682E84(a1, v14);
  uint64_t v12 = a1[1];
  sub_100682F18((uint64_t)v14);
  return v12;
}

void sub_100682E28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100682F18((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100682E3C(uint64_t a1, void *a2, void *a3)
{
  *a2 = *a3;
}

void sub_100682E48(uint64_t a1, void *a2, void *a3)
{
  *a2 = *a3;
}

void sub_100682E54(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  *a2 = *a3;
}

float sub_100682E60(uint64_t a1, _DWORD *a2, float *a3)
{
  float result = *a3;
  *a2 = *(_DWORD *)a3;
  return result;
}

double sub_100682E6C(uint64_t a1, void *a2, double *a3)
{
  double result = *a3;
  *a2 = *(void *)a3;
  return result;
}

void sub_100682E78(uint64_t a1, unsigned char *a2, unsigned char *a3)
{
  *a2 = *a3;
}

uint64_t *sub_100682E84(uint64_t *result, void *a2)
{
  uint64_t v3 = result;
  uint64_t v5 = *result;
  uint64_t v4 = result[1];
  uint64_t v6 = a2[1];
  while (v4 != v5)
  {
    int v7 = *(_DWORD *)(v4 - 40);
    v4 -= 40;
    *(_DWORD *)(v6 - 40) = v7;
    v6 -= 40;
    double result = (uint64_t *)sub_10011885C(v6 + 8, v4 + 8);
  }
  a2[1] = v6;
  uint64_t v8 = *v3;
  *uint64_t v3 = v6;
  a2[1] = v8;
  uint64_t v9 = v3[1];
  v3[1] = a2[2];
  a2[2] = v9;
  uint64_t v10 = v3[2];
  v3[2] = a2[3];
  a2[3] = v10;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100682F18(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 40;
    sub_100118010(i - 32);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100682F6C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100682F6C(a1, *a2);
    sub_100682F6C(a1, a2[1]);
    sub_100681C3C((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

uint64_t *sub_100682FC8(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t **)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    int v6 = *a2;
    while (1)
    {
      while (1)
      {
        int v7 = (uint64_t *)v4;
        int v8 = *(_DWORD *)(v4 + 32);
        if (v6 >= v8) {
          break;
        }
        uint64_t v4 = *v7;
        uint64_t v5 = (uint64_t **)v7;
        if (!*v7) {
          goto LABEL_10;
        }
      }
      if (v8 >= v6) {
        break;
      }
      uint64_t v4 = v7[1];
      if (!v4)
      {
        uint64_t v5 = (uint64_t **)(v7 + 1);
        goto LABEL_10;
      }
    }
  }
  else
  {
    int v7 = (uint64_t *)(a1 + 8);
LABEL_10:
    sub_10068308C(a1, a3, (uint64_t)v10);
    sub_1000EDF90((uint64_t **)a1, (uint64_t)v7, v5, v10[0]);
    int v7 = v10[0];
    v10[0] = 0;
    sub_100683188((uint64_t)v10, 0);
  }
  return v7;
}

uint64_t *sub_10068308C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = operator new(0x58uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  double result = sub_1006830FC(v5, (uint64_t)v6 + 32, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1006830E4(_Unwind_Exception *a1)
{
  sub_100683188(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t *sub_1006830FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a2 = *(_DWORD *)a3;
  uint64_t v5 = (unsigned char *)(a2 + 8);
  if (*(char *)(a3 + 31) < 0)
  {
    sub_1000DC48C(v5, *(void **)(a3 + 8), *(void *)(a3 + 16));
  }
  else
  {
    long long v6 = *(_OWORD *)(a3 + 8);
    *(void *)(a2 + 24) = *(void *)(a3 + 24);
    *(_OWORD *)uint64_t v5 = v6;
  }
  return sub_1005C1230((uint64_t *)(a2 + 32), a3 + 32);
}

void sub_10068316C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 31) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100683188(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_100681C3C((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void sub_1006831E0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241AD20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241AD20))
  {
    qword_10241AD08 = 0;
    qword_10241AD10 = 0;
    qword_10241AD18 = 0;
    __cxa_atexit((void (*)(void *))sub_1003BE920, &qword_10241AD08, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241AD20);
  }
}

void sub_100683260()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241ADD0))
  {
    std::__shared_mutex_base::__shared_mutex_base(&stru_10241AD28);
    __cxa_atexit((void (*)(void *))sub_1003BE954, &stru_10241AD28, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241ADD0);
  }
}

void sub_1006832F0(_Unwind_Exception *a1)
{
}

void sub_100683308()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419688, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419688))
  {
    qword_102419670 = 0;
    qword_102419678 = 0;
    qword_102419680 = 0;
    v0 = operator new(6uLL);
    qword_102419678 = (uint64_t)(v0 + 3);
    qword_102419680 = (uint64_t)(v0 + 3);
    *(_DWORD *)v0 = 151521030;
    v0[2] = 3082;
    qword_102419670 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_1001C6FD8, &qword_102419670, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419688);
  }
}

void sub_1006833C0(_Unwind_Exception *a1)
{
}

void sub_1006833D8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1024196A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1024196A8))
  {
    qword_102419690 = 0;
    qword_102419698 = 0;
    qword_1024196A0 = 0;
    v0 = operator new(2uLL);
    qword_102419690 = (uint64_t)v0;
    _WORD *v0 = 256;
    qword_102419698 = (uint64_t)(v0 + 1);
    qword_1024196A0 = (uint64_t)(v0 + 1);
    __cxa_atexit((void (*)(void *))sub_1001C700C, &qword_102419690, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1024196A8);
  }
}

void sub_100683480(_Unwind_Exception *a1)
{
}

void sub_100683498()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADF0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10241ADF0))
    {
      uint64_t v1 = 0x7FFFFFFF00000000;
      v0[2] = xmmword_101D27388;
      v0[3] = unk_101D27398;
      v0[4] = xmmword_101D273A8;
      v0[0] = xmmword_101D27368;
      v0[1] = unk_101D27378;
      sub_1003BFBA4((uint64_t)&unk_10241ADD8, (int *)v0, 11);
      __cxa_atexit((void (*)(void *))sub_1003BE998, &unk_10241ADD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ADF0);
    }
  }
}

void sub_100683578(_Unwind_Exception *a1)
{
}

uint64_t sub_100683590()
{
  sub_100134750(qword_10247C8B8, "t");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247C8B8, (void *)&_mh_execute_header);
  sub_100134750(&qword_10247C8D0, "LocationController");

  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10247C8D0, (void *)&_mh_execute_header);
}

uint64_t sub_100683628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_100EB8E90(a1, a2, a3);
  *(void *)uint64_t v4 = off_1022C1D80;
  *(_WORD *)(v4 + 64) = 0;
  sub_1000C7F88(&v11);
  uint64_t v5 = v11;
  char v6 = _os_feature_enabled_impl();
  BOOL v13 = 0;
  int v7 = sub_1000D2988(v5, "CLProactiveInertialOdometryIsEnabled", &v13);
  BOOL v8 = v13;
  if (!v7) {
    BOOL v8 = v6;
  }
  *(unsigned char *)(a1 + 64) = v8;
  if (v12) {
    sub_1000DB0A0(v12);
  }
  sub_1000C7F88(&v11);
  BOOL v13 = 0;
  int v9 = sub_1000D2988(v11, "CLProactiveInertialOdometryAlwaysOnPolicyOverride", &v13) ^ 1;
  if (v13) {
    LOBYTE(v9) = 1;
  }
  *(unsigned char *)(a1 + 65) = v9;
  if (v12) {
    sub_1000DB0A0(v12);
  }
  return a1;
}

void sub_100683728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_1000DB0A0(a11);
  }
  sub_100EB8ECC(v11);
  _Unwind_Resume(a1);
}

void sub_10068375C(uint64_t a1, double a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 32);
  int v4 = *(unsigned __int8 *)(a1 + 64);
  if (*(unsigned char *)(a1 + 64))
  {
    int v4 = 1;
    if (*(unsigned char *)(a1 + 33))
    {
      if (a2 - *(double *)(a1 + 40) > 600.0)
      {
        if (*(unsigned char *)(a1 + 48)) {
          int v4 = 1;
        }
        else {
          int v4 = *(unsigned char *)(a1 + 65) != 0;
        }
      }
    }
  }
  *(unsigned char *)(a1 + 32) = v4;
  if (v3 != v4)
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C1DB0);
    }
    uint64_t v5 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = *(unsigned __int8 *)(a1 + 32);
      *(_DWORD *)uint64_t buf = 67240192;
      int v9 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#pbio, CLProactiveInertialOdometrySubscription_Watch, fPolicyStateIsSubscribe, %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C1DB0);
      }
      int v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLProactiveInertialOdometrySubscription_Watch::_updateSubscriptionState(const CFTimeInterval)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
  }
}

void sub_10068396C(void *a1)
{
  sub_100EB8ECC(a1);

  operator delete();
}

void sub_1006839A4(id a1)
{
  qword_102419388 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_100683A84(id a1)
{
  qword_10247C920 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLWifiLocationProviderSilo"];
}

uint64_t sub_100683B44(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1006846D4;
  block[3] = &unk_10229FED8;
  block[4] = a1;
  if (qword_10247C940 != -1) {
    dispatch_once(&qword_10247C940, block);
  }
  return qword_10248A240;
}

void sub_100683FAC(uint64_t a1, uint64_t a2)
{
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
  }
  int v4 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, emergencyState", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    uint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::handleEmergencyStateChange(CLEmergencyState)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  BOOL v7 = sub_100D33CD4(a2);
  int v6 = 23;
  sub_1000E0AA0(a1);
  sub_1000D7B80((uint64_t)&v6);
}

void sub_10068416C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100684200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100684214(uint64_t a1, uint64_t *a2)
{
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
  }
  int v4 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 136446210;
    *(void *)&uint8_t buf[4] = sub_1006D40F4(a2);
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, requestLocationUpdate, %{public}s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    int v19 = 136446210;
    __int16 v20 = sub_1006D40F4(a2);
    BOOL v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWifiLocationProvider::requestLocationUpdate(const CLWifiLocationUpdateRequest &)", "%s\n", v7);
    if (v7 != buf) {
      free(v7);
    }
  }
  sub_100689E94((uint64_t)buf, a2);
  uint64_t v9 = *(void *)buf;
  char v10 = buf[8];
  uint64_t v12 = v23;
  long long v11 = v22;
  long long v22 = 0uLL;
  *(_OWORD *)&v16[12] = *(_OWORD *)((char *)v27 + 12);
  *(_OWORD *)long long v16 = v27[0];
  long long v15 = v26;
  long long v14 = v25;
  long long v13 = v24;
  uint64_t v18 = v29;
  long long v17 = __p;
  uint64_t v23 = 0;
  long long __p = 0uLL;
  uint64_t v29 = 0;
  int v8 = 24;
  char v5 = sub_1000E0AA0(a1, &v8);
  sub_1000D7B80((uint64_t)&v8);
  if (SHIBYTE(v29) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)v22);
  }
  return v5 & 1;
}

void sub_1006844A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000D7B80((uint64_t)va);
  sub_10050EC2C((uint64_t)&STACK[0x350]);
  _Unwind_Resume(a1);
}

void sub_1006846A8(id a1)
{
  if ((sub_1001073D0() & 2) != 0) {
    byte_10247C930 = 1;
  }
}

void sub_1006846D4()
{
}

void sub_100684720()
{
}

void sub_100684744(uint64_t a1, uint64_t a2)
{
}

void sub_1006847B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006847E4(uint64_t a1, void *a2, void *a3, uint64_t *a4)
{
  int v8 = (void *)sub_1006B766C(a1, "wifi", a2);
  void *v8 = off_1022C1E20;
  v8[15] = *a3;
  uint64_t v9 = a3[1];
  v8[16] = v9;
  if (v9) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(unsigned char *)(a1 + 152) = 0;
  sub_10068A1CC(a4, &v36);
  long long v34 = v36;
  long long v36 = 0uLL;
  sub_100134750(buf, "");
  sub_100689C58(a1 + 168, (uint64_t *)&v34, (long long *)buf);
  if ((char)buf[23] < 0) {
    operator delete(*(void **)buf);
  }
  if (*((void *)&v34 + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&v34 + 1));
  }
  if (*((void *)&v36 + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&v36 + 1));
  }
  sub_1000DB6E4(a1 + 224);
  sub_100465C74((void *)(a1 + 3680), (uint64_t)a2);
  uint64_t v10 = 0;
  while (1)
  {
    long long v11 = (&off_1022C2060)[v10];
    LOBYTE(v35) = 0;
    sub_1000C7F88(buf);
    int v12 = sub_1000D2988(*(uint64_t *)buf, v11, (BOOL *)&v35);
    if (*(void *)&buf[8]) {
      sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
    }
    if (v12)
    {
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      }
      long long v13 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)uint64_t buf = 136315138;
        *(void *)&uint8_t buf[4] = v11;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "%s is deprecated. setting this has no effect", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
        }
        LODWORD(v36) = 136315138;
        *(void *)((char *)&v36 + 4) = v11;
        long long v14 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void errorOnDeprecatedDefaultWrites()", "%s\n", v14);
        if (v14 != (char *)buf) {
          free(v14);
        }
      }
    }
    if (++v10 == 7)
    {
      uint64_t v15 = 0;
      while (1)
      {
        long long v16 = (&off_1022C2098)[v15];
        uint64_t v35 = 0;
        sub_1000C7F88(buf);
        int v17 = sub_1000A699C(*(uint64_t *)buf, v16, &v35);
        if (*(void *)&buf[8]) {
          sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
        }
        if (v17)
        {
          if (qword_1024193B0 != -1) {
            dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
          }
          uint64_t v18 = qword_1024193B8;
          if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)uint64_t buf = 136315138;
            *(void *)&uint8_t buf[4] = v16;
            _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "%s is deprecated. setting this has no effect", buf, 0xCu);
          }
          if (sub_10013D1A0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1024193B0 != -1) {
              dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
            }
            LODWORD(v36) = 136315138;
            *(void *)((char *)&v36 + 4) = v16;
            int v19 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 0, "void errorOnDeprecatedDefaultWrites()", "%s\n", v19);
            if (v19 != (char *)buf) {
              free(v19);
            }
          }
        }
        if (++v15 == 3)
        {
          uint64_t v20 = 0;
          while (1)
          {
            double v21 = (&off_1022C20B0)[v20];
            LODWORD(v35) = 0;
            sub_1000C7F88(buf);
            int v22 = sub_10006EF84(*(uint64_t *)buf, v21, &v35);
            if (*(void *)&buf[8]) {
              sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
            }
            if (v22)
            {
              if (qword_1024193B0 != -1) {
                dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
              }
              uint64_t v23 = qword_1024193B8;
              if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)uint64_t buf = 136315138;
                *(void *)&uint8_t buf[4] = v21;
                _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "%s is deprecated. setting this has no effect", buf, 0xCu);
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_1024193B0 != -1) {
                  dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
                }
                LODWORD(v36) = 136315138;
                *(void *)((char *)&v36 + 4) = v21;
                long long v24 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 0, "void errorOnDeprecatedDefaultWrites()", "%s\n", v24);
                if (v24 != (char *)buf) {
                  free(v24);
                }
              }
            }
            if (++v20 == 2)
            {
              LOBYTE(v35) = 0;
              sub_1000C7F88(buf);
              sub_1000D2988(*(uint64_t *)buf, "ClearAls", (BOOL *)&v35);
              if (*(void *)&buf[8]) {
                sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
              }
              if ((_BYTE)v35)
              {
                sub_101454C1C((void *)*a4);
                sub_101452A04(*a4);
                if (qword_1024193B0 != -1) {
                  dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
                }
                long long v25 = qword_1024193B8;
                if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
                {
                  *(_WORD *)uint64_t buf = 0;
                  _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "WlpMetric, ClearAls", buf, 2u);
                }
                if (sub_10013D1A0(115, 2))
                {
                  bzero(buf, 0x65CuLL);
                  if (qword_1024193B0 != -1) {
                    dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
                  }
                  LOWORD(v36) = 0;
                  uint64_t v30 = (char *)_os_log_send_and_compose_impl();
                  sub_1004BA5E4("Generic", 1, 0, 2, "CLWifiLocationProvider::CLWifiLocationProvider(id<CLIntersiloUniverse>, std::shared_ptr<IExternal>, std::shared_ptr<CLWifiAccessPointLocationService>)", "%s\n", v30);
                  if (v30 != (char *)buf) {
                    free(v30);
                  }
                }
              }
              id v26 = [*(id *)(a1 + 40) newTimer];
              *(void *)(a1 + 136) = v26;
              v33[0] = _NSConcreteStackBlock;
              v33[1] = 3221225472;
              v33[2] = sub_100685380;
              v33[3] = &unk_1022A3020;
              v33[4] = a1;
              [v26 setHandler:v33];
              id v27 = [*(id *)(a1 + 40) newTimer];
              *(void *)(a1 + 144) = v27;
              v32[0] = _NSConcreteStackBlock;
              v32[1] = 3221225472;
              v32[2] = sub_100685554;
              v32[3] = &unk_1022A3020;
              v32[4] = a1;
              [v27 setHandler:v32];
              sub_100465CD0(a1 + 3680);
              BOOL v31 = 0;
              sub_1000C7F88(buf);
              int v28 = sub_1000D2988(*(uint64_t *)buf, "AlwaysAlsRequestEverything", &v31);
              if (v31) {
                int v29 = v28;
              }
              else {
                int v29 = 0;
              }
              if (*(void *)&buf[8]) {
                sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
              }
              if (v29) {
                *(unsigned char *)(a1 + 360) = 1;
              }
              sub_100D8F310(buf);
              sub_100D8FA34(*(uint64_t *)buf);
              if (*(void *)&buf[8]) {
                sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
              }
              sub_100E0453C();
            }
          }
        }
      }
    }
  }
}

void sub_10068526C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  sub_100465C7C(a14);
  sub_1000D7DCC(a11);
  sub_100685728(a12);
  uint64_t v16 = *(void *)(v14 + 160);
  *(void *)(v14 + 160) = 0;
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
  }
  int v17 = *(std::__shared_weak_count **)(v14 + 128);
  if (v17) {
    sub_1000DB0A0(v17);
  }
  sub_1006B7BEC(v14);
  _Unwind_Resume(a1);
}

void sub_100685380(uint64_t a1)
{
}

void sub_100685388(uint64_t a1)
{
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
  }
  uint64_t v2 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, clienttimer", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    int v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onClientTimer()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  v4[0] = 27;
  sub_1000E0AA0(a1);
  sub_1000D7B80((uint64_t)v4);
}

void sub_100685538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
}

void sub_100685554(uint64_t a1)
{
}

void sub_10068555C(uint64_t a1)
{
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
  }
  uint64_t v2 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, wsbtimer", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    int v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onWsbTimer()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  v4[0] = 28;
  sub_1000E0AA0(a1);
  sub_1000D7B80((uint64_t)v4);
}

void sub_10068570C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
}

uint64_t sub_100685728(uint64_t a1)
{
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2) {
    sub_1000DB0A0(v2);
  }
  int v3 = *(std::__shared_weak_count **)(a1 + 8);
  if (v3) {
    sub_1000DB0A0(v3);
  }
  return a1;
}

uint64_t sub_100685774(uint64_t a1)
{
  *(void *)a1 = off_1022C1E20;
  sub_100686BE8(a1);

  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  sub_100465F78((void *)(a1 + 3680));
  if (*(void *)(a1 + 160))
  {
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    uint64_t v2 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "@WifiLogic, unregistering for leeched Cell location notification", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      }
      int v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual CLWifiLocationProvider::~CLWifiLocationProvider()", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
    [*(id *)(*(void *)(a1 + 160) + 16) unregister:*(void *)(*(void *)(a1 + 160) + 8) forNotification:5];
  }
  sub_100465C7C(a1 + 3680);
  sub_1000D7DCC(a1 + 224);
  if (*(char *)(a1 + 223) < 0) {
    operator delete(*(void **)(a1 + 200));
  }
  int v3 = *(std::__shared_weak_count **)(a1 + 192);
  if (v3) {
    sub_1000DB0A0(v3);
  }
  int v4 = *(std::__shared_weak_count **)(a1 + 176);
  if (v4) {
    sub_1000DB0A0(v4);
  }
  uint64_t v5 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  int v6 = *(std::__shared_weak_count **)(a1 + 128);
  if (v6) {
    sub_1000DB0A0(v6);
  }
  sub_1006B7BEC(a1);
  return a1;
}

void sub_1006859E4(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

void sub_1006859F4(uint64_t a1)
{
  sub_100685774(a1);

  operator delete();
}

uint64_t sub_100685A2C(uint64_t a1, unsigned int *a2)
{
  sub_1000B015C();
  if (*a2 > 0x16 || ((1 << *a2) & 0x400019) == 0)
  {
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    uint64_t v15 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v16 = sub_10008A168(*a2);
      *(_DWORD *)uint64_t buf = 136446210;
      uint64_t v32 = v16;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "@WifiLoc, miscregister, %{public}s", buf, 0xCu);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_18;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    uint64_t v20 = sub_10008A168(*a2);
    int v23 = 136446210;
    long long v24 = v20;
    uint64_t v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLWifiLocationProvider::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v14);
  }
  else
  {
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    uint64_t v5 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = sub_10008A168(*a2);
      *(_DWORD *)uint64_t buf = 0;
      int v7 = sub_1001072EC(a1, (int *)buf, 1);
      *(_DWORD *)uint64_t buf = 3;
      int v8 = sub_1001072EC(a1, (int *)buf, 1);
      *(_DWORD *)uint64_t buf = 4;
      int v9 = sub_1001072EC(a1, (int *)buf, 1);
      *(_DWORD *)uint64_t buf = 136446978;
      uint64_t v32 = v6;
      __int16 v33 = 1026;
      int v34 = v7;
      __int16 v35 = 1026;
      int v36 = v8;
      __int16 v37 = 1026;
      int v38 = v9;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "@WifiLogic, entry, register, notification, %{public}s, lsb, %{public}d, %{public}d, %{public}d", buf, 0x1Eu);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_18;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    uint64_t v10 = sub_10008A168(*a2);
    int v23 = 0;
    int v11 = sub_1001072EC(a1, &v23, 1);
    int v23 = 3;
    int v12 = sub_1001072EC(a1, &v23, 1);
    int v23 = 4;
    int v13 = sub_1001072EC(a1, &v23, 1);
    int v23 = 136446978;
    long long v24 = v10;
    __int16 v25 = 1026;
    int v26 = v11;
    __int16 v27 = 1026;
    int v28 = v12;
    __int16 v29 = 1026;
    int v30 = v13;
    uint64_t v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLWifiLocationProvider::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v14);
  }
  if (v14 != (char *)buf) {
    free(v14);
  }
LABEL_18:
  int v23 = 0;
  unsigned int v17 = *a2;
  if (!*a2) {
    goto LABEL_21;
  }
  if (v17 == 22)
  {
    (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 24))(*(void *)(a1 + 120), 12);
    (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 40))(*(void *)(a1 + 120), 3);
    (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 40))(*(void *)(a1 + 120), 2);
    (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 40))(*(void *)(a1 + 120), 1);
    (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 48))(*(void *)(a1 + 120), 3);
    (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 48))(*(void *)(a1 + 120), 6);
    goto LABEL_29;
  }
  if (v17 == 3)
  {
LABEL_21:
    (*(void (**)(void, void))(**(void **)(a1 + 120) + 32))(*(void *)(a1 + 120), 0);
    if (!*a2)
    {
      (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 56))(*(void *)(a1 + 120), 7);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      }
      uint64_t v18 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "@WifiEntry, register for odometer notification", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
        }
        double v21 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLWifiLocationProvider::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v21);
        if (v21 != (char *)buf) {
          free(v21);
        }
      }
    }
    (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 40))(*(void *)(a1 + 120), 3);
    (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 40))(*(void *)(a1 + 120), 1);
    (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 48))(*(void *)(a1 + 120), 3);
    (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 48))(*(void *)(a1 + 120), 6);
    (*(void (**)(void, const char *))(**(void **)(a1 + 120) + 152))(*(void *)(a1 + 120), "CLWifiLocationProvider");
    *(_DWORD *)uint64_t buf = *a2;
    sub_10068A3A0(&v23, (int *)buf);
    sub_1000DFA18((uint64_t)v22, (uint64_t)&v23);
    sub_1000E0AA0(a1);
    sub_1000D7B80((uint64_t)v22);
  }
LABEL_29:
  sub_1000D7B80((uint64_t)&v23);
  return 1;
}

void sub_10068621C(_Unwind_Exception *a1)
{
}

uint64_t sub_100686250(uint64_t a1, unsigned int *a2)
{
  sub_1006B7E64(a1);
  v42[0] = 0;
  if (*a2 > 0x16 || ((1 << *a2) & 0x400019) == 0)
  {
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    uint64_t v15 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v16 = sub_10008A168(*a2);
      *(_DWORD *)uint64_t buf = 136446210;
      __int16 v35 = v16;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "@WifiLoc, miscunregister, %{public}s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      }
      double v21 = sub_10008A168(*a2);
      int v26 = 136446210;
      __int16 v27 = v21;
      uint64_t v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLWifiLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v14);
      goto LABEL_44;
    }
  }
  else
  {
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    uint64_t v5 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      int v6 = sub_10008A168(*a2);
      int v26 = 0;
      int v7 = sub_1001072EC(a1, &v26, 1);
      int v26 = 3;
      int v8 = sub_1001072EC(a1, &v26, 1);
      int v26 = 4;
      int v9 = sub_1001072EC(a1, &v26, 1);
      *(_DWORD *)uint64_t buf = 136446978;
      __int16 v35 = v6;
      __int16 v36 = 1026;
      int v37 = v7;
      __int16 v38 = 1026;
      int v39 = v8;
      __int16 v40 = 1026;
      int v41 = v9;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "@WifiLogic, entry, unregister, notification, %{public}s, lsb, %{public}d, %{public}d, %{public}d", buf, 0x1Eu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      }
      uint64_t v10 = sub_10008A168(*a2);
      int v24 = 0;
      int v11 = sub_1001072EC(a1, &v24, 1);
      int v24 = 3;
      int v12 = sub_1001072EC(a1, &v24, 1);
      int v24 = 4;
      int v13 = sub_1001072EC(a1, &v24, 1);
      int v26 = 136446978;
      __int16 v27 = v10;
      __int16 v28 = 1026;
      int v29 = v11;
      __int16 v30 = 1026;
      int v31 = v12;
      __int16 v32 = 1026;
      int v33 = v13;
      uint64_t v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLWifiLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v14);
LABEL_44:
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
  }
  unsigned int v17 = *a2;
  if (!*a2)
  {
LABEL_21:
    *(_DWORD *)uint64_t buf = 0;
    if (!sub_1001072EC(a1, (int *)buf, 1))
    {
      (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 96))(*(void *)(a1 + 120), 7);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      }
      uint64_t v18 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "@WifiEntry, unregister for odometer notification", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
        }
        LOWORD(v26) = 0;
        int v22 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLWifiLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v22);
        if (v22 != (char *)buf) {
          free(v22);
        }
      }
    }
    *(_DWORD *)uint64_t buf = 0;
    if (!sub_1001072EC(a1, (int *)buf, 1))
    {
      *(_DWORD *)uint64_t buf = 3;
      if (!sub_1001072EC(a1, (int *)buf, 1))
      {
        (*(void (**)(void, void))(**(void **)(a1 + 120) + 72))(*(void *)(a1 + 120), 0);
        *(_DWORD *)uint64_t buf = 22;
        if (!sub_1001072EC(a1, (int *)buf, 1))
        {
          (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 80))(*(void *)(a1 + 120), 3);
          (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 80))(*(void *)(a1 + 120), 1);
          (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 88))(*(void *)(a1 + 120), 6);
        }
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
        }
        int v19 = qword_1024193B8;
        if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "@WifiEntry, noregistrants", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193B0 != -1) {
            dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
          }
          LOWORD(v26) = 0;
          int v23 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLWifiLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v23);
          if (v23 != (char *)buf) {
            free(v23);
          }
        }
      }
    }
    *(_DWORD *)uint64_t buf = *a2;
    sub_10068AB54(v42, (int *)buf);
    sub_1000DFA18((uint64_t)v25, (uint64_t)v42);
    sub_1000E0AA0(a1);
    sub_1000D7B80((uint64_t)v25);
    goto LABEL_40;
  }
  if (v17 != 22)
  {
    if (v17 != 3) {
      goto LABEL_40;
    }
    goto LABEL_21;
  }
  (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 64))(*(void *)(a1 + 120), 12);
  *(_DWORD *)uint64_t buf = 0;
  if (!sub_1001072EC(a1, (int *)buf, 1))
  {
    *(_DWORD *)uint64_t buf = 3;
    if (!sub_1001072EC(a1, (int *)buf, 1))
    {
      (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 80))(*(void *)(a1 + 120), 3);
      (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 80))(*(void *)(a1 + 120), 2);
      (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 80))(*(void *)(a1 + 120), 1);
      (*(void (**)(void, uint64_t))(**(void **)(a1 + 120) + 88))(*(void *)(a1 + 120), 6);
    }
  }
LABEL_40:
  sub_1000D7B80((uint64_t)v42);
  return 1;
}

void sub_100686B70(_Unwind_Exception *a1)
{
}

id sub_100686BE8(uint64_t a1)
{
  sub_1006B7C30(a1);
  (*(void (**)(void))(**(void **)(a1 + 120) + 16))(*(void *)(a1 + 120));
  [*(id *)(a1 + 136) invalidate];
  uint64_t v2 = *(void **)(a1 + 144);

  return [v2 invalidate];
}

void sub_100686C50(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  v65[0] = 0;
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
  }
  int v7 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
  {
    int v8 = sub_100D54E8C(*a3);
    *(_DWORD *)uint64_t buf = 136446210;
    *(void *)&uint8_t buf[4] = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, wifiNotify, %{public}s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    double v21 = sub_100D54E8C(*a3);
    *(_DWORD *)__int16 v53 = 136446210;
    *(void *)&v53[4] = v21;
    int v22 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v22);
    if (v22 != buf) {
      free(v22);
    }
  }
  switch(*a3)
  {
    case 1:
      *(_DWORD *)uint64_t buf = *(unsigned char *)a4 == 0;
      sub_10068B1C8(v65, (int *)buf);
      goto LABEL_81;
    case 2:
      sub_10068ACA8(v65);
      goto LABEL_81;
    case 3:
      if (*(unsigned char *)(a4 + 96) && *(int *)(a4 + 48) >= 1)
      {
        sub_1005880F4((uint64_t)v53, a4 + 8);
      }
      else
      {
        v53[0] = 0;
        char v55 = 0;
      }
      unsigned int v17 = (void *)(a4 + 112);
      uint64_t v18 = *(void *)(a4 + 104);
      sub_100689FE8((uint64_t)v41, *(void **)(a4 + 112), *(void **)(a4 + 120));
      v41[5] = v18;
      char v19 = *(unsigned char *)(a4 + 1);
      sub_1000E23EC(v37, (uint64_t)v53);
      sub_10068A064((uint64_t)buf, v41, v19, (uint64_t)v37);
      sub_10068B31C(v65, (uint64_t *)buf);
      if (v64 && v61 < 0) {
        operator delete(v60);
      }
      sub_1000DB114((uint64_t)buf);
      if (v40 && v39 < 0) {
        operator delete(v38);
      }
      sub_1000DB114((uint64_t)v41);
      sub_10093A758(buf);
      sub_10093B5B8(*(uint64_t *)buf, v17);
      if (*(void *)&buf[8]) {
        sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
      }
      if (v55 && v54 < 0) {
        operator delete(*(void **)&v53[8]);
      }
      goto LABEL_81;
    case 4:
      sub_10068B5D0(v65);
      goto LABEL_81;
    case 5:
      buf[0] = *(unsigned char *)(a4 + 1);
      sub_10068ADDC((uint64_t)v65, buf);
      goto LABEL_81;
    case 6:
      sub_1006879F0(buf);
      sub_10068B704(v65, (uint64_t)buf);
      if (v62 && v57 < 0) {
        operator delete(*(void **)&buf[8]);
      }
      if (!*(unsigned char *)(a4 + 96) || *(int *)(a4 + 48) < 1) {
        goto LABEL_32;
      }
      sub_1005880F4((uint64_t)v33, a4 + 8);
      sub_1000E23EC(buf, (uint64_t)v33);
      sub_10068B704(v65, (uint64_t)buf);
      if (v62 && v57 < 0) {
        operator delete(*(void **)&buf[8]);
      }
      if (!v36 || (v35 & 0x80000000) == 0) {
        goto LABEL_32;
      }
      int v9 = v34;
      goto LABEL_31;
    case 7:
      sub_1006879F0(buf);
      sub_10068B914(v65, (uint64_t)buf);
      if (v62 && v57 < 0) {
        operator delete(*(void **)&buf[8]);
      }
      if (!*(unsigned char *)(a4 + 96) || *(int *)(a4 + 48) < 1) {
        goto LABEL_32;
      }
      sub_1005880F4((uint64_t)v29, a4 + 8);
      sub_1000E23EC(buf, (uint64_t)v29);
      sub_10068B914(v65, (uint64_t)buf);
      if (v62 && v57 < 0) {
        operator delete(*(void **)&buf[8]);
      }
      if (!v32 || (v31 & 0x80000000) == 0) {
        goto LABEL_32;
      }
      int v9 = v30;
LABEL_31:
      operator delete(v9);
LABEL_32:
      sub_100687A68(a3, a4);
      goto LABEL_81;
    case 12:
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      sub_1000DA6E8(&v48, *(void *)(a4 + 112), *(void *)(a4 + 120), 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(void *)(a4 + 120) - *(void *)(a4 + 112)) >> 3));
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      }
      uint64_t v10 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v12 = v48;
        uint64_t v11 = v49;
        int v13 = sub_100D54ED8(*(_DWORD *)(a4 + 140));
        *(_DWORD *)uint64_t buf = 134218242;
        *(void *)&uint8_t buf[4] = 0x2E8BA2E8BA2E8BA3 * ((v11 - v12) >> 3);
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v13;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "@Wsb, NotificationScanCache, aps, %zu, source, %{public}s", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
        }
        uint64_t v24 = v48;
        uint64_t v23 = v49;
        __int16 v25 = sub_100D54ED8(*(_DWORD *)(a4 + 140));
        *(_DWORD *)__int16 v53 = 134218242;
        *(void *)&v53[4] = 0x2E8BA2E8BA2E8BA3 * ((v23 - v24) >> 3);
        *(_WORD *)&v53[12] = 2082;
        *(void *)&v53[14] = v25;
        int v26 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v26);
        if (v26 != buf) {
          free(v26);
        }
      }
      sub_10093A758(v53);
      uint64_t v14 = *(void **)v53;
      memset(v47, 0, sizeof(v47));
      sub_1000DA6E8(v47, v48, v49, 0x2E8BA2E8BA2E8BA3 * ((v49 - v48) >> 3));
      sub_100687878((uint64_t)buf, v47, *(_DWORD *)(a4 + 140));
      sub_10093B1CC(v14, (uint64_t)buf);
      if (v63 && v59 < 0) {
        operator delete(v58);
      }
      uint64_t v51 = (void **)buf;
      sub_1000D7F78(&v51);
      uint64_t v51 = (void **)v47;
      sub_1000D7F78(&v51);
      if (*(void *)&v53[8]) {
        sub_1000DB0A0(*(std::__shared_weak_count **)&v53[8]);
      }
      if (sub_10111900C(*(_DWORD *)(a4 + 140)))
      {
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
        }
        uint64_t v15 = qword_1024193B8;
        if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v16 = sub_100D54ED8(*(_DWORD *)(a4 + 140));
          *(_DWORD *)uint64_t buf = 136446210;
          *(void *)&uint8_t buf[4] = v16;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "@Wsb, ignoring NotificationScanCache source %{public}s", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193B0 != -1) {
            dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
          }
          __int16 v27 = sub_100D54ED8(*(_DWORD *)(a4 + 140));
          *(_DWORD *)__int16 v53 = 136446210;
          *(void *)&v53[4] = v27;
          __int16 v28 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v28);
          if (v28 != buf) {
            free(v28);
          }
        }
        *(void *)uint64_t buf = &v48;
        sub_1000D7F78((void ***)buf);
      }
      else
      {
        if (*(unsigned char *)(a4 + 96) && *(int *)(a4 + 48) >= 1)
        {
          sub_1005880F4((uint64_t)v53, a4 + 8);
        }
        else
        {
          v53[0] = 0;
          char v55 = 0;
        }
        memset(v46, 0, sizeof(v46));
        sub_1000DA6E8(v46, v48, v49, 0x2E8BA2E8BA2E8BA3 * ((v49 - v48) >> 3));
        int v20 = *(_DWORD *)(a4 + 140);
        sub_1000E23EC(v42, (uint64_t)v53);
        sub_100689F74((uint64_t)buf, (uint64_t)v46, v20, (uint64_t)v42);
        sub_10068AF30(v65, (uint64_t)buf);
        if (v63 && v59 < 0) {
          operator delete(v58);
        }
        uint64_t v51 = (void **)buf;
        sub_1000D7F78(&v51);
        if (v45 && v44 < 0) {
          operator delete(v43);
        }
        uint64_t v51 = (void **)v46;
        sub_1000D7F78(&v51);
        if (v55 && v54 < 0) {
          operator delete(*(void **)&v53[8]);
        }
        *(void *)uint64_t buf = &v48;
        sub_1000D7F78((void ***)buf);
LABEL_81:
        sub_10068BB24((uint64_t)v52, (uint64_t)v65);
        sub_1000E0AA0(a1);
        sub_1000D7B80((uint64_t)v52);
      }
LABEL_82:
      sub_1000D7B80((uint64_t)v65);
      return;
    default:
      goto LABEL_82;
  }
}

void sub_100687604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x5A0] = (unint64_t)&a72;
  sub_1000D7F78((void ***)&STACK[0x5A0]);
  sub_1000D7B80((uint64_t)&STACK[0xC00]);
  _Unwind_Resume(a1);
}

uint64_t sub_100687878(uint64_t a1, uint64_t *a2, int a3)
{
  memset(v10, 0, sizeof(v10));
  sub_1000DA6E8(v10, *a2, a2[1], 0x2E8BA2E8BA2E8BA3 * ((a2[1] - *a2) >> 3));
  v6[0] = 0;
  char v9 = 0;
  sub_100689F74(a1, (uint64_t)v10, a3, (uint64_t)v6);
  if (v9 && v8 < 0) {
    operator delete(__p);
  }
  uint64_t v11 = (void **)v10;
  sub_1000D7F78(&v11);
  return a1;
}

void sub_100687920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (a23)
  {
    if (a15 < 0) {
      operator delete(__p);
    }
  }
  *(void *)(v23 - 24) = v23 - 48;
  sub_1000D7F78((void ***)(v23 - 24));
  _Unwind_Resume(a1);
}

uint64_t sub_100687954(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 120) && *(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  int v3 = (void **)a1;
  sub_1000D7F78(&v3);
  return a1;
}

uint64_t sub_1006879A4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 144) && *(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }

  return sub_1000DB114(a1);
}

unsigned char *sub_1006879F0(unsigned char *a1)
{
  v3[0] = 0;
  char v6 = 0;
  sub_1000E23EC(a1, (uint64_t)v3);
  if (v6 && v5 < 0) {
    operator delete(__p);
  }
  return a1;
}

void sub_100687A44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (a23)
  {
    if (a15 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_100687A68(int *a1, uint64_t a2)
{
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
  }
  int v4 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
  {
    char v5 = sub_100D54E8C(*a1);
    sub_100D54C68(a2 + 8);
    char v6 = v19 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)uint64_t buf = 136380931;
    *(void *)&uint8_t buf[4] = v5;
    __int16 v11 = 2081;
    uint64_t v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "@WifiLogic, wifi notification %{private}s, associated state, %{private}s", buf, 0x16u);
    if (v19 < 0) {
      operator delete(__p[0]);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    int v7 = sub_100D54E8C(*a1);
    sub_100D54C68(a2 + 8);
    if (v13 >= 0) {
      char v8 = buf;
    }
    else {
      char v8 = *(unsigned char **)buf;
    }
    int v14 = 136380931;
    uint64_t v15 = v7;
    __int16 v16 = 2081;
    unsigned int v17 = v8;
    char v9 = (char *)_os_log_send_and_compose_impl();
    if (v13 < 0) {
      operator delete(*(void **)buf);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void logAssociatedStateFromWifiNotification(const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v9);
    if (v9 != (char *)__p) {
      free(v9);
    }
  }
}

void sub_100687CB8(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
  }
  int v7 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *a3;
    *(_DWORD *)uint64_t buf = 67240192;
    LODWORD(v41) = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, odometer, %{public}d,", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    int v19 = *a3;
    int v32 = 67240192;
    LODWORD(v33) = v19;
    int v20 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onOdometerNotification(int, const CLOdometerNotifier_Type::Notification &, const CLOdometerNotifier_Type::NotificationData &)", "%s\n", v20);
    if (v20 != (char *)buf) {
      free(v20);
    }
  }
  if (*a3 == 7)
  {
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    uint64_t v10 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v11 = *(void *)(a4 + 8);
      int v12 = *(_DWORD *)(a4 + 16);
      int v13 = *(_DWORD *)(a4 + 20);
      *(_DWORD *)uint64_t buf = 134349824;
      uint64_t v41 = v11;
      __int16 v42 = 1026;
      int v43 = v12;
      __int16 v44 = 1026;
      int v45 = v13;
      __int16 v46 = 2050;
      CFAbsoluteTime v47 = Current;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "received odometer update entry,startTime,%{public}lf,elevationAscended,%{public}u,elevationDescended,%{public}u,now,%{public}.lf", buf, 0x22u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      }
      uint64_t v21 = *(void *)(a4 + 8);
      int v22 = *(_DWORD *)(a4 + 16);
      int v23 = *(_DWORD *)(a4 + 20);
      int v32 = 134349824;
      uint64_t v33 = v21;
      __int16 v34 = 1026;
      int v35 = v22;
      __int16 v36 = 1026;
      int v37 = v23;
      __int16 v38 = 2050;
      CFAbsoluteTime v39 = Current;
      uint64_t v24 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onOdometerNotification(int, const CLOdometerNotifier_Type::Notification &, const CLOdometerNotifier_Type::NotificationData &)", "%s\n", v24);
      if (v24 != (char *)buf) {
        free(v24);
      }
    }
    double v14 = *(double *)(a4 + 8);
    if ((*(void *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v14 < 0.0)
    {
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C20C0);
      }
      uint64_t v15 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_INFO))
      {
        uint64_t v16 = *(void *)(a4 + 8);
        int v17 = *(_DWORD *)(a4 + 16);
        int v18 = *(_DWORD *)(a4 + 20);
        *(_DWORD *)uint64_t buf = 134349568;
        uint64_t v41 = v16;
        __int16 v42 = 1026;
        int v43 = v17;
        __int16 v44 = 1026;
        int v45 = v18;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "#Warning,received invalid elevation entry,startTime,%{public}lf,elevationAscended,%{public}u,elevationDescended,%{public}u", buf, 0x18u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022C20C0);
        }
        uint64_t v25 = *(void *)(a4 + 8);
        int v26 = *(_DWORD *)(a4 + 16);
        int v27 = *(_DWORD *)(a4 + 20);
        int v32 = 134349568;
        uint64_t v33 = v25;
        __int16 v34 = 1026;
        int v35 = v26;
        __int16 v36 = 1026;
        int v37 = v27;
        __int16 v28 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onOdometerNotification(int, const CLOdometerNotifier_Type::Notification &, const CLOdometerNotifier_Type::NotificationData &)", "%s\n", v28);
        if (v28 != (char *)buf) {
          free(v28);
        }
      }
    }
    else
    {
      double v30 = (float)((float)(uint64_t)(*(unsigned int *)(a4 + 16) - (unint64_t)*(unsigned int *)(a4 + 20)) / 100.0);
      double v31 = v14;
      int v29 = 18;
      sub_1000E0AA0(a1);
      sub_1000D7B80((uint64_t)&v29);
    }
  }
}

void sub_10068820C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100688228(uint64_t a1, uint64_t a2, _DWORD *a3, _DWORD *a4)
{
  v11[0] = 0;
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
  }
  int v7 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, motion", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    int v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onMotionNotification(int, const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  if (!*a3)
  {
    *(_DWORD *)uint64_t buf = *a4;
    sub_10068BEBC(v11, (int *)buf);
    sub_10068BB24((uint64_t)v9, (uint64_t)v11);
    sub_1000E0AA0(a1);
    sub_1000D7B80((uint64_t)v9);
  }
  sub_1000D7B80((uint64_t)v11);
}

void sub_100688414(_Unwind_Exception *a1)
{
}

void sub_100688440(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
  }
  char v6 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, signalEnvironment", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    int v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onSignalEnvironmentNotification(int, const CLSignalEnvironmentProvider_Type::Notification &, const CLSignalEnvironmentProvider_Type::NotificationData &)", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  v8[2] = *a4;
  v8[0] = 15;
  sub_1000E0AA0(a1);
  sub_1000D7B80((uint64_t)v8);
}

void sub_1006885FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
}

void sub_100688618(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  v16[0] = 0;
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
  }
  int v7 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, clientNotify", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    uint64_t v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
  }
  if (*a3 == 4)
  {
    *(_DWORD *)uint64_t buf = *(_DWORD *)(a4 + 188) == 1;
    sub_10068C070(v16, (int *)buf);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    char v9 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "@WifiLogic, entry, event, location services toggle", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      }
      int v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v12);
      if (v12 != (char *)buf) {
        free(v12);
      }
    }
    if (*(_DWORD *)(a4 + 188) == 1) {
      goto LABEL_27;
    }
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    uint64_t v10 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "@WifiLogic, #Warning Location Services disabled, clearing database entries", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2))
    {
LABEL_26:
      sub_100688BDC();
LABEL_27:
      sub_10068BB24((uint64_t)v14, (uint64_t)v16);
      sub_1000E0AA0(a1);
      sub_1000D7B80((uint64_t)v14);
      goto LABEL_28;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 == -1)
    {
LABEL_38:
      int v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onClientNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
      goto LABEL_26;
    }
LABEL_40:
    dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    goto LABEL_38;
  }
  if (!*a3)
  {
    *(_DWORD *)uint64_t buf = 2;
    sub_10068C070(v16, (int *)buf);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    int v8 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "@WifiLogic, entry, event, privacy reset", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_26;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 == -1) {
      goto LABEL_38;
    }
    goto LABEL_40;
  }
LABEL_28:
  sub_1000D7B80((uint64_t)v16);
}

void sub_100688BA0(_Unwind_Exception *a1)
{
}

void sub_100688BDC()
{
  sub_100D8F310(&v0);
  sub_100D8F898(v0);
  if (v1) {
    sub_1000DB0A0(v1);
  }
}

void sub_100688C1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100688C34(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  v12[0] = 0;
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
  }
  int v7 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(buf[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, alsNotify", (uint8_t *)buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    char v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onNetworkLocationNotification(int, const CLNetworkLocationProvider_Type::Notification &, const CLNetworkLocationProvider_Type::NotificationData &)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  int v8 = *a3;
  if (*a3 == 1)
  {
    *(void *)uint64_t buf = *(void *)a4;
    sub_10068C548((uint64_t)v12, buf);
    goto LABEL_13;
  }
  if (v8 == 2)
  {
    if (!*(_DWORD *)(a4 + 4))
    {
      buf[0] = *(_DWORD *)a4;
      sub_10068C3E4(v12, buf);
    }
    goto LABEL_13;
  }
  if (v8 == 3)
  {
    buf[0] = *(_DWORD *)a4;
    sub_10068C230(v12, buf);
LABEL_13:
    sub_10068BB24((uint64_t)v10, (uint64_t)v12);
    sub_1000E0AA0(a1);
    sub_1000D7B80((uint64_t)v10);
  }
  sub_1000D7B80((uint64_t)v12);
}

void sub_100688E6C(_Unwind_Exception *a1)
{
}

void sub_100688EA0(uint64_t a1, uint64_t a2, int *a3, int32x2_t *a4)
{
  v23[0] = 0;
  int v6 = *a3;
  if (*a3 > 14)
  {
    if (v6 == 15)
    {
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      }
      uint64_t v11 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
      {
        int v12 = a4->u8[0];
        buf.i32[0] = 67240192;
        buf.i32[1] = v12;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, batterysaver, %{public}d", (uint8_t *)&buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
        }
        __int32 v17 = a4->u8[0];
        int v20 = 67240192;
        __int32 v21 = v17;
        int v18 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v18);
        if (v18 != (char *)&buf) {
          free(v18);
        }
      }
      buf.i8[0] = a4->i8[0];
      sub_10068C868((uint64_t)v23, &buf);
      goto LABEL_30;
    }
    if (v6 == 16)
    {
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      }
      char v9 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
      {
        buf.i16[0] = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, heartbeat", (uint8_t *)&buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
        }
        LOWORD(v20) = 0;
        uint64_t v15 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v15);
        if (v15 != (char *)&buf) {
          free(v15);
        }
      }
      sub_10068CBAC(v23);
      goto LABEL_30;
    }
  }
  else
  {
    if (v6 == 3)
    {
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      }
      uint64_t v10 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
      {
        buf.i16[0] = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, wake", (uint8_t *)&buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
        }
        LOWORD(v20) = 0;
        uint64_t v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v16);
        if (v16 != (char *)&buf) {
          free(v16);
        }
      }
      sub_10068CA1C(v23);
      goto LABEL_30;
    }
    if (v6 == 6)
    {
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      }
      int v7 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
      {
        __int32 v8 = a4->i32[1];
        buf.i32[0] = 67240192;
        buf.i32[1] = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, reach, %{public}d", (uint8_t *)&buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(&buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
        }
        __int32 v13 = a4->i32[1];
        int v20 = 67240192;
        __int32 v21 = v13;
        double v14 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v14);
        if (v14 != (char *)&buf) {
          free(v14);
        }
      }
      int32x2_t buf = vrev64_s32(*a4);
      sub_10068C6B4((uint64_t)v23, &buf);
LABEL_30:
      sub_10068BB24((uint64_t)v19, (uint64_t)v23);
      sub_1000E0AA0(a1);
      sub_1000D7B80((uint64_t)v19);
    }
  }
  sub_1000D7B80((uint64_t)v23);
}

void sub_1006894B0(_Unwind_Exception *a1)
{
}

void sub_1006894F4(uint64_t a1, uint64_t a2, _DWORD *a3, uint8_t *a4)
{
  v15[0] = 0;
  if (*a3 == 5)
  {
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    int v6 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *a4;
      *(_DWORD *)int32x2_t buf = 67240192;
      int v14 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "@WifiLogic, entry, companionnearby, %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      }
      int v8 = *a4;
      int v11 = 67240192;
      int v12 = v8;
      char v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, const CLCompanionNotifier_Type::NotificationData &)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
    sub_100103240();
    if (sub_10010145C())
    {
      buf[0] = *a4;
      sub_10068CD3C((uint64_t)v15, buf);
      sub_10068BB24((uint64_t)v10, (uint64_t)v15);
      sub_1000E0AA0(a1);
      sub_1000D7B80((uint64_t)v10);
    }
  }
  sub_1000D7B80((uint64_t)v15);
}

void sub_100689704(_Unwind_Exception *a1)
{
}

id sub_100689730(uint64_t a1, double a2, double a3)
{
  if (a3 == 1.79769313e308)
  {
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    int v6 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "@WifiFlow, nexttimer, off", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    }
  }
  else
  {
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
    }
    char v5 = qword_1024193B8;
    if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int32x2_t buf = 67240192;
      int v10 = (int)a3;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "@WifiFlow, nexttimer, %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193B0 == -1)
      {
LABEL_16:
        int v8 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationProvider::scheduleNextTimer(CFAbsoluteTime, CFTimeInterval)", "%s\n", v8);
        if (v8 != (char *)buf) {
          free(v8);
        }
        return [*(id *)(a1 + 136) setNextFireDelay:a3];
      }
LABEL_18:
      dispatch_once(&qword_1024193B0, &stru_1022C1FD0);
      goto LABEL_16;
    }
  }
  return [*(id *)(a1 + 136) setNextFireDelay:a3];
}

void sub_1006899D8()
{
}

void sub_100689A90(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete();
}

void sub_100689ACC()
{
}

void sub_100689B8C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete();
}

void sub_100689BC8(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100689BF8(id a1)
{
  qword_1024193B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_100689C28(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

uint64_t sub_100689C58(uint64_t a1, uint64_t *a2, long long *a3)
{
  char v5 = (std::__shared_weak_count *)a2[1];
  uint64_t v10 = *a2;
  int v11 = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100B4A6A8((void *)a1, &v10);
  if (v11) {
    sub_1000DB0A0(v11);
  }
  sub_100689D40(&v9);
  *(_OWORD *)(a1 + 16) = v9;
  int v6 = (unsigned char *)(a1 + 32);
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000DC48C(v6, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    *(void *)(a1 + 48) = *((void *)a3 + 2);
    *(_OWORD *)int v6 = v7;
  }
  return a1;
}

void sub_100689D04(_Unwind_Exception *exception_object)
{
  int v3 = *(std::__shared_weak_count **)(v1 + 24);
  if (v3) {
    sub_1000DB0A0(v3);
  }
  int v4 = *(std::__shared_weak_count **)(v1 + 8);
  if (v4) {
    sub_1000DB0A0(v4);
  }
  _Unwind_Resume(exception_object);
}

void sub_100689D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (!a13) {
    JUMPOUT(0x100689D28);
  }
  JUMPOUT(0x100689D24);
}

void *sub_100689D40@<X0>(void *a1@<X8>)
{
  uint64_t v2 = operator new(0x90uLL);
  double result = sub_100689D9C(v2);
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_100689D88(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_100689D9C(void *a1)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1022C2020;
  sub_10108C214(a1 + 3);
  return a1;
}

void sub_100689DE4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_100689DF8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022C2020;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100689E18(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022C2020;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100689E6C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_100689E94(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  if (*((char *)a2 + 39) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 16), (void *)a2[2], a2[3]);
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *(void *)(a1 + 32) = a2[4];
    *(_OWORD *)(a1 + 16) = v5;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  long long v6 = *(_OWORD *)(a2 + 7);
  long long v7 = *(_OWORD *)(a2 + 9);
  long long v8 = *(_OWORD *)(a2 + 11);
  *(_OWORD *)(a1 + 100) = *(_OWORD *)((char *)a2 + 100);
  *(_OWORD *)(a1 + 88) = v8;
  *(_OWORD *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 56) = v6;
  long long v9 = (unsigned char *)(a1 + 120);
  if (*((char *)a2 + 143) < 0)
  {
    sub_1000DC48C(v9, (void *)a2[15], a2[16]);
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 15);
    *(void *)(a1 + 136) = a2[17];
    *(_OWORD *)long long v9 = v10;
  }
  return a1;
}

void sub_100689F58(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100689F74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(_DWORD *)(a1 + 24) = a3;
  sub_1000E23EC((unsigned char *)(a1 + 32), a4);
  return a1;
}

void sub_100689FD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000D7F78((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100689FE8(uint64_t a1, void *a2, void *a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a2 != a3)
  {
    long long v5 = a2;
    do
    {
      sub_10050EED0(a1, v5, (uint64_t)v5);
      v5 += 11;
    }
    while (v5 != a3);
  }
  return a1;
}

void sub_10068A050(_Unwind_Exception *a1)
{
  sub_1000DB114(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10068A064(uint64_t a1, uint64_t *a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_1000E2908(a1, a2);
  *(void *)(v8 + 40) = a2[5];
  *(unsigned char *)(v8 + 48) = a3;
  sub_1000E23EC((unsigned char *)(v8 + 56), a4);
  return a1;
}

void sub_10068A0B8(_Unwind_Exception *a1)
{
  sub_1000DB114(v1);
  _Unwind_Resume(a1);
}

void sub_10068A0CC(id a1)
{
  qword_102419388 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_10068A19C(id a1)
{
  qword_102419658 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

void *sub_10068A1CC@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x30uLL);
  double result = sub_10068A228(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_10068A214(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_10068A228(void *a1, uint64_t *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1022C2110;
  sub_10068A334((uint64_t)&v4, a1 + 3, a2);
  return a1;
}

void sub_10068A284(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_10068A298(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022C2110;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10068A2B8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022C2110;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10068A30C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_10068A334(uint64_t a1, void *a2, uint64_t *a3)
{
  int v3 = (std::__shared_weak_count *)a3[1];
  uint64_t v4 = *a3;
  long long v5 = v3;
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100A1A2A0(a2, &v4);
  if (v5) {
    sub_1000DB0A0(v5);
  }
}

void sub_10068A388(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10068A3A0(int *a1, int *a2)
{
  uint64_t v4 = a2;
  if ((sub_10068A450(a1, &v4) & 1) == 0)
  {
    v5[2] = *a2;
    v5[0] = 25;
    sub_1000E1494((uint64_t)a1, (uint64_t)v5);
    sub_1000D7B80((uint64_t)v5);
  }
}

void sub_10068A434(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068A450(int *a1, int **a2)
{
  uint64_t result = 0;
  unsigned int v4 = *a1 ^ (*a1 >> 31);
  if (v4 >= 0x19)
  {
    switch(v4)
    {
      case 0x19u:
        a1[2] = **a2;
        uint64_t result = 1;
        break;
      case 0x1Au:
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Du:
        return result;
      default:
        sub_10050EA98();
    }
  }
  return result;
}

double sub_10068A638(uint64_t **a1, uint64_t a2)
{
  int v3 = *a1;
  sub_10068A688(a2, *a1);
  *(void *)(a2 + 40) = v3[5];
  *(unsigned char *)(a2 + 48) = *((unsigned char *)v3 + 48);
  *(void *)&double result = sub_1000E2DB0(a2 + 56, (uint64_t)(v3 + 7)).n128_u64[0];
  return result;
}

void sub_10068A688(uint64_t a1, uint64_t *a2)
{
  sub_10068A72C(a1);
  uint64_t v4 = *a2;
  *a2 = 0;
  long long v5 = *(void **)a1;
  *(void *)a1 = v4;
  if (v5) {
    operator delete(v5);
  }
  uint64_t v8 = a2[2];
  long long v7 = a2 + 2;
  uint64_t v6 = v8;
  uint64_t v9 = *(v7 - 1);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 8) = v9;
  *(v7 - 1) = 0;
  uint64_t v10 = v7[1];
  *(void *)(a1 + 24) = v10;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)v7 + 4);
  if (v10)
  {
    unint64_t v11 = *(void *)(v6 + 8);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12) {
        v11 %= v12;
      }
    }
    else
    {
      v11 &= v12 - 1;
    }
    *(void *)(*(void *)a1 + 8 * v11) = a1 + 16;
    *long long v7 = 0;
    v7[1] = 0;
  }
}

void sub_10068A72C(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    sub_1000DB150(a1, *(void ***)(a1 + 16));
    *(void *)(a1 + 16) = 0;
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      for (uint64_t i = 0; i != v2; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0;
    }
    *(void *)(a1 + 24) = 0;
  }
}

double sub_10068A784(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_10017C740((uint64_t *)a2);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(void *)(a2 + 16) = *(void *)(v3 + 16);
  *(void *)uint64_t v3 = 0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 16) = 0;
  *(_DWORD *)(a2 + 24) = *(_DWORD *)(v3 + 24);
  *(void *)&double result = sub_1000E2DB0(a2 + 32, v3 + 32).n128_u64[0];
  return result;
}

__n128 sub_10068A7E0(_OWORD **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  long long v4 = (*a1)[1];
  *(_OWORD *)a2 = **a1;
  *(_OWORD *)(a2 + 16) = v4;
  long long v5 = v3[2];
  long long v6 = v3[3];
  long long v7 = v3[5];
  *(_OWORD *)(a2 + 64) = v3[4];
  *(_OWORD *)(a2 + 80) = v7;
  *(_OWORD *)(a2 + 32) = v5;
  *(_OWORD *)(a2 + 48) = v6;
  long long v8 = v3[6];
  long long v9 = v3[7];
  long long v10 = v3[8];
  *(_OWORD *)(a2 + 140) = *(_OWORD *)((char *)v3 + 140);
  *(_OWORD *)(a2 + 112) = v9;
  *(_OWORD *)(a2 + 128) = v10;
  *(_OWORD *)(a2 + 96) = v8;
  memcpy((void *)(a2 + 160), v3 + 10, 0x201uLL);
  long long v11 = *(_OWORD *)((char *)v3 + 680);
  *(_OWORD *)((char *)v3 + 680) = 0u;
  unint64_t v12 = *(std::__shared_weak_count **)(a2 + 688);
  *(_OWORD *)(a2 + 680) = v11;
  if (v12) {
    sub_1000DB0A0(v12);
  }
  long long v13 = *(_OWORD *)((char *)v3 + 696);
  long long v14 = *(_OWORD *)((char *)v3 + 728);
  *(_OWORD *)(a2 + 712) = *(_OWORD *)((char *)v3 + 712);
  *(_OWORD *)(a2 + 728) = v14;
  *(_OWORD *)(a2 + 696) = v13;
  __n128 result = *(__n128 *)((char *)v3 + 744);
  long long v16 = *(_OWORD *)((char *)v3 + 760);
  long long v17 = *(_OWORD *)((char *)v3 + 776);
  *(void *)(a2 + 789) = *(void *)((char *)v3 + 789);
  *(_OWORD *)(a2 + 760) = v16;
  *(_OWORD *)(a2 + 776) = v17;
  *(__n128 *)(a2 + 744) = result;
  return result;
}

__n128 sub_10068A898(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)*a1 + 8);
  *(void *)a2 = v4;
  uint64_t v5 = a2 + 16;
  if (*(char *)(a2 + 39) < 0) {
    operator delete(*(void **)v5);
  }
  long long v6 = *((_OWORD *)v3 + 1);
  *(void *)(v5 + 16) = v3[4];
  *(_OWORD *)uint64_t v5 = v6;
  *((unsigned char *)v3 + 39) = 0;
  *((unsigned char *)v3 + 16) = 0;
  long long v7 = *(_OWORD *)((char *)v3 + 100);
  long long v8 = *(_OWORD *)(v3 + 11);
  long long v9 = *(_OWORD *)(v3 + 9);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(v3 + 7);
  *(_OWORD *)(a2 + 72) = v9;
  *(_OWORD *)(a2 + 88) = v8;
  *(_OWORD *)(a2 + 100) = v7;
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(v3 + 5);
  long long v10 = (void **)(a2 + 120);
  if (*(char *)(a2 + 143) < 0) {
    operator delete(*v10);
  }
  __n128 result = *(__n128 *)(v3 + 15);
  *(void *)(a2 + 136) = v3[17];
  *(__n128 *)long long v10 = result;
  *((unsigned char *)v3 + 143) = 0;
  *((unsigned char *)v3 + 120) = 0;
  return result;
}

void sub_10068A958(uint64_t a1, uint64_t a2)
{
  sub_1000D7B80(*(void *)a1);
  uint64_t v4 = *(void *)a1;
  *(unsigned char *)(v4 + 8) = 0;
  *(unsigned char *)(v4 + 96) = 0;
  if (*(unsigned char *)(a2 + 88))
  {
    *(void *)(v4 + 8) = *(void *)a2;
    long long v5 = *(_OWORD *)(a2 + 8);
    *(void *)(v4 + 32) = *(void *)(a2 + 24);
    *(_OWORD *)(v4 + 16) = v5;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    *(void *)(a2 + 8) = 0;
    long long v6 = *(_OWORD *)(a2 + 32);
    long long v7 = *(_OWORD *)(a2 + 48);
    long long v8 = *(_OWORD *)(a2 + 64);
    *(void *)(v4 + 88) = *(void *)(a2 + 80);
    *(_OWORD *)(v4 + 72) = v8;
    *(_OWORD *)(v4 + 56) = v7;
    *(_OWORD *)(v4 + 40) = v6;
    *(unsigned char *)(v4 + 96) = 1;
  }
  **(_DWORD **)a1 = *(_DWORD *)(a1 + 8);
}

uint64_t sub_10068A9E8(uint64_t a1, uint64_t a2)
{
  sub_1000D7B80(*(void *)a1);
  uint64_t v4 = *(void *)a1;
  uint64_t result = sub_1000E2908(*(void *)a1 + 8, (uint64_t *)a2);
  *(void *)(v4 + 48) = *(void *)(a2 + 40);
  *(unsigned char *)(v4 + 56) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(v4 + 64) = 0;
  *(unsigned char *)(v4 + 152) = 0;
  if (*(unsigned char *)(a2 + 144))
  {
    *(void *)(v4 + 64) = *(void *)(a2 + 56);
    long long v6 = *(_OWORD *)(a2 + 64);
    *(void *)(v4 + 88) = *(void *)(a2 + 80);
    *(_OWORD *)(v4 + 72) = v6;
    *(void *)(a2 + 72) = 0;
    *(void *)(a2 + 80) = 0;
    *(void *)(a2 + 64) = 0;
    long long v7 = *(_OWORD *)(a2 + 88);
    long long v8 = *(_OWORD *)(a2 + 104);
    long long v9 = *(_OWORD *)(a2 + 120);
    *(void *)(v4 + 144) = *(void *)(a2 + 136);
    *(_OWORD *)(v4 + 112) = v8;
    *(_OWORD *)(v4 + 128) = v9;
    *(_OWORD *)(v4 + 96) = v7;
    *(unsigned char *)(v4 + 152) = 1;
  }
  **(_DWORD **)a1 = *(_DWORD *)(a1 + 8);
  return result;
}

void sub_10068AA9C(uint64_t a1, uint64_t a2)
{
  sub_1000D7B80(*(void *)a1);
  uint64_t v4 = *(void *)a1;
  *(void *)(v4 + 8) = 0;
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0;
  *(_OWORD *)(v4 + 8) = *(_OWORD *)a2;
  *(void *)(v4 + 24) = *(void *)(a2 + 16);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  *(_DWORD *)(v4 + 32) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(v4 + 40) = 0;
  *(unsigned char *)(v4 + 128) = 0;
  if (*(unsigned char *)(a2 + 120))
  {
    *(void *)(v4 + 40) = *(void *)(a2 + 32);
    long long v5 = *(_OWORD *)(a2 + 40);
    *(void *)(v4 + 64) = *(void *)(a2 + 56);
    *(_OWORD *)(v4 + 48) = v5;
    *(void *)(a2 + 48) = 0;
    *(void *)(a2 + 56) = 0;
    *(void *)(a2 + 40) = 0;
    long long v6 = *(_OWORD *)(a2 + 64);
    long long v7 = *(_OWORD *)(a2 + 80);
    long long v8 = *(_OWORD *)(a2 + 96);
    *(void *)(v4 + 120) = *(void *)(a2 + 112);
    *(_OWORD *)(v4 + 104) = v8;
    *(_OWORD *)(v4 + 88) = v7;
    *(_OWORD *)(v4 + 72) = v6;
    *(unsigned char *)(v4 + 128) = 1;
  }
  **(_DWORD **)a1 = *(_DWORD *)(a1 + 8);
}

void sub_10068AB54(int *a1, int *a2)
{
  uint64_t v4 = a2;
  if ((sub_10068AC04(a1, &v4) & 1) == 0)
  {
    v5[2] = *a2;
    v5[0] = 26;
    sub_1000E1494((uint64_t)a1, (uint64_t)v5);
    sub_1000D7B80((uint64_t)v5);
  }
}

void sub_10068ABE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068AC04(int *a1, int **a2)
{
  uint64_t result = 0;
  unsigned int v4 = *a1 ^ (*a1 >> 31);
  if (v4 >= 0x1A)
  {
    switch(v4)
    {
      case 0x1Au:
        a1[2] = **a2;
        uint64_t result = 1;
        break;
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Du:
        return result;
      default:
        sub_10050EA98();
    }
  }
  return result;
}

void sub_10068ACA8(int *a1)
{
  if ((sub_10068AD44(a1) & 1) == 0)
  {
    v2[0] = 1;
    sub_1000E1494((uint64_t)a1, (uint64_t)v2);
    sub_1000D7B80((uint64_t)v2);
  }
}

void sub_10068AD28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068AD44(int *a1)
{
  int v1 = *a1 ^ (*a1 >> 31);
  if ((v1 - 2) < 0x1C || v1 == 0) {
    return 0;
  }
  if (v1 != 1) {
    sub_10050EA98();
  }
  return 1;
}

void sub_10068ADDC(uint64_t a1, unsigned char *a2)
{
  unsigned int v4 = a2;
  if ((sub_10068AE8C(a1, &v4) & 1) == 0)
  {
    char v6 = *a2;
    int v5 = 3;
    sub_1000E1494(a1, (uint64_t)&v5);
    sub_1000D7B80((uint64_t)&v5);
  }
}

void sub_10068AE70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068AE8C(uint64_t a1, unsigned char **a2)
{
  unsigned int v2 = *(_DWORD *)a1 ^ (*(int *)a1 >> 31);
  if (v2 - 4 < 0x1A || v2 < 3) {
    return 0;
  }
  if (v2 != 3) {
    sub_10050EA98();
  }
  *(unsigned char *)(a1 + 8) = **a2;
  return 1;
}

void sub_10068AF30(int *a1, uint64_t a2)
{
  uint64_t v5 = a2;
  if ((sub_10068B04C(a1, &v5) & 1) == 0)
  {
    long long v7 = *(_OWORD *)a2;
    uint64_t v8 = *(void *)(a2 + 16);
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)a2 = 0;
    int v9 = *(_DWORD *)(a2 + 24);
    LOBYTE(v10) = 0;
    char v17 = 0;
    if (*(unsigned char *)(a2 + 120))
    {
      long long v11 = *(_OWORD *)(a2 + 40);
      long long v4 = *(_OWORD *)(a2 + 80);
      long long v13 = *(_OWORD *)(a2 + 64);
      uint64_t v10 = *(void *)(a2 + 32);
      uint64_t v12 = *(void *)(a2 + 56);
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 48) = 0;
      *(void *)(a2 + 56) = 0;
      long long v14 = v4;
      long long v15 = *(_OWORD *)(a2 + 96);
      uint64_t v16 = *(void *)(a2 + 112);
      char v17 = 1;
    }
    int v6 = 8;
    sub_1000E1494((uint64_t)a1, (uint64_t)&v6);
    sub_1000D7B80((uint64_t)&v6);
  }
}

void sub_10068B030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068B04C(int *a1, uint64_t *a2)
{
  int v2 = *a1 ^ (*a1 >> 31);
  if ((v2 - 9) >= 0x15)
  {
    switch(v2)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
        return 0;
      case 8:
        return sub_10068B168(a2, (uint64_t)(a1 + 2));
      default:
        sub_10050EA98();
    }
  }
  return 0;
}

uint64_t sub_10068B168(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_10017C740((uint64_t *)a2);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(void *)(a2 + 16) = *(void *)(v3 + 16);
  *(void *)uint64_t v3 = 0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v3 + 16) = 0;
  *(_DWORD *)(a2 + 24) = *(_DWORD *)(v3 + 24);
  sub_1000E2DB0(a2 + 32, v3 + 32);
  return 1;
}

void sub_10068B1C8(int *a1, int *a2)
{
  long long v4 = a2;
  if ((sub_10068B278(a1, &v4) & 1) == 0)
  {
    v5[2] = *a2;
    v5[0] = 4;
    sub_1000E1494((uint64_t)a1, (uint64_t)v5);
    sub_1000D7B80((uint64_t)v5);
  }
}

void sub_10068B25C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068B278(int *a1, int **a2)
{
  unsigned int v2 = *a1 ^ (*a1 >> 31);
  if (v2 - 5 < 0x19 || v2 < 4) {
    return 0;
  }
  if (v2 != 4) {
    sub_10050EA98();
  }
  a1[2] = **a2;
  return 1;
}

void sub_10068B31C(int *a1, uint64_t *a2)
{
  long long v4 = a2;
  if ((sub_10068B3D0(a1, &v4) & 1) == 0)
  {
    int v5 = sub_10068B540((uint64_t)&v6, (uint64_t)a2);
    sub_1000E1494((uint64_t)a1, (uint64_t)&v5);
    sub_1000D7B80((uint64_t)&v5);
  }
}

void sub_10068B3B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068B3D0(int *a1, uint64_t **a2)
{
  int v2 = *a1 ^ (*a1 >> 31);
  if ((v2 - 8) >= 0x16)
  {
    switch(v2)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
        return 0;
      case 7:
        return sub_10068B4EC(a2, (uint64_t)(a1 + 2));
      default:
        sub_10050EA98();
    }
  }
  return 0;
}

uint64_t sub_10068B4EC(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  sub_10068A688(a2, *a1);
  *(void *)(a2 + 40) = v3[5];
  *(unsigned char *)(a2 + 48) = *((unsigned char *)v3 + 48);
  sub_1000E2DB0(a2 + 56, (uint64_t)(v3 + 7));
  return 1;
}

uint64_t sub_10068B540(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000E2908(a1, (uint64_t *)a2);
  *(void *)(v3 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(v3 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(v3 + 56) = 0;
  *(unsigned char *)(v3 + 144) = 0;
  if (*(unsigned char *)(a2 + 144))
  {
    *(void *)(v3 + 56) = *(void *)(a2 + 56);
    long long v4 = *(_OWORD *)(a2 + 64);
    *(void *)(v3 + 80) = *(void *)(a2 + 80);
    *(_OWORD *)(v3 + 64) = v4;
    *(void *)(a2 + 72) = 0;
    *(void *)(a2 + 80) = 0;
    *(void *)(a2 + 64) = 0;
    long long v5 = *(_OWORD *)(a2 + 88);
    long long v6 = *(_OWORD *)(a2 + 104);
    long long v7 = *(_OWORD *)(a2 + 120);
    *(void *)(v3 + 136) = *(void *)(a2 + 136);
    *(_OWORD *)(v3 + 120) = v7;
    *(_OWORD *)(v3 + 104) = v6;
    *(_OWORD *)(v3 + 88) = v5;
    *(unsigned char *)(v3 + 144) = 1;
  }
  return 7;
}

void sub_10068B5D0(int *a1)
{
  if ((sub_10068B66C(a1) & 1) == 0)
  {
    v2[0] = 2;
    sub_1000E1494((uint64_t)a1, (uint64_t)v2);
    sub_1000D7B80((uint64_t)v2);
  }
}

void sub_10068B650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068B66C(int *a1)
{
  unsigned int v1 = *a1 ^ (*a1 >> 31);
  if (v1 - 3 < 0x1B || v1 < 2) {
    return 0;
  }
  if (v1 != 2) {
    sub_10050EA98();
  }
  return 1;
}

void sub_10068B704(int *a1, uint64_t a2)
{
  uint64_t v5 = a2;
  if ((sub_10068B800(a1, &v5) & 1) == 0)
  {
    LOBYTE(v7) = 0;
    char v14 = 0;
    if (*(unsigned char *)(a2 + 88))
    {
      long long v8 = *(_OWORD *)(a2 + 8);
      long long v4 = *(_OWORD *)(a2 + 48);
      long long v10 = *(_OWORD *)(a2 + 32);
      uint64_t v7 = *(void *)a2;
      uint64_t v9 = *(void *)(a2 + 24);
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0;
      long long v11 = v4;
      long long v12 = *(_OWORD *)(a2 + 64);
      uint64_t v13 = *(void *)(a2 + 80);
      char v14 = 1;
    }
    int v6 = 5;
    sub_1000E1494((uint64_t)a1, (uint64_t)&v6);
    sub_1000D7B80((uint64_t)&v6);
  }
}

void sub_10068B7E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068B800(int *a1, uint64_t *a2)
{
  uint64_t result = 0;
  int v4 = *a1 ^ (*a1 >> 31);
  if ((v4 - 6) >= 0x18)
  {
    switch(v4)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
        return result;
      case 5:
        sub_1000E2DB0((uint64_t)(a1 + 2), *a2);
        uint64_t result = 1;
        break;
      default:
        sub_10050EA98();
    }
  }
  return result;
}

void sub_10068B914(int *a1, uint64_t a2)
{
  uint64_t v5 = a2;
  if ((sub_10068BA10(a1, &v5) & 1) == 0)
  {
    LOBYTE(v7) = 0;
    char v14 = 0;
    if (*(unsigned char *)(a2 + 88))
    {
      long long v8 = *(_OWORD *)(a2 + 8);
      long long v4 = *(_OWORD *)(a2 + 48);
      long long v10 = *(_OWORD *)(a2 + 32);
      uint64_t v7 = *(void *)a2;
      uint64_t v9 = *(void *)(a2 + 24);
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0;
      long long v11 = v4;
      long long v12 = *(_OWORD *)(a2 + 64);
      uint64_t v13 = *(void *)(a2 + 80);
      char v14 = 1;
    }
    int v6 = 6;
    sub_1000E1494((uint64_t)a1, (uint64_t)&v6);
    sub_1000D7B80((uint64_t)&v6);
  }
}

void sub_10068B9F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068BA10(int *a1, uint64_t *a2)
{
  uint64_t result = 0;
  int v4 = *a1 ^ (*a1 >> 31);
  if ((v4 - 7) >= 0x17)
  {
    switch(v4)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        return result;
      case 6:
        sub_1000E2DB0((uint64_t)(a1 + 2), *a2);
        uint64_t result = 1;
        break;
      default:
        sub_10050EA98();
    }
  }
  return result;
}

uint64_t sub_10068BB24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (unsigned char *)(a1 + 8);
  uint64_t v30 = a1 + 8;
  int v5 = *(_DWORD *)a2;
  uint64_t v4 = a2 + 8;
  switch(v5 ^ (v5 >> 31))
  {
    case 0:
    case 1:
    case 2:
    case 0xD:
    case 0x11:
    case 0x1B:
    case 0x1C:
    case 0x1D:
      break;
    case 3:
    case 0xC:
    case 0xE:
    case 0x17:
      *uint64_t v3 = *(unsigned char *)v4;
      break;
    case 4:
    case 9:
    case 0xB:
    case 0xF:
    case 0x13:
    case 0x16:
    case 0x19:
    case 0x1A:
      *(_DWORD *)uint64_t v3 = *(_DWORD *)v4;
      break;
    case 5:
    case 6:
      *(unsigned char *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 96) = 0;
      if (*(unsigned char *)(a2 + 96))
      {
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        long long v7 = *(_OWORD *)(a2 + 16);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = v7;
        *(void *)(a2 + 24) = 0;
        *(void *)(a2 + 32) = 0;
        *(void *)(a2 + 16) = 0;
        long long v8 = *(_OWORD *)(a2 + 40);
        long long v9 = *(_OWORD *)(a2 + 56);
        long long v10 = *(_OWORD *)(a2 + 72);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = v10;
        *(_OWORD *)(a1 + 56) = v9;
        *(_OWORD *)(a1 + 40) = v8;
        *(unsigned char *)(a1 + 96) = 1;
      }
      break;
    case 7:
      sub_10068BDAC(&v30, v4);
      break;
    case 8:
      sub_10068BE3C(&v30, v4);
      break;
    case 0xA:
    case 0x14:
    case 0x15:
      *(void *)uint64_t v3 = *(void *)v4;
      break;
    case 0x10:
      long long v17 = *(_OWORD *)(v4 + 16);
      *(_OWORD *)uint64_t v3 = *(_OWORD *)v4;
      *(_OWORD *)(a1 + 24) = v17;
      long long v18 = *(_OWORD *)(v4 + 32);
      long long v19 = *(_OWORD *)(v4 + 48);
      long long v20 = *(_OWORD *)(v4 + 80);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(v4 + 64);
      *(_OWORD *)(a1 + 88) = v20;
      *(_OWORD *)(a1 + 40) = v18;
      *(_OWORD *)(a1 + 56) = v19;
      long long v21 = *(_OWORD *)(v4 + 96);
      long long v22 = *(_OWORD *)(v4 + 112);
      long long v23 = *(_OWORD *)(v4 + 128);
      *(_OWORD *)(a1 + 148) = *(_OWORD *)(v4 + 140);
      *(_OWORD *)(a1 + 120) = v22;
      *(_OWORD *)(a1 + 136) = v23;
      *(_OWORD *)(a1 + 104) = v21;
      memcpy((void *)(a1 + 168), (const void *)(a2 + 168), 0x201uLL);
      *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
      *(_OWORD *)(a2 + 688) = 0u;
      long long v25 = *(_OWORD *)(a2 + 720);
      long long v24 = *(_OWORD *)(a2 + 736);
      *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
      *(_OWORD *)(a1 + 720) = v25;
      *(_OWORD *)(a1 + 736) = v24;
      uint64_t v26 = *(void *)(a2 + 797);
      long long v27 = *(_OWORD *)(a2 + 784);
      long long v28 = *(_OWORD *)(a2 + 752);
      *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
      *(_OWORD *)(a1 + 784) = v27;
      *(void *)(a1 + 797) = v26;
      *(_OWORD *)(a1 + 752) = v28;
      break;
    case 0x12:
      *(_OWORD *)uint64_t v3 = *(_OWORD *)v4;
      break;
    case 0x18:
      uint64_t v11 = *(void *)v4;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(v4 + 8);
      *(void *)uint64_t v3 = v11;
      long long v12 = *(_OWORD *)(a2 + 24);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(_OWORD *)(a1 + 24) = v12;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 24) = 0;
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      long long v14 = *(_OWORD *)(a2 + 80);
      long long v13 = *(_OWORD *)(a2 + 96);
      long long v15 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 108) = *(_OWORD *)(a2 + 108);
      *(_OWORD *)(a1 + 80) = v14;
      *(_OWORD *)(a1 + 96) = v13;
      *(_OWORD *)(a1 + 64) = v15;
      long long v16 = *(_OWORD *)(a2 + 128);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = v16;
      *(void *)(a2 + 128) = 0;
      *(void *)(a2 + 136) = 0;
      *(void *)(a2 + 144) = 0;
      break;
    default:
      sub_10050EA98();
  }
  *(_DWORD *)a1 = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
  return a1;
}

__n128 sub_10068BDAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = sub_1000E2908(*a1, (uint64_t *)a2);
  *(void *)(v3 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(v3 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(v3 + 56) = 0;
  *(unsigned char *)(v3 + 144) = 0;
  if (*(unsigned char *)(a2 + 144))
  {
    *(void *)(v3 + 56) = *(void *)(a2 + 56);
    long long v5 = *(_OWORD *)(a2 + 64);
    *(void *)(v3 + 80) = *(void *)(a2 + 80);
    *(_OWORD *)(v3 + 64) = v5;
    *(void *)(a2 + 72) = 0;
    *(void *)(a2 + 80) = 0;
    *(void *)(a2 + 64) = 0;
    __n128 result = *(__n128 *)(a2 + 88);
    long long v6 = *(_OWORD *)(a2 + 104);
    long long v7 = *(_OWORD *)(a2 + 120);
    *(void *)(v3 + 136) = *(void *)(a2 + 136);
    *(_OWORD *)(v3 + 120) = v7;
    *(_OWORD *)(v3 + 104) = v6;
    *(__n128 *)(v3 + 88) = result;
    *(unsigned char *)(v3 + 144) = 1;
  }
  return result;
}

__n128 sub_10068BE3C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(void *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  *(void *)(v2 + 16) = 0;
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
  *(void *)(v2 + 16) = *(void *)(a2 + 16);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  *(_DWORD *)(v2 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(v2 + 32) = 0;
  *(unsigned char *)(v2 + 120) = 0;
  if (*(unsigned char *)(a2 + 120))
  {
    *(void *)(v2 + 32) = *(void *)(a2 + 32);
    long long v4 = *(_OWORD *)(a2 + 40);
    *(void *)(v2 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(v2 + 40) = v4;
    *(void *)(a2 + 48) = 0;
    *(void *)(a2 + 56) = 0;
    *(void *)(a2 + 40) = 0;
    __n128 result = *(__n128 *)(a2 + 64);
    long long v5 = *(_OWORD *)(a2 + 80);
    long long v6 = *(_OWORD *)(a2 + 96);
    *(void *)(v2 + 112) = *(void *)(a2 + 112);
    *(_OWORD *)(v2 + 80) = v5;
    *(_OWORD *)(v2 + 96) = v6;
    *(__n128 *)(v2 + 64) = result;
    *(unsigned char *)(v2 + 120) = 1;
  }
  return result;
}

void sub_10068BEBC(int *a1, int *a2)
{
  long long v4 = a2;
  if ((sub_10068BF6C(a1, &v4) & 1) == 0)
  {
    v5[2] = *a2;
    v5[0] = 11;
    sub_1000E1494((uint64_t)a1, (uint64_t)v5);
    sub_1000D7B80((uint64_t)v5);
  }
}

void sub_10068BF50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068BF6C(int *a1, int **a2)
{
  uint64_t v2 = 0;
  switch(*a1 ^ (*a1 >> 31))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1A:
    case 0x1B:
    case 0x1C:
    case 0x1D:
      return v2;
    case 0xB:
      a1[2] = **a2;
      uint64_t v2 = 1;
      break;
    default:
      sub_10050EA98();
  }
  return v2;
}

void sub_10068C070(int *a1, int *a2)
{
  long long v4 = a2;
  if ((sub_10068C120(a1, &v4) & 1) == 0)
  {
    v5[2] = *a2;
    v5[0] = 9;
    sub_1000E1494((uint64_t)a1, (uint64_t)v5);
    sub_1000D7B80((uint64_t)v5);
  }
}

void sub_10068C104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068C120(int *a1, int **a2)
{
  uint64_t result = 0;
  int v4 = *a1 ^ (*a1 >> 31);
  if ((v4 - 10) >= 0x14)
  {
    switch(v4)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
        return result;
      case 9:
        a1[2] = **a2;
        uint64_t result = 1;
        break;
      default:
        sub_10050EA98();
    }
  }
  return result;
}

void sub_10068C230(int *a1, int *a2)
{
  int v4 = a2;
  if ((sub_10068C2E0(a1, &v4) & 1) == 0)
  {
    v5[2] = *a2;
    v5[0] = 19;
    sub_1000E1494((uint64_t)a1, (uint64_t)v5);
    sub_1000D7B80((uint64_t)v5);
  }
}

void sub_10068C2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068C2E0(int *a1, int **a2)
{
  uint64_t v2 = 0;
  switch(*a1 ^ (*a1 >> 31))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1A:
    case 0x1B:
    case 0x1C:
    case 0x1D:
      return v2;
    case 0x13:
      a1[2] = **a2;
      uint64_t v2 = 1;
      break;
    default:
      sub_10050EA98();
  }
  return v2;
}

void sub_10068C3E4(int *a1, int *a2)
{
  int v4 = a2;
  if ((sub_10068C494(a1, &v4) & 1) == 0)
  {
    v5[2] = *a2;
    v5[0] = 22;
    sub_1000E1494((uint64_t)a1, (uint64_t)v5);
    sub_1000D7B80((uint64_t)v5);
  }
}

void sub_10068C478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068C494(int *a1, int **a2)
{
  uint64_t result = 0;
  unsigned int v4 = *a1 ^ (*a1 >> 31);
  if (v4 >= 0x16)
  {
    switch(v4)
    {
      case 0x16u:
        a1[2] = **a2;
        uint64_t result = 1;
        break;
      case 0x17u:
      case 0x18u:
      case 0x19u:
      case 0x1Au:
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Du:
        return result;
      default:
        sub_10050EA98();
    }
  }
  return result;
}

void sub_10068C548(uint64_t a1, void *a2)
{
  unsigned int v4 = a2;
  if ((sub_10068C5F8(a1, &v4) & 1) == 0)
  {
    uint64_t v6 = *a2;
    int v5 = 20;
    sub_1000E1494(a1, (uint64_t)&v5);
    sub_1000D7B80((uint64_t)&v5);
  }
}

void sub_10068C5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068C5F8(uint64_t a1, void **a2)
{
  uint64_t result = 0;
  unsigned int v4 = *(_DWORD *)a1 ^ (*(int *)a1 >> 31);
  if (v4 >= 0x14)
  {
    switch(v4)
    {
      case 0x14u:
        *(void *)(a1 + 8) = **a2;
        uint64_t result = 1;
        break;
      case 0x15u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x19u:
      case 0x1Au:
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Du:
        return result;
      default:
        sub_10050EA98();
    }
  }
  return result;
}

void sub_10068C6B4(uint64_t a1, void *a2)
{
  unsigned int v4 = a2;
  if ((sub_10068C764(a1, &v4) & 1) == 0)
  {
    uint64_t v6 = *a2;
    int v5 = 10;
    sub_1000E1494(a1, (uint64_t)&v5);
    sub_1000D7B80((uint64_t)&v5);
  }
}

void sub_10068C748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068C764(uint64_t a1, void **a2)
{
  uint64_t v2 = 0;
  switch(*(_DWORD *)a1 ^ (*(int *)a1 >> 31))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xB:
    case 0xC:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1A:
    case 0x1B:
    case 0x1C:
    case 0x1D:
      return v2;
    case 0xA:
      *(void *)(a1 + 8) = **a2;
      uint64_t v2 = 1;
      break;
    default:
      sub_10050EA98();
  }
  return v2;
}

void sub_10068C868(uint64_t a1, unsigned char *a2)
{
  unsigned int v4 = a2;
  if ((sub_10068C918(a1, &v4) & 1) == 0)
  {
    char v6 = *a2;
    int v5 = 12;
    sub_1000E1494(a1, (uint64_t)&v5);
    sub_1000D7B80((uint64_t)&v5);
  }
}

void sub_10068C8FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068C918(uint64_t a1, unsigned char **a2)
{
  uint64_t v2 = 0;
  switch(*(_DWORD *)a1 ^ (*(int *)a1 >> 31))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1A:
    case 0x1B:
    case 0x1C:
    case 0x1D:
      return v2;
    case 0xC:
      *(unsigned char *)(a1 + 8) = **a2;
      uint64_t v2 = 1;
      break;
    default:
      sub_10050EA98();
  }
  return v2;
}

void sub_10068CA1C(int *a1)
{
  if ((sub_10068CAB8(a1) & 1) == 0)
  {
    v2[0] = 13;
    sub_1000E1494((uint64_t)a1, (uint64_t)v2);
    sub_1000D7B80((uint64_t)v2);
  }
}

void sub_10068CA9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068CAB8(int *a1)
{
  int v1 = *a1 ^ (*a1 >> 31);
  uint64_t result = 0;
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
      return result;
    case 13:
      uint64_t result = 1;
      break;
    default:
      sub_10050EA98();
  }
  return result;
}

void sub_10068CBAC(int *a1)
{
  if ((sub_10068CC48(a1) & 1) == 0)
  {
    v2[0] = 17;
    sub_1000E1494((uint64_t)a1, (uint64_t)v2);
    sub_1000D7B80((uint64_t)v2);
  }
}

void sub_10068CC2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068CC48(int *a1)
{
  int v1 = *a1 ^ (*a1 >> 31);
  uint64_t result = 0;
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
      return result;
    case 17:
      uint64_t result = 1;
      break;
    default:
      sub_10050EA98();
  }
  return result;
}

void sub_10068CD3C(uint64_t a1, unsigned char *a2)
{
  unsigned int v4 = a2;
  if ((sub_10068CDEC(a1, &v4) & 1) == 0)
  {
    char v6 = *a2;
    int v5 = 14;
    sub_1000E1494(a1, (uint64_t)&v5);
    sub_1000D7B80((uint64_t)&v5);
  }
}

void sub_10068CDD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000D7B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10068CDEC(uint64_t a1, unsigned char **a2)
{
  uint64_t v2 = 0;
  switch(*(_DWORD *)a1 ^ (*(int *)a1 >> 31))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xD:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1A:
    case 0x1B:
    case 0x1C:
    case 0x1D:
      return v2;
    case 0xE:
      *(unsigned char *)(a1 + 8) = **a2;
      uint64_t v2 = 1;
      break;
    default:
      sub_10050EA98();
  }
  return v2;
}

char *sub_10068CEF0(char *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    char v6 = result;
    uint64_t result = sub_1001DCF60(result, a4);
    long long v7 = (void *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      *v7++ = a2[2];
      a2 = (void *)*a2;
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_10068CF4C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10068CF68@<X0>(uint64_t *a1@<X1>, void *a2@<X8>)
{
  unsigned int v4 = operator new(0x50uLL);
  uint64_t result = sub_10068CFC4(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_10068CFB0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_10068CFC4(void *a1, uint64_t *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1022C2160;
  sub_1010FB0E8((uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_10068D00C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_10068D020(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022C2160;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10068D040(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022C2160;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10068D094(uint64_t a1)
{
  return sub_1010FB254(a1 + 24);
}

void sub_10068D0A0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419688, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419688))
  {
    qword_102419670 = 0;
    qword_102419678 = 0;
    qword_102419680 = 0;
    uint64_t v0 = operator new(6uLL);
    qword_102419678 = (uint64_t)(v0 + 3);
    qword_102419680 = (uint64_t)(v0 + 3);
    *(_DWORD *)uint64_t v0 = 151521030;
    v0[2] = 3082;
    qword_102419670 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_1001C6FD8, &qword_102419670, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419688);
  }
}

void sub_10068D158(_Unwind_Exception *a1)
{
}

void sub_10068D170()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1024196A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1024196A8))
  {
    qword_102419690 = 0;
    qword_102419698 = 0;
    qword_1024196A0 = 0;
    uint64_t v0 = operator new(2uLL);
    qword_102419690 = (uint64_t)v0;
    _WORD *v0 = 256;
    qword_102419698 = (uint64_t)(v0 + 1);
    qword_1024196A0 = (uint64_t)(v0 + 1);
    __cxa_atexit((void (*)(void *))sub_1001C700C, &qword_102419690, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1024196A8);
  }
}

void sub_10068D218(_Unwind_Exception *a1)
{
}

uint64_t sub_10068D230()
{
  return sub_10010145C();
}

double sub_10068D32C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_1017A5EA8(a2);
  int8x16_t v4 = vextq_s8(*(int8x16_t *)(a1 + 24), *(int8x16_t *)(a1 + 24), 8uLL);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)a1;
  *(int8x16_t *)(v3 + 64) = v4;
  *(int32x2_t *)v4.i8 = vrev64_s32(*(int32x2_t *)(a1 + 56));
  *(void *)(v3 + 96) = *(void *)(a1 + 48);
  *(void *)(v3 + 104) = v4.i64[0];
  *(int8x16_t *)(v3 + 24) = vextq_s8(*(int8x16_t *)(a1 + 104), *(int8x16_t *)(a1 + 104), 8uLL);
  *(int8x16_t *)(v3 + 8) = vextq_s8(*(int8x16_t *)(a1 + 72), *(int8x16_t *)(a1 + 72), 8uLL);
  double result = *(double *)(a1 + 88);
  v4.i64[0] = *(void *)(a1 + 96);
  *(double *)(v3 + 40) = result;
  int v6 = *(_DWORD *)(v3 + 128);
  *(unsigned char *)(v3 + 124) = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(v3 + 125) = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(v3 + 123) = *(unsigned char *)(a1 + 16);
  *(void *)(v3 + 80) = v4.i64[0];
  *(unsigned char *)(v3 + 121) = *(unsigned char *)(a1 + 120);
  *(unsigned char *)(v3 + 120) = *(unsigned char *)(a1 + 128);
  *(unsigned char *)(v3 + 122) = *(unsigned char *)(a1 + 129);
  int v7 = *(_DWORD *)(a1 + 124);
  int v8 = *(_DWORD *)(a1 + 132);
  *(_DWORD *)(v3 + 128) = v6 | 0x3FFBFF;
  *(_DWORD *)(v3 + 112) = v8;
  *(_DWORD *)(v3 + 116) = v7;
  return result;
}

double sub_10068D3E4@<D0>(uint64_t a1@<X0>, int8x16_t *a2@<X8>)
{
  sub_10173A3F8((uint64_t)a2);
  a2[5] = vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 32);
  a2[4].i64[0] = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 72);
  a2[7].i64[1] = *(void *)(a1 + 64);
  __int32 v7 = a2[9].i32[2];
  a2[6].i32[0] = *(_DWORD *)(a1 + 24);
  a2[2].i64[1] = v5;
  a2[3].i64[0] = v4;
  a2[2].i64[0] = v6;
  a2[1] = vextq_s8(*(int8x16_t *)(a1 + 80), *(int8x16_t *)(a1 + 80), 8uLL);
  __int32 v8 = *(_DWORD *)(a1 + 96);
  a2[9].i32[2] = v7 | 0x8C1FF;
  a2[8].i32[3] = v8;
  CFStringRef v9 = *(const __CFString **)(a1 + 104);
  if (v9)
  {
    CStringPtr = (char *)CFStringGetCStringPtr(v9, 0x8000100u);
    if (CStringPtr)
    {
      sub_100134750(&__p, CStringPtr);
      sub_10068D584((uint64_t)a2, &__p);
      if (v23 < 0) {
        operator delete((void *)__p.n128_u64[0]);
      }
    }
  }
  __int32 v11 = a2[9].i32[2];
  a2[9].i16[2] = *(_WORD *)(a1 + 112);
  __int32 v12 = *(_DWORD *)(a1 + 148);
  a2[8].i32[2] = *(_DWORD *)(a1 + 144);
  a2[9].i32[0] = v12;
  __int32 v13 = *(unsigned __int8 *)(a1 + 152);
  a2[6].i64[1] = *(void *)(a1 + 156);
  __int32 v14 = *(unsigned __int8 *)(a1 + 165);
  a2[6].i32[1] = *(unsigned __int8 *)(a1 + 166);
  a2[7].i32[0] = *(unsigned __int8 *)(a1 + 164);
  a2[7].i32[1] = v14;
  __int32 v15 = *(_DWORD *)(a1 + 168);
  a2[9].i32[2] = v11 | 0x773E00;
  a2[8].i32[0] = v15;
  a2[8].i32[1] = v13;
  sub_10173C154((uint64_t)a2);
  uint64_t v16 = a2->i64[1];
  uint64_t v17 = *(void *)(a1 + 120);
  *(unsigned char *)(v16 + 32) |= 1u;
  *(void *)(v16 + 8) = v17;
  uint64_t v18 = a2->i64[1];
  uint64_t v19 = *(void *)(a1 + 128);
  *(unsigned char *)(v18 + 32) |= 2u;
  *(void *)(v18 + 16) = v19;
  uint64_t v20 = a2->i64[1];
  double result = *(double *)(a1 + 136);
  *(unsigned char *)(v20 + 32) |= 4u;
  *(double *)(v20 + 24) = result;
  return result;
}

void sub_10068D550(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_10173A4E4(v15);
  _Unwind_Resume(a1);
}

__n128 sub_10068D584(uint64_t a1, __n128 *a2)
{
  sub_10068D710(a1);
  uint64_t v4 = *(void *)(a1 + 72);
  if (*(char *)(v4 + 23) < 0) {
    operator delete(*(void **)v4);
  }
  __n128 result = *a2;
  *(void *)(v4 + 16) = a2[1].n128_u64[0];
  *(__n128 *)uint64_t v4 = result;
  a2[1].n128_u8[7] = 0;
  a2->n128_u8[0] = 0;
  return result;
}

uint64_t sub_10068D5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10173C1E4(a2);
  uint64_t v4 = *(void *)(a1 + 24);
  __int16 v5 = *(_WORD *)(result + 72);
  *(_DWORD *)(result + 64) = *(_DWORD *)(a1 + 32);
  *(_OWORD *)(result + 24) = *(_OWORD *)(a1 + 40);
  *(void *)(result + 40) = *(void *)(a1 + 56);
  *(void *)(result + 48) = v4;
  *(unsigned char *)(result + 69) = *(unsigned char *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  *(void *)(result + 56) = *(void *)(a1 + 80);
  *(unsigned char *)(result + 70) = *(unsigned char *)(a1 + 88);
  double v7 = *(double *)(a1 + 96);
  *(void *)(result + 8) = v6;
  *(double *)(result + 16) = v7;
  *(_WORD *)(result + 72) = v5 | 0x7FF;
  *(unsigned char *)(result + 68) = v7 != 0.0;
  return result;
}

__n128 sub_10068D654@<Q0>(int8x16_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_1017A767C(a2);
  uint64_t v4 = a1->i64[0];
  uint64_t v5 = a1->i64[1];
  *(void *)(v3 + 152) = a1[1].i64[0];
  *(void *)(v3 + 160) = v4;
  *(int8x16_t *)(v3 + 136) = vextq_s8(a1[2], a1[2], 8uLL);
  *(void *)(v3 + 56) = a1[3].i64[1];
  *(void *)(v3 + 64) = v5;
  int8x16_t v6 = a1[5];
  *(int8x16_t *)(v3 + 24) = a1[4];
  *(int8x16_t *)(v3 + 40) = vextq_s8(v6, v6, 8uLL);
  int8x16_t v7 = a1[7];
  *(int8x16_t *)(v3 + 8) = a1[6];
  *(int8x16_t *)(v3 + 120) = vextq_s8(v7, v7, 8uLL);
  int8x16_t v8 = a1[9];
  *(int8x16_t *)(v3 + 72) = a1[8];
  int v9 = *(_DWORD *)(v3 + 188);
  *(unsigned char *)(v3 + 184) = a1[1].i8[8];
  *(_WORD *)(v3 + 182) = a1[3].i16[0];
  int v10 = a1[11].i32[0];
  int v11 = a1[11].u8[5];
  *(_DWORD *)(v3 + 168) = a1[11].u8[4];
  *(_DWORD *)(v3 + 172) = v11;
  *(_DWORD *)(v3 + 176) = v10;
  *(unsigned char *)(v3 + 180) = a1[11].i8[6];
  *(int8x16_t *)(v3 + 104) = v8;
  __n128 result = (__n128)a1[10];
  *(__n128 *)(v3 + 88) = result;
  char v13 = a1[11].i8[7];
  *(_DWORD *)(v3 + 188) = v9 | 0xFFFFFFF;
  *(unsigned char *)(v3 + 181) = v13;
  return result;
}

uint64_t sub_10068D710(uint64_t result)
{
  if (!*(void *)(result + 72)) {
    operator new();
  }
  return result;
}

void sub_10068D784(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    operator delete();
  }
}

double sub_10068D7E0(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  *(void *)(a1 + 40) = 0;
  unint64_t v4 = v3 - (void)v2;
  if (v4 >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v5 = *(void *)(a1 + 16);
      uint64_t v2 = (void **)(*(void *)(a1 + 8) + 8);
      *(void *)(a1 + 8) = v2;
      unint64_t v4 = v5 - (void)v2;
    }
    while (v4 > 0x10);
  }
  if (v4 >> 3 == 1)
  {
    uint64_t v6 = 14;
    goto LABEL_7;
  }
  if (v4 >> 3 == 2)
  {
    uint64_t v6 = 28;
LABEL_7:
    *(void *)(a1 + 32) = v6;
  }
  int8x16_t v7 = *(void **)(a1 + 56);
  *(_DWORD *)(a1 + 72) = 4;
  sub_1000F5BB0(a1 + 48, v7);
  *(void *)(a1 + 48) = a1 + 56;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  unsigned int v9 = 0;
  int v10 = &v9;
  sub_100042490((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_101D0B290, &v10)[5] = (uint64_t *)0xBFF0000000000000;
  unsigned int v9 = 1;
  int v10 = &v9;
  sub_100042490((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_101D0B290, &v10)[5] = (uint64_t *)0xBFF0000000000000;
  unsigned int v9 = 2;
  int v10 = &v9;
  sub_100042490((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_101D0B290, &v10)[5] = (uint64_t *)0xBFF0000000000000;
  unsigned int v9 = 3;
  int v10 = &v9;
  sub_100042490((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_101D0B290, &v10)[5] = (uint64_t *)0xBFF0000000000000;
  unsigned int v9 = 4;
  int v10 = &v9;
  sub_100042490((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_101D0B290, &v10)[5] = (uint64_t *)0xBFF0000000000000;
  unsigned int v9 = 5;
  int v10 = &v9;
  sub_100042490((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_101D0B290, &v10)[5] = (uint64_t *)0xBFF0000000000000;
  unsigned int v9 = 6;
  int v10 = &v9;
  sub_100042490((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_101D0B290, &v10)[5] = (uint64_t *)0xBFF0000000000000;
  unsigned int v9 = 7;
  int v10 = &v9;
  sub_100042490((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_101D0B290, &v10)[5] = (uint64_t *)0xBFF0000000000000;
  unsigned int v9 = 8;
  int v10 = &v9;
  sub_100042490((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_101D0B290, &v10)[5] = (uint64_t *)0xBFF0000000000000;
  unsigned int v9 = 9;
  int v10 = &v9;
  sub_100042490((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_101D0B290, &v10)[5] = (uint64_t *)0xBFF0000000000000;
  unsigned int v9 = 10;
  int v10 = &v9;
  sub_100042490((uint64_t **)(a1 + 48), &v9, (uint64_t)&unk_101D0B290, &v10)[5] = (uint64_t *)0xBFF0000000000000;
  double result = -1.0;
  *(_OWORD *)(a1 + 80) = xmmword_101D27D40;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 120) = 0;
  return result;
}

uint64_t sub_10068DAA8(uint64_t a1)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 48) = a1 + 56;
  *(_DWORD *)(a1 + 72) = 4;
  *(_OWORD *)(a1 + 80) = xmmword_101D27D40;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 120) = 0;
  sub_10068D7E0(a1);
  return a1;
}

uint64_t **sub_10068DB0C(uint64_t a1, uint64_t **a2, unsigned int a3)
{
  unsigned int v6 = a3;
  unint64_t v4 = *a2;
  int8x16_t v7 = &v6;
  double result = sub_100042490((uint64_t **)(a1 + 48), &v6, (uint64_t)&unk_101D0B290, &v7);
  result[5] = v4;
  *(_DWORD *)(a1 + 72) = v6;
  return result;
}

void sub_10068DB78(uint64_t a1, uint64_t **a2, long long *a3)
{
  *(void *)(a1 + 80) = *a2;
  long long v6 = *a3;
  long long v7 = a3[1];
  *(_DWORD *)(a1 + 120) = *((_DWORD *)a3 + 8);
  *(_OWORD *)(a1 + 104) = v7;
  *(_OWORD *)(a1 + 88) = v6;
  int v8 = *(_DWORD *)(a1 + 72);
  if (!CLMotionActivity::isTypePedestrian())
  {
    if (!CLMotionActivity::isTypeCycling() || *(_DWORD *)(a1 + 72) == 6)
    {
      if (!*((_DWORD *)a3 + 2) && (*(_DWORD *)(a1 + 72) - 5) <= 1)
      {
        *(_DWORD *)(a1 + 72) = 3;
        if (qword_102419510 != -1) {
          dispatch_once(&qword_102419510, &stru_1022C21A0);
        }
        int v10 = qword_102419518;
        if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
        {
          int v11 = *a2;
          *(_DWORD *)int32x2_t buf = 134349056;
          *(void *)&uint8_t buf[4] = v11;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "#workout,workout ended from a running or cycling session, reverting dynamics mode to moving pedestrian,mct,%{public}.3f", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419510 != -1) {
            dispatch_once(&qword_102419510, &stru_1022C21A0);
          }
          goto LABEL_40;
        }
      }
      goto LABEL_46;
    }
    *(_DWORD *)(a1 + 72) = 6;
    uint64_t v26 = *a2;
    unsigned int v41 = 6;
    *(void *)int32x2_t buf = &v41;
    long long v27 = sub_100042490((uint64_t **)(a1 + 48), &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
LABEL_43:
    v27[5] = v26;
    goto LABEL_46;
  }
  if (CLMotionActivity::isTypeWalking()) {
    BOOL v9 = *(_DWORD *)(a1 + 72) != 4;
  }
  else {
    BOOL v9 = 0;
  }
  unsigned int v41 = 4;
  *(void *)int32x2_t buf = &v41;
  double v12 = *((double *)sub_100042490((uint64_t **)(a1 + 48), &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5);
  if (CLMotionActivity::isTypeRunning()) {
    BOOL v13 = *(_DWORD *)(a1 + 72) != 5;
  }
  else {
    BOOL v13 = 0;
  }
  unsigned int v41 = 5;
  *(void *)int32x2_t buf = &v41;
  __int32 v14 = sub_100042490((uint64_t **)(a1 + 48), &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
  if (v12 <= 0.0 && v9)
  {
    *(_DWORD *)(a1 + 72) = 4;
    uint64_t v16 = *a2;
    unsigned int v41 = 4;
    *(void *)int32x2_t buf = &v41;
    sub_100042490((uint64_t **)(a1 + 48), &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf)[5] = v16;
    if (qword_102419510 != -1) {
      dispatch_once(&qword_102419510, &stru_1022C21A0);
    }
    uint64_t v17 = qword_102419518;
    if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v18 = *a2;
      *(_DWORD *)int32x2_t buf = 134349056;
      *(void *)&uint8_t buf[4] = v18;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "#workout,setting dynamics walking mode for the first time,mct,%{public}.3f", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419510 == -1)
      {
LABEL_40:
        long long v24 = *a2;
        unsigned int v41 = 134349056;
        __int16 v42 = v24;
        long long v25 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void cllcf::LCFusionMotionActivity::fitnessActivityUpdate(const CFTimeInterval &, const CLWorkoutUpdate &)", "%s\n", v25);
        if (v25 != buf) {
          free(v25);
        }
        goto LABEL_46;
      }
LABEL_68:
      dispatch_once(&qword_102419510, &stru_1022C21A0);
      goto LABEL_40;
    }
    goto LABEL_46;
  }
  double v19 = *((double *)v14 + 5);
  if (v19 > 0.0 || !v13)
  {
    unsigned int v28 = *(_DWORD *)(a1 + 72);
    if (v28 <= 0xA && ((1 << v28) & 0x7C7) != 0) {
      goto LABEL_46;
    }
    char v33 = !v9;
    if (v12 <= 0.0) {
      char v33 = 1;
    }
    if (v33)
    {
      char v34 = !v13;
      if (v19 <= 0.0) {
        char v34 = 1;
      }
      if (v34) {
        goto LABEL_46;
      }
      unsigned int v41 = 5;
      *(void *)int32x2_t buf = &v41;
      if (*((double *)sub_100042490((uint64_t **)(a1 + 48), &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5) <= 0.0) {
        goto LABEL_46;
      }
      double v35 = *(double *)a2;
      unsigned int v41 = 5;
      *(void *)int32x2_t buf = &v41;
      if (v35 - *((double *)sub_100042490((uint64_t **)(a1 + 48), &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5) <= 10.0) {
        goto LABEL_46;
      }
      *(_DWORD *)(a1 + 72) = 5;
      uint64_t v26 = *a2;
      unsigned int v41 = 5;
      *(void *)int32x2_t buf = &v41;
      long long v27 = sub_100042490((uint64_t **)(a1 + 48), &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
    }
    else
    {
      unsigned int v41 = 4;
      *(void *)int32x2_t buf = &v41;
      if (*((double *)sub_100042490((uint64_t **)(a1 + 48), &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5) <= 0.0) {
        goto LABEL_46;
      }
      double v36 = *(double *)a2;
      unsigned int v41 = 4;
      *(void *)int32x2_t buf = &v41;
      if (v36 - *((double *)sub_100042490((uint64_t **)(a1 + 48), &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5) <= 10.0) {
        goto LABEL_46;
      }
      *(_DWORD *)(a1 + 72) = 4;
      uint64_t v26 = *a2;
      unsigned int v41 = 4;
      *(void *)int32x2_t buf = &v41;
      long long v27 = sub_100042490((uint64_t **)(a1 + 48), &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
    }
    goto LABEL_43;
  }
  *(_DWORD *)(a1 + 72) = 5;
  long long v21 = *a2;
  unsigned int v41 = 5;
  *(void *)int32x2_t buf = &v41;
  sub_100042490((uint64_t **)(a1 + 48), &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf)[5] = v21;
  if (qword_102419510 != -1) {
    dispatch_once(&qword_102419510, &stru_1022C21A0);
  }
  long long v22 = qword_102419518;
  if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
  {
    char v23 = *a2;
    *(_DWORD *)int32x2_t buf = 134349056;
    *(void *)&uint8_t buf[4] = v23;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "#workout,setting dynamics running mode for the first time,mct,%{public}.3f", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419510 == -1) {
      goto LABEL_40;
    }
    goto LABEL_68;
  }
LABEL_46:
  if (qword_102419510 != -1) {
    dispatch_once(&qword_102419510, &stru_1022C21A0);
  }
  int v29 = qword_102419518;
  if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v30 = *a2;
    int v31 = *((_DWORD *)a3 + 2);
    int v32 = *(_DWORD *)(a1 + 72);
    *(_DWORD *)int32x2_t buf = 134349824;
    *(void *)&uint8_t buf[4] = v30;
    __int16 v50 = 1026;
    int v51 = v31;
    __int16 v52 = 1026;
    int v53 = v8;
    __int16 v54 = 1026;
    int v55 = v32;
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "#workout,dynamics mode on workout update,mct,%{public}.3f,workoutType,%{public}d,old dynamics mode,%{public}d,new dynamics mode,%{public}d", buf, 0x1Eu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419510 != -1) {
      dispatch_once(&qword_102419510, &stru_1022C21A0);
    }
    int v37 = *a2;
    int v38 = *((_DWORD *)a3 + 2);
    int v39 = *(_DWORD *)(a1 + 72);
    unsigned int v41 = 134349824;
    __int16 v42 = v37;
    __int16 v43 = 1026;
    int v44 = v38;
    __int16 v45 = 1026;
    int v46 = v8;
    __int16 v47 = 1026;
    int v48 = v39;
    char v40 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void cllcf::LCFusionMotionActivity::fitnessActivityUpdate(const CFTimeInterval &, const CLWorkoutUpdate &)", "%s\n", v40);
    if (v40 != buf) {
      free(v40);
    }
  }
}

void sub_10068E4C8(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

uint64_t sub_10068E4D4(uint64_t a1, double *a2, double a3)
{
  unsigned int v17 = 0;
  long long v6 = (uint64_t **)(a1 + 48);
  unsigned int v18 = 9;
  *(void *)int32x2_t buf = &v18;
  double v7 = -1.0;
  if (*((double *)sub_100042490((uint64_t **)(a1 + 48), &v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5) <= -1.0)
  {
    int v8 = 0;
  }
  else
  {
    int v8 = 9;
    unsigned int v18 = 9;
    *(void *)int32x2_t buf = &v18;
    double v7 = *((double *)sub_100042490(v6, &v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5);
    unsigned int v17 = 9;
  }
  unsigned int v18 = 8;
  *(void *)int32x2_t buf = &v18;
  if (*((double *)sub_100042490(v6, &v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5) > v7)
  {
    int v8 = 8;
    unsigned int v18 = 8;
    *(void *)int32x2_t buf = &v18;
    double v7 = *((double *)sub_100042490(v6, &v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5);
    unsigned int v17 = 8;
  }
  unsigned int v18 = 7;
  *(void *)int32x2_t buf = &v18;
  if (*((double *)sub_100042490(v6, &v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5) > v7)
  {
    int v8 = 7;
    unsigned int v18 = 7;
    *(void *)int32x2_t buf = &v18;
    double v7 = *((double *)sub_100042490(v6, &v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5);
    unsigned int v17 = 7;
  }
  unsigned int v18 = 6;
  *(void *)int32x2_t buf = &v18;
  if (*((double *)sub_100042490(v6, &v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5) > v7)
  {
    int v8 = 6;
    unsigned int v18 = 6;
    *(void *)int32x2_t buf = &v18;
    double v7 = *((double *)sub_100042490(v6, &v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5);
    unsigned int v17 = 6;
  }
  unsigned int v18 = 5;
  *(void *)int32x2_t buf = &v18;
  if (*((double *)sub_100042490(v6, &v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5) > v7)
  {
    int v8 = 5;
    unsigned int v18 = 5;
    *(void *)int32x2_t buf = &v18;
    double v7 = *((double *)sub_100042490(v6, &v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5);
    unsigned int v17 = 5;
  }
  unsigned int v18 = 4;
  *(void *)int32x2_t buf = &v18;
  if (*((double *)sub_100042490(v6, &v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5) > v7)
  {
    int v8 = 4;
    unsigned int v18 = 4;
    *(void *)int32x2_t buf = &v18;
    double v7 = *((double *)sub_100042490(v6, &v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5);
    unsigned int v17 = 4;
  }
  unsigned int v18 = 3;
  *(void *)int32x2_t buf = &v18;
  if (*((double *)sub_100042490(v6, &v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5) > v7)
  {
    int v8 = 3;
    unsigned int v18 = 3;
    *(void *)int32x2_t buf = &v18;
    double v7 = *((double *)sub_100042490(v6, &v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5);
    unsigned int v17 = 3;
  }
  if (v7 <= 0.0 || a3 >= 0.0 && vabdd_f64(*a2, v7) > a3) {
    return 0;
  }
  if (qword_102419510 != -1) {
    dispatch_once(&qword_102419510, &stru_1022C21A0);
  }
  int v10 = qword_102419518;
  if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
  {
    double v11 = *a2;
    int v12 = *(_DWORD *)(a1 + 72);
    *(_DWORD *)int32x2_t buf = 134349824;
    *(double *)&uint8_t buf[4] = v11;
    __int16 v27 = 1026;
    int v28 = v12;
    __int16 v29 = 1026;
    int v30 = v8;
    __int16 v31 = 2050;
    double v32 = v7;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "#motion,last known non-static dynamics mode used,mct,%{public}.3f,current dynamics mode,%{public}d,last non-static dynamics mode,%{public}d,last non-static dynamics mct,%{public}.3f", buf, 0x22u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419510 != -1) {
      dispatch_once(&qword_102419510, &stru_1022C21A0);
    }
    double v14 = *a2;
    int v15 = *(_DWORD *)(a1 + 72);
    unsigned int v18 = 134349824;
    double v19 = v14;
    __int16 v20 = 1026;
    int v21 = v15;
    __int16 v22 = 1026;
    int v23 = v8;
    __int16 v24 = 2050;
    double v25 = v7;
    uint64_t v16 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL cllcf::LCFusionMotionActivity::setDynamicsModeToLastKnownNonStatic(const CFTimeInterval &, const double)", "%s\n", v16);
    if (v16 != buf) {
      free(v16);
    }
  }
  *(_DWORD *)(a1 + 72) = v8;
  BOOL v13 = *(uint64_t **)a2;
  *(void *)int32x2_t buf = &v17;
  sub_100042490(v6, &v17, (uint64_t)&unk_101D0B290, (_DWORD **)buf)[5] = v13;
  return 1;
}

void sub_10068EA4C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

void sub_10068EA58(id a1)
{
  qword_102419518 = (uint64_t)os_log_create("com.apple.locationd.Position", "LCFusion");
}

void sub_10068EA88(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x1C;
  unint64_t v4 = v2 - 28;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    long long v6 = (char *)a1[3];
    a1[4] = v4;
    double v7 = (void *)a1[1];
    int v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    BOOL v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)int v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      char v34 = (char *)sub_1000DA54C(v5, v33);
      double v35 = &v34[8 * (v33 >> 2)];
      int v37 = &v34[8 * v36];
      int v38 = (uint64_t *)a1[1];
      int v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        int v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        unsigned int v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)unsigned int v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    double v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      BOOL v9 = (char *)a1[1];
    }
    int v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFC0uLL);
      sub_10017F0B4(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFC0uLL);
    sub_1002D02D8((uint64_t)a1, &v54);
    int v44 = (void *)a1[1];
    int v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    BOOL v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      char v34 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v46);
      double v35 = &v34[8 * (v46 >> 2)];
      int v37 = &v34[8 * v47];
      int v48 = (uint64_t *)a1[1];
      int v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        int v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        int v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)int v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      __int16 v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        int v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_1000DA54C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  int v53 = operator new(0xFC0uLL);
  sub_1000DA434(&v54, &v53);
  __int16 v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1002D03F8((uint64_t)&v54, v27);
  }
  __int16 v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_10068ED54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10068EDA0(uint64_t a1)
{
  return (*(_DWORD *)(a1 + 8) < 0xBu) & (0x6FFu >> *(_DWORD *)(a1 + 8));
}

NSDictionary *sub_10068EDBC(uint64_t a1)
{
  v13[0] = @"reason";
  v14[0] = +[NSString stringWithUTF8String:*(void *)(a1 + 32)];
  v13[1] = @"rat";
  sub_10010EE74(a1 + 40);
  if (v12 >= 0) {
    unint64_t v2 = &v11;
  }
  else {
    unint64_t v2 = v11;
  }
  v14[1] = +[NSString stringWithUTF8String:v2];
  v13[2] = @"type";
  sub_100114068(a1 + 40);
  if (v10 >= 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  v14[2] = +[NSString stringWithUTF8String:p_p];
  v13[3] = @"accuracy";
  v14[3] = +[NSNumber numberWithDouble:*(double *)(a1 + 804)];
  v13[4] = @"source";
  unint64_t v4 = (void *)(a1 + 736);
  if (*(char *)(a1 + 759) < 0) {
    unint64_t v4 = (void *)*v4;
  }
  v14[4] = +[NSString stringWithUTF8String:v4];
  v13[5] = @"match";
  uint64_t v5 = (void *)(a1 + 760);
  if (*(char *)(a1 + 783) < 0) {
    uint64_t v5 = (void *)*v5;
  }
  long long v6 = +[NSString stringWithUTF8String:v5];
  v13[6] = @"daily";
  void v14[5] = v6;
  v14[6] = &off_1023929A8;
  double v7 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:7];
  if (v10 < 0) {
    operator delete(__p);
  }
  if (v12 < 0) {
    operator delete(v11);
  }
  return v7;
}

void sub_10068EF84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_10068EFC4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 72);
  long long v7 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 100) = *(_OWORD *)(a2 + 100);
  *(_OWORD *)(a1 + 88) = v7;
  *(_OWORD *)(a1 + 72) = v6;
  *(_OWORD *)(a1 + 56) = v5;
  uint64_t v8 = a2 + 120;
  BOOL v9 = (_OWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  uint64_t v10 = a1 + 128;
  *(void *)(a1 + 144) = 0;
  sub_10010F834((void *)(a1 + 128), *(const void **)(a2 + 128), *(void *)(a2 + 136), (uint64_t)(*(void *)(a2 + 136) - *(void *)(a2 + 128)) >> 2);
  *(_OWORD *)(v10 + 24) = *(_OWORD *)(v8 + 32);
  long long v11 = *(_OWORD *)(v8 + 48);
  long long v12 = *(_OWORD *)(v8 + 64);
  long long v13 = *(_OWORD *)(v8 + 80);
  *(_OWORD *)(v10 + 88) = *(_OWORD *)(v8 + 96);
  *(_OWORD *)(v10 + 72) = v13;
  *(_OWORD *)(v10 + 56) = v12;
  *(_OWORD *)(v10 + 40) = v11;
  long long v14 = *(_OWORD *)(v8 + 112);
  long long v15 = *(_OWORD *)(v8 + 128);
  long long v16 = v4[15];
  v9[14] = v4[14];
  v9[15] = v16;
  *(_OWORD *)(v10 + 120) = v15;
  *(_OWORD *)(v10 + 104) = v14;
  long long v17 = v4[16];
  long long v18 = v4[17];
  long long v19 = v4[18];
  *(_OWORD *)(v10 + 212) = *(_OWORD *)(v8 + 220);
  v9[17] = v18;
  v9[18] = v19;
  v9[16] = v17;
  int64_t v20 = (unsigned char *)(v10 + 232);
  if (*(char *)(v8 + 263) < 0)
  {
    sub_1000DC48C(v20, *(void **)(a2 + 360), *(void *)(a2 + 368));
  }
  else
  {
    long long v21 = *(_OWORD *)(v8 + 240);
    *(void *)(v10 + 248) = *(void *)(v8 + 256);
    *(_OWORD *)int64_t v20 = v21;
  }
  long long v22 = *(_OWORD *)(a2 + 384);
  long long v23 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v23;
  *(_OWORD *)(a1 + 384) = v22;
  long long v24 = *(_OWORD *)(a2 + 432);
  long long v25 = *(_OWORD *)(a2 + 448);
  long long v26 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v26;
  *(_OWORD *)(a1 + 432) = v24;
  *(_OWORD *)(a1 + 448) = v25;
  long long v27 = *(_OWORD *)(a2 + 496);
  long long v28 = *(_OWORD *)(a2 + 512);
  long long v29 = *(_OWORD *)(a2 + 528);
  *(_DWORD *)(a1 + 544) = *(_DWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 512) = v28;
  *(_OWORD *)(a1 + 528) = v29;
  *(_OWORD *)(a1 + 496) = v27;
  long long v30 = *(_OWORD *)(a2 + 552);
  long long v31 = *(_OWORD *)(a2 + 568);
  long long v32 = *(_OWORD *)(a2 + 600);
  *(_OWORD *)(a1 + 584) = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 600) = v32;
  *(_OWORD *)(a1 + 552) = v30;
  *(_OWORD *)(a1 + 568) = v31;
  long long v33 = *(_OWORD *)(a2 + 616);
  long long v34 = *(_OWORD *)(a2 + 632);
  long long v35 = *(_OWORD *)(a2 + 664);
  *(_OWORD *)(a1 + 648) = *(_OWORD *)(a2 + 648);
  *(_OWORD *)(a1 + 664) = v35;
  *(_OWORD *)(a1 + 616) = v33;
  *(_OWORD *)(a1 + 632) = v34;
  long long v36 = *(_OWORD *)(a2 + 680);
  long long v37 = *(_OWORD *)(a2 + 696);
  long long v38 = *(_OWORD *)(a2 + 712);
  *(_DWORD *)(a1 + 728) = *(_DWORD *)(a2 + 728);
  *(_OWORD *)(a1 + 696) = v37;
  *(_OWORD *)(a1 + 712) = v38;
  *(_OWORD *)(a1 + 680) = v36;
  if (*(char *)(a2 + 759) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 736), *(void **)(a2 + 736), *(void *)(a2 + 744));
  }
  else
  {
    long long v39 = *(_OWORD *)(a2 + 736);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(_OWORD *)(a1 + 736) = v39;
  }
  double result = (unsigned char *)(a1 + 760);
  if (*(char *)(a2 + 783) < 0) {
    return sub_1000DC48C(result, *(void **)(a2 + 760), *(void *)(a2 + 768));
  }
  long long v41 = *(_OWORD *)(a2 + 760);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(_OWORD *)double result = v41;
  return result;
}

void sub_10068F1A8(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 759) < 0) {
    operator delete(*v3);
  }
  sub_10055C7F8(v2);
  _Unwind_Resume(a1);
}

void sub_10068F1EC(uint64_t a1)
{
  if (*(char *)(a1 + 783) < 0) {
    operator delete(*(void **)(a1 + 760));
  }
  if (*(char *)(a1 + 759) < 0) {
    operator delete(*(void **)(a1 + 736));
  }
  if (*(char *)(a1 + 383) < 0) {
    operator delete(*(void **)(a1 + 360));
  }
  uint64_t v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(void *)(a1 + 136) = v2;
    operator delete(v2);
  }
}

NSDictionary *sub_10068F264(uint64_t a1)
{
  v4[0] = @"cell";
  v3[0] = @"provider";
  v3[1] = @"flow";
  uint64_t v1 = (void *)(a1 + 32);
  if (*(char *)(a1 + 55) < 0) {
    uint64_t v1 = (void *)*v1;
  }
  v3[2] = @"island";
  v4[1] = +[NSString stringWithUTF8String:v1];
  v4[2] = @"null";
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:3];
}

NSDictionary *sub_10068F31C(uint64_t a1)
{
  v4[0] = @"cell";
  v3[0] = @"provider";
  v3[1] = @"flow";
  uint64_t v1 = (void *)(a1 + 32);
  if (*(char *)(a1 + 55) < 0) {
    uint64_t v1 = (void *)*v1;
  }
  v3[2] = @"island";
  v4[1] = +[NSString stringWithUTF8String:v1];
  v4[2] = @"sentinel";
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:3];
}

void sub_10068F3D4(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_10068F404(id a1)
{
  qword_102419638 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_10068F434(id a1)
{
  qword_102419658 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

uint64_t sub_10068F464(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  uint64_t v8 = v6;
  if (v7 < a3)
  {
    unint64_t v9 = v7;
    uint64_t v8 = *(void *)(a1 + 8);
    do
    {
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      long long v10 = *(_OWORD *)(v9 + 16);
      long long v11 = *(_OWORD *)(v9 + 32);
      long long v12 = *(_OWORD *)(v9 + 48);
      *(_OWORD *)(v8 + 60) = *(_OWORD *)(v9 + 60);
      *(_OWORD *)(v8 + 32) = v11;
      *(_OWORD *)(v8 + 48) = v12;
      *(_OWORD *)(v8 + 16) = v10;
      *(_DWORD *)(v8 + 80) = *(_DWORD *)(v9 + 80);
      *(void *)(v8 + 96) = 0;
      *(void *)(v8 + 104) = 0;
      *(void *)(v8 + 88) = 0;
      *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
      *(void *)(v8 + 104) = *(void *)(v9 + 104);
      *(void *)(v9 + 96) = 0;
      *(void *)(v9 + 104) = 0;
      *(void *)(v9 + 88) = 0;
      long long v13 = *(_OWORD *)(v9 + 176);
      long long v15 = *(_OWORD *)(v9 + 128);
      long long v14 = *(_OWORD *)(v9 + 144);
      *(_OWORD *)(v8 + 160) = *(_OWORD *)(v9 + 160);
      *(_OWORD *)(v8 + 176) = v13;
      *(_OWORD *)(v8 + 128) = v15;
      *(_OWORD *)(v8 + 144) = v14;
      long long v16 = *(_OWORD *)(v9 + 240);
      long long v18 = *(_OWORD *)(v9 + 192);
      long long v17 = *(_OWORD *)(v9 + 208);
      *(_OWORD *)(v8 + 224) = *(_OWORD *)(v9 + 224);
      *(_OWORD *)(v8 + 240) = v16;
      *(_OWORD *)(v8 + 192) = v18;
      *(_OWORD *)(v8 + 208) = v17;
      long long v20 = *(_OWORD *)(v9 + 272);
      long long v19 = *(_OWORD *)(v9 + 288);
      long long v21 = *(_OWORD *)(v9 + 256);
      *(_OWORD *)(v8 + 300) = *(_OWORD *)(v9 + 300);
      *(_OWORD *)(v8 + 272) = v20;
      *(_OWORD *)(v8 + 288) = v19;
      *(_OWORD *)(v8 + 256) = v21;
      *(_OWORD *)(v8 + 112) = *(_OWORD *)(v9 + 112);
      long long v22 = *(_OWORD *)(v9 + 320);
      *(void *)(v8 + 336) = *(void *)(v9 + 336);
      *(_OWORD *)(v8 + 320) = v22;
      *(void *)(v9 + 328) = 0;
      *(void *)(v9 + 336) = 0;
      *(void *)(v9 + 320) = 0;
      long long v23 = *(_OWORD *)(v9 + 440);
      long long v25 = *(_OWORD *)(v9 + 392);
      long long v24 = *(_OWORD *)(v9 + 408);
      *(_OWORD *)(v8 + 424) = *(_OWORD *)(v9 + 424);
      *(_OWORD *)(v8 + 440) = v23;
      *(_OWORD *)(v8 + 392) = v25;
      *(_OWORD *)(v8 + 408) = v24;
      long long v26 = *(_OWORD *)(v9 + 344);
      long long v27 = *(_OWORD *)(v9 + 376);
      *(_OWORD *)(v8 + 360) = *(_OWORD *)(v9 + 360);
      *(_OWORD *)(v8 + 376) = v27;
      *(_OWORD *)(v8 + 344) = v26;
      long long v29 = *(_OWORD *)(v9 + 472);
      long long v28 = *(_OWORD *)(v9 + 488);
      long long v30 = *(_OWORD *)(v9 + 456);
      *(_DWORD *)(v8 + 504) = *(_DWORD *)(v9 + 504);
      *(_OWORD *)(v8 + 472) = v29;
      *(_OWORD *)(v8 + 488) = v28;
      *(_OWORD *)(v8 + 456) = v30;
      long long v31 = *(_OWORD *)(v9 + 512);
      long long v32 = *(_OWORD *)(v9 + 528);
      long long v33 = *(_OWORD *)(v9 + 560);
      *(_OWORD *)(v8 + 544) = *(_OWORD *)(v9 + 544);
      *(_OWORD *)(v8 + 560) = v33;
      *(_OWORD *)(v8 + 512) = v31;
      *(_OWORD *)(v8 + 528) = v32;
      long long v34 = *(_OWORD *)(v9 + 576);
      long long v35 = *(_OWORD *)(v9 + 592);
      long long v36 = *(_OWORD *)(v9 + 624);
      *(_OWORD *)(v8 + 608) = *(_OWORD *)(v9 + 608);
      *(_OWORD *)(v8 + 624) = v36;
      *(_OWORD *)(v8 + 576) = v34;
      *(_OWORD *)(v8 + 592) = v35;
      long long v37 = *(_OWORD *)(v9 + 640);
      long long v38 = *(_OWORD *)(v9 + 656);
      long long v39 = *(_OWORD *)(v9 + 672);
      *(_DWORD *)(v8 + 688) = *(_DWORD *)(v9 + 688);
      *(_OWORD *)(v8 + 656) = v38;
      *(_OWORD *)(v8 + 672) = v39;
      *(_OWORD *)(v8 + 640) = v37;
      v8 += 696;
      v9 += 696;
    }
    while (v9 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_10068F7EC((uint64_t)&v41, a2, v7, v6);
}

void sub_10068F5E4(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  if (v4 == a1[3])
  {
    unint64_t v5 = a1[1];
    if (v5 <= *a1)
    {
      if (v4 == *a1) {
        unint64_t v11 = 1;
      }
      else {
        unint64_t v11 = 0xCDFA1D6CDFA1D6CELL * ((v4 - *a1) >> 3);
      }
      unint64_t v12 = v11 >> 2;
      uint64_t v13 = a1[4];
      uint64_t v20 = a1[4];
      *(void *)&long long v18 = sub_10010FAD4(v13, v11);
      *((void *)&v18 + 1) = v18 + 696 * v12;
      *(void *)&long long v19 = *((void *)&v18 + 1);
      *((void *)&v19 + 1) = v18 + 696 * v14;
      sub_10068FB3C((uint64_t)&v18, a1[1], 0x66FD0EB66FD0EB67 * ((uint64_t)(a1[2] - a1[1]) >> 3));
      long long v15 = v19;
      long long v16 = *(_OWORD *)a1;
      long long v17 = *((_OWORD *)a1 + 1);
      *(_OWORD *)a1 = v18;
      *((_OWORD *)a1 + 1) = v15;
      long long v18 = v16;
      long long v19 = v17;
      sub_10010FD98((void **)&v18);
      uint64_t v4 = a1[2];
    }
    else
    {
      uint64_t v6 = 0x66FD0EB66FD0EB67 * ((uint64_t)(v5 - *a1) >> 3);
      if (v6 >= -1) {
        uint64_t v7 = v6 + 1;
      }
      else {
        uint64_t v7 = v6 + 2;
      }
      uint64_t v8 = v7 >> 1;
      uint64_t v9 = -696 * v8;
      sub_10068F9C8((uint64_t)&v18, v5, v4, v5 - 696 * v8);
      uint64_t v4 = v10;
      a1[1] += v9;
      a1[2] = v10;
    }
  }
  sub_1000FC2C4(a1[4], v4, a2);
  a1[2] += 696;
}

void sub_10068F724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

uint64_t sub_10068F738(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  uint64_t v7 = (uint64_t)(a1 + 2);
  sub_10010FB98((uint64_t)(a1 + 2), a3, a3, *a1, *a1, v6, v6);
  a2[1] = v8;
  a2[2] = sub_10068FC88(v7, a3, a1[1], a2[2]);
  uint64_t v9 = *a1;
  *a1 = a2[1];
  a2[1] = v9;
  uint64_t v10 = a1[1];
  a1[1] = a2[2];
  a2[2] = v10;
  uint64_t v11 = a1[2];
  a1[2] = a2[3];
  a2[3] = v11;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_10068F7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = a3 + v7;
      uint64_t v9 = a4 + v7;
      uint64_t v10 = (_OWORD *)(a4 + v7 - 696);
      _OWORD *v10 = *(_OWORD *)(a3 + v7 - 696);
      long long v11 = *(_OWORD *)(a3 + v7 - 680);
      long long v12 = *(_OWORD *)(a3 + v7 - 664);
      long long v13 = *(_OWORD *)(a3 + v7 - 648);
      *(_OWORD *)((char *)v10 + 60) = *(_OWORD *)(a3 + v7 - 636);
      int32x4_t v10[2] = v12;
      void v10[3] = v13;
      v10[1] = v11;
      *(_DWORD *)(a4 + v7 - 616) = *(_DWORD *)(a3 + v7 - 616);
      sub_1000F4EBC(a4 + v7 - 608, (__n128 *)(a3 + v7 - 608));
      uint64_t v14 = (_OWORD *)(a4 + v7 - 584);
      *uint64_t v14 = *(_OWORD *)(a3 + v7 - 584);
      long long v15 = *(_OWORD *)(a3 + v7 - 568);
      long long v16 = *(_OWORD *)(a3 + v7 - 552);
      long long v17 = *(_OWORD *)(a3 + v7 - 520);
      v14[3] = *(_OWORD *)(a3 + v7 - 536);
      v14[4] = v17;
      v14[1] = v15;
      v14[2] = v16;
      long long v18 = *(_OWORD *)(a3 + v7 - 504);
      long long v19 = *(_OWORD *)(a3 + v7 - 488);
      long long v20 = *(_OWORD *)(a3 + v7 - 456);
      void v14[7] = *(_OWORD *)(a3 + v7 - 472);
      v14[8] = v20;
      void v14[5] = v18;
      v14[6] = v19;
      long long v21 = *(_OWORD *)(a3 + v7 - 440);
      long long v22 = *(_OWORD *)(a3 + v7 - 424);
      long long v23 = *(_OWORD *)(a3 + v7 - 408);
      *(_OWORD *)((char *)v14 + 188) = *(_OWORD *)(a3 + v7 - 396);
      v14[10] = v22;
      v14[11] = v23;
      v14[9] = v21;
      long long v24 = (void **)(a4 + v7 - 376);
      if (*(char *)(a4 + v7 - 353) < 0) {
        operator delete(*v24);
      }
      long long v25 = *(_OWORD *)(v8 - 376);
      *(void *)(v9 - 360) = *(void *)(v8 - 360);
      *(_OWORD *)long long v24 = v25;
      *(unsigned char *)(v8 - 353) = 0;
      *(unsigned char *)(v8 - 376) = 0;
      long long v26 = (_OWORD *)(v9 - 352);
      long long v27 = *(_OWORD *)(v8 - 256);
      long long v29 = *(_OWORD *)(v8 - 288);
      long long v28 = *(_OWORD *)(v8 - 272);
      v26[3] = *(_OWORD *)(v8 - 304);
      v26[4] = v29;
      v26[5] = v28;
      *(_OWORD *)(v9 - 256) = v27;
      long long v31 = *(_OWORD *)(v8 - 336);
      long long v30 = *(_OWORD *)(v8 - 320);
      _OWORD *v26 = *(_OWORD *)(v8 - 352);
      v26[1] = v31;
      v26[2] = v30;
      long long v32 = *(_OWORD *)(v8 - 240);
      long long v33 = *(_OWORD *)(v8 - 224);
      long long v34 = *(_OWORD *)(v8 - 208);
      *(_DWORD *)(v9 - 192) = *(_DWORD *)(v8 - 192);
      *(_OWORD *)(v9 - 224) = v33;
      *(_OWORD *)(v9 - 208) = v34;
      *(_OWORD *)(v9 - 240) = v32;
      long long v35 = *(_OWORD *)(v8 - 184);
      long long v36 = *(_OWORD *)(v8 - 168);
      long long v37 = *(_OWORD *)(v8 - 152);
      *(_OWORD *)(v9 - 136) = *(_OWORD *)(v8 - 136);
      *(_OWORD *)(v9 - 152) = v37;
      *(_OWORD *)(v9 - 168) = v36;
      *(_OWORD *)(v9 - 184) = v35;
      long long v38 = *(_OWORD *)(v8 - 120);
      long long v39 = *(_OWORD *)(v8 - 104);
      long long v40 = *(_OWORD *)(v8 - 88);
      *(_OWORD *)(v9 - 72) = *(_OWORD *)(v8 - 72);
      *(_OWORD *)(v9 - 88) = v40;
      *(_OWORD *)(v9 - 104) = v39;
      *(_OWORD *)(v9 - 120) = v38;
      long long v41 = *(_OWORD *)(v8 - 56);
      long long v42 = *(_OWORD *)(v8 - 40);
      long long v43 = *(_OWORD *)(v8 - 24);
      *(_DWORD *)(v9 - 8) = *(_DWORD *)(v8 - 8);
      *(_OWORD *)(v9 - 24) = v43;
      *(_OWORD *)(v9 - 40) = v42;
      *(_OWORD *)(v9 - 56) = v41;
      v7 -= 696;
    }
    while (a3 + v7 != a2);
  }
  return a3;
}

uint64_t sub_10068F9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      *(_OWORD *)a4 = *(_OWORD *)v5;
      long long v7 = *(_OWORD *)(v5 + 16);
      long long v8 = *(_OWORD *)(v5 + 32);
      long long v9 = *(_OWORD *)(v5 + 48);
      *(_OWORD *)(a4 + 60) = *(_OWORD *)(v5 + 60);
      *(_OWORD *)(a4 + 32) = v8;
      *(_OWORD *)(a4 + 48) = v9;
      *(_OWORD *)(a4 + 16) = v7;
      *(_DWORD *)(a4 + 80) = *(_DWORD *)(v5 + 80);
      uint64_t v10 = v5 + 88;
      sub_1000F4EBC(a4 + 88, (__n128 *)(v5 + 88));
      *(_OWORD *)(a4 + 112) = *(_OWORD *)(v5 + 112);
      long long v11 = *(_OWORD *)(v5 + 128);
      long long v12 = *(_OWORD *)(v5 + 144);
      long long v13 = *(_OWORD *)(v5 + 176);
      *(_OWORD *)(a4 + 160) = *(_OWORD *)(v5 + 160);
      *(_OWORD *)(a4 + 176) = v13;
      *(_OWORD *)(a4 + 128) = v11;
      *(_OWORD *)(a4 + 144) = v12;
      long long v14 = *(_OWORD *)(v5 + 192);
      long long v15 = *(_OWORD *)(v5 + 208);
      long long v16 = *(_OWORD *)(v5 + 240);
      *(_OWORD *)(a4 + 224) = *(_OWORD *)(v5 + 224);
      *(_OWORD *)(a4 + 240) = v16;
      *(_OWORD *)(a4 + 192) = v14;
      *(_OWORD *)(a4 + 208) = v15;
      long long v17 = *(_OWORD *)(v5 + 256);
      long long v18 = *(_OWORD *)(v5 + 272);
      long long v19 = *(_OWORD *)(v5 + 288);
      *(_OWORD *)(a4 + 300) = *(_OWORD *)(v5 + 300);
      *(_OWORD *)(a4 + 272) = v18;
      *(_OWORD *)(a4 + 288) = v19;
      *(_OWORD *)(a4 + 256) = v17;
      long long v20 = (void **)(a4 + 320);
      if (*(char *)(a4 + 343) < 0) {
        operator delete(*v20);
      }
      long long v21 = *(_OWORD *)(v10 + 232);
      *(void *)(a4 + 336) = *(void *)(v10 + 248);
      *(_OWORD *)long long v20 = v21;
      *(unsigned char *)(v10 + 255) = 0;
      *(unsigned char *)(v10 + 232) = 0;
      long long v23 = *(_OWORD *)(v10 + 336);
      long long v22 = *(_OWORD *)(v10 + 352);
      long long v24 = *(_OWORD *)(v10 + 320);
      *(_OWORD *)(a4 + 392) = *(_OWORD *)(v10 + 304);
      *(_OWORD *)(a4 + 408) = v24;
      *(_OWORD *)(a4 + 424) = v23;
      *(_OWORD *)(a4 + 440) = v22;
      long long v26 = *(_OWORD *)(v10 + 272);
      long long v25 = *(_OWORD *)(v10 + 288);
      *(_OWORD *)(a4 + 344) = *(_OWORD *)(v10 + 256);
      *(_OWORD *)(a4 + 360) = v26;
      *(_OWORD *)(a4 + 376) = v25;
      long long v27 = *(_OWORD *)(v10 + 368);
      long long v28 = *(_OWORD *)(v10 + 384);
      long long v29 = *(_OWORD *)(v10 + 400);
      *(_DWORD *)(a4 + 504) = *(_DWORD *)(v10 + 416);
      *(_OWORD *)(a4 + 472) = v28;
      *(_OWORD *)(a4 + 488) = v29;
      *(_OWORD *)(a4 + 456) = v27;
      long long v30 = *(_OWORD *)(v10 + 424);
      long long v31 = *(_OWORD *)(v10 + 440);
      long long v32 = *(_OWORD *)(v10 + 472);
      *(_OWORD *)(a4 + 544) = *(_OWORD *)(v10 + 456);
      *(_OWORD *)(a4 + 560) = v32;
      *(_OWORD *)(a4 + 512) = v30;
      *(_OWORD *)(a4 + 528) = v31;
      long long v33 = *(_OWORD *)(v10 + 488);
      long long v34 = *(_OWORD *)(v10 + 504);
      long long v35 = *(_OWORD *)(v10 + 536);
      *(_OWORD *)(a4 + 608) = *(_OWORD *)(v10 + 520);
      *(_OWORD *)(a4 + 624) = v35;
      *(_OWORD *)(a4 + 576) = v33;
      *(_OWORD *)(a4 + 592) = v34;
      long long v36 = *(_OWORD *)(v10 + 552);
      long long v37 = *(_OWORD *)(v10 + 568);
      long long v38 = *(_OWORD *)(v10 + 584);
      *(_DWORD *)(a4 + 688) = *(_DWORD *)(v10 + 600);
      *(_OWORD *)(a4 + 656) = v37;
      *(_OWORD *)(a4 + 672) = v38;
      *(_OWORD *)(a4 + 640) = v36;
      a4 += 696;
      uint64_t v5 = v10 + 608;
    }
    while (v10 + 608 != a3);
    return a3;
  }
  return v5;
}

uint64_t sub_10068FB3C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (a3)
  {
    uint64_t v4 = v3 + 696 * a3;
    do
    {
      *(_OWORD *)uint64_t v3 = *(_OWORD *)a2;
      long long v5 = *(_OWORD *)(a2 + 16);
      long long v6 = *(_OWORD *)(a2 + 32);
      long long v7 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(v3 + 60) = *(_OWORD *)(a2 + 60);
      *(_OWORD *)(v3 + 32) = v6;
      *(_OWORD *)(v3 + 48) = v7;
      *(_OWORD *)(v3 + 16) = v5;
      *(_DWORD *)(v3 + 80) = *(_DWORD *)(a2 + 80);
      *(void *)(v3 + 96) = 0;
      *(void *)(v3 + 104) = 0;
      *(void *)(v3 + 88) = 0;
      *(_OWORD *)(v3 + 88) = *(_OWORD *)(a2 + 88);
      *(void *)(v3 + 104) = *(void *)(a2 + 104);
      *(void *)(a2 + 96) = 0;
      *(void *)(a2 + 104) = 0;
      *(void *)(a2 + 88) = 0;
      long long v8 = *(_OWORD *)(a2 + 176);
      long long v10 = *(_OWORD *)(a2 + 128);
      long long v9 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(v3 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(v3 + 176) = v8;
      *(_OWORD *)(v3 + 128) = v10;
      *(_OWORD *)(v3 + 144) = v9;
      long long v11 = *(_OWORD *)(a2 + 240);
      long long v13 = *(_OWORD *)(a2 + 192);
      long long v12 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(v3 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(v3 + 240) = v11;
      *(_OWORD *)(v3 + 192) = v13;
      *(_OWORD *)(v3 + 208) = v12;
      long long v15 = *(_OWORD *)(a2 + 272);
      long long v14 = *(_OWORD *)(a2 + 288);
      long long v16 = *(_OWORD *)(a2 + 256);
      *(_OWORD *)(v3 + 300) = *(_OWORD *)(a2 + 300);
      *(_OWORD *)(v3 + 272) = v15;
      *(_OWORD *)(v3 + 288) = v14;
      *(_OWORD *)(v3 + 256) = v16;
      *(_OWORD *)(v3 + 112) = *(_OWORD *)(a2 + 112);
      long long v17 = *(_OWORD *)(a2 + 320);
      *(void *)(v3 + 336) = *(void *)(a2 + 336);
      *(_OWORD *)(v3 + 320) = v17;
      *(void *)(a2 + 328) = 0;
      *(void *)(a2 + 336) = 0;
      *(void *)(a2 + 320) = 0;
      long long v18 = *(_OWORD *)(a2 + 440);
      long long v20 = *(_OWORD *)(a2 + 392);
      long long v19 = *(_OWORD *)(a2 + 408);
      *(_OWORD *)(v3 + 424) = *(_OWORD *)(a2 + 424);
      *(_OWORD *)(v3 + 440) = v18;
      *(_OWORD *)(v3 + 392) = v20;
      *(_OWORD *)(v3 + 408) = v19;
      long long v21 = *(_OWORD *)(a2 + 344);
      long long v22 = *(_OWORD *)(a2 + 376);
      *(_OWORD *)(v3 + 360) = *(_OWORD *)(a2 + 360);
      *(_OWORD *)(v3 + 376) = v22;
      *(_OWORD *)(v3 + 344) = v21;
      long long v24 = *(_OWORD *)(a2 + 472);
      long long v23 = *(_OWORD *)(a2 + 488);
      long long v25 = *(_OWORD *)(a2 + 456);
      *(_DWORD *)(v3 + 504) = *(_DWORD *)(a2 + 504);
      *(_OWORD *)(v3 + 472) = v24;
      *(_OWORD *)(v3 + 488) = v23;
      *(_OWORD *)(v3 + 456) = v25;
      long long v26 = *(_OWORD *)(a2 + 512);
      long long v27 = *(_OWORD *)(a2 + 528);
      long long v28 = *(_OWORD *)(a2 + 560);
      *(_OWORD *)(v3 + 544) = *(_OWORD *)(a2 + 544);
      *(_OWORD *)(v3 + 560) = v28;
      *(_OWORD *)(v3 + 512) = v26;
      *(_OWORD *)(v3 + 528) = v27;
      long long v29 = *(_OWORD *)(a2 + 576);
      long long v30 = *(_OWORD *)(a2 + 592);
      long long v31 = *(_OWORD *)(a2 + 624);
      *(_OWORD *)(v3 + 608) = *(_OWORD *)(a2 + 608);
      *(_OWORD *)(v3 + 624) = v31;
      *(_OWORD *)(v3 + 576) = v29;
      *(_OWORD *)(v3 + 592) = v30;
      long long v32 = *(_OWORD *)(a2 + 640);
      long long v33 = *(_OWORD *)(a2 + 656);
      long long v34 = *(_OWORD *)(a2 + 672);
      *(_DWORD *)(v3 + 688) = *(_DWORD *)(a2 + 688);
      *(_OWORD *)(v3 + 656) = v33;
      *(_OWORD *)(v3 + 672) = v34;
      *(_OWORD *)(v3 + 640) = v32;
      v3 += 696;
      a2 += 696;
    }
    while (v3 != v4);
    uint64_t v3 = v4;
  }
  *(void *)(result + 16) = v3;
  return result;
}

uint64_t sub_10068FC88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v39 = a4;
  uint64_t v38 = a4;
  v36[0] = a1;
  v36[1] = &v38;
  v36[2] = &v39;
  if (a2 != a3)
  {
    do
    {
      *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
      long long v5 = *(_OWORD *)(a2 + 16);
      long long v6 = *(_OWORD *)(a2 + 32);
      long long v7 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(v4 + 60) = *(_OWORD *)(a2 + 60);
      *(_OWORD *)(v4 + 32) = v6;
      *(_OWORD *)(v4 + 48) = v7;
      *(_OWORD *)(v4 + 16) = v5;
      *(_DWORD *)(v4 + 80) = *(_DWORD *)(a2 + 80);
      *(void *)(v4 + 96) = 0;
      *(void *)(v4 + 104) = 0;
      *(void *)(v4 + 88) = 0;
      *(_OWORD *)(v4 + 88) = *(_OWORD *)(a2 + 88);
      *(void *)(v4 + 104) = *(void *)(a2 + 104);
      *(void *)(a2 + 96) = 0;
      *(void *)(a2 + 104) = 0;
      *(void *)(a2 + 88) = 0;
      long long v8 = *(_OWORD *)(a2 + 176);
      long long v10 = *(_OWORD *)(a2 + 128);
      long long v9 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(v4 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(v4 + 176) = v8;
      *(_OWORD *)(v4 + 128) = v10;
      *(_OWORD *)(v4 + 144) = v9;
      long long v11 = *(_OWORD *)(a2 + 240);
      long long v13 = *(_OWORD *)(a2 + 192);
      long long v12 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(v4 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(v4 + 240) = v11;
      *(_OWORD *)(v4 + 192) = v13;
      *(_OWORD *)(v4 + 208) = v12;
      long long v15 = *(_OWORD *)(a2 + 272);
      long long v14 = *(_OWORD *)(a2 + 288);
      long long v16 = *(_OWORD *)(a2 + 256);
      *(_OWORD *)(v4 + 300) = *(_OWORD *)(a2 + 300);
      *(_OWORD *)(v4 + 272) = v15;
      *(_OWORD *)(v4 + 288) = v14;
      *(_OWORD *)(v4 + 256) = v16;
      *(_OWORD *)(v4 + 112) = *(_OWORD *)(a2 + 112);
      long long v17 = *(_OWORD *)(a2 + 320);
      *(void *)(v4 + 336) = *(void *)(a2 + 336);
      *(_OWORD *)(v4 + 320) = v17;
      *(void *)(a2 + 328) = 0;
      *(void *)(a2 + 336) = 0;
      *(void *)(a2 + 320) = 0;
      long long v18 = *(_OWORD *)(a2 + 440);
      long long v20 = *(_OWORD *)(a2 + 392);
      long long v19 = *(_OWORD *)(a2 + 408);
      *(_OWORD *)(v4 + 424) = *(_OWORD *)(a2 + 424);
      *(_OWORD *)(v4 + 440) = v18;
      *(_OWORD *)(v4 + 392) = v20;
      *(_OWORD *)(v4 + 408) = v19;
      long long v21 = *(_OWORD *)(a2 + 344);
      long long v22 = *(_OWORD *)(a2 + 376);
      *(_OWORD *)(v4 + 360) = *(_OWORD *)(a2 + 360);
      *(_OWORD *)(v4 + 376) = v22;
      *(_OWORD *)(v4 + 344) = v21;
      long long v24 = *(_OWORD *)(a2 + 472);
      long long v23 = *(_OWORD *)(a2 + 488);
      long long v25 = *(_OWORD *)(a2 + 456);
      *(_DWORD *)(v4 + 504) = *(_DWORD *)(a2 + 504);
      *(_OWORD *)(v4 + 472) = v24;
      *(_OWORD *)(v4 + 488) = v23;
      *(_OWORD *)(v4 + 456) = v25;
      long long v26 = *(_OWORD *)(a2 + 512);
      long long v27 = *(_OWORD *)(a2 + 528);
      long long v28 = *(_OWORD *)(a2 + 560);
      *(_OWORD *)(v4 + 544) = *(_OWORD *)(a2 + 544);
      *(_OWORD *)(v4 + 560) = v28;
      *(_OWORD *)(v4 + 512) = v26;
      *(_OWORD *)(v4 + 528) = v27;
      long long v29 = *(_OWORD *)(a2 + 576);
      long long v30 = *(_OWORD *)(a2 + 592);
      long long v31 = *(_OWORD *)(a2 + 624);
      *(_OWORD *)(v4 + 608) = *(_OWORD *)(a2 + 608);
      *(_OWORD *)(v4 + 624) = v31;
      *(_OWORD *)(v4 + 576) = v29;
      *(_OWORD *)(v4 + 592) = v30;
      long long v32 = *(_OWORD *)(a2 + 640);
      long long v33 = *(_OWORD *)(a2 + 656);
      long long v34 = *(_OWORD *)(a2 + 672);
      *(_DWORD *)(v4 + 688) = *(_DWORD *)(a2 + 688);
      *(_OWORD *)(v4 + 656) = v33;
      *(_OWORD *)(v4 + 672) = v34;
      *(_OWORD *)(v4 + 640) = v32;
      v4 += 696;
      a2 += 696;
    }
    while (a2 != a3);
    uint64_t v39 = v4;
  }
  char v37 = 1;
  sub_1000FB26C((uint64_t)v36);
  return v4;
}

void sub_10068FE18(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 696;
      sub_1000FA860(v5, v3);
    }
    while (v3 != v4);
  }
}

void sub_10068FE6C(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_1000FA860(v3, v1);
      v1 += 864;
    }
    while (v1 != v2);
  }
}

void sub_10068FEC0(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 864;
      sub_1000FA860(v5, v3);
    }
    while (v3 != v4);
  }
}

uint64_t sub_10068FF2C(uint64_t result, uint64_t a2)
{
  double v2 = *(double *)(result + 720);
  double v3 = *(double *)(a2 + 720);
  if (v2 >= 0.0 && v3 < 0.0) {
    return 0;
  }
  if (v2 < 0.0 && v3 >= 0.0) {
    return 1;
  }
  if (v2 >= 0.0 != v3 >= 0.0)
  {
LABEL_51:
    double result = sub_101A69F24(result);
    goto LABEL_52;
  }
  int v4 = *(_DWORD *)(result + 796);
  int v5 = *(_DWORD *)(a2 + 796);
  if (v4 == 6 && v5 != 6) {
    return 0;
  }
  if (v4 != 6 && v5 == 6) {
    return 1;
  }
  if (v4 != v5)
  {
LABEL_52:
    double result = sub_101A6A35C(result);
    goto LABEL_53;
  }
  unsigned int v7 = *(_DWORD *)(result + 8);
  if (v7 <= 9 && ((1 << v7) & 0x287) != 0 || v7 - 3 <= 2)
  {
    unsigned int v8 = *(_DWORD *)(a2 + 8);
    if ((v8 > 9 || ((1 << v8) & 0x287) == 0) && v8 - 3 > 2) {
      return 0;
    }
  }
  if (v7 < 0xA && ((0x287u >> v7) & 1) != 0)
  {
    int v11 = 1;
LABEL_35:
    unsigned int v12 = *(_DWORD *)(a2 + 8);
    if (v12 <= 9 && ((1 << v12) & 0x287) != 0)
    {
      if (v11)
      {
LABEL_38:
        if (v7 == 6)
        {
          if (v12 != 6) {
            return 0;
          }
LABEL_42:
          if ((v7 == 6) == (v12 == 6))
          {
            if (v2 >= v3) {
              return v2 > v3;
            }
            return 0;
          }
LABEL_53:
          uint64_t v13 = sub_101A6A1F4(result);
          return sub_10069011C(v13);
        }
        if (v12 != 6) {
          goto LABEL_42;
        }
        return 1;
      }
    }
    else if (v11 == v12 - 3 < 3)
    {
      goto LABEL_38;
    }
    double result = sub_101A6A08C();
    goto LABEL_51;
  }
  BOOL v9 = v7 - 3 < 3;
  if (v7 - 3 < 3) {
    goto LABEL_30;
  }
  unsigned int v10 = *(_DWORD *)(a2 + 8);
  if (v10 >= 0xA)
  {
    if (v10 - 3 < 3) {
      return 1;
    }
    goto LABEL_30;
  }
  double result = 1;
  if (((0x287u >> v10) & 1) == 0 && v10 - 3 > 2)
  {
LABEL_30:
    if (v7 == 9) {
      BOOL v9 = 1;
    }
    int v11 = v7 == 7 || v9;
    goto LABEL_35;
  }
  return result;
}

double sub_10069011C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_100691804(a1, a2, a3, a4);
  if (sub_10068FF2C(a5, a4))
  {
    sub_100691428((long long *)a4, (long long *)a5);
    int v11 = *(_DWORD *)(a4 + 696);
    *(_DWORD *)(a4 + 696) = *(_DWORD *)(a5 + 696);
    *(_DWORD *)(a5 + 696) = v11;
    unsigned int v12 = (_OWORD *)(a4 + 700);
    long long v70 = *(_OWORD *)(a4 + 796);
    long long v74 = *(_OWORD *)(a4 + 812);
    *(_OWORD *)uint64_t v78 = *(_OWORD *)(a4 + 828);
    *(_OWORD *)&v78[12] = *(_OWORD *)(a4 + 840);
    long long v54 = *(_OWORD *)(a4 + 732);
    long long v58 = *(_OWORD *)(a4 + 748);
    long long v62 = *(_OWORD *)(a4 + 764);
    long long v66 = *(_OWORD *)(a4 + 780);
    long long v46 = *(_OWORD *)(a4 + 700);
    long long v50 = *(_OWORD *)(a4 + 716);
    long long v13 = *(_OWORD *)(a5 + 716);
    *(_OWORD *)(a4 + 700) = *(_OWORD *)(a5 + 700);
    *(_OWORD *)(a4 + 716) = v13;
    long long v14 = *(_OWORD *)(a5 + 732);
    long long v15 = *(_OWORD *)(a5 + 748);
    long long v16 = *(_OWORD *)(a5 + 780);
    *(_OWORD *)(a4 + 764) = *(_OWORD *)(a5 + 764);
    *(_OWORD *)(a4 + 780) = v16;
    *(_OWORD *)(a4 + 732) = v14;
    *(_OWORD *)(a4 + 748) = v15;
    long long v17 = *(_OWORD *)(a5 + 796);
    long long v18 = *(_OWORD *)(a5 + 812);
    long long v19 = *(_OWORD *)(a5 + 828);
    *(_OWORD *)(a4 + 840) = *(_OWORD *)(a5 + 840);
    *(_OWORD *)(a4 + 812) = v18;
    *(_OWORD *)(a4 + 828) = v19;
    *(_OWORD *)(a4 + 796) = v17;
    *(_OWORD *)(a5 + 796) = v70;
    *(_OWORD *)(a5 + 812) = v74;
    *(_OWORD *)(a5 + 828) = *(_OWORD *)v78;
    *(_OWORD *)(a5 + 840) = *(_OWORD *)&v78[12];
    *(_OWORD *)(a5 + 732) = v54;
    *(_OWORD *)(a5 + 748) = v58;
    *(_OWORD *)(a5 + 764) = v62;
    *(_OWORD *)(a5 + 780) = v66;
    *(_OWORD *)(a5 + 700) = v46;
    *(_OWORD *)(a5 + 716) = v50;
    LOBYTE(v11) = *(unsigned char *)(a4 + 856);
    *(unsigned char *)(a4 + 856) = *(unsigned char *)(a5 + 856);
    *(unsigned char *)(a5 + 856) = v11;
    if (sub_10068FF2C(a4, a3))
    {
      sub_100691428((long long *)a3, (long long *)a4);
      int v20 = *(_DWORD *)(a3 + 696);
      *(_DWORD *)(a3 + 696) = *(_DWORD *)(a4 + 696);
      *(_DWORD *)(a4 + 696) = v20;
      long long v21 = (_OWORD *)(a3 + 700);
      long long v71 = *(_OWORD *)(a3 + 796);
      long long v75 = *(_OWORD *)(a3 + 812);
      *(_OWORD *)uint64_t v79 = *(_OWORD *)(a3 + 828);
      *(_OWORD *)&v79[12] = *(_OWORD *)(a3 + 840);
      long long v55 = *(_OWORD *)(a3 + 732);
      long long v59 = *(_OWORD *)(a3 + 748);
      long long v63 = *(_OWORD *)(a3 + 764);
      long long v67 = *(_OWORD *)(a3 + 780);
      long long v47 = *(_OWORD *)(a3 + 700);
      long long v51 = *(_OWORD *)(a3 + 716);
      long long v22 = *(_OWORD *)(a4 + 716);
      *(_OWORD *)(a3 + 700) = *v12;
      *(_OWORD *)(a3 + 716) = v22;
      long long v23 = *(_OWORD *)(a4 + 732);
      long long v24 = *(_OWORD *)(a4 + 748);
      long long v25 = *(_OWORD *)(a4 + 780);
      *(_OWORD *)(a3 + 764) = *(_OWORD *)(a4 + 764);
      *(_OWORD *)(a3 + 780) = v25;
      *(_OWORD *)(a3 + 732) = v23;
      *(_OWORD *)(a3 + 748) = v24;
      long long v26 = *(_OWORD *)(a4 + 796);
      long long v27 = *(_OWORD *)(a4 + 812);
      long long v28 = *(_OWORD *)(a4 + 828);
      *(_OWORD *)(a3 + 840) = *(_OWORD *)(a4 + 840);
      *(_OWORD *)(a3 + 812) = v27;
      *(_OWORD *)(a3 + 828) = v28;
      *(_OWORD *)(a3 + 796) = v26;
      *(_OWORD *)(a4 + 796) = v71;
      *(_OWORD *)(a4 + 812) = v75;
      *(_OWORD *)(a4 + 828) = *(_OWORD *)v79;
      *(_OWORD *)(a4 + 840) = *(_OWORD *)&v79[12];
      *(_OWORD *)(a4 + 732) = v55;
      *(_OWORD *)(a4 + 748) = v59;
      *(_OWORD *)(a4 + 764) = v63;
      *(_OWORD *)(a4 + 780) = v67;
      *unsigned int v12 = v47;
      *(_OWORD *)(a4 + 716) = v51;
      LOBYTE(v20) = *(unsigned char *)(a3 + 856);
      *(unsigned char *)(a3 + 856) = *(unsigned char *)(a4 + 856);
      *(unsigned char *)(a4 + 856) = v20;
      if (sub_10068FF2C(a3, a2))
      {
        sub_100691428((long long *)a2, (long long *)a3);
        int v29 = *(_DWORD *)(a2 + 696);
        *(_DWORD *)(a2 + 696) = *(_DWORD *)(a3 + 696);
        *(_DWORD *)(a3 + 696) = v29;
        long long v30 = (_OWORD *)(a2 + 700);
        long long v72 = *(_OWORD *)(a2 + 796);
        long long v76 = *(_OWORD *)(a2 + 812);
        *(_OWORD *)uint64_t v80 = *(_OWORD *)(a2 + 828);
        *(_OWORD *)&v80[12] = *(_OWORD *)(a2 + 840);
        long long v56 = *(_OWORD *)(a2 + 732);
        long long v60 = *(_OWORD *)(a2 + 748);
        long long v64 = *(_OWORD *)(a2 + 764);
        long long v68 = *(_OWORD *)(a2 + 780);
        long long v48 = *(_OWORD *)(a2 + 700);
        long long v52 = *(_OWORD *)(a2 + 716);
        long long v31 = *(_OWORD *)(a3 + 716);
        *(_OWORD *)(a2 + 700) = *v21;
        *(_OWORD *)(a2 + 716) = v31;
        long long v32 = *(_OWORD *)(a3 + 732);
        long long v33 = *(_OWORD *)(a3 + 748);
        long long v34 = *(_OWORD *)(a3 + 780);
        *(_OWORD *)(a2 + 764) = *(_OWORD *)(a3 + 764);
        *(_OWORD *)(a2 + 780) = v34;
        *(_OWORD *)(a2 + 732) = v32;
        *(_OWORD *)(a2 + 748) = v33;
        long long v35 = *(_OWORD *)(a3 + 796);
        long long v36 = *(_OWORD *)(a3 + 812);
        long long v37 = *(_OWORD *)(a3 + 828);
        *(_OWORD *)(a2 + 840) = *(_OWORD *)(a3 + 840);
        *(_OWORD *)(a2 + 812) = v36;
        *(_OWORD *)(a2 + 828) = v37;
        *(_OWORD *)(a2 + 796) = v35;
        *(_OWORD *)(a3 + 796) = v72;
        *(_OWORD *)(a3 + 812) = v76;
        *(_OWORD *)(a3 + 828) = *(_OWORD *)v80;
        *(_OWORD *)(a3 + 840) = *(_OWORD *)&v80[12];
        *(_OWORD *)(a3 + 732) = v56;
        *(_OWORD *)(a3 + 748) = v60;
        *(_OWORD *)(a3 + 764) = v64;
        *(_OWORD *)(a3 + 780) = v68;
        *long long v21 = v48;
        *(_OWORD *)(a3 + 716) = v52;
        LOBYTE(v29) = *(unsigned char *)(a2 + 856);
        *(unsigned char *)(a2 + 856) = *(unsigned char *)(a3 + 856);
        *(unsigned char *)(a3 + 856) = v29;
        if (sub_10068FF2C(a2, a1))
        {
          sub_100691428((long long *)a1, (long long *)a2);
          int v38 = *(_DWORD *)(a1 + 696);
          *(_DWORD *)(a1 + 696) = *(_DWORD *)(a2 + 696);
          *(_DWORD *)(a2 + 696) = v38;
          long long v73 = *(_OWORD *)(a1 + 796);
          long long v77 = *(_OWORD *)(a1 + 812);
          *(_OWORD *)char v81 = *(_OWORD *)(a1 + 828);
          *(_OWORD *)&v81[12] = *(_OWORD *)(a1 + 840);
          long long v57 = *(_OWORD *)(a1 + 732);
          long long v61 = *(_OWORD *)(a1 + 748);
          long long v65 = *(_OWORD *)(a1 + 764);
          long long v69 = *(_OWORD *)(a1 + 780);
          long long v49 = *(_OWORD *)(a1 + 700);
          long long v53 = *(_OWORD *)(a1 + 716);
          long long v39 = *(_OWORD *)(a2 + 716);
          *(_OWORD *)(a1 + 700) = *v30;
          *(_OWORD *)(a1 + 716) = v39;
          long long v40 = *(_OWORD *)(a2 + 732);
          long long v41 = *(_OWORD *)(a2 + 748);
          long long v42 = *(_OWORD *)(a2 + 780);
          *(_OWORD *)(a1 + 764) = *(_OWORD *)(a2 + 764);
          *(_OWORD *)(a1 + 780) = v42;
          *(_OWORD *)(a1 + 732) = v40;
          *(_OWORD *)(a1 + 748) = v41;
          long long v43 = *(_OWORD *)(a2 + 796);
          long long v44 = *(_OWORD *)(a2 + 812);
          long long v45 = *(_OWORD *)(a2 + 828);
          *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
          *(_OWORD *)(a1 + 812) = v44;
          *(_OWORD *)(a1 + 828) = v45;
          *(_OWORD *)(a1 + 796) = v43;
          *(_OWORD *)(a2 + 796) = v73;
          *(_OWORD *)(a2 + 812) = v77;
          *(_OWORD *)(a2 + 828) = *(_OWORD *)v81;
          *(_OWORD *)(a2 + 840) = *(_OWORD *)&v81[12];
          *(_OWORD *)(a2 + 732) = v57;
          *(_OWORD *)(a2 + 748) = v61;
          *(_OWORD *)(a2 + 764) = v65;
          *(_OWORD *)(a2 + 780) = v69;
          double result = *(double *)&v49;
          *long long v30 = v49;
          *(_OWORD *)(a2 + 716) = v53;
          LOBYTE(v38) = *(unsigned char *)(a1 + 856);
          *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
          *(unsigned char *)(a2 + 856) = v38;
        }
      }
    }
  }
  return result;
}

void sub_1006904B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v4 = a2;
    uint64_t v6 = a2 - a1;
    uint64_t v7 = (a2 - a1) / 864;
    if (a2 - a1 >= 865)
    {
      unint64_t v8 = (unint64_t)(v7 - 2) >> 1;
      unint64_t v9 = v8 + 1;
      uint64_t v10 = a1 + 864 * v8;
      do
      {
        sub_100691C58(a1, v7, v10);
        v10 -= 864;
        --v9;
      }
      while (v9);
    }
    if (v4 != a3)
    {
      int v11 = (_OWORD *)(a1 + 700);
      uint64_t v12 = v4;
      do
      {
        if (sub_10068FF2C(v12, a1))
        {
          sub_100691428((long long *)v12, (long long *)a1);
          int v13 = *(_DWORD *)(v12 + 696);
          *(_DWORD *)(v12 + 696) = *(_DWORD *)(a1 + 696);
          *(_DWORD *)(a1 + 696) = v13;
          long long v14 = *(_OWORD *)(v12 + 812);
          *(_OWORD *)&v159[16] = *(_OWORD *)(v12 + 796);
          long long v160 = v14;
          v161[0] = *(_OWORD *)(v12 + 828);
          *(_OWORD *)((char *)v161 + 12) = *(_OWORD *)(v12 + 840);
          long long v15 = *(_OWORD *)(v12 + 732);
          *(_OWORD *)v158 = *(_OWORD *)(v12 + 748);
          long long v16 = *(_OWORD *)(v12 + 780);
          *(_OWORD *)&v158[16] = *(_OWORD *)(v12 + 764);
          *(_OWORD *)v159 = v16;
          long long v17 = *(_OWORD *)(v12 + 716);
          long long v155 = *(_OWORD *)(v12 + 700);
          long long v156 = v17;
          long long v157 = v15;
          long long v18 = *(_OWORD *)(a1 + 716);
          *(_OWORD *)(v12 + 700) = *v11;
          *(_OWORD *)(v12 + 716) = v18;
          long long v19 = *(_OWORD *)(a1 + 732);
          long long v20 = *(_OWORD *)(a1 + 748);
          long long v21 = *(_OWORD *)(a1 + 780);
          *(_OWORD *)(v12 + 764) = *(_OWORD *)(a1 + 764);
          *(_OWORD *)(v12 + 780) = v21;
          *(_OWORD *)(v12 + 732) = v19;
          *(_OWORD *)(v12 + 748) = v20;
          long long v22 = *(_OWORD *)(a1 + 796);
          long long v23 = *(_OWORD *)(a1 + 812);
          long long v24 = *(_OWORD *)(a1 + 828);
          *(_OWORD *)(v12 + 840) = *(_OWORD *)(a1 + 840);
          *(_OWORD *)(v12 + 812) = v23;
          *(_OWORD *)(v12 + 828) = v24;
          *(_OWORD *)(v12 + 796) = v22;
          long long v25 = v160;
          *(_OWORD *)(a1 + 796) = *(_OWORD *)&v159[16];
          *(_OWORD *)(a1 + 812) = v25;
          *(_OWORD *)(a1 + 828) = v161[0];
          *(_OWORD *)(a1 + 840) = *(_OWORD *)((char *)v161 + 12);
          long long v26 = *(_OWORD *)v158;
          *(_OWORD *)(a1 + 732) = v157;
          *(_OWORD *)(a1 + 748) = v26;
          long long v27 = *(_OWORD *)v159;
          *(_OWORD *)(a1 + 764) = *(_OWORD *)&v158[16];
          *(_OWORD *)(a1 + 780) = v27;
          long long v28 = v156;
          *int v11 = v155;
          *(_OWORD *)(a1 + 716) = v28;
          LOBYTE(v13) = *(unsigned char *)(v12 + 856);
          *(unsigned char *)(v12 + 856) = *(unsigned char *)(a1 + 856);
          *(unsigned char *)(a1 + 856) = v13;
          sub_100691C58(a1, v7, a1);
        }
        v12 += 864;
      }
      while (v12 != a3);
    }
    if (v6 >= 865)
    {
      int64_t v29 = v6 / 0x360uLL;
      v100 = (long long *)(a1 + 320);
      do
      {
        uint64_t v101 = v4;
        uint64_t v30 = 0;
        long long v31 = *(_OWORD *)(a1 + 48);
        v102[2] = *(_OWORD *)(a1 + 32);
        v103[0] = v31;
        *(_OWORD *)((char *)v103 + 12) = *(_OWORD *)(a1 + 60);
        long long v32 = *(_OWORD *)(a1 + 16);
        v102[0] = *(_OWORD *)a1;
        v102[1] = v32;
        int v104 = *(_DWORD *)(a1 + 80);
        *(_OWORD *)v105 = *(_OWORD *)(a1 + 88);
        uint64_t v106 = *(void *)(a1 + 104);
        *(void *)(a1 + 96) = 0;
        *(void *)(a1 + 104) = 0;
        *(void *)(a1 + 88) = 0;
        long long v33 = *(_OWORD *)(a1 + 288);
        long long v117 = *(_OWORD *)(a1 + 272);
        v118[0] = v33;
        *(_OWORD *)((char *)v118 + 12) = *(_OWORD *)(a1 + 300);
        long long v34 = *(_OWORD *)(a1 + 224);
        long long v113 = *(_OWORD *)(a1 + 208);
        long long v114 = v34;
        long long v35 = *(_OWORD *)(a1 + 256);
        long long v115 = *(_OWORD *)(a1 + 240);
        long long v116 = v35;
        long long v36 = *(_OWORD *)(a1 + 160);
        long long v109 = *(_OWORD *)(a1 + 144);
        long long v110 = v36;
        long long v37 = *(_OWORD *)(a1 + 192);
        long long v111 = *(_OWORD *)(a1 + 176);
        long long v112 = v37;
        long long v38 = *(_OWORD *)(a1 + 128);
        long long v107 = *(_OWORD *)(a1 + 112);
        long long v108 = v38;
        long long v119 = *v100;
        uint64_t v120 = *(void *)(a1 + 336);
        *(void *)(a1 + 328) = 0;
        *(void *)(a1 + 336) = 0;
        *(void *)v100 = 0;
        long long v39 = *(_OWORD *)(a1 + 488);
        long long v129 = *(_OWORD *)(a1 + 472);
        long long v130 = v39;
        int v131 = *(_DWORD *)(a1 + 504);
        long long v40 = *(_OWORD *)(a1 + 424);
        long long v125 = *(_OWORD *)(a1 + 408);
        long long v126 = v40;
        long long v41 = *(_OWORD *)(a1 + 456);
        long long v127 = *(_OWORD *)(a1 + 440);
        long long v128 = v41;
        long long v42 = *(_OWORD *)(a1 + 360);
        long long v121 = *(_OWORD *)(a1 + 344);
        long long v122 = v42;
        long long v43 = *(_OWORD *)(a1 + 392);
        long long v123 = *(_OWORD *)(a1 + 376);
        long long v124 = v43;
        long long v44 = *(_OWORD *)(a1 + 656);
        long long v140 = *(_OWORD *)(a1 + 640);
        long long v141 = v44;
        long long v142 = *(_OWORD *)(a1 + 672);
        int v143 = *(_DWORD *)(a1 + 688);
        long long v45 = *(_OWORD *)(a1 + 592);
        long long v136 = *(_OWORD *)(a1 + 576);
        long long v137 = v45;
        long long v46 = *(_OWORD *)(a1 + 624);
        long long v138 = *(_OWORD *)(a1 + 608);
        long long v139 = v46;
        long long v47 = *(_OWORD *)(a1 + 528);
        long long v132 = *(_OWORD *)(a1 + 512);
        long long v133 = v47;
        long long v48 = *(_OWORD *)(a1 + 560);
        long long v134 = *(_OWORD *)(a1 + 544);
        long long v135 = v48;
        int v144 = *(_DWORD *)(a1 + 696);
        long long v49 = *(_OWORD *)(a1 + 812);
        long long v151 = *(_OWORD *)(a1 + 796);
        long long v152 = v49;
        *(_OWORD *)v153 = *(_OWORD *)(a1 + 828);
        *(_OWORD *)&v153[12] = *(_OWORD *)(a1 + 840);
        long long v50 = *(_OWORD *)(a1 + 748);
        long long v147 = *(_OWORD *)(a1 + 732);
        long long v148 = v50;
        long long v51 = *(_OWORD *)(a1 + 780);
        long long v149 = *(_OWORD *)(a1 + 764);
        long long v150 = v51;
        long long v52 = *(_OWORD *)(a1 + 700);
        long long v53 = *(_OWORD *)(a1 + 716);
        char v154 = *(unsigned char *)(a1 + 856);
        uint64_t v54 = a1;
        long long v145 = v52;
        long long v146 = v53;
        do
        {
          uint64_t v55 = v54 + 864 * v30 + 864;
          uint64_t v56 = (2 * v30) | 1;
          uint64_t v57 = 2 * v30 + 2;
          if (v57 < v29 && sub_10068FF2C(v54 + 864 * v30 + 864, v54 + 864 * v30 + 1728))
          {
            v55 += 864;
            uint64_t v56 = v57;
          }
          sub_100691AC4(v54, v55);
          uint64_t v54 = v55;
          uint64_t v30 = v56;
        }
        while (v56 <= (uint64_t)((unint64_t)(v29 - 2) >> 1));
        uint64_t v4 = v101 - 864;
        if (v55 == v101 - 864)
        {
          sub_100691AC4(v55, (uint64_t)v102);
        }
        else
        {
          sub_100691AC4(v55, v101 - 864);
          sub_100691AC4(v4, (uint64_t)v102);
          uint64_t v58 = v55 - a1 + 864;
          if (v58 >= 865)
          {
            unint64_t v59 = (v58 / 0x360uLL - 2) >> 1;
            uint64_t v60 = a1 + 864 * v59;
            if (sub_10068FF2C(v60, v55))
            {
              long long v155 = *(_OWORD *)v55;
              long long v61 = *(_OWORD *)(v55 + 16);
              long long v62 = *(_OWORD *)(v55 + 32);
              long long v63 = *(_OWORD *)(v55 + 48);
              *(_OWORD *)&v158[12] = *(_OWORD *)(v55 + 60);
              *(_OWORD *)v158 = v63;
              long long v156 = v61;
              long long v157 = v62;
              *(_DWORD *)v159 = *(_DWORD *)(v55 + 80);
              *(_OWORD *)&v159[8] = *(_OWORD *)(v55 + 88);
              *(void *)&v159[24] = *(void *)(v55 + 104);
              *(void *)(v55 + 96) = 0;
              *(void *)(v55 + 104) = 0;
              *(void *)(v55 + 88) = 0;
              long long v64 = *(_OWORD *)(v55 + 176);
              long long v66 = *(_OWORD *)(v55 + 128);
              long long v65 = *(_OWORD *)(v55 + 144);
              v161[2] = *(_OWORD *)(v55 + 160);
              v161[3] = v64;
              v161[0] = v66;
              v161[1] = v65;
              long long v67 = *(_OWORD *)(v55 + 240);
              long long v69 = *(_OWORD *)(v55 + 192);
              long long v68 = *(_OWORD *)(v55 + 208);
              v161[6] = *(_OWORD *)(v55 + 224);
              v161[7] = v67;
              v161[4] = v69;
              v161[5] = v68;
              long long v71 = *(_OWORD *)(v55 + 272);
              long long v70 = *(_OWORD *)(v55 + 288);
              long long v72 = *(_OWORD *)(v55 + 256);
              *(_OWORD *)((char *)v162 + 12) = *(_OWORD *)(v55 + 300);
              v161[9] = v71;
              v162[0] = v70;
              v161[8] = v72;
              long long v160 = *(_OWORD *)(v55 + 112);
              long long v73 = *(_OWORD *)(v55 + 320);
              uint64_t v164 = *(void *)(v55 + 336);
              long long __p = v73;
              *(void *)(v55 + 328) = 0;
              *(void *)(v55 + 336) = 0;
              *(void *)(v55 + 320) = 0;
              long long v74 = *(_OWORD *)(v55 + 440);
              long long v76 = *(_OWORD *)(v55 + 392);
              long long v75 = *(_OWORD *)(v55 + 408);
              long long v170 = *(_OWORD *)(v55 + 424);
              long long v171 = v74;
              long long v168 = v76;
              long long v169 = v75;
              long long v77 = *(_OWORD *)(v55 + 344);
              long long v78 = *(_OWORD *)(v55 + 376);
              long long v166 = *(_OWORD *)(v55 + 360);
              long long v167 = v78;
              long long v165 = v77;
              long long v80 = *(_OWORD *)(v55 + 472);
              long long v79 = *(_OWORD *)(v55 + 488);
              long long v81 = *(_OWORD *)(v55 + 456);
              int v175 = *(_DWORD *)(v55 + 504);
              long long v173 = v80;
              long long v174 = v79;
              long long v172 = v81;
              long long v82 = *(_OWORD *)(v55 + 512);
              long long v83 = *(_OWORD *)(v55 + 528);
              long long v84 = *(_OWORD *)(v55 + 560);
              long long v178 = *(_OWORD *)(v55 + 544);
              long long v179 = v84;
              long long v176 = v82;
              long long v177 = v83;
              long long v85 = *(_OWORD *)(v55 + 576);
              long long v86 = *(_OWORD *)(v55 + 592);
              long long v87 = *(_OWORD *)(v55 + 624);
              long long v182 = *(_OWORD *)(v55 + 608);
              long long v183 = v87;
              long long v180 = v85;
              long long v181 = v86;
              long long v88 = *(_OWORD *)(v55 + 640);
              long long v89 = *(_OWORD *)(v55 + 656);
              long long v90 = *(_OWORD *)(v55 + 672);
              int v187 = *(_DWORD *)(v55 + 688);
              long long v185 = v89;
              long long v186 = v90;
              long long v184 = v88;
              int v188 = *(_DWORD *)(v55 + 696);
              long long v91 = *(_OWORD *)(v55 + 716);
              long long v189 = *(_OWORD *)(v55 + 700);
              long long v190 = v91;
              long long v92 = *(_OWORD *)(v55 + 732);
              long long v93 = *(_OWORD *)(v55 + 748);
              long long v94 = *(_OWORD *)(v55 + 780);
              long long v193 = *(_OWORD *)(v55 + 764);
              long long v194 = v94;
              long long v191 = v92;
              long long v192 = v93;
              long long v95 = *(_OWORD *)(v55 + 796);
              long long v96 = *(_OWORD *)(v55 + 812);
              long long v97 = *(_OWORD *)(v55 + 828);
              *(_OWORD *)&v197[12] = *(_OWORD *)(v55 + 840);
              long long v196 = v96;
              *(_OWORD *)v197 = v97;
              long long v195 = v95;
              char v198 = *(unsigned char *)(v55 + 856);
              do
              {
                uint64_t v98 = v60;
                sub_100691AC4(v55, v60);
                if (!v59) {
                  break;
                }
                unint64_t v59 = (v59 - 1) >> 1;
                uint64_t v60 = a1 + 864 * v59;
                uint64_t v55 = v98;
              }
              while ((sub_10068FF2C(v60, (uint64_t)&v155) & 1) != 0);
              sub_100691AC4(v98, (uint64_t)&v155);
              if (SHIBYTE(v164) < 0) {
                operator delete((void *)__p);
              }
              if (*(void *)&v159[8])
              {
                *(void *)&v159[16] = *(void *)&v159[8];
                operator delete(*(void **)&v159[8]);
              }
            }
          }
        }
        if (SHIBYTE(v120) < 0) {
          operator delete((void *)v119);
        }
        if (v105[0])
        {
          v105[1] = v105[0];
          operator delete(v105[0]);
        }
      }
      while (v29-- > 2);
    }
  }
}

void sub_100690B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a70 < 0) {
    operator delete(__p);
  }
  if (a36) {
    operator delete(a36);
  }
  _Unwind_Resume(a1);
}

void sub_100690B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = sub_10068FF2C(a2, a1);
  int v7 = sub_10068FF2C(a3, a2);
  if (v6)
  {
    unint64_t v8 = (long long *)(a1 + 700);
    if (v7)
    {
      unint64_t v9 = (char *)(a1 + 856);
      sub_100691428((long long *)a1, (long long *)a3);
      int v10 = *(_DWORD *)(a1 + 696);
      *(_DWORD *)(a1 + 696) = *(_DWORD *)(a3 + 696);
      *(_DWORD *)(a3 + 696) = v10;
      int v11 = (_OWORD *)(a3 + 700);
      long long v79 = *(_OWORD *)(a1 + 796);
      long long v83 = *(_OWORD *)(a1 + 812);
      *(_OWORD *)long long v87 = *(_OWORD *)(a1 + 828);
      *(_OWORD *)&v87[12] = *(_OWORD *)(a1 + 840);
      long long v63 = *(_OWORD *)(a1 + 732);
      long long v67 = *(_OWORD *)(a1 + 748);
      long long v71 = *(_OWORD *)(a1 + 764);
      long long v75 = *(_OWORD *)(a1 + 780);
      long long v55 = *v8;
      long long v59 = *(_OWORD *)(a1 + 716);
      long long v12 = *(_OWORD *)(a3 + 716);
      long long *v8 = *(_OWORD *)(a3 + 700);
      *(_OWORD *)(a1 + 716) = v12;
      long long v13 = *(_OWORD *)(a3 + 732);
      long long v14 = *(_OWORD *)(a3 + 748);
      long long v15 = *(_OWORD *)(a3 + 780);
      *(_OWORD *)(a1 + 764) = *(_OWORD *)(a3 + 764);
      *(_OWORD *)(a1 + 780) = v15;
      *(_OWORD *)(a1 + 732) = v13;
      *(_OWORD *)(a1 + 748) = v14;
      long long v16 = *(_OWORD *)(a3 + 796);
      long long v17 = *(_OWORD *)(a3 + 812);
      long long v18 = *(_OWORD *)(a3 + 828);
      *(_OWORD *)(a1 + 840) = *(_OWORD *)(a3 + 840);
      *(_OWORD *)(a1 + 812) = v17;
      *(_OWORD *)(a1 + 828) = v18;
      *(_OWORD *)(a1 + 796) = v16;
    }
    else
    {
      sub_100691428((long long *)a1, (long long *)a2);
      int v37 = *(_DWORD *)(a1 + 696);
      *(_DWORD *)(a1 + 696) = *(_DWORD *)(a2 + 696);
      *(_DWORD *)(a2 + 696) = v37;
      long long v38 = (long long *)(a2 + 700);
      long long v82 = *(_OWORD *)(a1 + 796);
      long long v86 = *(_OWORD *)(a1 + 812);
      *(_OWORD *)long long v90 = *(_OWORD *)(a1 + 828);
      *(_OWORD *)&v90[12] = *(_OWORD *)(a1 + 840);
      long long v66 = *(_OWORD *)(a1 + 732);
      long long v70 = *(_OWORD *)(a1 + 748);
      long long v74 = *(_OWORD *)(a1 + 764);
      long long v78 = *(_OWORD *)(a1 + 780);
      long long v58 = *v8;
      long long v62 = *(_OWORD *)(a1 + 716);
      long long v39 = *(_OWORD *)(a2 + 716);
      long long *v8 = *(_OWORD *)(a2 + 700);
      *(_OWORD *)(a1 + 716) = v39;
      long long v40 = *(_OWORD *)(a2 + 732);
      long long v41 = *(_OWORD *)(a2 + 748);
      long long v42 = *(_OWORD *)(a2 + 780);
      *(_OWORD *)(a1 + 764) = *(_OWORD *)(a2 + 764);
      *(_OWORD *)(a1 + 780) = v42;
      *(_OWORD *)(a1 + 732) = v40;
      *(_OWORD *)(a1 + 748) = v41;
      long long v43 = *(_OWORD *)(a2 + 796);
      long long v44 = *(_OWORD *)(a2 + 812);
      long long v45 = *(_OWORD *)(a2 + 828);
      *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
      *(_OWORD *)(a1 + 812) = v44;
      *(_OWORD *)(a1 + 828) = v45;
      *(_OWORD *)(a1 + 796) = v43;
      *(_OWORD *)(a2 + 796) = v82;
      *(_OWORD *)(a2 + 812) = v86;
      *(_OWORD *)(a2 + 828) = *(_OWORD *)v90;
      *(_OWORD *)(a2 + 840) = *(_OWORD *)&v90[12];
      *(_OWORD *)(a2 + 732) = v66;
      *(_OWORD *)(a2 + 748) = v70;
      *(_OWORD *)(a2 + 764) = v74;
      *(_OWORD *)(a2 + 780) = v78;
      *(_OWORD *)(a2 + 700) = v58;
      *(_OWORD *)(a2 + 716) = v62;
      LOBYTE(v37) = *(unsigned char *)(a1 + 856);
      *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
      *(unsigned char *)(a2 + 856) = v37;
      if (!sub_10068FF2C(a3, a2)) {
        return;
      }
      unint64_t v9 = (char *)(a2 + 856);
      sub_100691428((long long *)a2, (long long *)a3);
      int v46 = *(_DWORD *)(a2 + 696);
      *(_DWORD *)(a2 + 696) = *(_DWORD *)(a3 + 696);
      *(_DWORD *)(a3 + 696) = v46;
      int v11 = (_OWORD *)(a3 + 700);
      long long v79 = *(_OWORD *)(a2 + 796);
      long long v83 = *(_OWORD *)(a2 + 812);
      *(_OWORD *)long long v87 = *(_OWORD *)(a2 + 828);
      *(_OWORD *)&v87[12] = *(_OWORD *)(a2 + 840);
      long long v63 = *(_OWORD *)(a2 + 732);
      long long v67 = *(_OWORD *)(a2 + 748);
      long long v71 = *(_OWORD *)(a2 + 764);
      long long v75 = *(_OWORD *)(a2 + 780);
      long long v55 = *v38;
      long long v59 = *(_OWORD *)(a2 + 716);
      long long v47 = *(_OWORD *)(a3 + 716);
      *long long v38 = *(_OWORD *)(a3 + 700);
      *(_OWORD *)(a2 + 716) = v47;
      long long v48 = *(_OWORD *)(a3 + 732);
      long long v49 = *(_OWORD *)(a3 + 748);
      long long v50 = *(_OWORD *)(a3 + 780);
      *(_OWORD *)(a2 + 764) = *(_OWORD *)(a3 + 764);
      *(_OWORD *)(a2 + 780) = v50;
      *(_OWORD *)(a2 + 732) = v48;
      *(_OWORD *)(a2 + 748) = v49;
      long long v51 = *(_OWORD *)(a3 + 796);
      long long v52 = *(_OWORD *)(a3 + 812);
      long long v53 = *(_OWORD *)(a3 + 828);
      *(_OWORD *)(a2 + 840) = *(_OWORD *)(a3 + 840);
      *(_OWORD *)(a2 + 812) = v52;
      *(_OWORD *)(a2 + 828) = v53;
      *(_OWORD *)(a2 + 796) = v51;
    }
    v11[6] = v79;
    v11[7] = v83;
    v11[8] = *(_OWORD *)v87;
    *(_OWORD *)((char *)v11 + 140) = *(_OWORD *)&v87[12];
    int32x4_t v11[2] = v63;
    v11[3] = v67;
    v11[4] = v71;
    v11[5] = v75;
    long long v28 = (char *)(a3 + 856);
    *int v11 = v55;
    v11[1] = v59;
    goto LABEL_10;
  }
  if (v7)
  {
    sub_100691428((long long *)a2, (long long *)a3);
    int v19 = *(_DWORD *)(a2 + 696);
    *(_DWORD *)(a2 + 696) = *(_DWORD *)(a3 + 696);
    *(_DWORD *)(a3 + 696) = v19;
    long long v20 = (_OWORD *)(a2 + 700);
    long long v80 = *(_OWORD *)(a2 + 796);
    long long v84 = *(_OWORD *)(a2 + 812);
    *(_OWORD *)long long v88 = *(_OWORD *)(a2 + 828);
    *(_OWORD *)&v88[12] = *(_OWORD *)(a2 + 840);
    long long v64 = *(_OWORD *)(a2 + 732);
    long long v68 = *(_OWORD *)(a2 + 748);
    long long v72 = *(_OWORD *)(a2 + 764);
    long long v76 = *(_OWORD *)(a2 + 780);
    long long v56 = *(_OWORD *)(a2 + 700);
    long long v60 = *(_OWORD *)(a2 + 716);
    long long v21 = *(_OWORD *)(a3 + 716);
    *(_OWORD *)(a2 + 700) = *(_OWORD *)(a3 + 700);
    *(_OWORD *)(a2 + 716) = v21;
    long long v22 = *(_OWORD *)(a3 + 732);
    long long v23 = *(_OWORD *)(a3 + 748);
    long long v24 = *(_OWORD *)(a3 + 780);
    *(_OWORD *)(a2 + 764) = *(_OWORD *)(a3 + 764);
    *(_OWORD *)(a2 + 780) = v24;
    *(_OWORD *)(a2 + 732) = v22;
    *(_OWORD *)(a2 + 748) = v23;
    long long v25 = *(_OWORD *)(a3 + 796);
    long long v26 = *(_OWORD *)(a3 + 812);
    long long v27 = *(_OWORD *)(a3 + 828);
    *(_OWORD *)(a2 + 840) = *(_OWORD *)(a3 + 840);
    *(_OWORD *)(a2 + 812) = v26;
    *(_OWORD *)(a2 + 828) = v27;
    *(_OWORD *)(a2 + 796) = v25;
    *(_OWORD *)(a3 + 796) = v80;
    *(_OWORD *)(a3 + 812) = v84;
    *(_OWORD *)(a3 + 828) = *(_OWORD *)v88;
    *(_OWORD *)(a3 + 840) = *(_OWORD *)&v88[12];
    *(_OWORD *)(a3 + 732) = v64;
    *(_OWORD *)(a3 + 748) = v68;
    *(_OWORD *)(a3 + 764) = v72;
    *(_OWORD *)(a3 + 780) = v76;
    *(_OWORD *)(a3 + 700) = v56;
    *(_OWORD *)(a3 + 716) = v60;
    LOBYTE(v19) = *(unsigned char *)(a2 + 856);
    *(unsigned char *)(a2 + 856) = *(unsigned char *)(a3 + 856);
    *(unsigned char *)(a3 + 856) = v19;
    if (sub_10068FF2C(a2, a1))
    {
      long long v28 = (char *)(a2 + 856);
      sub_100691428((long long *)a1, (long long *)a2);
      int v29 = *(_DWORD *)(a1 + 696);
      *(_DWORD *)(a1 + 696) = *(_DWORD *)(a2 + 696);
      *(_DWORD *)(a2 + 696) = v29;
      long long v81 = *(_OWORD *)(a1 + 796);
      long long v85 = *(_OWORD *)(a1 + 812);
      *(_OWORD *)long long v89 = *(_OWORD *)(a1 + 828);
      *(_OWORD *)&v89[12] = *(_OWORD *)(a1 + 840);
      long long v65 = *(_OWORD *)(a1 + 732);
      long long v69 = *(_OWORD *)(a1 + 748);
      long long v73 = *(_OWORD *)(a1 + 764);
      long long v77 = *(_OWORD *)(a1 + 780);
      long long v57 = *(_OWORD *)(a1 + 700);
      long long v61 = *(_OWORD *)(a1 + 716);
      long long v30 = *(_OWORD *)(a2 + 716);
      *(_OWORD *)(a1 + 700) = *v20;
      *(_OWORD *)(a1 + 716) = v30;
      long long v31 = *(_OWORD *)(a2 + 732);
      long long v32 = *(_OWORD *)(a2 + 748);
      long long v33 = *(_OWORD *)(a2 + 780);
      *(_OWORD *)(a1 + 764) = *(_OWORD *)(a2 + 764);
      *(_OWORD *)(a1 + 780) = v33;
      *(_OWORD *)(a1 + 732) = v31;
      *(_OWORD *)(a1 + 748) = v32;
      long long v34 = *(_OWORD *)(a2 + 796);
      long long v35 = *(_OWORD *)(a2 + 812);
      long long v36 = *(_OWORD *)(a2 + 828);
      *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
      *(_OWORD *)(a1 + 812) = v35;
      *(_OWORD *)(a1 + 828) = v36;
      *(_OWORD *)(a1 + 796) = v34;
      *(_OWORD *)(a2 + 796) = v81;
      *(_OWORD *)(a2 + 812) = v85;
      *(_OWORD *)(a2 + 828) = *(_OWORD *)v89;
      *(_OWORD *)(a2 + 840) = *(_OWORD *)&v89[12];
      *(_OWORD *)(a2 + 732) = v65;
      *(_OWORD *)(a2 + 748) = v69;
      *(_OWORD *)(a2 + 764) = v73;
      *(_OWORD *)(a2 + 780) = v77;
      unint64_t v9 = (char *)(a1 + 856);
      *long long v20 = v57;
      *(_OWORD *)(a2 + 716) = v61;
LABEL_10:
      char v54 = *v9;
      char *v9 = *v28;
      *long long v28 = v54;
    }
  }
}

BOOL sub_100690FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = (a2 - a1) >> 5;
  BOOL result = 1;
  switch(0x84BDA12F684BDA13 * v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      char v6 = (long long *)(a2 - 864);
      if (!sub_10068FF2C(a2 - 864, a1)) {
        return 1;
      }
      sub_100691428((long long *)a1, v6);
      int v7 = *(_DWORD *)(a1 + 696);
      *(_DWORD *)(a1 + 696) = *(_DWORD *)(v2 - 168);
      *(_DWORD *)(v2 - 168) = v7;
      long long v8 = *(_OWORD *)(a1 + 812);
      *(_OWORD *)&v57[16] = *(_OWORD *)(a1 + 796);
      long long v58 = v8;
      v59[0] = *(_OWORD *)(a1 + 828);
      *(_OWORD *)((char *)v59 + 12) = *(_OWORD *)(a1 + 840);
      long long v9 = *(_OWORD *)(a1 + 748);
      long long v55 = *(_OWORD *)(a1 + 732);
      *(_OWORD *)long long v56 = v9;
      long long v10 = *(_OWORD *)(a1 + 780);
      *(_OWORD *)&v56[16] = *(_OWORD *)(a1 + 764);
      *(_OWORD *)long long v57 = v10;
      long long v11 = *(_OWORD *)(a1 + 716);
      long long v53 = *(_OWORD *)(a1 + 700);
      long long v54 = v11;
      long long v12 = *(_OWORD *)(v2 - 148);
      *(_OWORD *)(a1 + 700) = *(_OWORD *)(v2 - 164);
      *(_OWORD *)(a1 + 716) = v12;
      long long v13 = *(_OWORD *)(v2 - 132);
      long long v14 = *(_OWORD *)(v2 - 116);
      long long v15 = *(_OWORD *)(v2 - 84);
      *(_OWORD *)(a1 + 764) = *(_OWORD *)(v2 - 100);
      *(_OWORD *)(a1 + 780) = v15;
      *(_OWORD *)(a1 + 732) = v13;
      *(_OWORD *)(a1 + 748) = v14;
      long long v16 = *(_OWORD *)(v2 - 68);
      long long v17 = *(_OWORD *)(v2 - 52);
      long long v18 = *(_OWORD *)(v2 - 36);
      *(_OWORD *)(a1 + 840) = *(_OWORD *)(v2 - 24);
      *(_OWORD *)(a1 + 812) = v17;
      *(_OWORD *)(a1 + 828) = v18;
      *(_OWORD *)(a1 + 796) = v16;
      long long v19 = v58;
      *(_OWORD *)(v2 - 68) = *(_OWORD *)&v57[16];
      *(_OWORD *)(v2 - 52) = v19;
      *(_OWORD *)(v2 - 36) = v59[0];
      *(_OWORD *)(v2 - 24) = *(_OWORD *)((char *)v59 + 12);
      long long v20 = *(_OWORD *)v56;
      *(_OWORD *)(v2 - 132) = v55;
      *(_OWORD *)(v2 - 116) = v20;
      long long v21 = *(_OWORD *)v57;
      *(_OWORD *)(v2 - 100) = *(_OWORD *)&v56[16];
      *(_OWORD *)(v2 - 84) = v21;
      long long v22 = v54;
      *(_OWORD *)(v2 - 164) = v53;
      *(_OWORD *)(v2 - 148) = v22;
      LOBYTE(v7) = *(unsigned char *)(a1 + 856);
      *(unsigned char *)(a1 + 856) = *(unsigned char *)(v2 - 8);
      BOOL result = 1;
      *(unsigned char *)(v2 - 8) = v7;
      return result;
    case 3uLL:
      sub_100690B8C(a1, a1 + 864, a2 - 864);
      return 1;
    case 4uLL:
      sub_100691804(a1, a1 + 864, a1 + 1728, a2 - 864);
      return 1;
    case 5uLL:
      sub_10069011C(a1, a1 + 864, a1 + 1728, a1 + 2592, a2 - 864);
      return 1;
    default:
      uint64_t v23 = a1 + 1728;
      sub_100690B8C(a1, a1 + 864, a1 + 1728);
      uint64_t v24 = a1 + 2592;
      if (a1 + 2592 == v2) {
        return 1;
      }
      uint64_t v25 = 0;
      int v26 = 0;
      uint64_t v52 = v2;
      break;
  }
  while (1)
  {
    if (sub_10068FF2C(v24, v23))
    {
      long long v27 = *(_OWORD *)(v24 + 48);
      long long v55 = *(_OWORD *)(v24 + 32);
      *(_OWORD *)long long v56 = v27;
      *(_OWORD *)&v56[12] = *(_OWORD *)(v24 + 60);
      long long v28 = *(_OWORD *)(v24 + 16);
      long long v53 = *(_OWORD *)v24;
      long long v54 = v28;
      *(_DWORD *)long long v57 = *(_DWORD *)(v24 + 80);
      *(_OWORD *)&v57[8] = *(_OWORD *)(v24 + 88);
      *(void *)&v57[24] = *(void *)(v24 + 104);
      *(void *)(v24 + 88) = 0;
      *(void *)(v24 + 96) = 0;
      *(void *)(v24 + 104) = 0;
      long long v29 = *(_OWORD *)(v24 + 288);
      v59[9] = *(_OWORD *)(v24 + 272);
      v60[0] = v29;
      *(_OWORD *)((char *)v60 + 12) = *(_OWORD *)(v24 + 300);
      long long v30 = *(_OWORD *)(v24 + 224);
      v59[5] = *(_OWORD *)(v24 + 208);
      v59[6] = v30;
      long long v31 = *(_OWORD *)(v24 + 256);
      v59[7] = *(_OWORD *)(v24 + 240);
      v59[8] = v31;
      long long v32 = *(_OWORD *)(v24 + 160);
      v59[1] = *(_OWORD *)(v24 + 144);
      v59[2] = v32;
      long long v33 = *(_OWORD *)(v24 + 192);
      v59[3] = *(_OWORD *)(v24 + 176);
      v59[4] = v33;
      long long v34 = *(_OWORD *)(v24 + 128);
      long long v58 = *(_OWORD *)(v24 + 112);
      v59[0] = v34;
      long long __p = *(_OWORD *)(v24 + 320);
      uint64_t v62 = *(void *)(v24 + 336);
      *(void *)(v24 + 328) = 0;
      *(void *)(v24 + 336) = 0;
      *(void *)(v24 + 320) = 0;
      long long v35 = *(_OWORD *)(v24 + 488);
      long long v71 = *(_OWORD *)(v24 + 472);
      long long v72 = v35;
      int v73 = *(_DWORD *)(v24 + 504);
      long long v36 = *(_OWORD *)(v24 + 424);
      long long v67 = *(_OWORD *)(v24 + 408);
      long long v68 = v36;
      long long v37 = *(_OWORD *)(v24 + 456);
      long long v69 = *(_OWORD *)(v24 + 440);
      long long v70 = v37;
      long long v38 = *(_OWORD *)(v24 + 360);
      long long v63 = *(_OWORD *)(v24 + 344);
      long long v64 = v38;
      long long v39 = *(_OWORD *)(v24 + 392);
      long long v65 = *(_OWORD *)(v24 + 376);
      long long v66 = v39;
      long long v40 = *(_OWORD *)(v24 + 656);
      long long v82 = *(_OWORD *)(v24 + 640);
      long long v83 = v40;
      long long v84 = *(_OWORD *)(v24 + 672);
      int v85 = *(_DWORD *)(v24 + 688);
      long long v41 = *(_OWORD *)(v24 + 592);
      long long v78 = *(_OWORD *)(v24 + 576);
      long long v79 = v41;
      long long v42 = *(_OWORD *)(v24 + 624);
      long long v80 = *(_OWORD *)(v24 + 608);
      long long v81 = v42;
      long long v43 = *(_OWORD *)(v24 + 528);
      long long v74 = *(_OWORD *)(v24 + 512);
      long long v75 = v43;
      long long v44 = *(_OWORD *)(v24 + 560);
      long long v76 = *(_OWORD *)(v24 + 544);
      long long v77 = v44;
      int v86 = *(_DWORD *)(v24 + 696);
      long long v45 = *(_OWORD *)(v24 + 812);
      long long v93 = *(_OWORD *)(v24 + 796);
      long long v94 = v45;
      *(_OWORD *)long long v95 = *(_OWORD *)(v24 + 828);
      *(_OWORD *)&v95[12] = *(_OWORD *)(v24 + 840);
      long long v46 = *(_OWORD *)(v24 + 748);
      long long v89 = *(_OWORD *)(v24 + 732);
      long long v90 = v46;
      long long v47 = *(_OWORD *)(v24 + 780);
      long long v91 = *(_OWORD *)(v24 + 764);
      long long v92 = v47;
      long long v48 = *(_OWORD *)(v24 + 716);
      long long v87 = *(_OWORD *)(v24 + 700);
      long long v88 = v48;
      uint64_t v49 = v25;
      char v96 = *(unsigned char *)(v24 + 856);
      while (1)
      {
        sub_100691AC4(a1 + v49 + 2592, a1 + v49 + 1728);
        if (v49 == -1728) {
          break;
        }
        char v50 = sub_10068FF2C((uint64_t)&v53, a1 + v49 + 864);
        v49 -= 864;
        if ((v50 & 1) == 0)
        {
          uint64_t v51 = a1 + v49 + 2592;
          goto LABEL_12;
        }
      }
      uint64_t v51 = a1;
LABEL_12:
      sub_100691AC4(v51, (uint64_t)&v53);
      uint64_t v2 = v52;
      if (SHIBYTE(v62) < 0) {
        operator delete((void *)__p);
      }
      if (*(void *)&v57[8])
      {
        *(void *)&v57[16] = *(void *)&v57[8];
        operator delete(*(void **)&v57[8]);
      }
      if (++v26 == 8) {
        return v24 + 864 == v52;
      }
    }
    uint64_t v23 = v24;
    v25 += 864;
    v24 += 864;
    if (v24 == v2) {
      return 1;
    }
  }
}

void sub_1006913CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_10055C7F8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1006913F8(id a1)
{
  qword_102419388 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

__n128 sub_100691428(long long *a1, long long *a2)
{
  long long v74 = a1[2];
  *(_OWORD *)long long v75 = a1[3];
  *(_OWORD *)&v75[12] = *(long long *)((char *)a1 + 60);
  uint64_t v4 = a1 + 5;
  int v5 = *((_DWORD *)a1 + 20);
  long long v72 = *a1;
  long long v73 = a1[1];
  long long v7 = *(long long *)((char *)a1 + 88);
  char v6 = (void *)a1 + 11;
  long long v46 = v7;
  uint64_t v45 = *((void *)a1 + 13);
  *char v6 = 0;
  *((void *)a1 + 12) = 0;
  *((void *)a1 + 13) = 0;
  long long v62 = a1[9];
  long long v63 = a1[10];
  long long v60 = a1[7];
  long long v61 = a1[8];
  long long v66 = a1[13];
  long long v67 = a1[14];
  long long v64 = a1[11];
  long long v65 = a1[12];
  *(_OWORD *)&v71[12] = *(long long *)((char *)v4 + 220);
  long long v70 = a1[17];
  *(_OWORD *)long long v71 = a1[18];
  long long v68 = a1[15];
  long long v69 = a1[16];
  uint64_t v47 = *((void *)a1 + 40);
  uint64_t v8 = *((void *)a1 + 41);
  uint64_t v9 = *(void *)((char *)v4 + 255);
  char v48 = *((unsigned char *)a1 + 343);
  *((void *)a1 + 41) = 0;
  *((void *)a1 + 42) = 0;
  *((void *)a1 + 40) = 0;
  long long v57 = *(long long *)((char *)a1 + 472);
  long long v58 = *(long long *)((char *)a1 + 488);
  long long v53 = *(long long *)((char *)a1 + 408);
  long long v54 = *(long long *)((char *)a1 + 424);
  long long v55 = *(long long *)((char *)a1 + 440);
  long long v56 = *(long long *)((char *)a1 + 456);
  long long v49 = *(long long *)((char *)a1 + 344);
  long long v50 = *(long long *)((char *)a1 + 360);
  long long v51 = *(long long *)((char *)a1 + 376);
  long long v52 = *(long long *)((char *)a1 + 392);
  long long v84 = a1[40];
  long long v85 = a1[41];
  long long v86 = a1[42];
  long long v80 = a1[36];
  long long v81 = a1[37];
  long long v82 = a1[38];
  long long v83 = a1[39];
  long long v76 = a1[32];
  long long v77 = a1[33];
  long long v10 = a1[35];
  __n128 v78 = (__n128)a1[34];
  *a1 = *a2;
  long long v11 = a2[1];
  long long v12 = a2[2];
  long long v13 = a2[3];
  *(long long *)((char *)a1 + 60) = *(long long *)((char *)a2 + 60);
  long long v14 = (void **)(a1 + 20);
  *(void *)long long v88 = v8;
  *(void *)&v88[7] = v9;
  int v59 = *((_DWORD *)a1 + 126);
  int v87 = *((_DWORD *)a1 + 172);
  a1[2] = v12;
  a1[3] = v13;
  a1[1] = v11;
  long long v15 = a2 + 5;
  *(_DWORD *)uint64_t v4 = *((_DWORD *)a2 + 20);
  long long v79 = v10;
  sub_1000F4EBC((uint64_t)v6, (__n128 *)((char *)a2 + 88));
  a1[7] = v15[2];
  long long v16 = v15[3];
  long long v17 = v15[4];
  long long v18 = v15[6];
  a1[10] = v15[5];
  a1[11] = v18;
  a1[8] = v16;
  a1[9] = v17;
  long long v19 = v15[7];
  long long v20 = v15[8];
  long long v21 = v15[10];
  a1[14] = v15[9];
  a1[15] = v21;
  a1[12] = v19;
  a1[13] = v20;
  long long v22 = v15[11];
  long long v23 = v15[12];
  long long v24 = v15[13];
  *(long long *)((char *)v4 + 220) = *(_OWORD *)((char *)v15 + 220);
  a1[17] = v23;
  a1[18] = v24;
  a1[16] = v22;
  if (*((char *)a1 + 343) < 0) {
    operator delete(*v14);
  }
  long long v25 = a2[20];
  *((void *)a1 + 42) = *((void *)a2 + 42);
  *(_OWORD *)long long v14 = v25;
  *((unsigned char *)a2 + 343) = 0;
  *((unsigned char *)a2 + 320) = 0;
  long long v27 = *(long long *)((char *)a2 + 424);
  long long v26 = *(long long *)((char *)a2 + 440);
  long long v28 = *(long long *)((char *)a2 + 408);
  *(long long *)((char *)a1 + 392) = *(long long *)((char *)a2 + 392);
  *(long long *)((char *)a1 + 408) = v28;
  *(long long *)((char *)a1 + 424) = v27;
  *(long long *)((char *)a1 + 440) = v26;
  long long v30 = *(long long *)((char *)a2 + 360);
  long long v29 = *(long long *)((char *)a2 + 376);
  *(long long *)((char *)a1 + 344) = *(long long *)((char *)a2 + 344);
  *(long long *)((char *)a1 + 360) = v30;
  *(long long *)((char *)a1 + 376) = v29;
  long long v31 = *(long long *)((char *)a2 + 456);
  long long v32 = *(long long *)((char *)a2 + 472);
  long long v33 = *(long long *)((char *)a2 + 488);
  *((_DWORD *)a1 + 126) = *((_DWORD *)a2 + 126);
  *(long long *)((char *)a1 + 472) = v32;
  *(long long *)((char *)a1 + 488) = v33;
  *(long long *)((char *)a1 + 456) = v31;
  long long v34 = a2[32];
  long long v35 = a2[33];
  long long v36 = a2[35];
  a1[34] = a2[34];
  a1[35] = v36;
  a1[32] = v34;
  a1[33] = v35;
  long long v37 = a2[36];
  long long v38 = a2[37];
  long long v39 = a2[39];
  a1[38] = a2[38];
  a1[39] = v39;
  a1[36] = v37;
  a1[37] = v38;
  long long v40 = a2[40];
  long long v41 = a2[41];
  long long v42 = a2[42];
  *((_DWORD *)a1 + 172) = *((_DWORD *)a2 + 172);
  a1[41] = v41;
  a1[42] = v42;
  a1[40] = v40;
  a2[2] = v74;
  a2[3] = *(_OWORD *)v75;
  *(long long *)((char *)a2 + 60) = *(_OWORD *)&v75[12];
  *a2 = v72;
  a2[1] = v73;
  *((_DWORD *)a2 + 20) = v5;
  long long v43 = (void *)*((void *)a2 + 11);
  if (v43)
  {
    *((void *)a2 + 12) = v43;
    operator delete(v43);
  }
  *(long long *)((char *)a2 + 88) = v46;
  *((void *)a2 + 13) = v45;
  v15[12] = v70;
  v15[13] = *(_OWORD *)v71;
  *(_OWORD *)((char *)v15 + 220) = *(_OWORD *)&v71[12];
  v15[8] = v66;
  v15[9] = v67;
  v15[10] = v68;
  v15[11] = v69;
  v15[4] = v62;
  v15[5] = v63;
  v15[6] = v64;
  v15[7] = v65;
  v15[2] = v60;
  v15[3] = v61;
  if (*((char *)a2 + 343) < 0) {
    operator delete(*((void **)a2 + 40));
  }
  *((void *)a2 + 40) = v47;
  *((void *)a2 + 41) = *(void *)v88;
  *(void *)((char *)a2 + 335) = *(void *)&v88[7];
  *((unsigned char *)a2 + 343) = v48;
  *(long long *)((char *)a2 + 472) = v57;
  *(long long *)((char *)a2 + 488) = v58;
  *((_DWORD *)a2 + 126) = v59;
  *(long long *)((char *)a2 + 408) = v53;
  *(long long *)((char *)a2 + 424) = v54;
  *(long long *)((char *)a2 + 440) = v55;
  *(long long *)((char *)a2 + 456) = v56;
  *(long long *)((char *)a2 + 344) = v49;
  *(long long *)((char *)a2 + 360) = v50;
  *(long long *)((char *)a2 + 376) = v51;
  *(long long *)((char *)a2 + 392) = v52;
  a2[40] = v84;
  a2[41] = v85;
  a2[42] = v86;
  *((_DWORD *)a2 + 172) = v87;
  a2[36] = v80;
  a2[37] = v81;
  a2[38] = v82;
  a2[39] = v83;
  a2[32] = v76;
  a2[33] = v77;
  __n128 result = v78;
  a2[34] = (__int128)v78;
  a2[35] = v79;
  return result;
}

double sub_100691804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100690B8C(a1, a2, a3);
  if (sub_10068FF2C(a4, a3))
  {
    sub_100691428((long long *)a3, (long long *)a4);
    int v9 = *(_DWORD *)(a3 + 696);
    *(_DWORD *)(a3 + 696) = *(_DWORD *)(a4 + 696);
    *(_DWORD *)(a4 + 696) = v9;
    long long v10 = (_OWORD *)(a3 + 700);
    long long v53 = *(_OWORD *)(a3 + 796);
    long long v56 = *(_OWORD *)(a3 + 812);
    *(_OWORD *)int v59 = *(_OWORD *)(a3 + 828);
    *(_OWORD *)&v59[12] = *(_OWORD *)(a3 + 840);
    long long v41 = *(_OWORD *)(a3 + 732);
    long long v44 = *(_OWORD *)(a3 + 748);
    long long v47 = *(_OWORD *)(a3 + 764);
    long long v50 = *(_OWORD *)(a3 + 780);
    long long v35 = *(_OWORD *)(a3 + 700);
    long long v38 = *(_OWORD *)(a3 + 716);
    long long v11 = *(_OWORD *)(a4 + 716);
    *(_OWORD *)(a3 + 700) = *(_OWORD *)(a4 + 700);
    *(_OWORD *)(a3 + 716) = v11;
    long long v12 = *(_OWORD *)(a4 + 732);
    long long v13 = *(_OWORD *)(a4 + 748);
    long long v14 = *(_OWORD *)(a4 + 780);
    *(_OWORD *)(a3 + 764) = *(_OWORD *)(a4 + 764);
    *(_OWORD *)(a3 + 780) = v14;
    *(_OWORD *)(a3 + 732) = v12;
    *(_OWORD *)(a3 + 748) = v13;
    long long v15 = *(_OWORD *)(a4 + 796);
    long long v16 = *(_OWORD *)(a4 + 812);
    long long v17 = *(_OWORD *)(a4 + 828);
    *(_OWORD *)(a3 + 840) = *(_OWORD *)(a4 + 840);
    *(_OWORD *)(a3 + 812) = v16;
    *(_OWORD *)(a3 + 828) = v17;
    *(_OWORD *)(a3 + 796) = v15;
    *(_OWORD *)(a4 + 796) = v53;
    *(_OWORD *)(a4 + 812) = v56;
    *(_OWORD *)(a4 + 828) = *(_OWORD *)v59;
    *(_OWORD *)(a4 + 840) = *(_OWORD *)&v59[12];
    *(_OWORD *)(a4 + 732) = v41;
    *(_OWORD *)(a4 + 748) = v44;
    *(_OWORD *)(a4 + 764) = v47;
    *(_OWORD *)(a4 + 780) = v50;
    *(_OWORD *)(a4 + 700) = v35;
    *(_OWORD *)(a4 + 716) = v38;
    LOBYTE(v9) = *(unsigned char *)(a3 + 856);
    *(unsigned char *)(a3 + 856) = *(unsigned char *)(a4 + 856);
    *(unsigned char *)(a4 + 856) = v9;
    if (sub_10068FF2C(a3, a2))
    {
      sub_100691428((long long *)a2, (long long *)a3);
      int v18 = *(_DWORD *)(a2 + 696);
      *(_DWORD *)(a2 + 696) = *(_DWORD *)(a3 + 696);
      *(_DWORD *)(a3 + 696) = v18;
      long long v19 = (_OWORD *)(a2 + 700);
      long long v54 = *(_OWORD *)(a2 + 796);
      long long v57 = *(_OWORD *)(a2 + 812);
      *(_OWORD *)long long v60 = *(_OWORD *)(a2 + 828);
      *(_OWORD *)&v60[12] = *(_OWORD *)(a2 + 840);
      long long v42 = *(_OWORD *)(a2 + 732);
      long long v45 = *(_OWORD *)(a2 + 748);
      long long v48 = *(_OWORD *)(a2 + 764);
      long long v51 = *(_OWORD *)(a2 + 780);
      long long v36 = *(_OWORD *)(a2 + 700);
      long long v39 = *(_OWORD *)(a2 + 716);
      long long v20 = *(_OWORD *)(a3 + 716);
      *(_OWORD *)(a2 + 700) = *v10;
      *(_OWORD *)(a2 + 716) = v20;
      long long v21 = *(_OWORD *)(a3 + 732);
      long long v22 = *(_OWORD *)(a3 + 748);
      long long v23 = *(_OWORD *)(a3 + 780);
      *(_OWORD *)(a2 + 764) = *(_OWORD *)(a3 + 764);
      *(_OWORD *)(a2 + 780) = v23;
      *(_OWORD *)(a2 + 732) = v21;
      *(_OWORD *)(a2 + 748) = v22;
      long long v24 = *(_OWORD *)(a3 + 796);
      long long v25 = *(_OWORD *)(a3 + 812);
      long long v26 = *(_OWORD *)(a3 + 828);
      *(_OWORD *)(a2 + 840) = *(_OWORD *)(a3 + 840);
      *(_OWORD *)(a2 + 812) = v25;
      *(_OWORD *)(a2 + 828) = v26;
      *(_OWORD *)(a2 + 796) = v24;
      *(_OWORD *)(a3 + 796) = v54;
      *(_OWORD *)(a3 + 812) = v57;
      *(_OWORD *)(a3 + 828) = *(_OWORD *)v60;
      *(_OWORD *)(a3 + 840) = *(_OWORD *)&v60[12];
      *(_OWORD *)(a3 + 732) = v42;
      *(_OWORD *)(a3 + 748) = v45;
      *(_OWORD *)(a3 + 764) = v48;
      *(_OWORD *)(a3 + 780) = v51;
      _OWORD *v10 = v36;
      *(_OWORD *)(a3 + 716) = v39;
      LOBYTE(v18) = *(unsigned char *)(a2 + 856);
      *(unsigned char *)(a2 + 856) = *(unsigned char *)(a3 + 856);
      *(unsigned char *)(a3 + 856) = v18;
      if (sub_10068FF2C(a2, a1))
      {
        sub_100691428((long long *)a1, (long long *)a2);
        int v27 = *(_DWORD *)(a1 + 696);
        *(_DWORD *)(a1 + 696) = *(_DWORD *)(a2 + 696);
        *(_DWORD *)(a2 + 696) = v27;
        long long v55 = *(_OWORD *)(a1 + 796);
        long long v58 = *(_OWORD *)(a1 + 812);
        *(_OWORD *)long long v61 = *(_OWORD *)(a1 + 828);
        *(_OWORD *)&v61[12] = *(_OWORD *)(a1 + 840);
        long long v43 = *(_OWORD *)(a1 + 732);
        long long v46 = *(_OWORD *)(a1 + 748);
        long long v49 = *(_OWORD *)(a1 + 764);
        long long v52 = *(_OWORD *)(a1 + 780);
        long long v37 = *(_OWORD *)(a1 + 700);
        long long v40 = *(_OWORD *)(a1 + 716);
        long long v28 = *(_OWORD *)(a2 + 716);
        *(_OWORD *)(a1 + 700) = *v19;
        *(_OWORD *)(a1 + 716) = v28;
        long long v29 = *(_OWORD *)(a2 + 732);
        long long v30 = *(_OWORD *)(a2 + 748);
        long long v31 = *(_OWORD *)(a2 + 780);
        *(_OWORD *)(a1 + 764) = *(_OWORD *)(a2 + 764);
        *(_OWORD *)(a1 + 780) = v31;
        *(_OWORD *)(a1 + 732) = v29;
        *(_OWORD *)(a1 + 748) = v30;
        long long v32 = *(_OWORD *)(a2 + 796);
        long long v33 = *(_OWORD *)(a2 + 812);
        long long v34 = *(_OWORD *)(a2 + 828);
        *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
        *(_OWORD *)(a1 + 812) = v33;
        *(_OWORD *)(a1 + 828) = v34;
        *(_OWORD *)(a1 + 796) = v32;
        *(_OWORD *)(a2 + 796) = v55;
        *(_OWORD *)(a2 + 812) = v58;
        *(_OWORD *)(a2 + 828) = *(_OWORD *)v61;
        *(_OWORD *)(a2 + 840) = *(_OWORD *)&v61[12];
        *(_OWORD *)(a2 + 732) = v43;
        *(_OWORD *)(a2 + 748) = v46;
        *(_OWORD *)(a2 + 764) = v49;
        *(_OWORD *)(a2 + 780) = v52;
        double result = *(double *)&v37;
        *long long v19 = v37;
        *(_OWORD *)(a2 + 716) = v40;
        LOBYTE(v27) = *(unsigned char *)(a1 + 856);
        *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
        *(unsigned char *)(a2 + 856) = v27;
      }
    }
  }
  return result;
}

__n128 sub_100691AC4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v4 = *(_OWORD *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  long long v7 = (_OWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  uint64_t v8 = a1 + 80;
  sub_1000F4EBC(a1 + 88, (__n128 *)(a2 + 88));
  *(_OWORD *)(v8 + 32) = v7[2];
  long long v9 = v7[3];
  long long v10 = v7[4];
  long long v11 = v7[6];
  *(_OWORD *)(v8 + 80) = v7[5];
  *(_OWORD *)(v8 + 96) = v11;
  *(_OWORD *)(v8 + 48) = v9;
  *(_OWORD *)(v8 + 64) = v10;
  long long v12 = v7[7];
  long long v13 = v7[8];
  long long v14 = v7[10];
  *(_OWORD *)(v8 + 144) = v7[9];
  *(_OWORD *)(v8 + 160) = v14;
  *(_OWORD *)(v8 + 112) = v12;
  *(_OWORD *)(v8 + 128) = v13;
  long long v15 = v7[11];
  long long v16 = v7[12];
  long long v17 = v7[13];
  *(_OWORD *)(v8 + 220) = *(_OWORD *)((char *)v7 + 220);
  *(_OWORD *)(v8 + 192) = v16;
  *(_OWORD *)(v8 + 208) = v17;
  *(_OWORD *)(v8 + 176) = v15;
  int v18 = (void **)(v8 + 240);
  if (*(char *)(v8 + 263) < 0) {
    operator delete(*v18);
  }
  long long v19 = *(_OWORD *)(a2 + 320);
  *(void *)(v8 + 256) = *(void *)(a2 + 336);
  *(_OWORD *)int v18 = v19;
  *(unsigned char *)(a2 + 343) = 0;
  *(unsigned char *)(a2 + 320) = 0;
  long long v21 = *(_OWORD *)(a2 + 424);
  long long v20 = *(_OWORD *)(a2 + 440);
  long long v22 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 408) = v22;
  *(_OWORD *)(a1 + 424) = v21;
  *(_OWORD *)(a1 + 440) = v20;
  long long v24 = *(_OWORD *)(a2 + 360);
  long long v23 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v24;
  *(_OWORD *)(a1 + 376) = v23;
  long long v25 = *(_OWORD *)(a2 + 456);
  long long v26 = *(_OWORD *)(a2 + 472);
  long long v27 = *(_OWORD *)(a2 + 488);
  *(_DWORD *)(a1 + 504) = *(_DWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 472) = v26;
  *(_OWORD *)(a1 + 488) = v27;
  *(_OWORD *)(a1 + 456) = v25;
  long long v28 = *(_OWORD *)(a2 + 512);
  long long v29 = *(_OWORD *)(a2 + 528);
  long long v30 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v30;
  *(_OWORD *)(a1 + 512) = v28;
  *(_OWORD *)(a1 + 528) = v29;
  long long v31 = *(_OWORD *)(a2 + 576);
  long long v32 = *(_OWORD *)(a2 + 592);
  long long v33 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v33;
  *(_OWORD *)(a1 + 576) = v31;
  *(_OWORD *)(a1 + 592) = v32;
  long long v34 = *(_OWORD *)(a2 + 640);
  long long v35 = *(_OWORD *)(a2 + 656);
  long long v36 = *(_OWORD *)(a2 + 672);
  *(_DWORD *)(a1 + 688) = *(_DWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 656) = v35;
  *(_OWORD *)(a1 + 672) = v36;
  *(_OWORD *)(a1 + 640) = v34;
  *(_DWORD *)(a1 + 696) = *(_DWORD *)(a2 + 696);
  long long v37 = *(_OWORD *)(a2 + 716);
  *(_OWORD *)(a1 + 700) = *(_OWORD *)(a2 + 700);
  *(_OWORD *)(a1 + 716) = v37;
  long long v38 = *(_OWORD *)(a2 + 732);
  long long v39 = *(_OWORD *)(a2 + 748);
  long long v40 = *(_OWORD *)(a2 + 780);
  *(_OWORD *)(a1 + 764) = *(_OWORD *)(a2 + 764);
  *(_OWORD *)(a1 + 780) = v40;
  *(_OWORD *)(a1 + 732) = v38;
  *(_OWORD *)(a1 + 748) = v39;
  __n128 result = *(__n128 *)(a2 + 796);
  long long v42 = *(_OWORD *)(a2 + 812);
  long long v43 = *(_OWORD *)(a2 + 828);
  *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
  *(_OWORD *)(a1 + 812) = v42;
  *(_OWORD *)(a1 + 828) = v43;
  *(__n128 *)(a1 + 796) = result;
  *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
  return result;
}

void sub_100691C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = a2 - 2;
  if (a2 >= 2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = v3 >> 1;
    if ((uint64_t)(v3 >> 1) >= (uint64_t)(0x84BDA12F684BDA13 * ((a3 - a1) >> 5)))
    {
      uint64_t v8 = (0x97B425ED097B426 * ((a3 - a1) >> 5)) | 1;
      uint64_t v9 = a1 + 864 * v8;
      uint64_t v10 = 0x97B425ED097B426 * ((a3 - a1) >> 5) + 2;
      if (v10 < a2 && sub_10068FF2C(a1 + 864 * v8, v9 + 864))
      {
        v9 += 864;
        uint64_t v8 = v10;
      }
      if ((sub_10068FF2C(v9, v4) & 1) == 0)
      {
        long long v11 = *(_OWORD *)(v4 + 48);
        v35[2] = *(_OWORD *)(v4 + 32);
        v36[0] = v11;
        *(_OWORD *)((char *)v36 + 12) = *(_OWORD *)(v4 + 60);
        long long v12 = *(_OWORD *)(v4 + 16);
        v35[0] = *(_OWORD *)v4;
        v35[1] = v12;
        int v37 = *(_DWORD *)(v4 + 80);
        *(_OWORD *)long long v38 = *(_OWORD *)(v4 + 88);
        uint64_t v39 = *(void *)(v4 + 104);
        *(void *)(v4 + 88) = 0;
        *(void *)(v4 + 96) = 0;
        *(void *)(v4 + 104) = 0;
        *(_OWORD *)((char *)v51 + 12) = *(_OWORD *)(v4 + 300);
        long long v13 = *(_OWORD *)(v4 + 288);
        long long v50 = *(_OWORD *)(v4 + 272);
        v51[0] = v13;
        long long v14 = *(_OWORD *)(v4 + 224);
        long long v46 = *(_OWORD *)(v4 + 208);
        long long v47 = v14;
        long long v15 = *(_OWORD *)(v4 + 256);
        long long v48 = *(_OWORD *)(v4 + 240);
        long long v49 = v15;
        long long v16 = *(_OWORD *)(v4 + 160);
        long long v42 = *(_OWORD *)(v4 + 144);
        long long v43 = v16;
        long long v17 = *(_OWORD *)(v4 + 192);
        long long v44 = *(_OWORD *)(v4 + 176);
        long long v45 = v17;
        long long v18 = *(_OWORD *)(v4 + 128);
        long long v40 = *(_OWORD *)(v4 + 112);
        long long v41 = v18;
        *(_OWORD *)long long __p = *(_OWORD *)(v4 + 320);
        uint64_t v53 = *(void *)(v4 + 336);
        *(void *)(v4 + 328) = 0;
        *(void *)(v4 + 336) = 0;
        *(void *)(v4 + 320) = 0;
        long long v19 = *(_OWORD *)(v4 + 488);
        long long v62 = *(_OWORD *)(v4 + 472);
        long long v63 = v19;
        long long v20 = *(_OWORD *)(v4 + 424);
        long long v58 = *(_OWORD *)(v4 + 408);
        long long v59 = v20;
        long long v21 = *(_OWORD *)(v4 + 456);
        long long v60 = *(_OWORD *)(v4 + 440);
        long long v61 = v21;
        long long v22 = *(_OWORD *)(v4 + 360);
        long long v54 = *(_OWORD *)(v4 + 344);
        long long v55 = v22;
        long long v23 = *(_OWORD *)(v4 + 392);
        long long v56 = *(_OWORD *)(v4 + 376);
        long long v57 = v23;
        int v64 = *(_DWORD *)(v4 + 504);
        long long v24 = *(_OWORD *)(v4 + 656);
        long long v73 = *(_OWORD *)(v4 + 640);
        long long v74 = v24;
        long long v75 = *(_OWORD *)(v4 + 672);
        int v76 = *(_DWORD *)(v4 + 688);
        long long v25 = *(_OWORD *)(v4 + 592);
        long long v69 = *(_OWORD *)(v4 + 576);
        long long v70 = v25;
        long long v26 = *(_OWORD *)(v4 + 624);
        long long v71 = *(_OWORD *)(v4 + 608);
        long long v72 = v26;
        long long v27 = *(_OWORD *)(v4 + 528);
        long long v65 = *(_OWORD *)(v4 + 512);
        long long v66 = v27;
        long long v28 = *(_OWORD *)(v4 + 560);
        long long v67 = *(_OWORD *)(v4 + 544);
        long long v68 = v28;
        int v77 = *(_DWORD *)(v4 + 696);
        long long v29 = *(_OWORD *)(v4 + 812);
        long long v84 = *(_OWORD *)(v4 + 796);
        long long v85 = v29;
        *(_OWORD *)long long v86 = *(_OWORD *)(v4 + 828);
        *(_OWORD *)&v86[12] = *(_OWORD *)(v4 + 840);
        long long v30 = *(_OWORD *)(v4 + 748);
        long long v80 = *(_OWORD *)(v4 + 732);
        long long v81 = v30;
        long long v31 = *(_OWORD *)(v4 + 780);
        long long v82 = *(_OWORD *)(v4 + 764);
        long long v83 = v31;
        long long v32 = *(_OWORD *)(v4 + 716);
        long long v78 = *(_OWORD *)(v4 + 700);
        long long v79 = v32;
        char v87 = *(unsigned char *)(v4 + 856);
        do
        {
          uint64_t v33 = v9;
          sub_100691AC4(v4, v9);
          if (v6 < v8) {
            break;
          }
          uint64_t v34 = (2 * v8) | 1;
          uint64_t v9 = a1 + 864 * v34;
          uint64_t v8 = 2 * v8 + 2;
          if (v8 >= a2)
          {
            uint64_t v8 = v34;
          }
          else if (sub_10068FF2C(a1 + 864 * v34, v9 + 864))
          {
            v9 += 864;
          }
          else
          {
            uint64_t v8 = v34;
          }
          uint64_t v4 = v33;
        }
        while (!sub_10068FF2C(v9, (uint64_t)v35));
        sub_100691AC4(v33, (uint64_t)v35);
        if (SHIBYTE(v53) < 0) {
          operator delete(__p[0]);
        }
        if (v38[0])
        {
          v38[1] = v38[0];
          operator delete(v38[0]);
        }
      }
    }
  }
}

void sub_100691F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_100691F20()
{
  uint64_t v1 = qword_102419388;
  return os_log_type_enabled(v1, OS_LOG_TYPE_FAULT);
}

BOOL sub_100691F40()
{
  uint64_t v2 = *(NSObject **)(v0 + 904);
  return os_log_type_enabled(v2, OS_LOG_TYPE_INFO);
}

BOOL sub_100691F5C()
{
  uint64_t v2 = *(NSObject **)(v0 + 904);
  return os_signpost_enabled(v2);
}

uint64_t sub_100691F74(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a2;
  sub_100EBBEB0(a1 + 8, (uint64_t)"CLMotionStateOverride", a1, 0.0);
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 280) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(void *)(a1 + 72) = 23;
  if (qword_102418FD0 != -1) {
    dispatch_once(&qword_102418FD0, &stru_1022C2688);
  }
  unint64_t v3 = qword_102418FD8;
  if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Workout, Taking power assertion due to session start.", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022C2688);
    }
    long long v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLMotionStateOverride::CLMotionStateOverride(id<CLIntersiloUniverse>)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  return a1;
}

void sub_100692160(_Unwind_Exception *a1)
{
  sub_100EBBF9C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100692178(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 232);
  long long v3 = *(_OWORD *)(a1 + 264);
  long long v20 = *(_OWORD *)(a1 + 248);
  long long v21 = v3;
  uint64_t v22 = *(void *)(a1 + 280);
  long long v4 = *(_OWORD *)(a1 + 168);
  long long v5 = *(_OWORD *)(a1 + 200);
  long long v16 = *(_OWORD *)(a1 + 184);
  long long v17 = v5;
  long long v18 = *(_OWORD *)(a1 + 216);
  long long v19 = v2;
  long long v6 = *(_OWORD *)(a1 + 136);
  long long v12 = *(_OWORD *)(a1 + 120);
  long long v13 = v6;
  long long v14 = *(_OWORD *)(a1 + 152);
  long long v15 = v4;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  int32x4_t v11[2] = sub_1006923DC;
  v11[3] = &unk_1022C22A0;
  [+[CLServiceVendor sharedInstance](CLServiceVendor, "sharedInstance") proxyForService:@"CLMotionStateMediator"] syncgetDoSync:v11];
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  long long v7 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Workout, Releasing power assertion due to session end.", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    uint64_t v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLMotionStateOverride::~CLMotionStateOverride()", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  sub_100EBC6AC(a1 + 8);
  sub_100EBBF9C(a1 + 8);
  return a1;
}

void sub_1006923D0(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

void sub_1006923DC(uint64_t a1, uint64_t a2)
{
}

void sub_1006923EC(uint64_t a1, unsigned __int8 *uu)
{
  if (*(unsigned char *)(a1 + 461))
  {
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v2 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Ignoring endWorkoutSession because fTriggerIndoorOutdoorOnObservedPedWorkouts is true", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      *(_WORD *)out = 0;
      long long v3 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::endWorkoutSession(const CLMotionStateMediator_Type::WorkoutSettings &)", "%s\n", v3);
      if (v3 != (char *)buf) {
        free(v3);
      }
    }
  }
  else
  {
    memset(out, 0, 37);
    uuid_unparse(uu, out);
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
    *(_OWORD *)long long __p = 0u;
    long long v13 = 0u;
    *(_OWORD *)int32x2_t buf = 0u;
    *(_OWORD *)(a1 + 8720) = 0u;
    long long v5 = (void **)(a1 + 8736);
    if (*(char *)(a1 + 8759) < 0) {
      operator delete(*v5);
    }
    *(_OWORD *)long long v5 = *(_OWORD *)__p;
    *(void *)(a1 + 8752) = v13;
    BYTE7(v13) = 0;
    LOBYTE(__p[0]) = 0;
    sub_1006AD6E0(a1 + 8760, (uint64_t)&v13 + 8);
    sub_1004F6960((void *)&v13 + 1);
    if (SBYTE7(v13) < 0) {
      operator delete(__p[0]);
    }
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
    *(_OWORD *)long long __p = 0u;
    long long v13 = 0u;
    *(_OWORD *)int32x2_t buf = 0u;
    *(_OWORD *)(a1 + 8808) = 0u;
    long long v6 = (void **)(a1 + 8824);
    if (*(char *)(a1 + 8847) < 0) {
      operator delete(*v6);
    }
    *(_OWORD *)long long v6 = *(_OWORD *)__p;
    *(void *)(a1 + 8840) = v13;
    BYTE7(v13) = 0;
    LOBYTE(__p[0]) = 0;
    sub_1006ACE98(a1 + 8848, (uint64_t)&v13 + 8);
    sub_100663B8C((void *)&v13 + 1);
    if (SBYTE7(v13) < 0) {
      operator delete(__p[0]);
    }
    *(unsigned char *)(a1 + 8896) = 0;
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v7 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int32x2_t buf = 136315138;
      *(void *)&uint8_t buf[4] = out;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "WorkoutSession, end workout session, %s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      uint64_t v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::endWorkoutSession(const CLMotionStateMediator_Type::WorkoutSettings &)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
    uint64_t v8 = *(void *)(a1 + 8712);
    if (v8)
    {
      sub_10074638C(v8);
      sub_1006A1444((uint64_t *)(a1 + 8712), 0);
    }
    sub_100699720(a1, (uint64_t *)(a1 + 464), 0);
    sub_100699720(a1, (uint64_t *)(a1 + 528), 0);
    sub_100699720(a1, (uint64_t *)(a1 + 560), 0);
    *(unsigned char *)(a1 + 128) = 0;
  }
}

void sub_100692850(uint64_t a1, int a2)
{
  uint64_t v2 = a1 + 8;
  if (a2)
  {
    sub_100134750(v5, "StartOrResumeWorkout");
    if (*(int *)(a1 + 16) <= 0)
    {
      if (SHIBYTE(v6) < 0)
      {
        sub_1000DC48C(__p, v5[0], (unint64_t)v5[1]);
      }
      else
      {
        *(_OWORD *)long long __p = *(_OWORD *)v5;
        uint64_t v8 = v6;
      }
      sub_100EBBFD8(v2, (uint64_t *)__p);
      if (SHIBYTE(v8) < 0) {
        operator delete(__p[0]);
      }
    }
    if (SHIBYTE(v6) < 0) {
      operator delete(v5[0]);
    }
  }
  else
  {
    uint64_t v4 = a1 + 8;
    sub_100EBC6AC(v4);
  }
}

void sub_100692914(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006929B8(uint64_t a1, void *a2)
{
  int v4 = (uint64_t)[a2 state] > 299;
  if (*(unsigned __int8 *)(a1 + 592) != v4)
  {
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022C2688);
    }
    long long v5 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)int32x2_t buf = 67109376;
      unsigned int v8 = [a2 state];
      __int16 v9 = 1024;
      int v10 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Scuba diving state changed, submersionState, %d, isScubaDiving, %d", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022C2688);
      }
      [a2 state];
      uint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onSubmersionMeasurementUpdate(CLWaterSubmersionMeasurement *)", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    *(unsigned char *)(a1 + 592) = v4;
  }
}

void sub_100692C7C(id a1)
{
  qword_10247C9B8 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLMotionStateMediatorSilo"];
}

uint64_t sub_100692D3C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100695CF0;
  block[3] = &unk_10229FED8;
  block[4] = a1;
  if (qword_10247C9D8 != -1) {
    dispatch_once(&qword_10247C9D8, block);
  }
  return qword_10248A248;
}

void sub_100692FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v3 = *(void **)(a1 + 664);
  if (v3)
  {
    if (!objc_msgSend(v3, "objectForKeyedSubscript:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:")))
    {
      id v7 = objc_alloc_init((Class)NSMutableSet);
      [*(id *)(a1 + 664) setObject:v7 forKeyedSubscript:+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a3)];
    }
    id v8 = [[*(id *)(a1 + 664) objectForKeyedSubscript:+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a3)];
    [v8 addObject:a2];
  }
  else
  {
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    __int16 v9 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "PrepareSessionEnd, receiving addClientForPrepareSessionEnd after client list has been deleted!", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      int v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLMotionStateMediator::addClientForPrepareSessionEnd(id<CLMotionStateMediatorClientProtocol>, CMWorkoutType)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
}

void sub_100693264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v3 = *(void **)(a1 + 664);
  if (!v3)
  {
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    id v8 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "PrepareSessionEnd, Receiving removeClientForPrepareSessionEnd after client list has been deleted!", buf, 2u);
    }
    if (!sub_10013D1A0(115, 0)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 == -1)
    {
LABEL_20:
      int v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLMotionStateMediator::removeClientForPrepareSessionEnd(id<CLMotionStateMediatorClientProtocol>, CMWorkoutType)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
      return;
    }
LABEL_22:
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    goto LABEL_20;
  }
  if (objc_msgSend(v3, "objectForKeyedSubscript:", +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:")))
  {
    id v7 = [[*(id *)(a1 + 664) objectForKeyedSubscript:+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a3)];
    [v7 removeObject:a2];
    return;
  }
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  __int16 v9 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)int32x2_t buf = 67109120;
    int v12 = a3;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "PrepareSessionEnd, Client for PrepareSessionEnd of session type %d does not exist!", buf, 8u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 == -1) {
      goto LABEL_20;
    }
    goto LABEL_22;
  }
}

id sub_1006935A8(uint64_t a1, double a2)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  int v4 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 134217984;
    double v8 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Workout,Setting suggested stop timeout for workout,%f", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::setWorkoutSuggestedStopTimeout(CFTimeInterval)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  return [*(id *)(a1 + 320) setNextFireDelay:a2];
}

void sub_100693794(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "User dismissed current workout alert.", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::userDismissedWorkoutAlert()", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  double Current = CFAbsoluteTimeGetCurrent();
  sub_100E5885C((void *)(a1 + 6624), Current, *(float *)(a1 + 452));
  sub_10069DC80(a1);
  uint64_t v4 = *(void *)(a1 + 10208);
  if (v4)
  {
    double v5 = CFAbsoluteTimeGetCurrent();
    sub_101160A20(v4, v5);
  }
  sub_10069C54C(a1);
}

id sub_100693BBC(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(unsigned __int8 *)(a1 + 128);
    *(_DWORD *)int32x2_t buf = 67240192;
    int v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gfc didExit recieved in msm, stopping, current workout in session %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    double v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::didExitGeoFence()", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  if (sub_1014452D8(*(void *)(a1 + 9592), *(void *)(a1 + 9608)) != -1.0) {
    sub_100E58938(a1 + 6624);
  }
  return [*(id *)(a1 + 10152) stopGeoFence];
}

id sub_100693F3C(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *(unsigned __int8 *)(a1 + 128);
    *(_DWORD *)int32x2_t buf = 67240192;
    int v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#gfc didTimeout recieved in msm, stopping, current workout in session %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    double v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::didTimeoutGeoFence()", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  return [*(id *)(a1 + 10152) stopGeoFence];
}

void sub_100694168(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10069418C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (!*(unsigned char *)(result + 128))
  {
    *(unsigned char *)(result + 128) = 1;
    operator new();
  }
  *a2 = 0;
  a2[1] = 0;
  return result;
}

void sub_100694218()
{
}

id sub_10069423C(void *a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768;
  v4[2] = sub_1006ADE5C;
  void v4[3] = &unk_1022C3020;
  uint64_t v1 = (std::__shared_weak_count *)a1[1];
  v4[4] = *a1;
  double v5 = v1;
  if (v1) {
    atomic_fetch_add_explicit(&v1->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  id v2 = [v4 copy];
  if (v5) {
    sub_1000DB0A0(v5);
  }
  return v2;
}

void sub_1006942DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_1000DB0A0(a14);
  }
  _Unwind_Resume(exception_object);
}

id sub_10069432C(uint64_t a1, uint64_t a2)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v4 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Added client for workout session updates", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::registerForWorkoutSessionUpdates(id<CLMotionStateMediatorClientProtocol>)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  return [*(id *)(a1 + 680) addObject:a2];
}

id sub_100694508(uint64_t a1, uint64_t a2)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v4 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Removed client from workout session updates", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::unregisterForWorkoutSessionUpdates(id<CLMotionStateMediatorClientProtocol>)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  return [*(id *)(a1 + 680) removeObject:a2];
}

void sub_10069475C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100694778(uint64_t a1, unsigned __int8 *uu, uint64_t a3, int a4)
{
  if (*(unsigned char *)(a1 + 461))
  {
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    uint64_t v4 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Ignoring beginWorkoutSession because fTriggerIndoorOutdoorOnObservedPedWorkouts is true", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      *(_WORD *)long long v24 = 0;
      double v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::beginWorkoutSession(const CLMotionStateMediator_Type::WorkoutSettings &, const CLMotionStateMediator_Type::WorkoutSessionPriors &, BOOL)", "%s\n", v5);
      if (v5 != buf) {
        free(v5);
      }
    }
  }
  else
  {
    memset(v35, 0, 37);
    memset(out, 0, 37);
    uuid_unparse(uu, out);
    uuid_unparse((const unsigned __int8 *)a3, v35);
    *(_OWORD *)(a1 + 8720) = *(_OWORD *)a3;
    std::string::operator=((std::string *)(a1 + 8736), (const std::string *)(a3 + 16));
    sub_1006AD104((void *)(a1 + 8760), (void *)(a3 + 40));
    *(unsigned char *)(a1 + 8896) = a4;
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    int v10 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
    {
      if (*(char *)(a3 + 39) >= 0) {
        uint64_t v11 = a3 + 16;
      }
      else {
        uint64_t v11 = *(void *)(a3 + 16);
      }
      *(_DWORD *)int32x2_t buf = 136315906;
      *(void *)&uint8_t buf[4] = out;
      *(_WORD *)&unsigned char buf[12] = 2080;
      *(void *)&buf[14] = v35;
      __int16 v37 = 2080;
      uint64_t v38 = v11;
      __int16 v39 = 1024;
      int v40 = a4;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "WorkoutSession, begin workout session with workoutId, %s, overallId, %s, appId, %s, allow detection, %d", buf, 0x26u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      if (*(char *)(a3 + 39) >= 0) {
        uint64_t v18 = a3 + 16;
      }
      else {
        uint64_t v18 = *(void *)(a3 + 16);
      }
      *(_DWORD *)long long v24 = 136315906;
      *(void *)&v24[4] = out;
      *(_WORD *)&v24[12] = 2080;
      *(void *)&v24[14] = v35;
      *(_WORD *)&v24[22] = 2080;
      *(void *)&v24[24] = v18;
      LOWORD(v25) = 1024;
      *(_DWORD *)((char *)&v25 + 2) = a4;
      long long v19 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::beginWorkoutSession(const CLMotionStateMediator_Type::WorkoutSettings &, const CLMotionStateMediator_Type::WorkoutSessionPriors &, BOOL)", "%s\n", v19);
      if (v19 != buf) {
        free(v19);
      }
    }
    long long v12 = *((_OWORD *)uu + 9);
    long long v31 = *((_OWORD *)uu + 8);
    long long v32 = v12;
    uint64_t v33 = *((void *)uu + 20);
    long long v13 = *((_OWORD *)uu + 5);
    long long v27 = *((_OWORD *)uu + 4);
    long long v28 = v13;
    long long v14 = *((_OWORD *)uu + 7);
    long long v29 = *((_OWORD *)uu + 6);
    long long v30 = v14;
    long long v15 = *((_OWORD *)uu + 1);
    *(_OWORD *)long long v24 = *(_OWORD *)uu;
    *(_OWORD *)&v24[16] = v15;
    long long v16 = *((_OWORD *)uu + 3);
    long long v25 = *((_OWORD *)uu + 2);
    long long v26 = v16;
    if (*(unsigned char *)(a1 + 396) && (void)v26 == 14) {
      *(void *)&long long v26 = *(int *)(a1 + 400);
    }
    if (!a4)
    {
      sub_1004F4968((uint64_t)&v21);
      operator new();
    }
    sub_1004F4968((uint64_t)&v21);
    if (*(void *)(a3 + 80) >= 2uLL) {
      operator new();
    }
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v17 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)int32x2_t buf = 136315138;
      *(void *)&uint8_t buf[4] = v35;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "WorkoutSession, no priors but requesting detection, %s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      int v22 = 136315138;
      long long v23 = v35;
      long long v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLMotionStateMediator::beginWorkoutSession(const CLMotionStateMediator_Type::WorkoutSettings &, const CLMotionStateMediator_Type::WorkoutSessionPriors &, BOOL)", "%s\n", v20);
      if (v20 != buf) {
        free(v20);
      }
    }
    sub_100699720(a1, (uint64_t *)(a1 + 464), 256);
  }
}

void sub_100694E2C()
{
}

uint64_t sub_100694E9C(uint64_t a1, unsigned __int8 *uu, int a3)
{
  memset(out, 0, 37);
  uuid_unparse(uu, out);
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v6 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int32x2_t buf = 136315394;
    *(void *)&uint8_t buf[4] = out;
    *(_WORD *)&unsigned char buf[12] = 1024;
    *(_DWORD *)&buf[14] = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "WorkoutSession, set current workout type in session, %s, isManualTransition, %d", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::setCurrentWorkoutType(const CLMotionStateMediator_Type::WorkoutSettings &, BOOL)", "%s\n", v13);
    if (v13 != buf) {
      free(v13);
    }
  }
  long long v7 = *((_OWORD *)uu + 9);
  long long v21 = *((_OWORD *)uu + 8);
  long long v22 = v7;
  uint64_t v23 = *((void *)uu + 20);
  long long v8 = *((_OWORD *)uu + 5);
  long long v17 = *((_OWORD *)uu + 4);
  long long v18 = v8;
  long long v9 = *((_OWORD *)uu + 7);
  long long v19 = *((_OWORD *)uu + 6);
  long long v20 = v9;
  long long v10 = *((_OWORD *)uu + 1);
  *(_OWORD *)int32x2_t buf = *(_OWORD *)uu;
  *(_OWORD *)&uint8_t buf[16] = v10;
  long long v11 = *((_OWORD *)uu + 3);
  long long v15 = *((_OWORD *)uu + 2);
  long long v16 = v11;
  if (*(unsigned char *)(a1 + 396) && (void)v16 == 14) {
    *(void *)&long long v16 = *(int *)(a1 + 400);
  }
  return sub_1007458FC(*(void *)(a1 + 8712), (uint64_t)buf, a3);
}

uint64_t sub_10069515C(uint64_t a1, unsigned __int8 *uu)
{
  memset(out, 0, 37);
  uuid_unparse(uu, out);
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  int v3 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    long long v7 = out;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "WorkoutSession, pause workout, %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    double v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::pauseWorkout(const CLMotionStateMediator_Type::WorkoutSettings &)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  return sub_1007461BC(*(void *)(a1 + 8712));
}

uint64_t sub_100695370(uint64_t a1, unsigned __int8 *uu)
{
  memset(out, 0, 37);
  uuid_unparse(uu, out);
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v4 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    *(void *)&uint8_t buf[4] = out;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "WorkoutSession, resume workout, %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::resumeWorkout(const CLMotionStateMediator_Type::WorkoutSettings &)", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
  }
  long long v5 = *((_OWORD *)uu + 9);
  long long v20 = *((_OWORD *)uu + 8);
  long long v21 = v5;
  uint64_t v22 = *((void *)uu + 20);
  long long v6 = *((_OWORD *)uu + 5);
  long long v16 = *((_OWORD *)uu + 4);
  long long v17 = v6;
  long long v7 = *((_OWORD *)uu + 7);
  long long v18 = *((_OWORD *)uu + 6);
  long long v19 = v7;
  long long v8 = *((_OWORD *)uu + 1);
  *(_OWORD *)int32x2_t buf = *(_OWORD *)uu;
  long long v13 = v8;
  long long v9 = *((_OWORD *)uu + 3);
  long long v14 = *((_OWORD *)uu + 2);
  long long v15 = v9;
  if (*(unsigned char *)(a1 + 396) && (void)v15 == 14) {
    *(void *)&long long v15 = *(int *)(a1 + 400);
  }
  return sub_1007458FC(*(void *)(a1 + 8712), (uint64_t)buf, 1);
}

void sub_1006957A0(_Unwind_Exception *a1)
{
}

id sub_1006957E0(long long *a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768;
  v4[2] = sub_1006ADF70;
  void v4[3] = &unk_1022C3050;
  long long v5 = *a1;
  if (*((char *)a1 + 39) < 0)
  {
    sub_1000DC48C(&__p, *((void **)a1 + 2), *((void *)a1 + 3));
  }
  else
  {
    long long __p = a1[1];
    uint64_t v7 = *((void *)a1 + 4);
  }
  sub_1006A7010((uint64_t)v8, (void *)a1 + 5);
  id v2 = [v4 copy];
  sub_100663B8C(v8);
  if (SHIBYTE(v7) < 0) {
    operator delete((void *)__p);
  }
  return v2;
}

void sub_1006958F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

uint64_t sub_10069592C(uint64_t a1)
{
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

void sub_100695A5C(unsigned __int8 *a1, uint64_t a2, int a3)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  long long v6 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int32x2_t buf = 134349312;
    uint64_t v10 = a2;
    __int16 v11 = 1026;
    int v12 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Workout, reminder mute settings, updating %{public}ld to %{public}d", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::updateWorkoutReminderMuteSetting(CMWorkoutReminderType, BOOL)", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  if (a2)
  {
    if (a2 == 2)
    {
      a1[553] = 0;
      return;
    }
    if (a2 != 1) {
      return;
    }
    int v7 = a1[521];
    a1[521] = a3;
  }
  else
  {
    int v7 = a1[489];
    a1[489] = a3;
  }
  if (v7 != a3) {
    sub_10069D29C((uint64_t)a1);
  }
}

void sub_100695CBC(id a1)
{
  if (sub_10016CCBC())
  {
    if (sub_100C60EC0()) {
      byte_10247C9C8 = 1;
    }
  }
}

void sub_100695CF0()
{
}

void sub_100695D3C()
{
}

uint64_t sub_100695D60(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100695DF0;
  block[3] = &unk_10229FED8;
  block[4] = a1;
  if (qword_10247C9E8 != -1) {
    dispatch_once(&qword_10247C9E8, block);
  }
  return byte_10247C9E0;
}

id sub_100695DF0(uint64_t a1)
{
  id result = [[objc_msgSend(*(id *)(a1 + 32), "vendor") isServiceEnabled:@"CLMotionStateMediator"];
  byte_10247C9E0 = (char)result;
  return result;
}

void sub_100695E20(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_100698114(a1, "CLMotionStateMediator", a2);
  *(void *)uint64_t v3 = off_1022C2310;
  *(void *)(v3 + 112) = off_1022C2450;
  *(void *)(v3 + 120) = &off_1022C2490;
  *(unsigned char *)(v3 + 128) = 0;
  sub_100B5C1E0(v3 + 136);
  *(void *)(a1 + 320) = [*(id *)(a1 + 40) newTimer];
  *(void *)(a1 + 328) = 0;
  *(_OWORD *)(a1 + 336) = xmmword_101D27D8C;
  *(_OWORD *)(a1 + 352) = unk_101D27D9C;
  *(_OWORD *)(a1 + 368) = xmmword_101D27DAC;
  *(_OWORD *)(a1 + 380) = *(long long *)((char *)&xmmword_101D27DAC + 12);
  LODWORD(v6) = 0;
  sub_10044FD20((unsigned __int8 *)(a1 + 396), "ForceOtherWorkoutOverride", &v6, 0);
  LODWORD(v6) = 0;
  sub_10044FD20((unsigned __int8 *)(a1 + 408), "ForceWorkoutLocationType", &v6, 0);
  LODWORD(v6) = 150;
  sub_10044FD20((unsigned __int8 *)(a1 + 420), "ForceMaxSecondsForWorkoutLocationTypeDisambiguation", &v6, 0);
  LOBYTE(v6) = 0;
  sub_10006ACBC((unsigned __int8 *)(a1 + 432), "EnableForcedWorkoutLocationUpdatesFromSPI", (unsigned __int8 *)&v6, 0);
  LODWORD(v6) = 0;
  sub_10044FD20((unsigned __int8 *)(a1 + 436), "NumAllowedIndoorOutdoorNotificationsPerHour", &v6, 0);
  LODWORD(v6) = 1155596288;
  sub_101A22680((unsigned __int8 *)(a1 + 448), "MuteWorkoutAlertsForSecondsAfterUserDismissal", &v6, 0);
  v5.__r_.__value_.__s.__data_[0] = 0;
  sub_10006ACBC((unsigned __int8 *)&v6, "EnableALSActiveScansAOP", (unsigned __int8 *)&v5, 0);
  if (BYTE1(v6))
  {
    sub_100103240();
    char v4 = sub_100743004();
  }
  else
  {
    char v4 = 0;
  }
  *(unsigned char *)(a1 + 460) = v4;
  v5.__r_.__value_.__s.__data_[0] = 0;
  sub_10006ACBC((unsigned __int8 *)&v6, "TriggerPhoneIndoorOutdoorOnWatchPedWorkouts", (unsigned __int8 *)&v5, 0);
  *(_WORD *)(a1 + 461) = BYTE1(v6);
  sub_100134750((void *)(a1 + 464), "start");
  *(_DWORD *)(a1 + 488) = 0;
  sub_100134750((void *)(a1 + 496), "resume");
  *(_DWORD *)(a1 + 520) = 0;
  sub_100134750((void *)(a1 + 528), "end");
  *(_DWORD *)(a1 + 552) = 0;
  sub_100134750((void *)(a1 + 560), "autoPause");
  *(unsigned char *)(a1 + 592) = 0;
  *(_DWORD *)(a1 + 584) = 0;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_OWORD *)(a1 + 632) = 0u;
  *(_OWORD *)(a1 + 648) = 0u;
  *(void *)(a1 + 664) = objc_alloc_init((Class)NSMutableDictionary);
  *(void *)(a1 + 672) = 0;
  *(void *)(a1 + 688) = 0;
  *(_WORD *)(a1 + 696) = 0;
  sub_1006AE0D8((void *)(a1 + 704), *(void **)(a1 + 32));
}

void sub_100697968()
{
}

uint64_t sub_100698114(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1022C3090;
  sub_100134750((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 108) = 0;
  return a1;
}

void sub_1006981A4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006981C0(uint64_t a1, uint64_t a2)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    char v4 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onOldMotionCoprocessorData", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    std::string v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      __int16 v11 = "";
      __int16 v12 = 2082;
      long long v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onOldMotionCoprocessorData\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v7 = 0;
  }
  sub_1000546AC(a2, a1, 1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_100698378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100698398(uint64_t a1, uint64_t a2)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    char v4 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onActivePedStateCoprocessorData", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    std::string v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      __int16 v11 = "";
      __int16 v12 = 2082;
      long long v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onActivePedStateCoprocessorData\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v7 = 0;
  }
  sub_100E610A8(a2 + 6624, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_100698550(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100698570(uint64_t a1, uint64_t a2)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    char v4 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onWatchElevationCoprocessorData", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    std::string v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)int v9 = 2082;
      *(void *)&int v9[2] = "";
      __int16 v10 = 2082;
      __int16 v11 = "activity";
      __int16 v12 = 2050;
      uint64_t v13 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onWatchElevationCoprocessorData\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v7 = 0;
  }
  *(void *)int v9 = 0;
  *(void *)int32x2_t buf = *(void *)(a1 + 8);
  *(_WORD *)int v9 = *(_WORD *)(a1 + 54);
  *(_DWORD *)&v9[4] = *(_DWORD *)(a1 + 56);
  sub_1006A2974((__n128 *)(a2 + 3448), (__n128 *)buf);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_100698740(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100698760(uint64_t a1, uint64_t a2)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v8 = 1;
    char v4 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onTier1CyclingFeaturesData", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    std::string v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2082;
      *(void *)&buf[20] = "activity";
      *(_WORD *)&buf[28] = 2050;
      *(void *)&buf[30] = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onTier1CyclingFeaturesData\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v8 = 0;
  }
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)int32x2_t buf = *(_OWORD *)a1;
  *(_OWORD *)&uint8_t buf[16] = v6;
  *(void *)&unsigned char buf[32] = *(void *)(a1 + 32);
  sub_1006A2C2C(a2 + 3920, (long long *)buf);
  if (v8) {
    os_activity_scope_leave(&state);
  }
}

void sub_100698924(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100698944(uint64_t a1, _DWORD *a2, __n128 *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    char v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onCalorimetryNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    int v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      long long v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onCalorimetryNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006A3694(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100698B00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100698B20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  long long v2 = *(_OWORD *)(v1 + 7648);
  long long v3 = *(_OWORD *)(v1 + 7680);
  long long v21 = *(_OWORD *)(v1 + 7664);
  long long v22 = v3;
  uint64_t v23 = *(void *)(v1 + 7696);
  long long v4 = *(_OWORD *)(v1 + 7584);
  long long v5 = *(_OWORD *)(v1 + 7616);
  long long v17 = *(_OWORD *)(v1 + 7600);
  long long v18 = v5;
  long long v19 = *(_OWORD *)(v1 + 7632);
  long long v20 = v2;
  long long v6 = *(_OWORD *)(v1 + 7520);
  long long v7 = *(_OWORD *)(v1 + 7552);
  long long v13 = *(_OWORD *)(v1 + 7536);
  long long v14 = v7;
  long long v15 = *(_OWORD *)(v1 + 7568);
  long long v16 = v4;
  long long v8 = *(_OWORD *)(v1 + 7488);
  long long v9 = *(_OWORD *)(v1 + 7472);
  long long v10 = v8;
  long long v11 = *(_OWORD *)(v1 + 7504);
  long long v12 = v6;
  *((void *)&v10 + 1) = CFAbsoluteTimeGetCurrent();
  *(void *)&long long v10 = 4;
  sub_10069B224(v1, (uint64_t)&v9);
}

void sub_100698BEC(uint64_t a1, _DWORD *a2, unsigned __int8 *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    long long v7 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onSkiNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    long long v8 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      long long v14 = "";
      __int16 v15 = 2082;
      long long v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onSkiNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v10 = 0;
  }
  if (*a2 == 1) {
    sub_100E61294(a4 + 6624, *a3);
  }
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_100698DB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100698DD4(uint64_t a1, _DWORD *a2, int *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    long long v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onWatchOrientationSettingsNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    long long v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onWatchOrientationSettingsNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006A3C94(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100698F90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100698FB0(uint64_t a1, _DWORD *a2, unsigned __int8 *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    long long v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onDaemonStatus", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    long long v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onDaemonStatus\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006A3FE8(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10069916C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10069918C(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    long long v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onCatherineNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    long long v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onCatherineNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006A4414((uint64_t *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100699348(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100699368(uint64_t a1, _DWORD *a2, int *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    long long v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onFitnessTrackingNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    long long v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onFitnessTrackingNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006A4634(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100699524(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100699544(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    long long v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onMotionStateObserverNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    long long v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onMotionStateObserverNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006A4BE4((unsigned char *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100699700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100699720(uint64_t a1, uint64_t *a2, __int16 a3)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  long long v6 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = "overriding";
    if (!HIBYTE(a3)) {
      uint64_t v7 = "clearing override";
    }
    if (*((char *)a2 + 23) >= 0) {
      long long v8 = a2;
    }
    else {
      long long v8 = (uint64_t *)*a2;
    }
    *(_DWORD *)int32x2_t buf = 136315394;
    char v11 = v7;
    __int16 v12 = 2080;
    int v13 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Workout setting, %s for %s setting", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::overrideWorkoutReminderSetting(WorkoutReminderSetting &, std::optional<BOOL>)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  if (HIBYTE(a3) && *((unsigned char *)a2 + 27))
  {
    if (*((unsigned __int8 *)a2 + 26) == a3) {
      return;
    }
  }
  else if ((HIBYTE(a3) != 0) == (*((unsigned char *)a2 + 27) != 0))
  {
    return;
  }
  *((_WORD *)a2 + 13) = a3;
  sub_10069D29C(a1);
}

void sub_100699988(uint64_t a1, _DWORD *a2, long long *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    long long v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onLocationNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    long long v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      __int16 v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onLocationNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006A5204(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100699B44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100699B64(uint64_t a1)
{
  uint64_t v2 = sub_1000A6958();
  (*(void (**)(uint64_t))(*(void *)v2 + 936))(v2);
  uint64_t v6 = 0;
  uint64_t v3 = sub_1000A6958();
  if (sub_10006EF84(v3, "kMostRecentWorkoutEventWorkoutType", (_DWORD *)&v6 + 1)) {
    *(void *)(a1 + 9592) = SHIDWORD(v6);
  }
  uint64_t v4 = sub_1000A6958();
  uint64_t result = sub_10006EF84(v4, "kMostRecentWorkoutEventLocationType", &v6);
  if (result) {
    *(void *)(a1 + 9600) = (int)v6;
  }
  return result;
}

void sub_100699C08(uint64_t a1, _DWORD *a2, _DWORD *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v7 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onDataProtectionNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    long long v8 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      __int16 v14 = "";
      __int16 v15 = 2082;
      __int16 v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onDataProtectionNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v10 = 0;
  }
  if (!*a2) {
    sub_100ED8328(a4 + 8376, *a3 == 1);
  }
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_100699DD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100699DF4(uint64_t *a1, uint64_t a2)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    uint64_t v4 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onDeviceMotionData", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    long long v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      char v11 = "";
      __int16 v12 = 2082;
      __int16 v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onDeviceMotionData\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v7 = 0;
  }
  sub_1006A1494(a2, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_100699FA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_100699FC8(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v6 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onWifiNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    char v7 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)__int16 v12 = 2082;
      *(void *)&v12[2] = "";
      *(_WORD *)&v12[10] = 2082;
      *(void *)&v12[12] = "activity";
      *(_WORD *)&v12[20] = 2050;
      *(void *)&v12[22] = a4;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onWifiNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v10 = 0;
  }
  if (*a2 == 3)
  {
    long long v8 = *(void **)(*(void *)(a4 + 10272) + 16);
    *(void *)int32x2_t buf = _NSConcreteStackBlock;
    *(void *)__int16 v12 = 3221225472;
    *(void *)&v12[8] = sub_1006A5168;
    *(void *)&v12[16] = &unk_1022C2570;
    *(void *)&v12[24] = a4;
    [v8 fetchScanResultWithReply:buf];
  }
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_10069A1D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10069A1F4(uint64_t a1, int *a2, long long *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    long long v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onOdometerNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    int v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onOdometerNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006A3140(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10069A3B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10069A3D0(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v7 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onBacklightStateData", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    long long v8 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      __int16 v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onBacklightStateData\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  if (*a2 == 1)
  {
    uint64_t v9 = *(void *)(a4 + 8368);
    if (v9) {
      *(unsigned char *)(v9 + 240) = *(unsigned char *)(a3 + 56);
    }
  }
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10069A598(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10069A5B4(uint64_t a1, uint64_t a2)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    uint64_t v4 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onSPUStairsEscalationEvent", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    long long v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      char v11 = "";
      __int16 v12 = 2082;
      int v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onSPUStairsEscalationEvent\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v7 = 0;
  }
  sub_1006A2F0C(a2, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_10069A768(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10069A790(uint64_t a1)
{
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_10069A7F4(uint64_t a1)
{
  *(void *)a1 = off_1022C3090;
  [*(id *)(a1 + 48) invalidate];

  sub_1004459BC(a1 + 80, *(void **)(a1 + 88));
  sub_100445A1C(a1 + 56, *(void **)(a1 + 64));
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t sub_10069A878(uint64_t a1)
{
  *(void *)a1 = off_1022C2310;
  *(void *)(a1 + 112) = off_1022C2450;
  *(void *)(a1 + 120) = &off_1022C2490;
  [*(id *)(a1 + 320) invalidate];

  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 664) = 0;
  [*(id *)(a1 + 10152) stopGeoFence];

  *(void *)(a1 + 10152) = 0;
  *(void *)(a1 + 680) = 0;
  [*(id *)(a1 + 10528) unregisterForWeatherUpdates:*(void *)(a1 + 32)];

  *(void *)(a1 + 10528) = 0;
  [*(id *)(a1 + 10536) unregisterForUpdates:*(void *)(a1 + 32)];

  *(void *)(a1 + 10536) = 0;
  if (sub_1000EB1B0()) {
    [*(id *)(*(void *)(a1 + 10544) + 16) unregister:*(void *)(*(void *)(a1 + 10544) + 8) forNotification:1];
  }
  [*(id *)(a1 + 10552) stopMonitoringVisitsForClient:*(void *)(a1 + 32)];

  *(void *)(a1 + 10552) = 0;
  uint64_t v2 = sub_1008B6998();
  sub_100134750(__p, "CLMotionStateMediator");
  sub_1008B7000(v2, (uint64_t *)__p);
  if (v26 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v3 = *(void *)(a1 + 10248);
  if (v3)
  {
    *(void *)(a1 + 10248) = 0;
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  sub_10069AEC8(a1);
  (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);
  uint64_t v4 = *(void *)(a1 + 10544);
  *(void *)(a1 + 10544) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = *(void *)(a1 + 10520);
  *(void *)(a1 + 10520) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  sub_100C0AB60(a1 + 10328);
  uint64_t v6 = *(void *)(a1 + 10312);
  *(void *)(a1 + 10312) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 10296);
  *(void *)(a1 + 10296) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 10288);
  *(void *)(a1 + 10288) = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  uint64_t v9 = *(void *)(a1 + 10280);
  *(void *)(a1 + 10280) = 0;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  uint64_t v10 = *(void *)(a1 + 10272);
  *(void *)(a1 + 10272) = 0;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  uint64_t v11 = *(void *)(a1 + 10264);
  *(void *)(a1 + 10264) = 0;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  uint64_t v12 = *(void *)(a1 + 10256);
  *(void *)(a1 + 10256) = 0;
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  uint64_t v13 = *(void *)(a1 + 10248);
  *(void *)(a1 + 10248) = 0;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
  }
  uint64_t v14 = *(void *)(a1 + 10240);
  *(void *)(a1 + 10240) = 0;
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  }
  uint64_t v15 = *(void *)(a1 + 10232);
  *(void *)(a1 + 10232) = 0;
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
  }
  uint64_t v16 = *(void *)(a1 + 10224);
  *(void *)(a1 + 10224) = 0;
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
  }
  uint64_t v17 = *(void *)(a1 + 10216);
  *(void *)(a1 + 10216) = 0;
  if (v17) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
  }
  sub_1006A05B8((uint64_t *)(a1 + 10208), 0);
  uint64_t v18 = *(void *)(a1 + 10200);
  *(void *)(a1 + 10200) = 0;
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
  }
  sub_100663B8C((void *)(a1 + 8848));
  if (*(char *)(a1 + 8847) < 0) {
    operator delete(*(void **)(a1 + 8824));
  }
  sub_1004F6960((void *)(a1 + 8760));
  if (*(char *)(a1 + 8759) < 0) {
    operator delete(*(void **)(a1 + 8736));
  }
  sub_1006A1444((uint64_t *)(a1 + 8712), 0);
  sub_100ED7C2C(a1 + 8376);
  uint64_t v19 = *(void *)(a1 + 8368);
  *(void *)(a1 + 8368) = 0;
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
  }
  sub_1006B1144((uint64_t *)(a1 + 8360), 0);
  sub_100EBBF9C(a1 + 8312);
  sub_100EBBF9C(a1 + 8264);
  uint64_t v20 = *(void *)(a1 + 8256);
  *(void *)(a1 + 8256) = 0;
  if (v20) {
    (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
  }
  uint64_t v21 = *(void *)(a1 + 8248);
  *(void *)(a1 + 8248) = 0;
  if (v21) {
    sub_1006B4508(a1 + 8248, v21);
  }
  sub_1006A78A0((void *)(a1 + 6624));
  long long v22 = *(std::__shared_weak_count **)(a1 + 6616);
  if (v22) {
    sub_1000DB0A0(v22);
  }
  sub_1006B3580((void *)(a1 + 4120));
  sub_1006A7CFC((void *)(a1 + 704));
  uint64_t v23 = *(void *)(a1 + 672);
  *(void *)(a1 + 672) = 0;
  if (v23) {
    (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
  }
  if (*(char *)(a1 + 583) < 0) {
    operator delete(*(void **)(a1 + 560));
  }
  if (*(char *)(a1 + 551) < 0) {
    operator delete(*(void **)(a1 + 528));
  }
  if (*(char *)(a1 + 519) < 0) {
    operator delete(*(void **)(a1 + 496));
  }
  if (*(char *)(a1 + 487) < 0) {
    operator delete(*(void **)(a1 + 464));
  }
  sub_1003B2350((void *)(a1 + 280));
  return sub_10069A7F4(a1);
}

void sub_10069AEC8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8904);
  if (v2)
  {
    [v2 unregisterForData:*(void *)(a1 + 32)];

    *(void *)(a1 + 8904) = 0;
  }
  uint64_t v3 = *(void **)(a1 + 8912);
  if (v3)
  {
    [v3 unregisterForData:*(void *)(a1 + 32)];

    *(void *)(a1 + 8912) = 0;
  }
}

uint64_t sub_10069AF24(uint64_t a1)
{
  return sub_10069A878(a1 - 112);
}

uint64_t sub_10069AF2C(uint64_t a1)
{
  return sub_10069A878(a1 - 120);
}

void sub_10069AF34(uint64_t a1)
{
  sub_10069A878(a1);

  operator delete();
}

void sub_10069AF6C(uint64_t a1)
{
  sub_10069A878(a1 - 112);

  operator delete();
}

void sub_10069AFA8(uint64_t a1)
{
  sub_10069A878(a1 - 120);

  operator delete();
}

void sub_10069AFE4(uint64_t a1)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 216))(a1);
  uint64_t v2 = sub_1000D2E34(0);
  sub_1009D26C4(v2, 0, *(void *)(a1 + 600));
  uint64_t v3 = sub_1000D2E34(0);
  sub_1009D26C4(v3, 9, *(void *)(a1 + 616));
  sub_100103240();
  if ((sub_1000A16E8() & 0x1000000000) != 0)
  {
    uint64_t v4 = sub_1000D2E34(0);
    sub_1009D26C4(v4, 20, *(void *)(a1 + 624));
  }
  uint64_t v5 = sub_1000D2E34(0);
  sub_1009D26C4(v5, 33, *(void *)(a1 + 640));
  [*(id *)(a1 + 648) unregisterClient:*(void *)(a1 + 656) forNotification:3];

  [*(id *)(a1 + 656) setValid:0];
  if (sub_1000D2E34(0))
  {
    uint64_t v6 = sub_1000D2E34(0);
    sub_1009D26C4(v6, 47, *(void *)(a1 + 10200));
  }
  *(unsigned char *)(a1 + 108) = 1;
}

void *sub_10069B0D8@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  snprintf(__str, 0x20uLL, "%d", *a1);
  return sub_100134750(a2, __str);
}

uint64_t sub_10069B154(uint64_t a1, _DWORD *a2)
{
  if (*a2 <= 5u)
  {
    uint64_t v2 = (*(uint64_t (**)(void))(**(void **)(a1 + 6656) + 40))(*(void *)(a1 + 6656));
    sub_1006AC0E8(v2);
  }
  return 1;
}

uint64_t sub_10069B1A4(uint64_t a1, _DWORD *a2)
{
  if (*a2 == 2)
  {
    int v5 = 2;
    if (!sub_1001072EC(a1, &v5, 1))
    {
      int v4 = 2;
      (*(void (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v4);
    }
  }
  return 1;
}

void sub_10069B224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8896;
  uint64_t v6 = objc_alloc_init(ALActivityLog);
  [(ALActivityLog *)v6 setTimestamp:*(double *)(a2 + 24)];
  [(ALActivityLog *)v6 setWorkoutEvent:objc_alloc_init(ALCMWorkoutEvent)];
  [(ALCMWorkoutEvent *)[(ALActivityLog *)v6 workoutEvent] setWorkoutEvent:*(unsigned int *)(a2 + 16)];
  [(ALCMWorkoutEvent *)[(ALActivityLog *)v6 workoutEvent] setWorkoutType:+[CMWorkout CLMotionActivityTypeFromCMWorkoutType:*(void *)(a2 + 112)]];
  [(ALCMWorkoutEvent *)[(ALActivityLog *)v6 workoutEvent] setLocationType:*(unsigned int *)(a2 + 120)];
  [(ALCMWorkoutEvent *)[(ALActivityLog *)v6 workoutEvent] setStartTime:*(double *)a2];
  if (*(void *)(a2 + 16) == 1) {
    [(ALCMWorkoutEvent *)[(ALActivityLog *)v6 workoutEvent] setEndTime:*(double *)(a2 + 8)];
  }
  -[ALCMWorkoutEvent setSessionId:](-[ALActivityLog workoutEvent](v6, "workoutEvent"), "setSessionId:", [objc_alloc((Class)NSData) initWithBytes:a2 + 64 length:16]);
  [+[CLServiceVendor sharedInstance](CLServiceVendor, "sharedInstance") proxyForService:@"CLActivityLogger"] logData:v6;
  if (*(void *)(a2 + 16) == 1)
  {
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    uint64_t v7 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a2 + 8);
      *(_DWORD *)int32x2_t buf = 134217984;
      *(void *)&uint8_t buf[4] = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Motion State Mediator is sending a stop event at %f", buf, 0xCu);
    }
    uint64_t v9 = (double *)(a1 + 9732);
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      uint64_t v65 = *(void *)(a2 + 8);
      int v77 = 134217984;
      uint64_t v78 = v65;
      long long v66 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::notifyWorkoutEvent(const CLMotionStateMediator_Type::WorkoutEvent &)", "%s\n", v66);
      if (v66 != (char *)buf) {
        free(v66);
      }
    }
    *(unsigned char *)(v4 + 32) = *(unsigned char *)(v4 + 25);
    *(unsigned char *)(v4 + 33) = *(unsigned char *)(v4 + 24);
    if (*(_DWORD *)(a1 + 8952)) {
      double v10 = *(double *)(a2 + 24) - *(double *)(a1 + 9008);
    }
    else {
      double v10 = 0.0;
    }
    *(double *)(a1 + 8944) = v10;
    uint64_t v11 = llround(*v9 * 10.0);
    uint64_t v12 = llround(*(double *)(a1 + 9740) * 10.0);
    uint64_t v13 = sub_1001A58C0();
    long long v14 = *(_OWORD *)(v4 + 48);
    v67[0] = *(_OWORD *)(v4 + 32);
    v67[1] = v14;
    uint64_t v68 = *(void *)(v4 + 64);
    long long v15 = *(_OWORD *)(a1 + 9224);
    v75[12] = *(_OWORD *)(a1 + 9208);
    v75[13] = v15;
    uint64_t v76 = *(void *)(a1 + 9240);
    long long v16 = *(_OWORD *)(a1 + 9160);
    v75[8] = *(_OWORD *)(a1 + 9144);
    v75[9] = v16;
    long long v17 = *(_OWORD *)(a1 + 9192);
    v75[10] = *(_OWORD *)(a1 + 9176);
    v75[11] = v17;
    long long v18 = *(_OWORD *)(a1 + 9096);
    v75[4] = *(_OWORD *)(a1 + 9080);
    v75[5] = v18;
    long long v19 = *(_OWORD *)(a1 + 9128);
    v75[6] = *(_OWORD *)(a1 + 9112);
    v75[7] = v19;
    long long v20 = *(_OWORD *)(a1 + 9032);
    v75[0] = *(_OWORD *)(a1 + 9016);
    v75[1] = v20;
    long long v21 = *(_OWORD *)(a1 + 9064);
    v75[2] = *(_OWORD *)(a1 + 9048);
    v75[3] = v21;
    long long v22 = *(_OWORD *)(a1 + 9424);
    long long v23 = *(_OWORD *)(a1 + 9456);
    v73[12] = *(_OWORD *)(a1 + 9440);
    v73[13] = v23;
    uint64_t v74 = *(void *)(a1 + 9472);
    long long v24 = *(_OWORD *)(a1 + 9360);
    long long v25 = *(_OWORD *)(a1 + 9392);
    v73[8] = *(_OWORD *)(a1 + 9376);
    v73[9] = v25;
    v73[10] = *(_OWORD *)(a1 + 9408);
    v73[11] = v22;
    long long v26 = *(_OWORD *)(a1 + 9296);
    long long v27 = *(_OWORD *)(a1 + 9328);
    v73[4] = *(_OWORD *)(a1 + 9312);
    v73[5] = v27;
    v73[6] = *(_OWORD *)(a1 + 9344);
    v73[7] = v24;
    long long v28 = *(_OWORD *)(a1 + 9264);
    v73[0] = *(_OWORD *)(a1 + 9248);
    v73[1] = v28;
    v73[2] = *(_OWORD *)(a1 + 9280);
    v73[3] = v26;
    sub_101432D74(v13, v67, v75, v73);
    uint64_t v29 = sub_1001A58C0();
    sub_101432F94(v29, v11, v12);
    *(_WORD *)(v4 + 32) = 257;
    *(_OWORD *)(a1 + 8930) = 0u;
    *(_OWORD *)(a1 + 8946) = 0u;
    *(_WORD *)(a1 + 8962) = 0;
    *(_DWORD *)(a1 + 9728) = 0xFFFF;
    double *v9 = 0.0;
    *(void *)(a1 + 9740) = 0;
    __asm { FMOV            V1.2D, #-1.0 }
    *(_OWORD *)(a1 + 9748) = xmmword_101D1C320;
    *(_OWORD *)(a1 + 9764) = _Q1;
    *(_OWORD *)(a1 + 9780) = _Q1;
    *(_OWORD *)(a1 + 9796) = _Q1;
    *(_DWORD *)(a1 + 9812) = 0;
    *(void *)(a1 + 9816) = 0xBFF0000000000000;
    *(void *)(a1 + 9832) = 0;
    *(void *)(a1 + 9824) = 0;
    *(_DWORD *)(a1 + 9840) = 0;
    *(void *)(a1 + 9844) = 0xBFF0000000000000;
    *(_DWORD *)(a1 + 9852) = 0x7FFFFFFF;
    *(void *)(a1 + 9864) = 0;
    *(void *)(a1 + 9856) = 0;
    *(unsigned char *)(a1 + 9880) = 0;
    *(void *)(a1 + 9872) = 0;
    long long v35 = *(_OWORD *)(a2 + 208);
    v71[12] = *(_OWORD *)(a2 + 192);
    v71[13] = v35;
    uint64_t v72 = *(void *)(a2 + 224);
    long long v36 = *(_OWORD *)(a2 + 144);
    v71[8] = *(_OWORD *)(a2 + 128);
    v71[9] = v36;
    long long v37 = *(_OWORD *)(a2 + 176);
    v71[10] = *(_OWORD *)(a2 + 160);
    v71[11] = v37;
    long long v38 = *(_OWORD *)(a2 + 80);
    v71[4] = *(_OWORD *)(a2 + 64);
    v71[5] = v38;
    long long v39 = *(_OWORD *)(a2 + 112);
    v71[6] = *(_OWORD *)(a2 + 96);
    v71[7] = v39;
    long long v40 = *(_OWORD *)(a2 + 16);
    v71[0] = *(_OWORD *)a2;
    v71[1] = v40;
    long long v41 = *(_OWORD *)(a2 + 48);
    v71[2] = *(_OWORD *)(a2 + 32);
    v71[3] = v41;
    sub_100ED80F4((id)(a1 + 8376), (uint64_t)v71);
  }
  uint64_t v42 = sub_1001A58C0();
  long long v43 = *(_OWORD *)(a2 + 208);
  v69[12] = *(_OWORD *)(a2 + 192);
  v69[13] = v43;
  uint64_t v70 = *(void *)(a2 + 224);
  long long v44 = *(_OWORD *)(a2 + 144);
  v69[8] = *(_OWORD *)(a2 + 128);
  v69[9] = v44;
  long long v45 = *(_OWORD *)(a2 + 176);
  v69[10] = *(_OWORD *)(a2 + 160);
  v69[11] = v45;
  long long v46 = *(_OWORD *)(a2 + 80);
  v69[4] = *(_OWORD *)(a2 + 64);
  v69[5] = v46;
  long long v47 = *(_OWORD *)(a2 + 112);
  v69[6] = *(_OWORD *)(a2 + 96);
  v69[7] = v47;
  long long v48 = *(_OWORD *)(a2 + 16);
  v69[0] = *(_OWORD *)a2;
  v69[1] = v48;
  long long v49 = *(_OWORD *)(a2 + 48);
  v69[2] = *(_OWORD *)(a2 + 32);
  v69[3] = v49;
  sub_101432364(v42, v69);
  long long v50 = (dispatch_queue_t *)sub_10019F4CC();
  sub_100F29EF0(v50, a2, a1 + 8720, *(unsigned char *)v4);
  uint64_t v51 = *(void *)(a1 + 8368);
  if (v51) {
    sub_100D09CF0(v51, a2);
  }
  long long v90 = 0u;
  long long v91 = 0u;
  long long v89 = 0u;
  long long v88 = 0u;
  long long v87 = 0u;
  long long v52 = *(_OWORD *)(a2 + 208);
  v85[6] = *(_OWORD *)(a2 + 192);
  v85[7] = v52;
  uint64_t v53 = *(void *)(a2 + 224);
  uint64_t v92 = 0;
  uint64_t v86 = v53;
  long long v54 = *(_OWORD *)(a2 + 144);
  v85[2] = *(_OWORD *)(a2 + 128);
  v85[3] = v54;
  long long v55 = *(_OWORD *)(a2 + 160);
  v85[5] = *(_OWORD *)(a2 + 176);
  v85[4] = v55;
  long long v56 = *(_OWORD *)(a2 + 80);
  long long v83 = *(_OWORD *)(a2 + 64);
  long long v84 = v56;
  long long v57 = *(_OWORD *)(a2 + 96);
  v85[1] = *(_OWORD *)(a2 + 112);
  v85[0] = v57;
  long long v58 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)int32x2_t buf = *(_OWORD *)a2;
  long long v80 = v58;
  long long v59 = *(_OWORD *)(a2 + 32);
  long long v82 = *(_OWORD *)(a2 + 48);
  long long v81 = v59;
  uuid_copy((unsigned __int8 *)v85, (const unsigned __int8 *)(a2 + 96));
  int v77 = 2;
  (*(void (**)(uint64_t, int *, uint8_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, &v77, buf, 1, 0xFFFFFFFFLL, 0);
  uint64_t v60 = *(void *)(a2 + 16);
  if (v60 == 3)
  {
    uint64_t v61 = sub_1000D2E34(0);
    char v62 = 3;
    goto LABEL_19;
  }
  if (v60 == 2)
  {
    uint64_t v61 = sub_1000D2E34(0);
    char v62 = 2;
LABEL_19:
    LOBYTE(v77) = v62;
    (*(void (**)(void))(*(void *)(v61 + 96) + 48))();
    uint64_t v60 = *(void *)(a2 + 16);
  }
  if (v60 == 6 || v60 == 1)
  {
    uint64_t v63 = sub_1000D2E34(0);
    (*(void (**)(void))(*(void *)(v63 + 96) + 16))();
  }
  if (sub_1010143F4(a2) == 1)
  {
    *(_DWORD *)(a1 + 8900) = 1;
    sub_10069B998(a1);
  }
  else if (sub_1010143F4(a2) == 2)
  {
    *(_DWORD *)(a1 + 8900) = 2;
    sub_10069AEC8(a1);
  }
  if (&_AudioServicesPlaySystemSound && *(unsigned char *)(a1 + 462))
  {
    if ((void)v80 == 2)
    {
      int v64 = &stru_1022C24E0;
      goto LABEL_33;
    }
    if ((void)v80 == 3)
    {
      int v64 = &stru_1022C2500;
LABEL_33:
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v64);
    }
  }
  sub_10069BAE8(a1, a2);
}

id sub_10069B998(uint64_t a1)
{
  unsigned __int8 v8 = 0;
  sub_10006ACBC(v9, "EnableBatchedSensorsDuringWorkouts", &v8, 0);
  id result = (id)+[CLBatchedAccelerometerService isSupported];
  if (result)
  {
    id result = (id)+[CLBatchedDeviceMotionService isSupported];
    if (result && v9[1] != 0)
    {
      uint64_t v4 = *(void **)(a1 + 8904);
      if (!v4)
      {
        id v5 = [[objc_msgSend(*(id *)(a1 + 32), "vendor") proxyForService:@"CLBatchedAccelerometerService"];
        *(void *)(a1 + 8904) = v5;
        [v5 registerDelegate:*(void *)(a1 + 32) inSilo:[*(id *)(a1 + 32) silo]];
        uint64_t v4 = *(void **)(a1 + 8904);
      }
      [v4 registerForData:*(void *)(a1 + 32)];
      uint64_t v6 = *(void **)(a1 + 8912);
      if (!v6)
      {
        id v7 = [[objc_msgSend(*(id *)(a1 + 32), "vendor") proxyForService:@"CLBatchedDeviceMotionService"];
        *(void *)(a1 + 8912) = v7;
        [v7 registerDelegate:*(void *)(a1 + 32) inSilo:[*(id *)(a1 + 32) silo]];
        uint64_t v6 = *(void **)(a1 + 8912);
      }
      return [v6 registerForData:*(void *)(a1 + 32)];
    }
  }
  return result;
}

void sub_10069BAB0(id a1)
{
}

void sub_10069BACC(id a1)
{
}

void sub_10069BAE8(uint64_t a1, uint64_t a2)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v4 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a2 + 16);
    uint64_t v6 = *(void *)(a1 + 9896);
    *(_DWORD *)int32x2_t buf = 67109376;
    *(_DWORD *)&uint8_t buf[4] = v5;
    *(_WORD *)&uint8_t buf[8] = 1024;
    *(_DWORD *)&buf[10] = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[snapshot] evaluating from workout event %d from state %d", buf, 0xEu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v18 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::updateWorkoutSnapshot(const CLMotionStateMediator_Type::WorkoutEvent &)", "%s\n", v18);
    if (v18 != (char *)buf) {
      free(v18);
    }
  }
  uint64_t v7 = sub_1010145A0(a2);
  long long v8 = *(_OWORD *)(a1 + 10104);
  long long v46 = *(_OWORD *)(a1 + 10088);
  long long v47 = v8;
  long long v9 = *(_OWORD *)(a1 + 10136);
  long long v48 = *(_OWORD *)(a1 + 10120);
  long long v49 = v9;
  long long v10 = *(_OWORD *)(a1 + 10040);
  long long v42 = *(_OWORD *)(a1 + 10024);
  long long v43 = v10;
  long long v11 = *(_OWORD *)(a1 + 10072);
  long long v44 = *(_OWORD *)(a1 + 10056);
  long long v45 = v11;
  long long v12 = *(_OWORD *)(a1 + 9976);
  long long v38 = *(_OWORD *)(a1 + 9960);
  long long v39 = v12;
  long long v13 = *(_OWORD *)(a1 + 10008);
  long long v40 = *(_OWORD *)(a1 + 9992);
  long long v41 = v13;
  long long v14 = *(_OWORD *)(a1 + 9912);
  *(_OWORD *)int32x2_t buf = *(_OWORD *)(a1 + 9896);
  long long v35 = v14;
  long long v15 = *(_OWORD *)(a1 + 9944);
  long long v36 = *(_OWORD *)(a1 + 9928);
  long long v37 = v15;
  if (v7 != 6 && v7 != *(void *)buf)
  {
    uint64_t v16 = *(void *)(a2 + 24);
    long long v31 = *(_OWORD *)(a2 + 192);
    long long v32 = *(_OWORD *)(a2 + 208);
    uint64_t v33 = *(void *)(a2 + 224);
    long long v27 = *(_OWORD *)(a2 + 128);
    long long v28 = *(_OWORD *)(a2 + 144);
    long long v29 = *(_OWORD *)(a2 + 160);
    long long v30 = *(_OWORD *)(a2 + 176);
    long long v23 = *(_OWORD *)(a2 + 64);
    long long v24 = *(_OWORD *)(a2 + 80);
    long long v25 = *(_OWORD *)(a2 + 96);
    long long v26 = *(_OWORD *)(a2 + 112);
    long long v19 = *(_OWORD *)a2;
    long long v20 = *(_OWORD *)(a2 + 16);
    long long v21 = *(_OWORD *)(a2 + 32);
    long long v22 = *(_OWORD *)(a2 + 48);
    long long v17 = (_OWORD *)(a1 + 9904);
    *(void *)(a1 + 9896) = v7;
    if (v7)
    {
      *(_OWORD *)(a1 + 10096) = v31;
      *(_OWORD *)(a1 + 10112) = v32;
      *(void *)(a1 + 10128) = v33;
      *(_OWORD *)(a1 + 10032) = v27;
      *(_OWORD *)(a1 + 10048) = v28;
      *(_OWORD *)(a1 + 10064) = v29;
      *(_OWORD *)(a1 + 10080) = v30;
      *(_OWORD *)(a1 + 9968) = v23;
      *(_OWORD *)(a1 + 9984) = v24;
      *(_OWORD *)(a1 + 10000) = v25;
      *(_OWORD *)(a1 + 10016) = v26;
      _OWORD *v17 = v19;
      *(_OWORD *)(a1 + 9920) = v20;
      *(_OWORD *)(a1 + 9936) = v21;
      *(_OWORD *)(a1 + 9952) = v22;
      *(void *)(a1 + 10136) = v16;
      *(unsigned char *)(a1 + 10144) = 1;
    }
    else
    {
      *(void *)(a1 + 10128) = 0;
      *(_OWORD *)(a1 + 10096) = 0u;
      *(_OWORD *)(a1 + 10112) = 0u;
      *(_OWORD *)(a1 + 10064) = 0u;
      *(_OWORD *)(a1 + 10080) = 0u;
      *(_OWORD *)(a1 + 10032) = 0u;
      *(_OWORD *)(a1 + 10048) = 0u;
      *(_OWORD *)(a1 + 10000) = 0u;
      *(_OWORD *)(a1 + 10016) = 0u;
      *(_OWORD *)(a1 + 9968) = 0u;
      *(_OWORD *)(a1 + 9984) = 0u;
      *(_OWORD *)(a1 + 9936) = 0u;
      *(_OWORD *)(a1 + 9952) = 0u;
      _OWORD *v17 = 0u;
      *(_OWORD *)(a1 + 9920) = 0u;
      if (*(unsigned char *)(a1 + 10144)) {
        *(unsigned char *)(a1 + 10144) = 0;
      }
    }
    sub_10069BFA0((double *)buf, (double *)(a1 + 9896));
  }
}

uint64_t sub_10069BE18(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10101439C(a2);
  if (result)
  {
    if (result == 2)
    {
      LODWORD(__src[0]) = 0;
      sub_100054BCC(a1 + 136, (uint64_t)&__src[1]);
      memset(&__src[18], 0, 176);
    }
    else
    {
      if (result != 1)
      {
LABEL_7:
        int v9 = 1;
        memcpy(__src, __dst, sizeof(__src));
        return (*(uint64_t (**)(uint64_t, int *, void *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, &v9, __src, 1, 0xFFFFFFFFLL, 0);
      }
      LODWORD(__src[0]) = 1;
      sub_100054BCC(a1 + 136, (uint64_t)&__src[1]);
      long long v5 = *(_OWORD *)(a2 + 192);
      *(_OWORD *)&__src[33] = *(_OWORD *)(a2 + 176);
      *(_OWORD *)&__src[35] = v5;
      *(_OWORD *)&__src[37] = *(_OWORD *)(a2 + 208);
      long long v6 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)&__src[25] = *(_OWORD *)(a2 + 112);
      *(_OWORD *)&__src[27] = v6;
      long long v7 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)&__src[29] = *(_OWORD *)(a2 + 144);
      *(_OWORD *)&__src[31] = v7;
      long long v8 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)&__src[19] = *(_OWORD *)(a2 + 64);
      __src[18] = *(void *)(a2 + 112);
      __src[39] = *(void *)(a2 + 224);
      *(_OWORD *)&__src[21] = v8;
      *(_OWORD *)&__src[23] = *(_OWORD *)(a2 + 96);
    }
    memcpy(__dst, __src, sizeof(__dst));
    goto LABEL_7;
  }
  return result;
}

void sub_10069BFA0(double *a1, double *a2)
{
  uint64_t v4 = &qword_102419000;
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  long long v5 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    double v6 = *a1;
    uint64_t v7 = *((void *)a1 + 15);
    double v8 = a1[30];
    if (!*((unsigned char *)a1 + 248)) {
      double v8 = 1.79769313e308;
    }
    int v9 = +[NSDate dateWithTimeIntervalSinceReferenceDate:v8];
    double v10 = *a2;
    uint64_t v11 = *((void *)a2 + 15);
    double v12 = a2[30];
    if (!*((unsigned char *)a2 + 248)) {
      double v12 = 1.79769313e308;
    }
    *(_DWORD *)int32x2_t buf = 67110402;
    int v24 = LODWORD(v6);
    __int16 v25 = 1024;
    int v26 = v7;
    __int16 v27 = 2112;
    long long v28 = v9;
    uint64_t v4 = &qword_102419000;
    __int16 v29 = 1024;
    int v30 = LODWORD(v10);
    __int16 v31 = 1024;
    int v32 = v11;
    __int16 v33 = 2112;
    uint64_t v34 = +[NSDate dateWithTimeIntervalSinceReferenceDate:v12];
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[snapshot] workout snapshot transitioned from [state %d, workout %d at %@] to [state %d, workout %d at %@]", buf, 0x2Eu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    double v18 = a1[30];
    if (!*((unsigned char *)a1 + 248)) {
      double v18 = 1.79769313e308;
    }
    +[NSDate dateWithTimeIntervalSinceReferenceDate:v18];
    double v19 = a2[30];
    if (!*((unsigned char *)a2 + 248)) {
      double v19 = 1.79769313e308;
    }
    +[NSDate dateWithTimeIntervalSinceReferenceDate:v19];
    long long v20 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "static void CLMotionStateMediator::notifySnapshotIfNecessary(const CLMotionStateMediator_Type::WorkoutSnapshot &, const CLMotionStateMediator_Type::WorkoutSnapshot &)", "%s\n", v20);
    if (v20 != (char *)buf) {
      free(v20);
    }
    uint64_t v4 = &qword_102419000;
  }
  double v13 = *a2;
  if (*(void *)a1 == 1 && *(void *)&v13 == 5 || *(void *)a1 == 5 && *(void *)&v13 == 1)
  {
    if (v4[56] != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v14 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_INFO))
    {
      double v15 = *a1;
      double v16 = *a2;
      *(_DWORD *)int32x2_t buf = 67109376;
      int v24 = LODWORD(v15);
      __int16 v25 = 1024;
      int v26 = LODWORD(v16);
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "[snapshot] sending snapshot notification from %d to %d", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (v4[56] != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      long long v21 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "static void CLMotionStateMediator::notifySnapshotIfNecessary(const CLMotionStateMediator_Type::WorkoutSnapshot &, const CLMotionStateMediator_Type::WorkoutSnapshot &)", "%s\n", v21);
      if (v21 != (char *)buf) {
        free(v21);
      }
    }
    if (notify_post((const char *)[kCMWorkoutStateStopDetectionUpdateNotification UTF8String]))
    {
      if (v4[56] != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      long long v17 = qword_1024191C8;
      if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)int32x2_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "[snapshot] encountered error notifying stop detection update", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (v4[56] != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C26A8);
        }
        long long v22 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "static void CLMotionStateMediator::notifySnapshotIfNecessary(const CLMotionStateMediator_Type::WorkoutSnapshot &, const CLMotionStateMediator_Type::WorkoutSnapshot &)", "%s\n", v22);
        if (v22 != (char *)buf) {
          free(v22);
        }
      }
    }
  }
}

void sub_10069C54C(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 9896);
    *(_DWORD *)int32x2_t buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "[snapshot] evaluating after dismiss from state %d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v17 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::updateWorkoutSnapshotAfterDismiss()", "%s\n", v17);
    if (v17 != (char *)buf) {
      free(v17);
    }
  }
  uint64_t v4 = sub_101014674(*(void *)(a1 + 9896));
  long long v5 = *(_OWORD *)(a1 + 10104);
  long long v30 = *(_OWORD *)(a1 + 10088);
  long long v31 = v5;
  long long v6 = *(_OWORD *)(a1 + 10136);
  long long v32 = *(_OWORD *)(a1 + 10120);
  long long v33 = v6;
  long long v7 = *(_OWORD *)(a1 + 10040);
  long long v26 = *(_OWORD *)(a1 + 10024);
  long long v27 = v7;
  long long v8 = *(_OWORD *)(a1 + 10072);
  long long v28 = *(_OWORD *)(a1 + 10056);
  long long v29 = v8;
  long long v9 = *(_OWORD *)(a1 + 9976);
  long long v22 = *(_OWORD *)(a1 + 9960);
  long long v23 = v9;
  long long v10 = *(_OWORD *)(a1 + 10008);
  long long v24 = *(_OWORD *)(a1 + 9992);
  long long v25 = v10;
  long long v11 = *(_OWORD *)(a1 + 9912);
  *(_OWORD *)int32x2_t buf = *(_OWORD *)(a1 + 9896);
  long long v19 = v11;
  long long v12 = *(_OWORD *)(a1 + 9944);
  long long v20 = *(_OWORD *)(a1 + 9928);
  long long v21 = v12;
  if (v4 != *(void *)buf)
  {
    uint64_t v13 = v4;
    double Current = CFAbsoluteTimeGetCurrent();
    *(void *)(a1 + 9896) = v13;
    double v15 = (char *)(a1 + 10144);
    if (v13)
    {
      *(double *)(a1 + 10136) = Current;
      char v16 = 1;
    }
    else
    {
      *(void *)(a1 + 10128) = 0;
      *(_OWORD *)(a1 + 10112) = 0u;
      *(_OWORD *)(a1 + 10096) = 0u;
      *(_OWORD *)(a1 + 10080) = 0u;
      *(_OWORD *)(a1 + 10064) = 0u;
      *(_OWORD *)(a1 + 10048) = 0u;
      *(_OWORD *)(a1 + 10032) = 0u;
      *(_OWORD *)(a1 + 10016) = 0u;
      *(_OWORD *)(a1 + 10000) = 0u;
      *(_OWORD *)(a1 + 9984) = 0u;
      *(_OWORD *)(a1 + 9968) = 0u;
      *(_OWORD *)(a1 + 9952) = 0u;
      *(_OWORD *)(a1 + 9936) = 0u;
      *(_OWORD *)(a1 + 9920) = 0u;
      *(_OWORD *)(a1 + 9904) = 0u;
      if (!*v15)
      {
LABEL_12:
        sub_10069BFA0((double *)buf, (double *)(a1 + 9896));
        return;
      }
      char v16 = 0;
    }
    char *v15 = v16;
    goto LABEL_12;
  }
}

void sub_10069C7DC(uint64_t a1, __int16 a2)
{
  if (sub_10125D0BC())
  {
    if ((a2 & 0x101) != 0)
    {
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      uint64_t v4 = qword_1024191C8;
      if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int32x2_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Enabled device motion.", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C26A8);
        }
        uint64_t v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::startStopDeviceMotionBasedOnWorkout(CLWorkoutPredictor_Type::DeviceMotionToggleInfo)", "%s\n", v13);
        if (v13 != (char *)buf) {
          free(v13);
        }
      }
      uint64_t v5 = sub_10125D0BC();
      sub_10125DACC(v5, *(void *)(a1 + 672), 0.01);
    }
    else
    {
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      long long v6 = qword_1024191C8;
      if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int32x2_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Disabled device motion.", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C26A8);
        }
        long long v14 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::startStopDeviceMotionBasedOnWorkout(CLWorkoutPredictor_Type::DeviceMotionToggleInfo)", "%s\n", v14);
        if (v14 != (char *)buf) {
          free(v14);
        }
      }
      uint64_t v7 = sub_10125D0BC();
      sub_10125DDA0(v7, *(void *)(a1 + 672));
    }
    long long v8 = (uint64_t *)(a1 + 8248);
    uint64_t v9 = *(void *)(a1 + 8248);
    if (a2)
    {
      if (!v9)
      {
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C26A8);
        }
        long long v12 = qword_1024191C8;
        if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)int32x2_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Starting turn detector", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024191C0 != -1) {
            dispatch_once(&qword_1024191C0, &stru_1022C26A8);
          }
          char v16 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::startStopDeviceMotionBasedOnWorkout(CLWorkoutPredictor_Type::DeviceMotionToggleInfo)", "%s\n", v16);
          if (v16 != (char *)buf) {
            free(v16);
          }
        }
        operator new();
      }
    }
    else if (v9)
    {
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      long long v10 = qword_1024191C8;
      if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)int32x2_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Stopping turn detector", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C26A8);
        }
        double v15 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::startStopDeviceMotionBasedOnWorkout(CLWorkoutPredictor_Type::DeviceMotionToggleInfo)", "%s\n", v15);
        if (v15 != (char *)buf) {
          free(v15);
        }
      }
      uint64_t v11 = *v8;
      uint64_t *v8 = 0;
      if (v11) {
        sub_1006B4508((uint64_t)v8, v11);
      }
    }
  }
}

void sub_10069CD88()
{
}

void sub_10069CDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v36 = *(_OWORD *)a3;
  long long v6 = (const std::string *)(a3 + 16);
  if (*(char *)(a3 + 39) < 0)
  {
    sub_1000DC48C(&v37, *(void **)(a3 + 16), *(void *)(a3 + 24));
  }
  else
  {
    long long v37 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    uint64_t v38 = *(void *)(a3 + 32);
  }
  sub_1006A7010((uint64_t)v39, (void *)(a3 + 40));
  uint64_t v18 = a1;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id obj = *(id *)(a1 + 680);
  id v7 = [obj countByEnumeratingWithState:&v21 objects:v35 count:16];
  if (v7)
  {
    uint64_t v20 = *(void *)v22;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v22 != v20) {
          objc_enumerationMutation(obj);
        }
        uint64_t v9 = *(void **)(*((void *)&v21 + 1) + 8 * i);
        long long v10 = *(_OWORD *)(a2 + 208);
        v33[12] = *(_OWORD *)(a2 + 192);
        v33[13] = v10;
        uint64_t v34 = *(void *)(a2 + 224);
        long long v11 = *(_OWORD *)(a2 + 144);
        unsigned char v33[8] = *(_OWORD *)(a2 + 128);
        v33[9] = v11;
        long long v12 = *(_OWORD *)(a2 + 176);
        v33[10] = *(_OWORD *)(a2 + 160);
        v33[11] = v12;
        long long v13 = *(_OWORD *)(a2 + 80);
        v33[4] = *(_OWORD *)(a2 + 64);
        void v33[5] = v13;
        long long v14 = *(_OWORD *)(a2 + 112);
        void v33[6] = *(_OWORD *)(a2 + 96);
        v33[7] = v14;
        long long v15 = *(_OWORD *)(a2 + 16);
        v33[0] = *(_OWORD *)a2;
        v33[1] = v15;
        long long v16 = *(_OWORD *)(a2 + 48);
        v33[2] = *(_OWORD *)(a2 + 32);
        v33[3] = v16;
        long long v29 = v36;
        if (SHIBYTE(v38) < 0)
        {
          sub_1000DC48C(&v30, (void *)v37, *((unint64_t *)&v37 + 1));
        }
        else
        {
          long long v30 = v37;
          uint64_t v31 = v38;
        }
        sub_1006A7010((uint64_t)v32, v39);
        id v17 = sub_1006957E0(&v29);
        long long v25 = *(_OWORD *)(v18 + 8720);
        if (*(char *)(v18 + 8759) < 0)
        {
          sub_1000DC48C(&__p, *(void **)(v18 + 8736), *(void *)(v18 + 8744));
        }
        else
        {
          long long __p = *(_OWORD *)(v18 + 8736);
          uint64_t v27 = *(void *)(v18 + 8752);
        }
        sub_1006AC1AC((uint64_t)v28, (void *)(v18 + 8760));
        [v9 onWorkoutSessionUpdate:v33 withOverview:v17 andPriors:sub_10069D150(&v25)];
        sub_1004F6960(v28);
        if (SHIBYTE(v27) < 0) {
          operator delete((void *)__p);
        }
        sub_100663B8C(v32);
        if (SHIBYTE(v31) < 0) {
          operator delete((void *)v30);
        }
      }
      id v7 = [obj countByEnumeratingWithState:&v21 objects:v35 count:16];
    }
    while (v7);
  }
  *(_OWORD *)(v18 + 8808) = *(_OWORD *)a3;
  std::string::operator=((std::string *)(v18 + 8824), v6);
  sub_1006ACA2C((void *)(v18 + 8848), (void *)(a3 + 40));
  sub_100663B8C(v39);
  if (SHIBYTE(v38) < 0) {
    operator delete((void *)v37);
  }
}

void sub_10069D0C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51)
{
}

id sub_10069D150(long long *a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768;
  v4[2] = sub_1006B4BE0;
  void v4[3] = &unk_1022C3DD0;
  long long v5 = *a1;
  if (*((char *)a1 + 39) < 0)
  {
    sub_1000DC48C(&__p, *((void **)a1 + 2), *((void *)a1 + 3));
  }
  else
  {
    long long __p = a1[1];
    uint64_t v7 = *((void *)a1 + 4);
  }
  sub_1006AC1AC((uint64_t)v8, (void *)a1 + 5);
  id v2 = [v4 copy];
  sub_1004F6960(v8);
  if (SHIBYTE(v7) < 0) {
    operator delete((void *)__p);
  }
  return v2;
}

void sub_10069D268(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
}

uint64_t sub_10069D29C(uint64_t a1)
{
  uint64_t v2 = a1 + 8920;
  int v3 = *(unsigned __int8 *)(a1 + 8920);
  if (*(unsigned char *)(a1 + 8920))
  {
    if (*(unsigned char *)(a1 + 10192)) {
      int v3 = 0;
    }
    else {
      int v3 = *(_DWORD *)(a1 + 376) == 0;
    }
  }
  *(unsigned char *)(a1 + 488) = v3;
  *(unsigned char *)(a1 + 552) = 1;
  int v4 = *(unsigned __int8 *)(a1 + 8922);
  if (*(unsigned char *)(a1 + 8922)) {
    int v4 = !*(unsigned char *)(a1 + 10192) && !*(_DWORD *)(a1 + 376) && *(unsigned char *)(a1 + 8923) != 0;
  }
  *(unsigned char *)(a1 + 520) = v4;
  *(unsigned char *)(a1 + 584) = 1;
  if (*(unsigned char *)(a1 + 491))
  {
    BOOL v5 = *(unsigned char *)(a1 + 490) != 0;
  }
  else if (*(unsigned char *)(a1 + 489))
  {
    BOOL v5 = 0;
  }
  else
  {
    BOOL v5 = v3;
  }
  if (*(unsigned char *)(a1 + 523))
  {
    BOOL v6 = *(unsigned char *)(a1 + 522) != 0;
  }
  else if (*(unsigned char *)(a1 + 521))
  {
    BOOL v6 = 0;
  }
  else
  {
    BOOL v6 = v4;
  }
  if (*(unsigned char *)(a1 + 555)) {
    BOOL v7 = *(unsigned char *)(a1 + 554) != 0;
  }
  else {
    BOOL v7 = *(unsigned char *)(a1 + 553) == 0;
  }
  if (*(unsigned char *)(a1 + 587)) {
    BOOL v8 = *(unsigned char *)(a1 + 586) != 0;
  }
  else {
    BOOL v8 = *(unsigned char *)(a1 + 585) == 0;
  }
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v9 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    BOOL v10 = *(_DWORD *)(a1 + 376) == 0;
    int v11 = *(unsigned __int8 *)(v2 + 3);
    *(_DWORD *)int32x2_t buf = 67241472;
    BOOL v15 = v5;
    __int16 v16 = 1026;
    BOOL v17 = v6;
    __int16 v18 = 1026;
    BOOL v19 = v7;
    __int16 v20 = 1026;
    BOOL v21 = v8;
    __int16 v22 = 1026;
    BOOL v23 = v10;
    __int16 v24 = 1024;
    int v25 = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Workout settings, start, %{public}d, resume, %{public}d, end, %{public}d, autopause, %{public}d, valid user info, %{public}d,  fitness tracking allowed, %d", buf, 0x26u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::updateWorkoutReminderSettings()", "%s\n", v13);
    if (v13 != (char *)buf) {
      free(v13);
    }
  }
  sub_100E57F78((unsigned __int8 *)(a1 + 6624), v5, v7);
  sub_100E61E44(a1 + 6624, v8);
  uint64_t result = *(void *)(a1 + 10208);
  if (result) {
    return sub_101160CF8(result, v6);
  }
  return result;
}

void sub_10069D608(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 328);
  if (a2)
  {
    if (v3)
    {
      if (qword_1024192A0 != -1) {
        dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
      }
      int v4 = qword_1024192A8;
      if (os_log_type_enabled((os_log_t)qword_1024192A8, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)int32x2_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Wifi timer already existed, reinitializing.", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024192A0 != -1) {
          dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
        }
        __int16 v12 = 0;
        uint64_t v9 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionStateMediator::controlWifiScans(BOOL)", "%s\n", v9);
        if (v9 != (char *)buf) {
          free(v9);
        }
      }
      dispatch_release(*(dispatch_object_t *)(a1 + 328));
      *(void *)(a1 + 328) = 0;
    }
    if (qword_1024192A0 != -1) {
      dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
    }
    BOOL v5 = qword_1024192A8;
    if (os_log_type_enabled((os_log_t)qword_1024192A8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Starting Wifi Scans.", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192A0 != -1) {
        dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
      }
      __int16 v12 = 0;
      BOOL v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionStateMediator::controlWifiScans(BOOL)", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
    BOOL v6 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, (dispatch_queue_t)[*(id *)(a1 + 40) queue]);
    *(void *)(a1 + 328) = v6;
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472;
    handler[2] = sub_10069DAC4;
    handler[3] = &unk_1022A3020;
    handler[4] = a1;
    dispatch_source_set_event_handler(v6, handler);
    dispatch_source_set_timer(*(dispatch_source_t *)(a1 + 328), 0, 0x1DCD65000uLL, 0x3B9ACA00uLL);
    dispatch_resume(*(dispatch_object_t *)(a1 + 328));
  }
  else if (v3)
  {
    if (qword_1024192A0 != -1) {
      dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
    }
    BOOL v7 = qword_1024192A8;
    if (os_log_type_enabled((os_log_t)qword_1024192A8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Stopping Wifi Scans.", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192A0 != -1) {
        dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
      }
      __int16 v12 = 0;
      BOOL v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionStateMediator::controlWifiScans(BOOL)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
    dispatch_release(*(dispatch_object_t *)(a1 + 328));
    *(void *)(a1 + 328) = 0;
  }
}

id sub_10069DAC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (qword_1024192A0 != -1) {
    dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
  }
  uint64_t v2 = qword_1024192A8;
  if (os_log_type_enabled((os_log_t)qword_1024192A8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Triggering Wifi Scan.", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192A0 != -1) {
      dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
    }
    int v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionStateMediator::controlWifiScans(BOOL)_block_invoke", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  return [*(id *)(*(void *)(v1 + 10272) + 16) syncgetStartScanWithType:8 lowPriority:0 passive:0 requester:"motionworkout"];
}

void sub_10069DC78(uint64_t a1, int a2)
{
}

void sub_10069DC80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 10248);
  if (v1)
  {
    if (*(_WORD *)(a1 + 696))
    {
      __int16 v3 = *(_WORD *)(a1 + 696) - 1;
      *(_WORD *)(a1 + 696) = v3;
      if (!v3) {
        [*(id *)(v1 + 16) unregister:*(void *)(v1 + 8) forNotification:9];
      }
    }
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    int v4 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = *(unsigned __int16 *)(a1 + 696);
      *(_DWORD *)int32x2_t buf = 67109120;
      int v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "OneSecondHeartRateCounter %d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      BOOL v6 = (uint8_t *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::unregisterOneSecondHeartRate()", "%s\n");
LABEL_22:
      if (v6 != buf) {
        free(v6);
      }
    }
  }
  else
  {
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    BOOL v7 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Attempting unregistering for 1Hz HR with uninitialized HR client", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      BOOL v6 = (uint8_t *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLMotionStateMediator::unregisterOneSecondHeartRate()", "%s\n");
      goto LABEL_22;
    }
  }
}

void sub_10069DF7C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 10248);
  if (v1)
  {
    [*(id *)(v1 + 16) register:*(void *)(v1 + 8) forNotification:9 registrationInfo:0];
    ++*(_WORD *)(a1 + 696);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    __int16 v3 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = *(unsigned __int16 *)(a1 + 696);
      *(_DWORD *)int32x2_t buf = 67109120;
      int v8 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Registering for 1Hz HR. OneSecondHeartRateCounter %d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      int v5 = (uint8_t *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::registerOneSecondHeartRate()", "%s\n");
LABEL_19:
      if (v5 != buf) {
        free(v5);
      }
    }
  }
  else
  {
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    BOOL v6 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)int32x2_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Attempting registering for 1Hz HR with uninitialized HR client", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      int v5 = (uint8_t *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLMotionStateMediator::registerOneSecondHeartRate()", "%s\n");
      goto LABEL_19;
    }
  }
}

id sub_10069E270(uint64_t a1)
{
  id result = objc_alloc_init((Class)BrightnessSystemClient);
  *(void *)(a1 + 688) = result;
  if (result)
  {
    v3[0] = _NSConcreteStackBlock;
    v3[1] = 3221225472;
    v3[2] = sub_10069E330;
    void v3[3] = &unk_1022C2520;
    void v3[4] = a1;
    [result registerNotificationBlock:v3 forProperties:&off_102397A10];
    return [*(id *)(a1 + 688) setProperty:(id)CFMakeCollectable(kCFBooleanTrue) forKey:@"ActivateALS"];
  }
  return result;
}

id sub_10069E330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = [*(id *)(v4 + 32) silo];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10069E3B4;
  v7[3] = &unk_1022A56E0;
  v7[4] = a3;
  v7[5] = v4;
  return [v5 async:v7];
}

uint64_t sub_10069E3B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  CFAbsoluteTimeGetCurrent();
  [*(id *)(a1 + 32) floatValue];
  [*(id *)(v2 + 32) silo];
  __int16 v3 = *(uint64_t (**)(void))(**(void **)(v2 + 8256) + 40);

  return v3();
}

void sub_10069E438(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 688);
  if (v2)
  {
    [v2 unregisterNotificationForKeys:&off_102397A28];
    [*(id *)(a1 + 688) registerNotificationBlock:0];

    *(void *)(a1 + 688) = 0;
  }
}

id sub_10069E484(uint64_t a1, uint64_t a2)
{
  if (qword_1024192A0 != -1) {
    dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
  }
  uint64_t v4 = qword_1024192A8;
  if (os_log_type_enabled((os_log_t)qword_1024192A8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "IndoorOutdoor, starting indoorOutdoor", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192A0 != -1) {
      dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
    }
    BOOL v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionStateMediator::startIndoorOutdoorSession(const IndoorOutdoorSettings &)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  (*(void (**)(void, uint64_t))(**(void **)(a1 + 8256) + 56))(*(void *)(a1 + 8256), a2);
  return sub_10069E270(a1);
}

id sub_10069E650(uint64_t a1, uint64_t a2)
{
  return sub_10069E484(a1 - 112, a2);
}

void sub_10069E658(uint64_t a1)
{
  if (qword_1024192A0 != -1) {
    dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
  }
  uint64_t v2 = qword_1024192A8;
  if (os_log_type_enabled((os_log_t)qword_1024192A8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "IndoorOutdoor, stopping indoorOutdoor", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192A0 != -1) {
      dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
    }
    __int16 v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionStateMediator::stopIndoorOutdoorSession()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  (*(void (**)(void))(**(void **)(a1 + 8256) + 64))(*(void *)(a1 + 8256));
  sub_10069E438(a1);
}

void sub_10069E81C(uint64_t a1)
{
}

void sub_10069E824(uint64_t a1, uint64_t a2, int a3)
{
  *(_DWORD *)(a1 + 8960) = (*(_DWORD *)(a2 + 24) << 30) + (*(_DWORD *)(a2 + 32) << 27);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  unint64_t v7 = *(void *)a2 - 1;
  if (v7 > 3) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = qword_101D29F40[v7];
  }
  uint64_t v9 = *(void *)(a2 + 16);
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  long long v45 = 0u;
  long long v46 = 0u;
  long long v44 = 0u;
  uint64_t v47 = 0;
  long long v43 = 0u;
  long long v42 = 0u;
  long long v41 = 0u;
  long long v40 = 0u;
  long long v39 = 0u;
  long long v38 = 0u;
  long long v37 = 0u;
  long long v36 = 0u;
  long long v35 = 0u;
  long long v34 = 0u;
  long long v33 = 0u;
  long long v32 = 0u;
  long long v31 = 0u;
  long long v30 = 0u;
  long long v29 = 0u;
  *(CFAbsoluteTime *)long long v28 = Current;
  v28[1] = v8;
  v28[2] = v6;
  if (qword_1024192A0 != -1) {
    dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
  }
  int v11 = qword_1024192A8;
  if (os_log_type_enabled((os_log_t)qword_1024192A8, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)int32x2_t buf = 134349568;
    uint64_t v23 = v8;
    __int16 v24 = 2050;
    uint64_t v25 = v6;
    __int16 v26 = 2050;
    uint64_t v27 = v9;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "IndoorOutdoor,new location type,%{public}ld,confidence,%{public}ld,probability,%{public}f", buf, 0x20u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192A0 != -1) {
      dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
    }
    int v16 = 134349568;
    uint64_t v17 = v8;
    __int16 v18 = 2050;
    uint64_t v19 = v6;
    __int16 v20 = 2050;
    uint64_t v21 = v9;
    __int16 v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionStateMediator::onIndoorOutdoorUpdate(const CLIndoorOutdoorProtocol::IndoorOutdoorEvent &, BOOL)", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
  *(_DWORD *)int32x2_t buf = 3;
  (*(void (**)(uint64_t, uint8_t *, void *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, buf, v28, 1, 0xFFFFFFFFLL, 0);
  if (*(unsigned char *)(a1 + 461))
  {
    (*(void (**)(uint64_t))(*(void *)a1 + 216))(a1);
  }
  else if (a3)
  {
    sub_100E61DD8(a1 + 6624, v5);
  }
  long long v14 = *(_OWORD *)(a1 + 10160);
  uint64_t v15 = *(void *)(a1 + 10176);
  *(CFAbsoluteTime *)long long v13 = Current;
  v13[1] = v8;
  v13[2] = v6;
  sub_10069EB78((_DWORD *)a1, (uint64_t)&v14, (uint64_t)v13);
  *(CFAbsoluteTime *)(a1 + 10160) = Current;
  *(void *)(a1 + 10168) = v8;
  *(void *)(a1 + 10176) = v6;
}

void sub_10069EB78(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  NSInteger v6 = [(NSDateComponents *)[+[NSCalendar currentCalendar](NSCalendar, "currentCalendar") components:32 fromDate:+[NSDate date]] hour];
  if (v6 == a1[2547])
  {
    int v7 = a1[2546];
  }
  else
  {
    int v7 = 0;
    a1[2547] = v6;
    a1[2546] = 0;
  }
  if (v7 < a1[110])
  {
    a1[2546] = v7 + 1;
    sub_100134750(&v41, off_1022C3F30[*(void *)(a2 + 8)]);
    sub_100134750(v39, off_1022C3F50[*(void *)(a2 + 16)]);
    sub_100134750(&v37, (char *)[(NSString *)+[NSDateFormatter localizedStringFromDate:dateStyle:timeStyle:](NSDateFormatter, "localizedStringFromDate:dateStyle:timeStyle:", +[NSDate dateWithTimeIntervalSinceReferenceDate:*(double *)a2], 1, 1) UTF8String]);
    sub_100134750(v35, off_1022C3F30[*(void *)(a3 + 8)]);
    sub_100134750(&v33, off_1022C3F50[*(void *)(a3 + 16)]);
    sub_100134750(v31, (char *)[(NSString *)+[NSDateFormatter localizedStringFromDate:dateStyle:timeStyle:](NSDateFormatter, "localizedStringFromDate:dateStyle:timeStyle:", +[NSDate dateWithTimeIntervalSinceReferenceDate:*(double *)a3], 1, 1) UTF8String]);
    if (qword_1024192A0 != -1) {
      dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
    }
    uint64_t v8 = qword_1024192A8;
    if (os_log_type_enabled((os_log_t)qword_1024192A8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = &v41;
      if (v42 < 0) {
        uint64_t v9 = (long long *)v41;
      }
      BOOL v10 = v39;
      if (v40 < 0) {
        BOOL v10 = (void **)v39[0];
      }
      int v11 = v35;
      if (v36 < 0) {
        int v11 = (void **)v35[0];
      }
      __int16 v12 = &v33;
      if (v34 < 0) {
        __int16 v12 = (long long *)v33;
      }
      *(_DWORD *)int32x2_t buf = 136315906;
      long long v52 = v9;
      __int16 v53 = 2080;
      long long v54 = v10;
      __int16 v55 = 2080;
      long long v56 = v11;
      __int16 v57 = 2080;
      long long v58 = v12;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "IndoorOutdoor, issuing notification old (%s, %s) new (%s, %s)", buf, 0x2Au);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192A0 != -1) {
        dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
      }
      long long v13 = &v41;
      if (v42 < 0) {
        long long v13 = (long long *)v41;
      }
      long long v14 = v39;
      if (v40 < 0) {
        long long v14 = (void **)v39[0];
      }
      uint64_t v15 = v35;
      if (v36 < 0) {
        uint64_t v15 = (void **)v35[0];
      }
      int v16 = &v33;
      if (v34 < 0) {
        int v16 = (long long *)v33;
      }
      int v43 = 136315906;
      long long v44 = v13;
      __int16 v45 = 2080;
      long long v46 = v14;
      __int16 v47 = 2080;
      long long v48 = v15;
      __int16 v49 = 2080;
      long long v50 = v16;
      uint64_t v17 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::issueUserNotificationForIndoorOutdoorIfAllowed(CLMotionStateMediator_Type::IndoorOutdoorUpdate, CLMotionStateMediator_Type::IndoorOutdoorUpdate)", "%s\n", v17);
      if (v17 != (char *)buf) {
        free(v17);
      }
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3321888768;
    block[2] = sub_10069F270;
    block[3] = &unk_1022C2540;
    if (SHIBYTE(v38) < 0)
    {
      sub_1000DC48C(&v19, (void *)v37, *((unint64_t *)&v37 + 1));
    }
    else
    {
      long long v19 = v37;
      uint64_t v20 = v38;
    }
    if (SHIBYTE(v42) < 0)
    {
      sub_1000DC48C(&v21, (void *)v41, *((unint64_t *)&v41 + 1));
    }
    else
    {
      long long v21 = v41;
      uint64_t v22 = v42;
    }
    if (SHIBYTE(v40) < 0)
    {
      sub_1000DC48C(&v23, v39[0], (unint64_t)v39[1]);
    }
    else
    {
      long long v23 = *(_OWORD *)v39;
      uint64_t v24 = v40;
    }
    if (SHIBYTE(v32) < 0)
    {
      sub_1000DC48C(&v25, v31[0], (unint64_t)v31[1]);
    }
    else
    {
      long long v25 = *(_OWORD *)v31;
      uint64_t v26 = v32;
    }
    if (SHIBYTE(v36) < 0)
    {
      sub_1000DC48C(&v27, v35[0], (unint64_t)v35[1]);
    }
    else
    {
      long long v27 = *(_OWORD *)v35;
      uint64_t v28 = v36;
    }
    if (SHIBYTE(v34) < 0)
    {
      sub_1000DC48C(&__p, (void *)v33, *((unint64_t *)&v33 + 1));
    }
    else
    {
      long long __p = v33;
      uint64_t v30 = v34;
    }
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    if (SHIBYTE(v30) < 0) {
      operator delete((void *)__p);
    }
    if (SHIBYTE(v28) < 0) {
      operator delete((void *)v27);
    }
    if (SHIBYTE(v26) < 0) {
      operator delete((void *)v25);
    }
    if (SHIBYTE(v24) < 0) {
      operator delete((void *)v23);
    }
    if (SHIBYTE(v22) < 0) {
      operator delete((void *)v21);
    }
    if (SHIBYTE(v20) < 0) {
      operator delete((void *)v19);
    }
    if (SHIBYTE(v32) < 0) {
      operator delete(v31[0]);
    }
    if (SHIBYTE(v34) < 0) {
      operator delete((void *)v33);
    }
    if (SHIBYTE(v36) < 0) {
      operator delete(v35[0]);
    }
    if (SHIBYTE(v38) < 0) {
      operator delete((void *)v37);
    }
    if (SHIBYTE(v40) < 0) {
      operator delete(v39[0]);
    }
    if (SHIBYTE(v42) < 0) {
      operator delete((void *)v41);
    }
  }
}

void sub_10069F148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,void *a63)
{
  if (a38 < 0) {
    operator delete(__p);
  }
  if (a44 < 0) {
    operator delete(a39);
  }
  if (a50 < 0) {
    operator delete(a45);
  }
  if (a56 < 0) {
    operator delete(a51);
  }
  if (a62 < 0) {
    operator delete(a57);
  }
  if (a68 < 0) {
    operator delete(a63);
  }
  _Unwind_Resume(a1);
}

void sub_10069F268(uint64_t a1, uint64_t a2, int a3)
{
}

void sub_10069F270(char *a1)
{
  uint64_t v1 = a1 + 32;
  if (a1[55] < 0) {
    uint64_t v1 = (void *)*v1;
  }
  uint64_t v2 = a1 + 56;
  if (a1[79] < 0) {
    uint64_t v2 = (void *)*v2;
  }
  __int16 v3 = a1 + 80;
  if (a1[103] < 0) {
    __int16 v3 = (void *)*v3;
  }
  uint64_t v4 = a1 + 104;
  if (a1[127] < 0) {
    uint64_t v4 = (void *)*v4;
  }
  uint64_t v5 = a1 + 128;
  if (a1[151] < 0) {
    uint64_t v5 = (void *)*v5;
  }
  NSInteger v6 = a1 + 152;
  if (a1[175] < 0) {
    NSInteger v6 = (void *)*v6;
  }
  CFStringRef v7 = CFStringCreateWithFormat(0, 0, @"Old indoor/outdoor state\n%s, %s, %s New\n%s, %s, %s", v1, v2, v3, v4, v5, v6);
  CFUserNotificationDisplayNotice(0.0, 0, 0, 0, 0, @"IndoorOutdoorState", v7, 0);

  CFRelease(v7);
}

unsigned char *sub_10069F354(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 55) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 32), *(void **)(a2 + 32), *(void *)(a2 + 40));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v4;
  }
  if (*(char *)(a2 + 79) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 56), *(void **)(a2 + 56), *(void *)(a2 + 64));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = v5;
  }
  if (*(char *)(a2 + 103) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 80), *(void **)(a2 + 80), *(void *)(a2 + 88));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = v6;
  }
  if (*(char *)(a2 + 127) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 104), *(void **)(a2 + 104), *(void *)(a2 + 112));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = v7;
  }
  if (*(char *)(a2 + 151) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 128), *(void **)(a2 + 128), *(void *)(a2 + 136));
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 128);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = v8;
  }
  id result = (unsigned char *)(a1 + 152);
  if (*(char *)(a2 + 175) < 0) {
    return sub_1000DC48C(result, *(void **)(a2 + 152), *(void *)(a2 + 160));
  }
  long long v10 = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_OWORD *)id result = v10;
  return result;
}

void sub_10069F4AC(_Unwind_Exception *exception_object)
{
  if (v2[151] < 0) {
    operator delete(*v6);
  }
  if (v2[127] < 0) {
    operator delete(*v5);
  }
  if (v2[103] < 0) {
    operator delete(*v4);
  }
  if (v2[79] < 0) {
    operator delete(*v3);
  }
  if (v2[55] < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10069F528(uint64_t a1)
{
  if (*(char *)(a1 + 175) < 0) {
    operator delete(*(void **)(a1 + 152));
  }
  if (*(char *)(a1 + 151) < 0) {
    operator delete(*(void **)(a1 + 128));
  }
  if (*(char *)(a1 + 127) < 0) {
    operator delete(*(void **)(a1 + 104));
  }
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  if (*(char *)(a1 + 55) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 32);
    operator delete(v2);
  }
}

void sub_10069F5C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uuid_copy((unsigned __int8 *)(a1 + 9712), (const unsigned __int8 *)(a2 + 96));
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  long long v6 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Did Begin Workout Session", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    __int16 v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionStateMediator::onDidBeginWorkoutSession(const CLMotionStateMediator_Type::WorkoutEvent &, const CLMotionStateMediator_Type::WorkoutSessionOverview &)", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
  sub_10069CDB4(a1, a2, a3);
  sub_10069B224(a1, a2);
  long long v7 = *(_OWORD *)(a2 + 208);
  v13[8] = *(_OWORD *)(a2 + 192);
  v13[9] = v7;
  uint64_t v14 = *(void *)(a2 + 224);
  long long v8 = *(_OWORD *)(a2 + 144);
  v13[4] = *(_OWORD *)(a2 + 128);
  v13[5] = v8;
  long long v9 = *(_OWORD *)(a2 + 176);
  v13[6] = *(_OWORD *)(a2 + 160);
  void v13[7] = v9;
  long long v10 = *(_OWORD *)(a2 + 80);
  v13[0] = *(_OWORD *)(a2 + 64);
  v13[1] = v10;
  long long v11 = *(_OWORD *)(a2 + 112);
  v13[2] = *(_OWORD *)(a2 + 96);
  void v13[3] = v11;
  sub_10069F7DC(a1, (uint64_t)v13);
  sub_10069F9D0(a1);
}

id sub_10069F7DC(uint64_t a1, uint64_t a2)
{
  sub_100E60DB8(a1 + 6624, a2);
  double v4 = sub_1014452D8(*(void *)(a2 + 48), *(void *)(a2 + 64));
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  long long v5 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)int32x2_t buf = 134349056;
    double v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#gfc started workout, starting geofence with radius %{public}f", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::overrideActivity(CLMotionStateMediator_Type::WorkoutSettings)", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  id result = (id)sub_10010145C();
  if (result)
  {
    if (v4 != -1.0) {
      return [*(id *)(a1 + 10152) startGeoFenceWithRadius:v4];
    }
  }
  return result;
}

void sub_10069F9D0(uint64_t a1)
{
  if (*(void *)(a1 + 10208)) {
    sub_1006A05B8((uint64_t *)(a1 + 10208), 0);
  }
  operator new();
}

void sub_10069FB20(_Unwind_Exception *exception_object)
{
}

void sub_10069FB54(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_10069FB60(uint64_t a1, uint64_t a2)
{
}

void sub_10069FB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  long long v6 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Did End Workout Session", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionStateMediator::onDidEndWorkoutSession(const CLMotionStateMediator_Type::WorkoutEvent &, const CLMotionStateMediator_Type::WorkoutSessionOverview &)", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  sub_10069FE10(a1, *(double *)(a2 + 8));
  if (*(void *)(a2 + 16) == 15)
  {
    sub_100054BCC(a1 + 136, (uint64_t)buf);
    sub_10069FFDC(a1, (uint64_t)+[CMWorkout CMWorkoutTypeFromCLMotionActivityType:*(unsigned int *)buf], *(double *)(a2 + 8));
  }
  sub_10069CDB4(a1, a2, a3);
  sub_10069B224(a1, a2);
  uint64_t v12 = 0;
  *(_OWORD *)long long __p = 0u;
  memset(v11, 0, sizeof(v11));
  *(_OWORD *)(a1 + 8808) = 0u;
  long long v7 = (void **)(a1 + 8824);
  *(_OWORD *)int32x2_t buf = 0u;
  if (*(char *)(a1 + 8847) < 0) {
    operator delete(*v7);
  }
  *(_OWORD *)long long v7 = *(_OWORD *)__p;
  *(void *)(a1 + 8840) = *(void *)&v11[0];
  BYTE7(v11[0]) = 0;
  LOBYTE(__p[0]) = 0;
  sub_1006ACE98(a1 + 8848, (uint64_t)v11 + 8);
  sub_100663B8C((void *)v11 + 1);
  if (SBYTE7(v11[0]) < 0) {
    operator delete(__p[0]);
  }
  if (*(void *)(a1 + 10208)) {
    sub_1006A05B8((uint64_t *)(a1 + 10208), 0);
  }
}

uint64_t sub_10069FE10(uint64_t a1, double a2)
{
  uint64_t result = sub_100054BBC((_DWORD *)(a1 + 136));
  if (result)
  {
    sub_100E60ED4((void *)(a1 + 6624), a2);
    uint64_t result = sub_10010145C();
    if (result)
    {
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      long long v5 = qword_1024191C8;
      if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)int32x2_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "#gfc stopped workout, stopping geofence", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C26A8);
        }
        long long v6 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::clearActivityOverride(CFAbsoluteTime)", "%s\n", v6);
        if (v6 != (char *)buf) {
          free(v6);
        }
      }
      return (uint64_t)[*(id *)(a1 + 10152) stopGeoFence];
    }
  }
  return result;
}

void sub_10069FFDC(uint64_t a1, uint64_t a2, double a3)
{
  id v6 = [*(id *)(a1 + 664) objectForKeyedSubscript:&off_1023929C0];
  [v6 unionSet:[*(id *)(a1 + 664) objectForKeyedSubscript:+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a2)]];
  if (v6)
  {
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    id v7 = [v6 countByEnumeratingWithState:&v24 objects:v40 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v25;
      double v10 = 0.0;
      do
      {
        long long v11 = 0;
        do
        {
          if (*(void *)v25 != v9) {
            objc_enumerationMutation(v6);
          }
          uint64_t v12 = *(void **)(*((void *)&v24 + 1) + 8 * (void)v11);
          double v13 = sub_1000D3E50();
          unsigned int v14 = [v12 syncget_prepareSessionEndForSessionType:a2 atEndTime:a3];
          double v15 = sub_1000D3E50();
          if (qword_1024191C0 != -1) {
            dispatch_once(&qword_1024191C0, &stru_1022C26A8);
          }
          double v16 = v15 - v13;
          uint64_t v17 = qword_1024191C8;
          if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)int32x2_t buf = 67109632;
            int v35 = a2;
            __int16 v36 = 2048;
            double v37 = v16;
            __int16 v38 = 1024;
            unsigned int v39 = v14;
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "PrepareSessionEnd, sent client end for session, %d, duration (s), %f, success, %d", buf, 0x18u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1024191C0 != -1) {
              dispatch_once(&qword_1024191C0, &stru_1022C26A8);
            }
            int v28 = 67109632;
            int v29 = a2;
            __int16 v30 = 2048;
            double v31 = v16;
            __int16 v32 = 1024;
            unsigned int v33 = v14;
            long long v19 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::prepareForSessionEnd(CMWorkoutType, CFAbsoluteTime)", "%s\n", v19);
            if (v19 != (char *)buf) {
              free(v19);
            }
          }
          if (v16 > 0.005)
          {
            if (qword_1024191C0 != -1) {
              dispatch_once(&qword_1024191C0, &stru_1022C26A8);
            }
            __int16 v18 = qword_1024191C8;
            if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)int32x2_t buf = 67109632;
              int v35 = a2;
              __int16 v36 = 2048;
              double v37 = v16;
              __int16 v38 = 1024;
              unsigned int v39 = v14;
              _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "PrepareSessionEnd, client response duration exceeded 5 ms threshold, sessionType, %d, duration (s), %f, success, %d", buf, 0x18u);
            }
            if (sub_10013D1A0(115, 0))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1024191C0 != -1) {
                dispatch_once(&qword_1024191C0, &stru_1022C26A8);
              }
              int v28 = 67109632;
              int v29 = a2;
              __int16 v30 = 2048;
              double v31 = v16;
              __int16 v32 = 1024;
              unsigned int v33 = v14;
              uint64_t v20 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 0, "void CLMotionStateMediator::prepareForSessionEnd(CMWorkoutType, CFAbsoluteTime)", "%s\n", v20);
              if (v20 != (char *)buf) {
                free(v20);
              }
            }
          }
          double v10 = v10 + v16;
          long long v11 = (char *)v11 + 1;
        }
        while (v8 != v11);
        id v21 = [v6 countByEnumeratingWithState:&v24 objects:v40 count:16];
        id v8 = v21;
      }
      while (v21);
      if (v10 > 0.015)
      {
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C26A8);
        }
        uint64_t v22 = qword_1024191C8;
        if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)int32x2_t buf = 67109376;
          int v35 = a2;
          __int16 v36 = 2048;
          double v37 = v10;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "PrepareSessionEnd, total client response duration exceeded 15 ms threshold, sessionType, %d, total duration (s), %f", buf, 0x12u);
        }
        if (sub_10013D1A0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024191C0 != -1) {
            dispatch_once(&qword_1024191C0, &stru_1022C26A8);
          }
          int v28 = 67109376;
          int v29 = a2;
          __int16 v30 = 2048;
          double v31 = v10;
          long long v23 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "void CLMotionStateMediator::prepareForSessionEnd(CMWorkoutType, CFAbsoluteTime)", "%s\n", v23);
          if (v23 != (char *)buf) {
            free(v23);
          }
        }
      }
    }
  }
}

uint64_t sub_1006A05B8(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_10115FF14();
    operator delete();
  }
  return result;
}

void sub_1006A0608(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1006A0610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  id v6 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Did Set Workout Type During Workout Session", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    *(_WORD *)uuid_t dst = 0;
    long long v25 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionStateMediator::onDidSetCurrentWorkoutType(const CLMotionStateMediator_Type::WorkoutEvent &, const CLMotionStateMediator_Type::WorkoutSessionOverview &)", "%s\n", v25);
    if (v25 != (char *)buf) {
      free(v25);
    }
  }
  sub_10069CDB4(a1, a2, a3);
  sub_10069B224(a1, a2);
  memset(dst, 0, sizeof(dst));
  memset(uu2, 0, sizeof(uu2));
  long long v7 = *(_OWORD *)(a1 + 7648);
  long long v8 = *(_OWORD *)(a1 + 7680);
  v36[8] = *(_OWORD *)(a1 + 7664);
  v36[9] = v8;
  uint64_t v37 = *(void *)(a1 + 7696);
  long long v9 = *(_OWORD *)(a1 + 7584);
  long long v10 = *(_OWORD *)(a1 + 7616);
  v36[4] = *(_OWORD *)(a1 + 7600);
  v36[5] = v10;
  v36[6] = *(_OWORD *)(a1 + 7632);
  v36[7] = v7;
  long long v11 = *(_OWORD *)(a1 + 7520);
  long long v12 = *(_OWORD *)(a1 + 7552);
  v36[0] = *(_OWORD *)(a1 + 7536);
  v36[1] = v12;
  _OWORD v36[2] = *(_OWORD *)(a1 + 7568);
  void v36[3] = v9;
  long long v13 = *(_OWORD *)(a1 + 7488);
  *(_OWORD *)int32x2_t buf = *(_OWORD *)(a1 + 7472);
  long long v33 = v13;
  long long v34 = *(_OWORD *)(a1 + 7504);
  long long v35 = v11;
  uuid_copy(dst, (const unsigned __int8 *)v36);
  uuid_copy(uu2, (const unsigned __int8 *)(a2 + 64));
  if (uuid_compare(dst, uu2))
  {
    uint64_t v14 = *(void *)(a1 + 8712);
    if (v14 && *(unsigned char *)(v14 + 113) && *(void *)(a2 + 112) == 33)
    {
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      double v15 = qword_1024191C8;
      if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v16 = *(void *)(a1 + 7584);
        *(_DWORD *)int32x2_t buf = 134217984;
        *(void *)&uint8_t buf[4] = v16;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "ignore client transistion, remaining in workout type: %ld", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C26A8);
        }
        uint64_t v17 = *(void *)(a1 + 7584);
        int v28 = 134217984;
        uint64_t v29 = v17;
        __int16 v18 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionStateMediator::onDidSetCurrentWorkoutType(const CLMotionStateMediator_Type::WorkoutEvent &, const CLMotionStateMediator_Type::WorkoutSessionOverview &)", "%s\n", v18);
        if (v18 != (char *)buf) {
          free(v18);
        }
      }
    }
    else
    {
      double Current = CFAbsoluteTimeGetCurrent();
      sub_10069FE10(a1, Current);
      long long v20 = *(_OWORD *)(a2 + 208);
      v26[8] = *(_OWORD *)(a2 + 192);
      v26[9] = v20;
      uint64_t v27 = *(void *)(a2 + 224);
      long long v21 = *(_OWORD *)(a2 + 144);
      v26[4] = *(_OWORD *)(a2 + 128);
      v26[5] = v21;
      long long v22 = *(_OWORD *)(a2 + 176);
      v26[6] = *(_OWORD *)(a2 + 160);
      v26[7] = v22;
      long long v23 = *(_OWORD *)(a2 + 80);
      v26[0] = *(_OWORD *)(a2 + 64);
      v26[1] = v23;
      long long v24 = *(_OWORD *)(a2 + 112);
      v26[2] = *(_OWORD *)(a2 + 96);
      v26[3] = v24;
      sub_10069F7DC(a1, (uint64_t)v26);
    }
  }
  sub_10069F9D0(a1);
}

void sub_1006A0A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1006A0A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  id v6 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Did manual pause workout session", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionStateMediator::onWorkoutSessionManualPause(const CLMotionStateMediator_Type::WorkoutEvent &, const CLMotionStateMediator_Type::WorkoutSessionOverview &)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  uint64_t v7 = *(void *)(a1 + 10208);
  if (v7) {
    sub_101160478(v7, *(double *)(a2 + 24));
  }
  sub_10069CDB4(a1, a2, a3);
  sub_10069B224(a1, a2);
  return sub_10069FE10(a1, *(double *)(a2 + 8));
}

uint64_t sub_1006A0C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006A0A28(a1 - 120, a2, a3);
}

id sub_1006A0C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  id v6 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Did manual resume workout session", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    uint64_t v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionStateMediator::onWorkoutSessionManualResume(const CLMotionStateMediator_Type::WorkoutEvent &, const CLMotionStateMediator_Type::WorkoutSessionOverview &)", "%s\n", v14);
    if (v14 != (char *)buf) {
      free(v14);
    }
  }
  uint64_t v7 = *(void *)(a1 + 10208);
  if (v7) {
    sub_101160748(v7, *(double *)(a2 + 24));
  }
  sub_10069CDB4(a1, a2, a3);
  sub_10069B224(a1, a2);
  long long v8 = *(_OWORD *)(a2 + 208);
  v15[8] = *(_OWORD *)(a2 + 192);
  v15[9] = v8;
  uint64_t v16 = *(void *)(a2 + 224);
  long long v9 = *(_OWORD *)(a2 + 144);
  v15[4] = *(_OWORD *)(a2 + 128);
  v15[5] = v9;
  long long v10 = *(_OWORD *)(a2 + 176);
  v15[6] = *(_OWORD *)(a2 + 160);
  v15[7] = v10;
  long long v11 = *(_OWORD *)(a2 + 80);
  v15[0] = *(_OWORD *)(a2 + 64);
  v15[1] = v11;
  long long v12 = *(_OWORD *)(a2 + 112);
  v15[2] = *(_OWORD *)(a2 + 96);
  v15[3] = v12;
  return sub_10069F7DC(a1, (uint64_t)v15);
}

id sub_1006A0E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1006A0C0C(a1 - 120, a2, a3);
}

id sub_1006A0E20(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  sub_100054BCC(a1 + 136, (uint64_t)buf);
  id v8 = +[CMWorkout CMWorkoutTypeFromCLMotionActivityType:*(unsigned int *)buf];
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  long long v10 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)a2;
    uint64_t v12 = *(void *)(a2 + 112);
    *(_DWORD *)int32x2_t buf = 134219008;
    uint64_t v35 = v11;
    __int16 v36 = 2048;
    uint64_t v37 = v12;
    __int16 v38 = 2048;
    id v39 = v8;
    __int16 v40 = 2048;
    double v41 = a4;
    __int16 v42 = 2048;
    CFAbsoluteTime v43 = Current;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Detected change in activity during workout session, startTime %f, newType, %ld, oldType, %ld, previousEndTime, %f, now, %f", buf, 0x34u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    uint64_t v19 = *(void *)a2;
    uint64_t v20 = *(void *)(a2 + 112);
    int v24 = 134219008;
    uint64_t v25 = v19;
    __int16 v26 = 2048;
    uint64_t v27 = v20;
    __int16 v28 = 2048;
    id v29 = v8;
    __int16 v30 = 2048;
    double v31 = a4;
    __int16 v32 = 2048;
    CFAbsoluteTime v33 = Current;
    long long v21 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionStateMediator::onWorkoutSessionDetectedChangeInActivity(const CLMotionStateMediator_Type::WorkoutEvent &, const CLMotionStateMediator_Type::WorkoutSessionOverview &, CFAbsoluteTime)", "%s\n", v21);
    if (v21 != (char *)buf) {
      free(v21);
    }
  }
  sub_10069CDB4(a1, a2, a3);
  sub_10069B224(a1, a2);
  sub_10069FE10(a1, a4);
  long long v13 = *(_OWORD *)(a2 + 208);
  v22[8] = *(_OWORD *)(a2 + 192);
  v22[9] = v13;
  uint64_t v23 = *(void *)(a2 + 224);
  long long v14 = *(_OWORD *)(a2 + 144);
  v22[4] = *(_OWORD *)(a2 + 128);
  v22[5] = v14;
  long long v15 = *(_OWORD *)(a2 + 176);
  v22[6] = *(_OWORD *)(a2 + 160);
  v22[7] = v15;
  long long v16 = *(_OWORD *)(a2 + 80);
  v22[0] = *(_OWORD *)(a2 + 64);
  v22[1] = v16;
  long long v17 = *(_OWORD *)(a2 + 112);
  v22[2] = *(_OWORD *)(a2 + 96);
  v22[3] = v17;
  return sub_10069F7DC(a1, (uint64_t)v22);
}

id sub_1006A10DC(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return sub_1006A0E20(a1 - 120, a2, a3, a4);
}

uint64_t sub_1006A10E4(uint64_t result, int a2)
{
  uint64_t v2 = result;
  if (a2)
  {
    if (*(int *)(result + 8320) <= 0)
    {
      sub_10010F274((uint64_t)v7);
      sub_100132EFC(v8, (uint64_t)"Workout Series Predictor", 24);
      std::stringbuf::str();
      sub_100EBBFD8(v2 + 8312, (uint64_t *)&__p);
      if (v6 < 0) {
        operator delete(__p);
      }
      *(void *)((char *)v7
      v8[0] = v3;
      if (v9 < 0) {
        operator delete((void *)v8[9]);
      }
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      return std::ios::~ios();
    }
  }
  else if (*(int *)(result + 8320) >= 1)
  {
    uint64_t v4 = result + 8312;
    return sub_100EBC6AC(v4);
  }
  return result;
}

void sub_1006A12C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_1006A12F4(uint64_t a1, int a2)
{
  return sub_1006A10E4(a1 - 120, a2);
}

uint64_t sub_1006A12FC(uint64_t result, uint64_t a2)
{
  switch(*(void *)(a2 + 16))
  {
    case 0:
      *(void *)(result + 8952) = 0;
      *(void *)(result + 9008) = 0;
      goto LABEL_4;
    case 1:
    case 0xALL:
      *(unsigned char *)(result + 10320) = 0;
      break;
    case 4:
      ++*(_DWORD *)(result + 8952);
      *(void *)(result + 9008) = *(void *)(a2 + 24);
      break;
    case 8:
LABEL_4:
      *(unsigned char *)(result + 10320) = 1;
      break;
    case 0xCLL:
      ++*(_DWORD *)(result + 8956);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006A13A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000A6958();
  uint64_t v7 = *(void *)(a2 + 112);
  sub_1004D31B8(v3, "kMostRecentWorkoutEventWorkoutType", &v7);
  uint64_t v4 = sub_1000A6958();
  uint64_t v7 = *(void *)(a2 + 120);
  sub_1004D31B8(v4, "kMostRecentWorkoutEventLocationType", &v7);
  uint64_t v5 = *(void *)sub_1000A6958();
  return (*(uint64_t (**)(void))(v5 + 944))();
}

uint64_t sub_1006A1444(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1006B4EB0(result);
    operator delete();
  }
  return result;
}

void sub_1006A1494(uint64_t a1, uint64_t *a2)
{
  int8x16_t v4 = (int8x16_t)vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(*(float64x2_t *)(a2 + 1)), *(float64x2_t *)(a2 + 3));
  int8x16_t v22 = vextq_s8(v4, v4, 4uLL);
  float32x4_t v8 = *(float32x4_t *)(a2 + 5);
  uint64_t v5 = a2[7];
  sub_100B9BEAC((float32x4_t *)&v22, v8);
  v18[0] = v22;
  v18[1] = v8;
  uint64_t v6 = *a2;
  uint64_t v19 = v5;
  uint64_t v20 = v6;
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  sub_100E5DA64(a1 + 6624, (uint64_t)v18);
  uint64_t v7 = *(void *)(a1 + 8248);
  if (v7)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0x80000000800000;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0x80000000800000;
    uint64_t v16 = 0x80000000800000;
    int v17 = -8388609;
    if (sub_10128B3C0(v7, (float *)v18, (uint64_t)v9))
    {
      sub_1006A1580(a1 + 5568, (uint64_t)v9);
      sub_1006A1580(a1 + 2920, (uint64_t)v9);
    }
  }
}

void sub_1006A1580(uint64_t a1, uint64_t a2)
{
  double v17 = *(double *)a2;
  long long v18 = *(_OWORD *)(a2 + 8);
  uint64_t v19 = *(void *)(a2 + 24);
  long long v3 = *(_OWORD *)(a2 + 48);
  long long v20 = *(_OWORD *)(a2 + 32);
  long long v21 = v3;
  uint64_t v22 = *(void *)(a2 + 64);
  uint64_t v4 = *(void *)(a1 + 192);
  if (v4) {
    (*(void (**)(uint64_t, double *))(*(void *)v4 + 48))(v4, &v17);
  }
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5)
  {
    unint64_t v6 = v5 + *(void *)(a1 + 48) - 1;
    uint64_t v7 = *(void ***)(a1 + 24);
    double v8 = *((double *)v7[v6 / 0x38] + 9 * (v6 % 0x38));
    if (v8 > v17)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(void *)(a1 + 56) = 0;
      unint64_t v10 = v9 - (void)v7;
      if (v10 >= 0x11)
      {
        do
        {
          operator delete(*v7);
          uint64_t v11 = *(void *)(a1 + 32);
          uint64_t v7 = (void **)(*(void *)(a1 + 24) + 8);
          *(void *)(a1 + 24) = v7;
          unint64_t v10 = v11 - (void)v7;
        }
        while (v10 > 0x10);
      }
      if (v10 >> 3 == 1)
      {
        uint64_t v12 = 28;
      }
      else
      {
        if (v10 >> 3 != 2)
        {
LABEL_12:
          if (qword_102418FD0 != -1) {
            dispatch_once(&qword_102418FD0, &stru_1022C2688);
          }
          uint64_t v13 = qword_102418FD8;
          if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            double v28 = v17;
            __int16 v29 = 2048;
            double v30 = v8;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "time rollback on add, newItemTime, %f, lastItemTime, %f", buf, 0x16u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102418FD0 != -1) {
              dispatch_once(&qword_102418FD0, &stru_1022C2688);
            }
            int v23 = 134218240;
            double v24 = v17;
            __int16 v25 = 2048;
            double v26 = v8;
            uint64_t v16 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLSourceBuffer<CLWorkoutPredictorTurnDetector::Turn>::add(const T &) [T = CLWorkoutPredictorTurnDetector::Turn]", "%s\n", v16);
            if (v16 != (char *)buf) {
              free(v16);
            }
          }
          goto LABEL_17;
        }
        uint64_t v12 = 56;
      }
      *(void *)(a1 + 48) = v12;
      goto LABEL_12;
    }
  }
LABEL_17:
  sub_1006B504C((void *)(a1 + 16), (uint64_t)&v17);
  uint64_t v14 = v19;
  *(double *)(a1 + 96) = v17;
  *(_OWORD *)(a1 + 104) = v18;
  *(void *)(a1 + 120) = v14;
  long long v15 = v21;
  *(_OWORD *)(a1 + 128) = v20;
  *(_OWORD *)(a1 + 144) = v15;
  *(void *)(a1 + 160) = v22;
}

uint64_t sub_1006A18A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  unint64_t v10 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)int32x2_t buf = 134349824;
    uint64_t v45 = a2;
    __int16 v46 = 2050;
    uint64_t v47 = a3;
    __int16 v48 = 2050;
    uint64_t v49 = a4;
    __int16 v50 = 2050;
    double v51 = a5;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Background Escalation Manager, ActivityAction : %{public}ld, ActivityReason : %{public}ld, workoutType : %{public}ld, startTime : %{public}f", buf, 0x2Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    *(_DWORD *)double v24 = 134349824;
    *(void *)&v24[4] = a2;
    *(_WORD *)&v24[12] = 2050;
    *(void *)&v24[14] = a3;
    *(_WORD *)&v24[22] = 2050;
    uint64_t v25 = a4;
    *(_WORD *)double v26 = 2050;
    *(double *)&v26[2] = a5;
    long long v21 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onBackgroundEscalationManagerUpdate(CFAbsoluteTime, CMActivityAction, CMActivityReason, CMWorkoutType)", "%s\n", v21);
    if (v21 != (char *)buf) {
      free(v21);
    }
  }
  long long v41 = 0u;
  long long v42 = 0u;
  long long v40 = 0u;
  uint64_t v43 = 0;
  long long v39 = 0u;
  long long v38 = 0u;
  long long v37 = 0u;
  long long v36 = 0u;
  long long v35 = 0u;
  long long v34 = 0u;
  long long v33 = 0u;
  long long v32 = 0u;
  long long v31 = 0u;
  long long v30 = 0u;
  long long v29 = 0u;
  long long v28 = 0u;
  long long v27 = 0u;
  *(double *)double v24 = a5;
  *(void *)&v24[8] = 0;
  *(void *)&v24[16] = a2;
  uint64_t v25 = a3;
  *(void *)double v26 = a4;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v23 = _Q0;
  *(_OWORD *)&v26[8] = _Q0;
  if (a2 == 1)
  {
    sub_10069DC80((uint64_t)a1);
    uint64_t v16 = a1[826];
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v17 = *(void *)(v16 + 16);
    long long v27 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    long long v38 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    uint64_t v43 = 0;
    *(double *)double v24 = a5;
    *(_OWORD *)&v24[8] = xmmword_101D07560;
    uint64_t v25 = a3;
    *(void *)double v26 = a4;
    *(void *)&v26[8] = v18;
    *(void *)&v26[16] = v17;
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    uint64_t v19 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)int32x2_t buf = 134349312;
      uint64_t v45 = v18;
      __int16 v46 = 2050;
      uint64_t v47 = v17;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Background Escalation Manager, Appending to ActivityAction : recoveryStart : %{public}f, recoveryEnd : %{public}f", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      uint64_t v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onBackgroundEscalationManagerUpdate(CFAbsoluteTime, CMActivityAction, CMActivityReason, CMWorkoutType)", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
    }
  }
  else if (!a2)
  {
    sub_10069DF7C((uint64_t)a1);
  }
  *(_DWORD *)int32x2_t buf = 4;
  uint64_t result = (*(uint64_t (**)(void *, uint8_t *, unsigned char *, uint64_t, uint64_t, void))(*a1 + 152))(a1, buf, v24, 1, 0xFFFFFFFFLL, 0);
  if (a2 == 1) {
    *(_OWORD *)(a1[826] + 8) = v23;
  }
  return result;
}

void sub_1006A1D38(uint64_t a1, int a2, unsigned __int8 *a3)
{
  switch(a2)
  {
    case 0:
      uuid_copy(a3 + 96, (const unsigned __int8 *)(a1 + 9712));
      long long v5 = *((_OWORD *)a3 + 13);
      *(_OWORD *)&v71[144] = *((_OWORD *)a3 + 12);
      *(_OWORD *)&v71[160] = v5;
      *(void *)&v71[176] = *((void *)a3 + 28);
      long long v6 = *((_OWORD *)a3 + 9);
      *(_OWORD *)&v71[80] = *((_OWORD *)a3 + 8);
      *(_OWORD *)&v71[96] = v6;
      long long v7 = *((_OWORD *)a3 + 11);
      *(_OWORD *)&v71[112] = *((_OWORD *)a3 + 10);
      *(_OWORD *)&v71[128] = v7;
      long long v8 = *((_OWORD *)a3 + 5);
      *(_OWORD *)&v71[16] = *((_OWORD *)a3 + 4);
      *(_OWORD *)&v71[32] = v8;
      long long v9 = *((_OWORD *)a3 + 7);
      *(_OWORD *)&v71[48] = *((_OWORD *)a3 + 6);
      *(_OWORD *)&v71[64] = v9;
      long long v10 = *((_OWORD *)a3 + 1);
      *(_OWORD *)int32x2_t buf = *(_OWORD *)a3;
      long long v69 = v10;
      long long v11 = *((_OWORD *)a3 + 3);
      long long v70 = *((_OWORD *)a3 + 2);
      *(_OWORD *)long long v71 = v11;
      id v12 = (id)sub_10101439C((uint64_t)buf);
      if (v12 == 2)
      {
        sub_100B5C228(a1 + 136);
        if (*(void *)&v71[64] == 37 || *(void *)&v71[64] == 23) {
          id v12 = [*(id *)(*(void *)(a1 + 10224) + 16) unregister:*(void *)(*(void *)(a1 + 10224) + 8) forNotification:1];
        }
      }
      else if (v12 == 1)
      {
        sub_100B5C21C(a1 + 136, (int)+[CMWorkout CLMotionActivityTypeFromCMWorkoutType:*(void *)&v71[64]], &v71[16]);
        if (*(void *)&v71[64] == 37 || *(void *)&v71[64] == 23) {
          id v12 = [*(id *)(*(void *)(a1 + 10224) + 16) register:*(void *)(*(void *)(a1 + 10224) + 8) forNotification:1 registrationInfo:0];
        }
      }
      *(void *)(a1 + 9704) = *(void *)&v71[176];
      long long v44 = *(_OWORD *)&v71[160];
      *(_OWORD *)(a1 + 9672) = *(_OWORD *)&v71[144];
      *(_OWORD *)(a1 + 9688) = v44;
      long long v45 = *(_OWORD *)&v71[96];
      *(_OWORD *)(a1 + 9608) = *(_OWORD *)&v71[80];
      *(_OWORD *)(a1 + 9624) = v45;
      long long v46 = *(_OWORD *)&v71[128];
      *(_OWORD *)(a1 + 9640) = *(_OWORD *)&v71[112];
      *(_OWORD *)(a1 + 9656) = v46;
      long long v47 = *(_OWORD *)&v71[32];
      *(_OWORD *)(a1 + 9544) = *(_OWORD *)&v71[16];
      *(_OWORD *)(a1 + 9560) = v47;
      long long v48 = *(_OWORD *)&v71[64];
      *(_OWORD *)(a1 + 9576) = *(_OWORD *)&v71[48];
      *(_OWORD *)(a1 + 9592) = v48;
      long long v49 = v69;
      *(_OWORD *)(a1 + 9480) = *(_OWORD *)buf;
      *(_OWORD *)(a1 + 9496) = v49;
      long long v50 = *(_OWORD *)v71;
      *(_OWORD *)(a1 + 9512) = v70;
      *(_OWORD *)(a1 + 9528) = v50;
      unint64_t v51 = v69;
      if (!(void)v69)
      {
        v80[11] = *(_OWORD *)&v71[128];
        v80[12] = *(_OWORD *)&v71[144];
        v80[13] = *(_OWORD *)&v71[160];
        v80[7] = *(_OWORD *)&v71[64];
        v80[8] = *(_OWORD *)&v71[80];
        v80[9] = *(_OWORD *)&v71[96];
        v80[10] = *(_OWORD *)&v71[112];
        v80[3] = *(_OWORD *)v71;
        v80[4] = *(_OWORD *)&v71[16];
        v80[5] = *(_OWORD *)&v71[32];
        v80[6] = *(_OWORD *)&v71[48];
        v80[0] = *(_OWORD *)buf;
        v80[1] = v69;
        uint64_t v81 = *(void *)&v71[176];
        v80[2] = v70;
        sub_1006A13A8((uint64_t)v12, (uint64_t)v80);
        sub_10069DC80(a1);
        unint64_t v51 = v69;
      }
      if (v51 <= 1) {
        sub_100F6F34C(*(void *)(a1 + 6608), v51);
      }
      v78[11] = *(_OWORD *)&v71[128];
      v78[12] = *(_OWORD *)&v71[144];
      v78[13] = *(_OWORD *)&v71[160];
      v78[7] = *(_OWORD *)&v71[64];
      v78[8] = *(_OWORD *)&v71[80];
      v78[9] = *(_OWORD *)&v71[96];
      v78[10] = *(_OWORD *)&v71[112];
      v78[3] = *(_OWORD *)v71;
      v78[4] = *(_OWORD *)&v71[16];
      v78[5] = *(_OWORD *)&v71[32];
      v78[6] = *(_OWORD *)&v71[48];
      v78[0] = *(_OWORD *)buf;
      v78[1] = v69;
      uint64_t v79 = *(void *)&v71[176];
      v78[2] = v70;
      sub_1006A12FC(a1, (uint64_t)v78);
      sub_10069B224(a1, (uint64_t)buf);
      sub_10069BE18(a1, (uint64_t)buf);
      sub_100468488(a1 + 8968, (uint64_t)buf);
      return;
    case 2:
      if (*a3)
      {
        if (*(int *)(a1 + 8272) <= 0)
        {
          sub_10010F274((uint64_t)buf);
          long long v15 = sub_100132EFC(&v69, (uint64_t)"Workout Detected (", 18);
          uint64_t v16 = (const char *)[[+[CMWorkout workoutName:](CMWorkout, "workoutName:", *((void *)a3 + 1)) UTF8String];
          size_t v17 = strlen(v16);
          uint64_t v18 = sub_100132EFC(v15, (uint64_t)v16, v17);
          sub_100132EFC(v18, (uint64_t)")", 1);
          std::stringbuf::str();
          sub_100EBBFD8(a1 + 8264, (uint64_t *)&__p);
          if (v63 < 0) {
            operator delete(__p);
          }
          *(void *)&long long v69 = v19;
          if ((v71[63] & 0x80000000) != 0) {
            operator delete(*(void **)&v71[40]);
          }
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          std::ios::~ios();
        }
      }
      else if (*(int *)(a1 + 8272) >= 1)
      {
        uint64_t v40 = a1 + 8264;
        sub_100EBC6AC(v40);
      }
      return;
    case 3:
      __int16 v13 = *(_WORD *)a3;
      sub_10069C7DC(a1, v13);
      return;
    case 5:
      uint64_t v20 = *((void *)a3 + 1);
      if (v20 > 2)
      {
        if (v20 == 3)
        {
          long long v21 = *(void **)(a1 + 8360);
          CFStringRef v22 = @"cycling.falsePositive";
          CFStringRef v23 = @"cycling.total";
          goto LABEL_59;
        }
        if (v20 == 14)
        {
          long long v21 = *(void **)(a1 + 8360);
          CFStringRef v22 = @"other.falsePositive";
          CFStringRef v23 = @"other.total";
          goto LABEL_59;
        }
      }
      else
      {
        if (v20 == 1)
        {
          long long v21 = *(void **)(a1 + 8360);
          CFStringRef v22 = @"walk.falsePositive";
          CFStringRef v23 = @"walk.total";
          goto LABEL_59;
        }
        if (v20 == 2)
        {
          long long v21 = *(void **)(a1 + 8360);
          CFStringRef v22 = @"run.falsePositive";
          CFStringRef v23 = @"run.total";
LABEL_59:
          if (*a3) {
            uint64_t v52 = (uint64_t)v22;
          }
          else {
            uint64_t v52 = (uint64_t)v23;
          }
          sub_1007795EC(v21, v52);
          return;
        }
      }
      __int16 v53 = *(void **)(a1 + 8360);
      if (*a3) {
        CFStringRef v54 = @"unsupported.falsePositive";
      }
      else {
        CFStringRef v54 = @"unsupported.total";
      }
      sub_1007795EC(v53, (uint64_t)v54);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      __int16 v55 = qword_1024191C8;
      if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_ERROR))
      {
        uint64_t v56 = *((void *)a3 + 1);
        *(_DWORD *)int32x2_t buf = 67109120;
        *(_DWORD *)&uint8_t buf[4] = v56;
        _os_log_impl((void *)&_mh_execute_header, v55, OS_LOG_TYPE_ERROR, "Unsupported escalation type reported for metrics, %d", buf, 8u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C26A8);
        }
        uint64_t v57 = *((void *)a3 + 1);
        int v64 = 67109120;
        int v65 = v57;
        long long v58 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLMotionStateMediator::onWorkoutPredictorUpdate(CLWorkoutPredictor_Type::Notification, CLWorkoutPredictor_Type::NotificationData)", "%s\n", v58);
        if (v58 != (char *)buf) {
          free(v58);
        }
      }
      return;
    case 6:
      uint64_t v24 = sub_100C3AE20();
      uint64_t v25 = *(void *)a3;
      uint64_t v26 = *((void *)a3 + 1);
      uint64_t v27 = *((void *)a3 + 2);
      sub_100C3CE0C(v24, v25, v26, v27);
      return;
    case 7:
      *(_DWORD *)int32x2_t buf = *(_DWORD *)a3;
      *(_DWORD *)&uint8_t buf[4] = *((_DWORD *)a3 + 1);
      uint64_t v14 = sub_1000D2E34(0);
      (*(void (**)(void))(*(void *)(v14 + 96) + 24))();
      return;
    case 9:
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      long long v28 = qword_1024191C8;
      if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
      {
        int v29 = *a3;
        int v30 = a3[1];
        *(_DWORD *)int32x2_t buf = 67109376;
        *(_DWORD *)&uint8_t buf[4] = v29;
        *(_WORD *)&uint8_t buf[8] = 1024;
        *(_DWORD *)&buf[10] = v30;
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "CLAS,kNotificationGPSActivationEvent,shouldActivate,%d,isTypeIntermittentGps,%d", buf, 0xEu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C26A8);
        }
        int v59 = *a3;
        int v60 = a3[1];
        int v64 = 67109376;
        int v65 = v59;
        __int16 v66 = 1024;
        int v67 = v60;
        uint64_t v61 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onWorkoutPredictorUpdate(CLWorkoutPredictor_Type::Notification, CLWorkoutPredictor_Type::NotificationData)", "%s\n", v61);
        if (v61 != (char *)buf) {
          free(v61);
        }
      }
      if (a3[1])
      {
        uint64_t v31 = *(void *)(a1 + 10520);
        uint64_t v33 = *(void *)(v31 + 8);
        long long v32 = *(void **)(v31 + 16);
        uint64_t v34 = a1 + 10328;
        if (*a3)
        {
          [v32 register:v33 forNotification:5 registrationInfo:0];
          sub_100C0C518(v34, 1);
        }
        else
        {
          [v32 unregister:v33 forNotification:5];
          sub_100C0C518(v34, -1);
        }
      }
      else
      {
        uint64_t v41 = *(void *)(a1 + 10288);
        uint64_t v43 = *(void *)(v41 + 8);
        long long v42 = *(void **)(v41 + 16);
        if (*a3) {
          [v42 register:v43 forNotification:2 registrationInfo:0];
        }
        else {
          [v42 unregister:v43 forNotification:2];
        }
      }
      return;
    case 10:
      long long v75 = 0u;
      long long v76 = 0u;
      long long v74 = 0u;
      long long v73 = 0u;
      long long v72 = 0u;
      memset(&v71[8], 0, 176);
      long long v35 = *((_OWORD *)a3 + 1);
      long long v36 = *((_OWORD *)a3 + 2);
      *(_OWORD *)int32x2_t buf = *(_OWORD *)a3;
      long long v69 = v35;
      uint64_t v77 = 0;
      long long v70 = v36;
      *(void *)long long v71 = *((void *)a3 + 6);
      if (*((void *)a3 + 1) != 1) {
        goto LABEL_79;
      }
      uint64_t v37 = *((void *)a3 + 2);
      if (*((void *)a3 + 4))
      {
        if (!v37)
        {
          sub_10069DF7C(a1);
          goto LABEL_79;
        }
      }
      else if (v37 != 1)
      {
        goto LABEL_79;
      }
      sub_10069DC80(a1);
LABEL_79:
      int v64 = 4;
      (*(void (**)(uint64_t, int *, uint8_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, &v64, buf, 1, 0xFFFFFFFFLL, 0);
      return;
    case 11:
      *(_DWORD *)int32x2_t buf = *(_DWORD *)a3;
      *(_DWORD *)&uint8_t buf[4] = *((_DWORD *)a3 + 1);
      uint64_t v38 = sub_1000D2E34(0);
      (*(void (**)(void))(*(void *)(v38 + 96) + 32))();
      return;
    case 12:
      int v64 = 5;
      long long v75 = 0u;
      long long v76 = 0u;
      long long v74 = 0u;
      uint64_t v77 = 0;
      long long v73 = 0u;
      long long v72 = 0u;
      memset(&v71[8], 0, 176);
      long long v39 = *((_OWORD *)a3 + 1);
      *(_OWORD *)int32x2_t buf = *(_OWORD *)a3;
      long long v69 = v39;
      long long v70 = *((_OWORD *)a3 + 2);
      *(void *)long long v71 = *((void *)a3 + 6);
      (*(void (**)(uint64_t, int *, uint8_t *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, &v64, buf, 1, 0xFFFFFFFFLL, 0);
      return;
    default:
      return;
  }
}

void sub_1006A290C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, char a20)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a20);
  _Unwind_Resume(a1);
}

void sub_1006A2974(__n128 *a1, __n128 *a2)
{
  __n128 v14 = *a2;
  unint64_t v3 = a1[8].n128_u64[1];
  if (v3) {
    (*(void (**)(unint64_t, __n128 *))(*(void *)v3 + 48))(v3, &v14);
  }
  unint64_t v4 = a1[3].n128_u64[1];
  if (v4)
  {
    unint64_t v5 = v4 + a1[3].n128_u64[0] - 1;
    long long v6 = (void **)a1[1].n128_u64[1];
    double v7 = (*(double **)((char *)v6 + ((v5 >> 5) & 0x7FFFFFFFFFFFFF8)))[2 * v5];
    if (v7 > v14.n128_f64[0])
    {
      unint64_t v8 = a1[2].n128_u64[0];
      a1[3].n128_u64[1] = 0;
      unint64_t v9 = v8 - (void)v6;
      if (v9 >= 0x11)
      {
        do
        {
          operator delete(*v6);
          unint64_t v10 = a1[2].n128_u64[0];
          long long v6 = (void **)(a1[1].n128_u64[1] + 8);
          a1[1].n128_u64[1] = (unint64_t)v6;
          unint64_t v9 = v10 - (void)v6;
        }
        while (v9 > 0x10);
      }
      if (v9 >> 3 == 1)
      {
        uint64_t v11 = 128;
      }
      else
      {
        if (v9 >> 3 != 2)
        {
LABEL_12:
          if (qword_102418FD0 != -1) {
            dispatch_once(&qword_102418FD0, &stru_1022C2688);
          }
          id v12 = qword_102418FD8;
          if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            unint64_t v20 = v14.n128_u64[0];
            __int16 v21 = 2048;
            double v22 = v7;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "time rollback on add, newItemTime, %f, lastItemTime, %f", buf, 0x16u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102418FD0 != -1) {
              dispatch_once(&qword_102418FD0, &stru_1022C2688);
            }
            int v15 = 134218240;
            unint64_t v16 = v14.n128_u64[0];
            __int16 v17 = 2048;
            double v18 = v7;
            __int16 v13 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLSourceBuffer<CLWorkoutPredictorWatchPressure>::add(const T &) [T = CLWorkoutPredictorWatchPressure]", "%s\n", v13);
            if (v13 != (char *)buf) {
              free(v13);
            }
          }
          goto LABEL_17;
        }
        uint64_t v11 = 256;
      }
      a1[3].n128_u64[0] = v11;
      goto LABEL_12;
    }
  }
LABEL_17:
  sub_1006B542C((__n128 *)a1[1].n128_u64, &v14);
  a1[6] = v14;
}

void sub_1006A2C2C(uint64_t a1, long long *a2)
{
  long long v3 = a2[1];
  long long v16 = *a2;
  long long v17 = v3;
  int v18 = *((_DWORD *)a2 + 8);
  uint64_t v4 = *(void *)(a1 + 160);
  if (v4) {
    (*(void (**)(uint64_t, long long *))(*(void *)v4 + 48))(v4, &v16);
  }
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5)
  {
    unint64_t v6 = v5 + *(void *)(a1 + 48) - 1;
    double v7 = *(void ***)(a1 + 24);
    double v8 = *((double *)v7[v6 / 0x66] + 5 * (v6 % 0x66));
    if (v8 > *(double *)&v16)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      *(void *)(a1 + 56) = 0;
      unint64_t v10 = v9 - (void)v7;
      if (v10 >= 0x11)
      {
        do
        {
          operator delete(*v7);
          uint64_t v11 = *(void *)(a1 + 32);
          double v7 = (void **)(*(void *)(a1 + 24) + 8);
          *(void *)(a1 + 24) = v7;
          unint64_t v10 = v11 - (void)v7;
        }
        while (v10 > 0x10);
      }
      if (v10 >> 3 == 1)
      {
        uint64_t v12 = 51;
      }
      else
      {
        if (v10 >> 3 != 2)
        {
LABEL_12:
          if (qword_102418FD0 != -1) {
            dispatch_once(&qword_102418FD0, &stru_1022C2688);
          }
          __int16 v13 = qword_102418FD8;
          if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            uint64_t v24 = v16;
            __int16 v25 = 2048;
            double v26 = v8;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "time rollback on add, newItemTime, %f, lastItemTime, %f", buf, 0x16u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102418FD0 != -1) {
              dispatch_once(&qword_102418FD0, &stru_1022C2688);
            }
            int v19 = 134218240;
            uint64_t v20 = v16;
            __int16 v21 = 2048;
            double v22 = v8;
            int v15 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLSourceBuffer<CLMotionCoprocessorInterface::Tier1CyclingFeatures>::add(const T &) [T = CLMotionCoprocessorInterface::Tier1CyclingFeatures]", "%s\n", v15);
            if (v15 != (char *)buf) {
              free(v15);
            }
          }
          goto LABEL_17;
        }
        uint64_t v12 = 102;
      }
      *(void *)(a1 + 48) = v12;
      goto LABEL_12;
    }
  }
LABEL_17:
  sub_1006B57D0((void *)(a1 + 16), (uint64_t)&v16);
  long long v14 = v17;
  *(_OWORD *)(a1 + 96) = v16;
  *(_OWORD *)(a1 + 112) = v14;
  *(_DWORD *)(a1 + 128) = v18;
}

float *sub_1006A2F0C(uint64_t a1, uint64_t a2)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v4 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_INFO))
  {
    double v5 = *(double *)a2;
    double v6 = *(float *)(a2 + 16);
    *(_DWORD *)int32x2_t buf = 134218240;
    double v14 = v5;
    __int16 v15 = 2048;
    double v16 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Stair escalation event, timestamp, %f, stair metric, %.3f", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    uint64_t v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onSPUStairsEscalationEvent(const StairsEscalationEvent *)", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
  uint64_t result = *(float **)(a1 + 6608);
  unsigned int v8 = *((_DWORD *)result + 54) - 1;
  if (!*(unsigned char *)(a2 + 20))
  {
    if (v8 > 1) {
      return result;
    }
    goto LABEL_10;
  }
  if (v8 < 2)
  {
LABEL_10:
    float v9 = *(float *)(a2 + 16);
    float v10 = *(float *)(a2 + 24);
    int v11 = 0;
    return sub_100F6FA88(result, v11, v9, v10);
  }
  sub_1000A5B7C((uint64_t)result, 1, *(double *)a2);
  uint64_t result = *(float **)(a1 + 6608);
  float v9 = *(float *)(a2 + 16);
  float v10 = *(float *)(a2 + 24);
  int v11 = 1;
  return sub_100F6FA88(result, v11, v9, v10);
}

void sub_1006A3140(uint64_t a1, uint64_t a2, int *a3, long long *a4)
{
  if (*a3 == 4 || *a3 == 2)
  {
    sub_1006A3368(a1 + 5216, a4);
    sub_100E60D6C(a1 + 6624, a4);
  }
  else
  {
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022C2688);
    }
    unsigned int v8 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_ERROR))
    {
      int v9 = *a3;
      *(_DWORD *)int32x2_t buf = 67109120;
      int v12 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "MotionStateMediator received unhandled odometer notification, %d", buf, 8u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022C2688);
      }
      float v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLMotionStateMediator::onOdometerNotification(int, const CLOdometerNotifier_Type::Notification &, const CLOdometerNotifier_Type::NotificationData &)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
}

void sub_1006A3368(uint64_t a1, long long *a2)
{
  long long v3 = a2[9];
  long long v34 = a2[8];
  long long v35 = v3;
  long long v4 = a2[11];
  long long v36 = a2[10];
  long long v37 = v4;
  long long v5 = a2[5];
  long long v30 = a2[4];
  long long v31 = v5;
  long long v6 = a2[7];
  long long v32 = a2[6];
  long long v33 = v6;
  long long v7 = a2[1];
  long long v26 = *a2;
  long long v27 = v7;
  long long v8 = a2[3];
  long long v28 = a2[2];
  long long v29 = v8;
  uint64_t v9 = *(void *)(a1 + 312);
  if (v9) {
    (*(void (**)(uint64_t, long long *))(*(void *)v9 + 48))(v9, &v26);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10)
  {
    unint64_t v11 = v10 + *(void *)(a1 + 48) - 1;
    int v12 = *(void ***)(a1 + 24);
    double v13 = *((double *)v12[v11 / 0x15] + 24 * (v11 % 0x15));
    if (v13 > *(double *)&v26)
    {
      uint64_t v14 = *(void *)(a1 + 32);
      *(void *)(a1 + 56) = 0;
      unint64_t v15 = v14 - (void)v12;
      if (v15 >= 0x11)
      {
        do
        {
          operator delete(*v12);
          uint64_t v16 = *(void *)(a1 + 32);
          int v12 = (void **)(*(void *)(a1 + 24) + 8);
          *(void *)(a1 + 24) = v12;
          unint64_t v15 = v16 - (void)v12;
        }
        while (v15 > 0x10);
      }
      if (v15 >> 3 == 1)
      {
        uint64_t v17 = 10;
      }
      else
      {
        if (v15 >> 3 != 2)
        {
LABEL_12:
          if (qword_102418FD0 != -1) {
            dispatch_once(&qword_102418FD0, &stru_1022C2688);
          }
          int v18 = qword_102418FD8;
          if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            uint64_t v43 = v26;
            __int16 v44 = 2048;
            double v45 = v13;
            _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "time rollback on add, newItemTime, %f, lastItemTime, %f", buf, 0x16u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102418FD0 != -1) {
              dispatch_once(&qword_102418FD0, &stru_1022C2688);
            }
            int v38 = 134218240;
            uint64_t v39 = v26;
            __int16 v40 = 2048;
            double v41 = v13;
            __int16 v25 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLSourceBuffer<CLOdometerEntry>::add(const T &) [T = CLOdometerEntry]", "%s\n", v25);
            if (v25 != (char *)buf) {
              free(v25);
            }
          }
          goto LABEL_17;
        }
        uint64_t v17 = 21;
      }
      *(void *)(a1 + 48) = v17;
      goto LABEL_12;
    }
  }
LABEL_17:
  sub_1006B5BA0((void *)(a1 + 16), &v26);
  long long v19 = v35;
  *(_OWORD *)(a1 + 224) = v34;
  *(_OWORD *)(a1 + 240) = v19;
  long long v20 = v37;
  *(_OWORD *)(a1 + 256) = v36;
  *(_OWORD *)(a1 + 272) = v20;
  long long v21 = v31;
  *(_OWORD *)(a1 + 160) = v30;
  *(_OWORD *)(a1 + 176) = v21;
  long long v22 = v33;
  *(_OWORD *)(a1 + 192) = v32;
  *(_OWORD *)(a1 + 208) = v22;
  long long v23 = v27;
  *(_OWORD *)(a1 + 96) = v26;
  *(_OWORD *)(a1 + 112) = v23;
  long long v24 = v29;
  *(_OWORD *)(a1 + 128) = v28;
  *(_OWORD *)(a1 + 144) = v24;
}

void sub_1006A3694(uint64_t a1, int a2, _DWORD *a3, __n128 *__src)
{
  switch(*a3)
  {
    case 2:
      int v5 = *(_DWORD *)(a1 + 376);
      __n128 v7 = __src[1];
      __n128 v6 = __src[2];
      __n128 v8 = *__src;
      *(__n128 *)(a1 + 380) = *(__n128 *)((char *)__src + 44);
      *(__n128 *)(a1 + 336) = v8;
      *(__n128 *)(a1 + 352) = v7;
      *(__n128 *)(a1 + 368) = v6;
      memmove((void *)(a1 + 6984), __src, 0x3CuLL);
      sub_100F6F690(*(void *)(a1 + 6608), (long long *)(a1 + 336));
      if (v5 != *(_DWORD *)(a1 + 376))
      {
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C26A8);
        }
        uint64_t v9 = qword_1024191C8;
        if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
        {
          int v10 = *(_DWORD *)(a1 + 376);
          *(_DWORD *)int32x2_t buf = 67109376;
          int v24 = v5;
          __int16 v25 = 1024;
          int v26 = v10;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Workout settings, updating due to condition change from %d to %d", buf, 0xEu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024191C0 != -1) {
            dispatch_once(&qword_1024191C0, &stru_1022C26A8);
          }
          int v15 = *(_DWORD *)(a1 + 376);
          int v19 = 67109376;
          int v20 = v5;
          __int16 v21 = 1024;
          int v22 = v15;
          uint64_t v16 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onCalorimetryNotification(int, const CLNatalimetryNotifier_Type::Notification &, const CLNatalimetryNotifier_Type::NotificationData &)", "%s\n", v16);
          if (v16 != (char *)buf) {
            free(v16);
          }
        }
        sub_10069D29C(a1);
      }
      break;
    case 4:
      unint64_t v11 = (__n128 *)(a1 + 3592);
      sub_1006A39BC(v11, __src);
      break;
    case 6:
      __n128 v12 = __src[3];
      v17[2] = __src[2];
      v17[3] = v12;
      unint64_t v18 = __src[4].n128_u64[0];
      __n128 v13 = __src[1];
      v17[0] = *__src;
      v17[1] = v13;
      sub_100ED7ED0((id)(a1 + 8376), (uint64_t)v17);
      break;
    case 7:
      uint64_t v14 = a1 + 6624;
      sub_100E61DD0(v14, (uint64_t)__src);
      break;
    default:
      return;
  }
}

void sub_1006A39BC(__n128 *a1, __n128 *a2)
{
  __n128 v14 = *a2;
  unint64_t v15 = a2[1].n128_u64[0];
  unint64_t v3 = a1[9].n128_u64[0];
  if (v3) {
    (*(void (**)(unint64_t, __n128 *))(*(void *)v3 + 48))(v3, &v14);
  }
  unint64_t v4 = a1[3].n128_u64[1];
  if (v4)
  {
    unint64_t v5 = v4 + a1[3].n128_u64[0] - 1;
    __n128 v6 = (void **)a1[1].n128_u64[1];
    double v7 = *((double *)v6[v5 / 0xAA] + 3 * (v5 % 0xAA) + 1);
    if (v7 > v14.n128_f64[1])
    {
      unint64_t v8 = a1[2].n128_u64[0];
      a1[3].n128_u64[1] = 0;
      unint64_t v9 = v8 - (void)v6;
      if (v9 >= 0x11)
      {
        do
        {
          operator delete(*v6);
          unint64_t v10 = a1[2].n128_u64[0];
          __n128 v6 = (void **)(a1[1].n128_u64[1] + 8);
          a1[1].n128_u64[1] = (unint64_t)v6;
          unint64_t v9 = v10 - (void)v6;
        }
        while (v9 > 0x10);
      }
      if (v9 >> 3 == 1)
      {
        uint64_t v11 = 85;
      }
      else
      {
        if (v9 >> 3 != 2)
        {
LABEL_12:
          if (qword_102418FD0 != -1) {
            dispatch_once(&qword_102418FD0, &stru_1022C2688);
          }
          __n128 v12 = qword_102418FD8;
          if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            unint64_t v21 = v14.n128_u64[1];
            __int16 v22 = 2048;
            double v23 = v7;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "time rollback on add, newItemTime, %f, lastItemTime, %f", buf, 0x16u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102418FD0 != -1) {
              dispatch_once(&qword_102418FD0, &stru_1022C2688);
            }
            int v16 = 134218240;
            unint64_t v17 = v14.n128_u64[1];
            __int16 v18 = 2048;
            double v19 = v7;
            __n128 v13 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLSourceBuffer<CLExerciseMinuteData>::add(const T &) [T = CLExerciseMinuteData]", "%s\n", v13);
            if (v13 != (char *)buf) {
              free(v13);
            }
          }
          goto LABEL_17;
        }
        uint64_t v11 = 170;
      }
      a1[3].n128_u64[0] = v11;
      goto LABEL_12;
    }
  }
LABEL_17:
  sub_1006B5F98((__n128 *)a1[1].n128_u64, &v14);
  a1[6] = v14;
  a1[7].n128_u64[0] = v15;
}

void sub_1006A3C94(uint64_t a1, uint64_t a2, _DWORD *a3, int *a4)
{
  if (*a3)
  {
    if (*a3 == 1)
    {
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022C2688);
      }
      __n128 v6 = qword_102418FD8;
      if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEBUG))
      {
        int v7 = *a4;
        *(_DWORD *)int32x2_t buf = 67240192;
        int v14 = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Watch wrist state updated,onwrist,%{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102418FD0 != -1) {
          dispatch_once(&qword_102418FD0, &stru_1022C2688);
        }
        uint64_t v11 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onWatchOrientationSettingsNotification(int, const CLWatchOrientationSettingsNotifier_Type::Notification &, const CLWatchOrientationSettingsNotifier_Type::NotificationData &)", "%s\n", v11);
        if (v11 != (char *)buf) {
          free(v11);
        }
      }
      sub_100E588EC(a1 + 6624, a4);
    }
  }
  else
  {
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022C2688);
    }
    unint64_t v8 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEBUG))
    {
      int v10 = *a4;
      int v9 = a4[1];
      *(_DWORD *)int32x2_t buf = 67240448;
      int v14 = v9;
      __int16 v15 = 1026;
      int v16 = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Watch orientation settings updated,crown,%{public}d,wrist,%{public}d", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022C2688);
      }
      __n128 v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onWatchOrientationSettingsNotification(int, const CLWatchOrientationSettingsNotifier_Type::Notification &, const CLWatchOrientationSettingsNotifier_Type::NotificationData &)", "%s\n", v12);
      if (v12 != (char *)buf) {
        free(v12);
      }
    }
    sub_100E60D4C(a1 + 6624, a4);
  }
}

id sub_1006A3FE8(uint64_t a1, uint64_t a2, _DWORD *a3, unsigned __int8 *a4)
{
  if (*a3 == 15)
  {
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    int v9 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = *(unsigned __int8 *)(a1 + 10192);
      int v11 = *a4;
      *(_DWORD *)int32x2_t buf = 67240448;
      *(_DWORD *)&uint8_t buf[4] = v10;
      LOWORD(v18) = 1026;
      *(_DWORD *)((char *)&v18 + 2) = v11;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "System Power Save Mode changed, was, %{public}d, now, %{public}d", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      int v16 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onDaemonStatus(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v16);
      if (v16 != (char *)buf) {
        free(v16);
      }
    }
    *(unsigned char *)(a1 + 10192) = *a4;
    uint64_t v12 = sub_1000D2E34(0);
    (*(void (**)(uint64_t, BOOL))(*(void *)v12 + 72))(v12, *a4 == 0);
    sub_10069D29C(a1);
    __n128 v13 = *(void **)(a1 + 10304);
    int v14 = +[NSString stringWithUTF8String:"com.apple.locationd.bundle-/System/Library/LocationBundles/MotionCalibration.bundle"];
    *(void *)int32x2_t buf = _NSConcreteStackBlock;
    uint64_t v18 = 3221225472;
    double v19 = sub_1000367CC;
    int v20 = &unk_1022C2590;
    uint64_t v21 = a1;
    return [v13 getAuthorizationContextOfNonZonalClient:v14 withReply:buf];
  }
  else
  {
    if (*a3 != 7) {
      sub_101A6A6A0();
    }
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022C2688);
    }
    __n128 v6 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEBUG))
    {
      int v7 = a4[9];
      *(_DWORD *)int32x2_t buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Battery connected state %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022C2688);
      }
      __int16 v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onDaemonStatus(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v15);
      if (v15 != (char *)buf) {
        free(v15);
      }
    }
    sub_100E588C8(a1 + 6624, (uint64_t)a4);
    id result = *(id *)(a1 + 8368);
    if (result) {
      return (id)sub_100D0833C((uint64_t)result, (uint64_t)a4);
    }
  }
  return result;
}

void sub_1006A4414(uint64_t *a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 9)
  {
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    int v7 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v8 = *(void *)(a4 + 40);
      uint64_t v9 = *(void *)(a4 + 8);
      uint64_t v10 = *(void *)(a4 + 16);
      *(_DWORD *)int32x2_t buf = 134284033;
      uint64_t v13 = v8;
      __int16 v14 = 2049;
      uint64_t v15 = v9;
      __int16 v16 = 2049;
      uint64_t v17 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "One second hr, startTime,%{private}f,hr,%{private}f,hrConfidence,%{private}f", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C26A8);
      }
      int v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onCatherineNotification(int, const CLCatherineNotifier_Type::Notification &, const CLCatherineNotifier_Type::NotificationData &)", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
    }
    sub_100F6F938(a1[826], (void *)a4);
  }
  else if (*a3 == 6 && !*(_DWORD *)(a4 + 24))
  {
    uint64_t v6 = *(void *)(a4 + 8);
    a1[870] = *(void *)(a4 + 16);
    a1[871] = v6;
  }
}

void sub_1006A4634(uint64_t a1, uint64_t a2, _DWORD *a3, int *a4)
{
  uint64_t v6 = (char *)(a1 + 8920);
  switch(*a3)
  {
    case 0:
      int v7 = *(unsigned __int8 *)(a1 + 8923);
      if (*((unsigned char *)a4 + 3))
      {
        int v8 = 1;
      }
      else
      {
        sub_1006B6360(a1 + 712);
        sub_1006B6528(a1 + 1384);
        sub_1006B66F0(a1 + 2520);
        int v8 = *((unsigned __int8 *)a4 + 3);
      }
      v6[3] = v8;
      if (v7 != v8)
      {
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C26A8);
        }
        long long v32 = qword_1024191C8;
        if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
        {
          int v33 = v6[3];
          *(_DWORD *)int32x2_t buf = 67109376;
          *(_DWORD *)&uint8_t buf[4] = v7;
          *(_WORD *)long long v36 = 1024;
          *(_DWORD *)&_OWORD v36[2] = v33;
          _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "Workout settings, updating due to fitness tracking change from %d to %d", buf, 0xEu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024191C0 != -1) {
            dispatch_once(&qword_1024191C0, &stru_1022C26A8);
          }
          long long v34 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onFitnessTrackingNotification(int, const CLFitnessTrackingNotifier_Type::Notification &, const CLFitnessTrackingNotifier_Type::NotificationData &)", "%s\n", v34);
          if (v34 != (char *)buf) {
            free(v34);
          }
        }
        sub_10069D29C(a1);
      }
      break;
    case 1:
      *uint64_t v6 = *(unsigned char *)a4;
      if (!*(unsigned char *)a4)
      {
        long long v9 = *(_OWORD *)(a1 + 9640);
        *(_OWORD *)(a1 + 9424) = *(_OWORD *)(a1 + 9656);
        long long v10 = *(_OWORD *)(a1 + 9688);
        *(_OWORD *)(a1 + 9440) = *(_OWORD *)(a1 + 9672);
        *(_OWORD *)(a1 + 9456) = v10;
        long long v11 = *(_OWORD *)(a1 + 9576);
        *(_OWORD *)(a1 + 9360) = *(_OWORD *)(a1 + 9592);
        long long v12 = *(_OWORD *)(a1 + 9624);
        *(_OWORD *)(a1 + 9376) = *(_OWORD *)(a1 + 9608);
        *(_OWORD *)(a1 + 9392) = v12;
        *(_OWORD *)(a1 + 9408) = v9;
        long long v13 = *(_OWORD *)(a1 + 9512);
        *(_OWORD *)(a1 + 9296) = *(_OWORD *)(a1 + 9528);
        long long v14 = *(_OWORD *)(a1 + 9560);
        *(_OWORD *)(a1 + 9312) = *(_OWORD *)(a1 + 9544);
        *(_OWORD *)(a1 + 9328) = v14;
        *(_OWORD *)(a1 + 9344) = v11;
        long long v15 = *(_OWORD *)(a1 + 9496);
        *(_OWORD *)(a1 + 9248) = *(_OWORD *)(a1 + 9480);
        *(_OWORD *)(a1 + 9264) = v15;
        *(void *)(a1 + 9472) = *(void *)(a1 + 9704);
        *(_OWORD *)(a1 + 9280) = v13;
      }
      goto LABEL_8;
    case 2:
      *(unsigned char *)(a1 + 8921) = *(unsigned char *)a4;
      if (!*(unsigned char *)a4)
      {
        *(void *)(a1 + 9240) = *(void *)(a1 + 9704);
        long long v16 = *(_OWORD *)(a1 + 9688);
        *(_OWORD *)(a1 + 9208) = *(_OWORD *)(a1 + 9672);
        *(_OWORD *)(a1 + 9224) = v16;
        long long v17 = *(_OWORD *)(a1 + 9624);
        *(_OWORD *)(a1 + 9144) = *(_OWORD *)(a1 + 9608);
        *(_OWORD *)(a1 + 9160) = v17;
        long long v18 = *(_OWORD *)(a1 + 9656);
        *(_OWORD *)(a1 + 9176) = *(_OWORD *)(a1 + 9640);
        *(_OWORD *)(a1 + 9192) = v18;
        long long v19 = *(_OWORD *)(a1 + 9560);
        *(_OWORD *)(a1 + 9080) = *(_OWORD *)(a1 + 9544);
        *(_OWORD *)(a1 + 9096) = v19;
        long long v20 = *(_OWORD *)(a1 + 9592);
        *(_OWORD *)(a1 + 9112) = *(_OWORD *)(a1 + 9576);
        *(_OWORD *)(a1 + 9128) = v20;
        long long v21 = *(_OWORD *)(a1 + 9496);
        *(_OWORD *)(a1 + 9016) = *(_OWORD *)(a1 + 9480);
        *(_OWORD *)(a1 + 9032) = v21;
        long long v22 = *(_OWORD *)(a1 + 9528);
        *(_OWORD *)(a1 + 9048) = *(_OWORD *)(a1 + 9512);
        *(_OWORD *)(a1 + 9064) = v22;
      }
LABEL_8:
      sub_10069D29C(a1);
      double v23 = (dispatch_queue_t *)sub_10019F4CC();
      char v24 = *v6;
      char v25 = v6[1];
      sub_100F2AF84(v23, v24, v25);
      break;
    case 4:
      if (*(_DWORD *)(a1 + 8924) != *a4)
      {
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C26A8);
        }
        int v26 = qword_1024191C8;
        if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v27 = *(int *)(a1 + 8924);
          uint64_t v28 = *a4;
          *(_DWORD *)int32x2_t buf = 68289538;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)long long v36 = 2082;
          *(void *)&_OWORD v36[2] = "";
          *(_WORD *)&_OWORD v36[10] = 2050;
          *(void *)&v36[12] = v27;
          *(_WORD *)&v36[20] = 2050;
          *(void *)&v36[22] = v28;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Current Activity Move Mode changed\", \"from\":%{public, location:CLFitnessTrackingNotifier_Type::ActivityMoveMode}lld, \"to\":%{public, location:CLFitnessTrackingNotifier_Type::ActivityMoveMode}lld}", buf, 0x26u);
        }
        *(_DWORD *)(a1 + 8924) = *a4;
        long long v29 = *(void **)(a1 + 10304);
        long long v30 = +[NSString stringWithUTF8String:"com.apple.locationd.bundle-/System/Library/LocationBundles/MotionCalibration.bundle"];
        *(void *)int32x2_t buf = _NSConcreteStackBlock;
        *(void *)long long v36 = 3221225472;
        *(void *)&v36[8] = sub_1000367CC;
        *(void *)&v36[16] = &unk_1022C2590;
        *(void *)&v36[24] = a1;
        [v29 getAuthorizationContextOfNonZonalClient:v30 withReply:buf];
      }
      break;
    case 5:
      uint64_t v31 = sub_10019F4CC();
      sub_100F2C278(v31, a4);
      break;
    case 7:
      *(unsigned char *)(a1 + 8922) = *(unsigned char *)a4;
      sub_10069D29C(a1);
      break;
    default:
      return;
  }
}

uint64_t sub_1006A4BA0(uint64_t a1)
{
  sub_1006B6360(a1 + 8);
  sub_1006B6528(a1 + 680);

  return sub_1006B66F0(a1 + 1816);
}

void sub_1006A4BE4(unsigned char *a1, uint64_t a2, int *a3, uint64_t a4)
{
  int v7 = *a3;
  if (*a3)
  {
    if (v7 == 1)
    {
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022C2688);
      }
      long long v13 = qword_102418FD8;
      if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEBUG))
      {
        int v14 = *(_DWORD *)(a4 + 12);
        *(_DWORD *)int32x2_t buf = 67240192;
        *(_DWORD *)double v23 = v14;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "VehicularConfidence,%{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102418FD0 != -1) {
          dispatch_once(&qword_102418FD0, &stru_1022C2688);
        }
        long long v20 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onMotionStateObserverNotification(int, const CLMotionStateObserver_Type::Notification &, const CLMotionStateObserver_Type::NotificationData &)", "%s\n", v20);
        if (v20 != (char *)buf) {
          free(v20);
        }
      }
      sub_100E588FC((uint64_t)(a1 + 6624), a4);
    }
    else if (v7 == 2)
    {
      sub_101A6A834();
    }
  }
  else if (a1[461])
  {
    uint64_t v8 = *(void *)a4;
    int v9 = *(_DWORD *)(a4 + 8);
    int v10 = *(_DWORD *)(a4 + 12);
    int v11 = *(_DWORD *)(a4 + 16);
    if (CLMotionActivity::isTypePedestrian()) {
      int isTypeIndoorPedestrian = 1;
    }
    else {
      int isTypeIndoorPedestrian = CLMotionActivity::isTypeIndoorPedestrian();
    }
    if (qword_1024192A0 != -1) {
      dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
    }
    long long v18 = qword_1024192A8;
    if (os_log_type_enabled((os_log_t)qword_1024192A8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)int32x2_t buf = 134219264;
      *(void *)double v23 = v8;
      *(_WORD *)&v23[8] = 1024;
      *(_DWORD *)&v23[10] = v9;
      *(_WORD *)&v23[14] = 1024;
      *(_DWORD *)&v23[16] = v10;
      __int16 v24 = 1024;
      int v25 = v11;
      __int16 v26 = 1024;
      BOOL v27 = v9 != 0;
      __int16 v28 = 1024;
      int v29 = isTypeIndoorPedestrian;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Received observed workout session, startTime, %f, activityType, %d, predictedWorkoutActivityType, %d, hkWorkoutActivityType, %d, isWorkout, %d, isPedestrian, %d", buf, 0x2Au);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192A0 != -1) {
        dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
      }
      long long v21 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onMotionStateObserverNotification(int, const CLMotionStateObserver_Type::Notification &, const CLMotionStateObserver_Type::NotificationData &)", "%s\n", v21);
      if (v21 != (char *)buf) {
        free(v21);
      }
    }
    if (v9) {
      int v19 = isTypeIndoorPedestrian;
    }
    else {
      int v19 = 0;
    }
    if (v19 == 1)
    {
      buf[0] = 0;
      *(void *)&v23[4] = 0;
      *(void *)&v23[12] = 0x10000000000000;
      (*(void (**)(unsigned char *, uint8_t *))(*(void *)a1 + 208))(a1, buf);
    }
  }
  else
  {
    if (qword_1024192A0 != -1) {
      dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
    }
    long long v15 = qword_1024192A8;
    if (os_log_type_enabled((os_log_t)qword_1024192A8, OS_LOG_TYPE_ERROR))
    {
      int v16 = *a3;
      *(_DWORD *)int32x2_t buf = 67109120;
      *(_DWORD *)double v23 = v16;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "MotionStateMediator should not be subscribed to notification, %d, when fTriggerIndoorOutdoorOnObservedPedWorkouts is false", buf, 8u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192A0 != -1) {
        dispatch_once(&qword_1024192A0, &stru_1022C2FE0);
      }
      long long v17 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLMotionStateMediator::onMotionStateObserverNotification(int, const CLMotionStateObserver_Type::Notification &, const CLMotionStateObserver_Type::NotificationData &)", "%s\n", v17);
      if (v17 != (char *)buf) {
        free(v17);
      }
    }
  }
}

void sub_1006A5168(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 8256);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(a2 + 16))(&v3, a2);
  (*(void (**)(uint64_t, uint64_t *))(*(void *)v2 + 32))(v2, &v3);
  unint64_t v5 = (void **)&v4;
  sub_1000D7F78(&v5);
}

void sub_1006A51E8(_Unwind_Exception *a1)
{
  *(void *)(v2 - 24) = v1 + 8;
  sub_1000D7F78((void ***)(v2 - 24));
  _Unwind_Resume(a1);
}

uint64_t sub_1006A5204(uint64_t result, uint64_t a2, _DWORD *a3, long long *a4)
{
  if (*a3 == 5)
  {
    uint64_t v5 = result;
    double v6 = *(double *)((char *)a4 + 4);
    double v7 = *(double *)((char *)a4 + 12);
    float v8 = v6;
    float v9 = v7;
    (*(void (**)(void, float, float))(**(void **)(result + 8256) + 48))(*(void *)(result + 8256), v8, v9);
    id result = *(void *)(v5 + 8368);
    if (result) {
      id result = sub_100D09284(result, v6, v7);
    }
    if (*(unsigned char *)(v5 + 10320))
    {
      long long v10 = *a4;
      *(_OWORD *)(v5 + 9744) = a4[1];
      *(_OWORD *)(v5 + 9728) = v10;
      long long v11 = a4[2];
      long long v12 = a4[3];
      long long v13 = a4[4];
      *(_OWORD *)(v5 + 9808) = a4[5];
      *(_OWORD *)(v5 + 9792) = v13;
      *(_OWORD *)(v5 + 9776) = v12;
      *(_OWORD *)(v5 + 9760) = v11;
      long long v14 = *(long long *)((char *)a4 + 140);
      long long v15 = a4[6];
      long long v16 = a4[7];
      *(_OWORD *)(v5 + 9856) = a4[8];
      *(_OWORD *)(v5 + 9840) = v16;
      *(_OWORD *)(v5 + 9824) = v15;
      *(_OWORD *)(v5 + 9868) = v14;
    }
  }
  return result;
}

uint64_t sub_1006A52DC()
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v0 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "Enabling tier1 cycling features message sending", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    uint64_t v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onTier1CyclingFeaturesActivate()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  uint64_t v1 = sub_1000D2E34(0);
  return (*(uint64_t (**)(void))(*(void *)(v1 + 96) + 56))();
}

uint64_t sub_1006A5494()
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v0 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int32x2_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEFAULT, "Disabling tier1 cycling features message sending", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    uint64_t v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMotionStateMediator::onTier1CyclingFeaturesDeactivate()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  uint64_t v1 = sub_1000D2E34(0);
  return (*(uint64_t (**)(void))(*(void *)(v1 + 96) + 56))();
}

void sub_1006A564C()
{
}

void sub_1006A5708(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete();
}

uint64_t sub_1006A5744(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_1022C3F18;
  *(void *)(a1 + 8) = [[CLNotifierClientAdapter alloc] initWithClient:a1];
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  if (*((char *)a3 + 23) >= 0) {
    long long v12 = a3;
  }
  else {
    long long v12 = (uint64_t *)*a3;
  }
  id v13 = [[[a4 vendor] proxyForService:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12)];
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  [*(id *)(a1 + 16) registerDelegate:*(void *)(a1 + 8) inSilo:objc_msgSend(a4, "silo")];
  return a1;
}

void sub_1006A5828(uint64_t a1, uint64_t a2)
{
  v14[0] = a2;
  if (!*(unsigned char *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      if (v7 >= (int)a2) {
        float v9 = (uint64_t *)v4;
      }
      else {
        float v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }
    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)int32x2_t buf = *(_DWORD *)(*(void *)(v6 + 40) + 28);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112))(a1, a2, buf);
      }
      sub_10006DA64(v5, v14);
    }
    else
    {
LABEL_12:
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022C26C8);
      }
      long long v10 = qword_102419588;
      if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
      {
        long long v11 = (void *)(a1 + 8);
        if (*(char *)(a1 + 31) < 0) {
          long long v11 = (void *)*v11;
        }
        *(_DWORD *)int32x2_t buf = 136446466;
        int v19 = v11;
        __int16 v20 = 1026;
        int v21 = a2;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419580 != -1) {
          dispatch_once(&qword_102419580, &stru_1022C26C8);
        }
        long long v12 = (void *)(a1 + 8);
        if (*(char *)(a1 + 31) < 0) {
          long long v12 = (void *)*v12;
        }
        v14[1] = 136446466;
        long long v15 = v12;
        __int16 v16 = 1026;
        int v17 = a2;
        id v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::NotificationData>::removeClient(int) [Notification_T = CLMotionStateMediator_Type::Notification, NotificationData_T = CLMotionStateMediator_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v13);
        if (v13 != (char *)buf) {
          free(v13);
        }
      }
    }
  }
}

uint64_t sub_1006A5AB8(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  id v7 = sub_10005C4C4(a4);
  if (v7)
  {
    int v10 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *, id))(*(void *)a1 + 96))(a1, a2, &v10, v7);
  }
  else
  {
    int v9 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 88))(a1, a2, &v9);
  }
}

uint64_t sub_1006A5B6C(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 104))(a1, a2, &v4);
}

uint64_t sub_1006A5BB4(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 112))(a1, a2, &v4);
}

uint64_t sub_1006A5BFC(uint64_t a1, int a2)
{
  int v3 = a2;
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
}

uint64_t sub_1006A5C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96))(a1, a2, a3, &unk_10241D430);
}

uint64_t sub_1006A5C70(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(unsigned char *)(a1 + 108)) {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        id v13 = (uint64_t *)v7;
      }
      else {
        id v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }
    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)long long v42 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          __int16 v24 = (uint64_t *)v18;
        }
        else {
          __int16 v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }
      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          int v29 = (uint64_t *)v25;
        }
        else {
          int v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }
      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v40 = v26;
        uint64_t v35 = *(void *)(v26 + 56);
        char v36 = *a4;
        *(void *)&buf[0] = &v41;
        *((unsigned char *)sub_1000EB1B8((uint64_t **)(v26 + 40), &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 32) = v36;
        memset(buf, 0, 320);
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 128))(a1, a3, buf))
        {
          sub_1006B6928();
        }
        if (v35) {
          goto LABEL_46;
        }
      }
      else
      {
LABEL_42:
        uint64_t v40 = a1 + 64;
        char v30 = byte_10241D431;
        int v39 = v17;
        *(void *)&buf[0] = &v39;
        *((unsigned char *)sub_10044715C((uint64_t **)(a1 + 56), &v39, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 80) = v30;
        int v39 = *a3;
        *(void *)&buf[0] = &v39;
        uint64_t v31 = sub_10044715C((uint64_t **)(a1 + 56), &v39, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        long long v32 = (std::__shared_weak_count *)v31[9];
        v31[8] = 0;
        v31[9] = 0;
        if (v32) {
          sub_1000DB0A0(v32);
        }
        char v33 = *a4;
        int v39 = *a3;
        *(void *)&buf[0] = &v39;
        long long v34 = sub_10044715C((uint64_t **)(a1 + 56), &v39, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        *(void *)&buf[0] = &v41;
        *((unsigned char *)sub_1000EB1B8(v34 + 5, &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 32) = v33;
      }
      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168))(a1, a3);
LABEL_46:
      if (v21 == v19)
      {
        LODWORD(buf[0]) = *a3;
        sub_1000EDED4((uint64_t **)(*(void *)v42 + 40), (int *)buf, buf);
      }
      return 1;
    }
  }
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  id v14 = qword_102419588;
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
  {
    long long v15 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      long long v15 = (void *)*v15;
    }
    LODWORD(buf[0]) = 136446466;
    *(void *)((char *)buf + 4) = v15;
    WORD6(buf[0]) = 1026;
    *(_DWORD *)((char *)buf + 14) = a2;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
      (uint8_t *)buf,
      0x12u);
  }
  BOOL v16 = sub_10013D1A0(115, 0);
  uint64_t result = 0;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    long long v37 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      long long v37 = (void *)*v37;
    }
    *(_DWORD *)long long v42 = 136446466;
    *(void *)&v42[4] = v37;
    __int16 v43 = 1026;
    int v44 = a2;
    int v38 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::NotificationData>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLMotionStateMediator_Type::Notification, NotificationData_T = CLMotionStateMediator_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v38);
    if (v38 != (char *)buf) {
      free(v38);
    }
    return 0;
  }
  return result;
}

BOOL sub_1006A6144(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v5;
    }
    else {
      int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }
  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }
    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }
  else
  {
LABEL_11:
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    uint64_t v10 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        int v11 = (void *)*v11;
      }
      *(_DWORD *)int32x2_t buf = 136446466;
      __int16 v24 = v11;
      __int16 v25 = 1026;
      int v26 = a2;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }
    BOOL v12 = sub_10013D1A0(115, 0);
    BOOL result = 0;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022C26C8);
      }
      int v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::NotificationData>::clientRegistered(int, const Notification_T &) [Notification_T = CLMotionStateMediator_Type::Notification, NotificationData_T = CLMotionStateMediator_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
      return 0;
    }
  }
  return result;
}

BOOL sub_1006A63C8(char *a1, int a2, int *a3)
{
  int v32 = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          int v11 = (uint64_t *)v6;
        }
        else {
          int v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }
      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }
          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1000ED9F4((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                __int16 v25 = (uint64_t *)v20;
              }
              else {
                __int16 v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }
            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1000ED9F4((uint64_t)(v22 + 40), &v32);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176))(a1, a3);
              }
            }
            else
            {
LABEL_33:
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022C26C8);
              }
              int v26 = qword_102419588;
              if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
              {
                int v27 = a1 + 8;
                if (a1[31] < 0) {
                  int v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160))(__p, a1, a3);
                if (v42 >= 0) {
                  BOOL v28 = __p;
                }
                else {
                  BOOL v28 = (void **)__p[0];
                }
                *(_DWORD *)int32x2_t buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v34 = 2082;
                uint64_t v35 = v28;
                _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_FAULT, "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v42 < 0) {
                  operator delete(__p[0]);
                }
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_102419580 != -1) {
                  dispatch_once(&qword_102419580, &stru_1022C26C8);
                }
                int v29 = a1 + 8;
                if (a1[31] < 0) {
                  int v29 = (void *)*v29;
                }
                (*(void (**)(unsigned char *__return_ptr, char *, int *))(*(void *)a1 + 160))(buf, a1, a3);
                if (v36 >= 0) {
                  char v30 = buf;
                }
                else {
                  char v30 = *(unsigned char **)buf;
                }
                int v37 = 136446466;
                int v38 = v29;
                __int16 v39 = 2082;
                uint64_t v40 = v30;
                uint64_t v31 = (char *)_os_log_send_and_compose_impl();
                if (v36 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::NotificationData>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLMotionStateMediator_Type::Notification, NotificationData_T = CLMotionStateMediator_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v31);
                if (v31 != (char *)__p) {
                  free(v31);
                }
              }
            }
          }
        }
      }
    }
  }
  return v3 == 0;
}

uint64_t sub_1006A679C(uint64_t a1, int *a2, void *__dst)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0;
  }
  int v6 = *a2;
  uint64_t v7 = v3;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      BOOL v10 = (uint64_t *)v4;
    }
    else {
      BOOL v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }
  while (*v10);
  if (v7 == v3) {
    return 0;
  }
  if (v6 < *(_DWORD *)(v7 + 32)) {
    return 0;
  }
  int v11 = *(const void **)(v7 + 64);
  if (!v11) {
    return 0;
  }
  memcpy(__dst, v11, 0x140uLL);
  return 1;
}

uint64_t sub_1006A6810(uint64_t a1, int *a2, const void *a3)
{
  int v6 = (uint64_t *)operator new(0x158uLL);
  v6[1] = 0;
  v6[2] = 0;
  *int v6 = (uint64_t)off_1022C3D30;
  memcpy(v6 + 3, a3, 0x140uLL);
  int v10 = *a2;
  int v11 = &v10;
  uint64_t v7 = sub_10044715C((uint64_t **)(a1 + 56), &v10, (uint64_t)&unk_101D0B290, &v11);
  int v8 = (std::__shared_weak_count *)v7[9];
  v7[8] = v6 + 3;
  v7[9] = v6;
  if (v8) {
    sub_1000DB0A0(v8);
  }
  return 1;
}

void sub_1006A68D4(_Unwind_Exception *a1)
{
  sub_1000DB0A0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006A68E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  memset(v5, 0, sizeof(v5));
  return (*(uint64_t (**)(uint64_t, uint64_t, _OWORD *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, a2, v5, a3, a4, 0);
}

void sub_1006A6998(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 108))
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    uint64_t v2 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        uint64_t v3 = (void *)*v3;
      }
      *(_DWORD *)int32x2_t buf = 136315138;
      int v22 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022C26C8);
      }
      uint64_t v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::NotificationData>::listClients() [Notification_T = CLMotionStateMediator_Type::Notification, NotificationData_T = CLMotionStateMediator_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
  else
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    uint64_t v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      int v6 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        int v6 = (void *)*v6;
      }
      uint64_t v7 = *(void *)(a1 + 96);
      *(_DWORD *)int32x2_t buf = 136315394;
      int v22 = v6;
      __int16 v23 = 2048;
      v24[0] = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022C26C8);
      }
      uint64_t v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::NotificationData>::listClients() [Notification_T = CLMotionStateMediator_Type::Notification, NotificationData_T = CLMotionStateMediator_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v20);
      if (v20 != (char *)buf) {
        free(v20);
      }
    }
    int v8 = *(void **)(a1 + 80);
    if (v8 != (void *)(a1 + 88))
    {
      do
      {
        BOOL v9 = (void *)v8[5];
        if (v9 != v8 + 6)
        {
          do
          {
            if (qword_102419580 != -1) {
              dispatch_once(&qword_102419580, &stru_1022C26C8);
            }
            int v10 = qword_102419588;
            if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
            {
              int v11 = (void *)(a1 + 8);
              if (*(char *)(a1 + 31) < 0) {
                int v11 = *(void **)(a1 + 8);
              }
              int v12 = *((_DWORD *)v8 + 8);
              int v13 = *((_DWORD *)v9 + 7);
              *(_DWORD *)int32x2_t buf = 136315650;
              int v22 = v11;
              __int16 v23 = 1024;
              LODWORD(v24[0]) = v12;
              WORD2(v24[0]) = 1024;
              *(_DWORD *)((char *)v24 + 6) = v13;
              _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022C26C8);
              }
              int v17 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLMotionStateMediator_Type::Notification, CLMotionStateMediator_Type::NotificationData>::listClients() [Notification_T = CLMotionStateMediator_Type::Notification, NotificationData_T = CLMotionStateMediator_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v17);
              if (v17 != (char *)buf) {
                free(v17);
              }
            }
            uint64_t v14 = (void *)v9[1];
            if (v14)
            {
              do
              {
                int v15 = v14;
                uint64_t v14 = (void *)*v14;
              }
              while (v14);
            }
            else
            {
              do
              {
                int v15 = (void *)v9[2];
                BOOL v16 = *v15 == (void)v9;
                BOOL v9 = v15;
              }
              while (!v16);
            }
            BOOL v9 = v15;
          }
          while (v15 != v8 + 6);
        }
        BOOL v18 = (void *)v8[1];
        if (v18)
        {
          do
          {
            int v19 = v18;
            BOOL v18 = (void *)*v18;
          }
          while (v18);
        }
        else
        {
          do
          {
            int v19 = (void *)v8[2];
            BOOL v16 = *v19 == (void)v8;
            int v8 = v19;
          }
          while (!v16);
        }
        int v8 = v19;
      }
      while (v19 != (void *)(a1 + 88));
    }
  }
}

void sub_1006A6F48(uint64_t a1)
{
  sub_1006B68B8(a1);

  operator delete();
}

void sub_1006A6F80(id a1)
{
  qword_102418FD8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

void sub_1006A6FB0(id a1)
{
  qword_1024191C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

void sub_1006A6FE0(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

uint64_t sub_1006A7010(uint64_t a1, void *a2)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  unint64_t v3 = a2[4];
  uint64_t v4 = a2[1];
  if (a2[2] == v4)
  {
    uint64_t v5 = 0;
    int v8 = 0;
    uint64_t v7 = (char *)(v4 + 8 * ((a2[5] + v3) / 0x11));
  }
  else
  {
    uint64_t v5 = (long long *)(*(void *)(v4 + 8 * (v3 / 0x11)) + 232 * (v3 % 0x11));
    unint64_t v6 = a2[5] + v3;
    uint64_t v7 = (char *)(v4 + 8 * (v6 / 0x11));
    int v8 = (long long *)(*(void *)v7 + 232 * (v6 % 0x11));
  }
  sub_1006A70E0((void *)a1, (char *)(v4 + 8 * (v3 / 0x11)), v5, v7, v8);
  return a1;
}

void sub_1006A70CC(_Unwind_Exception *a1)
{
  sub_1000D7EB4(v1);
  _Unwind_Resume(a1);
}

void *sub_1006A70E0(void *a1, char *a2, long long *a3, char *a4, long long *a5)
{
  if (a5 == a3) {
    unint64_t v5 = 0;
  }
  else {
    unint64_t v5 = 2 * (a4 - a2)
  }
       + ((a4 - a2) >> 3)
       + 0x34F72C234F72C235 * (((uint64_t)a5 - *(void *)a4) >> 3)
       - 0x34F72C234F72C235 * (((uint64_t)a3 - *(void *)a2) >> 3);
  return sub_1006A7140(a1, a2, a3, v5);
}

void *sub_1006A7140(void *a1, void *a2, long long *a3, unint64_t a4)
{
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  if (v9 == v8) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = 2 * (v9 - v8) + ((v9 - v8) >> 3) - 1;
  }
  unint64_t v11 = a1[5] + a1[4];
  unint64_t v12 = v10 - v11;
  if (a4 > v12)
  {
    sub_1006A72F0(a1, a4 - v12);
    uint64_t v8 = a1[1];
    uint64_t v9 = a1[2];
    unint64_t v11 = a1[4] + a1[5];
  }
  int v13 = (void *)(v8 + 8 * (v11 / 0x11));
  if (v9 == v8) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *v13 + 232 * (v11 % 0x11);
  }
  char v33 = (void *)(v8 + 8 * (v11 / 0x11));
  unint64_t v34 = v14;
  BOOL result = sub_1001717C4(&v33, a4);
  uint64_t v16 = v34;
  if (v14 != v34)
  {
    int v17 = v33;
    do
    {
      if (v13 == v17) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = *v13 + 3944;
      }
      if (v14 == v18)
      {
        uint64_t v18 = v14;
      }
      else
      {
        unint64_t v19 = v14;
        do
        {
          long long v20 = *a3;
          long long v21 = a3[2];
          *(_OWORD *)(v19 + 16) = a3[1];
          *(_OWORD *)(v19 + 32) = v21;
          *(_OWORD *)unint64_t v19 = v20;
          long long v22 = a3[3];
          long long v23 = a3[4];
          long long v24 = a3[6];
          *(_OWORD *)(v19 + 80) = a3[5];
          *(_OWORD *)(v19 + 96) = v24;
          *(_OWORD *)(v19 + 48) = v22;
          *(_OWORD *)(v19 + 64) = v23;
          long long v25 = a3[7];
          long long v26 = a3[8];
          long long v27 = a3[10];
          *(_OWORD *)(v19 + 144) = a3[9];
          *(_OWORD *)(v19 + 160) = v27;
          *(_OWORD *)(v19 + 112) = v25;
          *(_OWORD *)(v19 + 128) = v26;
          long long v28 = a3[11];
          long long v29 = a3[12];
          long long v30 = a3[13];
          *(void *)(v19 + 224) = *((void *)a3 + 28);
          *(_OWORD *)(v19 + 192) = v29;
          *(_OWORD *)(v19 + 208) = v30;
          *(_OWORD *)(v19 + 176) = v28;
          a3 = (long long *)((char *)a3 + 232);
          if ((long long *)((char *)a3 - *a2) == (long long *)3944)
          {
            uint64_t v31 = (long long *)a2[1];
            ++a2;
            a3 = v31;
          }
          v19 += 232;
        }
        while (v19 != v18);
      }
      a1[5] += 0x34F72C234F72C235 * ((uint64_t)(v18 - v14) >> 3);
      if (v13 == v17) {
        break;
      }
      unint64_t v32 = v13[1];
      ++v13;
      unint64_t v14 = v32;
    }
    while (v32 != v16);
  }
  return result;
}

void sub_1006A72F0(void *a1, unint64_t a2)
{
  unint64_t v3 = (char *)a1[2];
  uint64_t v4 = (uint64_t)&v3[-a1[1]];
  if (v4) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = a2 + 1;
  }
  if (v5 == 17 * (v5 / 0x11)) {
    unint64_t v6 = v5 / 0x11;
  }
  else {
    unint64_t v6 = v5 / 0x11 + 1;
  }
  unint64_t v7 = a1[4];
  if (v6 >= v7 / 0x11) {
    unint64_t v8 = v7 / 0x11;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v6 <= v7 / 0x11)
  {
    for (a1[4] = v7 - 17 * v8; v8; --v8)
    {
      uint64_t v16 = (void *)a1[1];
      uint64_t v19 = *v16;
      int v17 = (char *)(v16 + 1);
      uint64_t v18 = v19;
      a1[1] = v17;
      if (v3 == (char *)a1[3])
      {
        uint64_t v20 = (uint64_t)&v17[-*a1];
        if ((unint64_t)v17 <= *a1)
        {
          if (v3 == (char *)*a1) {
            unint64_t v28 = 1;
          }
          else {
            unint64_t v28 = (uint64_t)&v3[-*a1] >> 2;
          }
          long long v29 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v28);
          uint64_t v31 = &v29[8 * (v28 >> 2)];
          unint64_t v32 = (uint64_t *)a1[1];
          unint64_t v3 = v31;
          uint64_t v33 = a1[2] - (void)v32;
          if (v33)
          {
            unint64_t v3 = &v31[v33 & 0xFFFFFFFFFFFFFFF8];
            uint64_t v34 = 8 * (v33 >> 3);
            uint64_t v35 = &v29[8 * (v28 >> 2)];
            do
            {
              uint64_t v36 = *v32++;
              *(void *)uint64_t v35 = v36;
              v35 += 8;
              v34 -= 8;
            }
            while (v34);
          }
          int v37 = (char *)*a1;
          *a1 = v29;
          a1[1] = v31;
          a1[2] = v3;
          a1[3] = &v29[8 * v30];
          if (v37)
          {
            operator delete(v37);
            unint64_t v3 = (char *)a1[2];
          }
        }
        else
        {
          uint64_t v21 = v20 >> 3;
          BOOL v22 = v20 >> 3 < -1;
          uint64_t v23 = (v20 >> 3) + 2;
          if (v22) {
            uint64_t v24 = v23;
          }
          else {
            uint64_t v24 = v21 + 1;
          }
          long long v25 = &v17[-8 * (v24 >> 1)];
          int64_t v26 = v3 - v17;
          if (v3 != v17)
          {
            memmove(&v17[-8 * (v24 >> 1)], v17, v3 - v17);
            unint64_t v3 = (char *)a1[1];
          }
          long long v27 = &v3[-8 * (v24 >> 1)];
          unint64_t v3 = &v25[v26];
          a1[1] = v27;
          a1[2] = &v25[v26];
        }
      }
      *(void *)unint64_t v3 = v18;
      unint64_t v3 = (char *)(a1[2] + 8);
      a1[2] = v3;
    }
  }
  else
  {
    unint64_t v9 = v6 - v8;
    uint64_t v10 = a1[3] - *a1;
    if (v6 - v8 <= (v10 >> 3) - (v4 >> 3))
    {
      if (v9)
      {
        while (a1[3] != a1[2])
        {
          __p[0] = operator new(0xF68uLL);
          sub_10017F0B4(a1, __p);
          --v6;
          if (!--v9) {
            goto LABEL_75;
          }
        }
        for (uint64_t i = 0; i != v9; ++i)
        {
          __p[0] = operator new(0xF68uLL);
          sub_1002D02D8((uint64_t)a1, __p);
          if (a1[2] - a1[1] == 8) {
            uint64_t v64 = 16;
          }
          else {
            uint64_t v64 = 17;
          }
          uint64_t v65 = v64 + a1[4];
          a1[4] = v65;
        }
        unint64_t v8 = v6;
      }
      else
      {
LABEL_75:
        uint64_t v65 = a1[4];
      }
      a1[4] = v65 - 17 * v8;
      if (v8)
      {
        __int16 v66 = (char *)a1[2];
        do
        {
          int v67 = (void *)a1[1];
          uint64_t v70 = *v67;
          uint64_t v68 = (char *)(v67 + 1);
          uint64_t v69 = v70;
          a1[1] = v68;
          if (v66 == (char *)a1[3])
          {
            uint64_t v71 = (uint64_t)&v68[-*a1];
            if ((unint64_t)v68 <= *a1)
            {
              if (v66 == (char *)*a1) {
                unint64_t v78 = 1;
              }
              else {
                unint64_t v78 = (uint64_t)&v66[-*a1] >> 2;
              }
              uint64_t v79 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v78);
              uint64_t v81 = &v79[8 * (v78 >> 2)];
              long long v82 = (uint64_t *)a1[1];
              __int16 v66 = v81;
              uint64_t v83 = a1[2] - (void)v82;
              if (v83)
              {
                __int16 v66 = &v81[v83 & 0xFFFFFFFFFFFFFFF8];
                uint64_t v84 = 8 * (v83 >> 3);
                long long v85 = &v79[8 * (v78 >> 2)];
                do
                {
                  uint64_t v86 = *v82++;
                  *(void *)long long v85 = v86;
                  v85 += 8;
                  v84 -= 8;
                }
                while (v84);
              }
              long long v87 = (char *)*a1;
              *a1 = v79;
              a1[1] = v81;
              a1[2] = v66;
              a1[3] = &v79[8 * v80];
              if (v87)
              {
                operator delete(v87);
                __int16 v66 = (char *)a1[2];
              }
            }
            else
            {
              uint64_t v72 = v71 >> 3;
              BOOL v22 = v71 >> 3 < -1;
              uint64_t v73 = (v71 >> 3) + 2;
              if (v22) {
                uint64_t v74 = v73;
              }
              else {
                uint64_t v74 = v72 + 1;
              }
              long long v75 = &v68[-8 * (v74 >> 1)];
              int64_t v76 = v66 - v68;
              if (v66 != v68)
              {
                memmove(&v68[-8 * (v74 >> 1)], v68, v66 - v68);
                __int16 v66 = (char *)a1[1];
              }
              uint64_t v77 = &v66[-8 * (v74 >> 1)];
              __int16 v66 = &v75[v76];
              a1[1] = v77;
              a1[2] = &v75[v76];
            }
          }
          *(void *)__int16 v66 = v69;
          __int16 v66 = (char *)(a1[2] + 8);
          a1[2] = v66;
          --v8;
        }
        while (v8);
      }
    }
    else
    {
      uint64_t v11 = v4 >> 3;
      unint64_t v12 = v10 >> 2;
      if (v12 <= v9 + v11) {
        unint64_t v13 = v9 + v11;
      }
      else {
        unint64_t v13 = v12;
      }
      unint64_t v14 = v11 - v8;
      long long v91 = a1 + 3;
      if (v13) {
        int v15 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v13);
      }
      else {
        int v15 = 0;
      }
      uint64_t v38 = -17 * v8;
      __p[0] = v15;
      __p[1] = &v15[8 * v14];
      *(void **)&long long v90 = __p[1];
      *((void *)&v90 + 1) = &v15[8 * v13];
      do
      {
        long long v88 = operator new(0xF68uLL);
        sub_1000DA434(__p, &v88);
        --v9;
      }
      while (v9);
      if (v8)
      {
        __int16 v39 = (void *)a1[1];
        uint64_t v40 = (char *)v90;
        do
        {
          if (v40 == *((char **)&v90 + 1))
          {
            int64_t v41 = (char *)__p[1] - (char *)__p[0];
            if (__p[1] <= __p[0])
            {
              if (v40 == __p[0]) {
                unint64_t v48 = 1;
              }
              else {
                unint64_t v48 = (v40 - (char *)__p[0]) >> 2;
              }
              long long v49 = (char *)sub_1000DA54C((uint64_t)v91, v48);
              unint64_t v51 = (uint64_t *)__p[1];
              uint64_t v40 = &v49[8 * (v48 >> 2)];
              uint64_t v52 = v90 - (unint64_t)__p[1];
              if ((void *)v90 != __p[1])
              {
                uint64_t v40 = &v49[8 * (v48 >> 2) + (v52 & 0xFFFFFFFFFFFFFFF8)];
                uint64_t v53 = 8 * (v52 >> 3);
                CFStringRef v54 = &v49[8 * (v48 >> 2)];
                do
                {
                  uint64_t v55 = *v51++;
                  *(void *)CFStringRef v54 = v55;
                  v54 += 8;
                  v53 -= 8;
                }
                while (v53);
              }
              uint64_t v56 = __p[0];
              __p[0] = v49;
              __p[1] = &v49[8 * (v48 >> 2)];
              *(void *)&long long v90 = v40;
              *((void *)&v90 + 1) = &v49[8 * v50];
              if (v56)
              {
                operator delete(v56);
                uint64_t v40 = (char *)v90;
              }
            }
            else
            {
              uint64_t v42 = v41 >> 3;
              BOOL v22 = v41 >> 3 < -1;
              uint64_t v43 = (v41 >> 3) + 2;
              if (v22) {
                uint64_t v44 = v43;
              }
              else {
                uint64_t v44 = v42 + 1;
              }
              double v45 = (char *)__p[1] - 8 * (v44 >> 1);
              int64_t v46 = v40 - (char *)__p[1];
              if (v40 != __p[1])
              {
                memmove((char *)__p[1] - 8 * (v44 >> 1), __p[1], v40 - (char *)__p[1]);
                uint64_t v40 = (char *)__p[1];
              }
              long long v47 = &v40[-8 * (v44 >> 1)];
              uint64_t v40 = &v45[v46];
              __p[1] = v47;
              *(void *)&long long v90 = &v45[v46];
            }
          }
          *(void *)uint64_t v40 = *v39;
          uint64_t v40 = (char *)(v90 + 8);
          *(void *)&long long v90 = v90 + 8;
          __int16 v39 = (void *)(a1[1] + 8);
          a1[1] = v39;
          --v8;
        }
        while (v8);
      }
      uint64_t v57 = (void *)a1[2];
      uint64_t v58 = -7 - (void)v57;
      while (v57 != (void *)a1[1])
      {
        --v57;
        v58 += 8;
        sub_1002D03F8((uint64_t)__p, v57);
      }
      int v59 = (char *)*a1;
      long long v60 = *(_OWORD *)__p;
      long long v61 = v90;
      __p[0] = *(void **)a1;
      __p[1] = v57;
      long long v62 = *((_OWORD *)a1 + 1);
      *(_OWORD *)a1 = v60;
      *((_OWORD *)a1 + 1) = v61;
      long long v90 = v62;
      a1[4] += v38;
      if (v57 != (void *)v62) {
        *(void *)&long long v90 = v62 + (-(v62 + v58) & 0xFFFFFFFFFFFFFFF8);
      }
      if (v59) {
        operator delete(v59);
      }
    }
  }
}

void sub_1006A782C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1006A78A0(void *a1)
{
  *a1 = off_1022FD0C0;
  sub_1006A79C8(a1 + 192);
  uint64_t v2 = (void *)a1[189];
  if (v2)
  {
    a1[190] = v2;
    operator delete(v2);
  }
  sub_1006ADDD8(a1 + 181);
  unint64_t v3 = (std::__shared_weak_count *)a1[180];
  if (v3) {
    sub_1000DB0A0(v3);
  }
  uint64_t v4 = a1[172];
  a1[172] = 0;
  if (v4) {
    sub_1006A7A4C((uint64_t)(a1 + 172), v4);
  }
  unint64_t v5 = (uint64_t *)a1[59];
  a1[59] = 0;
  if (v5) {
    sub_1006A7AA8((uint64_t)(a1 + 59), v5);
  }
  uint64_t v6 = a1[58];
  a1[58] = 0;
  if (v6) {
    operator delete();
  }
  uint64_t v7 = a1[54];
  a1[54] = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  unint64_t v8 = (uint64_t *)a1[53];
  a1[53] = 0;
  if (v8) {
    sub_1006A7B2C((uint64_t)(a1 + 53), v8);
  }
  a1[5] = off_1022C26F8;
  sub_1006A7C78(a1 + 37);
  sub_1004F4578(a1 + 7);
  return a1;
}

void *sub_1006A79C8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1006A7A4C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = *(void **)a2;
    if (*(void *)a2)
    {
      *(void *)(a2 + 8) = v2;
      operator delete(v2);
    }
    operator delete();
  }
}

void sub_1006A7AA8(uint64_t a1, uint64_t *a2)
{
  if (a2)
  {
    sub_1006ADDD8(a2 + 3);
    uint64_t v3 = *a2;
    *a2 = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 32))(v3);
    }
    operator delete();
  }
}

void sub_1006A7B2C(uint64_t a1, uint64_t *a2)
{
  if (a2)
  {
    sub_1006ADDD8(a2 + 9);
    uint64_t v3 = *a2;
    *a2 = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 24))(v3);
    }
    operator delete();
  }
}

void *sub_1006A7BB0(void *a1)
{
  *a1 = off_1022C26F8;
  uint64_t v2 = a1 + 2;
  sub_1006A7C78(a1 + 32);
  sub_1004F4578(v2);
  return a1;
}

void sub_1006A7C04(void *a1)
{
  *a1 = off_1022C26F8;
  uint64_t v1 = a1 + 2;
  sub_1006A7C78(a1 + 32);
  sub_1004F4578(v1);

  operator delete();
}

void *sub_1006A7C78(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1006A7CFC(void *a1)
{
  *a1 = off_1022C2750;
  sub_1006A7F78(a1 + 402);
  sub_1006A824C(a1 + 380);
  a1[361] = off_1022C29B0;
  sub_1006A8540(a1 + 376);
  sub_1000D816C(a1 + 363);
  a1[343] = off_1022C2A08;
  sub_1006A8638(a1 + 357);
  sub_1000D80C4(a1 + 345);
  sub_1006A86BC(a1 + 306);
  sub_1006A8FC0(a1 + 277);
  a1[256] = off_1022C2BA8;
  sub_1006A92B4(a1 + 273);
  sub_1003BE294(a1 + 258);
  sub_1006A9338(a1 + 227);
  sub_1006A9540(a1 + 169);
  sub_1006A9D68(a1 + 129);
  sub_1006AAB18(a1 + 85);
  sub_1006AADB0(a1 + 59);
  sub_1006AB65C(a1 + 1);
  return a1;
}

void *sub_1006A7E24(void *a1)
{
  *a1 = off_1022C29B0;
  uint64_t v2 = a1 + 2;
  sub_1006A8540(a1 + 15);
  sub_1000D816C(v2);
  return a1;
}

void *sub_1006A7E78(void *a1)
{
  *a1 = off_1022C2A08;
  uint64_t v2 = a1 + 2;
  sub_1006A8638(a1 + 14);
  sub_1000D80C4(v2);
  return a1;
}

void *sub_1006A7ED4(void *a1)
{
  *a1 = off_1022C2BA8;
  uint64_t v2 = a1 + 2;
  sub_1006A92B4(a1 + 17);
  sub_1003BE294(v2);
  return a1;
}

void sub_1006A7F40(void *a1)
{
  sub_1006A7CFC(a1);

  operator delete();
}

void *sub_1006A7F78(void *a1)
{
  *a1 = off_1022C2870;
  uint64_t v2 = a1 + 17;
  sub_1006ADD54(a1 + 21);
  *a1 = off_1022C28E0;
  sub_1006A8174(v2);
  sub_1003BE294(a1 + 2);
  return a1;
}

void *sub_1006A7FFC(void *a1)
{
  *a1 = off_1022C28E0;
  uint64_t v2 = a1 + 2;
  sub_1006A8174(a1 + 17);
  sub_1003BE294(v2);
  return a1;
}

void sub_1006A8050(void *a1)
{
  sub_1006A7F78(a1);

  operator delete();
}

uint64_t sub_1006A8088(uint64_t a1)
{
  if (!*(void *)(a1 + 192)) {
    return 0;
  }
  uint64_t v1 = 1;
  if ((sub_1006A81F8(a1 + 168, 1) & 1) == 0) {
    return 0;
  }
  return v1;
}

BOOL sub_1006A80C8(uint64_t a1)
{
  return *(void *)(a1 + 192) && (sub_1006A81F8(a1 + 168, 0) & 1) != 0;
}

void sub_1006A8100(void *a1)
{
  *a1 = off_1022C28E0;
  uint64_t v1 = a1 + 2;
  sub_1006A8174(a1 + 17);
  sub_1003BE294(v1);

  operator delete();
}

void *sub_1006A8174(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_1006A81F8(uint64_t a1, char a2)
{
  char v4 = a2;
  uint64_t v2 = *(void *)(a1 + 24);
  if (!v2) {
    sub_10015E48C();
  }
  return (*(uint64_t (**)(uint64_t, char *))(*(void *)v2 + 48))(v2, &v4);
}

void *sub_1006A824C(void *a1)
{
  *a1 = off_1022C2910;
  uint64_t v2 = a1 + 14;
  sub_1006ADD54(a1 + 18);
  *a1 = off_1022C2980;
  sub_1006A8448(v2);
  sub_1000D80C4(a1 + 2);
  return a1;
}

void *sub_1006A82D0(void *a1)
{
  *a1 = off_1022C2980;
  uint64_t v2 = a1 + 2;
  sub_1006A8448(a1 + 14);
  sub_1000D80C4(v2);
  return a1;
}

void sub_1006A8324(void *a1)
{
  sub_1006A824C(a1);

  operator delete();
}

uint64_t sub_1006A835C(uint64_t a1)
{
  if (!*(void *)(a1 + 168)) {
    return 0;
  }
  uint64_t v1 = 1;
  if ((sub_1006A81F8(a1 + 144, 1) & 1) == 0) {
    return 0;
  }
  return v1;
}

BOOL sub_1006A839C(uint64_t a1)
{
  return *(void *)(a1 + 168) && (sub_1006A81F8(a1 + 144, 0) & 1) != 0;
}

void sub_1006A83D4(void *a1)
{
  *a1 = off_1022C2980;
  uint64_t v1 = a1 + 2;
  sub_1006A8448(a1 + 14);
  sub_1000D80C4(v1);

  operator delete();
}

void *sub_1006A8448(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1006A84CC(void *a1)
{
  *a1 = off_1022C29B0;
  uint64_t v1 = a1 + 2;
  sub_1006A8540(a1 + 15);
  sub_1000D816C(v1);

  operator delete();
}

void *sub_1006A8540(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1006A85C4(void *a1)
{
  *a1 = off_1022C2A08;
  uint64_t v1 = a1 + 2;
  sub_1006A8638(a1 + 14);
  sub_1000D80C4(v1);

  operator delete();
}

void *sub_1006A8638(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1006A86BC(void *a1)
{
  *a1 = off_1022C2A60;
  uint64_t v2 = a1[36];
  a1[36] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *a1 = off_1022C2AD8;
  sub_1006A8C1C(a1 + 31);
  sub_1000D801C(a1 + 2);
  return a1;
}

void *sub_1006A875C(void *a1)
{
  *a1 = off_1022C2AD8;
  uint64_t v2 = a1 + 2;
  sub_1006A8C1C(a1 + 31);
  sub_1000D801C(v2);
  return a1;
}

void sub_1006A87B0(void *a1)
{
  sub_1006A86BC(a1);

  operator delete();
}

uint64_t sub_1006A87E8(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    uint64_t v6 = "Swim";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "activate src %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    char v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLSourceFromNotifier<CLSwimEntry>::enable() const [Data_T = CLSwimEntry]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  [*(id *)(*(void *)(a1 + 288) + 16) register:*(void *)(*(void *)(a1 + 288) + 8) forNotification:0 registrationInfo:0];
  return 1;
}

uint64_t sub_1006A89BC(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    uint64_t v6 = "Swim";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "deactivate src %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    char v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLSourceFromNotifier<CLSwimEntry>::disable() const [Data_T = CLSwimEntry]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  [*(id *)(*(void *)(a1 + 288) + 16) unregister:*(void *)(*(void *)(a1 + 288) + 8) forNotification:0];
  return 1;
}

void sub_1006A8B8C(uint64_t a1, uint64_t a2, _DWORD *a3, long long *a4)
{
  if ((*a3 + 1) <= 1) {
    sub_1006A8CA0(a1, a4);
  }
}

void sub_1006A8BA8(void *a1)
{
  *a1 = off_1022C2AD8;
  uint64_t v1 = a1 + 2;
  sub_1006A8C1C(a1 + 31);
  sub_1000D801C(v1);

  operator delete();
}

void *sub_1006A8C1C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1006A8CA0(uint64_t a1, long long *a2)
{
  long long v3 = a2[7];
  long long v32 = a2[6];
  long long v33 = v3;
  long long v34 = a2[8];
  uint64_t v35 = *((void *)a2 + 18);
  long long v4 = a2[3];
  long long v28 = a2[2];
  long long v29 = v4;
  long long v5 = a2[5];
  long long v30 = a2[4];
  long long v31 = v5;
  long long v6 = a2[1];
  long long v26 = *a2;
  long long v27 = v6;
  uint64_t v7 = *(void *)(a1 + 272);
  if (v7) {
    (*(void (**)(uint64_t, long long *))(*(void *)v7 + 48))(v7, &v26);
  }
  uint64_t v8 = *(void *)(a1 + 56);
  if (v8)
  {
    unint64_t v9 = v8 + *(void *)(a1 + 48) - 1;
    uint64_t v10 = *(void ***)(a1 + 24);
    double v11 = *((double *)v10[v9 / 0x1A] + 19 * (v9 % 0x1A) + 5);
    if (v11 > *((double *)&v28 + 1))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      *(void *)(a1 + 56) = 0;
      unint64_t v13 = v12 - (void)v10;
      if (v13 >= 0x11)
      {
        do
        {
          operator delete(*v10);
          uint64_t v14 = *(void *)(a1 + 32);
          uint64_t v10 = (void **)(*(void *)(a1 + 24) + 8);
          *(void *)(a1 + 24) = v10;
          unint64_t v13 = v14 - (void)v10;
        }
        while (v13 > 0x10);
      }
      if (v13 >> 3 == 1)
      {
        uint64_t v15 = 13;
      }
      else
      {
        if (v13 >> 3 != 2)
        {
LABEL_12:
          if (qword_102418FD0 != -1) {
            dispatch_once(&qword_102418FD0, &stru_1022C2688);
          }
          uint64_t v16 = qword_102418FD8;
          if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            uint64_t v23 = *((void *)&v28 + 1);
            __int16 v24 = 2048;
            double v25 = v11;
            _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "time rollback on add, newItemTime, %f, lastItemTime, %f", buf, 0x16u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102418FD0 != -1) {
              dispatch_once(&qword_102418FD0, &stru_1022C2688);
            }
            uint64_t v21 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLSourceBuffer<CLSwimEntry>::add(const T &) [T = CLSwimEntry]", "%s\n", v21);
            if (v21 != (char *)buf) {
              free(v21);
            }
          }
          goto LABEL_17;
        }
        uint64_t v15 = 26;
      }
      *(void *)(a1 + 48) = v15;
      goto LABEL_12;
    }
  }
LABEL_17:
  sub_10041EF18((void *)(a1 + 16), (uint64_t)&v26);
  long long v17 = v33;
  *(_OWORD *)(a1 + 192) = v32;
  *(_OWORD *)(a1 + 208) = v17;
  *(_OWORD *)(a1 + 224) = v34;
  *(void *)(a1 + 240) = v35;
  long long v18 = v29;
  *(_OWORD *)(a1 + 128) = v28;
  *(_OWORD *)(a1 + 144) = v18;
  long long v19 = v31;
  *(_OWORD *)(a1 + 160) = v30;
  *(_OWORD *)(a1 + 176) = v19;
  long long v20 = v27;
  *(_OWORD *)(a1 + 96) = v26;
  *(_OWORD *)(a1 + 112) = v20;
}

void *sub_1006A8FC0(void *a1)
{
  *a1 = off_1022C2B08;
  uint64_t v2 = a1 + 21;
  sub_1006ADD54(a1 + 25);
  *a1 = off_1022C2B78;
  sub_1006A91BC(v2);
  sub_10050757C(a1 + 2);
  return a1;
}

void *sub_1006A9044(void *a1)
{
  *a1 = off_1022C2B78;
  uint64_t v2 = a1 + 2;
  sub_1006A91BC(a1 + 21);
  sub_10050757C(v2);
  return a1;
}

void sub_1006A9098(void *a1)
{
  sub_1006A8FC0(a1);

  operator delete();
}

uint64_t sub_1006A90D0(uint64_t a1)
{
  if (!*(void *)(a1 + 224)) {
    return 0;
  }
  uint64_t v1 = 1;
  if ((sub_1006A81F8(a1 + 200, 1) & 1) == 0) {
    return 0;
  }
  return v1;
}

BOOL sub_1006A9110(uint64_t a1)
{
  return *(void *)(a1 + 224) && (sub_1006A81F8(a1 + 200, 0) & 1) != 0;
}

void sub_1006A9148(void *a1)
{
  *a1 = off_1022C2B78;
  uint64_t v1 = a1 + 2;
  sub_1006A91BC(a1 + 21);
  sub_10050757C(v1);

  operator delete();
}

void *sub_1006A91BC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1006A9240(void *a1)
{
  *a1 = off_1022C2BA8;
  uint64_t v1 = a1 + 2;
  sub_1006A92B4(a1 + 17);
  sub_1003BE294(v1);

  operator delete();
}

void *sub_1006A92B4(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1006A9338(void *a1)
{
  *a1 = off_1022C2C00;
  uint64_t v2 = a1 + 21;
  sub_1006ADD54(a1 + 25);
  *a1 = off_1022C2C70;
  sub_1006A94BC(v2);
  sub_10050757C(a1 + 2);
  return a1;
}

void *sub_1006A93BC(void *a1)
{
  *a1 = off_1022C2C70;
  uint64_t v2 = a1 + 2;
  sub_1006A94BC(a1 + 21);
  sub_10050757C(v2);
  return a1;
}

void sub_1006A9410(void *a1)
{
  sub_1006A9338(a1);

  operator delete();
}

void sub_1006A9448(void *a1)
{
  *a1 = off_1022C2C70;
  uint64_t v1 = a1 + 2;
  sub_1006A94BC(a1 + 21);
  sub_10050757C(v1);

  operator delete();
}

void *sub_1006A94BC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1006A9540(void *a1)
{
  *a1 = off_1022C2CA0;
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    uint64_t v7 = "ExtendedStepCount";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "disable message src %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual CLSourceFromNotifier<CLExtendedStepCountEntry>::~CLSourceFromNotifier() [Data_T = CLExtendedStepCountEntry]", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  [*(id *)(a1[57] + 16) unregister:*(void *)(a1[57] + 8) forNotification:1];
  uint64_t v3 = a1[57];
  a1[57] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *a1 = off_1022C2D18;
  sub_1006A9C3C(a1 + 52);
  sub_1006A9CC0(a1 + 2);
  return a1;
}

void sub_1006A978C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

void *sub_1006A9798(void *a1)
{
  *a1 = off_1022C2D18;
  uint64_t v2 = a1 + 2;
  sub_1006A9C3C(a1 + 52);
  sub_1006A9CC0(v2);
  return a1;
}

void sub_1006A97EC(void *a1)
{
  sub_1006A9540(a1);

  operator delete();
}

uint64_t sub_1006A9824(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    long long v6 = "ExtendedStepCount";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "activate src %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLSourceFromNotifier<CLExtendedStepCountEntry>::enable() const [Data_T = CLExtendedStepCountEntry]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  [*(id *)(*(void *)(a1 + 456) + 16) register:*(void *)(*(void *)(a1 + 456) + 8) forNotification:1 registrationInfo:0];
  return 1;
}

uint64_t sub_1006A99F8(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    long long v6 = "ExtendedStepCount";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "deactivate src %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLSourceFromNotifier<CLExtendedStepCountEntry>::disable() const [Data_T = CLExtendedStepCountEntry]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  [*(id *)(*(void *)(a1 + 456) + 16) unregister:*(void *)(*(void *)(a1 + 456) + 8) forNotification:1];
  return 1;
}

void sub_1006A9BC8(void *a1)
{
  *a1 = off_1022C2D18;
  uint64_t v1 = a1 + 2;
  sub_1006A9C3C(a1 + 52);
  sub_1006A9CC0(v1);

  operator delete();
}

void *sub_1006A9C3C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_1006A9CC0(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 8;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 16;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000D7EB4((uint64_t)a1);
}

void *sub_1006A9D68(void *a1)
{
  *a1 = off_1022C2D48;
  uint64_t v2 = a1[39];
  a1[39] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *a1 = off_1022C2DC0;
  sub_1006AA2C8(a1 + 34);
  sub_1006AA34C(a1 + 2);
  return a1;
}

void *sub_1006A9E08(void *a1)
{
  *a1 = off_1022C2DC0;
  uint64_t v2 = a1 + 2;
  sub_1006AA2C8(a1 + 34);
  sub_1006AA34C(v2);
  return a1;
}

void sub_1006A9E5C(void *a1)
{
  sub_1006A9D68(a1);

  operator delete();
}

uint64_t sub_1006A9E94(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    uint64_t v6 = "StepCount";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "activate src %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    unint64_t v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLSourceFromNotifier<CLStepCountEntry>::enable() const [Data_T = CLStepCountEntry]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  [*(id *)(*(void *)(a1 + 312) + 16) register:*(void *)(*(void *)(a1 + 312) + 8) forNotification:0 registrationInfo:0];
  return 1;
}

uint64_t sub_1006AA068(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    uint64_t v6 = "StepCount";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "deactivate src %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    unint64_t v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLSourceFromNotifier<CLStepCountEntry>::disable() const [Data_T = CLStepCountEntry]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  [*(id *)(*(void *)(a1 + 312) + 16) unregister:*(void *)(*(void *)(a1 + 312) + 8) forNotification:0];
  return 1;
}

void sub_1006AA238(uint64_t a1, uint64_t a2, _DWORD *a3, long long *a4)
{
  if ((*a3 + 1) <= 1) {
    sub_1006AA3F4(a1, a4);
  }
}

void sub_1006AA254(void *a1)
{
  *a1 = off_1022C2DC0;
  uint64_t v1 = a1 + 2;
  sub_1006AA2C8(a1 + 34);
  sub_1006AA34C(v1);

  operator delete();
}

void *sub_1006AA2C8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_1006AA34C(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 11;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 23;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000D7EB4((uint64_t)a1);
}

void sub_1006AA3F4(uint64_t a1, long long *a2)
{
  long long v3 = a2[9];
  long long v32 = a2[8];
  long long v33 = v3;
  long long v34 = a2[10];
  long long v4 = a2[5];
  long long v28 = a2[4];
  long long v29 = v4;
  long long v5 = a2[7];
  long long v30 = a2[6];
  long long v31 = v5;
  long long v6 = a2[1];
  long long v24 = *a2;
  long long v25 = v6;
  long long v7 = a2[3];
  long long v26 = a2[2];
  long long v27 = v7;
  uint64_t v8 = *(void *)(a1 + 296);
  if (v8) {
    (*(void (**)(uint64_t, long long *))(*(void *)v8 + 48))(v8, &v24);
  }
  uint64_t v9 = *(void *)(a1 + 56);
  if (v9)
  {
    unint64_t v10 = v9 + *(void *)(a1 + 48) - 1;
    double v11 = *(void ***)(a1 + 24);
    double v12 = *((double *)v11[v10 / 0x17] + 22 * (v10 % 0x17) + 1);
    if (v12 > *((double *)&v24 + 1))
    {
      uint64_t v13 = *(void *)(a1 + 32);
      *(void *)(a1 + 56) = 0;
      unint64_t v14 = v13 - (void)v11;
      if (v14 >= 0x11)
      {
        do
        {
          operator delete(*v11);
          uint64_t v15 = *(void *)(a1 + 32);
          double v11 = (void **)(*(void *)(a1 + 24) + 8);
          *(void *)(a1 + 24) = v11;
          unint64_t v14 = v15 - (void)v11;
        }
        while (v14 > 0x10);
      }
      if (v14 >> 3 == 1)
      {
        uint64_t v16 = 11;
      }
      else
      {
        if (v14 >> 3 != 2)
        {
LABEL_12:
          if (qword_102418FD0 != -1) {
            dispatch_once(&qword_102418FD0, &stru_1022C2688);
          }
          long long v17 = qword_102418FD8;
          if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            uint64_t v40 = *((void *)&v24 + 1);
            __int16 v41 = 2048;
            double v42 = v12;
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "time rollback on add, newItemTime, %f, lastItemTime, %f", buf, 0x16u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102418FD0 != -1) {
              dispatch_once(&qword_102418FD0, &stru_1022C2688);
            }
            int v35 = 134218240;
            uint64_t v36 = *((void *)&v24 + 1);
            __int16 v37 = 2048;
            double v38 = v12;
            uint64_t v23 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLSourceBuffer<CLStepCountEntry>::add(const T &) [T = CLStepCountEntry]", "%s\n", v23);
            if (v23 != (char *)buf) {
              free(v23);
            }
          }
          goto LABEL_17;
        }
        uint64_t v16 = 23;
      }
      *(void *)(a1 + 48) = v16;
      goto LABEL_12;
    }
  }
LABEL_17:
  sub_1006AA720((void *)(a1 + 16), &v24);
  long long v18 = v33;
  *(_OWORD *)(a1 + 224) = v32;
  *(_OWORD *)(a1 + 240) = v18;
  *(_OWORD *)(a1 + 256) = v34;
  long long v19 = v29;
  *(_OWORD *)(a1 + 160) = v28;
  *(_OWORD *)(a1 + 176) = v19;
  long long v20 = v31;
  *(_OWORD *)(a1 + 192) = v30;
  *(_OWORD *)(a1 + 208) = v20;
  long long v21 = v25;
  *(_OWORD *)(a1 + 96) = v24;
  *(_OWORD *)(a1 + 112) = v21;
  long long v22 = v27;
  *(_OWORD *)(a1 + 128) = v26;
  *(_OWORD *)(a1 + 144) = v22;
}

__n128 sub_1006AA720(void *a1, long long *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 23 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_1006AA800(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x17)) + 176 * (v7 % 0x17);
  long long v9 = *a2;
  long long v10 = a2[2];
  *(_OWORD *)(v8 + 16) = a2[1];
  *(_OWORD *)(v8 + 32) = v10;
  *(_OWORD *)unint64_t v8 = v9;
  long long v11 = a2[3];
  long long v12 = a2[4];
  long long v13 = a2[6];
  *(_OWORD *)(v8 + 80) = a2[5];
  *(_OWORD *)(v8 + 96) = v13;
  *(_OWORD *)(v8 + 48) = v11;
  *(_OWORD *)(v8 + 64) = v12;
  __n128 result = (__n128)a2[7];
  long long v15 = a2[8];
  long long v16 = a2[10];
  *(_OWORD *)(v8 + 144) = a2[9];
  *(_OWORD *)(v8 + 160) = v16;
  *(__n128 *)(v8 + 112) = result;
  *(_OWORD *)(v8 + 128) = v15;
  ++a1[5];
  return result;
}

void sub_1006AA800(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x17;
  unint64_t v4 = v2 - 23;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    long long v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      long long v34 = (char *)sub_1000DA54C(v5, v33);
      int v35 = &v34[8 * (v33 >> 2)];
      __int16 v37 = &v34[8 * v36];
      double v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        __int16 v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)__int16 v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    long long v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      long long v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFD0uLL);
      sub_10017F0B4(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFD0uLL);
    sub_1002D02D8((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    long long v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      long long v34 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v46);
      int v35 = &v34[8 * (v46 >> 2)];
      __int16 v37 = &v34[8 * v47];
      unint64_t v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        unint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)unint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      uint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_1000DA54C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFD0uLL);
  sub_1000DA434(&v54, &v53);
  long long v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1002D03F8((uint64_t)&v54, v27);
  }
  long long v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1006AAACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_1006AAB18(void *a1)
{
  *a1 = off_1022C2DF0;
  sub_1006ADD54(a1 + 40);
  *a1 = off_1022C2E60;
  sub_1005E73C4(a1 + 36);
  sub_1006AAD08(a1 + 2);
  return a1;
}

void *sub_1006AAB90(void *a1)
{
  *a1 = off_1022C2E60;
  unint64_t v2 = a1 + 2;
  sub_1005E73C4(a1 + 36);
  sub_1006AAD08(v2);
  return a1;
}

void sub_1006AABE4(void *a1)
{
  sub_1006AAB18(a1);

  operator delete();
}

uint64_t sub_1006AAC1C(uint64_t a1)
{
  if (!*(void *)(a1 + 344)) {
    return 0;
  }
  uint64_t v1 = 1;
  if ((sub_1006A81F8(a1 + 320, 1) & 1) == 0) {
    return 0;
  }
  return v1;
}

BOOL sub_1006AAC5C(uint64_t a1)
{
  return *(void *)(a1 + 344) && (sub_1006A81F8(a1 + 320, 0) & 1) != 0;
}

void sub_1006AAC94(void *a1)
{
  *a1 = off_1022C2E60;
  uint64_t v1 = a1 + 2;
  sub_1005E73C4(a1 + 36);
  sub_1006AAD08(v1);

  operator delete();
}

uint64_t sub_1006AAD08(void *a1)
{
  unint64_t v2 = (void **)a1[1];
  BOOL v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      BOOL v3 = (void **)a1[2];
      unint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 10;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 21;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    unint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000D7EB4((uint64_t)a1);
}

void *sub_1006AADB0(void *a1)
{
  *a1 = off_1022C2E90;
  uint64_t v2 = a1[25];
  a1[25] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *a1 = off_1022C2F08;
  sub_1006AB310(a1 + 20);
  sub_100507624(a1 + 2);
  return a1;
}

void *sub_1006AAE50(void *a1)
{
  *a1 = off_1022C2F08;
  uint64_t v2 = a1 + 2;
  sub_1006AB310(a1 + 20);
  sub_100507624(v2);
  return a1;
}

void sub_1006AAEA4(void *a1)
{
  sub_1006AADB0(a1);

  operator delete();
}

uint64_t sub_1006AAEDC(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    uint64_t v6 = "HeartRate";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "activate src %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    unint64_t v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLSourceFromNotifier<CLCatherineData>::enable() const [Data_T = CLCatherineData]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  [*(id *)(*(void *)(a1 + 200) + 16) register:*(void *)(*(void *)(a1 + 200) + 8) forNotification:4 registrationInfo:0];
  return 1;
}

uint64_t sub_1006AB0B0(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    uint64_t v6 = "HeartRate";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "deactivate src %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    unint64_t v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLSourceFromNotifier<CLCatherineData>::disable() const [Data_T = CLCatherineData]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  [*(id *)(*(void *)(a1 + 200) + 16) unregister:*(void *)(*(void *)(a1 + 200) + 8) forNotification:4];
  return 1;
}

void sub_1006AB280(uint64_t a1, uint64_t a2, _DWORD *a3, long long *a4)
{
  if (*a3 == 4 || *a3 == -1) {
    sub_1006AB394(a1, a4);
  }
}

void sub_1006AB29C(void *a1)
{
  *a1 = off_1022C2F08;
  uint64_t v1 = a1 + 2;
  sub_1006AB310(a1 + 20);
  sub_100507624(v1);

  operator delete();
}

void *sub_1006AB310(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1006AB394(uint64_t a1, long long *a2)
{
  long long v3 = a2[1];
  long long v18 = *a2;
  long long v19 = v3;
  long long v4 = a2[3];
  long long v20 = a2[2];
  long long v21 = v4;
  uint64_t v5 = *(void *)(a1 + 184);
  if (v5) {
    (*(void (**)(uint64_t, long long *))(*(void *)v5 + 48))(v5, &v18);
  }
  uint64_t v6 = *(void *)(a1 + 56);
  if (v6)
  {
    unint64_t v7 = v6 + *(void *)(a1 + 48) - 1;
    unint64_t v8 = *(void ***)(a1 + 24);
    double v9 = (*(double **)((char *)v8 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8)))[8 * (v7 & 0x3F) + 5];
    if (v9 > *((double *)&v20 + 1))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(void *)(a1 + 56) = 0;
      unint64_t v11 = v10 - (void)v8;
      if (v11 >= 0x11)
      {
        do
        {
          operator delete(*v8);
          uint64_t v12 = *(void *)(a1 + 32);
          unint64_t v8 = (void **)(*(void *)(a1 + 24) + 8);
          *(void *)(a1 + 24) = v8;
          unint64_t v11 = v12 - (void)v8;
        }
        while (v11 > 0x10);
      }
      if (v11 >> 3 == 1)
      {
        uint64_t v13 = 32;
      }
      else
      {
        if (v11 >> 3 != 2)
        {
LABEL_12:
          if (qword_102418FD0 != -1) {
            dispatch_once(&qword_102418FD0, &stru_1022C2688);
          }
          BOOL v14 = qword_102418FD8;
          if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
          {
            *(_DWORD *)int32x2_t buf = 134218240;
            uint64_t v27 = *((void *)&v20 + 1);
            __int16 v28 = 2048;
            double v29 = v9;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "time rollback on add, newItemTime, %f, lastItemTime, %f", buf, 0x16u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102418FD0 != -1) {
              dispatch_once(&qword_102418FD0, &stru_1022C2688);
            }
            int v22 = 134218240;
            uint64_t v23 = *((void *)&v20 + 1);
            __int16 v24 = 2048;
            double v25 = v9;
            uint64_t v17 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLSourceBuffer<CLCatherineData>::add(const T &) [T = CLCatherineData]", "%s\n", v17);
            if (v17 != (char *)buf) {
              free(v17);
            }
          }
          goto LABEL_17;
        }
        uint64_t v13 = 64;
      }
      *(void *)(a1 + 48) = v13;
      goto LABEL_12;
    }
  }
LABEL_17:
  sub_100507F8C((void *)(a1 + 16), (uint64_t)&v18);
  long long v15 = v19;
  *(_OWORD *)(a1 + 96) = v18;
  *(_OWORD *)(a1 + 112) = v15;
  long long v16 = v21;
  *(_OWORD *)(a1 + 128) = v20;
  *(_OWORD *)(a1 + 144) = v16;
}

void *sub_1006AB65C(void *a1)
{
  *a1 = off_1022C2F38;
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    unint64_t v7 = "Elevation";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "disable message src %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    uint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual CLSourceFromNotifier<CLElevationChangeEntry>::~CLSourceFromNotifier() [Data_T = CLElevationChangeEntry]", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  [*(id *)(a1[57] + 16) unregister:*(void *)(a1[57] + 8) forNotification:7];
  uint64_t v3 = a1[57];
  a1[57] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  sub_1006AB88C(a1);
  return a1;
}

void sub_1006AB880(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

void *sub_1006AB88C(void *a1)
{
  *a1 = &off_1022C2FC0;
  uint64_t v2 = a1 + 1;
  sub_1006ABD00(a1 + 52);
  sub_100507624(a1 + 34);
  sub_1006ABD84(v2);
  return a1;
}

void sub_1006AB8E8(void *a1)
{
  sub_1006AB65C(a1);

  operator delete();
}

uint64_t sub_1006AB920(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    uint64_t v6 = "Elevation";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "activate src %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLSourceFromNotifier<CLElevationChangeEntry>::enable() const [Data_T = CLElevationChangeEntry]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  [*(id *)(*(void *)(a1 + 456) + 16) register:*(void *)(*(void *)(a1 + 456) + 8) forNotification:3 registrationInfo:0];
  return 1;
}

uint64_t sub_1006ABAF4(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C26A8);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int32x2_t buf = 136315138;
    uint64_t v6 = "Elevation";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "deactivate src %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C26A8);
    }
    long long v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLSourceFromNotifier<CLElevationChangeEntry>::disable() const [Data_T = CLElevationChangeEntry]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  [*(id *)(*(void *)(a1 + 456) + 16) unregister:*(void *)(*(void *)(a1 + 456) + 8) forNotification:3];
  return 1;
}

void sub_1006ABCC8(void *a1)
{
  sub_1006AB88C(a1);

  operator delete();
}

void *sub_1006ABD00(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1006ABD84(void *a1)
{
  sub_1003A7340(a1 + 26);
  sub_1003A7340(a1 + 20);
  sub_1003A7340(a1 + 14);
  uint64_t v2 = (void *)a1[11];
  if (v2)
  {
    a1[12] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_1006ABDD0(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x40;
  unint64_t v4 = v2 - 64;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    double v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      long long v34 = (char *)sub_1000DA54C(v5, v33);
      int v35 = &v34[8 * (v33 >> 2)];
      __int16 v37 = &v34[8 * v36];
      double v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        __int16 v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)__int16 v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    long long v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      double v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      sub_10017F0B4(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    sub_1002D02D8((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    double v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      long long v34 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v46);
      int v35 = &v34[8 * (v46 >> 2)];
      __int16 v37 = &v34[8 * v47];
      unint64_t v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        unint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)unint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      uint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_1000DA54C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1000uLL);
  sub_1000DA434(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1002D03F8((uint64_t)&v54, v27);
  }
  double v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1006AC09C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1006AC0E8(uint64_t result)
{
  if (*(double *)(result + 64) != -1.0)
  {
    uint64_t v1 = result;
    if (!*(unsigned char *)(result + 8))
    {
      __n128 result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16))(result);
      if (result)
      {
        *(unsigned char *)(v1 + 8) = 1;
      }
      else if (!*(unsigned char *)(v1 + 8))
      {
        double v2 = 2.22507386e-308;
        goto LABEL_7;
      }
    }
    double v2 = *(double *)(v1 + 64) + 30.0;
LABEL_7:
    *(double *)(v1 + 72) = v2;
  }
  return result;
}

void sub_1006AC17C(id a1)
{
  qword_1024192A8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "IndoorOutdoor");
}

uint64_t sub_1006AC1AC(uint64_t a1, void *a2)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  unint64_t v3 = a2[4];
  uint64_t v4 = a2[1];
  if (a2[2] == v4)
  {
    uint64_t v5 = 0;
    unint64_t v8 = 0;
    unint64_t v7 = (void *)(v4 + 8 * ((a2[5] + v3) / 0x18));
  }
  else
  {
    uint64_t v5 = (long long *)(*(void *)(v4 + 8 * (v3 / 0x18)) + 168 * (v3 % 0x18));
    unint64_t v6 = a2[5] + v3;
    unint64_t v7 = (void *)(v4 + 8 * (v6 / 0x18));
    unint64_t v8 = (long long *)(*v7 + 168 * (v6 % 0x18));
  }
  sub_1006AC274((void *)a1, (void *)(v4 + 8 * (v3 / 0x18)), v5, v7, v8);
  return a1;
}

void sub_1006AC260(_Unwind_Exception *a1)
{
  sub_1000D7EB4(v1);
  _Unwind_Resume(a1);
}

void *sub_1006AC274(void *a1, void *a2, long long *a3, void *a4, long long *a5)
{
  if (a5 == a3) {
    unint64_t v5 = 0;
  }
  else {
    unint64_t v5 = 24 * (a4 - a2)
  }
       - 0x30C30C30C30C30C3 * (((uint64_t)a5 - *a4) >> 3)
       + 0x30C30C30C30C30C3 * (((uint64_t)a3 - *a2) >> 3);
  return sub_1006AC2D8(a1, a2, a3, v5);
}

void *sub_1006AC2D8(void *a1, void *a2, long long *a3, unint64_t a4)
{
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  if (v9 == v8) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = 24 * ((v9 - v8) >> 3) - 1;
  }
  unint64_t v11 = a1[5] + a1[4];
  unint64_t v12 = v10 - v11;
  if (a4 > v12)
  {
    sub_1006AC47C(a1, a4 - v12);
    uint64_t v8 = a1[1];
    uint64_t v9 = a1[2];
    unint64_t v11 = a1[4] + a1[5];
  }
  uint64_t v13 = (void *)(v8 + 8 * (v11 / 0x18));
  if (v9 == v8) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *v13 + 168 * (v11 % 0x18);
  }
  long long v30 = (void *)(v8 + 8 * (v11 / 0x18));
  unint64_t v31 = v14;
  __n128 result = sub_100173CEC(&v30, a4);
  uint64_t v16 = v31;
  if (v14 != v31)
  {
    uint64_t v17 = v30;
    do
    {
      if (v13 == v17) {
        uint64_t v18 = v16;
      }
      else {
        uint64_t v18 = *v13 + 4032;
      }
      if (v14 == v18)
      {
        uint64_t v18 = v14;
      }
      else
      {
        unint64_t v19 = v14;
        do
        {
          long long v20 = *a3;
          long long v21 = a3[2];
          *(_OWORD *)(v19 + 16) = a3[1];
          *(_OWORD *)(v19 + 32) = v21;
          *(_OWORD *)unint64_t v19 = v20;
          long long v22 = a3[3];
          long long v23 = a3[4];
          long long v24 = a3[6];
          *(_OWORD *)(v19 + 80) = a3[5];
          *(_OWORD *)(v19 + 96) = v24;
          *(_OWORD *)(v19 + 48) = v22;
          *(_OWORD *)(v19 + 64) = v23;
          long long v25 = a3[7];
          long long v26 = a3[8];
          long long v27 = a3[9];
          *(void *)(v19 + 160) = *((void *)a3 + 20);
          *(_OWORD *)(v19 + 128) = v26;
          *(_OWORD *)(v19 + 144) = v27;
          *(_OWORD *)(v19 + 112) = v25;
          a3 = (long long *)((char *)a3 + 168);
          if ((long long *)((char *)a3 - *a2) == (long long *)4032)
          {
            uint64_t v28 = (long long *)a2[1];
            ++a2;
            a3 = v28;
          }
          v19 += 168;
        }
        while (v19 != v18);
      }
      a1[5] -= 0x30C30C30C30C30C3 * ((uint64_t)(v18 - v14) >> 3);
      if (v13 == v17) {
        break;
      }
      unint64_t v29 = v13[1];
      ++v13;
      unint64_t v14 = v29;
    }
    while (v29 != v16);
  }
  return result;
}

void sub_1006AC47C(void *a1, unint64_t a2)
{
  unint64_t v3 = (char *)a1[2];
  uint64_t v4 = (uint64_t)&v3[-a1[1]];
  if (v4) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = a2 + 1;
  }
  if (v5 % 0x18) {
    unint64_t v6 = v5 / 0x18 + 1;
  }
  else {
    unint64_t v6 = v5 / 0x18;
  }
  unint64_t v7 = a1[4];
  if (v6 >= v7 / 0x18) {
    unint64_t v8 = v7 / 0x18;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v6 <= v7 / 0x18)
  {
    for (a1[4] = v7 - 24 * v8; v8; --v8)
    {
      uint64_t v16 = (void *)a1[1];
      uint64_t v19 = *v16;
      uint64_t v17 = (char *)(v16 + 1);
      uint64_t v18 = v19;
      a1[1] = v17;
      if (v3 == (char *)a1[3])
      {
        uint64_t v20 = (uint64_t)&v17[-*a1];
        if ((unint64_t)v17 <= *a1)
        {
          if (v3 == (char *)*a1) {
            unint64_t v28 = 1;
          }
          else {
            unint64_t v28 = (uint64_t)&v3[-*a1] >> 2;
          }
          unint64_t v29 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v28);
          unint64_t v31 = &v29[8 * (v28 >> 2)];
          long long v32 = (uint64_t *)a1[1];
          unint64_t v3 = v31;
          uint64_t v33 = a1[2] - (void)v32;
          if (v33)
          {
            unint64_t v3 = &v31[v33 & 0xFFFFFFFFFFFFFFF8];
            uint64_t v34 = 8 * (v33 >> 3);
            int v35 = &v29[8 * (v28 >> 2)];
            do
            {
              uint64_t v36 = *v32++;
              *(void *)int v35 = v36;
              v35 += 8;
              v34 -= 8;
            }
            while (v34);
          }
          __int16 v37 = (char *)*a1;
          *a1 = v29;
          a1[1] = v31;
          a1[2] = v3;
          a1[3] = &v29[8 * v30];
          if (v37)
          {
            operator delete(v37);
            unint64_t v3 = (char *)a1[2];
          }
        }
        else
        {
          uint64_t v21 = v20 >> 3;
          BOOL v22 = v20 >> 3 < -1;
          uint64_t v23 = (v20 >> 3) + 2;
          if (v22) {
            uint64_t v24 = v23;
          }
          else {
            uint64_t v24 = v21 + 1;
          }
          long long v25 = &v17[-8 * (v24 >> 1)];
          int64_t v26 = v3 - v17;
          if (v3 != v17)
          {
            memmove(&v17[-8 * (v24 >> 1)], v17, v3 - v17);
            unint64_t v3 = (char *)a1[1];
          }
          long long v27 = &v3[-8 * (v24 >> 1)];
          unint64_t v3 = &v25[v26];
          a1[1] = v27;
          a1[2] = &v25[v26];
        }
      }
      *(void *)unint64_t v3 = v18;
      unint64_t v3 = (char *)(a1[2] + 8);
      a1[2] = v3;
    }
  }
  else
  {
    unint64_t v9 = v6 - v8;
    uint64_t v10 = a1[3] - *a1;
    if (v6 - v8 <= (v10 >> 3) - (v4 >> 3))
    {
      if (v9)
      {
        while (a1[3] != a1[2])
        {
          __p[0] = operator new(0xFC0uLL);
          sub_10017F0B4(a1, __p);
          --v6;
          if (!--v9) {
            goto LABEL_75;
          }
        }
        for (uint64_t i = 0; i != v9; ++i)
        {
          __p[0] = operator new(0xFC0uLL);
          sub_1002D02D8((uint64_t)a1, __p);
          if (a1[2] - a1[1] == 8) {
            uint64_t v64 = 23;
          }
          else {
            uint64_t v64 = 24;
          }
          uint64_t v65 = v64 + a1[4];
          a1[4] = v65;
        }
        unint64_t v8 = v6;
      }
      else
      {
LABEL_75:
        uint64_t v65 = a1[4];
      }
      a1[4] = v65 - 24 * v8;
      if (v8)
      {
        __int16 v66 = (char *)a1[2];
        do
        {
          int v67 = (void *)a1[1];
          uint64_t v70 = *v67;
          uint64_t v68 = (char *)(v67 + 1);
          uint64_t v69 = v70;
          a1[1] = v68;
          if (v66 == (char *)a1[3])
          {
            uint64_t v71 = (uint64_t)&v68[-*a1];
            if ((unint64_t)v68 <= *a1)
            {
              if (v66 == (char *)*a1) {
                unint64_t v78 = 1;
              }
              else {
                unint64_t v78 = (uint64_t)&v66[-*a1] >> 2;
              }
              uint64_t v79 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v78);
              uint64_t v81 = &v79[8 * (v78 >> 2)];
              long long v82 = (uint64_t *)a1[1];
              __int16 v66 = v81;
              uint64_t v83 = a1[2] - (void)v82;
              if (v83)
              {
                __int16 v66 = &v81[v83 & 0xFFFFFFFFFFFFFFF8];
                uint64_t v84 = 8 * (v83 >> 3);
                long long v85 = &v79[8 * (v78 >> 2)];
                do
                {
                  uint64_t v86 = *v82++;
                  *(void *)long long v85 = v86;
                  v85 += 8;
                  v84 -= 8;
                }
                while (v84);
              }
              long long v87 = (char *)*a1;
              *a1 = v79;
              a1[1] = v81;
              a1[2] = v66;
              a1[3] = &v79[8 * v80];
              if (v87)
              {
                operator delete(v87);
                __int16 v66 = (char *)a1[2];
              }
            }
            else
            {
              uint64_t v72 = v71 >> 3;
              BOOL v22 = v71 >> 3 < -1;
              uint64_t v73 = (v71 >> 3) + 2;
              if (v22) {
                uint64_t v74 = v73;
              }
              else {
                uint64_t v74 = v72 + 1;
              }
              long long v75 = &v68[-8 * (v74 >> 1)];
              int64_t v76 = v66 - v68;
              if (v66 != v68)
              {
                memmove(&v68[-8 * (v74 >> 1)], v68, v66 - v68);
                __int16 v66 = (char *)a1[1];
              }
              uint64_t v77 = &v66[-8 * (v74 >> 1)];
              __int16 v66 = &v75[v76];
              a1[1] = v77;
              a1[2] = &v75[v76];
            }
          }
          *(void *)__int16 v66 = v69;
          __int16 v66 = (char *)(a1[2] + 8);
          a1[2] = v66;
          --v8;
        }
        while (v8);
      }
    }
    else
    {
      uint64_t v11 = v4 >> 3;
      unint64_t v12 = v10 >> 2;
      if (v12 <= v9 + v11) {
        unint64_t v13 = v9 + v11;
      }
      else {
        unint64_t v13 = v12;
      }
      unint64_t v14 = v11 - v8;
      long long v91 = a1 + 3;
      if (v13) {
        uint64_t v15 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v13);
      }
      else {
        uint64_t v15 = 0;
      }
      uint64_t v38 = -24 * v8;
      __p[0] = v15;
      __p[1] = &v15[8 * v14];
      *(void **)&long long v90 = __p[1];
      *((void *)&v90 + 1) = &v15[8 * v13];
      do
      {
        long long v88 = operator new(0xFC0uLL);
        sub_1000DA434(__p, &v88);
        --v9;
      }
      while (v9);
      if (v8)
      {
        uint64_t v39 = (void *)a1[1];
        uint64_t v40 = (char *)v90;
        do
        {
          if (v40 == *((char **)&v90 + 1))
          {
            int64_t v41 = (char *)__p[1] - (char *)__p[0];
            if (__p[1] <= __p[0])
            {
              if (v40 == __p[0]) {
                unint64_t v48 = 1;
              }
              else {
                unint64_t v48 = (v40 - (char *)__p[0]) >> 2;
              }
              uint64_t v49 = (char *)sub_1000DA54C((uint64_t)v91, v48);
              unint64_t v51 = (uint64_t *)__p[1];
              uint64_t v40 = &v49[8 * (v48 >> 2)];
              uint64_t v52 = v90 - (unint64_t)__p[1];
              if ((void *)v90 != __p[1])
              {
                uint64_t v40 = &v49[8 * (v48 >> 2) + (v52 & 0xFFFFFFFFFFFFFFF8)];
                uint64_t v53 = 8 * (v52 >> 3);
                long long v54 = &v49[8 * (v48 >> 2)];
                do
                {
                  uint64_t v55 = *v51++;
                  *(void *)long long v54 = v55;
                  v54 += 8;
                  v53 -= 8;
                }
                while (v53);
              }
              uint64_t v56 = __p[0];
              __p[0] = v49;
              __p[1] = &v49[8 * (v48 >> 2)];
              *(void *)&long long v90 = v40;
              *((void *)&v90 + 1) = &v49[8 * v50];
              if (v56)
              {
                operator delete(v56);
                uint64_t v40 = (char *)v90;
              }
            }
            else
            {
              uint64_t v42 = v41 >> 3;
              BOOL v22 = v41 >> 3 < -1;
              uint64_t v43 = (v41 >> 3) + 2;
              if (v22) {
                uint64_t v44 = v43;
              }
              else {
                uint64_t v44 = v42 + 1;
              }
              uint64_t v45 = (char *)__p[1] - 8 * (v44 >> 1);
              int64_t v46 = v40 - (char *)__p[1];
              if (v40 != __p[1])
              {
                memmove((char *)__p[1] - 8 * (v44 >> 1), __p[1], v40 - (char *)__p[1]);
                uint64_t v40 = (char *)__p[1];
              }
              uint64_t v47 = &v40[-8 * (v44 >> 1)];
              uint64_t v40 = &v45[v46];
              __p[1] = v47;
              *(void *)&long long v90 = &v45[v46];
            }
          }
          *(void *)uint64_t v40 = *v39;
          uint64_t v40 = (char *)(v90 + 8);
          *(void *)&long long v90 = v90 + 8;
          uint64_t v39 = (void *)(a1[1] + 8);
          a1[1] = v39;
          --v8;
        }
        while (v8);
      }
      uint64_t v57 = (void *)a1[2];
      uint64_t v58 = -7 - (void)v57;
      while (v57 != (void *)a1[1])
      {
        --v57;
        v58 += 8;
        sub_1002D03F8((uint64_t)__p, v57);
      }
      int v59 = (char *)*a1;
      long long v60 = *(_OWORD *)__p;
      long long v61 = v90;
      __p[0] = *(void **)a1;
      __p[1] = v57;
      long long v62 = *((_OWORD *)a1 + 1);
      *(_OWORD *)a1 = v60;
      *((_OWORD *)a1 + 1) = v61;
      long long v90 = v62;
      a1[4] += v38;
      if (v57 != (void *)v62) {
        *(void *)&long long v90 = v62 + (-(v62 + v58) & 0xFFFFFFFFFFFFFFF8);
      }
      if (v59) {
        operator delete(v59);
      }
    }
  }
}

void sub_1006AC9B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1006ACA2C(void *a1, void *a2)
{
  if (a1 != a2)
  {
    unint64_t v3 = a2[4];
    uint64_t v4 = a2[1];
    if (a2[2] == v4)
    {
      unint64_t v5 = 0;
      unint64_t v8 = 0;
      unint64_t v7 = (char *)(v4 + 8 * ((a2[5] + v3) / 0x11));
    }
    else
    {
      unint64_t v5 = (unsigned char *)(*(void *)(v4 + 8 * (v3 / 0x11)) + 232 * (v3 % 0x11));
      unint64_t v6 = a2[5] + v3;
      unint64_t v7 = (char *)(v4 + 8 * (v6 / 0x11));
      unint64_t v8 = (unsigned char *)(*(void *)v7 + 232 * (v6 % 0x11));
    }
    sub_1006ACAE4(a1, (char *)(v4 + 8 * (v3 / 0x11)), v5, v7, v8);
  }
  return a1;
}

void *sub_1006ACAE4(void *a1, char *a2, unsigned char *a3, char *a4, unsigned char *a5)
{
  if (a5 == a3) {
    unint64_t v5 = 0;
  }
  else {
    unint64_t v5 = 2 * (a4 - a2)
  }
       + ((a4 - a2) >> 3)
       + 0x34F72C234F72C235 * ((uint64_t)&a5[-*(void *)a4] >> 3)
       - 0x34F72C234F72C235 * ((uint64_t)&a3[-*(void *)a2] >> 3);
  return sub_1006ACB44(a1, a2, a3, v5);
}

void *sub_1006ACB44(void *a1, char *a2, unsigned char *a3, unint64_t a4)
{
  unint64_t v8 = a1[5];
  if (v8 >= a4)
  {
    unint64_t v15 = a1[4];
    uint64_t v16 = a1[1];
    uint64_t v17 = (char *)(v16 + 8 * (v15 / 0x11));
    if (a1[2] == v16) {
      unint64_t v18 = 0;
    }
    else {
      unint64_t v18 = *(void *)v17 + 232 * (v15 % 0x11);
    }
    BOOL v22 = a2;
    uint64_t v23 = a3;
    sub_1001717C4(&v22, a4);
    uint64_t v20 = v22;
    uint64_t v21 = v23;
    BOOL v22 = v17;
    uint64_t v23 = (unsigned char *)v18;
    sub_1006657C0(a2, a3, (unsigned char **)v20, v21, (uint64_t)&v22);
    return (void *)sub_1006ACC90((uint64_t)a1, v22, (uint64_t)v23);
  }
  else
  {
    BOOL v22 = a2;
    uint64_t v23 = a3;
    sub_1001717C4(&v22, v8);
    unint64_t v9 = v22;
    uint64_t v10 = (long long *)v23;
    unint64_t v11 = a1[4];
    uint64_t v12 = a1[1];
    unint64_t v13 = (char *)(v12 + 8 * (v11 / 0x11));
    if (a1[2] == v12) {
      unint64_t v14 = 0;
    }
    else {
      unint64_t v14 = *(void *)v13 + 232 * (v11 % 0x11);
    }
    BOOL v22 = v13;
    uint64_t v23 = (unsigned char *)v14;
    sub_1006657C0(a2, a3, (unsigned char **)v9, v10, (uint64_t)&v22);
    return sub_1006A7140(a1, v9, v10, a4 - a1[5]);
  }
}

uint64_t sub_1006ACC90(uint64_t result, char *a2, uint64_t a3)
{
  unint64_t v3 = (void *)result;
  unint64_t v4 = *(void *)(result + 32);
  unint64_t v5 = v4 + *(void *)(result + 40);
  uint64_t v6 = *(void *)(result + 8);
  uint64_t v7 = *(void *)(result + 16);
  unint64_t v8 = (char *)(v6 + 8 * (v5 / 0x11));
  if (v7 == v6) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *(void *)v8 + 232 * (v5 % 0x11);
  }
  if (v9 != a3)
  {
    uint64_t v10 = 2 * (v8 - a2) + ((v8 - a2) >> 3) + 0x34F72C234F72C235 * ((uint64_t)(v9 - *(void *)v8) >> 3);
    uint64_t v11 = (a3 - *(void *)a2) >> 3;
    uint64_t v12 = v10 - 0x34F72C234F72C235 * v11;
    if (v12 >= 1)
    {
      unint64_t v13 = (char *)(v6 + 8 * (v4 / 0x11));
      if (v7 == v6) {
        unint64_t v14 = 0;
      }
      else {
        unint64_t v14 = *(void *)v13 + 232 * (v4 % 0x11);
      }
      if (a3 == v14) {
        uint64_t v15 = 0;
      }
      else {
        uint64_t v15 = 2 * (a2 - v13)
      }
            + ((a2 - v13) >> 3)
            + 0x34F72C234F72C235 * v11
            - 0x34F72C234F72C235 * ((uint64_t)(v14 - *(void *)v13) >> 3);
      v16[0] = v13;
      v16[1] = v14;
      sub_1001717C4(v16, v15);
      v3[5] -= v12;
      do
        __n128 result = sub_100665598(v3, 1);
      while ((result & 1) != 0);
    }
  }
  return result;
}

uint64_t sub_1006ACE08(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 16), *(void **)(a2 + 16), *(void *)(a2 + 24));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 16);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = v4;
  }
  sub_1006A7010(a1 + 40, (void *)(a2 + 40));
  return a1;
}

void sub_1006ACE7C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006ACE98(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void ***)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  *(void *)(a1 + 40) = 0;
  unint64_t v6 = v5 - (void)v4;
  if (v6 >= 0x11)
  {
    do
    {
      operator delete(*v4);
      uint64_t v7 = *(void *)(a1 + 16);
      long long v4 = (void **)(*(void *)(a1 + 8) + 8);
      *(void *)(a1 + 8) = v4;
      unint64_t v6 = v7 - (void)v4;
    }
    while (v6 > 0x10);
  }
  if (v6 >> 3 == 1)
  {
    uint64_t v8 = 8;
    goto LABEL_7;
  }
  if (v6 >> 3 == 2)
  {
    uint64_t v8 = 17;
LABEL_7:
    *(void *)(a1 + 32) = v8;
  }
  sub_1006ACF3C((void **)a1);
  uint64_t result = sub_1006AD094(a1, a2);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1006ACF3C(void **a1)
{
  if (a1[5])
  {
    sub_100665538((uint64_t)a1, 0);
    sub_100665598(a1, 0);
  }
  else
  {
    unint64_t v3 = a1[1];
    for (uint64_t i = (uint64_t)a1[2]; (void *)i != v3; a1[2] = (void *)i)
    {
      operator delete(*(void **)(i - 8));
      unint64_t v3 = a1[1];
      uint64_t i = (uint64_t)a1[2] - 8;
    }
    a1[4] = 0;
  }

  sub_1006ACFC0(a1);
}

void sub_1006ACFC0(void **a1)
{
  unint64_t v3 = a1[3];
  uint64_t v2 = (uint64_t)(a1 + 3);
  long long v4 = a1[1];
  uint64_t v5 = a1[2];
  unint64_t v6 = (v5 - v4) >> 3;
  if (v6 >= (v3 - (unsigned char *)*a1) >> 3) {
    return;
  }
  if (v5 == v4)
  {
    uint64_t v10 = 0;
    uint64_t v7 = 0;
    goto LABEL_8;
  }
  uint64_t v7 = (char *)sub_1000DA54C(v2, v6);
  uint64_t v8 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v10 = &v7[8 * v9];
  uint64_t v11 = v5 - v8;
  if (v5 == v8)
  {
LABEL_8:
    unint64_t v14 = v5;
    goto LABEL_9;
  }
  uint64_t v12 = 0;
  uint64_t v13 = 8 * (v11 >> 3);
  do
  {
    *(void *)&v7[v12] = *(void *)&v8[v12];
    v12 += 8;
  }
  while (v13 != v12);
  uint64_t v5 = a1[1];
  unint64_t v14 = a1[2];
LABEL_9:
  int64_t v15 = v14 - v5;
  uint64_t v16 = *a1;
  *a1 = v7;
  a1[1] = v7;
  a1[2] = &v7[v15];
  a1[3] = v10;
  if (v16)
  {
    operator delete(v16);
  }
}

uint64_t sub_1006AD094(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4 != v5) {
    *(void *)(a1 + 16) = v4 + ((v5 - v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  sub_1006ACFC0((void **)a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return a1;
}

void *sub_1006AD104(void *a1, void *a2)
{
  if (a1 != a2)
  {
    unint64_t v3 = a2[4];
    uint64_t v4 = a2[1];
    if (a2[2] == v4)
    {
      uint64_t v5 = 0;
      uint64_t v8 = 0;
      uint64_t v7 = (void *)(v4 + 8 * ((a2[5] + v3) / 0x18));
    }
    else
    {
      uint64_t v5 = (unsigned char *)(*(void *)(v4 + 8 * (v3 / 0x18)) + 168 * (v3 % 0x18));
      unint64_t v6 = a2[5] + v3;
      uint64_t v7 = (void *)(v4 + 8 * (v6 / 0x18));
      uint64_t v8 = (unsigned char *)(*v7 + 168 * (v6 % 0x18));
    }
    sub_1006AD1B4(a1, (void *)(v4 + 8 * (v3 / 0x18)), v5, v7, v8);
  }
  return a1;
}

void *sub_1006AD1B4(void *a1, void *a2, unsigned char *a3, void *a4, unsigned char *a5)
{
  if (a5 == a3) {
    unint64_t v5 = 0;
  }
  else {
    unint64_t v5 = 24 * (a4 - a2)
  }
       - 0x30C30C30C30C30C3 * ((uint64_t)&a5[-*a4] >> 3)
       + 0x30C30C30C30C30C3 * ((uint64_t)&a3[-*a2] >> 3);
  return sub_1006AD218(a1, a2, a3, v5);
}

void *sub_1006AD218(void *a1, void *a2, unsigned char *a3, unint64_t a4)
{
  unint64_t v8 = a1[5];
  if (v8 >= a4)
  {
    unint64_t v15 = a1[4];
    uint64_t v16 = a1[1];
    uint64_t v17 = (void *)(v16 + 8 * (v15 / 0x18));
    if (a1[2] == v16) {
      unint64_t v18 = 0;
    }
    else {
      unint64_t v18 = *v17 + 168 * (v15 % 0x18);
    }
    BOOL v22 = a2;
    uint64_t v23 = a3;
    sub_100173CEC(&v22, a4);
    uint64_t v20 = (unsigned char **)v22;
    uint64_t v21 = v23;
    BOOL v22 = v17;
    uint64_t v23 = (unsigned char *)v18;
    sub_1006AD4E4(a2, a3, v20, v21, (uint64_t)&v22);
    return (void *)sub_1006AD364((uint64_t)a1, v22, (uint64_t)v23);
  }
  else
  {
    BOOL v22 = a2;
    uint64_t v23 = a3;
    sub_100173CEC(&v22, v8);
    uint64_t v9 = (unsigned char **)v22;
    uint64_t v10 = (long long *)v23;
    unint64_t v11 = a1[4];
    uint64_t v12 = a1[1];
    uint64_t v13 = (void *)(v12 + 8 * (v11 / 0x18));
    if (a1[2] == v12) {
      unint64_t v14 = 0;
    }
    else {
      unint64_t v14 = *v13 + 168 * (v11 % 0x18);
    }
    BOOL v22 = v13;
    uint64_t v23 = (unsigned char *)v14;
    sub_1006AD4E4(a2, a3, v9, v10, (uint64_t)&v22);
    return sub_1006AC2D8(a1, v9, v10, a4 - a1[5]);
  }
}

uint64_t sub_1006AD364(uint64_t result, void *a2, uint64_t a3)
{
  unint64_t v3 = (void *)result;
  unint64_t v4 = *(void *)(result + 32);
  unint64_t v5 = v4 + *(void *)(result + 40);
  uint64_t v6 = *(void *)(result + 8);
  uint64_t v7 = *(void *)(result + 16);
  unint64_t v8 = (void *)(v6 + 8 * (v5 / 0x18));
  if (v7 == v6) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *v8 + 168 * (v5 % 0x18);
  }
  if (v9 != a3)
  {
    uint64_t v10 = 24 * (v8 - a2) - 0x30C30C30C30C30C3 * ((uint64_t)(v9 - *v8) >> 3);
    uint64_t v11 = (a3 - *a2) >> 3;
    uint64_t v12 = v10 + 0x30C30C30C30C30C3 * v11;
    if (v12 >= 1)
    {
      uint64_t v13 = (void *)(v6 + 8 * (v4 / 0x18));
      if (v7 == v6) {
        unint64_t v14 = 0;
      }
      else {
        unint64_t v14 = *v13 + 168 * (v4 % 0x18);
      }
      if (a3 == v14) {
        uint64_t v15 = 0;
      }
      else {
        uint64_t v15 = 24 * (a2 - v13) - 0x30C30C30C30C30C3 * v11 + 0x30C30C30C30C30C3 * ((uint64_t)(v14 - *v13) >> 3);
      }
      v16[0] = v13;
      v16[1] = v14;
      sub_100173CEC(v16, v15);
      v3[5] -= v12;
      do
        uint64_t result = sub_1006AD668(v3, 1);
      while ((result & 1) != 0);
    }
  }
  return result;
}

double sub_1006AD4E4(void *a1, unsigned char *a2, unsigned char **a3, unsigned char *a4, uint64_t a5)
{
  uint64_t v7 = *(void ***)a5;
  unint64_t v8 = *(char **)(a5 + 8);
  if (a1 != a3)
  {
    uint64_t v10 = a1 + 1;
    for (uint64_t i = (unsigned char *)(*a1 + 4032); ; uint64_t i = v12 + 4032)
    {
      sub_1006AD578(a2, v8, i, v7, &v14);
      unint64_t v8 = (char *)*((void *)&v15 + 1);
      uint64_t v7 = (void **)v15;
      *(void *)a5 = v15;
      *(void *)(a5 + 8) = v8;
      if (v10 == a3) {
        break;
      }
      uint64_t v12 = (unsigned char *)*v10++;
      a2 = v12;
    }
    a2 = *a3;
  }
  sub_1006AD578(a2, v8, a4, v7, &v14);
  double result = *(double *)&v15;
  *(_OWORD *)a5 = v15;
  return result;
}

void *sub_1006AD578@<X0>(unsigned char *__src@<X1>, char *__dst@<X4>, unsigned char *a3@<X2>, void **a4@<X3>, void *a5@<X8>)
{
  uint64_t v6 = a4;
  uint64_t v7 = __src;
  if (__src == a3)
  {
    unint64_t v9 = __src;
  }
  else
  {
    unint64_t v9 = a3;
    uint64_t v6 = a4 + 1;
    uint64_t v10 = (char *)*a4;
    while (1)
    {
      int64_t v11 = 0xCF3CF3CF3CF3CF3DLL * ((v10 - __dst + 4032) >> 3);
      unint64_t v12 = (uint64_t)(0xCF3CF3CF3CF3CF3DLL * ((v9 - v7) >> 3)) >= v11 ? v11 : 0xCF3CF3CF3CF3CF3DLL * ((v9 - v7) >> 3);
      if (v12) {
        double result = memmove(__dst, v7, 168 * v12);
      }
      v7 += 168 * v12;
      if (v7 == v9) {
        break;
      }
      uint64_t v14 = (char *)*v6++;
      uint64_t v10 = v14;
      __uuid_t dst = v14;
    }
    __dst += 168 * v12;
    if ((char *)*(v6 - 1) + 4032 == __dst) {
      __uuid_t dst = (char *)*v6;
    }
    else {
      --v6;
    }
  }
  *a5 = v9;
  a5[1] = v6;
  a5[2] = __dst;
  return result;
}

uint64_t sub_1006AD668(void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = 24 * ((v2 - v3) >> 3) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x18) {
    a2 = 1;
  }
  if (v5 < 0x30) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

uint64_t sub_1006AD6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void ***)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  *(void *)(a1 + 40) = 0;
  unint64_t v6 = v5 - (void)v4;
  if (v6 >= 0x11)
  {
    do
    {
      operator delete(*v4);
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v4 = (void **)(*(void *)(a1 + 8) + 8);
      *(void *)(a1 + 8) = v4;
      unint64_t v6 = v7 - (void)v4;
    }
    while (v6 > 0x10);
  }
  if (v6 >> 3 == 1)
  {
    uint64_t v8 = 12;
    goto LABEL_7;
  }
  if (v6 >> 3 == 2)
  {
    uint64_t v8 = 24;
LABEL_7:
    *(void *)(a1 + 32) = v8;
  }
  sub_1006AD784((void **)a1);
  uint64_t result = sub_1006AD93C(a1, a2);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1006AD784(void **a1)
{
  if (a1[5])
  {
    sub_1006AD808((uint64_t)a1, 0);
    sub_1006AD668(a1, 0);
  }
  else
  {
    uint64_t v3 = a1[1];
    for (uint64_t i = (uint64_t)a1[2]; (void *)i != v3; a1[2] = (void *)i)
    {
      operator delete(*(void **)(i - 8));
      uint64_t v3 = a1[1];
      uint64_t i = (uint64_t)a1[2] - 8;
    }
    a1[4] = 0;
  }

  sub_1006AD868(a1);
}

uint64_t sub_1006AD808(uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0x18) {
    a2 = 1;
  }
  if (v2 < 0x30) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8;
    *(void *)(a1 + 32) -= 24;
  }
  return v4 ^ 1u;
}

void sub_1006AD868(void **a1)
{
  uint64_t v3 = a1[3];
  uint64_t v2 = (uint64_t)(a1 + 3);
  int v4 = a1[1];
  uint64_t v5 = a1[2];
  unint64_t v6 = (v5 - v4) >> 3;
  if (v6 >= (v3 - (unsigned char *)*a1) >> 3) {
    return;
  }
  if (v5 == v4)
  {
    uint64_t v10 = 0;
    uint64_t v7 = 0;
    goto LABEL_8;
  }
  uint64_t v7 = (char *)sub_1000DA54C(v2, v6);
  uint64_t v8 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v10 = &v7[8 * v9];
  uint64_t v11 = v5 - v8;
  if (v5 == v8)
  {
LABEL_8:
    uint64_t v14 = v5;
    goto LABEL_9;
  }
  uint64_t v12 = 0;
  uint64_t v13 = 8 * (v11 >> 3);
  do
  {
    *(void *)&v7[v12] = *(void *)&v8[v12];
    v12 += 8;
  }
  while (v13 != v12);
  uint64_t v5 = a1[1];
  uint64_t v14 = a1[2];
LABEL_9:
  int64_t v15 = v14 - v5;
  uint64_t v16 = *a1;
  *a1 = v7;
  a1[1] = v7;
  a1[2] = &v7[v15];
  a1[3] = v10;
  if (v16)
  {
    operator delete(v16);
  }
}

uint64_t sub_1006AD93C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4 != v5) {
    *(void *)(a1 + 16) = v4 + ((v5 - v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  sub_1006AD868((void **)a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return a1;
}

void sub_1006AD9AC(id a1)
{
  qword_1024194F8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Outdoor");
}

void *sub_1006AD9DC(void *a1, uint64_t a2)
{
  sub_1006ADA50((uint64_t)v4, a2);
  sub_1006ADAE8(v4, a1);
  sub_1006ADD54(v4);
  return a1;
}

uint64_t sub_1006ADA50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1006ADAE8(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    uint64_t v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        void v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        void v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        void v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      void v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_1006ADD48(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

void *sub_1006ADD54(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1006ADDD8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_1006ADE5C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 40);
  *a2 = *(void *)(result + 32);
  a2[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_1006ADE78(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(result + 32) = *(void *)(a2 + 32);
  *(void *)(result + 40) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_1006ADE94(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 40);
  if (v1) {
    sub_1000DB0A0(v1);
  }
}

uint64_t sub_1006ADEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  **(_DWORD **)a1 = *(_DWORD *)a2;
  long long v4 = *(_OWORD *)(a2 + 72);
  long long v5 = *(_OWORD *)(a2 + 104);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(v3 + 96) = v5;
  *(_OWORD *)(v3 + 48) = v6;
  *(_OWORD *)(v3 + 64) = v4;
  long long v7 = *(_OWORD *)(a2 + 136);
  long long v8 = *(_OWORD *)(a2 + 152);
  long long v9 = *(_OWORD *)(a2 + 120);
  *(void *)(v3 + 160) = *(void *)(a2 + 168);
  *(_OWORD *)(v3 + 128) = v7;
  *(_OWORD *)(v3 + 144) = v8;
  *(_OWORD *)(v3 + 112) = v9;
  long long v10 = *(_OWORD *)(a2 + 8);
  long long v11 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v3 + 32) = v11;
  *(_OWORD *)uint64_t v3 = v10;
  uint64_t v12 = *(void *)(a1 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + 176);
  uint64_t v13 = (void **)(v12 + 16);
  if (*(char *)(v12 + 39) < 0) {
    operator delete(*v13);
  }
  long long v14 = *(_OWORD *)(a2 + 192);
  *(void *)(v12 + 32) = *(void *)(a2 + 208);
  *(_OWORD *)uint64_t v13 = v14;
  *(unsigned char *)(a2 + 215) = 0;
  *(unsigned char *)(a2 + 192) = 0;

  return sub_1006ACE98(v12 + 40, a2 + 216);
}

uint64_t sub_1006ADF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 32);
  long long v4 = (unsigned char *)(a2 + 16);
  if (*(char *)(a1 + 71) < 0)
  {
    sub_1000DC48C(v4, *(void **)(a1 + 48), *(void *)(a1 + 56));
  }
  else
  {
    *(_OWORD *)long long v4 = *(_OWORD *)(a1 + 48);
    *(void *)(a2 + 32) = *(void *)(a1 + 64);
  }
  return sub_1006A7010(a2 + 40, (void *)(a1 + 72));
}

void sub_1006ADFE0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 39) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006ADFFC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  if (*(char *)(a2 + 71) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 48), *(void **)(a2 + 48), *(void *)(a2 + 56));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = v4;
  }
  return sub_1006A7010(a1 + 72, (void *)(a2 + 72));
}

void sub_1006AE06C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 71) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006AE088(uint64_t a1)
{
  sub_100663B8C((void *)(a1 + 72));
  if (*(char *)(a1 + 71) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 48);
    operator delete(v2);
  }
}

void sub_1006AE0D8(void *a1, void *a2)
{
  *a1 = off_1022C2750;
  sub_1006AE424(a1 + 1, a2, 10.0, 300.0);
}

void sub_1006AE320(_Unwind_Exception *a1, uint64_t a2, void *a3, void *a4, void *a5, ...)
{
  va_start(va, a5);
  sub_1006ADD54(va);
  sub_1006A824C(v8);
  sub_1006A7E24(v7);
  sub_1006A7E78(v6);
  sub_1006A86BC(v13);
  sub_1006A8FC0(v12);
  sub_1006A7ED4(v11);
  sub_1006A9338(v10);
  sub_1006A9540(v9);
  sub_1006A9D68(a3);
  sub_1006AAB18(a4);
  sub_1006AADB0(a5);
  sub_1006AB65C(v5);
  _Unwind_Resume(a1);
}

void sub_1006AE3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
}

void sub_1006AE3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
}

void sub_1006AE3EC()
{
  sub_1006ADD54((void *)(v0 - 176));
  JUMPOUT(0x1006AE39CLL);
}

void sub_1006AE3FC()
{
}

void sub_1006AE404()
{
}

void sub_1006AE40C()
{
  sub_1006ADD54((void *)(v0 - 144));
  JUMPOUT(0x1006AE3B4);
}

void sub_1006AE41C()
{
}

void sub_1006AE424(void *a1, void *a2, double a3, double a4)
{
  void v6[3] = 0;
  sub_1006AE728((uint64_t)a1, (uint64_t)v6, a3, a4);
  sub_1006ABD00(v6);
  *a1 = off_1022C2F38;
  a1[56] = [a2 silo];
  a1[57] = 0;
  sub_1004A1714();
}

void sub_1006AE6C0(_Unwind_Exception *a1)
{
  uint64_t v3 = v1[57];
  v1[57] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  sub_1006AB88C(v1);
  _Unwind_Resume(a1);
}

void sub_1006AE718()
{
  sub_1006ABD00((void *)(v0 - 88));
  JUMPOUT(0x1006AE710);
}

uint64_t sub_1006AE728(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = &off_1022C2FC0;
  *(unsigned char *)(a1 + 264) = 0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = xmmword_101D27D40;
  *(double *)(a1 + 336) = a3;
  *(double *)(a1 + 344) = a4;
  *(_OWORD *)(a1 + 352) = xmmword_101D1C570;
  *(void *)(a1 + 368) = 0;
  *(_DWORD *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 397) = 0;
  *(void *)(a1 + 406) = 0;
  sub_1006AE954(a1 + 416, a2);
  return a1;
}

void sub_1006AE7E0(_Unwind_Exception *a1)
{
  sub_100507624(v2);
  sub_1006ABD84(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AE7FC(uint64_t a1)
{
  *(_OWORD *)a1 = xmmword_101D289C8;
  *(_OWORD *)(a1 + 16) = unk_101D289D8;
  *(_OWORD *)(a1 + 32) = xmmword_101D289E8;
  *(_OWORD *)(a1 + 48) = unk_101D289F8;
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 76) = 0;
  *(void *)(a1 + 80) = 0xBFF0000000000000;
  *(void *)(a1 + 88) = 0;
  uint64_t v2 = (void *)(a1 + 88);
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  uint64_t v3 = operator new(8uLL);
  *uint64_t v2 = v3;
  *uint64_t v3 = 0;
  *(void *)(a1 + 96) = v3 + 1;
  *(void *)(a1 + 104) = v3 + 1;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  for (int i = 119; i != -1; --i)
  {
    float v5 = pow(0.98, (double)i);
    float v9 = v5;
    sub_1000A1600((void *)(a1 + 112), &v9);
  }
  int v8 = 0;
  sub_1000A1600((void *)(a1 + 160), (float *)&v8);
  int v7 = 0;
  sub_1000A1600((void *)(a1 + 208), (float *)&v7);
  *(void *)(a1 + 8) = 0xBFF0000000000000;
  return a1;
}

void sub_1006AE918(_Unwind_Exception *a1)
{
  sub_1003A7340(v3);
  sub_1003A7340(v4);
  sub_1003A7340(v2);
  int v7 = *v5;
  if (*v5)
  {
    *(void *)(v1 + 96) = v7;
    operator delete(v7);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1006AE954(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1006AE9EC(void *a1, void *a2, double a3, double a4)
{
  void v6[3] = 0;
  sub_1006AEB50((uint64_t)a1, (uint64_t)v6, a3, a4);
  sub_1006AB310(v6);
  *a1 = off_1022C2E90;
  a1[24] = [a2 silo];
  a1[25] = 0;
  sub_100A1F244();
}

void sub_1006AEB0C(_Unwind_Exception *a1)
{
  uint64_t v3 = v1[25];
  v1[25] = 0;
  if (v3) {
    sub_101A6A9C8(v3);
  }
  sub_1006AAE50(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AEB50(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C2F08;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 120) = 0;
  *(_OWORD *)(a1 + 128) = xmmword_101D1C570;
  *(void *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 152) = 0;
  sub_1006AEC6C(a1 + 160, a2);
  return a1;
}

void sub_1006AEBDC(_Unwind_Exception *a1)
{
  sub_100507624(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AEBF0(uint64_t a1, uint64_t a2, uint64_t a3, id *a4)
{
  [a4[24] assertInside];
  int v8 = (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t))*((void *)*a4 + 4);

  return v8(a4, a1, a2, a3);
}

uint64_t sub_1006AEC6C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1006AED04(void *a1, uint64_t a2, double a3, double a4)
{
  v7[3] = 0;
  sub_1006AEDC0((uint64_t)a1, (uint64_t)v7, a3, a4);
  sub_1005E73C4(v7);
  *a1 = off_1022C2DF0;
  sub_1006ADA50((uint64_t)(a1 + 40), a2);
  return a1;
}

void sub_1006AED9C(_Unwind_Exception *a1)
{
  sub_1006AAB90(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AEDC0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C2E60;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = 0;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_DWORD *)(a1 + 184) = 0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 249) = 0u;
  sub_1005E71B0(a1 + 288, a2);
  return a1;
}

void sub_1006AEE60(_Unwind_Exception *a1)
{
  sub_1006AAD08(v1);
  _Unwind_Resume(a1);
}

void sub_1006AEE74(void *a1, void *a2, double a3, double a4)
{
  void v6[3] = 0;
  sub_1006AEFD8((uint64_t)a1, (uint64_t)v6, a3, a4);
  sub_1006AA2C8(v6);
  *a1 = off_1022C2D48;
  a1[38] = [a2 silo];
  a1[39] = 0;
  sub_101589B60();
}

void sub_1006AEF94(_Unwind_Exception *a1)
{
  uint64_t v3 = v1[39];
  v1[39] = 0;
  if (v3) {
    sub_101A6A9C8(v3);
  }
  sub_1006A9E08(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AEFD8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C2DC0;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(_OWORD *)(a1 + 96) = xmmword_101D1C570;
  *(void *)(a1 + 112) = 0;
  *(_DWORD *)(a1 + 120) = 0;
  *(void *)(a1 + 200) = 0;
  *(_WORD *)(a1 + 208) = 0;
  *(_DWORD *)(a1 + 264) = 0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_DWORD *)(a1 + 192) = 0;
  *(unsigned char *)(a1 + 248) = 0;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_DWORD *)(a1 + 259) = 0;
  *(void *)(a1 + 252) = 0;
  sub_1006AF118(a1 + 272, a2);
  return a1;
}

void sub_1006AF088(_Unwind_Exception *a1)
{
  sub_1006AA34C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AF09C(uint64_t a1, uint64_t a2, uint64_t a3, id *a4)
{
  [a4[38] assertInside];
  int v8 = (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t))*((void *)*a4 + 4);

  return v8(a4, a1, a2, a3);
}

uint64_t sub_1006AF118(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1006AF1B0(void *a1, void *a2, double a3, double a4)
{
  void v6[3] = 0;
  sub_1006AF4B4((uint64_t)a1, (uint64_t)v6, a3, a4);
  sub_1006A9C3C(v6);
  *a1 = off_1022C2CA0;
  a1[56] = [a2 silo];
  a1[57] = 0;
  sub_101589B60();
}

void sub_1006AF44C(_Unwind_Exception *a1)
{
  uint64_t v3 = v1[57];
  v1[57] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  sub_1006A9798(v1);
  _Unwind_Resume(a1);
}

void sub_1006AF4A4()
{
  sub_1006A9C3C((void *)(v0 - 88));
  JUMPOUT(0x1006AF49CLL);
}

uint64_t sub_1006AF4B4(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C2D18;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 408) = 0;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  sub_1006AF590(a1 + 416, a2);
  return a1;
}

void sub_1006AF57C(_Unwind_Exception *a1)
{
  sub_1006A9CC0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AF590(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1006AF628(void *a1, uint64_t a2, double a3, double a4)
{
  v7[3] = 0;
  sub_1006AF6E4((uint64_t)a1, (uint64_t)v7, a3, a4);
  sub_1006A94BC(v7);
  *a1 = off_1022C2C00;
  sub_1006ADA50((uint64_t)(a1 + 25), a2);
  return a1;
}

void sub_1006AF6C0(_Unwind_Exception *a1)
{
  sub_1006A93BC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AF6E4(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C2C70;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  sub_1006AF77C(a1 + 168, a2);
  return a1;
}

void sub_1006AF768(_Unwind_Exception *a1)
{
  sub_10050757C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AF77C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1006AF814(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C2BA8;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 128) = 0;
  sub_1006AF8A8(a1 + 136, a2);
  return a1;
}

void sub_1006AF894(_Unwind_Exception *a1)
{
  sub_1003BE294(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AF8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1006AF940(void *a1, uint64_t a2, double a3, double a4)
{
  v7[3] = 0;
  sub_1006AF9FC((uint64_t)a1, (uint64_t)v7, a3, a4);
  sub_1006A91BC(v7);
  *a1 = off_1022C2B08;
  sub_1006ADA50((uint64_t)(a1 + 25), a2);
  return a1;
}

void sub_1006AF9D8(_Unwind_Exception *a1)
{
  sub_1006A9044(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AF9FC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C2B78;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(void *)(a1 + 120) = 0x80000000800000;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(_OWORD *)(a1 + 144) = xmmword_101D1E260;
  *(void *)(a1 + 160) = 0x80000000800000;
  sub_1006AFAA4(a1 + 168, a2);
  return a1;
}

void sub_1006AFA90(_Unwind_Exception *a1)
{
  sub_10050757C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AFAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1006AFB3C(void *a1, void *a2, double a3, double a4)
{
  void v6[3] = 0;
  sub_1006AFCA0((uint64_t)a1, (uint64_t)v6, a3, a4);
  sub_1006A8C1C(v6);
  *a1 = off_1022C2A60;
  a1[35] = [a2 silo];
  a1[36] = 0;
  sub_101594980();
}

void sub_1006AFC5C(_Unwind_Exception *a1)
{
  uint64_t v3 = v1[36];
  v1[36] = 0;
  if (v3) {
    sub_101A6A9C8(v3);
  }
  sub_1006A875C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AFCA0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C2AD8;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_DWORD *)(a1 + 240) = 0;
  sub_1006AFDB8(a1 + 248, a2);
  return a1;
}

void sub_1006AFD28(_Unwind_Exception *a1)
{
  sub_1000D801C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AFD3C(uint64_t a1, uint64_t a2, uint64_t a3, id *a4)
{
  [a4[35] assertInside];
  int v8 = (uint64_t (*)(id *, uint64_t, uint64_t, uint64_t))*((void *)*a4 + 4);

  return v8(a4, a1, a2, a3);
}

uint64_t sub_1006AFDB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1006AFE50(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C2A08;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(_WORD *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 108) = 0;
  sub_1006AFEE0(a1 + 112, a2);
  return a1;
}

void sub_1006AFECC(_Unwind_Exception *a1)
{
  sub_1000D80C4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006AFEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1006AFF78(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C29B0;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(_DWORD *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0xBFF0000000000000;
  *(void *)(a1 + 112) = 0;
  sub_1006B0004(a1 + 120, a2);
  return a1;
}

void sub_1006AFFF0(_Unwind_Exception *a1)
{
  sub_1000D816C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B0004(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1006B009C(void *a1, uint64_t a2, double a3, double a4)
{
  v7[3] = 0;
  sub_1006B0158((uint64_t)a1, (uint64_t)v7, a3, a4);
  sub_1006A8448(v7);
  *a1 = off_1022C2910;
  sub_1006ADA50((uint64_t)(a1 + 18), a2);
  return a1;
}

void sub_1006B0134(_Unwind_Exception *a1)
{
  sub_1006A82D0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B0158(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C2980;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(void *)(a1 + 104) = 7;
  sub_1006B01EC(a1 + 112, a2);
  return a1;
}

void sub_1006B01D8(_Unwind_Exception *a1)
{
  sub_1000D80C4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B01EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1006B0284(void *a1, uint64_t a2, double a3, double a4)
{
  v7[3] = 0;
  sub_1006B0340((uint64_t)a1, (uint64_t)v7, a3, a4);
  sub_1006A8174(v7);
  *a1 = off_1022C2870;
  sub_1006ADA50((uint64_t)(a1 + 21), a2);
  return a1;
}

void sub_1006B031C(_Unwind_Exception *a1)
{
  sub_1006A7FFC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B0340(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C28E0;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 104) = 0;
  *(void *)(a1 + 108) = 0;
  *(void *)(a1 + 124) = 0;
  *(void *)(a1 + 116) = 0;
  sub_1006B03D8(a1 + 136, a2);
  return a1;
}

void sub_1006B03C4(_Unwind_Exception *a1)
{
  sub_1003BE294(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B03D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1006B0470@<X0>(char *a1@<X1>, char *a2@<X2>, uint64_t a3@<X3>, double *a4@<X4>, void *a5@<X8>)
{
  long long v10 = operator new(0xA8uLL);
  uint64_t result = sub_1006B04EC(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  return result;
}

void sub_1006B04D8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1006B04EC(void *a1, char *__s, char *a3, uint64_t a4, double *a5)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1022C3170;
  sub_1006B0604((int)&v7, (uint64_t)(a1 + 3), __s, a3, a4, a5);
  return a1;
}

void sub_1006B0554(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1006B0568(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022C3170;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1006B0588(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022C3170;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1006B05DC(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1006B0604(int a1, uint64_t a2, char *__s, char *a4, uint64_t a5, double *a6)
{
  sub_100134750(v12, __s);
  sub_100134750(__p, a4);
  sub_100F7E3C8(a2, v12, __p, a5, *a6);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
}

void sub_1006B0690(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1006B06C4@<X0>(char *a1@<X1>, char *a2@<X2>, uint64_t a3@<X3>, double *a4@<X4>, void *a5@<X8>)
{
  long long v10 = operator new(0xA8uLL);
  uint64_t result = sub_1006B04EC(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  return result;
}

void sub_1006B072C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1006B0740@<X0>(char *a1@<X1>, char *a2@<X2>, uint64_t a3@<X3>, double *a4@<X4>, void *a5@<X8>)
{
  long long v10 = operator new(0xA8uLL);
  uint64_t result = sub_1006B04EC(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  return result;
}

void sub_1006B07A8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1006B07BC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022C31C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1006B07DC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022C31C0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1006B0830(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1006B085C()
{
}

void *sub_1006B0870(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C3210;
  result[1] = v3;
  return result;
}

uint64_t sub_1006B08B8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C3210;
  a2[1] = v2;
  return result;
}

void sub_1006B08E4(uint64_t a1, double *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
}

uint64_t sub_1006B0900(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006B0940()
{
}

void sub_1006B094C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v13 = 1;
    long long v10 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onBackgroundEscalationManagerUpdate", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    char v11 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)int32x2_t buf = 68289538;
      int v15 = 0;
      __int16 v16 = 2082;
      uint64_t v17 = "";
      __int16 v18 = 2082;
      uint64_t v19 = "activity";
      __int16 v20 = 2050;
      uint64_t v21 = a4;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onBackgroundEscalationManagerUpdate\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v13 = 0;
  }
  sub_1006A18A0((void *)a4, a1, a2, a3, a5);
  if (v13) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006B0B28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006B0B4C()
{
}

void *sub_1006B0B60(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C32A0;
  result[1] = v3;
  return result;
}

uint64_t sub_1006B0BA8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C32A0;
  a2[1] = v2;
  return result;
}

void sub_1006B0BD4(uint64_t a1, double *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
}

uint64_t sub_1006B0BF0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006B0C30()
{
}

void sub_1006B0C40()
{
}

void *sub_1006B0C54(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C3320;
  result[1] = v3;
  return result;
}

uint64_t sub_1006B0C9C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C3320;
  a2[1] = v2;
  return result;
}

uint64_t sub_1006B0CC8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006B0D08()
{
}

void *sub_1006B0D14(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1006B0D9C()
{
}

void *sub_1006B0DB0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C33B0;
  result[1] = v3;
  return result;
}

uint64_t sub_1006B0DF8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C33B0;
  a2[1] = v2;
  return result;
}

__n128 sub_1006B0E24(uint64_t a1, int *a2, uint64_t a3)
{
  int v3 = *a2;
  long long v4 = *(_OWORD *)(a3 + 208);
  v12[12] = *(_OWORD *)(a3 + 192);
  v12[13] = v4;
  uint64_t v13 = *(void *)(a3 + 224);
  long long v5 = *(_OWORD *)(a3 + 144);
  v12[8] = *(_OWORD *)(a3 + 128);
  v12[9] = v5;
  long long v6 = *(_OWORD *)(a3 + 176);
  v12[10] = *(_OWORD *)(a3 + 160);
  v12[11] = v6;
  long long v7 = *(_OWORD *)(a3 + 80);
  v12[4] = *(_OWORD *)(a3 + 64);
  v12[5] = v7;
  long long v8 = *(_OWORD *)(a3 + 112);
  v12[6] = *(_OWORD *)(a3 + 96);
  v12[7] = v8;
  long long v9 = *(_OWORD *)(a3 + 16);
  v12[0] = *(_OWORD *)a3;
  v12[1] = v9;
  long long v10 = *(_OWORD *)(a3 + 48);
  v12[2] = *(_OWORD *)(a3 + 32);
  v12[3] = v10;
  sub_1006B0F14(v3, (uint64_t)v12, *(void *)(a1 + 8));
  return result;
}

uint64_t sub_1006B0EC8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006B0F08()
{
}

void sub_1006B0F14(int a1, uint64_t a2, uint64_t a3)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a3 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C26C8);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v18 = 1;
    long long v6 = _os_activity_create((void *)&_mh_execute_header, "CL: CLMotionStateMediator::onWorkoutPredictorUpdate", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C26C8);
    }
    long long v7 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      uint64_t buf = 68289538;
      __int16 v22 = 2082;
      uint64_t v23 = "";
      __int16 v24 = 2082;
      long long v25 = "activity";
      __int16 v26 = 2050;
      uint64_t v27 = a3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMotionStateMediator::onWorkoutPredictorUpdate\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", (uint8_t *)&buf, 0x26u);
    }
  }
  else
  {
    char v18 = 0;
  }
  long long v8 = *(_OWORD *)(a2 + 192);
  long long v9 = *(_OWORD *)(a2 + 208);
  long long v10 = *(_OWORD *)(a2 + 160);
  v19[11] = *(_OWORD *)(a2 + 176);
  v19[12] = v8;
  v19[13] = v9;
  long long v11 = *(_OWORD *)(a2 + 128);
  long long v12 = *(_OWORD *)(a2 + 144);
  long long v13 = *(_OWORD *)(a2 + 96);
  v19[7] = *(_OWORD *)(a2 + 112);
  v19[8] = v11;
  uint64_t v20 = *(void *)(a2 + 224);
  v19[9] = v12;
  v19[10] = v10;
  long long v14 = *(_OWORD *)(a2 + 80);
  v19[4] = *(_OWORD *)(a2 + 64);
  v19[5] = v14;
  v19[6] = v13;
  long long v15 = *(_OWORD *)(a2 + 16);
  v19[0] = *(_OWORD *)a2;
  v19[1] = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  v19[2] = *(_OWORD *)(a2 + 32);
  v19[3] = v16;
  sub_1006A1D38(a3, a1, (unsigned __int8 *)v19);
  if (v18) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006B1124(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006B1144(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1007795E8();
    operator delete();
  }
  return result;
}

void sub_1006B1198()
{
}

void *sub_1006B11AC(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C3440;
  result[1] = v3;
  return result;
}

uint64_t sub_1006B11F4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C3440;
  a2[1] = v2;
  return result;
}

uint64_t sub_1006B1220(uint64_t a1, double *a2)
{
  return sub_100F6E62C(*(void *)(*(void *)(a1 + 8) + 6608), *a2);
}

uint64_t sub_1006B1230(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006B1270()
{
}

void sub_1006B1280()
{
}

void *sub_1006B1294(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C34C0;
  result[1] = v3;
  return result;
}

uint64_t sub_1006B12DC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C34C0;
  a2[1] = v2;
  return result;
}

uint64_t sub_1006B1308(uint64_t a1, double *a2)
{
  return sub_100F6E668(*(void *)(*(void *)(a1 + 8) + 6608), *a2);
}

uint64_t sub_1006B1318(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006B1358()
{
}

void sub_1006B1368()
{
}

void *sub_1006B137C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C3540;
  result[1] = v3;
  return result;
}

uint64_t sub_1006B13C4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C3540;
  a2[1] = v2;
  return result;
}

uint64_t sub_1006B13F0(uint64_t a1, double *a2)
{
  return sub_100F6E6A4(*(void *)(*(void *)(a1 + 8) + 6608), *a2);
}

uint64_t sub_1006B1400(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006B1440()
{
}

void *sub_1006B144C(void *a1)
{
  *a1 = off_1022C35C0;
  v12[3] = 0;
  sub_1006B1830((uint64_t)(a1 + 1), (uint64_t)v12, 10.0, 300.0);
  sub_1006A7C78(v12);
  _OWORD v11[3] = 0;
  sub_1006B196C(a1 + 37, (uint64_t)v11, 10.0, 150.0);
  sub_1006ADD54(v11);
  void v10[3] = 0;
  sub_1006AF4B4((uint64_t)(a1 + 59), (uint64_t)v10, 10.0, 300.0);
  sub_1006A9C3C(v10);
  unsigned __int8 v9[3] = 0;
  sub_1006B1CD0(a1 + 115, (uint64_t)v9, 10.0, 300.0);
  sub_1006ADD54(v9);
  v8[3] = 0;
  sub_1006AED04(a1 + 137, (uint64_t)v8, 10.0, 300.0);
  sub_1006ADD54(v8);
  v7[3] = 0;
  sub_1006AF940(a1 + 181, (uint64_t)v7, 15.0, 300.0);
  sub_1006ADD54(v7);
  void v6[3] = 0;
  sub_1006B2030(a1 + 210, (uint64_t)v6, 10.0, 10.0);
  sub_1006ADD54(v6);
  v5[3] = 0;
  sub_1006B2578(a1 + 234, (uint64_t)v5, 10.0, 300.0);
  sub_1006ADD54(v5);
  void v4[3] = 0;
  sub_1006B28DC(a1 + 258, (uint64_t)v4, 8.0, 8.0);
  sub_1006ADD54(v4);
  void v3[3] = 0;
  sub_1006B2E30(a1 + 284, (uint64_t)v3, 6.0, 6.0);
  sub_1006ADD54(v3);
  return a1;
}

void sub_1006B1658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1006ADD54(&a9);
  sub_1006B1744(v17);
  sub_1006B33F4(v16);
  sub_1006B179C(v15);
  sub_1006A8FC0(v14);
  sub_1006AAB18(v13);
  sub_1006B3478(v12);
  sub_1006A9798(v11);
  sub_1006B34FC(v10);
  sub_1006A7BB0(v9);
  _Unwind_Resume(a1);
}

void sub_1006B16F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
}

void sub_1006B1704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
}

void sub_1006B1714()
{
  sub_1006A9C3C((void *)(v0 - 208));
  JUMPOUT(0x1006B16DCLL);
}

void sub_1006B1724()
{
  sub_1006ADD54((void *)(v0 - 176));
  JUMPOUT(0x1006B16E4);
}

void sub_1006B1734()
{
  sub_1006A7C78((void *)(v0 - 144));
  JUMPOUT(0x1006B16ECLL);
}

void *sub_1006B1744(void *a1)
{
  *a1 = off_1022C3928;
  sub_1006ADD54(a1 + 22);

  return sub_1006B2A44(a1);
}

void *sub_1006B179C(void *a1)
{
  *a1 = off_1022C37E8;
  sub_1006ADD54(a1 + 20);

  return sub_1006B219C(a1);
}

void sub_1006B17F8(void *a1)
{
  sub_1006B3580(a1);

  operator delete();
}

uint64_t sub_1006B1830(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C26F8;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(_WORD *)(a1 + 248) = 0;
  *(_OWORD *)(a1 + 96) = xmmword_101D1C570;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(void *)(a1 + 239) = 0;
  sub_1006B18D4(a1 + 256, a2);
  return a1;
}

void sub_1006B18C0(_Unwind_Exception *a1)
{
  sub_1004F4578(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B18D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1006B196C(void *a1, uint64_t a2, double a3, double a4)
{
  v7[3] = 0;
  sub_1006B1A28((uint64_t)a1, (uint64_t)v7, a3, a4);
  sub_1006B1C4C(v7);
  *a1 = off_1022C36A8;
  sub_1006ADA50((uint64_t)(a1 + 18), a2);
  return a1;
}

void sub_1006B1A04(_Unwind_Exception *a1)
{
  sub_1006B1AB4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B1A28(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C3718;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 104) = 0;
  sub_1006B1BB4(a1 + 112, a2);
  return a1;
}

void sub_1006B1AA0(_Unwind_Exception *a1)
{
  sub_1000D80C4(v1);
  _Unwind_Resume(a1);
}

void *sub_1006B1AB4(void *a1)
{
  *a1 = off_1022C3718;
  uint64_t v2 = a1 + 2;
  sub_1006B1C4C(a1 + 14);
  sub_1000D80C4(v2);
  return a1;
}

void sub_1006B1B08(void *a1)
{
  sub_1006B34FC(a1);

  operator delete();
}

void sub_1006B1B40(void *a1)
{
  *a1 = off_1022C3718;
  uint64_t v1 = a1 + 2;
  sub_1006B1C4C(a1 + 14);
  sub_1000D80C4(v1);

  operator delete();
}

uint64_t sub_1006B1BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1006B1C4C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1006B1CD0(void *a1, uint64_t a2, double a3, double a4)
{
  v7[3] = 0;
  sub_1006B1D8C((uint64_t)a1, (uint64_t)v7, a3, a4);
  sub_1006B1FAC(v7);
  *a1 = off_1022C3748;
  sub_1006ADA50((uint64_t)(a1 + 18), a2);
  return a1;
}

void sub_1006B1D68(_Unwind_Exception *a1)
{
  sub_1006B1E14(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B1D8C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C37B8;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(void *)(a1 + 104) = 0;
  sub_1006B1F14(a1 + 112, a2);
  return a1;
}

void sub_1006B1E00(_Unwind_Exception *a1)
{
  sub_1000D80C4(v1);
  _Unwind_Resume(a1);
}

void *sub_1006B1E14(void *a1)
{
  *a1 = off_1022C37B8;
  uint64_t v2 = a1 + 2;
  sub_1006B1FAC(a1 + 14);
  sub_1000D80C4(v2);
  return a1;
}

void sub_1006B1E68(void *a1)
{
  sub_1006B3478(a1);

  operator delete();
}

void sub_1006B1EA0(void *a1)
{
  *a1 = off_1022C37B8;
  uint64_t v1 = a1 + 2;
  sub_1006B1FAC(a1 + 14);
  sub_1000D80C4(v1);

  operator delete();
}

uint64_t sub_1006B1F14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1006B1FAC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1006B2030(void *a1, uint64_t a2, double a3, double a4)
{
  v7[3] = 0;
  sub_1006B20EC((uint64_t)a1, (uint64_t)v7, a3, a4);
  sub_1006B24F4(v7);
  *a1 = off_1022C37E8;
  sub_1006ADA50((uint64_t)(a1 + 20), a2);
  return a1;
}

void sub_1006B20C8(_Unwind_Exception *a1)
{
  sub_1006B219C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B20EC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C3858;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  sub_1006B2320(a1 + 128, a2);
  return a1;
}

void sub_1006B217C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000D7F78((void ***)va);
  sub_1006B23B8(v2);
  _Unwind_Resume(a1);
}

void *sub_1006B219C(void *a1)
{
  *a1 = off_1022C3858;
  uint64_t v2 = (void **)(a1 + 13);
  sub_1006B24F4(a1 + 16);
  long long v4 = v2;
  sub_1000D7F78(&v4);
  sub_1006B23B8(a1 + 2);
  return a1;
}

void sub_1006B2204(void *a1)
{
  *a1 = off_1022C37E8;
  sub_1006ADD54(a1 + 20);
  sub_1006B219C(a1);

  operator delete();
}

uint64_t sub_1006B226C(uint64_t a1)
{
  if (!*(void *)(a1 + 184)) {
    return 0;
  }
  uint64_t v1 = 1;
  if ((sub_1006A81F8(a1 + 160, 1) & 1) == 0) {
    return 0;
  }
  return v1;
}

BOOL sub_1006B22AC(uint64_t a1)
{
  return *(void *)(a1 + 184) && (sub_1006A81F8(a1 + 160, 0) & 1) != 0;
}

void sub_1006B22E8(void *a1)
{
  sub_1006B219C(a1);

  operator delete();
}

uint64_t sub_1006B2320(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1006B23B8(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  if (v3 == v2)
  {
    long long v4 = a1 + 5;
    uint64_t v3 = (void **)a1[1];
  }
  else
  {
    long long v4 = a1 + 5;
    unint64_t v5 = a1[4];
    long long v6 = &v2[v5 >> 7];
    uint64_t v7 = (uint64_t)*v6 + 32 * (v5 & 0x7F);
    uint64_t v8 = *(uint64_t *)((char *)v2 + (((a1[5] + v5) >> 4) & 0xFFFFFFFFFFFFFF8)) + 32 * ((a1[5] + v5) & 0x7F);
    if (v7 != v8)
    {
      do
      {
        long long v15 = (void **)(v7 + 8);
        sub_1000D7F78(&v15);
        v7 += 32;
        if (v7 - (void)*v6 == 4096)
        {
          uint64_t v9 = (uint64_t)v6[1];
          ++v6;
          uint64_t v7 = v9;
        }
      }
      while (v7 != v8);
      uint64_t v2 = (void **)a1[1];
      uint64_t v3 = (void **)a1[2];
    }
  }
  *long long v4 = 0;
  unint64_t v10 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v10 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v11 = v10 >> 3;
  if (v11 == 1)
  {
    uint64_t v12 = 64;
  }
  else
  {
    if (v11 != 2) {
      goto LABEL_16;
    }
    uint64_t v12 = 128;
  }
  a1[4] = v12;
LABEL_16:
  while (v2 != v3)
  {
    long long v13 = *v2++;
    operator delete(v13);
  }
  return sub_1000D7EB4((uint64_t)a1);
}

void *sub_1006B24F4(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1006B2578(void *a1, uint64_t a2, double a3, double a4)
{
  v7[3] = 0;
  sub_1006B2634((uint64_t)a1, (uint64_t)v7, a3, a4);
  sub_1006B2858(v7);
  *a1 = off_1022C3888;
  sub_1006ADA50((uint64_t)(a1 + 20), a2);
  return a1;
}

void sub_1006B2610(_Unwind_Exception *a1)
{
  sub_1006B26C0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B2634(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C38F8;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  sub_1006B27C0(a1 + 128, a2);
  return a1;
}

void sub_1006B26AC(_Unwind_Exception *a1)
{
  sub_1002CDF4C(v1);
  _Unwind_Resume(a1);
}

void *sub_1006B26C0(void *a1)
{
  *a1 = off_1022C38F8;
  uint64_t v2 = a1 + 2;
  sub_1006B2858(a1 + 16);
  sub_1002CDF4C(v2);
  return a1;
}

void sub_1006B2714(void *a1)
{
  sub_1006B33F4(a1);

  operator delete();
}

void sub_1006B274C(void *a1)
{
  *a1 = off_1022C38F8;
  uint64_t v1 = a1 + 2;
  sub_1006B2858(a1 + 16);
  sub_1002CDF4C(v1);

  operator delete();
}

uint64_t sub_1006B27C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_1006B2858(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1006B28DC(void *a1, uint64_t a2, double a3, double a4)
{
  v7[3] = 0;
  sub_1006B2998((uint64_t)a1, (uint64_t)v7, a3, a4);
  sub_1006B2DAC(v7);
  *a1 = off_1022C3928;
  sub_1006ADA50((uint64_t)(a1 + 22), a2);
  return a1;
}

void sub_1006B2974(_Unwind_Exception *a1)
{
  sub_1006B2A44(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B2998(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C3998;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(void *)(a1 + 136) = 0;
  sub_1006B2BBC(a1 + 144, a2);
  return a1;
}

void sub_1006B2A20(_Unwind_Exception *a1)
{
  long long v4 = *(void **)(v1 + 120);
  if (v4)
  {
    *(void *)(v1 + 128) = v4;
    operator delete(v4);
  }
  sub_1006B2C54(v2);
  _Unwind_Resume(a1);
}

void *sub_1006B2A44(void *a1)
{
  *a1 = off_1022C3998;
  sub_1006B2DAC(a1 + 18);
  uint64_t v2 = (void *)a1[15];
  if (v2)
  {
    a1[16] = v2;
    operator delete(v2);
  }
  sub_1006B2C54(a1 + 2);
  return a1;
}

void sub_1006B2AA0(void *a1)
{
  *a1 = off_1022C3928;
  sub_1006ADD54(a1 + 22);
  sub_1006B2A44(a1);

  operator delete();
}

uint64_t sub_1006B2B08(uint64_t a1)
{
  if (!*(void *)(a1 + 200)) {
    return 0;
  }
  uint64_t v1 = 1;
  if ((sub_1006A81F8(a1 + 176, 1) & 1) == 0) {
    return 0;
  }
  return v1;
}

BOOL sub_1006B2B48(uint64_t a1)
{
  return *(void *)(a1 + 200) && (sub_1006A81F8(a1 + 176, 0) & 1) != 0;
}

void sub_1006B2B84(void *a1)
{
  sub_1006B2A44(a1);

  operator delete();
}

uint64_t sub_1006B2BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1006B2C54(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  if (v3 == v2)
  {
    long long v4 = a1 + 5;
    uint64_t v3 = (void **)a1[1];
  }
  else
  {
    long long v4 = a1 + 5;
    unint64_t v5 = a1[4];
    long long v6 = &v2[v5 / 0x55];
    unint64_t v7 = (unint64_t)*v6;
    unint64_t v8 = (unint64_t)*v6 + 48 * (v5 % 0x55);
    unint64_t v9 = (unint64_t)v2[(a1[5] + v5) / 0x55] + 48 * ((a1[5] + v5) % 0x55);
    if (v8 != v9)
    {
      do
      {
        unint64_t v10 = *(void **)(v8 + 24);
        if (v10)
        {
          *(void *)(v8 + 32) = v10;
          operator delete(v10);
          unint64_t v7 = (unint64_t)*v6;
        }
        v8 += 48;
        if (v8 - v7 == 4080)
        {
          unint64_t v11 = (unint64_t)v6[1];
          ++v6;
          unint64_t v7 = v11;
          unint64_t v8 = v11;
        }
      }
      while (v8 != v9);
      uint64_t v2 = (void **)a1[1];
      uint64_t v3 = (void **)a1[2];
    }
  }
  *long long v4 = 0;
  unint64_t v12 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v12 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v13 = v12 >> 3;
  if (v13 == 1)
  {
    uint64_t v14 = 42;
  }
  else
  {
    if (v13 != 2) {
      goto LABEL_18;
    }
    uint64_t v14 = 85;
  }
  a1[4] = v14;
LABEL_18:
  while (v2 != v3)
  {
    long long v15 = *v2++;
    operator delete(v15);
  }

  return sub_1000D7EB4((uint64_t)a1);
}

void *sub_1006B2DAC(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1006B2E30(void *a1, uint64_t a2, double a3, double a4)
{
  v7[3] = 0;
  sub_1006B2EEC((uint64_t)a1, (uint64_t)v7, a3, a4);
  sub_1006B3370(v7);
  *a1 = off_1022C39C8;
  sub_1006ADA50((uint64_t)(a1 + 23), a2);
  return a1;
}

void sub_1006B2EC8(_Unwind_Exception *a1)
{
  sub_1006B2FAC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B2EEC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(void *)a1 = off_1022C3A38;
  *(unsigned char *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = xmmword_101D27D40;
  *(double *)(a1 + 80) = a3;
  *(double *)(a1 + 88) = a4;
  *(void *)(a1 + 96) = 0xBFF0000000000000;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 104) = 0x600000006;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 136) = _Q0;
  sub_1006B3178(a1 + 152, a2);
  return a1;
}

void sub_1006B2F84(_Unwind_Exception *a1)
{
  long long v4 = v3;
  long long v6 = *v4;
  if (*v4)
  {
    *(void *)(v1 + 120) = v6;
    operator delete(v6);
  }
  sub_1006B3210(v2);
  _Unwind_Resume(a1);
}

void *sub_1006B2FAC(void *a1)
{
  *a1 = off_1022C3A38;
  sub_1006B3370(a1 + 19);
  uint64_t v2 = (void *)a1[14];
  if (v2)
  {
    a1[15] = v2;
    operator delete(v2);
  }
  sub_1006B3210(a1 + 2);
  return a1;
}

void *sub_1006B3008(void *a1)
{
  *a1 = off_1022C39C8;
  sub_1006ADD54(a1 + 23);

  return sub_1006B2FAC(a1);
}

void sub_1006B305C(void *a1)
{
  *a1 = off_1022C39C8;
  sub_1006ADD54(a1 + 23);
  sub_1006B2FAC(a1);

  operator delete();
}

uint64_t sub_1006B30C4(uint64_t a1)
{
  if (!*(void *)(a1 + 208)) {
    return 0;
  }
  uint64_t v1 = 1;
  if ((sub_1006A81F8(a1 + 184, 1) & 1) == 0) {
    return 0;
  }
  return v1;
}

BOOL sub_1006B3104(uint64_t a1)
{
  return *(void *)(a1 + 208) && (sub_1006A81F8(a1 + 184, 0) & 1) != 0;
}

void sub_1006B3140(void *a1)
{
  sub_1006B2FAC(a1);

  operator delete();
}

uint64_t sub_1006B3178(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1006B3210(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  if (v3 == v2)
  {
    long long v4 = a1 + 5;
    uint64_t v3 = (void **)a1[1];
  }
  else
  {
    long long v4 = a1 + 5;
    unint64_t v5 = a1[4];
    long long v6 = &v2[v5 / 0x49];
    unint64_t v7 = (unint64_t)*v6;
    unint64_t v8 = (unint64_t)*v6 + 56 * (v5 % 0x49);
    unint64_t v9 = (unint64_t)v2[(a1[5] + v5) / 0x49] + 56 * ((a1[5] + v5) % 0x49);
    if (v8 != v9)
    {
      do
      {
        unint64_t v10 = *(void **)(v8 + 16);
        if (v10)
        {
          *(void *)(v8 + 24) = v10;
          operator delete(v10);
          unint64_t v7 = (unint64_t)*v6;
        }
        v8 += 56;
        if (v8 - v7 == 4088)
        {
          unint64_t v11 = (unint64_t)v6[1];
          ++v6;
          unint64_t v7 = v11;
          unint64_t v8 = v11;
        }
      }
      while (v8 != v9);
      uint64_t v2 = (void **)a1[1];
      uint64_t v3 = (void **)a1[2];
    }
  }
  *long long v4 = 0;
  unint64_t v12 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v12 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v13 = v12 >> 3;
  if (v13 == 1)
  {
    uint64_t v14 = 36;
  }
  else
  {
    if (v13 != 2) {
      goto LABEL_18;
    }
    uint64_t v14 = 73;
  }
  a1[4] = v14;
LABEL_18:
  while (v2 != v3)
  {
    long long v15 = *v2++;
    operator delete(v15);
  }

  return sub_1000D7EB4((uint64_t)a1);
}

void *sub_1006B3370(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1006B33F4(void *a1)
{
  *a1 = off_1022C3888;
  uint64_t v2 = a1 + 16;
  sub_1006ADD54(a1 + 20);
  *a1 = off_1022C38F8;
  sub_1006B2858(v2);
  sub_1002CDF4C(a1 + 2);
  return a1;
}

void *sub_1006B3478(void *a1)
{
  *a1 = off_1022C3748;
  uint64_t v2 = a1 + 14;
  sub_1006ADD54(a1 + 18);
  *a1 = off_1022C37B8;
  sub_1006B1FAC(v2);
  sub_1000D80C4(a1 + 2);
  return a1;
}

void *sub_1006B34FC(void *a1)
{
  *a1 = off_1022C36A8;
  uint64_t v2 = a1 + 14;
  sub_1006ADD54(a1 + 18);
  *a1 = off_1022C3718;
  sub_1006B1C4C(v2);
  sub_1000D80C4(a1 + 2);
  return a1;
}

void *sub_1006B3580(void *a1)
{
  *a1 = off_1022C35C0;
  uint64_t v2 = a1 + 284;
  a1[284] = off_1022C39C8;
  sub_1006ADD54(a1 + 307);
  sub_1006B2FAC(v2);
  a1[258] = off_1022C3928;
  sub_1006ADD54(a1 + 280);
  sub_1006B2A44(a1 + 258);
  sub_1006B33F4(a1 + 234);
  a1[210] = off_1022C37E8;
  sub_1006ADD54(a1 + 230);
  sub_1006B219C(a1 + 210);
  sub_1006A8FC0(a1 + 181);
  sub_1006AAB18(a1 + 137);
  sub_1006B3478(a1 + 115);
  a1[59] = off_1022C2D18;
  sub_1006A9C3C(a1 + 111);
  sub_1006A9CC0(a1 + 61);
  sub_1006B34FC(a1 + 37);
  a1[1] = off_1022C26F8;
  sub_1006A7C78(a1 + 33);
  sub_1004F4578(a1 + 3);
  return a1;
}

void sub_1006B36DC()
{
}

void *sub_1006B36F0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C3AA8;
  result[1] = v3;
  return result;
}

uint64_t sub_1006B3738(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C3AA8;
  a2[1] = v2;
  return result;
}

uint64_t sub_1006B3764(uint64_t a1, unsigned char *a2)
{
  if (*a2) {
    sub_1006A52DC();
  }
  else {
    sub_1006A5494();
  }
  return 1;
}

uint64_t sub_1006B3790(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006B37D0()
{
}

void sub_1006B37E0()
{
}

void *sub_1006B37F4(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C3B38;
  result[1] = v3;
  return result;
}

uint64_t sub_1006B383C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C3B38;
  a2[1] = v2;
  return result;
}

uint64_t sub_1006B3868(uint64_t a1, unsigned __int8 *a2)
{
  return sub_100E57908(*(void *)(a1 + 8) + 6624, *a2, 0);
}

uint64_t sub_1006B3880(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006B38C0()
{
}

void sub_1006B38D0()
{
}

void *sub_1006B38E4(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C3BB8;
  result[1] = v3;
  return result;
}

uint64_t sub_1006B392C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C3BB8;
  a2[1] = v2;
  return result;
}

uint64_t sub_1006B3958(uint64_t a1, unsigned __int8 *a2)
{
  return sub_100E56D38(*(void *)(a1 + 8) + 6624, *a2);
}

uint64_t sub_1006B396C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006B39AC()
{
}

void sub_1006B39BC()
{
}

void *sub_1006B39D0(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C3C38;
  result[1] = v3;
  return result;
}

uint64_t sub_1006B3A18(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C3C38;
  a2[1] = v2;
  return result;
}

void sub_1006B3A44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8368);
  if (v2) {
    sub_100D09B0C(v2, a2);
  }
}

uint64_t sub_1006B3A58(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006B3A98()
{
}

void *sub_1006B3AA4(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  *a1 = off_10234BF80;
  id v9 = a5;
  *a1 = off_1022C3CB8;
  a1[1] = v9;
  a1[2] = a3;
  a1[3] = a4;
  id v10 = a2;
  a1[5] = 0;
  a1[4] = v10;
  a1[6] = 0;
  v14[0] = 0;
  v14[1] = v14;
  int v14[2] = 0x2020000000;
  char v15 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 3221225472;
  aBlock[2] = sub_1006B3C2C;
  aBlock[3] = &unk_1022B6BE8;
  aBlock[4] = v14;
  a1[5] = _Block_copy(aBlock);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_1006B3C40;
  v12[3] = &unk_1022B6C10;
  void v12[4] = v14;
  a1[6] = _Block_copy(v12);
  _Block_object_dispose(v14, 8);
  return a1;
}

void sub_1006B3C04(_Unwind_Exception *a1)
{
  sub_1019D78CC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B3C2C(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  return result;
}

BOOL sub_1006B3C40(uint64_t a1)
{
  return *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) == 0;
}

void sub_1006B3C5C(uint64_t a1)
{
  sub_1006B3F78(a1);

  operator delete();
}

id sub_1006B3C94(void *a1, int a2, const void *a3, unint64_t a4)
{
  DWORD2(v22) = 0;
  if (a4 >= 0x20) {
    size_t v8 = 32;
  }
  else {
    size_t v8 = a4;
  }
  if (v8 <= 0x14) {
    size_t v9 = 21 - v8;
  }
  else {
    size_t v9 = 0;
  }
  bzero((char *)&__dst + v8, v9);
  memcpy(&__dst, a3, v8);
  if (a4 >= 0x21)
  {
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022C2688);
    }
    id v10 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 136315906;
      unint64_t v32 = 0x8000000101D29C06 & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v33 = 2048;
      uint64_t v34 = 32;
      __int16 v35 = 2048;
      unint64_t v36 = a4;
      __int16 v37 = 1024;
      int v38 = a2;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "SIZE MISMATCH: %s=%lu vs sz=%zu notification=%d", buf, 0x26u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022C2688);
      }
      int v23 = 136315906;
      unint64_t v24 = 0x8000000101D29C06 & 0x7FFFFFFFFFFFFFFFLL;
      __int16 v25 = 2048;
      uint64_t v26 = 32;
      __int16 v27 = 2048;
      unint64_t v28 = a4;
      __int16 v29 = 1024;
      int v30 = a2;
      long long v16 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMotionNotifier::SiloDispatcher<StairsEscalationEvent>::dispatchData(int, const void *, size_t) [T = StairsEscalationEvent]", "%s\n", v16);
      if (v16 != (char *)buf) {
        free(v16);
      }
    }
  }
  uint64_t v12 = a1[2];
  uint64_t v11 = a1[3];
  uint64_t v13 = a1[6];
  uint64_t v14 = (void *)a1[4];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_1006B3FF4;
  v17[3] = &unk_1022C3D00;
  _OWORD v17[4] = v13;
  v17[5] = v12;
  long long v18 = __dst;
  long long v19 = v22;
  uint64_t v20 = v11;
  return [v14 async:v17];
}

uint64_t sub_1006B3F78(uint64_t a1)
{
  *(void *)a1 = off_1022C3CB8;
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  _Block_release(*(const void **)(a1 + 40));
  _Block_release(*(const void **)(a1 + 48));

  return sub_1019D78CC(a1);
}

uint64_t sub_1006B3FF4(void *a1)
{
  uint64_t result = (*(uint64_t (**)(void))(a1[4] + 16))();
  if (result)
  {
    uint64_t v3 = (uint64_t (*)(void *, uint64_t))a1[5];
    uint64_t v4 = a1[10];
    return v3(a1 + 6, v4);
  }
  return result;
}

void sub_1006B4050(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022C3D30;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1006B4070(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022C3D30;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

id sub_1006B40C4(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return sub_1006B4450((uint64_t)&v7, a1);
  }
  if (!getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_102418F90 != -1) {
      dispatch_once(&qword_102418F90, &stru_1022C3D70);
    }
    unint64_t v5 = qword_102418F98;
    if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v15 = v2;
      __int16 v16 = 2048;
      uint64_t v17 = 0;
      __int16 v18 = 2080;
      unint64_t v19 = 0x8000000101D29C82 & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
    }
    if (!sub_10013D1A0(115, 0)) {
      return 0;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102418F90 == -1) {
      goto LABEL_18;
    }
    goto LABEL_20;
  }
  if (qword_102418F90 != -1) {
    dispatch_once(&qword_102418F90, &stru_1022C3D70);
  }
  uint64_t v3 = qword_102418F98;
  if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)uint64_t buf = 134218498;
    id v15 = v2;
    __int16 v16 = 2048;
    uint64_t v17 = 0;
    __int16 v18 = 2080;
    unint64_t v19 = 0x8000000101D29C82 & 0x7FFFFFFFFFFFFFFFLL;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
  }
  if (!sub_10013D1A0(115, 0)) {
    return 0;
  }
  bzero(buf, 0x65CuLL);
  if (qword_102418F90 != -1) {
LABEL_20:
  }
    dispatch_once(&qword_102418F90, &stru_1022C3D70);
LABEL_18:
  int v8 = 134218498;
  id v9 = v2;
  __int16 v10 = 2048;
  uint64_t v11 = 0;
  __int16 v12 = 2080;
  unint64_t v13 = 0x8000000101D29C82 & 0x7FFFFFFFFFFFFFFFLL;
  long long v6 = (char *)_os_log_send_and_compose_impl();
  sub_1004BA5E4("Generic", 1, 0, 0, "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLMotionStateMediator_Type::NotificationData, Callback = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]", "%s\n", v6);
  if (v6 != (char *)buf) {
    free(v6);
  }
  return 0;
}

id sub_1006B4450(uint64_t a1, void *a2)
{
  if (![a2 cppObjectPtr]
    && objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1023929D8))
  {
    if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") != (id)320) {
      sub_101A6AA00();
    }
    [a2 setCppObjectPtr:[objc_msgSend(objc_msgSend(a2, "serialized"), "bytes") bytes]];
  }

  return [a2 cppObjectPtr];
}

void sub_1006B44D8(id a1)
{
  qword_102418F98 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

void sub_1006B4508(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    for (uint64_t i = 0; i != -176; i -= 88)
    {
      *(void *)(a2 + i + 1344) = off_1022C3DA0;
      sub_1000F5BB0(a2 + i + 1408, *(void **)(a2 + i + 1416));
      sub_10041F48C((void *)(a2 + i + 1360));
    }
    for (uint64_t j = 0; j != -176; j -= 88)
    {
      *(void *)(a2 + j + 1008) = off_1022C3DA0;
      sub_1000F5BB0(a2 + j + 1072, *(void **)(a2 + j + 1080));
      sub_10041F48C((void *)(a2 + j + 1024));
    }
    for (uint64_t k = 0; k != -264; k -= 88)
    {
      *(void *)(a2 + k + 552) = off_1022C3DA0;
      sub_1000F5BB0(a2 + k + 616, *(void **)(a2 + k + 624));
      sub_10041F48C((void *)(a2 + k + 568));
    }
    operator delete();
  }
}

uint64_t sub_1006B4640(uint64_t a1)
{
  *(void *)a1 = off_1022C3DA0;
  sub_1000F5BB0(a1 + 64, *(void **)(a1 + 72));
  sub_10041F48C((void *)(a1 + 16));
  return a1;
}

void sub_1006B4690(uint64_t a1)
{
  *(void *)a1 = off_1022C3DA0;
  sub_1000F5BB0(a1 + 64, *(void **)(a1 + 72));
  sub_10041F48C((void *)(a1 + 16));

  operator delete();
}

void sub_1006B4700(uint64_t a1, float *a2)
{
  uint64_t v3 = (void *)(a1 + 16);
  uint64_t v4 = (uint64_t **)(a1 + 64);
  long long v6 = sub_1006B4B50((uint64_t **)(a1 + 64), a2);
  sub_1006B47B0(v3, &v6);
  if (*(void *)(a1 + 56) > (unint64_t)*(unsigned int *)(a1 + 8))
  {
    unint64_t v5 = *(uint64_t **)(*(void *)(*(void *)(a1 + 24) + ((*(void *)(a1 + 48) >> 6) & 0x3FFFFFFFFFFFFF8))
                     + 8 * (*(void *)(a1 + 48) & 0x1FFLL));
    sub_1000F0A30(v4, v5);
    operator delete(v5);
    *(int64x2_t *)(a1 + 48) = vaddq_s64(*(int64x2_t *)(a1 + 48), (int64x2_t)xmmword_101D0A740);
    sub_10007F07C((uint64_t)v3, 1);
  }
}

void sub_1006B47B0(void *a1, void *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = ((v4 - v5) << 6) - 1;
  }
  uint64_t v7 = a1[5];
  unint64_t v8 = v7 + a1[4];
  if (v6 == v8)
  {
    sub_1006B4838(a1);
    uint64_t v5 = a1[1];
    uint64_t v7 = a1[5];
    unint64_t v8 = a1[4] + v7;
  }
  *(void *)(*(void *)(v5 + ((v8 >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * (v8 & 0x1FF)) = *a2;
  a1[5] = v7 + 1;
}

void sub_1006B4838(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x200;
  unint64_t v4 = v2 - 512;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    id v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000DA54C(v5, v33);
      __int16 v35 = &v34[8 * (v33 >> 2)];
      __int16 v37 = &v34[8 * v36];
      int v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        int64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)int64_t v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    unint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      id v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      sub_10017F0B4(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    sub_1002D02D8((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    id v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v46);
      __int16 v35 = &v34[8 * (v46 >> 2)];
      __int16 v37 = &v34[8 * v47];
      unint64_t v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        unint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)unint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      uint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_1000DA54C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1000uLL);
  sub_1000DA434(&v54, &v53);
  __int16 v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1002D03F8((uint64_t)&v54, v27);
  }
  __int16 v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1006B4B04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

float *sub_1006B4B50(uint64_t **a1, float *a2)
{
  unint64_t v4 = (float *)operator new(0x20uLL);
  float v5 = *a2;
  v4[7] = *a2;
  uint64_t v6 = a1 + 1;
  uint64_t v7 = a1[1];
  if (v7)
  {
    do
    {
      while (1)
      {
        uint64_t v6 = (uint64_t **)v7;
        if (v5 >= *((float *)v7 + 7)) {
          break;
        }
        uint64_t v7 = (uint64_t *)*v7;
        unint64_t v8 = v6;
        if (!*v6) {
          goto LABEL_8;
        }
      }
      uint64_t v7 = (uint64_t *)v7[1];
    }
    while (v7);
    unint64_t v8 = v6 + 1;
  }
  else
  {
    unint64_t v8 = a1 + 1;
  }
LABEL_8:
  sub_1000EDF90(a1, (uint64_t)v6, v8, (uint64_t *)v4);
  return v4;
}

uint64_t sub_1006B4BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)a2 = *(_OWORD *)(a1 + 32);
  unint64_t v4 = (unsigned char *)(a2 + 16);
  if (*(char *)(a1 + 71) < 0)
  {
    sub_1000DC48C(v4, *(void **)(a1 + 48), *(void *)(a1 + 56));
  }
  else
  {
    *(_OWORD *)unint64_t v4 = *(_OWORD *)(a1 + 48);
    *(void *)(a2 + 32) = *(void *)(a1 + 64);
  }
  return sub_1006AC1AC(a2 + 40, (void *)(a1 + 72));
}

void sub_1006B4C50(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 39) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006B4C6C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  if (*(char *)(a2 + 71) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 48), *(void **)(a2 + 48), *(void *)(a2 + 56));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = v4;
  }
  return sub_1006AC1AC(a1 + 72, (void *)(a2 + 72));
}

void sub_1006B4CDC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 71) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006B4CF8(uint64_t a1)
{
  sub_1004F6960((void *)(a1 + 72));
  if (*(char *)(a1 + 71) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 48);
    operator delete(v2);
  }
}

void sub_1006B4D48(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_1006B4DBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1006B4E60((uint64_t *)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B4DD4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result)
  {
    sub_100692178(result);
    operator delete();
  }
  return result;
}

uint64_t sub_1006B4E1C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1006B4E60(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_100692178(result);
    operator delete();
  }
  return result;
}

uint64_t sub_1006B4EB0(uint64_t a1)
{
  sub_100902D40(a1 + 728);
  sub_1006A79C8((void *)(a1 + 752));
  uint64_t v2 = *(void **)(a1 + 728);
  if (v2)
  {
    *(void *)(a1 + 736) = v2;
    operator delete(v2);
  }
  sub_100663B8C((void *)(a1 + 672));
  if (*(char *)(a1 + 671) < 0) {
    operator delete(*(void **)(a1 + 648));
  }
  uint64_t v3 = *(void *)(a1 + 224);
  *(void *)(a1 + 224) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  sub_100663B8C((void *)(a1 + 176));
  sub_100663B8C((void *)(a1 + 128));
  sub_1004F6960((void *)(a1 + 64));
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  return a1;
}

void sub_1006B4F70()
{
}

void *sub_1006B4F84(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C3E88;
  result[1] = v3;
  return result;
}

uint64_t sub_1006B4FCC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C3E88;
  a2[1] = v2;
  return result;
}

void sub_1006B4FF8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1006B5000(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006B5040()
{
}

__n128 sub_1006B504C(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 56 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_1006B5114(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x38)) + 72 * (v7 % 0x38);
  *(_OWORD *)unint64_t v8 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v10 = *(_OWORD *)(a2 + 32);
  long long v11 = *(_OWORD *)(a2 + 48);
  *(void *)(v8 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(v8 + 32) = v10;
  *(_OWORD *)(v8 + 48) = v11;
  *(__n128 *)(v8 + 16) = result;
  ++a1[5];
  return result;
}

void sub_1006B5114(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x38;
  unint64_t v4 = v2 - 56;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    id v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000DA54C(v5, v33);
      __int16 v35 = &v34[8 * (v33 >> 2)];
      __int16 v37 = &v34[8 * v36];
      int v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        int64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)int64_t v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    unint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      id v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFC0uLL);
      sub_10017F0B4(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFC0uLL);
    sub_1002D02D8((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    id v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v46);
      __int16 v35 = &v34[8 * (v46 >> 2)];
      __int16 v37 = &v34[8 * v47];
      unint64_t v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        unint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)unint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      uint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_1000DA54C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFC0uLL);
  sub_1000DA434(&v54, &v53);
  __int16 v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1002D03F8((uint64_t)&v54, v27);
  }
  __int16 v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1006B53E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

__n128 sub_1006B542C(void *a1, __n128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 32 * (v4 - v5) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_1006B54B8(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  __n128 result = *a2;
  *(__n128 *)(*(void *)(v5 + ((v7 >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * v7) = *a2;
  ++a1[5];
  return result;
}

void sub_1006B54B8(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x100;
  unint64_t v4 = v2 - 256;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    id v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000DA54C(v5, v33);
      __int16 v35 = &v34[8 * (v33 >> 2)];
      __int16 v37 = &v34[8 * v36];
      int v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        int64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)int64_t v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    unint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      id v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      sub_10017F0B4(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    sub_1002D02D8((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    id v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v46);
      __int16 v35 = &v34[8 * (v46 >> 2)];
      __int16 v37 = &v34[8 * v47];
      unint64_t v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        unint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)unint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      uint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_1000DA54C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0x1000uLL);
  sub_1000DA434(&v54, &v53);
  __int16 v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1002D03F8((uint64_t)&v54, v27);
  }
  __int16 v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1006B5784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

__n128 sub_1006B57D0(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 102 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_1006B5888(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x66)) + 40 * (v7 % 0x66);
  __n128 result = *(__n128 *)a2;
  long long v10 = *(_OWORD *)(a2 + 16);
  *(void *)(v8 + 32) = *(void *)(a2 + 32);
  *(__n128 *)unint64_t v8 = result;
  *(_OWORD *)(v8 + 16) = v10;
  ++a1[5];
  return result;
}

void sub_1006B5888(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x66;
  unint64_t v4 = v2 - 102;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    id v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000DA54C(v5, v33);
      __int16 v35 = &v34[8 * (v33 >> 2)];
      __int16 v37 = &v34[8 * v36];
      int v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        int64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)int64_t v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    unint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      id v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFF0uLL);
      sub_10017F0B4(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFF0uLL);
    sub_1002D02D8((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    id v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v46);
      __int16 v35 = &v34[8 * (v46 >> 2)];
      __int16 v37 = &v34[8 * v47];
      unint64_t v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        unint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)unint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      uint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_1000DA54C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFF0uLL);
  sub_1000DA434(&v54, &v53);
  __int16 v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1002D03F8((uint64_t)&v54, v27);
  }
  __int16 v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1006B5B54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

__n128 sub_1006B5BA0(void *a1, long long *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 21 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_1006B5C80(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x15)) + 192 * (v7 % 0x15);
  long long v9 = *a2;
  long long v10 = a2[1];
  long long v11 = a2[3];
  *(_OWORD *)(v8 + 32) = a2[2];
  *(_OWORD *)(v8 + 48) = v11;
  *(_OWORD *)unint64_t v8 = v9;
  *(_OWORD *)(v8 + 16) = v10;
  long long v12 = a2[4];
  long long v13 = a2[5];
  long long v14 = a2[7];
  *(_OWORD *)(v8 + 96) = a2[6];
  *(_OWORD *)(v8 + 112) = v14;
  *(_OWORD *)(v8 + 64) = v12;
  *(_OWORD *)(v8 + 80) = v13;
  __n128 result = (__n128)a2[8];
  long long v16 = a2[9];
  long long v17 = a2[11];
  *(_OWORD *)(v8 + 160) = a2[10];
  *(_OWORD *)(v8 + 176) = v17;
  *(__n128 *)(v8 + 128) = result;
  *(_OWORD *)(v8 + 144) = v16;
  ++a1[5];
  return result;
}

void sub_1006B5C80(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x15;
  unint64_t v4 = v2 - 21;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    long long v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000DA54C(v5, v33);
      __int16 v35 = &v34[8 * (v33 >> 2)];
      __int16 v37 = &v34[8 * v36];
      int v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        int64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)int64_t v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    unint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      long long v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFC0uLL);
      sub_10017F0B4(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFC0uLL);
    sub_1002D02D8((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    long long v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v46);
      __int16 v35 = &v34[8 * (v46 >> 2)];
      __int16 v37 = &v34[8 * v47];
      unint64_t v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        unint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)unint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      uint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_1000DA54C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFC0uLL);
  sub_1000DA434(&v54, &v53);
  __int16 v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1002D03F8((uint64_t)&v54, v27);
  }
  __int16 v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1006B5F4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

__n128 sub_1006B5F98(void *a1, __n128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 170 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_1006B6048(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = (__n128 *)(*(void *)(v5 + 8 * (v7 / 0xAA)) + 24 * (v7 % 0xAA));
  __n128 result = *a2;
  v8[1].n128_u64[0] = a2[1].n128_u64[0];
  __n128 *v8 = result;
  ++a1[5];
  return result;
}

void sub_1006B6048(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0xAA;
  unint64_t v4 = v2 - 170;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    long long v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000DA54C(v5, v33);
      __int16 v35 = &v34[8 * (v33 >> 2)];
      __int16 v37 = &v34[8 * v36];
      int v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        int64_t v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)int64_t v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    unint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      long long v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFF0uLL);
      sub_10017F0B4(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFF0uLL);
    sub_1002D02D8((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    long long v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v46);
      __int16 v35 = &v34[8 * (v46 >> 2)];
      __int16 v37 = &v34[8 * v47];
      unint64_t v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        unint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)unint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      uint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  uint64_t v56 = a1 + 3;
  *(void *)&long long v54 = sub_1000DA54C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFF0uLL);
  sub_1000DA434(&v54, &v53);
  __int16 v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1002D03F8((uint64_t)&v54, v27);
  }
  __int16 v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1006B6314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1006B6360(uint64_t a1)
{
  if (qword_102418FD0 != -1) {
    dispatch_once(&qword_102418FD0, &stru_1022C2688);
  }
  unint64_t v2 = qword_102418FD8;
  if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Disabling buffer at CLWorkoutPredictorSourceBuffer", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022C2688);
    }
    unint64_t v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSourceBuffer<CLElevationChangeEntry>::disableSource() [T = CLElevationChangeEntry]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  *(void *)(a1 + 328) = 0x10000000000000;
  *(unsigned char *)(a1 + 264) = 0;
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24))(a1);
}

uint64_t sub_1006B6528(uint64_t a1)
{
  if (qword_102418FD0 != -1) {
    dispatch_once(&qword_102418FD0, &stru_1022C2688);
  }
  unint64_t v2 = qword_102418FD8;
  if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Disabling buffer at CLWorkoutPredictorSourceBuffer", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022C2688);
    }
    unint64_t v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSourceBuffer<CLOdometerEntry>::disableSource() [T = CLOdometerEntry]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  *(void *)(a1 + 72) = 0x10000000000000;
  *(unsigned char *)(a1 + 8) = 0;
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24))(a1);
}

uint64_t sub_1006B66F0(uint64_t a1)
{
  if (qword_102418FD0 != -1) {
    dispatch_once(&qword_102418FD0, &stru_1022C2688);
  }
  unint64_t v2 = qword_102418FD8;
  if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Disabling buffer at CLWorkoutPredictorSourceBuffer", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022C2688);
    }
    unint64_t v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLSourceBuffer<CLWorkoutClassifier_Type::WorkoutClassifierResult>::disableSource() [T = CLWorkoutClassifier_Type::WorkoutClassifierResult]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  *(void *)(a1 + 72) = 0x10000000000000;
  *(unsigned char *)(a1 + 8) = 0;
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24))(a1);
}

uint64_t sub_1006B68B8(uint64_t a1)
{
  *(void *)a1 = off_1022C3F18;
  unint64_t v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *unint64_t v2 = 0;
  *(void *)(a1 + 16) = 0;
  return a1;
}

void sub_1006B6928()
{
}

uint64_t sub_1006B69DC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    operator delete();
  }
  return result;
}

BOOL sub_1006B69FC()
{
  uint64_t v1 = qword_102418FD8;
  return os_log_type_enabled(v1, OS_LOG_TYPE_FAULT);
}

uint64_t sub_1006B6A1C()
{
  sub_100134750(qword_10247C948, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247C948, (void *)&_mh_execute_header);
  sub_100134750(qword_10247C960, "Acc800Fp");
  dword_10247C978 = 800;
  __cxa_atexit((void (*)(void *))sub_10058C198, qword_10247C960, (void *)&_mh_execute_header);
  sub_100134750(qword_10247C980, "DmFp");
  dword_10247C998 = 200;
  __cxa_atexit((void (*)(void *))sub_10058C198, qword_10247C980, (void *)&_mh_execute_header);
  sub_100134750(&qword_10247C9A0, "MotionStateMediator");

  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10247C9A0, (void *)&_mh_execute_header);
}

void sub_1006B726C(_Unwind_Exception *a1)
{
  if (STACK[0x350]) {
    sub_1000DB0A0((std::__shared_weak_count *)STACK[0x350]);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1006B75B8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 109);
}

void sub_1006B7650(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006B766C(uint64_t a1, char *a2, void *a3)
{
  uint64_t v5 = sub_1006B76DC(a1, a2, a3);
  *(void *)uint64_t v5 = off_1022C3F80;
  *(_DWORD *)(v5 + 109) = 65792;
  sub_1006B7788(v5, a2);
  return a1;
}

void sub_1006B76C8(_Unwind_Exception *a1)
{
  sub_1006B7B68(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B76DC(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1022C4180;
  sub_100134750((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 108) = 0;
  return a1;
}

void sub_1006B776C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006B7788(uint64_t a1, const char *a2)
{
  BOOL v13 = 0;
  sub_1000E9354(v12);
  sub_1000C7F88(buf);
  if (sub_100012960(*(uint64_t *)buf, "LocationProviders", v12))
  {
    uint64_t v4 = sub_1000D2988((uint64_t)v12, a2, &v13);
    if (*(void *)&buf[8]) {
      sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
    }
    if (v4)
    {
      *(unsigned char *)(a1 + 111) = v13;
      uint64_t v4 = 1;
    }
  }
  else
  {
    if (*(void *)&buf[8]) {
      sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
    }
    uint64_t v4 = 0;
  }
  if (!*(unsigned char *)(a1 + 111))
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C4110);
    }
    uint64_t v5 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 136380675;
      *(void *)&uint8_t buf[4] = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "LocationProvider,#Warning provider %{private}s disabled - will run but not send locations to clients", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C4110);
      }
      int v14 = 136380675;
      uint64_t v15 = a2;
      uint64_t v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLLocationProvider::checkEnable(const char *)", "%s\n", v11);
      if (v11 != buf) {
        free(v11);
      }
    }
  }
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C4110);
  }
  uint64_t v6 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = *(unsigned __int8 *)(a1 + 111);
    *(_DWORD *)uint64_t buf = 136380931;
    *(void *)&uint8_t buf[4] = a2;
    *(_WORD *)&unsigned char buf[12] = 1026;
    *(_DWORD *)&buf[14] = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "LocationProvider,Location Provider (%{private}s) set to (%{public}d)", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C4110);
    }
    int v9 = *(unsigned __int8 *)(a1 + 111);
    int v14 = 136380931;
    uint64_t v15 = a2;
    __int16 v16 = 1026;
    int v17 = v9;
    uint64_t v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLLocationProvider::checkEnable(const char *)", "%s\n", v10);
    if (v10 != buf) {
      free(v10);
    }
  }
  sub_10013F3C4(v12);
  return v4;
}

void sub_1006B7B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_10013F3C4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B7B68(uint64_t a1)
{
  *(void *)a1 = off_1022C4180;
  [*(id *)(a1 + 48) invalidate];

  sub_1004459BC(a1 + 80, *(void **)(a1 + 88));
  sub_100445A1C(a1 + 56, *(void **)(a1 + 64));
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_1006B7BF4(uint64_t a1)
{
  sub_1006B7B68(a1);

  operator delete();
}

uint64_t sub_1006B7C30(uint64_t result)
{
  *(unsigned char *)(result + 108) = 1;
  return result;
}

uint64_t sub_1006B7C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96))(a1, a2, a3, &unk_10241D230);
}

uint64_t sub_1006B7C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void *))(*(void *)a1 + 96))(a1, a2, a3, &unk_10241D230);
}

uint64_t sub_1006B7C94(uint64_t a1)
{
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C4110);
  }
  unint64_t v2 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_FAULT))
  {
    BOOL v3 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      BOOL v3 = (void *)*v3;
    }
    *(_DWORD *)uint64_t buf = 136315138;
    int v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "LocationProvider,%s,Wrong registration method called!", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C4110);
    }
    uint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLLocationProvider::registerForFilteredLocation(int, const CLLocationProvider_Type::Notification &, const double &)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  return 0;
}

uint64_t sub_1006B7E64(uint64_t a1)
{
  int v3 = 2;
  if (!sub_1001072EC(a1, &v3, 1))
  {
    int v3 = 1;
    if (!sub_1001072EC(a1, &v3, 1))
    {
      int v3 = 0;
      if (!sub_1001072EC(a1, &v3, 1))
      {
        int v3 = 9;
        (*(void (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
      }
    }
  }
  return 1;
}

uint64_t sub_1006B7F10(uint64_t a1, uint64_t a2)
{
  sub_1000DB3D4((uint64_t)v13);
  int v12 = 0;
  uint64_t v4 = (*(uint64_t (**)(uint64_t, int *, unsigned char *))(*(void *)a1 + 128))(a1, &v12, v13);
  if (v4)
  {
    memcpy((void *)a2, v14, 0x201uLL);
    uint64_t v5 = v15;
    uint64_t v6 = v16;
    if (v16) {
      atomic_fetch_add_explicit(&v16->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    *(void *)(a2 + 520) = v5;
    int v7 = *(std::__shared_weak_count **)(a2 + 528);
    *(void *)(a2 + 528) = v6;
    if (v7) {
      sub_1000DB0A0(v7);
    }
    long long v8 = v22[0];
    *(_OWORD *)(a2 + 600) = v21;
    *(_OWORD *)(a2 + 616) = v8;
    *(void *)(a2 + 629) = *(void *)((char *)v22 + 13);
    long long v9 = v18;
    *(_OWORD *)(a2 + 536) = v17;
    *(_OWORD *)(a2 + 552) = v9;
    long long v10 = v20;
    *(_OWORD *)(a2 + 568) = v19;
    *(_OWORD *)(a2 + 584) = v10;
  }

  if (v26) {
    sub_1000DB0A0(v26);
  }
  if (v25 < 0) {
    operator delete(v24);
  }
  if (v23) {
    sub_1000DB0A0(v23);
  }
  if (v16) {
    sub_1000DB0A0(v16);
  }
  return v4;
}

void sub_1006B803C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100458658((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B8050(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 232))();
}

void sub_1006B8074(uint64_t a1, _OWORD *a2)
{
  sub_1000DB3D4((uint64_t)v9);
  long long v4 = a2[7];
  v9[6] = a2[6];
  v9[7] = v4;
  v10[0] = a2[8];
  *(_OWORD *)((char *)v10 + 12) = *(_OWORD *)((char *)a2 + 140);
  long long v5 = a2[3];
  int v9[2] = a2[2];
  unsigned __int8 v9[3] = v5;
  long long v6 = a2[5];
  void v9[4] = a2[4];
  v9[5] = v6;
  long long v7 = a2[1];
  v9[0] = *a2;
  v9[1] = v7;
  int v8 = 0;
  (*(void (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 136))(a1, &v8, v9);
  int v8 = 2;
  (*(void (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 136))(a1, &v8, v9);
  int v8 = 1;
  (*(void (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 136))(a1, &v8, v9);
  int v8 = 3;
  (*(void (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 136))(a1, &v8, v9);
  int v8 = 4;
  (*(void (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 136))(a1, &v8, v9);
  int v8 = 39;
  (*(void (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 136))(a1, &v8, v9);
  int v8 = 10;
  (*(void (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 136))(a1, &v8, v9);

  if (v15) {
    sub_1000DB0A0(v15);
  }
  if (v14 < 0) {
    operator delete(v13);
  }
  if (v12) {
    sub_1000DB0A0(v12);
  }
  if (v11) {
    sub_1000DB0A0(v11);
  }
}

void sub_1006B82A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_100458658((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B82D4(uint64_t a1)
{
  int v3 = 0;
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
  int v3 = 2;
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
  int v3 = 1;
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
  int v3 = 3;
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
  int v3 = 4;
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
  int v3 = 39;
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
  int v3 = 10;
  (*(void (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
  int v3 = 5;
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
}

void *sub_1006B8494@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  snprintf(__str, 0x20uLL, "%d", *a1);
  return sub_100134750(a2, __str);
}

uint64_t sub_1006B8520(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 112);
}

void sub_1006B8528(char *a1, _OWORD *a2, uint64_t a3)
{
  if (qword_1024195A0 != -1) {
    dispatch_once(&qword_1024195A0, &stru_1022C4150);
  }
  long long v6 = qword_1024195A8;
  if (os_log_type_enabled((os_log_t)qword_1024195A8, OS_LOG_TYPE_DEBUG))
  {
    long long v7 = a1 + 8;
    if (a1[31] < 0) {
      long long v7 = (void *)*v7;
    }
    *(_DWORD *)uint64_t buf = 136315138;
    *(void *)&uint8_t buf[4] = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "LocationProvider,Sending through simulated location for %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024195A0 != -1) {
      dispatch_once(&qword_1024195A0, &stru_1022C4150);
    }
    long long v18 = a1 + 8;
    if (a1[31] < 0) {
      long long v18 = (void *)*v18;
    }
    int v20 = 136315138;
    long long v21 = v18;
    long long v19 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationProvider::sendSimulatedLocation(const CLDaemonLocation &, const CLDaemonLocationPrivate &)", "%s\n", v19);
    if (v19 != (char *)buf) {
      free(v19);
    }
  }
  sub_1000DB3D4((uint64_t)buf);
  long long v8 = a2[7];
  long long v28 = a2[6];
  long long v29 = v8;
  v30[0] = a2[8];
  *(_OWORD *)((char *)v30 + 12) = *(_OWORD *)((char *)a2 + 140);
  long long v9 = a2[3];
  long long v24 = a2[2];
  long long v25 = v9;
  long long v10 = a2[5];
  long long v26 = a2[4];
  long long v27 = v10;
  long long v11 = a2[1];
  *(_OWORD *)uint64_t buf = *a2;
  long long v23 = v11;
  memcpy(v31, (const void *)a3, 0x201uLL);
  uint64_t v12 = *(void *)(a3 + 520);
  BOOL v13 = *(std::__shared_weak_count **)(a3 + 528);
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  v31[65] = v12;
  char v14 = v32;
  long long v32 = v13;
  if (v14) {
    sub_1000DB0A0(v14);
  }
  long long v15 = *(_OWORD *)(a3 + 616);
  long long v37 = *(_OWORD *)(a3 + 600);
  v38[0] = v15;
  *(void *)((char *)v38 + 13) = *(void *)(a3 + 629);
  long long v16 = *(_OWORD *)(a3 + 552);
  long long v33 = *(_OWORD *)(a3 + 536);
  long long v34 = v16;
  long long v17 = *(_OWORD *)(a3 + 584);
  long long v35 = *(_OWORD *)(a3 + 568);
  long long v36 = v17;
  v31[43] = sub_10016C458();
  int v20 = 0;
  (*(void (**)(char *, int *, uint8_t *, void, uint64_t, uint64_t))(*(void *)a1 + 152))(a1, &v20, buf, 0, 0xFFFFFFFFLL, 1);

  if (v42) {
    sub_1000DB0A0(v42);
  }
  if (v41 < 0) {
    operator delete(__p);
  }
  if (v39) {
    sub_1000DB0A0(v39);
  }
  if (v32) {
    sub_1000DB0A0(v32);
  }
}

void sub_1006B882C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

void sub_1006B885C(uint64_t a1)
{
  sub_1000DB3D4((uint64_t)v3);
  int v2 = 9;
  (*(void (**)(uint64_t, int *, unsigned char *, void, uint64_t, uint64_t))(*(void *)a1 + 152))(a1, &v2, v3, 0, 0xFFFFFFFFLL, 1);

  if (v8) {
    sub_1000DB0A0(v8);
  }
  if (v7 < 0) {
    operator delete(v6);
  }
  if (v5) {
    sub_1000DB0A0(v5);
  }
  if (v4) {
    sub_1000DB0A0(v4);
  }
}

void sub_1006B8914(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100458658((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1006B8928(char *a1, int a2)
{
  if (qword_1024195A0 != -1) {
    dispatch_once(&qword_1024195A0, &stru_1022C4150);
  }
  long long v4 = qword_1024195A8;
  if (os_log_type_enabled((os_log_t)qword_1024195A8, OS_LOG_TYPE_DEBUG))
  {
    long long v5 = "enabled";
    if (!a2) {
      long long v5 = "disabled";
    }
    long long v6 = a1 + 8;
    if (a1[31] < 0) {
      long long v6 = (void *)*v6;
    }
    *(_DWORD *)uint64_t buf = 136315394;
    long long v24 = v5;
    __int16 v25 = 2080;
    long long v26 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "LocationProvider,Simulation is now %s for %s", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024195A0 != -1) {
      dispatch_once(&qword_1024195A0, &stru_1022C4150);
    }
    long long v8 = "enabled";
    if (!a2) {
      long long v8 = "disabled";
    }
    id v9 = a1 + 8;
    if (a1[31] < 0) {
      id v9 = (void *)*v9;
    }
    int v12 = 136315394;
    BOOL v13 = v8;
    __int16 v14 = 2080;
    long long v15 = v9;
    long long v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationProvider::setSimulationEnabled(BOOL)", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
  a1[109] = a2;
  *(_DWORD *)uint64_t buf = 9;
  (*(void (**)(char *, uint8_t *))(*(void *)a1 + 120))(a1, buf);
  *(_DWORD *)uint64_t buf = 0;
  (*(void (**)(char *, uint8_t *))(*(void *)a1 + 120))(a1, buf);
  a1[112] = 0;
  sub_1000DB3D4((uint64_t)&v12);
  char v18 = a1[109];
  if (qword_1024195A0 != -1) {
    dispatch_once(&qword_1024195A0, &stru_1022C4150);
  }
  char v7 = qword_1024195A8;
  if (os_log_type_enabled((os_log_t)qword_1024195A8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "LocationProvider,Notifying", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024195A0 != -1) {
      dispatch_once(&qword_1024195A0, &stru_1022C4150);
    }
    long long v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLLocationProvider::setSimulationEnabled(BOOL)", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
  }
  *(_DWORD *)uint64_t buf = 13;
  (*(void (**)(char *, uint8_t *, int *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, buf, &v12, 1, 0xFFFFFFFFLL, 0);

  if (v21) {
    sub_1000DB0A0(v21);
  }
  if (v20 < 0) {
    operator delete(__p);
  }
  if (v17) {
    sub_1000DB0A0(v17);
  }
  if (v16) {
    sub_1000DB0A0(v16);
  }
}

void sub_1006B8D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100458658((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1006B8DA8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 110) = a2;
  return result;
}

void *sub_1006B8DB0(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = (void *)sub_1000B7500(a1, a2, a3, a4, a5, a6);
  *uint64_t result = off_1022C40C8;
  return result;
}

void *sub_1006B8DE4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = (void *)sub_1006B8E18(a1, a2, a3, a4, a5);
  *uint64_t result = off_1022C40C8;
  return result;
}

uint64_t sub_1006B8E18(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  *(void *)a1 = off_1022B32C0;
  *(void *)(a1 + 8) = [[CLNotifierClientAdapter alloc] initWithClient:a1];
  *(void *)(a1 + 24) = a4;
  *(void *)(a1 + 32) = a5;
  [a3 silo];
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 80))(a2);
  long long v19 = &OBJC_PROTOCOL___CLIntersiloServiceProtocol;
  [+[CLIntersiloInterface sharedInterface](CLIntersiloInterface, "sharedInterface") extendSelectorInfoWithProtocol:&OBJC_PROTOCOL___CLNotifierServiceProtocol bases:+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v19, 1)];
  char v18 = &OBJC_PROTOCOL___CLIntersiloClientProtocol;
  [+[CLIntersiloInterface sharedInterface](CLIntersiloInterface, "sharedInterface") extendSelectorInfoWithProtocol:&OBJC_PROTOCOL___CLNotifierServiceClientProtocol bases:+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v18, 1)];
  id v11 = [a3 silo];
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1000DC48C(__p, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)(a2 + 8);
    uint64_t v17 = *(void *)(a2 + 24);
  }
  if (v17 >= 0) {
    int v12 = __p;
  }
  else {
    int v12 = (void **)__p[0];
  }
  id v13 = +[CLIntersiloProxy proxyForRecipientObject:inSilo:recipientName:](CLIntersiloProxy, "proxyForRecipientObject:inSilo:recipientName:", v10, v11, +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12, __p[0], __p[1], v17));
  *(void *)(a1 + 16) = v13;
  if (SHIBYTE(v17) < 0)
  {
    operator delete(__p[0]);
    id v13 = *(id *)(a1 + 16);
  }
  id v14 = v13;
  [*(id *)(a1 + 16) registerDelegate:*(void *)(a1 + 8) inSilo:[a3 silo]];
  return a1;
}

void sub_1006B903C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

id sub_1006B9060(uint64_t a1)
{
  return [*(id *)(a1 + 16) start];
}

id sub_1006B9068(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 16) setSimulationEnabled:a2];
}

void sub_1006B9074(id a1)
{
  qword_102419388 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_1006B90A4(id a1)
{
  qword_102419658 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

void sub_1006B90D4(id a1)
{
  qword_1024195A8 = (uint64_t)os_log_create("com.apple.locationd.Core", "Simulation");
}

__n128 sub_1006B9104@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v2 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a2 + 112) = v2;
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(a2 + 140) = *(_OWORD *)(a1 + 172);
  long long v3 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 48) = v3;
  long long v4 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(a2 + 80) = v4;
  __n128 result = *(__n128 *)(a1 + 32);
  long long v6 = *(_OWORD *)(a1 + 48);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v6;
  return result;
}

void sub_1006B9138(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

_OWORD *sub_1006B9168(_OWORD *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    long long v4 = a2;
    long long v5 = (uint64_t **)result;
    long long v6 = (uint64_t *)result + 1;
    do
    {
      __n128 result = sub_1006B91F4(v5, v6, v4 + 8, (uint64_t)(v4 + 8));
      char v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          long long v8 = v7;
          char v7 = *(int **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          long long v4 = v8;
        }
        while (!v9);
      }
      long long v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

_OWORD *sub_1006B91F4(uint64_t **a1, uint64_t *a2, int *a3, uint64_t a4)
{
  long long v6 = sub_1002CF4AC(a1, a2, &v12, &v11, a3);
  char v7 = (_OWORD *)*v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    char v7 = operator new(0x48uLL);
    long long v9 = *(_OWORD *)(a4 + 16);
    void v7[2] = *(_OWORD *)a4;
    v7[3] = v9;
    *((void *)v7 + 8) = *(void *)(a4 + 32);
    sub_1000EDF90(a1, (uint64_t)v12, v8, (uint64_t *)v7);
  }
  return v7;
}

void sub_1006B9288(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = off_1022C4280;
  sub_1006BAF64((uint64_t)(a1 + 1), a3);
  a1[5] = a2;
  sub_10157636C((uint64_t)(a1 + 6), a2, (uint64_t)a1);
}

void sub_1006B94A0(_Unwind_Exception *a1)
{
  uint64_t v6 = *(void *)(v3 + 248);
  *(void *)(v3 + 248) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *v4;
  *long long v4 = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  sub_1015766A0(v2);
  sub_1006BAEE0(v1);
  _Unwind_Resume(a1);
}

void sub_1006B9534(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 40), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C42C0);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    long long v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLWifiLocationClient::onWifiProviderNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C42C0);
    }
    long long v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      long long v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLWifiLocationClient::onWifiProviderNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006BA620(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006B96F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006B9710(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 40), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C42C0);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    long long v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLWifiLocationClient::onPipelineProviderNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C42C0);
    }
    long long v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      long long v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLWifiLocationClient::onPipelineProviderNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006BAB88(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006B98CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006B98EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C42E0);
  }
  uint64_t v2 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "WLC: WifiLocationClient request timed out", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C42E0);
    }
    uint64_t v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLWifiLocationClient::CLWifiLocationClient(id<CLIntersiloUniverse>, ReceiverFunc)_block_invoke", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  sub_1006B9A88(v1);
}

void sub_1006B9A88(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 208))
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C42E0);
    }
    uint64_t v2 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "WLC: Cancel location request", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C42E0);
      }
      long long v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationClient::cancelLocationRequest()", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
    [*(id *)(a1 + 200) setNextFireDelay:1.79769313e308];
    [*(id *)(*(void *)(a1 + 240) + 16) unregister:*(void *)(*(void *)(a1 + 240) + 8) forNotification:4];
    if (*(unsigned char *)(a1 + 232)) {
      [*(id *)(*(void *)(a1 + 248) + 16) unregister:*(void *)(*(void *)(a1 + 248) + 8) forNotification:0];
    }
    *(unsigned char *)(a1 + 208) = 0;
  }
  else
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C42E0);
    }
    uint64_t v3 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "WLC: Cancel location request, but no active request", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C42E0);
      }
      long long v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationClient::cancelLocationRequest()", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
  }
}

uint64_t sub_1006B9D90(uint64_t a1)
{
  *(void *)a1 = off_1022C4280;
  [*(id *)(a1 + 200) invalidate];

  *(void *)(a1 + 200) = 0;
  uint64_t v2 = *(void *)(a1 + 248);
  *(void *)(a1 + 248) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 240);
  *(void *)(a1 + 240) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  sub_1015766A0(a1 + 48);
  sub_1006BAEE0((void *)(a1 + 8));
  return a1;
}

void sub_1006B9E5C(uint64_t a1)
{
  sub_1006B9D90(a1);

  operator delete();
}

uint64_t sub_1006B9E94(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a1 + 48;
  uint64_t v5 = sub_100016E64(a1 + 48);
  if (v5)
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C42E0);
    }
    uint64_t v6 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      if (*((unsigned char *)a2 + 16)) {
        uint64_t v7 = "Yes";
      }
      else {
        uint64_t v7 = "No";
      }
      uint64_t v8 = *a2;
      uint64_t v9 = a2[1];
      *(_DWORD *)uint64_t buf = 136381187;
      *(void *)&uint8_t buf[4] = v7;
      __int16 v42 = 2049;
      *(void *)id v43 = v8;
      *(_WORD *)&v43[8] = 2049;
      *(void *)&v43[10] = v9;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "WLC: requestLocation, w2,%{private}s, acc,%{private}.01f, tout,%{private}.01f", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C42E0);
      }
      if (*((unsigned char *)a2 + 16)) {
        long long v24 = "Yes";
      }
      else {
        long long v24 = "No";
      }
      uint64_t v25 = *a2;
      uint64_t v26 = a2[1];
      *(_DWORD *)uint64_t v40 = 136381187;
      *(void *)&v40[4] = v24;
      *(_WORD *)&v40[12] = 2049;
      *(void *)&v40[14] = v25;
      *(_WORD *)&v40[22] = 2049;
      *(void *)&v40[24] = v26;
      long long v27 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWifiLocationClient::requestLocation(const RequestConfiguration &)", "%s\n", v27);
      if (v27 != buf) {
        free(v27);
      }
    }
    if (!*(unsigned char *)(a1 + 208)) {
      [*(id *)(*(void *)(a1 + 240) + 16) register:*(void *)(*(void *)(a1 + 240) + 8) forNotification:4 registrationInfo:0];
    }
    double Current = CFAbsoluteTimeGetCurrent();
    BOOL v11 = sub_101576750(v4);
    sub_100134750(__p, "cpi");
    sub_1006D30DC(buf, 1, v11, __p, Current);
    if (v39 < 0) {
      operator delete(__p[0]);
    }
    id v12 = [[[*(id *)(a1 + 40) vendor] proxyForService:@"CLWifiLocationProvider"];
    uint64_t v28 = *(void *)buf;
    char v29 = buf[8];
    if (SHIBYTE(v44) < 0)
    {
      sub_1000DC48C(&v30, *(void **)&v43[2], *(unint64_t *)&v43[10]);
    }
    else
    {
      long long v30 = *(_OWORD *)&v43[2];
      uint64_t v31 = v44;
    }
    long long v33 = v46;
    long long v34 = v47;
    v35[0] = v48[0];
    *(_OWORD *)((char *)v35 + 12) = *(_OWORD *)((char *)v48 + 12);
    long long v32 = v45;
    if (SHIBYTE(v50) < 0)
    {
      sub_1000DC48C(&v36, (void *)v49, *((unint64_t *)&v49 + 1));
    }
    else
    {
      long long v36 = v49;
      uint64_t v37 = v50;
    }
    [v12 requestLocationUpdateWithParameters:sub_1005DD244((uint64_t)&v28)];
    if (SHIBYTE(v37) < 0) {
      operator delete((void *)v36);
    }
    if (SHIBYTE(v31) < 0) {
      operator delete((void *)v30);
    }
    int v15 = sub_10016CCBC();
    if (*((unsigned char *)a2 + 16)) {
      int v16 = v15;
    }
    else {
      int v16 = 0;
    }
    int v17 = *(unsigned __int8 *)(a1 + 208);
    if (*(unsigned char *)(a1 + 208)) {
      int v17 = *(unsigned char *)(a1 + 232) != 0;
    }
    if ((v17 & 1) == 0 && ((v16 ^ 1) & 1) == 0)
    {
      __asm { FMOV            V0.2D, #-1.0 }
      *(_OWORD *)uint64_t v40 = _Q0;
      *(_WORD *)&v40[16] = 0;
      *(void *)&v40[20] = &_mh_execute_header;
      sub_10012F770();
    }
    if (((v16 | v17 ^ 1) & 1) == 0) {
      [*(id *)(*(void *)(a1 + 248) + 16) unregister:*(void *)(*(void *)(a1 + 248) + 8) forNotification:0];
    }
    *(unsigned char *)(a1 + 208) = 1;
    [*(id *)(a1 + 200) setNextFireDelay:*(double *)(a1 + 224)];
    if (SHIBYTE(v50) < 0) {
      operator delete((void *)v49);
    }
    if (SHIBYTE(v44) < 0) {
      operator delete(*(void **)&v43[2]);
    }
  }
  else
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C42E0);
    }
    int v13 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "WLC: requestLocation, but wifi off", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C42E0);
      }
      *(_WORD *)uint64_t v40 = 0;
      __int16 v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWifiLocationClient::requestLocation(const RequestConfiguration &)", "%s\n", v14);
      if (v14 != buf) {
        free(v14);
      }
    }
  }
  return v5;
}

void sub_1006BA400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
}

void sub_1006BA46C(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  if (*a3 == 1 && (sub_100016E64(a1 + 48) & 1) == 0)
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C42E0);
    }
    uint64_t v4 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "WLC: Cancel request on WiFi power off", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C42E0);
      }
      uint64_t v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLWifiLocationClient::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
    sub_1006B9A88(a1);
  }
}

void sub_1006BA620(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (*a3 == 4)
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C42E0);
    }
    uint64_t v6 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "WLC: Handle wifi location", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C42E0);
      }
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationClient::onWifiProviderNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
    sub_1006BA920(a1, a4);
  }
  else
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C42E0);
    }
    uint64_t v8 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      int v9 = *a3;
      *(_DWORD *)uint64_t buf = 67240192;
      int v13 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "#Warning WLC: Only expecting kNotificationLocationBystander from wifi provider, notification,%{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C42E0);
      }
      BOOL v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationClient::onWifiProviderNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
    }
  }
}

void sub_1006BA920(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a2 + 96);
  if (v3 == 4 || v3 == 11)
  {
    if (*(double *)(a2 + 20) > 0.0
      && sub_1000EF68C(*(double *)(a2 + 4), *(double *)(a2 + 12))
      && *(double *)(a2 + 20) < *(double *)(a1 + 216))
    {
      sub_1006B9A88(a1);
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      uint64_t v7 = *(void (**)(void))(*(void *)v6 + 48);
      v7();
    }
  }
  else
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C42E0);
    }
    uint64_t v8 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      int v9 = *(_DWORD *)(a2 + 96);
      *(_DWORD *)uint64_t buf = 67240192;
      int v12 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "WLC: Non-WiFi location in CLWifiLocationClient, type,%{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C42E0);
      }
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationClient::handleWifiLocation(const CLDaemonLocation &)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
}

void sub_1006BAB88(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (*a3)
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C42E0);
    }
    uint64_t v5 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      int v6 = *a3;
      *(_DWORD *)uint64_t buf = 67240192;
      int v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "#Warning WLC: Only expecting kNotificationLocation from pipeline provider, notification,%{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C42E0);
      }
      uint64_t v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationClient::onPipelineProviderNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
  }
  else
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C42E0);
    }
    uint64_t v10 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "WLC: Handle wifi 2.0 location", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022C42E0);
      }
      BOOL v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationClient::onPipelineProviderNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
    }
    sub_1006BA920(a1, a4);
  }
}

void sub_1006BAE80(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1006BAEB0(id a1)
{
  qword_102419388 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void *sub_1006BAEE0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_1006BAF64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1006BAFFC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419688, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419688))
  {
    qword_102419670 = 0;
    qword_102419678 = 0;
    qword_102419680 = 0;
    uint64_t v0 = operator new(6uLL);
    qword_102419678 = (uint64_t)(v0 + 3);
    qword_102419680 = (uint64_t)(v0 + 3);
    *(_DWORD *)uint64_t v0 = 151521030;
    v0[2] = 3082;
    qword_102419670 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_1001C6FD8, &qword_102419670, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419688);
  }
}

void sub_1006BB0B4(_Unwind_Exception *a1)
{
}

void sub_1006BB0CC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1024196A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1024196A8))
  {
    qword_102419690 = 0;
    qword_102419698 = 0;
    qword_1024196A0 = 0;
    uint64_t v0 = operator new(2uLL);
    qword_102419690 = (uint64_t)v0;
    _WORD *v0 = 256;
    qword_102419698 = (uint64_t)(v0 + 1);
    qword_1024196A0 = (uint64_t)(v0 + 1);
    __cxa_atexit((void (*)(void *))sub_1001C700C, &qword_102419690, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1024196A8);
  }
}

void sub_1006BB174(_Unwind_Exception *a1)
{
}

uint64_t sub_1006BB18C()
{
  qword_10248A268 = 0;
  return __cxa_atexit((void (*)(void *))sub_1006B9284, &unk_10248A250, (void *)&_mh_execute_header);
}

uint64_t sub_1006BB1B4(uint64_t result, void *a2)
{
  *(unsigned char *)(result + 40) = 0;
  *(unsigned char *)(result + 48) = 0;
  *(_DWORD *)(result + 52) = 0;
  *(void *)__n128 result = off_1022C4310;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 0;
  uint64_t v2 = a2[1];
  *(void *)(result + 56) = *a2;
  *(void *)(result + 64) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void *sub_1006BB200(uint64_t a1, uint64_t a2, void *a3)
{
  __n128 result = [a3 type];
  switch(result)
  {
    case 4:
      __n128 result = [[[a3 motionActivity] motionActivity] type];
      if (result == 4)
      {
LABEL_6:
        unsigned int v10 = [a3 type];
        BOOL v11 = &v10;
        __n128 result = sub_1000F3C48(a2 + 16, (int *)&v10, (uint64_t)&unk_101D0B290, &v11);
        ++*((_DWORD *)result + 5);
      }
      break;
    case 0xB:
      unsigned int v10 = [a3 type];
      BOOL v11 = &v10;
      int v6 = sub_1000F3C48(a2 + 16, (int *)&v10, (uint64_t)&unk_101D0B290, &v11);
      ++*((_DWORD *)v6 + 5);
      __n128 result = [a3 inertialOdometry].hasDeltaPositionX;
      if (result)
      {
        __n128 result = [a3 inertialOdometry].hasDeltaPositionY;
        if (result)
        {
          [objc_msgSend(a3, "inertialOdometry") deltaPositionX];
          double v8 = v7 * v7;
          __n128 result = [a3 inertialOdometry].deltaPositionY;
          *(double *)(a2 + 104) = *(double *)(a2 + 104) + sqrt(v8 + v9 * v9);
          ++*(_DWORD *)(a2 + 112);
        }
      }
      break;
    case 6:
      goto LABEL_6;
    default:
      break;
  }
  ++*(_DWORD *)(a2 + 56);
  return result;
}

id sub_1006BB368(uint64_t a1, void *a2)
{
  sub_1006BB5F8(a2);
  double v5 = v4;
  id result = [a2 type];
  if (result == 2) {
    goto LABEL_14;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    double v7 = v5 - *(double *)(a1 + 32);
    (*(void (**)(long long *__return_ptr))(**(void **)(a1 + 56) + 128))(&v16);
    double v8 = *(double *)v17;
    sub_1000D7D80((uint64_t)v25);
    sub_1000D7D80((uint64_t)v24);
    id result = (id)sub_1000D7D80((uint64_t)v23);
    if (v7 < v8)
    {
      *(unsigned char *)(a1 + 48) = 1;
      return result;
    }
  }
  *(double *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = 1;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!*(_DWORD *)(v9 - 64))
  {
    *(double *)(v9 - 120) = v5;
    unsigned int v10 = (double *)(v9 - 112);
    goto LABEL_12;
  }
  unsigned int v10 = (double *)(v9 - 112);
  double v11 = *(double *)(v9 - 120);
  if (v5 > *(double *)(v9 - 112))
  {
    double v12 = v5 - v11;
    (*(void (**)(long long *__return_ptr))(**(void **)(a1 + 56) + 128))(&v16);
    double v13 = *((double *)v17 + 1);
    sub_1000D7D80((uint64_t)v25);
    sub_1000D7D80((uint64_t)v24);
    sub_1000D7D80((uint64_t)v23);
    if (v12 > v13)
    {
      memset(v17, 0, sizeof(v17));
      long long v16 = 0u;
      int v18 = 1065353216;
      int v19 = 0;
      v20[0] = 0;
      char v21 = 0;
      uint64_t v22 = 0;
      v23[0] = 0;
      sub_1006BC194((uint64_t)v20, v9 - 56);
      unint64_t v14 = *(void *)(a1 + 16);
      if (v14 >= *(void *)(a1 + 24))
      {
        uint64_t v15 = sub_1006BC640((uint64_t *)(a1 + 8), (uint64_t)&v16);
      }
      else
      {
        sub_1006BC750(a1 + 24, *(void *)(a1 + 16), (uint64_t)&v16);
        uint64_t v15 = v14 + 120;
        *(void *)(a1 + 16) = v14 + 120;
      }
      *(void *)(a1 + 16) = v15;
      sub_1006BB368(a1, a2);
      if (v21) {
        sub_100178B14((uint64_t)v20);
      }
      id result = (id)sub_1000D7D80((uint64_t)v17);
      goto LABEL_14;
    }
    if (v5 <= *v10) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  unsigned int v10 = (double *)(v9 - 120);
  if (v5 < v11) {
LABEL_12:
  }
    double *v10 = v5;
LABEL_13:
  id result = (id)(*(uint64_t (**)(uint64_t, uint64_t, void *))(*(void *)a1 + 32))(a1, v9 - 120, a2);
LABEL_14:
  ++*(_DWORD *)(a1 + 52);
  return result;
}

void sub_1006BB5D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 16) = v10;
  sub_1006BB910((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1006BB5F8(void *a1)
{
  switch([a1 type])
  {
    case 1u:
      id v3 = [a1 cmAttitude];
      goto LABEL_20;
    case 2u:
      id v3 = [a1 cmPedometer];
      goto LABEL_20;
    case 3u:
      id v3 = [a1 location];
      goto LABEL_20;
    case 4u:
      id v3 = [a1 motionActivity];
      goto LABEL_20;
    case 5u:
      id v3 = [a1 pressure];
      goto LABEL_20;
    case 6u:
      id v3 = [a1 wifiScan];
      goto LABEL_20;
    case 7u:
      id v3 = [a1 bundleId];
      goto LABEL_20;
    case 8u:
    case 9u:
      id v2 = [objc_msgSend(a1, "vioEstimation") timestamp];
      [v2 cfAbsoluteTimeS];
      return;
    case 0xBu:
      id v3 = [a1 inertialOdometry];
      goto LABEL_20;
    case 0xCu:
      id v3 = [a1 outdoorUpdate];
LABEL_20:
      [v3 timestamp];
      break;
    default:
      if (qword_102419560 != -1) {
        dispatch_once(&qword_102419560, &stru_1022C4380);
      }
      double v4 = qword_102419568;
      if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Attempting to retrieve timestamp for unknown event type; switch statement needs to be updated",
          buf,
          2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419560 != -1) {
          dispatch_once(&qword_102419560, &stru_1022C4380);
        }
        double v5 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "static double CLSubHarvesterTraceScore::getEventTimestamp(CLPIndoorEvent *)", "%s\n", v5);
        if (v5 != (char *)buf) {
          free(v5);
        }
      }
      break;
  }
}

uint64_t sub_1006BB8D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006BB910(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 96)) {
    sub_100178B14(a1 + 64);
  }
  sub_1000D7D80(a1 + 16);
  return a1;
}

uint64_t sub_1006BB94C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (*(void *)(result + 8) != v2) {
    return sub_1006BC194(v2 - 56, a2);
  }
  return result;
}

float sub_1006BB964(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    if (qword_102419560 != -1) {
      dispatch_once(&qword_102419560, &stru_1022C4380);
    }
    uint64_t v1 = qword_102419568;
    if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEBUG, "Failed Scoring", buf, 2u);
    }
    float v2 = 0.0;
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419560 != -1) {
        dispatch_once(&qword_102419560, &stru_1022C4380);
      }
      double v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual float CLSubHarvesterTraceScore::getScore()", "%s\n", v12);
      if (v12 != buf) {
        free(v12);
      }
    }
  }
  else
  {
    uint64_t v5 = *(void *)(a1 + 8);
    uint64_t v6 = *(void *)(a1 + 16);
    if (v5 == v6)
    {
      return 0.0;
    }
    else
    {
      uint64_t v7 = v5 + 64;
      float v2 = 0.0;
      do
      {
        *(_OWORD *)uint64_t buf = *(_OWORD *)(v7 - 64);
        sub_1006BC4AC((uint64_t)&buf[16], v7 - 48);
        uint64_t v8 = v7 - 64;
        int v16 = *(_DWORD *)(v7 - 8);
        sub_100176CA0(v17, v7);
        uint64_t v9 = *(void *)(v7 + 40);
        int v19 = *(_DWORD *)(v7 + 48);
        uint64_t v18 = v9;
        double v10 = (*(double (**)(uint64_t, unsigned char *))(*(void *)a1 + 40))(a1, buf);
        if (v17[32]) {
          sub_100178B14((uint64_t)v17);
        }
        float v2 = v10 + v2;
        sub_1000D7D80((uint64_t)&buf[16]);
        v7 += 120;
      }
      while (v8 + 120 != v6);
      if (qword_102419560 != -1) {
        dispatch_once(&qword_102419560, &stru_1022C4380);
      }
      double v11 = qword_102419568;
      if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)uint64_t buf = 68289283;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        __int16 v14 = 2049;
        double v15 = v2;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Trace score\", \"score\":\"%{private}f\"}", buf, 0x1Cu);
      }
    }
  }
  return v2;
}

void sub_1006BBC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1006BB910((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_1006BBCAC(uint64_t a1, uint64_t a2)
{
  double v4 = *(double *)(a2 + 8) - *(double *)a2;
  (*(void (**)(void *__return_ptr))(**(void **)(a1 + 56) + 128))(v23);
  double v5 = *(double *)&v23[4];
  sub_1000D7D80((uint64_t)v26);
  sub_1000D7D80((uint64_t)v25);
  sub_1000D7D80((uint64_t)v24);
  double v6 = 0.0;
  if (v4 < v5) {
    return v6;
  }
  uint64_t v7 = (void *)(a2 + 16);
  LODWORD(v23[0]) = 11;
  if (!sub_10011853C((void *)(a2 + 16), (int *)v23)) {
    return v6;
  }
  int v22 = 11;
  uint64_t v8 = sub_10011853C((void *)(a2 + 16), &v22);
  if (!v8) {
    goto LABEL_18;
  }
  unsigned int v9 = *((_DWORD *)v8 + 5);
  if (!v9) {
    return v6;
  }
  double v10 = (double)*(int *)(a2 + 112) / (double)v9;
  (*(void (**)(void *__return_ptr))(**(void **)(a1 + 56) + 128))(v23);
  double v11 = *(double *)&v23[8];
  sub_1000D7D80((uint64_t)v26);
  sub_1000D7D80((uint64_t)v25);
  sub_1000D7D80((uint64_t)v24);
  if (v10 < v11) {
    return v6;
  }
  double v12 = *(double *)(a2 + 104) / v4;
  (*(void (**)(void *__return_ptr))(**(void **)(a1 + 56) + 128))(v23);
  double v13 = *(double *)&v23[9];
  sub_1000D7D80((uint64_t)v26);
  sub_1000D7D80((uint64_t)v25);
  sub_1000D7D80((uint64_t)v24);
  if (v12 < v13) {
    return v6;
  }
  LODWORD(v23[0]) = 6;
  __int16 v14 = sub_10011853C((void *)(a2 + 16), (int *)v23);
  double v15 = 0.0;
  if (!v14) {
    goto LABEL_10;
  }
  int v22 = 6;
  int v16 = sub_10011853C((void *)(a2 + 16), &v22);
  if (!v16) {
LABEL_18:
  }
    sub_10000EDDC("unordered_map::at: key not found");
  LODWORD(v17) = *((_DWORD *)v16 + 5);
  double v15 = (double)v17;
LABEL_10:
  double v18 = v15 / v4;
  (*(void (**)(void *__return_ptr))(**(void **)(a1 + 56) + 128))(v23);
  double v19 = *(double *)&v23[5];
  sub_1000D7D80((uint64_t)v26);
  sub_1000D7D80((uint64_t)v25);
  sub_1000D7D80((uint64_t)v24);
  if (v18 >= v19)
  {
    double v6 = v4 + *(double *)(a2 + 104);
    if (*(unsigned char *)(a2 + 96))
    {
      if (*(_DWORD *)(a2 + 88) == 1)
      {
        (*(void (**)(void *__return_ptr))(**(void **)(a1 + 56) + 128))(v23);
        char v20 = sub_1006BCC18(v26, (unint64_t *)(a2 + 64));
        sub_1000D7D80((uint64_t)v26);
        sub_1000D7D80((uint64_t)v25);
        sub_1000D7D80((uint64_t)v24);
        if (v20)
        {
          (*(void (**)(void *__return_ptr))(**(void **)(a1 + 56) + 128))(v23);
          double v6 = v6 * *(double *)&v23[6];
          sub_1000D7D80((uint64_t)v26);
          sub_1000D7D80((uint64_t)v25);
          sub_1000D7D80((uint64_t)v24);
        }
      }
    }
    LODWORD(v23[0]) = 4;
    if (sub_10011853C(v7, (int *)v23))
    {
      (*(void (**)(void *__return_ptr))(**(void **)(a1 + 56) + 128))(v23);
      double v6 = v6 * *(double *)&v23[7];
      sub_1000D7D80((uint64_t)v26);
      sub_1000D7D80((uint64_t)v25);
      sub_1000D7D80((uint64_t)v24);
    }
  }
  return v6;
}

void sub_1006BC038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1006BB8D4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1006BC04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v5 = (uint64_t *)(a1 + 8);
  sub_1006BC5DC(a1 + 8, *(void *)(a1 + 8));
  memset(v10, 0, sizeof(v10));
  long long v9 = 0u;
  int v11 = 1065353216;
  int v12 = 0;
  v13[0] = 0;
  char v14 = 0;
  uint64_t v15 = 0;
  int v16 = 0;
  sub_1006BC194((uint64_t)v13, a3);
  unint64_t v6 = *(void *)(a1 + 16);
  if (v6 >= *(void *)(a1 + 24))
  {
    uint64_t v7 = sub_1006BC640(v5, (uint64_t)&v9);
  }
  else
  {
    sub_1006BC750(a1 + 24, *(void *)(a1 + 16), (uint64_t)&v9);
    uint64_t v7 = v6 + 120;
    *(void *)(a1 + 16) = v6 + 120;
  }
  *(void *)(a1 + 16) = v7;
  if (*(unsigned char *)(a1 + 40)) {
    *(unsigned char *)(a1 + 40) = 0;
  }
  *(unsigned char *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  if (v14) {
    sub_100178B14((uint64_t)v13);
  }
  return sub_1000D7D80((uint64_t)v10);
}

void sub_1006BC138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 + 16) = v10;
  sub_1006BB910((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1006BC15C(uint64_t a1)
{
  sub_1006BC524(a1);

  operator delete();
}

uint64_t sub_1006BC194(uint64_t result, uint64_t a2)
{
  if (*(unsigned __int8 *)(result + 32) == *(unsigned __int8 *)(a2 + 32))
  {
    if (*(unsigned char *)(result + 32))
    {
      return sub_1006BC1F0(result, a2);
    }
  }
  else if (*(unsigned char *)(result + 32))
  {
    id result = sub_100178B14(result);
    *(unsigned char *)(result + 32) = 0;
  }
  else
  {
    id result = sub_100176D00(result, a2);
    *(unsigned char *)(result + 32) = 1;
  }
  return result;
}

uint64_t sub_1006BC1F0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(unsigned int *)(result + 24);
  uint64_t v4 = *(unsigned int *)(a2 + 24);
  if (v3 == -1)
  {
    if (v4 == -1) {
      return result;
    }
  }
  else if (v4 == -1)
  {
    id result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1022C4350[v3])(&v6, result, a2);
    *(_DWORD *)(v2 + 24) = -1;
    return result;
  }
  uint64_t v5 = result;
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))off_1022C4360[v4])(&v5, result, a2);
}

void sub_1006BC284(uint64_t *a1, std::string *a2, std::string *a3)
{
}

uint64_t sub_1006BC28C(uint64_t *a1, void *a2, void *a3)
{
  uint64_t result = *a1;
  if (*(_DWORD *)(result + 24) != 1) {
    return sub_1006BC408(result, a3);
  }
  *a2 = *a3;
  return result;
}

void sub_1006BC2B0(uint64_t a1, std::string *this, std::string *__str)
{
  if (*(_DWORD *)(a1 + 24))
  {
    v3[0] = a1;
    v3[1] = (uint64_t)__str;
    sub_1006BC304(v3);
  }
  else
  {
    std::string::operator=(this, __str);
  }
}

void sub_1006BC304(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  if (*(char *)(v1 + 23) < 0)
  {
    sub_1000DC48C(__p, *(void **)v1, *(void *)(v1 + 8));
  }
  else
  {
    long long v3 = *(_OWORD *)v1;
    uint64_t v5 = *(void *)(v1 + 16);
    *(_OWORD *)long long __p = v3;
  }
  sub_1006BC38C(v2, (long long *)__p);
  if (SHIBYTE(v5) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1006BC370(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006BC38C(uint64_t a1, long long *a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 24);
  if (v4 != -1) {
    ((void (*)(char *, uint64_t))off_1022C4350[v4])(&v7, a1);
  }
  *(_DWORD *)(a1 + 24) = -1;
  long long v5 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v5;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  *(_DWORD *)(a1 + 24) = 0;
  return a1;
}

uint64_t sub_1006BC408(uint64_t a1, void *a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 24);
  if (v4 != -1) {
    ((void (*)(char *, uint64_t))off_1022C4350[v4])(&v6, a1);
  }
  *(void *)a1 = *a2;
  *(_DWORD *)(a1 + 24) = 1;
  return a1;
}

void sub_1006BC470(uint64_t a1, void *a2, void *a3)
{
  *a2 = *a3;
}

void sub_1006BC47C(id a1)
{
  qword_102419568 = (uint64_t)os_log_create("com.apple.locationd.Core", "Harvester");
}

uint64_t sub_1006BC4AC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_100100330(a1, *(void *)(a2 + 8));
  for (uint64_t i = *(int **)(a2 + 16); i; uint64_t i = *(int **)i)
    sub_10045B3D0(a1, i + 4, (void *)i + 2);
  return a1;
}

void sub_1006BC50C(_Unwind_Exception *a1)
{
  sub_1000D7D80(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006BC524(uint64_t a1)
{
  *(void *)a1 = off_1022C4310;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 64);
  if (v2) {
    sub_1000DB0A0(v2);
  }
  uint64_t v4 = (void **)(a1 + 8);
  sub_1006BC588(&v4);
  return a1;
}

void sub_1006BC588(void ***a1)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (*v2)
  {
    sub_1006BC5DC((uint64_t)v2, *v2);
    long long v3 = **a1;
    operator delete(v3);
  }
}

uint64_t sub_1006BC5DC(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  for (uint64_t i = *(void *)(result + 8); i != a2; i -= 120)
  {
    if (*(unsigned char *)(i - 24)) {
      sub_100178B14(i - 56);
    }
    uint64_t result = sub_1000D7D80(i - 104);
  }
  *(void *)(v3 + 8) = a2;
  return result;
}

uint64_t sub_1006BC640(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = 0xEEEEEEEEEEEEEEEFLL * ((a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x222222222222222) {
    sub_1001D7FD4();
  }
  if (0xDDDDDDDDDDDDDDDELL * ((a1[2] - *a1) >> 3) > v4) {
    unint64_t v4 = 0xDDDDDDDDDDDDDDDELL * ((a1[2] - *a1) >> 3);
  }
  if (0xEEEEEEEEEEEEEEEFLL * ((a1[2] - *a1) >> 3) >= 0x111111111111111) {
    unint64_t v6 = 0x222222222222222;
  }
  else {
    unint64_t v6 = v4;
  }
  char v14 = a1 + 2;
  if (v6) {
    char v7 = (char *)sub_10029BE4C((uint64_t)(a1 + 2), v6);
  }
  else {
    char v7 = 0;
  }
  uint64_t v10 = v7;
  int v11 = &v7[120 * v3];
  double v13 = &v7[120 * v6];
  sub_1006BC750((uint64_t)(a1 + 2), (uint64_t)v11, a2);
  int v12 = v11 + 120;
  sub_1006BC7CC(a1, &v10);
  uint64_t v8 = a1[1];
  sub_1006BCB7C((uint64_t)&v10);
  return v8;
}

void sub_1006BC73C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1006BCB7C((uint64_t)va);
  _Unwind_Resume(a1);
}

unsigned char *sub_1006BC750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a2 = *(_OWORD *)a3;
  sub_1006BC4AC(a2 + 16, a3 + 16);
  *(_DWORD *)(a2 + 56) = *(_DWORD *)(a3 + 56);
  uint64_t result = sub_100176CA0((unsigned char *)(a2 + 64), a3 + 64);
  uint64_t v6 = *(void *)(a3 + 104);
  *(_DWORD *)(a2 + 112) = *(_DWORD *)(a3 + 112);
  *(void *)(a2 + 104) = v6;
  return result;
}

void sub_1006BC7B8(_Unwind_Exception *a1)
{
  sub_1000D7D80(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006BC7CC(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1006BC844((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1006BC844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  char v14 = 0;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v9 = a3;
    do
    {
      v9 -= 120;
      sub_1006BC8FC(a1, v7 - 120, v9);
      uint64_t v7 = *((void *)&v16 + 1) - 120;
      *((void *)&v16 + 1) -= 120;
    }
    while (v9 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_1006BCA60((uint64_t)v13);
  return v11;
}

uint64_t sub_1006BC8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a2 = *(_OWORD *)a3;
  sub_1000E2908(a2 + 16, (uint64_t *)(a3 + 16));
  int v5 = *(_DWORD *)(a3 + 56);
  *(unsigned char *)(a2 + 64) = 0;
  uint64_t result = a2 + 64;
  *(_DWORD *)(a2 + 56) = v5;
  *(unsigned char *)(a2 + 96) = 0;
  if (*(unsigned char *)(a3 + 96))
  {
    uint64_t result = sub_1006BC970(result, a3 + 64);
    *(unsigned char *)(a2 + 96) = 1;
  }
  uint64_t v7 = *(void *)(a3 + 104);
  *(_DWORD *)(a2 + 112) = *(_DWORD *)(a3 + 112);
  *(void *)(a2 + 104) = v7;
  return result;
}

uint64_t sub_1006BC970(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 24) = -1;
  sub_1006BC9A8(a1, a2);
  return a1;
}

uint64_t sub_1006BC9A8(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(unsigned int *)(result + 24);
  if (v4 != -1) {
    uint64_t result = ((uint64_t (*)(char *, uint64_t))off_1022C4350[v4])(&v7, result);
  }
  *(_DWORD *)(v3 + 24) = -1;
  uint64_t v5 = *(unsigned int *)(a2 + 24);
  if (v5 != -1)
  {
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1022C43A0[v5])(&v6, v3, a2);
    *(_DWORD *)(v3 + 24) = v5;
  }
  return result;
}

__n128 sub_1006BCA38(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  a3->n128_u64[0] = 0;
  return result;
}

void sub_1006BCA54(uint64_t a1, void *a2, void *a3)
{
  *a2 = *a3;
}

uint64_t sub_1006BCA60(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1006BCA98((uint64_t *)a1);
  }
  return a1;
}

uint64_t sub_1006BCA98(uint64_t *a1)
{
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v15 = v3;
  uint64_t v16 = v2;
  uint64_t v17 = v3;
  uint64_t v18 = v2;
  uint64_t v4 = *a1;
  uint64_t v5 = (uint64_t *)a1[1];
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  uint64_t v13 = v6;
  return sub_1006BCB10(v4, (uint64_t)v14, (uint64_t)v9);
}

uint64_t sub_1006BCB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  for (uint64_t i = *(void *)(a2 + 32); i != *(void *)(a3 + 32); *(void *)(a2 + 32) = i)
  {
    if (*(unsigned char *)(i + 96)) {
      sub_100178B14(i + 64);
    }
    uint64_t result = sub_1000D7D80(i + 16);
    uint64_t i = *(void *)(a2 + 32) + 120;
  }
  return result;
}

uint64_t sub_1006BCB7C(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1006BCBB4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2 != a2)
  {
    uint64_t v4 = result;
    do
    {
      *(void *)(v4 + 16) = v2 - 120;
      if (*(unsigned char *)(v2 - 24)) {
        sub_100178B14(v2 - 56);
      }
      uint64_t result = sub_1000D7D80(v2 - 104);
      uint64_t v2 = *(void *)(v4 + 16);
    }
    while (v2 != a2);
  }
  return result;
}

void *sub_1006BCC18(void *a1, unint64_t *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (v3 >= *(void *)&v2) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v5 = (*(void *)&v2 - 1) & v3;
  }
  uint64_t v6 = *(void **)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  uint64_t result = (void *)*v6;
  if (*v6)
  {
    do
    {
      unint64_t v8 = result[1];
      if (v3 == v8)
      {
        if (result[2] == v3) {
          return result;
        }
      }
      else
      {
        if (v4.u32[0] > 1uLL)
        {
          if (v8 >= *(void *)&v2) {
            v8 %= *(void *)&v2;
          }
        }
        else
        {
          v8 &= *(void *)&v2 - 1;
        }
        if (v8 != v5) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void sub_1006BCCCC(uint64_t a1@<X8>)
{
  uint64_t v2 = 0;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  do
  {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 23);
    if ((v3 & 0x80u) != 0) {
      uint64_t v3 = *(void *)(a1 + 8);
    }
    if (v3)
    {
      *((unsigned char *)&v8.__r_.__value_.__s + 23) = 2;
      strcpy((char *)&v8, ", ");
      uint8x8_t v4 = std::string::append(&v8, off_1022C4448[v2]);
      long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      int64_t v10 = v4->__r_.__value_.__r.__words[2];
      *(_OWORD *)long long __p = v5;
      v4->__r_.__value_.__l.__size_ = 0;
      v4->__r_.__value_.__r.__words[2] = 0;
      v4->__r_.__value_.__r.__words[0] = 0;
      if (v10 >= 0) {
        uint64_t v6 = __p;
      }
      else {
        uint64_t v6 = (void **)__p[0];
      }
      if (v10 >= 0) {
        std::string::size_type v7 = HIBYTE(v10);
      }
      else {
        std::string::size_type v7 = (std::string::size_type)__p[1];
      }
      std::string::append((std::string *)a1, (const std::string::value_type *)v6, v7);
      if (SHIBYTE(v10) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v8.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      std::string::append((std::string *)a1, off_1022C4448[v2]);
    }
    ++v2;
  }
  while (v2 != 6);
}

void sub_1006BCDC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (*(char *)(v21 + 23) < 0) {
    operator delete(*(void **)v21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006BCE14(uint64_t a1, char *a2, uint64_t *a3, double a4)
{
  double v10 = a4;
  sub_10064DE4C(a1, a3, &v10);
  *(void *)a1 = off_1022C4488;
  sub_101171D90(a1 + 232);
  sub_100134750((void *)(a1 + 272), a2);
  sub_100F03BA0((void *)(a1 + 296), 0, 0);
  if (sub_10014C3C0(a1 + 64))
  {
    uint64_t v6 = (char *)(a1 + 272);
    if (*(char *)(a1 + 295) < 0) {
      uint64_t v6 = *(char **)(a1 + 272);
    }
    sub_1005F7B0C(a1 + 64, v6, (const char **)&qword_10247C9F0, 0, 0);
    sub_10064DFA4(a1);
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C44B8);
    }
    std::string::size_type v7 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#Warning Database is not valid; not initializing",
        buf,
        2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C44B8);
      }
      uint64_t v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLCellLocationDatabase::CLCellLocationDatabase(const char *, const CLSqliteDatabase::SqliteProperties &, double)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
  }
  return a1;
}

void sub_1006BD04C(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 295) < 0) {
    operator delete(*v2);
  }
  sub_10064DF48(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006BD088(uint64_t a1)
{
  *(void *)a1 = off_1022C4488;
  if (*(char *)(a1 + 295) < 0) {
    operator delete(*(void **)(a1 + 272));
  }

  return sub_10064DF48(a1);
}

void sub_1006BD0EC(uint64_t a1)
{
  sub_1006BD088(a1);

  operator delete();
}

char *sub_1006BD124@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[295] < 0) {
    return (char *)sub_1000DC48C((unsigned char *)a2, *((void **)result + 34), *((void *)result + 35));
  }
  *(_OWORD *)a2 = *((_OWORD *)result + 17);
  *(void *)(a2 + 16) = *((void *)result + 36);
  return result;
}

void sub_1006BD150(uint64_t a1)
{
}

void sub_1006BD1CC(uint64_t a1)
{
  sub_10010F274((uint64_t)&v22);
  uint64_t v2 = sub_100132EFC(&v23, (uint64_t)"SELECT ", 7);
  size_t v3 = strlen("ROWID");
  uint8x8_t v4 = sub_100132EFC(v2, (uint64_t)"ROWID", v3);
  long long v5 = sub_100132EFC(v4, (uint64_t)" FROM ", 6);
  uint64_t v6 = (const char *)(a1 + 272);
  if (*(char *)(a1 + 295) < 0) {
    uint64_t v6 = *(const char **)v6;
  }
  size_t v7 = strlen(v6);
  std::string v8 = sub_100132EFC(v5, (uint64_t)v6, v7);
  uint64_t v9 = sub_100132EFC(v8, (uint64_t)" WHERE ", 7);
  double v10 = sub_100132EFC(v9, (uint64_t)"MCC", 3);
  uint64_t v11 = sub_100132EFC(v10, (uint64_t)"=? AND ", 7);
  uint64_t v12 = sub_100132EFC(v11, (uint64_t)"MNC", 3);
  uint64_t v13 = sub_100132EFC(v12, (uint64_t)"=? AND ", 7);
  char v14 = sub_100132EFC(v13, (uint64_t)"LAC", 3);
  uint64_t v15 = sub_100132EFC(v14, (uint64_t)"=? AND ", 7);
  uint64_t v16 = sub_100132EFC(v15, (uint64_t)"CI", 2);
  uint64_t v17 = sub_100132EFC(v16, (uint64_t)"=? AND ", 7);
  uint64_t v18 = sub_100132EFC(v17, (uint64_t)"UARFCN", 6);
  double v19 = sub_100132EFC(v18, (uint64_t)"=? AND ", 7);
  char v20 = sub_100132EFC(v19, (uint64_t)"PSC", 3);
  sub_100132EFC(v20, (uint64_t)"=? ", 3);
  std::stringbuf::str();
  if (v25 >= 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  sub_10014D518(a1 + 64, (uint64_t)p_p);
}

void sub_1006BD798(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,void *__p,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (v59) {
    (*(void (**)(uint64_t))(*(void *)v59 + 8))(v59);
  }
  sub_101A129A8((uint64_t)&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_1006BD810(uint64_t a1, int *a2, uint64_t a3)
{
  sqlite3_int64 v47 = 0;
  uint64_t v6 = (void *)(a1 + 296);
  if (sub_100F03BA8((void *)(a1 + 296)))
  {
LABEL_22:
    sub_100082068(v6, v50);
    uint64_t v28 = (sqlite3_stmt *)sub_10014D19C(v50[0]);
    if (sub_10014D1A4(v28, 1, *a2)
      && (char v29 = (sqlite3_stmt *)sub_10014D19C(v50[0]), sub_10014D1A4(v29, 2, a2[1]))
      && (long long v30 = (sqlite3_stmt *)sub_10014D19C(v50[0]), sub_10014D1A4(v30, 3, a2[2]))
      && (uint64_t v31 = (sqlite3_stmt *)sub_10014D19C(v50[0]), sub_10014D1A4(v31, 4, a2[3]))
      && (long long v32 = (sqlite3_stmt *)sub_10014D19C(v50[0]), sub_10014D1A4(v32, 5, a2[4]))
      && (long long v33 = (sqlite3_stmt *)sub_10014D19C(v50[0]), sub_10014D1A4(v33, 6, a2[5])))
    {
      long long v34 = (sqlite3_stmt *)sub_10014D19C(v50[0]);
      sub_10001FEB0(a1 + 64, v34);
      sqlite3_int64 v47 = sub_1006037D0(a1 + 64);
      uint64_t v35 = sub_10064F1E8((void *)a1, &v47, a3);
    }
    else
    {
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C44B8);
      }
      long long v36 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
      {
        sub_100614504(__p);
        uint64_t v37 = v52 >= 0 ? __p : (void **)__p[0];
        *(_DWORD *)uint64_t v53 = 136446210;
        *(void *)&v53[4] = v37;
        _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_FAULT, "failed to bind %{public}s", v53, 0xCu);
        if (v52 < 0) {
          operator delete(__p[0]);
        }
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(__p, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C44B8);
        }
        sub_100614504(v53);
        if (v54 >= 0) {
          __int16 v42 = v53;
        }
        else {
          __int16 v42 = *(unsigned char **)v53;
        }
        *(_DWORD *)uint64_t buf = 136446210;
        *(void *)&uint8_t buf[4] = v42;
        id v43 = (char *)_os_log_send_and_compose_impl();
        if (SHIBYTE(v54) < 0) {
          operator delete(*(void **)v53);
        }
        sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLCellLocationDatabase::setLocation(const CLTelephonyService_Type::Cell &, const CLDaemonLocation &)", "%s\n", v43);
        if (v43 != (char *)__p) {
          free(v43);
        }
      }
      uint64_t v35 = 0;
    }
    uint64_t v38 = v50[0];
    v50[0] = 0;
    if (v38) {
      (*(void (**)(uint64_t))(*(void *)v38 + 8))(v38);
    }
    return v35;
  }
  sub_10010F274((uint64_t)v53);
  size_t v7 = sub_100132EFC(&v54, (uint64_t)"INSERT OR REPLACE INTO ", 23);
  std::string v8 = (const char *)(a1 + 272);
  if (*(char *)(a1 + 295) < 0) {
    std::string v8 = *(const char **)v8;
  }
  size_t v9 = strlen(v8);
  double v10 = sub_100132EFC(v7, (uint64_t)v8, v9);
  uint64_t v11 = sub_100132EFC(v10, (uint64_t)" (", 2);
  uint64_t v12 = sub_100132EFC(v11, (uint64_t)"MCC", 3);
  uint64_t v13 = sub_100132EFC(v12, (uint64_t)", ", 2);
  char v14 = sub_100132EFC(v13, (uint64_t)"MNC", 3);
  uint64_t v15 = sub_100132EFC(v14, (uint64_t)", ", 2);
  uint64_t v16 = sub_100132EFC(v15, (uint64_t)"LAC", 3);
  uint64_t v17 = sub_100132EFC(v16, (uint64_t)", ", 2);
  uint64_t v18 = sub_100132EFC(v17, (uint64_t)"CI", 2);
  double v19 = sub_100132EFC(v18, (uint64_t)", ", 2);
  char v20 = sub_100132EFC(v19, (uint64_t)"UARFCN", 6);
  uint64_t v21 = sub_100132EFC(v20, (uint64_t)", ", 2);
  uint64_t v22 = sub_100132EFC(v21, (uint64_t)"PSC", 3);
  sub_100132EFC(v22, (uint64_t)") VALUES (?, ?, ?, ?, ?, ?)", 27);
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C44B8);
  }
  uint64_t v23 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    std::stringbuf::str();
    long long v24 = v52 >= 0 ? __p : (void **)__p[0];
    *(_DWORD *)uint64_t buf = 136315138;
    *(void *)&uint8_t buf[4] = v24;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "CELL_LOC: fInsertStatement [%s]", buf, 0xCu);
    if (v52 < 0) {
      operator delete(__p[0]);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C44B8);
    }
    std::stringbuf::str();
    if (v49 >= 0) {
      uint64_t v44 = buf;
    }
    else {
      uint64_t v44 = *(unsigned char **)buf;
    }
    LODWORD(v50[0]) = 136315138;
    *(uint64_t *)((char *)v50 + 4) = (uint64_t)v44;
    long long v45 = (char *)_os_log_send_and_compose_impl();
    if (v49 < 0) {
      operator delete(*(void **)buf);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLCellLocationDatabase::setLocation(const CLTelephonyService_Type::Cell &, const CLDaemonLocation &)", "%s\n", v45);
    if (v45 != (char *)__p) {
      free(v45);
    }
  }
  std::stringbuf::str();
  if (v52 >= 0) {
    char v25 = __p;
  }
  else {
    char v25 = (void **)__p[0];
  }
  *(void *)(a1 + 296) = sub_100601D1C(a1 + 64, (uint64_t)v25);
  *(void *)(a1 + 304) = v26;
  if (v52 < 0) {
    operator delete(__p[0]);
  }
  if (sub_100F03BA8(v6))
  {
    uint64_t v54 = v27;
    if (v57 < 0) {
      operator delete(v56);
    }
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    std::ios::~ios();
    goto LABEL_22;
  }
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C44B8);
  }
  char v39 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
  {
    LOWORD(__p[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_FAULT, "Could not prepare cached insert statement", (uint8_t *)__p, 2u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(__p, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C44B8);
    }
    *(_WORD *)uint64_t buf = 0;
    long long v46 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLCellLocationDatabase::setLocation(const CLTelephonyService_Type::Cell &, const CLDaemonLocation &)", "%s\n", v46);
    if (v46 != (char *)__p) {
      free(v46);
    }
  }
  uint64_t v54 = v40;
  if (v57 < 0) {
    operator delete(v56);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  std::ios::~ios();
  return 0;
}

void sub_1006BE1BC(_Unwind_Exception *a1)
{
}

void sub_1006BE248(uint64_t a1)
{
}

void sub_1006BE28C(uint64_t a1)
{
  *((unsigned char *)&v28.__r_.__value_.__s + 23) = 7;
  strcpy((char *)&v28, "SELECT ");
  sub_1006BCCCC((uint64_t)__p);
  if ((v27 & 0x80u) == 0) {
    uint64_t v2 = __p;
  }
  else {
    uint64_t v2 = (void **)__p[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v3 = v27;
  }
  else {
    std::string::size_type v3 = (std::string::size_type)__p[1];
  }
  uint8x8_t v4 = std::string::append(&v28, (const std::string::value_type *)v2, v3);
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v29.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  char v25 = 6;
  strcpy(__s, " FROM ");
  uint64_t v6 = std::string::append(&v29, __s, 6uLL);
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v30.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  int v8 = *(char *)(a1 + 295);
  if (v8 >= 0) {
    size_t v9 = (const std::string::value_type *)(a1 + 272);
  }
  else {
    size_t v9 = *(const std::string::value_type **)(a1 + 272);
  }
  if (v8 >= 0) {
    std::string::size_type v10 = *(unsigned __int8 *)(a1 + 295);
  }
  else {
    std::string::size_type v10 = *(void *)(a1 + 280);
  }
  uint64_t v11 = std::string::append(&v30, v9, v10);
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  char v23 = 7;
  strcpy(v22, " WHERE ");
  uint64_t v13 = std::string::append(&v31, v22, 7uLL);
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  uint64_t v15 = std::string::append(&v32, "ROWID");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  char v21 = 2;
  strcpy(v20, "=?");
  uint64_t v17 = std::string::append(&v35, v20, 2uLL);
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  int64_t v34 = v17->__r_.__value_.__r.__words[2];
  long long v33 = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  if (v21 < 0) {
    operator delete(*(void **)v20);
  }
  if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v35.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v32.__r_.__value_.__l.__data_);
  }
  if (v23 < 0) {
    operator delete(*(void **)v22);
  }
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v31.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v30.__r_.__value_.__l.__data_);
  }
  if (v25 < 0) {
    operator delete(*(void **)__s);
  }
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v29.__r_.__value_.__l.__data_);
  }
  if ((char)v27 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v28.__r_.__value_.__l.__data_);
  }
  if (v34 >= 0) {
    double v19 = &v33;
  }
  else {
    double v19 = (long long *)v33;
  }
  sub_10014D518(a1 + 64, (uint64_t)v19);
}

void sub_1006BE790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  if (v48) {
    (*(void (**)(uint64_t))(*(void *)v48 + 8))(v48);
  }
  if (a48 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1006BE8B8(id a1)
{
  qword_102419638 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_1006BE8E8()
{
  qword_10247C9F0 = (uint64_t)"MCC";
  dword_10247C9F8 = 1;
  word_10247C9FC = 1;
  byte_10247CA00 = 0;
  byte_10247CA18 = 0;
  qword_10247CA20 = (uint64_t)"MNC";
  dword_10247CA28 = 1;
  word_10247CA2C = 1;
  byte_10247CA30 = 0;
  byte_10247CA48 = 0;
  qword_10247CA50 = (uint64_t)"LAC";
  dword_10247CA58 = 1;
  word_10247CA5C = 1;
  byte_10247CA60 = 0;
  byte_10247CA78 = 0;
  qword_10247CA80 = (uint64_t)"CI";
  dword_10247CA88 = 1;
  word_10247CA8C = 1;
  byte_10247CA90 = 0;
  byte_10247CAA8 = 0;
  qword_10247CAB0 = (uint64_t)"UARFCN";
  dword_10247CAB8 = 1;
  word_10247CABC = 1;
  byte_10247CAC0 = 0;
  byte_10247CAD8 = 0;
  qword_10247CAE0 = (uint64_t)"PSC";
  dword_10247CAE8 = 1;
  word_10247CAEC = 1;
  byte_10247CAF0 = 0;
  byte_10247CB08 = 0;
  qword_10247CB10 = (uint64_t)"Timestamp";
  dword_10247CB18 = 2;
  word_10247CB1C = 0;
  byte_10247CB20 = 0;
  byte_10247CB38 = 0;
  qword_10247CB40 = (uint64_t)"Latitude";
  dword_10247CB48 = 2;
  word_10247CB4C = 0;
  byte_10247CB50 = 0;
  byte_10247CB68 = 0;
  qword_10247CB70 = (uint64_t)"Longitude";
  dword_10247CB78 = 2;
  word_10247CB7C = 0;
  byte_10247CB80 = 0;
  byte_10247CB98 = 0;
  qword_10247CBA0 = (uint64_t)"HorizontalAccuracy";
  dword_10247CBA8 = 2;
  word_10247CBAC = 0;
  byte_10247CBB0 = 0;
  byte_10247CBC8 = 0;
  qword_10247CBD0 = (uint64_t)"Altitude";
  dword_10247CBD8 = 2;
  word_10247CBDC = 0;
  byte_10247CBE0 = 0;
  byte_10247CBF8 = 0;
  qword_10247CC00 = (uint64_t)"VerticalAccuracy";
  dword_10247CC08 = 2;
  word_10247CC0C = 0;
  byte_10247CC10 = 0;
  byte_10247CC28 = 0;
  qword_10247CC30 = (uint64_t)"Speed";
  dword_10247CC38 = 2;
  word_10247CC3C = 0;
  byte_10247CC40 = 0;
  byte_10247CC58 = 0;
  qword_10247CC60 = (uint64_t)"Course";
  dword_10247CC68 = 2;
  word_10247CC6C = 0;
  byte_10247CC70 = 0;
  byte_10247CC88 = 0;
  qword_10247CC90 = (uint64_t)"Confidence";
  dword_10247CC98 = 1;
  word_10247CC9C = 0;
  byte_10247CCA0 = 0;
  byte_10247CCB8 = 0;
  qword_10247CCC0 = 0;
  dword_10247CCC8 = 5;
  word_10247CCCC = 0;
  byte_10247CCD0 = 0;
  byte_10247CCE8 = 0;
}

void sub_1006BEAF4(uint64_t a1)
{
  *(CFAbsoluteTime *)(a1 + 2736) = CFAbsoluteTimeGetCurrent();
}

void sub_1006BEB1C(uint64_t a1)
{
  *(CFAbsoluteTime *)(a1 + 2736) = CFAbsoluteTimeGetCurrent();
}

void sub_1006BEB44(uint64_t a1)
{
  *(CFAbsoluteTime *)(a1 + 2736) = CFAbsoluteTimeGetCurrent();
}

void sub_1006BEB6C(uint64_t a1)
{
  *(CFAbsoluteTime *)(a1 + 2736) = CFAbsoluteTimeGetCurrent();
}

void sub_1006BEB98(uint64_t a1)
{
  *(CFAbsoluteTime *)(a1 + 2736) = CFAbsoluteTimeGetCurrent();
}

uint64_t sub_1006BEBC0(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 2148) == *(unsigned __int16 *)(a1 + 2146)) {
    return sub_1006C1184(a1, 4);
  }
  else {
    return 1;
  }
}

uint64_t sub_1006BEBE0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8440)) {
    return 1;
  }
  else {
    return sub_1006C1184(a1, 7);
  }
}

uint64_t sub_1006BEC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = &unk_1022C44D8;
  *(void *)(a1 + 8) = 34;
  *(_WORD *)(a1 + 16) = 512;
  *(void *)(a1 + 24) = 0x1800000000;
  *(void *)(a1 + 2144) = 0x1800000000;
  *(void *)(a1 + 2344) = 0x1800000000;
  *(void *)(a1 + 2744) = 0;
  *(void *)(a1 + 2752) = 0x7FEFFFFFFFFFFFFFLL;
  uint64_t v6 = a1 + 2760;
  sub_100D440DC(a1 + 2760);
  *(void *)(a1 + 8432) = a3;
  *(unsigned char *)(a1 + 8440) = 0;
  buf[0] = 0;
  sub_10006ACBC((unsigned __int8 *)(a1 + 8441), "DisableAutostartSwimPressureCheck", buf, 0);
  sub_100D44474(v6, 2u);
  int v7 = *(_DWORD *)(a2 + 104);
  int v8 = (void *)(a2 + 80);
  if (v7 != 6) {
    int v8 = (void *)(a2 + 112);
  }
  *(void *)(a1 + 2736) = *v8;
  if (v7 > 7)
  {
    if (v7 == 41)
    {
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C4808);
      }
      size_t v9 = qword_1024191C8;
      if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Tier2Smoother, tracking alternate walk escalation", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C4808);
        }
        uint64_t v11 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "CLWorkoutPredictorTier2Smoother::CLWorkoutPredictorTier2Smoother(const CLMotionActivity &, const CLWorkoutPredictorInputs &)", "%s\n", v11);
        if (v11 != (char *)buf) {
          free(v11);
        }
      }
      sub_1001A34E0(a1, 10, (uint64_t)buf);
    }
    else if (v7 == 8)
    {
      sub_1001A34E0(a1, 1, (uint64_t)buf);
    }
  }
  else if (v7 == 4)
  {
    sub_1001A34E0(a1, 2, (uint64_t)buf);
  }
  else if (v7 == 6)
  {
    sub_1001A34E0(a1, 12, (uint64_t)buf);
  }
  return a1;
}

void sub_1006BEEAC(_Unwind_Exception *a1)
{
  void *v1 = off_1022F3E40;
  _Unwind_Resume(a1);
}

uint64_t sub_1006BEEE8(uint64_t result, double a2)
{
  if (*(unsigned char *)(result + 16))
  {
    *(void *)(result + 2744) = 0;
  }
  else
  {
    double v2 = *(double *)(result + 2744) + a2;
    *(double *)(result + 2744) = v2;
    if (v2 > 180.0) {
      return sub_1001A34E0(result, 9, (uint64_t)&v3);
    }
  }
  return result;
}

uint64_t sub_1006BEF3C(uint64_t a1, uint64_t a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10247CD08, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10247CD08))
  {
    v23[0] = 0x500000000;
    sub_1004F7D80(qword_10247CCF0, v23, 2uLL);
    __cxa_atexit((void (*)(void *))sub_1004F7E04, qword_10247CCF0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10247CD08);
  }
  __int16 v24 = 0;
  *(_OWORD *)char v23 = xmmword_101D1E250;
  memset(&v23[2], 0, 135);
  long long v25 = xmmword_101D1E250;
  uint64_t v26 = 0;
  int v27 = 0;
  uint64_t v28 = 0;
  v29[0] = 0;
  *(void *)((char *)v29 + 5) = 0;
  *(void *)((char *)&v29[1] + 6) = 0;
  char v30 = 0;
  memset(&v29[3], 0, 24);
  long long v31 = xmmword_101D1E250;
  uint64_t v32 = 0;
  int v33 = 0;
  unint64_t v34 = 0xFFEFFFFFFFFFFFFFLL;
  int v45 = 0;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  int v40 = 0;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v43 = 0u;
  memset(v44, 0, sizeof(v44));
  uint64_t v46 = 0;
  uint64_t v47 = 0;
  unint64_t v48 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v49 = 0;
  int v50 = 0;
  uint64_t v56 = 0;
  __int16 v57 = 0;
  int v62 = 0;
  int v55 = 0;
  long long v53 = 0u;
  long long v54 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  long long v59 = 0u;
  long long v58 = 0u;
  char v60 = 0;
  memset(v61, 0, sizeof(v61));
  unint64_t v63 = 0xFFEFFFFFFFFFFFFFLL;
  long long v82 = 0u;
  long long v81 = 0u;
  long long v80 = 0u;
  long long v79 = 0u;
  long long v78 = 0u;
  long long v77 = 0u;
  long long v76 = 0u;
  long long v75 = 0u;
  long long v74 = 0u;
  long long v73 = 0u;
  long long v72 = 0u;
  long long v71 = 0u;
  long long v70 = 0u;
  long long v69 = 0u;
  long long v68 = 0u;
  long long v67 = 0u;
  long long v66 = 0u;
  long long v65 = 0u;
  long long v64 = 0u;
  uint64_t v83 = 0;
  double v84 = -1.79769313e308;
  long long v85 = 0u;
  long long v86 = 0u;
  long long v87 = 0u;
  long long v88 = 0u;
  unint64_t v89 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v90 = 0;
  int v91 = 0;
  uint64_t v92 = 0;
  char v93 = 0;
  unint64_t v94 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v96 = 0;
  uint64_t v95 = 0;
  uint64_t v97 = 0x80000000800000;
  uint64_t v99 = 0;
  uint64_t v98 = 0;
  long long v100 = xmmword_101D1E260;
  uint64_t v101 = 0x80000000800000;
  long long v102 = 0u;
  long long v103 = 0u;
  uint64_t v104 = 0;
  unint64_t v105 = 0xFFEFFFFFFFFFFFFFLL;
  long long v106 = 0u;
  long long v107 = 0u;
  long long v108 = 0u;
  long long v109 = 0u;
  long long v110 = 0u;
  long long v111 = 0u;
  int v112 = 0;
  unint64_t v113 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v114 = 0;
  int v115 = 0;
  unint64_t v116 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v117 = 7;
  unint64_t v118 = 0xFFEFFFFFFFFFFFFFLL;
  char v119 = 0;
  uint64_t v121 = 0;
  uint64_t v120 = 0;
  uint64_t v122 = 0;
  uint64_t v4 = sub_100174478(*(double **)(a1 + 8432), qword_10247CCF0, (uint64_t)v23);
  if (v4)
  {
    v21[2] = *(_OWORD *)&v23[7];
    v21[3] = *(_OWORD *)&v23[9];
    v21[4] = *(_OWORD *)&v23[11];
    uint64_t v22 = v23[13];
    v21[0] = *(_OWORD *)&v23[3];
    v21[1] = *(_OWORD *)&v23[5];
    sub_1006BF494((unsigned __int16 *)(a1 + 24), (uint64_t)v21);
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10247CD20, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_10247CD20))
    {
      int v20 = 0;
      sub_10044FD20((unsigned __int8 *)&byte_10247CD10, "WorkoutPredictorTier2ClassifierOverride", &v20, 0);
      __cxa_guard_release(&qword_10247CD20);
    }
    if (byte_10247CD10) {
      uint64_t v5 = dword_10247CD14;
    }
    else {
      uint64_t v5 = v85;
    }
    uint64_t v6 = *(unsigned __int16 *)(a1 + 2146);
    unint64_t v7 = *(unsigned int *)(a1 + 2148);
    uint64_t v8 = *(unsigned __int16 *)(a1 + 2144);
    if (v8 + v6 >= v7) {
      uint64_t v9 = *(unsigned int *)(a1 + 2148);
    }
    else {
      uint64_t v9 = 0;
    }
    *(void *)(a1 + 2144 + 8 * (v8 + v6 - v9) + 8) = v5;
    if (v7 <= v6)
    {
      if (v8 + 1 < v7) {
        LOWORD(v7) = 0;
      }
      *(_WORD *)(a1 + 2144) = v8 + 1 - v7;
    }
    else
    {
      *(_WORD *)(a1 + 2146) = v6 + 1;
    }
    sub_1006BF518(a1, v5);
    sub_1006BF57C(a1, (uint64_t)v21);
    sub_1006BF61C(a1);
    uint64_t v10 = (*(uint64_t (**)(void))(***(void ***)(a1 + 8432) + 32))(**(void **)(a1 + 8432));
    sub_100186B50(v10);
    sub_1006BF814(a1);
    uint64_t v11 = (*(uint64_t (**)(void))(***(void ***)(a1 + 8432) + 72))(**(void **)(a1 + 8432));
    sub_1006BFA44(v11);
    uint64_t v12 = (*(uint64_t (**)(void))(***(void ***)(a1 + 8432) + 80))(**(void **)(a1 + 8432));
    sub_1006BFAD8(v12);
    sub_1006BFB6C(a1);
    sub_1006BFE4C(a1);
    sub_1006C0190(a1);
    double v13 = *(double *)(a1 + 2752);
    float v14 = v84 - v13;
    double v15 = fabsf(v14);
    BOOL v16 = v84 < v13;
    double v17 = 0.0;
    if (!v16) {
      double v17 = v15;
    }
    *(double *)(a1 + 2752) = v84;
    sub_1006BEEE8(a1, v17);
    if ((*(unsigned char *)(a1 + 16) - 1) > 7u) {
      uint64_t v18 = 25;
    }
    else {
      uint64_t v18 = qword_101D2A3D8[(char)(*(unsigned char *)(a1 + 16) - 1)];
    }
    *(void *)(a2 + 8) = v18;
    *(double *)a2 = v84;
    *(_DWORD *)(a2 + 16) = sub_1006C02E0(a1);
    *(void *)(a2 + 24) = *(void *)(a1 + 2736);
    *(unsigned char *)(a2 + 32) = *(unsigned char *)(a1 + 16) == 6;
  }
  return v4;
}

void sub_1006BF464(_Unwind_Exception *a1)
{
}

unsigned __int16 *sub_1006BF494(unsigned __int16 *result, uint64_t a2)
{
  unint64_t v2 = *((unsigned int *)result + 1);
  unint64_t v3 = *result + (unint64_t)result[1];
  if (v3 < v2) {
    unint64_t v2 = 0;
  }
  uint64_t v4 = &result[44 * (v3 - v2)];
  long long v6 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 32);
  *((void *)v4 + 11) = *(void *)(a2 + 80);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 4) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 12) = v8;
  *(_OWORD *)(v4 + 20) = v7;
  *(_OWORD *)(v4 + 36) = v5;
  *(_OWORD *)(v4 + 28) = v6;
  unsigned int v9 = result[1];
  unint64_t v10 = *((unsigned int *)result + 1);
  if (v10 <= v9)
  {
    unint64_t v11 = *result + 1;
    if (v11 < v10) {
      LOWORD(v10) = 0;
    }
    *uint64_t result = v11 - v10;
  }
  else
  {
    result[1] = v9 + 1;
  }
  return result;
}

uint64_t sub_1006BF518(uint64_t result, uint64_t a2)
{
  if (a2 == 12 || a2 == 9)
  {
    uint64_t v3 = (*(uint64_t (**)(void))(***(void ***)(result + 8432) + 16))(**(void **)(result + 8432));
    return sub_1006C1B00(v3);
  }
  return result;
}

uint64_t sub_1006BF57C(uint64_t result, uint64_t a2)
{
  HIDWORD(v2) = *(_DWORD *)(a2 + 56);
  LODWORD(v2) = HIDWORD(v2) - 16;
  switch((v2 >> 4))
  {
    case 0u:
      uint64_t v3 = &v7;
      int v4 = 2;
      goto LABEL_6;
    case 1u:
      uint64_t v3 = &v6;
      int v4 = 10;
      goto LABEL_6;
    case 3u:
      uint64_t v3 = &v8;
      int v4 = 1;
      goto LABEL_6;
    case 7u:
      uint64_t v3 = &v5;
      int v4 = 12;
LABEL_6:
      uint64_t result = sub_1001A34E0(result, v4, (uint64_t)v3);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006BF61C(uint64_t result)
{
  unsigned int v1 = *(unsigned __int16 *)(result + 26);
  if (*(_DWORD *)(result + 28) == v1)
  {
    uint64_t v2 = result;
    if (v1 < 0xF) {
      goto LABEL_6;
    }
    char v3 = 1;
    unint64_t v4 = 14;
    do
    {
      uint64_t result = sub_1006C2594((unsigned __int16 *)(v2 + 24), v4);
      v3 &= *(_DWORD *)result != 64;
      ++v4;
    }
    while (v4 < *(unsigned __int16 *)(v2 + 26));
    if (v3)
    {
LABEL_6:
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C4808);
      }
      char v5 = qword_1024191C8;
      if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Tier2Smoother attempted de-escalating due to no Running calls in Tier 1 Classifier", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022C4808);
        }
        char v6 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLWorkoutPredictorTier2Smoother::evaluateTier1ClassifierBuffer()", "%s\n", v6);
        if (v6 != (char *)buf) {
          free(v6);
        }
      }
      return sub_1001A34E0(v2, 6, (uint64_t)buf);
    }
  }
  return result;
}

uint64_t sub_1006BF814(uint64_t a1)
{
  uint64_t result = sub_100D4412C(a1 + 2760, *(double **)(a1 + 8432));
  char v3 = result;
  if (*(_DWORD *)(a1 + 2148) == *(unsigned __int16 *)(a1 + 2146) && !*(unsigned char *)(a1 + 8440))
  {
    uint64_t result = sub_1006C1184(a1, 4);
    int v4 = result ^ 1;
    if ((v3 & 1) == 0)
    {
LABEL_4:
      if (!v4) {
        return result;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((result & 1) == 0) {
      goto LABEL_4;
    }
  }
  int v5 = v3 & 1;
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C4808);
  }
  char v6 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 67240448;
    int v9 = v5;
    __int16 v10 = 1026;
    int v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Tier2Smoother,ped auto-stop detected,%{public}d,ped de-escalation from exercise minutes,%{public}d", buf, 0xEu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    char v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWorkoutPredictorTier2Smoother::checkPedestrianStop()", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  return sub_1001A34E0(a1, 7, (uint64_t)buf);
}

uint64_t sub_1006BFA44(uint64_t result)
{
  if (*(double *)(result + 64) != -1.0)
  {
    uint64_t v1 = result;
    if (!*(unsigned char *)(result + 8))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16))(result);
      if (result)
      {
        *(unsigned char *)(v1 + 8) = 1;
      }
      else if (!*(unsigned char *)(v1 + 8))
      {
        double v2 = 2.22507386e-308;
        goto LABEL_7;
      }
    }
    double v2 = *(double *)(v1 + 64) + 30.0;
LABEL_7:
    *(double *)(v1 + 72) = v2;
  }
  return result;
}

uint64_t sub_1006BFAD8(uint64_t result)
{
  if (*(double *)(result + 64) != -1.0)
  {
    uint64_t v1 = result;
    if (!*(unsigned char *)(result + 8))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16))(result);
      if (result)
      {
        *(unsigned char *)(v1 + 8) = 1;
      }
      else if (!*(unsigned char *)(v1 + 8))
      {
        double v2 = 2.22507386e-308;
        goto LABEL_7;
      }
    }
    double v2 = *(double *)(v1 + 64) + 30.0;
LABEL_7:
    *(double *)(v1 + 72) = v2;
  }
  return result;
}

uint64_t sub_1006BFB6C(uint64_t a1)
{
  if (!*(_WORD *)(a1 + 2146)) {
    goto LABEL_32;
  }
  unint64_t v2 = 0;
  int v3 = 0;
  int v4 = 0;
  int v5 = 0;
  int v6 = 0;
  int v7 = 0;
  do
  {
    uint64_t v8 = *(void *)sub_1006C2398((unsigned __int16 *)(a1 + 2144), v2);
    if (v8 <= 8)
    {
      if (v8 != 1)
      {
        if (v8 == 2) {
          goto LABEL_14;
        }
        goto LABEL_10;
      }
      ++v6;
    }
    else
    {
      switch(v8)
      {
        case 9:
          ++v4;
          break;
        case 12:
          ++v5;
          break;
        case 19:
          ++v3;
          break;
        default:
LABEL_10:
          ++v7;
          break;
      }
    }
LABEL_14:
    ++v2;
  }
  while (v2 < *(unsigned __int16 *)(a1 + 2146));
  if (v3 > 18)
  {
    uint64_t v9 = a1;
    int v10 = 3;
    goto LABEL_31;
  }
  if (v4 >= 19)
  {
    uint64_t v9 = a1;
    int v10 = 5;
    goto LABEL_31;
  }
  if (v5 >= 19)
  {
    uint64_t v9 = a1;
    int v10 = 4;
    goto LABEL_31;
  }
  if (v7 < 13)
  {
    if (*(unsigned char *)(a1 + 8440) && v6 >= 19)
    {
      uint64_t v9 = a1;
      int v10 = 2;
      goto LABEL_31;
    }
  }
  else
  {
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    int v11 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Tier2Smoother attemped de-escalating due to Unknown calls in Tier 2 Classifier", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C4808);
      }
      float v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWorkoutPredictorTier2Smoother::evaluateTier2ClassifierBuffer()", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
    uint64_t v9 = a1;
    int v10 = 8;
LABEL_31:
    sub_1001A34E0(v9, v10, (uint64_t)buf);
  }
LABEL_32:
  uint64_t result = sub_1006C0584(a1);
  if (result)
  {
    *(void *)uint64_t buf = v13;
    return sub_1001A34E0(a1, 13, (uint64_t)buf);
  }
  return result;
}

void sub_1006BFE4C(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10247CD80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10247CD80))
  {
    v4[0] = 0x20000000BLL;
    sub_1004F7D80(qword_10247CD68, v4, 2uLL);
    __cxa_atexit((void (*)(void *))sub_1004F7E04, qword_10247CD68, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10247CD80);
  }
  if (*(unsigned char *)(a1 + 16) == 8)
  {
    __int16 v5 = 0;
    *(_OWORD *)int v4 = xmmword_101D1E250;
    memset(&v4[2], 0, 135);
    long long v6 = xmmword_101D1E250;
    uint64_t v7 = 0;
    int v8 = 0;
    uint64_t v9 = 0;
    v10[0] = 0;
    *(void *)((char *)v10 + 5) = 0;
    *(void *)((char *)&v10[1] + 6) = 0;
    char v11 = 0;
    memset(&v10[3], 0, 24);
    long long v12 = xmmword_101D1E250;
    uint64_t v13 = 0;
    int v14 = 0;
    double v15 = -1.79769313e308;
    int v26 = 0;
    long long v16 = 0u;
    long long v17 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    int v21 = 0;
    long long v22 = 0u;
    long long v23 = 0u;
    long long v24 = 0u;
    memset(v25, 0, sizeof(v25));
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    unint64_t v29 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v30 = 0;
    int v31 = 0;
    uint64_t v37 = 0;
    __int16 v38 = 0;
    int v43 = 0;
    int v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v40 = 0u;
    long long v39 = 0u;
    char v41 = 0;
    memset(v42, 0, sizeof(v42));
    unint64_t v44 = 0xFFEFFFFFFFFFFFFFLL;
    long long v63 = 0u;
    long long v62 = 0u;
    long long v61 = 0u;
    long long v60 = 0u;
    long long v59 = 0u;
    long long v58 = 0u;
    long long v57 = 0u;
    long long v56 = 0u;
    long long v55 = 0u;
    long long v54 = 0u;
    long long v53 = 0u;
    long long v52 = 0u;
    long long v51 = 0u;
    long long v50 = 0u;
    long long v49 = 0u;
    long long v48 = 0u;
    long long v47 = 0u;
    long long v46 = 0u;
    long long v45 = 0u;
    uint64_t v64 = 0;
    unint64_t v65 = 0xFFEFFFFFFFFFFFFFLL;
    long long v66 = 0u;
    long long v67 = 0u;
    long long v68 = 0u;
    long long v69 = 0u;
    unint64_t v70 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v71 = 0;
    int v72 = 0;
    uint64_t v73 = 0;
    char v74 = 0;
    unint64_t v75 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v77 = 0;
    uint64_t v76 = 0;
    uint64_t v78 = 0x80000000800000;
    uint64_t v80 = 0;
    uint64_t v79 = 0;
    long long v81 = xmmword_101D1E260;
    uint64_t v82 = 0x80000000800000;
    long long v83 = 0u;
    long long v84 = 0u;
    uint64_t v85 = 0;
    unint64_t v86 = 0xFFEFFFFFFFFFFFFFLL;
    long long v87 = 0u;
    long long v88 = 0u;
    long long v89 = 0u;
    long long v90 = 0u;
    long long v91 = 0u;
    long long v92 = 0u;
    int v93 = 0;
    unint64_t v94 = 0xFFEFFFFFFFFFFFFFLL;
    __int16 v95 = 0;
    int v96 = 0;
    double v97 = -1.79769313e308;
    uint64_t v98 = 7;
    unint64_t v99 = 0xFFEFFFFFFFFFFFFFLL;
    char v100 = 0;
    uint64_t v102 = 0;
    uint64_t v101 = 0;
    uint64_t v103 = 0;
    sub_100174478(*(double **)(a1 + 8432), qword_10247CD68, (uint64_t)v4);
    if (v97 != -1.79769313e308)
    {
      uint64_t v2 = 0;
      if (v15 != -1.79769313e308 && *(double *)&v18 > 0.0) {
        uint64_t v2 = v18;
      }
      LODWORD(v3) = v98;
      *((void *)&v3 + 1) = v2;
      sub_1000C0748((unsigned __int16 *)(a1 + 2344), &v3);
    }
  }
}

void sub_1006C0170(_Unwind_Exception *a1)
{
}

uint64_t sub_1006C0190(uint64_t result)
{
  uint64_t v1 = result;
  if (!*(_WORD *)(result + 2346))
  {
    unsigned int v4 = 0;
    unsigned int v5 = 0;
    unsigned int v6 = 0;
LABEL_26:
    if (v6 > 0xB || v5 > 3 || v4 >= 4) {
      return sub_1001A34E0(v1, 11, (uint64_t)&v15);
    }
    return result;
  }
  unint64_t v2 = 0;
  int v3 = 0;
  unsigned int v4 = 0;
  unsigned int v5 = 0;
  unsigned int v6 = 0;
  double v7 = -1.79769313e308;
  do
  {
    unsigned int v8 = *(_DWORD *)sub_1006C2848((unsigned __int16 *)(v1 + 2344), v2);
    if (v8 == 2 || v8 == 13) {
      ++v5;
    }
    if (v8 == 14) {
      ++v4;
    }
    if (v8 == 6 || ((++v6, v10 = v8 > 5, int v11 = (1 << v8) & 0x31, !v10) ? (v12 = v11 == 0) : (v12 = 1), !v12)) {
      ++v3;
    }
    uint64_t result = sub_1006C2848((unsigned __int16 *)(v1 + 2344), v2);
    if (*(double *)(result + 8) > v7)
    {
      uint64_t result = sub_1006C2848((unsigned __int16 *)(v1 + 2344), v2);
      double v7 = *(double *)(result + 8);
    }
    ++v2;
    unint64_t v13 = *(unsigned __int16 *)(v1 + 2346);
  }
  while (v2 < v13);
  if (v7 <= 2.2352 || v13 != v3) {
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_1006C02E0(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10247CD98, memory_order_acquire) & 1) == 0)
  {
    uint64_t v3 = a1;
    int v4 = __cxa_guard_acquire(&qword_10247CD98);
    a1 = v3;
    if (v4)
    {
      int v5 = 1;
      sub_10044FD20((unsigned __int8 *)&byte_10247CD88, "WorkoutPredictorTier2ConfidenceOverride", &v5, 0);
      __cxa_guard_release(&qword_10247CD98);
      a1 = v3;
    }
  }
  if (byte_10247CD88) {
    return dword_10247CD8C;
  }
  int v2 = *(unsigned __int8 *)(a1 + 16);
  switch(v2)
  {
    case 4:
      return sub_1006C2794(a1);
    case 8:
      return sub_1006C27E4(a1);
    case 6:
      return sub_1006C2794(a1);
  }
  return sub_1006C2034(a1);
}

void sub_1006C03B4(_Unwind_Exception *a1)
{
}

void sub_1006C03CC(uint64_t a1, int a2)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C4808);
  }
  int v4 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 67240192;
    int v7 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Tier2Smoother, set rapid walking detection, %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    int v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWorkoutPredictorTier2Smoother::setRapidWalkingDetectionEnabled(BOOL)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  *(unsigned char *)(a1 + 8440) = a2;
}

BOOL sub_1006C0584(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10247CD30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10247CD30))
  {
    sub_101A1F180((unsigned __int8 *)&buf, "WorkoutPredictorDistanceThresholdForMachineWorkouts", &qword_101D2A070, 0);
    qword_10247CD28 = *(void *)v33;
    __cxa_guard_release(&qword_10247CD30);
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10247CD40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10247CD40))
  {
    sub_101A1F180((unsigned __int8 *)&buf, "WorkoutPredictorDistanceLookbackForMachineWorkouts", "\nףp=\nG@", 0);
    qword_10247CD38 = *(void *)v33;
    __cxa_guard_release(&qword_10247CD40);
  }
  double v2 = *(double *)&qword_10247CD38;
  double Current = CFAbsoluteTimeGetCurrent();
  double v20 = Current - v2;
  uint64_t v18 = 0;
  double v19 = 0.0;
  uint64_t v3 = (void *)(*(uint64_t (**)(void))(***(void ***)(a1 + 8432) + 16))(**(void **)(a1 + 8432));
  int v4 = operator new(0x28uLL);
  *int v4 = off_1022C4838;
  v4[1] = &v20;
  v4[2] = &Current;
  void v4[3] = &v19;
  void v4[4] = &v18;
  *(void *)&v35[4] = v4;
  sub_1005E68B4(v3, (uint64_t)&buf);
  sub_1005E73C4(&buf);
  uint64_t v6 = v18;
  double v5 = v19;
  double v7 = *(double *)&qword_10247CD28;
  int v8 = *(unsigned __int8 *)(a1 + 16);
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C4808);
  }
  uint64_t v9 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_INFO))
  {
    unint64_t v10 = *(unsigned __int16 *)(a1 + 2144) + (unint64_t)*(unsigned __int16 *)(a1 + 2146) - 1;
    unint64_t v11 = *(unsigned int *)(a1 + 2148);
    if (v10 < v11) {
      unint64_t v11 = 0;
    }
    uint64_t v12 = *(void *)(a1 + 2144 + 8 * (v10 - v11) + 8);
    LODWORD(buf) = 67110400;
    HIDWORD(buf) = v8;
    *(_WORD *)long long v33 = 2048;
    *(void *)&v33[2] = v12;
    __int16 v34 = 2048;
    *(void *)long long v35 = qword_10247CD28;
    *(_WORD *)&v35[8] = 2050;
    *(void *)&v35[10] = qword_10247CD38;
    __int16 v36 = 2050;
    double v37 = v5;
    __int16 v38 = 2050;
    uint64_t v39 = v6;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Tier2Smoother, GPS check, current fsm state, %d, tier2, %lu, requested threshold, %{float}f, requested duration, %{public}f, distance traveled, %{public}f, distance count, %{public}lu", (uint8_t *)&buf, 0x3Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    unint64_t v14 = *(unsigned __int16 *)(a1 + 2144) + (unint64_t)*(unsigned __int16 *)(a1 + 2146) - 1;
    unint64_t v15 = *(unsigned int *)(a1 + 2148);
    if (v14 < v15) {
      unint64_t v15 = 0;
    }
    uint64_t v16 = *(void *)(a1 + 2144 + 8 * (v14 - v15) + 8);
    LODWORD(Current) = 67110400;
    HIDWORD(Current) = v8;
    __int16 v22 = 2048;
    uint64_t v23 = v16;
    __int16 v24 = 2048;
    uint64_t v25 = qword_10247CD28;
    __int16 v26 = 2050;
    uint64_t v27 = qword_10247CD38;
    __int16 v28 = 2050;
    double v29 = v5;
    __int16 v30 = 2050;
    uint64_t v31 = v6;
    long long v17 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::pair<BOOL, double> CLWorkoutPredictorTier2Smoother::isAccruingOdometerDistance() const", "%s\n", v17);
    if (v17 != (char *)&buf) {
      free(v17);
    }
  }
  return v7 < v5;
}

void sub_1006C0980(_Unwind_Exception *a1)
{
}

void sub_1006C09C0(uint64_t a1, double a2, double a3)
{
  v10[0] = 0;
  unint64_t v9 = 0;
  double v5 = (void *)(*(uint64_t (**)(void))(***(void ***)(a1 + 8432) + 72))(**(void **)(a1 + 8432));
  uint64_t v6 = (double *)operator new(0x28uLL);
  *(void *)uint64_t v6 = off_1022C48B8;
  v6[1] = a2;
  v6[2] = a3;
  *((void *)v6 + 3) = v10;
  *((void *)v6 + 4) = &v9;
  v22[3] = v6;
  sub_1006C0C70(v5, (uint64_t)v22);
  sub_1006A8638(v22);
  if (v9 <= 9)
  {
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    double v7 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 134349568;
      double v17 = a2;
      __int16 v18 = 2050;
      double v19 = a3;
      __int16 v20 = 2048;
      unint64_t v21 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Tier2Smoother swimcheck, insufficient samples in range start %{public}f, end %{public}f, num %zu", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C4808);
      }
      v10[1] = 134349568;
      double v11 = a2;
      __int16 v12 = 2050;
      double v13 = a3;
      __int16 v14 = 2048;
      unint64_t v15 = v9;
      int v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "float CLWorkoutPredictorTier2Smoother::calculateAveragePressure(CFAbsoluteTime, CFAbsoluteTime) const", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
  }
}

void sub_1006C0C54(_Unwind_Exception *exception_object)
{
}

void *sub_1006C0C70(void *result, uint64_t a2)
{
  uint64_t v2 = result[7];
  if (v2)
  {
    unint64_t v3 = result[6];
    unsigned __int8 v4 = v3 + v2;
    unint64_t v5 = (v3 + v2) >> 8;
    uint64_t v6 = result[3];
    double v7 = (void *)(v6 + 8 * v5);
    if (result[4] == v6)
    {
      uint64_t v10 = 0;
      __int16 v12 = v7;
      uint64_t v13 = 0;
      __int16 v14 = v7;
      uint64_t v15 = 0;
      unint64_t v9 = (void *)(v6 + 8 * (v3 >> 8));
    }
    else
    {
      uint64_t v8 = *v7 + 16 * v4;
      __int16 v12 = v7;
      uint64_t v13 = v8;
      __int16 v14 = v7;
      uint64_t v15 = v8;
      unint64_t v9 = (void *)(v6 + 8 * (v3 >> 8));
      uint64_t v10 = *v9 + 16 * v3;
    }
    v11[0] = v9;
    v11[1] = v10;
    int32x4_t v11[2] = v9;
    _OWORD v11[3] = v10;
    sub_1006AFEE0((uint64_t)v16, a2);
    sub_1006C395C((uint64_t)&v12, (uint64_t)v11, (uint64_t)v16, (uint64_t)v17);
    sub_1006A8638(v17);
    return sub_1006A8638(v16);
  }
  return result;
}

void sub_1006C0D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_1006A8638((uint64_t *)va);
  _Unwind_Resume(a1);
}

BOOL sub_1006C0D6C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8442)) {
    return 1;
  }
  double v2 = CFAbsoluteTimeGetCurrent() + -300.0 + 10.0;
  uint64_t v3 = (*(uint64_t (**)(void))(***(void ***)(a1 + 8432) + 72))(**(void **)(a1 + 8432));
  if (!sub_100175B34(v3, &v19, v2))
  {
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    uint64_t v16 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Tier2Smoother swimcheck, failed to get first entry", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C4808);
      }
      LOWORD(v20) = 0;
      __int16 v18 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWorkoutPredictorTier2Smoother::isWaterOccludedOrPressureDeltaPresent(const ESwimDetected *) const", "%s\n", v18);
      if (v18 != (char *)buf) {
        free(v18);
      }
    }
    return 1;
  }
  __int16 v4 = WORD4(v19);
  double Current = CFAbsoluteTimeGetCurrent();
  double v6 = Current + -30.0;
  double v7 = Current + -300.0;
  sub_1006C09C0(a1, Current + -30.0, Current);
  float v9 = v8;
  sub_1006C09C0(a1, v7, v7 + 30.0);
  float v11 = v10;
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C4808);
  }
  unsigned int v12 = v4 & 0x1000;
  uint64_t v13 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 67240960;
    unsigned int v29 = v12 >> 12;
    __int16 v30 = 2050;
    double v31 = v6;
    __int16 v32 = 2050;
    double v33 = v9;
    __int16 v34 = 2050;
    double v35 = v11;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Tier2Smoother swimcheck,waterOccluded,%{public}d,startTime,%{public}f,averageNow,%{public}f,,averageHistorical,%{public}f", buf, 0x26u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    int v20 = 67240960;
    unsigned int v21 = v12 >> 12;
    __int16 v22 = 2050;
    double v23 = v6;
    __int16 v24 = 2050;
    double v25 = v9;
    __int16 v26 = 2050;
    double v27 = v11;
    double v17 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWorkoutPredictorTier2Smoother::isWaterOccludedOrPressureDeltaPresent(const ESwimDetected *) const", "%s\n", v17);
    if (v17 != (char *)buf) {
      free(v17);
    }
  }
  BOOL result = 1;
  if (v9 != 0.0 && v11 != 0.0) {
    return (float)(v9 - v11) > 500.0 || v12 != 0;
  }
  return result;
}

uint64_t sub_1006C1184(uint64_t a1, int a2)
{
  if (sub_1006C16F4(a1) > 720.0)
  {
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    __int16 v4 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Tier2Smoother, bypassing exercise minute requirements for sustained walking", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C4808);
      }
      LOWORD(v17) = 0;
      uint64_t v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWorkoutPredictorTier2Smoother::areEnoughExerciseMinutesPresent(const int) const", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
    return 1;
  }
  double Current = CFAbsoluteTimeGetCurrent();
  if (a2 == 4)
  {
    double v7 = -420.0;
    goto LABEL_12;
  }
  if (a2 == 7)
  {
    double v7 = -600.0;
LABEL_12:
    double v8 = Current + v7;
    int v16 = 0;
    float v9 = (void *)(*(uint64_t (**)(void))(***(void ***)(a1 + 8432) + 80))(**(void **)(a1 + 8432));
    float v10 = (double *)operator new(0x20uLL);
    *(void *)float v10 = off_1022C4948;
    v10[1] = v8;
    _DWORD v10[2] = Current;
    *((void *)v10 + 3) = &v16;
    v25[3] = v10;
    sub_1006C19E0(v9, (uint64_t)v25);
    sub_1006A8540(v25);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    float v11 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 134349824;
      double v27 = v8;
      __int16 v28 = 2050;
      double v29 = Current;
      __int16 v30 = 1026;
      int v31 = v16;
      __int16 v32 = 1026;
      int v33 = a2;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Tier2Smoother,briskCheck,startTime,%{public}f,endTime,%{public}f,numExerciseMinutes,%{public}u,threshold,%{public}d", buf, 0x22u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C4808);
      }
      int v17 = 134349824;
      double v18 = v8;
      __int16 v19 = 2050;
      double v20 = Current;
      __int16 v21 = 1026;
      int v22 = v16;
      __int16 v23 = 1026;
      int v24 = a2;
      __int16 v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWorkoutPredictorTier2Smoother::areEnoughExerciseMinutesPresent(const int) const", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
    return v16 >= a2;
  }
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C4808);
  }
  unsigned int v12 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)uint64_t buf = 67109120;
    LODWORD(v27) = a2;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_FAULT, "Tier2Smoother,passed unknown threshold of %d", buf, 8u);
  }
  uint64_t result = sub_10013D1A0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    int v17 = 67109120;
    LODWORD(v18) = a2;
    uint64_t v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLWorkoutPredictorTier2Smoother::areEnoughExerciseMinutesPresent(const int) const", "%s\n", v15);
    if (v15 != (char *)buf) {
      free(v15);
    }
    return 0;
  }
  return result;
}

void sub_1006C16D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1006A8540((uint64_t *)va);
  _Unwind_Resume(a1);
}

double sub_1006C16F4(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10247CDB8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10247CDB8))
  {
    LODWORD(v5[0]) = 0;
    sub_1004F7D80(qword_10247CDA0, v5, 1uLL);
    __cxa_atexit((void (*)(void *))sub_1004F7E04, qword_10247CDA0, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10247CDB8);
  }
  __int16 v6 = 0;
  *(_OWORD *)unint64_t v5 = xmmword_101D1E250;
  memset(&v5[2], 0, 135);
  long long v7 = xmmword_101D1E250;
  uint64_t v8 = 0;
  int v9 = 0;
  uint64_t v10 = 0;
  v11[0] = 0;
  *(void *)((char *)v11 + 5) = 0;
  *(void *)((char *)&v11[1] + 6) = 0;
  char v12 = 0;
  memset(&v11[3], 0, 24);
  long long v13 = xmmword_101D1E250;
  uint64_t v14 = 0;
  int v15 = 0;
  unint64_t v16 = 0xFFEFFFFFFFFFFFFFLL;
  int v27 = 0;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  int v22 = 0;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  memset(v26, 0, sizeof(v26));
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  unint64_t v30 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v31 = 0;
  int v32 = 0;
  uint64_t v38 = 0;
  __int16 v39 = 0;
  int v44 = 0;
  int v37 = 0;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v41 = 0u;
  long long v40 = 0u;
  char v42 = 0;
  memset(v43, 0, sizeof(v43));
  unint64_t v45 = 0xFFEFFFFFFFFFFFFFLL;
  long long v64 = 0u;
  long long v63 = 0u;
  long long v62 = 0u;
  long long v61 = 0u;
  long long v60 = 0u;
  long long v59 = 0u;
  long long v58 = 0u;
  long long v57 = 0u;
  long long v56 = 0u;
  long long v55 = 0u;
  long long v54 = 0u;
  long long v53 = 0u;
  long long v52 = 0u;
  long long v51 = 0u;
  long long v50 = 0u;
  long long v49 = 0u;
  long long v48 = 0u;
  long long v47 = 0u;
  long long v46 = 0u;
  uint64_t v65 = 0;
  unint64_t v66 = 0xFFEFFFFFFFFFFFFFLL;
  long long v67 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  unint64_t v71 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v72 = 0;
  int v73 = 0;
  uint64_t v74 = 0;
  char v75 = 0;
  unint64_t v76 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v78 = 0;
  uint64_t v77 = 0;
  uint64_t v79 = 0x80000000800000;
  uint64_t v81 = 0;
  uint64_t v80 = 0;
  long long v82 = xmmword_101D1E260;
  uint64_t v83 = 0x80000000800000;
  long long v84 = 0u;
  long long v85 = 0u;
  uint64_t v86 = 0;
  unint64_t v87 = 0xFFEFFFFFFFFFFFFFLL;
  long long v88 = 0u;
  long long v89 = 0u;
  long long v90 = 0u;
  long long v91 = 0u;
  long long v92 = 0u;
  long long v93 = 0u;
  int v94 = 0;
  unint64_t v95 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v96 = 0;
  int v97 = 0;
  unint64_t v98 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v99 = 7;
  unint64_t v100 = 0xFFEFFFFFFFFFFFFFLL;
  char v101 = 0;
  uint64_t v103 = 0;
  uint64_t v102 = 0;
  uint64_t v104 = 0;
  int v2 = sub_100174478(*(double **)(a1 + 8432), qword_10247CDA0, (uint64_t)v5);
  double result = 0.0;
  if (v2)
  {
    double v4 = *(double *)(a1 + 2736);
    if (*(double *)&v5[1] > v4) {
      return *(double *)&v5[1] - v4;
    }
  }
  return result;
}

void sub_1006C19C0(_Unwind_Exception *a1)
{
}

void *sub_1006C19E0(void *result, uint64_t a2)
{
  uint64_t v2 = result[7];
  if (v2)
  {
    unint64_t v3 = result[6];
    uint64_t v4 = v3 + v2;
    unint64_t v5 = (v3 + v2) / 0xAA;
    uint64_t v6 = result[3];
    if (result[4] == v6)
    {
      unint64_t v9 = 0;
      uint64_t v11 = v6 + 8 * v5;
      uint64_t v12 = 0;
      uint64_t v13 = v11;
      uint64_t v14 = 0;
      uint64_t v8 = (void *)(v6 + 8 * (v3 / 0xAA));
    }
    else
    {
      uint64_t v7 = *(void *)(v6 + 8 * v5);
      uint64_t v11 = v6 + 8 * v5;
      uint64_t v12 = v7 + 24 * (v4 - 170 * v5);
      uint64_t v13 = v11;
      uint64_t v14 = v12;
      uint64_t v8 = (void *)(v6 + 8 * (v3 / 0xAA));
      unint64_t v9 = *v8 + 24 * (v3 % 0xAA);
    }
    v10[0] = v8;
    v10[1] = v9;
    _DWORD v10[2] = v8;
    void v10[3] = v9;
    sub_1006B0004((uint64_t)v15, a2);
    sub_1006C3BE4((uint64_t)&v11, (uint64_t)v10, (uint64_t)v15, (uint64_t)v16);
    sub_1006A8540(v16);
    return sub_1006A8540(v15);
  }
  return result;
}

void sub_1006C1AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_1006A8540((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1006C1B00(uint64_t result)
{
  if (*(double *)(result + 64) != -1.0)
  {
    uint64_t v1 = result;
    if (!*(unsigned char *)(result + 8))
    {
      double result = (*(uint64_t (**)(uint64_t))(*(void *)result + 16))(result);
      if (result)
      {
        *(unsigned char *)(v1 + 8) = 1;
      }
      else if (!*(unsigned char *)(v1 + 8))
      {
        double v2 = 2.22507386e-308;
        goto LABEL_7;
      }
    }
    double v2 = *(double *)(v1 + 64) + 30.0;
LABEL_7:
    *(double *)(v1 + 72) = v2;
  }
  return result;
}

void sub_1006C1B94(uint64_t a1, uint64_t *a2)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C4808);
  }
  unint64_t v3 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = *a2;
    *(_DWORD *)uint64_t buf = 134217984;
    uint64_t v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Tier2Smoother, deescalating from distance accumulation, distance, %f", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    unint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWorkoutPredictorTier2Smoother::doGpsDistanceDeescalation(const EGpsDistanceDeescalation *)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
}

uint64_t sub_1006C1D48(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10247CD60, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10247CD60))
  {
    LODWORD(v3) = 0;
    sub_1004F7D80(qword_10247CD48, &v3, 1uLL);
    __cxa_atexit((void (*)(void *))sub_1004F7E04, qword_10247CD48, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10247CD60);
  }
  __int16 v12 = 0;
  long long v3 = xmmword_101D1E250;
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  memset(v11, 0, sizeof(v11));
  long long v13 = xmmword_101D1E250;
  uint64_t v14 = 0;
  int v15 = 0;
  uint64_t v16 = 0;
  v17[0] = 0;
  *(void *)((char *)v17 + 5) = 0;
  *(void *)((char *)&v17[1] + 6) = 0;
  char v18 = 0;
  memset(&v17[3], 0, 24);
  long long v19 = xmmword_101D1E250;
  uint64_t v20 = 0;
  int v21 = 0;
  unint64_t v22 = 0xFFEFFFFFFFFFFFFFLL;
  int v33 = 0;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  int v28 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  memset(v32, 0, sizeof(v32));
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  unint64_t v36 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v37 = 0;
  int v38 = 0;
  uint64_t v44 = 0;
  __int16 v45 = 0;
  int v50 = 0;
  int v43 = 0;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v47 = 0u;
  long long v46 = 0u;
  char v48 = 0;
  memset(v49, 0, sizeof(v49));
  unint64_t v51 = 0xFFEFFFFFFFFFFFFFLL;
  long long v70 = 0u;
  long long v69 = 0u;
  long long v68 = 0u;
  long long v67 = 0u;
  long long v66 = 0u;
  long long v65 = 0u;
  long long v64 = 0u;
  long long v63 = 0u;
  long long v62 = 0u;
  long long v61 = 0u;
  long long v60 = 0u;
  long long v59 = 0u;
  long long v58 = 0u;
  long long v57 = 0u;
  long long v56 = 0u;
  long long v55 = 0u;
  long long v54 = 0u;
  long long v53 = 0u;
  long long v52 = 0u;
  uint64_t v71 = 0;
  unint64_t v72 = 0xFFEFFFFFFFFFFFFFLL;
  long long v73 = 0u;
  long long v74 = 0u;
  long long v75 = 0u;
  long long v76 = 0u;
  unint64_t v77 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v78 = 0;
  int v79 = 0;
  uint64_t v80 = 0;
  char v81 = 0;
  unint64_t v82 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v84 = 0;
  uint64_t v83 = 0;
  uint64_t v85 = 0x80000000800000;
  uint64_t v87 = 0;
  uint64_t v86 = 0;
  long long v88 = xmmword_101D1E260;
  uint64_t v89 = 0x80000000800000;
  long long v90 = 0u;
  long long v91 = 0u;
  uint64_t v92 = 0;
  unint64_t v93 = 0xFFEFFFFFFFFFFFFFLL;
  long long v94 = 0u;
  long long v95 = 0u;
  long long v96 = 0u;
  long long v97 = 0u;
  long long v98 = 0u;
  long long v99 = 0u;
  int v100 = 0;
  unint64_t v101 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v102 = 0;
  int v103 = 0;
  unint64_t v104 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v105 = 7;
  unint64_t v106 = 0xFFEFFFFFFFFFFFFFLL;
  char v107 = 0;
  uint64_t v109 = 0;
  uint64_t v108 = 0;
  uint64_t v110 = 0;
  uint64_t result = sub_100174478(*(double **)(a1 + 8432), qword_10247CD48, (uint64_t)&v3);
  if (*(double *)&v4 != 0.0) {
    *(void *)(a1 + 2736) = v4;
  }
  return result;
}

void sub_1006C2014(_Unwind_Exception *a1)
{
}

BOOL sub_1006C2034(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 2148) == *(unsigned __int16 *)(a1 + 2146)
    && *(_DWORD *)(a1 + 28) == *(unsigned __int16 *)(a1 + 26))
  {
    if (*(void *)sub_1006C2398((unsigned __int16 *)(a1 + 2144), 0x13uLL))
    {
      BOOL v2 = 0;
    }
    else
    {
      uint64_t v4 = 19;
      do
      {
        unint64_t v5 = v4;
        if (v4 == 23) {
          break;
        }
        ++v4;
      }
      while (!*(void *)sub_1006C2398((unsigned __int16 *)(a1 + 2144), v5 + 1));
      BOOL v2 = v5 > 0x16;
    }
    if (*(_DWORD *)sub_1006C2594((unsigned __int16 *)(a1 + 24), 0x13uLL) == 0x200000)
    {
      BOOL v6 = 0;
    }
    else
    {
      BOOL v6 = 0;
      unint64_t v13 = 20;
      do
      {
        if (*(_DWORD *)sub_1006C2594((unsigned __int16 *)(a1 + 24), v13 - 1) == 16) {
          break;
        }
        if (*(_DWORD *)sub_1006C2594((unsigned __int16 *)(a1 + 24), v13 - 1) == 64) {
          break;
        }
        BOOL v6 = v13 - 1 > 0x16;
        if (v13 == 24) {
          break;
        }
        uint64_t v14 = (_DWORD *)sub_1006C2594((unsigned __int16 *)(a1 + 24), v13++);
      }
      while (*v14 != 0x200000);
    }
    BOOL v7 = 0;
    for (unint64_t i = 19; i != 24; ++i)
    {
      long long v9 = (void *)sub_1006C2398((unsigned __int16 *)(a1 + 2144), i);
      if ((*(unsigned char *)(a1 + 16) - 1) > 7u) {
        uint64_t v10 = 25;
      }
      else {
        uint64_t v10 = qword_101D2A3D8[(char)(*(unsigned char *)(a1 + 16) - 1)];
      }
      if (*v9 == v10) {
        break;
      }
      BOOL v7 = i > 0x16;
    }
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    BOOL v3 = !v2 && !v6 && !v7;
    uint64_t v11 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 67109632;
      BOOL v17 = v2;
      __int16 v18 = 1024;
      int v19 = v6;
      __int16 v20 = 1024;
      int v21 = v7;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Tier2Smoother,WorkoutPauseFlags,flagLastEpochsUnknown,%d,flagNoPatternInTier1,%d,flagNoCurrentStateInLastEpochs,%d", buf, 0x14u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C4808);
      }
      int v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLWorkoutClassifier_Type::Confidence CLWorkoutPredictorTier2Smoother::getWorkoutConfidenceForPatternedMotion() const", "%s\n", v15);
      if (v15 != (char *)buf) {
        free(v15);
      }
    }
  }
  else
  {
    return 0;
  }
  return v3;
}

uint64_t sub_1006C2398(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C49C8);
    }
    BOOL v7 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v11 = a2;
      __int16 v12 = 1024;
      int v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 233,i,%zu,capacity,%u.", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C49C8);
      }
      long long v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "const T &CMQueue<CMWorkoutType>::operator[](const size_t) const [T = CMWorkoutType]", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
  }
  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0;
  }
  return (uint64_t)&a1[4 * (v4 - v5) + 4];
}

uint64_t sub_1006C2594(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C49C8);
    }
    BOOL v7 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v11 = a2;
      __int16 v12 = 1024;
      int v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 233,i,%zu,capacity,%u.", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C49C8);
      }
      long long v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "const T &CMQueue<CMMotionContext::MotionState>::operator[](const size_t) const [T = CMMotionContext::MotionState]", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
  }
  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0;
  }
  return (uint64_t)&a1[44 * (v4 - v5) + 4];
}

uint64_t sub_1006C2794(uint64_t a1)
{
  BOOL v2 = sub_1006C2034(a1);
  if (*(unsigned char *)(a1 + 8440)) {
    LODWORD(result) = 1;
  }
  else {
    LODWORD(result) = sub_1006C1184(a1, 7);
  }
  if (v2) {
    return result;
  }
  else {
    return 0;
  }
}

uint64_t sub_1006C27E4(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 2348) != *(unsigned __int16 *)(a1 + 2346)) {
    return 0;
  }
  uint64_t v1 = (unsigned __int16 *)(a1 + 2344);
  unint64_t v2 = 19;
  while (*(_DWORD *)sub_1006C2848(v1, v2) != 6)
  {
    if (++v2 == 24) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1006C2848(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C49C8);
    }
    BOOL v7 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v11 = a2;
      __int16 v12 = 1024;
      int v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 233,i,%zu,capacity,%u.", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C49C8);
      }
      long long v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "const T &CMQueue<CLWorkoutPredictorTier2Smoother::CyclingDescalationEntry>::operator[](const size_t) const [T = CLWorkoutPredictorTier2Smoother::CyclingDescalationEntry]", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
  }
  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0;
  }
  return (uint64_t)&a1[8 * (v4 - v5) + 4];
}

void sub_1006C2A44(id a1)
{
  qword_1024191C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

void sub_1006C2A78()
{
}

__n128 sub_1006C2A8C(uint64_t a1)
{
  unint64_t v2 = (char *)operator new(0x28uLL);
  *(void *)unint64_t v2 = off_1022C4838;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_1006C2AE0(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022C4838;
  __n128 result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

double sub_1006C2B18(uint64_t a1, double *a2)
{
  double result = *a2;
  if (*a2 >= **(double **)(a1 + 8) && result <= **(double **)(a1 + 16))
  {
    BOOL v3 = *(double **)(a1 + 24);
    unint64_t v4 = *(void **)(a1 + 32);
    double result = a2[1] + *v3;
    *BOOL v3 = result;
    ++*v4;
  }
  return result;
}

uint64_t sub_1006C2B60(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006C2BA0()
{
}

BOOL sub_1006C2BAC(uint64_t a1)
{
  BOOL v3 = sub_1006C0584(a1);
  if (v3)
  {
    uint64_t v4 = v2;
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    unint64_t v5 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v6 = *(unsigned __int16 *)(a1 + 2144) + (unint64_t)*(unsigned __int16 *)(a1 + 2146) - 1;
      unint64_t v7 = *(unsigned int *)(a1 + 2148);
      if (v6 < v7) {
        unint64_t v7 = 0;
      }
      uint64_t v8 = *(void *)(a1 + 2144 + 8 * (v6 - v7) + 8);
      *(_DWORD *)uint64_t buf = 134218240;
      uint64_t v12 = v8;
      __int16 v13 = 2048;
      uint64_t v14 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Tier2Smoother, prevent escalation from distance accumulation, workout, %lu, distance, %f", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C4808);
      }
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWorkoutPredictorTier2Smoother::isMachineWorkoutStationary(const T *) const [T = CLWorkoutPredictorTier2Smoother::ERowDetected]", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
  return !v3;
}

BOOL sub_1006C2DE8(uint64_t a1)
{
  BOOL v3 = sub_1006C0584(a1);
  if (v3)
  {
    uint64_t v4 = v2;
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    unint64_t v5 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v6 = *(unsigned __int16 *)(a1 + 2144) + (unint64_t)*(unsigned __int16 *)(a1 + 2146) - 1;
      unint64_t v7 = *(unsigned int *)(a1 + 2148);
      if (v6 < v7) {
        unint64_t v7 = 0;
      }
      uint64_t v8 = *(void *)(a1 + 2144 + 8 * (v6 - v7) + 8);
      *(_DWORD *)uint64_t buf = 134218240;
      uint64_t v12 = v8;
      __int16 v13 = 2048;
      uint64_t v14 = v4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Tier2Smoother, prevent escalation from distance accumulation, workout, %lu, distance, %f", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022C4808);
      }
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWorkoutPredictorTier2Smoother::isMachineWorkoutStationary(const T *) const [T = CLWorkoutPredictorTier2Smoother::EEllipticalDetected]", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
  return !v3;
}

uint64_t sub_1006C3024(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241D450, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241D450))
  {
    LODWORD(v3) = 0;
    sub_1004F7D80(qword_10241D438, &v3, 1uLL);
    __cxa_atexit((void (*)(void *))sub_1004F7E04, qword_10241D438, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241D450);
  }
  __int16 v12 = 0;
  long long v3 = xmmword_101D1E250;
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  memset(v11, 0, sizeof(v11));
  long long v13 = xmmword_101D1E250;
  uint64_t v14 = 0;
  int v15 = 0;
  uint64_t v16 = 0;
  v17[0] = 0;
  *(void *)((char *)v17 + 5) = 0;
  *(void *)((char *)&v17[1] + 6) = 0;
  char v18 = 0;
  memset(&v17[3], 0, 24);
  long long v19 = xmmword_101D1E250;
  uint64_t v20 = 0;
  int v21 = 0;
  unint64_t v22 = 0xFFEFFFFFFFFFFFFFLL;
  int v33 = 0;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  int v28 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  memset(v32, 0, sizeof(v32));
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  unint64_t v36 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v37 = 0;
  int v38 = 0;
  uint64_t v44 = 0;
  __int16 v45 = 0;
  int v50 = 0;
  int v43 = 0;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v47 = 0u;
  long long v46 = 0u;
  char v48 = 0;
  memset(v49, 0, sizeof(v49));
  unint64_t v51 = 0xFFEFFFFFFFFFFFFFLL;
  long long v70 = 0u;
  long long v69 = 0u;
  long long v68 = 0u;
  long long v67 = 0u;
  long long v66 = 0u;
  long long v65 = 0u;
  long long v64 = 0u;
  long long v63 = 0u;
  long long v62 = 0u;
  long long v61 = 0u;
  long long v60 = 0u;
  long long v59 = 0u;
  long long v58 = 0u;
  long long v57 = 0u;
  long long v56 = 0u;
  long long v55 = 0u;
  long long v54 = 0u;
  long long v53 = 0u;
  long long v52 = 0u;
  uint64_t v71 = 0;
  unint64_t v72 = 0xFFEFFFFFFFFFFFFFLL;
  long long v73 = 0u;
  long long v74 = 0u;
  long long v75 = 0u;
  long long v76 = 0u;
  unint64_t v77 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v78 = 0;
  int v79 = 0;
  uint64_t v80 = 0;
  char v81 = 0;
  unint64_t v82 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v84 = 0;
  uint64_t v83 = 0;
  uint64_t v85 = 0x80000000800000;
  uint64_t v87 = 0;
  uint64_t v86 = 0;
  long long v88 = xmmword_101D1E260;
  uint64_t v89 = 0x80000000800000;
  long long v90 = 0u;
  long long v91 = 0u;
  uint64_t v92 = 0;
  unint64_t v93 = 0xFFEFFFFFFFFFFFFFLL;
  long long v94 = 0u;
  long long v95 = 0u;
  long long v96 = 0u;
  long long v97 = 0u;
  long long v98 = 0u;
  long long v99 = 0u;
  int v100 = 0;
  unint64_t v101 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v102 = 0;
  int v103 = 0;
  unint64_t v104 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v105 = 7;
  unint64_t v106 = 0xFFEFFFFFFFFFFFFFLL;
  char v107 = 0;
  uint64_t v109 = 0;
  uint64_t v108 = 0;
  uint64_t v110 = 0;
  sub_100174478(*(double **)(a1 + 8432), qword_10241D438, (uint64_t)&v3);
  if (*(double *)&v4 != 0.0) {
    *(void *)(a1 + 2736) = v4;
  }
  return sub_1006C3320(a1);
}

void sub_1006C3300(_Unwind_Exception *a1)
{
}

uint64_t sub_1006C3320(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C4808);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Tier2Smoother, resetting pedestrian stop detector FSM", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    long long v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWorkoutPredictorTier2Smoother::resetPedestrianStopDetector(const T *) [T = CLWorkoutPredictorTier2Smoother::EWalkEscalation]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  return sub_100D44474(a1 + 2760, 2u);
}

uint64_t sub_1006C34C0(uint64_t a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241D470, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241D470))
  {
    LODWORD(v3) = 0;
    sub_1004F7D80(qword_10241D458, &v3, 1uLL);
    __cxa_atexit((void (*)(void *))sub_1004F7E04, qword_10241D458, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241D470);
  }
  __int16 v12 = 0;
  long long v3 = xmmword_101D1E250;
  long long v4 = 0u;
  long long v5 = 0u;
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  memset(v11, 0, sizeof(v11));
  long long v13 = xmmword_101D1E250;
  uint64_t v14 = 0;
  int v15 = 0;
  uint64_t v16 = 0;
  v17[0] = 0;
  *(void *)((char *)v17 + 5) = 0;
  *(void *)((char *)&v17[1] + 6) = 0;
  char v18 = 0;
  memset(&v17[3], 0, 24);
  long long v19 = xmmword_101D1E250;
  uint64_t v20 = 0;
  int v21 = 0;
  unint64_t v22 = 0xFFEFFFFFFFFFFFFFLL;
  int v33 = 0;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  int v28 = 0;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  memset(v32, 0, sizeof(v32));
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  unint64_t v36 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v37 = 0;
  int v38 = 0;
  uint64_t v44 = 0;
  __int16 v45 = 0;
  int v50 = 0;
  int v43 = 0;
  long long v41 = 0u;
  long long v42 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  long long v47 = 0u;
  long long v46 = 0u;
  char v48 = 0;
  memset(v49, 0, sizeof(v49));
  unint64_t v51 = 0xFFEFFFFFFFFFFFFFLL;
  long long v70 = 0u;
  long long v69 = 0u;
  long long v68 = 0u;
  long long v67 = 0u;
  long long v66 = 0u;
  long long v65 = 0u;
  long long v64 = 0u;
  long long v63 = 0u;
  long long v62 = 0u;
  long long v61 = 0u;
  long long v60 = 0u;
  long long v59 = 0u;
  long long v58 = 0u;
  long long v57 = 0u;
  long long v56 = 0u;
  long long v55 = 0u;
  long long v54 = 0u;
  long long v53 = 0u;
  long long v52 = 0u;
  uint64_t v71 = 0;
  unint64_t v72 = 0xFFEFFFFFFFFFFFFFLL;
  long long v73 = 0u;
  long long v74 = 0u;
  long long v75 = 0u;
  long long v76 = 0u;
  unint64_t v77 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v78 = 0;
  int v79 = 0;
  uint64_t v80 = 0;
  char v81 = 0;
  unint64_t v82 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v84 = 0;
  uint64_t v83 = 0;
  uint64_t v85 = 0x80000000800000;
  uint64_t v87 = 0;
  uint64_t v86 = 0;
  long long v88 = xmmword_101D1E260;
  uint64_t v89 = 0x80000000800000;
  long long v90 = 0u;
  long long v91 = 0u;
  uint64_t v92 = 0;
  unint64_t v93 = 0xFFEFFFFFFFFFFFFFLL;
  long long v94 = 0u;
  long long v95 = 0u;
  long long v96 = 0u;
  long long v97 = 0u;
  long long v98 = 0u;
  long long v99 = 0u;
  int v100 = 0;
  unint64_t v101 = 0xFFEFFFFFFFFFFFFFLL;
  __int16 v102 = 0;
  int v103 = 0;
  unint64_t v104 = 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v105 = 7;
  unint64_t v106 = 0xFFEFFFFFFFFFFFFFLL;
  char v107 = 0;
  uint64_t v109 = 0;
  uint64_t v108 = 0;
  uint64_t v110 = 0;
  sub_100174478(*(double **)(a1 + 8432), qword_10241D458, (uint64_t)&v3);
  if (*(double *)&v4 != 0.0) {
    *(void *)(a1 + 2736) = v4;
  }
  return sub_1006C37BC(a1);
}

void sub_1006C379C(_Unwind_Exception *a1)
{
}

uint64_t sub_1006C37BC(uint64_t a1)
{
  if (qword_1024191C0 != -1) {
    dispatch_once(&qword_1024191C0, &stru_1022C4808);
  }
  uint64_t v2 = qword_1024191C8;
  if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Tier2Smoother, resetting pedestrian stop detector FSM", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022C4808);
    }
    long long v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWorkoutPredictorTier2Smoother::resetPedestrianStopDetector(const T *) [T = CLWorkoutPredictorTier2Smoother::EAltWalkEscalation]", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  return sub_100D44474(a1 + 2760, 2u);
}

uint64_t sub_1006C395C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 24);
  if (v6 != *(void *)(a2 + 24))
  {
    long long v9 = *(void **)(a1 + 16);
    do
    {
      if (v6 == *v9) {
        uint64_t v6 = *(v9 - 1) + 4096;
      }
      uint64_t v10 = *(void *)(a3 + 24);
      if (!v10) {
        sub_10015E48C();
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)v10 + 48))(v10, v6 - 16);
      long long v9 = *(void **)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      if (v11 == *v9)
      {
        *(void *)(a1 + 16) = v9 - 1;
        uint64_t v11 = *--v9 + 4096;
      }
      uint64_t v6 = v11 - 16;
      *(void *)(a1 + 24) = v6;
    }
    while (v6 != *(void *)(a2 + 24));
  }

  return sub_1006C3A3C(a4, a3);
}

uint64_t sub_1006C3A3C(uint64_t a1, uint64_t a2)
{
  long long v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    long long v3 = (void *)(a1 + 24);
  }
  *long long v3 = 0;
  return a1;
}

void sub_1006C3AC0()
{
}

__n128 sub_1006C3AD4(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x28uLL);
  *(void *)uint64_t v2 = off_1022C48B8;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_1006C3B28(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022C48B8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

float sub_1006C3B60(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a2;
  if (*(double *)a2 >= *(double *)(a1 + 8) && v2 <= *(double *)(a1 + 16))
  {
    uint64_t v4 = *(float **)(a1 + 24);
    long long v5 = *(void **)(a1 + 32);
    *(float *)&double v2 = *(float *)(a2 + 12) + *v4;
    *uint64_t v4 = *(float *)&v2;
    ++*v5;
  }
  return *(float *)&v2;
}

uint64_t sub_1006C3B98(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006C3BD8()
{
}

uint64_t sub_1006C3BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 24);
  if (v6 != *(void *)(a2 + 24))
  {
    long long v9 = *(void **)(a1 + 16);
    do
    {
      if (v6 == *v9) {
        uint64_t v6 = *(v9 - 1) + 4080;
      }
      uint64_t v10 = *(void *)(a3 + 24);
      if (!v10) {
        sub_10015E48C();
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)v10 + 48))(v10, v6 - 24);
      long long v9 = *(void **)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      if (v11 == *v9)
      {
        *(void *)(a1 + 16) = v9 - 1;
        uint64_t v11 = *--v9 + 4080;
      }
      uint64_t v6 = v11 - 24;
      *(void *)(a1 + 24) = v6;
    }
    while (v6 != *(void *)(a2 + 24));
  }

  return sub_1006C3CC4(a4, a3);
}

uint64_t sub_1006C3CC4(uint64_t a1, uint64_t a2)
{
  long long v3 = (void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(*(void *)*v3 + 24))(*v3, a1);
      return a1;
    }
    *(void *)(a1 + 24) = v4;
  }
  else
  {
    long long v3 = (void *)(a1 + 24);
  }
  *long long v3 = 0;
  return a1;
}

void sub_1006C3D48()
{
}

__n128 sub_1006C3D5C(uint64_t a1)
{
  double v2 = (char *)operator new(0x20uLL);
  *(void *)double v2 = off_1022C4948;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_1006C3DB0(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022C4948;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_1006C3DE8(uint64_t result, uint64_t a2)
{
  double v2 = *(double *)(a2 + 8);
  if (v2 >= *(double *)(result + 8) && v2 <= *(double *)(result + 16)) {
    ++**(_DWORD **)(result + 24);
  }
  return result;
}

uint64_t sub_1006C3E10(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1006C3E50()
{
}

void sub_1006C3E5C(id a1)
{
  qword_102419638 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_1006C41C8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  operator delete();
}

void sub_1006C6818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  if (v35) {
    sub_1000DB0A0(v35);
  }
  sub_1000DAF68(&a29);
  sub_1000DAF68(&a35);
  _Unwind_Resume(a1);
}

void sub_1006C9408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,void *a40,uint64_t a41,char a42,void *a43,uint64_t a44,void *__p,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  sub_1000F5BB0((uint64_t)&a39, a40);
  sub_1000F5BB0((uint64_t)&a42, a43);
  if (v61) {
    sub_1000DB0A0(v61);
  }
  if (__p)
  {
    a46 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_1000DAF68(&a49);
  sub_1000DAF68(&a55);
  sub_1000DAF68(&a61);
  _Unwind_Resume(a1);
}

void sub_1006CA884(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  if (v3) {
    sub_1000DB0A0(v3);
  }
  sub_1000DAF68((uint64_t *)va);
  _Unwind_Resume(a1);
}

NSDictionary *sub_1006CB0E4(double *a1)
{
  v3[0] = @"visitDuration";
  v4[0] = +[NSNumber numberWithDouble:a1[4]];
  v3[1] = @"arrivalUncertainty";
  v4[1] = +[NSNumber numberWithDouble:a1[5]];
  uint64_t v3[2] = @"exitUncertainty";
  v4[2] = +[NSNumber numberWithDouble:a1[6]];
  void v3[3] = @"timeDiffBtwArrivalAndLastRebase";
  void v4[3] = +[NSNumber numberWithDouble:a1[7]];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:4];
}

void sub_1006CC170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,void *a63)
{
  if (a76 < 0) {
    operator delete(__p);
  }
  if (a74 < 0) {
    operator delete(a73);
  }
  if (a72 < 0) {
    operator delete(a69);
  }
  if (a68 < 0) {
    operator delete(a63);
  }
  if (a62 < 0) {
    operator delete(a57);
  }
  if (a56 < 0) {
    operator delete(a51);
  }
  if (a50 < 0) {
    operator delete(a45);
  }
  if (SLOBYTE(STACK[0x20F]) < 0) {
    operator delete(a77);
  }
  if (SLOBYTE(STACK[0x23F]) < 0) {
    operator delete((void *)STACK[0x228]);
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete((void *)STACK[0x258]);
  }
  if (SLOBYTE(STACK[0x29F]) < 0) {
    operator delete((void *)STACK[0x288]);
  }
  if (SLOBYTE(STACK[0x2CF]) < 0) {
    operator delete((void *)STACK[0x2B8]);
  }
  if (*(char *)(v77 - 225) < 0) {
    operator delete(*(void **)(v77 - 248));
  }
  if (*(char *)(v77 - 177) < 0) {
    operator delete(*(void **)(v77 - 200));
  }
  if (*(char *)(v77 - 129) < 0) {
    operator delete(*(void **)(v77 - 152));
  }
  _Unwind_Resume(a1);
}

id sub_1006CC3A8(uint64_t a1)
{
  id v2 = +[NSMutableDictionary dictionary];
  v14[0] = @"inVisit";
  v15[0] = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 48)];
  v14[1] = @"demAvailableInTrack";
  v15[1] = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 49)];
  int v14[2] = @"rebaseSource";
  v15[2] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 52)];
  void v14[3] = @"firstRebaseSinceLocationdStart";
  v15[3] = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 57)];
  v14[4] = @"forcedGPSRecently";
  void v15[4] = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 50)];
  void v14[5] = @"altitudeError_binned";
  long long v3 = (void *)(a1 + 64);
  if (*(char *)(a1 + 87) < 0) {
    long long v3 = (void *)*v3;
  }
  v15[5] = +[NSString stringWithUTF8String:v3];
  v14[6] = @"timeToFirstRebase_binned";
  uint64_t v4 = (void *)(a1 + 88);
  if (*(char *)(a1 + 111) < 0) {
    uint64_t v4 = (void *)*v4;
  }
  v15[6] = +[NSString stringWithUTF8String:v4];
  void v14[7] = @"referenceUncertainty_binned";
  long long v5 = (void *)(a1 + 112);
  if (*(char *)(a1 + 135) < 0) {
    long long v5 = (void *)*v5;
  }
  v15[7] = +[NSString stringWithUTF8String:v5];
  unsigned char v14[8] = @"uncertainty_binned";
  uint64_t v6 = (void *)(a1 + 136);
  if (*(char *)(a1 + 159) < 0) {
    uint64_t v6 = (void *)*v6;
  }
  v15[8] = +[NSString stringWithUTF8String:v6];
  v14[9] = @"timeSinceVisitEntry_binned";
  long long v7 = (void *)(a1 + 160);
  if (*(char *)(a1 + 183) < 0) {
    long long v7 = (void *)*v7;
  }
  v15[9] = +[NSString stringWithUTF8String:v7];
  v14[10] = @"correction_binned";
  long long v8 = (void *)(a1 + 208);
  if (*(char *)(a1 + 231) < 0) {
    long long v8 = (void *)*v8;
  }
  _OWORD v15[10] = +[NSString stringWithUTF8String:v8];
  v14[11] = @"distanceSinceLastRebase_binned";
  long long v9 = (void *)(a1 + 232);
  if (*(char *)(a1 + 255) < 0) {
    long long v9 = (void *)*v9;
  }
  v15[11] = +[NSString stringWithUTF8String:v9];
  v14[12] = @"timeSinceLastRebase_binned";
  uint64_t v10 = (void *)(a1 + 184);
  if (*(char *)(a1 + 207) < 0) {
    uint64_t v10 = (void *)*v10;
  }
  v15[12] = +[NSString stringWithUTF8String:v10];
  [v2 setDictionary:+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v15, v14, 13)];
  LODWORD(v11) = *(_DWORD *)(a1 + 40);
  if (*(float *)&v11 != 3.4028e38 && *(float *)(a1 + 44) != 3.4028e38)
  {
    *(float *)&double v11 = (float)(int)(float)(*(float *)&v11 * 100.0) / 100.0;
    [v2 setObject:+[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v11) forKeyedSubscript:@"latitude"];
    *(float *)&double v12 = (float)(int)(float)(*(float *)(a1 + 44) * 100.0) / 100.0;
    [v2 setObject:+[NSNumber numberWithFloat:](NSNumber, "numberWithFloat:", v12) forKeyedSubscript:@"longitude"];
  }
  if ([*(id *)(a1 + 32) isIHAAuthorized]) {
    [v2 setObject:+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", *(unsigned __int8 *)(a1 + 56)) forKeyedSubscript:@"inOutdoorWorkout"];
  }
  return v2;
}

uint64_t sub_1006CC6D4(uint64_t a1, uint64_t a2)
{
  return sub_1006CD5E8(a1 + 40, (long long *)(a2 + 40));
}

uint64_t sub_1006CC6E0(uint64_t a1)
{
  return sub_1006CD868(a1 + 40);
}

void sub_1006CCB1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (SLOBYTE(STACK[0x247]) < 0) {
    operator delete((void *)STACK[0x230]);
  }
  if (SLOBYTE(STACK[0x22F]) < 0) {
    operator delete((void *)STACK[0x218]);
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete((void *)STACK[0x200]);
  }
  if (a74 < 0) {
    operator delete(a73);
  }
  if (a72 < 0) {
    operator delete(a70);
  }
  if (a69 < 0) {
    operator delete(a64);
  }
  if (*(char *)(v74 - 97) < 0) {
    operator delete(*(void **)(v74 - 120));
  }
  if (*(char *)(v74 - 49) < 0) {
    operator delete(*(void **)(v74 - 72));
  }
  _Unwind_Resume(a1);
}

void sub_1006CCC9C()
{
}

void sub_1006CCCA4()
{
  uint64_t v1 = *(void *)(v0 - 144);
  if (v1)
  {
    *(void *)(v0 - 136) = v1;
    JUMPOUT(0x1006CCC80);
  }
  JUMPOUT(0x1006CCC84);
}

void sub_1006CCCB8()
{
}

void sub_1006CCCC0()
{
  uint64_t v1 = *(void *)(v0 - 96);
  if (v1)
  {
    *(void *)(v0 - 88) = v1;
    JUMPOUT(0x1006CCC90);
  }
  JUMPOUT(0x1006CCC94);
}

NSDictionary *sub_1006CCCD4(uint64_t a1)
{
  v10[0] = @"duration_binned";
  id v2 = (void *)(a1 + 88);
  if (*(char *)(a1 + 111) < 0) {
    id v2 = (void *)*v2;
  }
  v11[0] = +[NSString stringWithUTF8String:v2];
  v10[1] = @"uncertaintyAtEntry_binned";
  long long v3 = (void *)(a1 + 40);
  if (*(char *)(a1 + 63) < 0) {
    long long v3 = (void *)*v3;
  }
  v11[1] = +[NSString stringWithUTF8String:v3];
  _DWORD v10[2] = @"uncertaintyAtRebase_binned";
  uint64_t v4 = (void *)(a1 + 64);
  if (*(char *)(a1 + 87) < 0) {
    uint64_t v4 = (void *)*v4;
  }
  int32x4_t v11[2] = +[NSString stringWithUTF8String:v4];
  void v10[3] = @"timeFromEnterToRebase_binned";
  long long v5 = (void *)(a1 + 112);
  if (*(char *)(a1 + 135) < 0) {
    long long v5 = (void *)*v5;
  }
  _OWORD v11[3] = +[NSString stringWithUTF8String:v5];
  void v10[4] = @"correctionAtRebase_binned";
  uint64_t v6 = (void *)(a1 + 184);
  if (*(char *)(a1 + 207) < 0) {
    uint64_t v6 = (void *)*v6;
  }
  void v11[4] = +[NSString stringWithUTF8String:v6];
  v10[5] = @"altitudeErrorAtRebase_binned";
  long long v7 = (void *)(a1 + 136);
  if (*(char *)(a1 + 159) < 0) {
    long long v7 = (void *)*v7;
  }
  v11[5] = +[NSString stringWithUTF8String:v7];
  void v10[6] = @"referenceUncertaintyAtRebase_binned";
  long long v8 = (void *)(a1 + 160);
  if (*(char *)(a1 + 183) < 0) {
    long long v8 = (void *)*v8;
  }
  void v11[6] = +[NSString stringWithUTF8String:v8];
  v10[7] = @"rebaseSource";
  v11[7] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 32)];
  return +[NSDictionary dictionaryWithObjects:v11 forKeys:v10 count:8];
}

uint64_t sub_1006CCE7C(uint64_t a1, uint64_t a2)
{
  return sub_1006CD90C(a1 + 32, a2 + 32);
}

uint64_t sub_1006CCE88(uint64_t a1)
{
  return sub_1006CDB34(a1 + 32);
}

uint64_t sub_1006CCE90(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
  *(_OWORD *)a1 = v4;
  uint64_t v5 = a1 + 24;
  uint64_t v6 = (long long *)((char *)a2 + 24);
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)v5);
  }
  long long v7 = *v6;
  *(void *)(v5 + 16) = *((void *)v6 + 2);
  *(_OWORD *)uint64_t v5 = v7;
  *((unsigned char *)a2 + 47) = 0;
  *((unsigned char *)a2 + 24) = 0;
  long long v8 = (void **)(a1 + 48);
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*v8);
  }
  long long v9 = a2[3];
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  *(_OWORD *)long long v8 = v9;
  *((unsigned char *)a2 + 71) = 0;
  *((unsigned char *)a2 + 48) = 0;
  uint64_t v10 = (void **)(a1 + 72);
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*v10);
  }
  long long v11 = *(long long *)((char *)a2 + 72);
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(_OWORD *)uint64_t v10 = v11;
  *((unsigned char *)a2 + 95) = 0;
  *((unsigned char *)a2 + 72) = 0;
  double v12 = (void **)(a1 + 96);
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*v12);
  }
  long long v13 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)double v12 = v13;
  *((unsigned char *)a2 + 119) = 0;
  *((unsigned char *)a2 + 96) = 0;
  uint64_t v14 = (void **)(a1 + 120);
  if (*(char *)(a1 + 143) < 0) {
    operator delete(*v14);
  }
  long long v15 = *(long long *)((char *)a2 + 120);
  *(void *)(a1 + 136) = *((void *)a2 + 17);
  *(_OWORD *)uint64_t v14 = v15;
  *((unsigned char *)a2 + 143) = 0;
  *((unsigned char *)a2 + 120) = 0;
  uint64_t v16 = (void **)(a1 + 144);
  if (*(char *)(a1 + 167) < 0) {
    operator delete(*v16);
  }
  long long v17 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)uint64_t v16 = v17;
  *((unsigned char *)a2 + 167) = 0;
  *((unsigned char *)a2 + 144) = 0;
  char v18 = (void **)(a1 + 168);
  if (*(char *)(a1 + 191) < 0) {
    operator delete(*v18);
  }
  long long v19 = *(long long *)((char *)a2 + 168);
  *(void *)(a1 + 184) = *((void *)a2 + 23);
  *(_OWORD *)char v18 = v19;
  *((unsigned char *)a2 + 191) = 0;
  *((unsigned char *)a2 + 168) = 0;
  uint64_t v20 = (void **)(a1 + 192);
  if (*(char *)(a1 + 215) < 0) {
    operator delete(*v20);
  }
  long long v21 = a2[12];
  *(void *)(a1 + 208) = *((void *)a2 + 26);
  *(_OWORD *)uint64_t v20 = v21;
  *((unsigned char *)a2 + 215) = 0;
  *((unsigned char *)a2 + 192) = 0;
  return a1;
}

void sub_1006CD5B8(id a1)
{
  qword_1024191E8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Altimeter");
}

uint64_t sub_1006CD5E8(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
  *(_OWORD *)a1 = v4;
  if (*((char *)a2 + 47) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 24), *((void **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v5 = *(long long *)((char *)a2 + 24);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(_OWORD *)(a1 + 24) = v5;
  }
  if (*((char *)a2 + 71) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 48), *((void **)a2 + 6), *((void *)a2 + 7));
  }
  else
  {
    long long v6 = a2[3];
    *(void *)(a1 + 64) = *((void *)a2 + 8);
    *(_OWORD *)(a1 + 48) = v6;
  }
  if (*((char *)a2 + 95) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 72), *((void **)a2 + 9), *((void *)a2 + 10));
  }
  else
  {
    long long v7 = *(long long *)((char *)a2 + 72);
    *(void *)(a1 + 88) = *((void *)a2 + 11);
    *(_OWORD *)(a1 + 72) = v7;
  }
  if (*((char *)a2 + 119) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 96), *((void **)a2 + 12), *((void *)a2 + 13));
  }
  else
  {
    long long v8 = a2[6];
    *(void *)(a1 + 112) = *((void *)a2 + 14);
    *(_OWORD *)(a1 + 96) = v8;
  }
  if (*((char *)a2 + 143) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 120), *((void **)a2 + 15), *((void *)a2 + 16));
  }
  else
  {
    long long v9 = *(long long *)((char *)a2 + 120);
    *(void *)(a1 + 136) = *((void *)a2 + 17);
    *(_OWORD *)(a1 + 120) = v9;
  }
  if (*((char *)a2 + 167) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 144), *((void **)a2 + 18), *((void *)a2 + 19));
  }
  else
  {
    long long v10 = a2[9];
    *(void *)(a1 + 160) = *((void *)a2 + 20);
    *(_OWORD *)(a1 + 144) = v10;
  }
  if (*((char *)a2 + 191) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 168), *((void **)a2 + 21), *((void *)a2 + 22));
  }
  else
  {
    long long v11 = *(long long *)((char *)a2 + 168);
    *(void *)(a1 + 184) = *((void *)a2 + 23);
    *(_OWORD *)(a1 + 168) = v11;
  }
  double v12 = (unsigned char *)(a1 + 192);
  if (*((char *)a2 + 215) < 0)
  {
    sub_1000DC48C(v12, *((void **)a2 + 24), *((void *)a2 + 25));
  }
  else
  {
    long long v13 = a2[12];
    *(void *)(a1 + 208) = *((void *)a2 + 26);
    *(_OWORD *)double v12 = v13;
  }
  return a1;
}

void sub_1006CD7BC(_Unwind_Exception *exception_object)
{
  if (v1[191] < 0) {
    operator delete(*v8);
  }
  if (v1[167] < 0) {
    operator delete(*v7);
  }
  if (v1[143] < 0) {
    operator delete(*v6);
  }
  if (v1[119] < 0) {
    operator delete(*v5);
  }
  if (v1[95] < 0) {
    operator delete(*v4);
  }
  if (v1[71] < 0) {
    operator delete(*v3);
  }
  if (v1[47] < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006CD868(uint64_t a1)
{
  if (*(char *)(a1 + 215) < 0) {
    operator delete(*(void **)(a1 + 192));
  }
  if (*(char *)(a1 + 191) < 0) {
    operator delete(*(void **)(a1 + 168));
  }
  if (*(char *)(a1 + 167) < 0) {
    operator delete(*(void **)(a1 + 144));
  }
  if (*(char *)(a1 + 143) < 0) {
    operator delete(*(void **)(a1 + 120));
  }
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  return a1;
}

uint64_t sub_1006CD90C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 8), *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }
  if (*(char *)(a2 + 55) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 32), *(void **)(a2 + 32), *(void *)(a2 + 40));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v5;
  }
  if (*(char *)(a2 + 79) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 56), *(void **)(a2 + 56), *(void *)(a2 + 64));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = v6;
  }
  if (*(char *)(a2 + 103) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 80), *(void **)(a2 + 80), *(void *)(a2 + 88));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = v7;
  }
  if (*(char *)(a2 + 127) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 104), *(void **)(a2 + 104), *(void *)(a2 + 112));
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = v8;
  }
  if (*(char *)(a2 + 151) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 128), *(void **)(a2 + 128), *(void *)(a2 + 136));
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 128);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = v9;
  }
  long long v10 = (unsigned char *)(a1 + 152);
  if (*(char *)(a2 + 175) < 0)
  {
    sub_1000DC48C(v10, *(void **)(a2 + 152), *(void *)(a2 + 160));
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 152);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(_OWORD *)long long v10 = v11;
  }
  return a1;
}

void sub_1006CDAA0(_Unwind_Exception *exception_object)
{
  if (v1[151] < 0) {
    operator delete(*v7);
  }
  if (v1[127] < 0) {
    operator delete(*v6);
  }
  if (v1[103] < 0) {
    operator delete(*v5);
  }
  if (v1[79] < 0) {
    operator delete(*v4);
  }
  if (v1[55] < 0) {
    operator delete(*v3);
  }
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006CDB34(uint64_t a1)
{
  if (*(char *)(a1 + 175) < 0) {
    operator delete(*(void **)(a1 + 152));
  }
  if (*(char *)(a1 + 151) < 0) {
    operator delete(*(void **)(a1 + 128));
  }
  if (*(char *)(a1 + 127) < 0) {
    operator delete(*(void **)(a1 + 104));
  }
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t sub_1006CDBC8(uint64_t a1)
{
  *(_DWORD *)(a1 + 7) = 0;
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 12) = -10;
  *(_WORD *)(a1 + 16) = 0;
  sub_100134750((void *)(a1 + 24), "NULL");
  sub_100134750((void *)(a1 + 48), "NULL");
  sub_100134750((void *)(a1 + 72), "NULL");
  sub_100134750((void *)(a1 + 96), "NULL");
  sub_100134750((void *)(a1 + 120), "NULL");
  sub_100134750((void *)(a1 + 144), "NULL");
  sub_100134750((void *)(a1 + 168), "NULL");
  sub_100134750((void *)(a1 + 192), "NULL");
  return a1;
}

void sub_1006CDCBC(_Unwind_Exception *exception_object)
{
  if (v1[191] < 0) {
    operator delete(*v8);
  }
  if (v1[167] < 0) {
    operator delete(*v7);
  }
  if (v1[143] < 0) {
    operator delete(*v6);
  }
  if (v1[119] < 0) {
    operator delete(*v5);
  }
  if (v1[95] < 0) {
    operator delete(*v4);
  }
  if (v1[71] < 0) {
    operator delete(*v3);
  }
  if (v1[47] < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006CDD68(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (*(char *)(a2 + 695) < 0) {
      operator delete(*(void **)(a2 + 672));
    }
    operator delete();
  }
}

uint64_t **sub_1006CDDC4(uint64_t **a1, int *a2, _DWORD *a3, uint64_t a4)
{
  long long v8 = a1 + 1;
  long long v7 = a1[1];
  if (v7)
  {
    int v9 = *a2;
    while (1)
    {
      while (1)
      {
        long long v10 = (uint64_t **)v7;
        int v11 = *((_DWORD *)v7 + 8);
        if (v9 >= v11) {
          break;
        }
        long long v7 = *v10;
        long long v8 = v10;
        if (!*v10) {
          goto LABEL_10;
        }
      }
      if (v11 >= v9) {
        break;
      }
      long long v7 = v10[1];
      if (!v7)
      {
        long long v8 = v10 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    long long v10 = a1 + 1;
LABEL_10:
    double v12 = (char *)operator new(0x50uLL);
    *((_DWORD *)v12 + 8) = *a3;
    long long v13 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)(v12 + 40) = *(_OWORD *)a4;
    *(_OWORD *)(v12 + 56) = v13;
    *((void *)v12 + 9) = *(void *)(a4 + 32);
    sub_1000EDF90(a1, (uint64_t)v10, v8, (uint64_t *)v12);
    return (uint64_t **)v12;
  }
  return v10;
}

uint64_t sub_1006CDE98()
{
  sub_100134750(qword_10247CDC0, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247CDC0, (void *)&_mh_execute_header);
  qword_10247CDD8 = 0x4039000000000000;
  qword_10247CDE8 = 0;
  unk_10247CDF0 = 0;
  qword_10247CDE0 = 0;
  uint64_t v0 = operator new(0x30uLL);
  qword_10247CDE8 = (uint64_t)(v0 + 3);
  unk_10247CDF0 = v0 + 3;
  _OWORD *v0 = xmmword_101D2A4F4;
  v0[1] = unk_101D2A504;
  v0[2] = xmmword_101D2A514;
  qword_10247CDE0 = (uint64_t)v0;
  __cxa_atexit((void (*)(void *))sub_1003B1838, &qword_10247CDE0, (void *)&_mh_execute_header);
  qword_10247CE00 = 0;
  unk_10247CE08 = 0;
  qword_10247CDF8 = 0;
  sub_10010F834(&qword_10247CDF8, (const void *)qword_10247CDE0, qword_10247CDE8, (qword_10247CDE8 - qword_10247CDE0) >> 2);
  __cxa_atexit((void (*)(void *))sub_1003B1838, &qword_10247CDF8, (void *)&_mh_execute_header);
  qword_10247CE18 = 0;
  unk_10247CE20 = 0;
  qword_10247CE10 = 0;
  uint64_t v1 = operator new(0x24uLL);
  qword_10247CE18 = (uint64_t)(v1 + 9);
  unk_10247CE20 = v1 + 9;
  v1[8] = 1150681088;
  *(_OWORD *)uint64_t v1 = xmmword_101D2A524;
  *((_OWORD *)v1 + 1) = unk_101D2A534;
  qword_10247CE10 = (uint64_t)v1;
  __cxa_atexit((void (*)(void *))sub_1003B1838, &qword_10247CE10, (void *)&_mh_execute_header);
  qword_10247CE30 = 0;
  unk_10247CE38 = 0;
  qword_10247CE28 = 0;
  id v2 = operator new(0x1CuLL);
  qword_10247CE30 = (uint64_t)v2 + 28;
  unk_10247CE38 = (char *)v2 + 28;
  *id v2 = xmmword_101D2A548;
  *(_OWORD *)((char *)v2 + 12) = *(long long *)((char *)&xmmword_101D2A548 + 12);
  qword_10247CE28 = (uint64_t)v2;
  __cxa_atexit((void (*)(void *))sub_1003B1838, &qword_10247CE28, (void *)&_mh_execute_header);
  qword_10247CE48 = 0;
  unk_10247CE50 = 0;
  qword_10247CE40 = 0;
  long long v3 = operator new(0x4CuLL);
  qword_10247CE48 = (uint64_t)v3 + 76;
  unk_10247CE50 = (char *)v3 + 76;
  uint64_t v3[2] = xmmword_101D2A584;
  void v3[3] = unk_101D2A594;
  *(_OWORD *)((char *)v3 + 60) = unk_101D2A5A0;
  *long long v3 = xmmword_101D2A564;
  v3[1] = unk_101D2A574;
  qword_10247CE40 = (uint64_t)v3;
  __cxa_atexit((void (*)(void *))sub_1003B1838, &qword_10247CE40, (void *)&_mh_execute_header);
  qword_10247CE60 = 0;
  unk_10247CE68 = 0;
  qword_10247CE58 = 0;
  long long v4 = operator new(0x38uLL);
  qword_10247CE60 = (uint64_t)v4 + 56;
  unk_10247CE68 = (char *)v4 + 56;
  *long long v4 = xmmword_101D2A5B0;
  v4[1] = unk_101D2A5C0;
  v4[2] = xmmword_101D2A5D0;
  *((void *)v4 + 6) = 0x48F4240048435000;
  qword_10247CE58 = (uint64_t)v4;
  __cxa_atexit((void (*)(void *))sub_1003B1838, &qword_10247CE58, (void *)&_mh_execute_header);
  qword_10247CE78 = 0;
  unk_10247CE80 = 0;
  qword_10247CE70 = 0;
  long long v5 = operator new(0x30uLL);
  qword_10247CE78 = (uint64_t)(v5 + 3);
  unk_10247CE80 = v5 + 3;
  *long long v5 = xmmword_101D2A5E8;
  v5[1] = unk_101D2A5F8;
  v5[2] = xmmword_101D2A608;
  qword_10247CE70 = (uint64_t)v5;

  return __cxa_atexit((void (*)(void *))sub_1003B1838, &qword_10247CE70, (void *)&_mh_execute_header);
}

uint64_t sub_1006CE12C(uint64_t a1, void *a2)
{
  long long v3 = sub_100B0505C(a1, a2);
  *long long v3 = off_1022C4AA0;
  v3[14] = 0;
  v3[15] = 0;
  sub_1009E3F54((uint64_t)(v3 + 16));
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 152) = 0xBFF0000000000000;
  *(void *)(a1 + 168) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  sub_1000C7F88(&__p);
  v7[0] = 0;
  int v4 = sub_1000D2988((uint64_t)__p, "CLTSPEnableDeviceMotionVDRNotifications", v7);
  if (v7[0]) {
    int v5 = v4;
  }
  else {
    int v5 = 0;
  }
  if (v9) {
    sub_1000DB0A0(v9);
  }
  if (v5) {
    operator new();
  }
  return a1;
}

void sub_1006CE640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  uint64_t v25 = *(void *)(v18 + 200);
  *(void *)(v18 + 200) = 0;
  if (v25) {
    (*(void (**)(uint64_t))(*(void *)v25 + 8))(v25);
  }
  uint64_t v26 = *(void *)(v18 + 192);
  *(void *)(v18 + 192) = 0;
  if (v26) {
    (*(void (**)(uint64_t))(*(void *)v26 + 8))(v26);
  }
  uint64_t v27 = *v23;
  uint64_t *v23 = 0;
  if (v27) {
    (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
  }
  sub_1006CEDB0(v21, 0);
  nullsub_41(v20, v28);
  sub_1006677A0(v19, 0);
  uint64_t v29 = *v22;
  uint64_t *v22 = 0;
  if (v29) {
    (*(void (**)(uint64_t))(*(void *)v29 + 8))(v29);
  }
  sub_100B05148(v18);
  _Unwind_Resume(a1);
}

void sub_1006CE7EC(uint64_t a1, uint64_t a2)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C4B98);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v7 = 1;
    int v4 = _os_activity_create((void *)&_mh_execute_header, "CL: CLVDR2DofNotifierFromDM::maintainEstimatorState", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C4B98);
    }
    int v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v9 = 0;
      __int16 v10 = 2082;
      int v11 = "";
      __int16 v12 = 2082;
      long long v13 = "activity";
      __int16 v14 = 2050;
      uint64_t v15 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLVDR2DofNotifierFromDM::maintainEstimatorState\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v7 = 0;
  }
  sub_1006CEE98(a2, a1);
  if (v7) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006CE9A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006CE9C0(uint64_t a1, uint64_t a2)
{
}

void sub_1006CE9D0(uint64_t a1, uint64_t a2, CLMotionActivity *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C4B98);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    long long v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLVDR2DofNotifierFromDM::onMotionActivityNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C4B98);
    }
    int v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      long long v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLVDR2DofNotifierFromDM::onMotionActivityNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006CF8C0(a4, v6, v7, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006CEB84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006CEBA4(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  if (*a2 == 5 && (*(_DWORD *)(a3 + 96) & 0xFFFFFFF7) == 1) {
    sub_1009E3F64(a4 + 128, *(double *)(a3 + 184), *(double *)(a3 + 504));
  }
}

uint64_t sub_1006CEBD8(uint64_t a1)
{
  *(void *)a1 = off_1022C4AA0;
  id v2 = (void **)(a1 + 160);
  if (*(void *)(a1 + 160)) {
    sub_1006CEDB0((void **)(a1 + 160), 0);
  }
  if (*(void *)(a1 + 120)) {
    sub_1006677A0((uint64_t *)(a1 + 120), 0);
  }
  uint64_t v3 = sub_10125D0BC();
  sub_1009D26C4(v3, 1, *(void *)(a1 + 192));
  uint64_t v4 = *(void *)(a1 + 112);
  if (v4)
  {
    [*(id *)(v4 + 16) unregister:*(void *)(v4 + 8) forNotification:1];
    uint64_t v5 = *(void *)(a1 + 112);
    *(void *)(a1 + 112) = 0;
    if (v5)
    {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
      if (*(void *)(a1 + 112)) {
        [*(id *)(*(void *)(a1 + 184) + 16) unregister:*(void *)(*(void *)(a1 + 184) + 8) forNotification:5];
      }
    }
  }
  uint64_t v6 = *(void *)(a1 + 200);
  *(void *)(a1 + 200) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  sub_1006CEDB0(v2, 0);
  nullsub_41(a1 + 128, v9);
  sub_1006677A0((uint64_t *)(a1 + 120), 0);
  uint64_t v10 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }

  return sub_100B05148(a1);
}

void *sub_1006CEDB0(void **a1, void *a2)
{
  __n128 result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1009FD248(result);
    operator delete();
  }
  return result;
}

void sub_1006CEE04(uint64_t a1)
{
  sub_1006CEBD8(a1);

  operator delete();
}

uint64_t sub_1006CEE3C(int a1, CLMotionActivity *this)
{
  if (CLMotionActivity::isDriving(this) & 1) != 0 || (CLMotionActivity::isInVehicle(this)) {
    return 1;
  }

  return CLMotionActivity::isVehicularHighConfidence(this);
}

void sub_1006CEE98(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 176);
  uint64_t v5 = *(void *)(a1 + 200);
  if (v4)
  {
    if (*(int *)(v5 + 8) < 1)
    {
      if (qword_102419500 != -1) {
        dispatch_once(&qword_102419500, &stru_1022C4BB8);
      }
      char v11 = qword_102419508;
      if (os_log_type_enabled((os_log_t)qword_102419508, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "#VDR, CLVDR2DofNotifierFromDM::onPowerAssertionTimerEvent establishing power assertion", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419500 != -1) {
          dispatch_once(&qword_102419500, &stru_1022C4BB8);
        }
        __int16 v21 = 0;
        uint64_t v15 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLVDR2DofNotifierFromDM::maintainEstimatorState(CLPersistentTimer *)", "%s\n", v15);
        if (v15 != (char *)buf) {
          free(v15);
        }
      }
      uint64_t v12 = *(void *)(a1 + 200);
      sub_100134750(v19, "none");
      sub_100EBBFD8(v12, (uint64_t *)v19);
      if (v20 < 0) {
        operator delete(v19[0]);
      }
      if (qword_102419500 != -1) {
        dispatch_once(&qword_102419500, &stru_1022C4BB8);
      }
      int v13 = qword_102419508;
      if (os_log_type_enabled((os_log_t)qword_102419508, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "#VDR,allocating CLVDR2DofNotifierFromDM estimator", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419500 != -1) {
          dispatch_once(&qword_102419500, &stru_1022C4BB8);
        }
        __int16 v21 = 0;
        __int16 v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLVDR2DofNotifierFromDM::maintainEstimatorState(CLPersistentTimer *)", "%s\n", v16);
        if (v16 != (char *)buf) {
          free(v16);
        }
      }
      operator new();
    }
    sub_100EBC6AC(v5);
    uint64_t v6 = *(void *)(a1 + 200);
    sub_100134750(__p, "none");
    sub_100EBBFD8(v6, (uint64_t *)__p);
    if (v23 < 0) {
      operator delete(__p[0]);
    }
  }
  else if (v5)
  {
    if (*(int *)(v5 + 8) >= 1)
    {
      double v7 = *(double *)(a1 + 168);
      if (v7 < sub_10016C458() + -300.0)
      {
        if (qword_102419500 != -1) {
          dispatch_once(&qword_102419500, &stru_1022C4BB8);
        }
        uint64_t v8 = qword_102419508;
        if (os_log_type_enabled((os_log_t)qword_102419508, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "#VDR, CLVDR2DofNotifierFromDM::onPowerAssertionTimerEvent releasing power assertion", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419500 != -1) {
            dispatch_once(&qword_102419500, &stru_1022C4BB8);
          }
          __int16 v21 = 0;
          long long v17 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLVDR2DofNotifierFromDM::maintainEstimatorState(CLPersistentTimer *)", "%s\n", v17);
          if (v17 != (char *)buf) {
            free(v17);
          }
        }
        sub_100EBC6AC(*(void *)(a1 + 200));
        if (qword_102419500 != -1) {
          dispatch_once(&qword_102419500, &stru_1022C4BB8);
        }
        uint64_t v9 = qword_102419508;
        if (os_log_type_enabled((os_log_t)qword_102419508, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "#VDR,deallocating CLVDR2DofNotifierFromDM estimator", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419500 != -1) {
            dispatch_once(&qword_102419500, &stru_1022C4BB8);
          }
          __int16 v21 = 0;
          __int16 v18 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLVDR2DofNotifierFromDM::maintainEstimatorState(CLPersistentTimer *)", "%s\n", v18);
          if (v18 != (char *)buf) {
            free(v18);
          }
        }
        sub_1006CEDB0((void **)(a1 + 160), 0);
        uint64_t v10 = sub_10125D0BC();
        sub_1009D26C4(v10, 1, *(void *)(a1 + 192));
      }
    }
  }
  if (a2)
  {
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    sub_1001165F8(a2, Current + 10.0);
  }
}

void sub_1006CF53C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25)
{
}

void sub_1006CF5A8(uint64_t a1, uint64_t a2)
{
  if (!a2 || !*(void *)(a1 + 160))
  {
    if (qword_102419500 != -1) {
      dispatch_once(&qword_102419500, &stru_1022C4BB8);
    }
    uint64_t v9 = qword_102419508;
    if (os_log_type_enabled((os_log_t)qword_102419508, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "#VDR, CLVDR2DofNotifierFromDM::handleDeviceMotionData: Warning - received CLDeviceMotion while no estimator is instantiated.", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419500 != -1) {
      dispatch_once(&qword_102419500, &stru_1022C4BB8);
    }
    LOWORD(v14) = 0;
LABEL_23:
    char v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLVDR2DofNotifierFromDM::handleDeviceMotionData(const CLDeviceMotion::Sample *)", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
    return;
  }
  double v16 = -1.0;
  if (sub_1009E4168(a1 + 128, &v16, *(double *)a2))
  {
    int v4 = *(_DWORD *)(a2 + 48);
    int v5 = *(_DWORD *)(a2 + 60);
    int8x16_t v6 = (int8x16_t)vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(*(float64x2_t *)(a2 + 8)), *(float64x2_t *)(a2 + 24));
    *(int8x16_t *)uint64_t buf = vextq_s8(v6, v6, 4uLL);
    uint64_t v7 = *(void *)(a2 + 52);
    uint64_t v8 = *(void *)(a2 + 40);
    sub_100B9BEAC((float32x4_t *)buf, *(float32x4_t *)buf);
    uint64_t v14 = v7;
    int v15 = v5;
    uint64_t v12 = v8;
    int v13 = v4;
    sub_1009FD500(*(void *)(a1 + 160), (float *)buf, (float *)&v14, v16, (uint64_t)&v12, (float *)&v12);
    return;
  }
  if (*(double *)a2 - *(double *)(a1 + 152) > 1.0)
  {
    *(void *)(a1 + 152) = *(void *)a2;
    if (qword_102419500 != -1) {
      dispatch_once(&qword_102419500, &stru_1022C4BB8);
    }
    uint64_t v10 = qword_102419508;
    if (os_log_type_enabled((os_log_t)qword_102419508, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "#VDR, CLVDR2DofNotifierFromDM::handleDeviceMotionData: Warning - received CLDeviceMotion while no Mach to GPS conversion is available.", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419500 != -1) {
        dispatch_once(&qword_102419500, &stru_1022C4BB8);
      }
      LOWORD(v14) = 0;
      goto LABEL_23;
    }
  }
}

void sub_1006CF8C0(uint64_t a1, int a2, int a3, CLMotionActivity *this)
{
  int v5 = sub_1006CEE3C(a1, this);
  int v6 = *(unsigned __int8 *)(a1 + 176);
  *(unsigned char *)(a1 + 176) = v5;
  if (v6 != v5)
  {
    *(double *)(a1 + 168) = sub_10016C458();
    uint64_t v7 = *(void *)(a1 + 120);
    if (v7)
    {
      sub_1006CEE98(a1, v7);
    }
  }
}

void sub_1006CF928(uint64_t a1, uint64_t *a2)
{
  if (sub_1006CFDA0(a1, (double *)a2))
  {
    long long v4 = *((_OWORD *)a2 + 1);
    v37[0] = *(_OWORD *)a2;
    v37[1] = v4;
    v37[2] = *((_OWORD *)a2 + 2);
    uint64_t v38 = a2[6];
    if (qword_102419500 != -1) {
      dispatch_once(&qword_102419500, &stru_1022C4BB8);
    }
    int v5 = qword_102419508;
    if (os_log_type_enabled((os_log_t)qword_102419508, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = *a2;
      uint64_t v7 = a2[1];
      uint64_t v8 = a2[2];
      uint64_t v9 = a2[3];
      uint64_t v10 = a2[4];
      uint64_t v11 = a2[5];
      uint64_t v12 = a2[6];
      *(_DWORD *)uint64_t buf = 134350592;
      uint64_t v54 = v6;
      __int16 v55 = 2050;
      uint64_t v56 = v7;
      __int16 v57 = 2050;
      uint64_t v58 = v8;
      __int16 v59 = 2050;
      uint64_t v60 = v9;
      __int16 v61 = 2050;
      uint64_t v62 = v10;
      __int16 v63 = 2050;
      uint64_t v64 = v11;
      __int16 v65 = 2050;
      uint64_t v66 = v12;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "#VDR,CLVDR2DofNotifier,DM,measurement,timestamp_s,%{public}.3f,dataPeriod_s,%{public}.3f,deltaCourse_rad,%{public}.6f,deltaSpeed_mps,%{public}.6f,deltaCourseVar_rad2,%{public}.6f,deltaSpeedVar_mps2,%{public}.6f,deltaCourseSpeedCov_radmps,%{public}.6f", buf, 0x48u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419500 != -1) {
        dispatch_once(&qword_102419500, &stru_1022C4BB8);
      }
      uint64_t v21 = *a2;
      uint64_t v22 = a2[1];
      uint64_t v23 = a2[2];
      uint64_t v24 = a2[3];
      uint64_t v25 = a2[4];
      uint64_t v26 = a2[5];
      uint64_t v27 = a2[6];
      int v39 = 134350592;
      uint64_t v40 = v21;
      __int16 v41 = 2050;
      uint64_t v42 = v22;
      __int16 v43 = 2050;
      uint64_t v44 = v23;
      __int16 v45 = 2050;
      uint64_t v46 = v24;
      __int16 v47 = 2050;
      uint64_t v48 = v25;
      __int16 v49 = 2050;
      uint64_t v50 = v26;
      __int16 v51 = 2050;
      uint64_t v52 = v27;
      uint64_t v28 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLVDR2DofNotifierFromDM::onVDR2DoFMeasurement(const CLVDR2DofMeasurement &)", "%s\n", v28);
      if (v28 != (char *)buf) {
        free(v28);
      }
    }
    *(_DWORD *)uint64_t buf = 0;
    (*(void (**)(uint64_t, uint8_t *, _OWORD *, void, uint64_t, void))(*(void *)a1 + 152))(a1, buf, v37, 0, 0xFFFFFFFFLL, 0);
  }
  else
  {
    if (qword_102419500 != -1) {
      dispatch_once(&qword_102419500, &stru_1022C4BB8);
    }
    int v13 = qword_102419508;
    if (os_log_type_enabled((os_log_t)qword_102419508, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v14 = *a2;
      uint64_t v15 = a2[1];
      uint64_t v16 = a2[2];
      uint64_t v17 = a2[3];
      uint64_t v18 = a2[4];
      uint64_t v19 = a2[5];
      uint64_t v20 = a2[6];
      *(_DWORD *)uint64_t buf = 134350592;
      uint64_t v54 = v14;
      __int16 v55 = 2050;
      uint64_t v56 = v15;
      __int16 v57 = 2050;
      uint64_t v58 = v16;
      __int16 v59 = 2050;
      uint64_t v60 = v17;
      __int16 v61 = 2050;
      uint64_t v62 = v18;
      __int16 v63 = 2050;
      uint64_t v64 = v19;
      __int16 v65 = 2050;
      uint64_t v66 = v20;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "#VDR,CLVDR2DofNotifierFromDM, Warning, invalid measurement,timestamp,%{public}.3f,dataPeriod,%{public}.3f,deltaCourse,%{public}.6f,deltaSpeed,%{public}.6f,courseVar,%{public}.6f,speedVar,%{public}.6f,deltaCourseSpeedCovar,%{public}.6f", buf, 0x48u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419500 != -1) {
        dispatch_once(&qword_102419500, &stru_1022C4BB8);
      }
      uint64_t v29 = *a2;
      uint64_t v30 = a2[1];
      uint64_t v31 = a2[2];
      uint64_t v32 = a2[3];
      uint64_t v33 = a2[4];
      uint64_t v34 = a2[5];
      uint64_t v35 = a2[6];
      int v39 = 134350592;
      uint64_t v40 = v29;
      __int16 v41 = 2050;
      uint64_t v42 = v30;
      __int16 v43 = 2050;
      uint64_t v44 = v31;
      __int16 v45 = 2050;
      uint64_t v46 = v32;
      __int16 v47 = 2050;
      uint64_t v48 = v33;
      __int16 v49 = 2050;
      uint64_t v50 = v34;
      __int16 v51 = 2050;
      uint64_t v52 = v35;
      unint64_t v36 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLVDR2DofNotifierFromDM::onVDR2DoFMeasurement(const CLVDR2DofMeasurement &)", "%s\n", v36);
      if (v36 != (char *)buf) {
        free(v36);
      }
    }
  }
}

BOOL sub_1006CFDA0(uint64_t a1, double *a2)
{
  double v2 = a2[1];
  if (v2 == 0.0) {
    return 0;
  }
  BOOL v4 = v2 > 0.001;
  if (v2 >= 60.0) {
    BOOL v4 = 0;
  }
  if (fabs(a2[2]) > 3.14159265) {
    BOOL v4 = 0;
  }
  if (fabs(a2[3] / v2) > 20.0) {
    BOOL v4 = 0;
  }
  double v5 = a2[4];
  double v6 = a2[5];
  if (v5 <= 0.0) {
    BOOL v4 = 0;
  }
  if (v6 <= 0.0) {
    BOOL v4 = 0;
  }
  return a2[6] * a2[6] <= v5 * 1.05 * v6 && v4;
}

void sub_1006CFE38(uint64_t a1, uint64_t a2)
{
  v14[0] = a2;
  if (!*(unsigned char *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      if (v7 >= (int)a2) {
        uint64_t v9 = (uint64_t *)v4;
      }
      else {
        uint64_t v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }
    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)uint64_t buf = *(_DWORD *)(*(void *)(v6 + 40) + 28);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112))(a1, a2, buf);
      }
      sub_10006DA64(v5, v14);
    }
    else
    {
LABEL_12:
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022C4B98);
      }
      uint64_t v10 = qword_102419588;
      if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
      {
        uint64_t v11 = (void *)(a1 + 8);
        if (*(char *)(a1 + 31) < 0) {
          uint64_t v11 = (void *)*v11;
        }
        *(_DWORD *)uint64_t buf = 136446466;
        uint64_t v19 = v11;
        __int16 v20 = 1026;
        int v21 = a2;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419580 != -1) {
          dispatch_once(&qword_102419580, &stru_1022C4B98);
        }
        uint64_t v12 = (void *)(a1 + 8);
        if (*(char *)(a1 + 31) < 0) {
          uint64_t v12 = (void *)*v12;
        }
        v14[1] = 136446466;
        uint64_t v15 = v12;
        __int16 v16 = 1026;
        int v17 = a2;
        int v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::removeClient(int) [Notification_T = CLVDRNotifier_Type::Notification, NotificationData_T = CLVDRNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v13);
        if (v13 != (char *)buf) {
          free(v13);
        }
      }
    }
  }
}

uint64_t sub_1006D00C8(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  id v7 = sub_10005C4C4(a4);
  if (v7)
  {
    int v10 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *, id))(*(void *)a1 + 96))(a1, a2, &v10, v7);
  }
  else
  {
    int v9 = a3;
    return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 88))(a1, a2, &v9);
  }
}

uint64_t sub_1006D017C(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 104))(a1, a2, &v4);
}

uint64_t sub_1006D01C4(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 112))(a1, a2, &v4);
}

uint64_t sub_1006D020C(uint64_t a1, int a2)
{
  int v3 = a2;
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
}

uint64_t sub_1006D0254(uint64_t a1, int a2, int *a3, char *a4)
{
  int v41 = a2;
  if (*(unsigned char *)(a1 + 108)) {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + 88);
  if (v7)
  {
    uint64_t v10 = a1 + 88;
    do
    {
      int v11 = *(_DWORD *)(v7 + 32);
      BOOL v12 = v11 < a2;
      if (v11 >= a2) {
        int v13 = (uint64_t *)v7;
      }
      else {
        int v13 = (uint64_t *)(v7 + 8);
      }
      if (!v12) {
        uint64_t v10 = v7;
      }
      uint64_t v7 = *v13;
    }
    while (*v13);
    if (v10 != a1 + 88 && *(_DWORD *)(v10 + 32) <= a2)
    {
      *(void *)uint64_t v42 = v10;
      int v17 = *a3;
      uint64_t v20 = *(void *)(v10 + 48);
      uint64_t v19 = v10 + 48;
      uint64_t v18 = v20;
      if (!v20) {
        goto LABEL_31;
      }
      uint64_t v21 = v19;
      do
      {
        int v22 = *(_DWORD *)(v18 + 28);
        BOOL v23 = v22 < v17;
        if (v22 >= v17) {
          uint64_t v24 = (uint64_t *)v18;
        }
        else {
          uint64_t v24 = (uint64_t *)(v18 + 8);
        }
        if (!v23) {
          uint64_t v21 = v18;
        }
        uint64_t v18 = *v24;
      }
      while (*v24);
      if (v21 == v19 || v17 < *(_DWORD *)(v21 + 28)) {
LABEL_31:
      }
        uint64_t v21 = v19;
      uint64_t v25 = *(void *)(a1 + 64);
      if (!v25) {
        goto LABEL_42;
      }
      uint64_t v26 = a1 + 64;
      do
      {
        int v27 = *(_DWORD *)(v25 + 32);
        BOOL v28 = v27 < v17;
        if (v27 >= v17) {
          uint64_t v29 = (uint64_t *)v25;
        }
        else {
          uint64_t v29 = (uint64_t *)(v25 + 8);
        }
        if (!v28) {
          uint64_t v26 = v25;
        }
        uint64_t v25 = *v29;
      }
      while (*v29);
      if (v26 != a1 + 64 && v17 >= *(_DWORD *)(v26 + 32))
      {
        uint64_t v40 = v26;
        uint64_t v35 = *(void *)(v26 + 56);
        char v36 = *a4;
        *(void *)&buf[0] = &v41;
        *((unsigned char *)sub_1000EB1B8((uint64_t **)(v26 + 40), &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 32) = v36;
        uint64_t v46 = 0;
        memset(buf, 0, sizeof(buf));
        if (v21 == v19
          && (*(unsigned int (**)(uint64_t, int *, _OWORD *))(*(void *)a1 + 128))(a1, a3, buf))
        {
          sub_1006D27B8();
        }
        if (v35) {
          goto LABEL_46;
        }
      }
      else
      {
LABEL_42:
        uint64_t v40 = a1 + 64;
        char v30 = byte_10241D478;
        int v39 = v17;
        *(void *)&buf[0] = &v39;
        *((unsigned char *)sub_10044715C((uint64_t **)(a1 + 56), &v39, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 80) = v30;
        int v39 = *a3;
        *(void *)&buf[0] = &v39;
        uint64_t v31 = sub_10044715C((uint64_t **)(a1 + 56), &v39, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        uint64_t v32 = (std::__shared_weak_count *)v31[9];
        v31[8] = 0;
        v31[9] = 0;
        if (v32) {
          sub_1000DB0A0(v32);
        }
        char v33 = *a4;
        int v39 = *a3;
        *(void *)&buf[0] = &v39;
        uint64_t v34 = sub_10044715C((uint64_t **)(a1 + 56), &v39, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
        *(void *)&buf[0] = &v41;
        *((unsigned char *)sub_1000EB1B8(v34 + 5, &v41, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 32) = v33;
      }
      (*(void (**)(uint64_t, int *))(*(void *)a1 + 168))(a1, a3);
LABEL_46:
      if (v21 == v19)
      {
        LODWORD(buf[0]) = *a3;
        sub_1000EDED4((uint64_t **)(*(void *)v42 + 40), (int *)buf, buf);
      }
      return 1;
    }
  }
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C4B98);
  }
  uint64_t v14 = qword_102419588;
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
  {
    uint64_t v15 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      uint64_t v15 = (void *)*v15;
    }
    LODWORD(buf[0]) = 136446466;
    *(void *)((char *)buf + 4) = v15;
    WORD6(buf[0]) = 1026;
    *(_DWORD *)((char *)buf + 14) = a2;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
      (uint8_t *)buf,
      0x12u);
  }
  BOOL v16 = sub_10013D1A0(115, 0);
  uint64_t result = 0;
  if (v16)
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C4B98);
    }
    uint64_t v37 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      uint64_t v37 = (void *)*v37;
    }
    *(_DWORD *)uint64_t v42 = 136446466;
    *(void *)&v42[4] = v37;
    __int16 v43 = 1026;
    int v44 = a2;
    uint64_t v38 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::registerForNotification(int, const Notification_T &, const RegistrationInfo_T &) [Notification_T = CLVDRNotifier_Type::Notification, NotificationData_T = CLVDRNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v38);
    if (v38 != (char *)buf) {
      free(v38);
    }
    return 0;
  }
  return result;
}

BOOL sub_1006D0704(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      int v9 = (uint64_t *)v5;
    }
    else {
      int v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }
  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        uint64_t v21 = (uint64_t *)v15;
      }
      else {
        uint64_t v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }
    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }
  else
  {
LABEL_11:
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C4B98);
    }
    uint64_t v10 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
    {
      int v11 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        int v11 = (void *)*v11;
      }
      *(_DWORD *)uint64_t buf = 136446466;
      uint64_t v24 = v11;
      __int16 v25 = 1026;
      int v26 = a2;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }
    BOOL v12 = sub_10013D1A0(115, 0);
    BOOL result = 0;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022C4B98);
      }
      int v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::clientRegistered(int, const Notification_T &) [Notification_T = CLVDRNotifier_Type::Notification, NotificationData_T = CLVDRNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_1006D0988(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0;
  }
  int v6 = *a2;
  uint64_t v7 = v3;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      uint64_t v10 = (uint64_t *)v4;
    }
    else {
      uint64_t v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }
  while (*v10);
  if (v7 == v3) {
    return 0;
  }
  if (v6 < *(_DWORD *)(v7 + 32)) {
    return 0;
  }
  int v11 = *(long long **)(v7 + 64);
  if (!v11) {
    return 0;
  }
  long long v12 = *v11;
  long long v13 = v11[1];
  long long v14 = v11[2];
  *(void *)(a3 + 48) = *((void *)v11 + 6);
  *(_OWORD *)(a3 + 16) = v13;
  *(_OWORD *)(a3 + 32) = v14;
  *(_OWORD *)a3 = v12;
  return 1;
}

uint64_t sub_1006D09F8(uint64_t a1, int *a2, uint64_t a3)
{
  int v6 = (char *)operator new(0x50uLL);
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v6 + 24) = *(_OWORD *)a3;
  *((void *)v6 + 1) = 0;
  *((void *)v6 + 2) = 0;
  *(void *)int v6 = off_1022C4C98;
  *(_OWORD *)(v6 + 40) = v7;
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(a3 + 32);
  *((void *)v6 + 9) = *(void *)(a3 + 48);
  int v11 = *a2;
  long long v12 = &v11;
  int v8 = sub_10044715C((uint64_t **)(a1 + 56), &v11, (uint64_t)&unk_101D0B290, &v12);
  BOOL v9 = (std::__shared_weak_count *)v8[9];
  v8[8] = (uint64_t *)(v6 + 24);
  v8[9] = (uint64_t *)v6;
  if (v9) {
    sub_1000DB0A0(v9);
  }
  return 1;
}

void sub_1006D0AC0(_Unwind_Exception *a1)
{
  sub_1000DB0A0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006D0AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  return (*(uint64_t (**)(uint64_t, uint64_t, _OWORD *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, a2, v5, a3, a4, 0);
}

void sub_1006D0B34(uint64_t a1, unsigned int *a2, uint64_t a3, int a4)
{
  if (*(unsigned char *)(a1 + 108)) {
    return;
  }
  int v8 = _os_activity_create((void *)&_mh_execute_header, "CL: notifyClientsWithData (Fallback)", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
  os_activity_scope_enter(v8, &state);

  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C4B98);
  }
  BOOL v9 = qword_102419588;
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      uint64_t v10 = (void *)*v10;
    }
    int v11 = (std::__shared_weak_count *)*a2;
    *(_DWORD *)uint64_t buf = 68289794;
    int v23 = 0;
    __int16 v24 = 2082;
    *(void *)__int16 v25 = "";
    *(_WORD *)&v25[8] = 2082;
    *(void *)&v25[10] = "activity";
    __int16 v26 = 2082;
    int v27 = v10;
    __int16 v28 = 2050;
    uint64_t v29 = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"notifyClientsWithData\", \"event\":%{public, location:escape_only}s, \"name\":%{public, location:escape_only}s, \"notification\":%{public}lld}", buf, 0x30u);
  }
  uint64_t v12 = *(void *)(a1 + 64);
  if (!v12) {
    goto LABEL_18;
  }
  int v13 = *a2;
  long long v14 = (uint64_t **)(a1 + 64);
  do
  {
    int v15 = *(_DWORD *)(v12 + 32);
    BOOL v16 = v15 < v13;
    if (v15 >= v13) {
      int v17 = (uint64_t *)v12;
    }
    else {
      int v17 = (uint64_t *)(v12 + 8);
    }
    if (!v16) {
      long long v14 = (uint64_t **)v12;
    }
    uint64_t v12 = *v17;
  }
  while (*v17);
  if (v14 == (uint64_t **)(a1 + 64) || v13 < *((_DWORD *)v14 + 8))
  {
LABEL_18:
    char v30 = v31;
    memset(v31, 0, sizeof(v31));
    uint64_t v32 = 0;
    sub_1004481D0((uint64_t)buf, a2, (uint64_t)&v30);
    long long v14 = sub_100448098((uint64_t **)(a1 + 56), (__n128 *)buf);
    if (v29) {
      sub_1000DB0A0(v29);
    }
    sub_1000F5BB0((uint64_t)&v24, *(void **)&v25[6]);
    if (v32) {
      sub_1000DB0A0(v32);
    }
    sub_1000F5BB0((uint64_t)&v30, v31[0]);
  }
  if (a4)
  {
    uint64_t v18 = (char *)operator new(0x50uLL);
    long long v19 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v18 + 24) = *(_OWORD *)a3;
    *((void *)v18 + 1) = 0;
    *((void *)v18 + 2) = 0;
    *(void *)uint64_t v18 = off_1022C4C98;
    *(_OWORD *)(v18 + 40) = v19;
    *(_OWORD *)(v18 + 56) = *(_OWORD *)(a3 + 32);
    *((void *)v18 + 9) = *(void *)(a3 + 48);
    BOOL v20 = (std::__shared_weak_count *)v14[9];
    unsigned char v14[8] = (uint64_t *)(v18 + 24);
    v14[9] = (uint64_t *)v18;
    if (!v20) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  BOOL v20 = (std::__shared_weak_count *)v14[9];
  unsigned char v14[8] = 0;
  v14[9] = 0;
  if (v20) {
LABEL_27:
  }
    sub_1000DB0A0(v20);
LABEL_28:
  if (v14[7]) {
    sub_1006D18D8();
  }
  os_activity_scope_leave(&state);
}

void sub_1006D112C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_1006D1178(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 108))
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C4B98);
    }
    double v2 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        uint64_t v3 = (void *)*v3;
      }
      *(_DWORD *)uint64_t buf = 136315138;
      int v22 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022C4B98);
      }
      uint64_t v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::listClients() [Notification_T = CLVDRNotifier_Type::Notification, NotificationData_T = CLVDRNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
  else
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C4B98);
    }
    uint64_t v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        uint64_t v6 = (void *)*v6;
      }
      uint64_t v7 = *(void *)(a1 + 96);
      *(_DWORD *)uint64_t buf = 136315394;
      int v22 = v6;
      __int16 v23 = 2048;
      v24[0] = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022C4B98);
      }
      BOOL v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::listClients() [Notification_T = CLVDRNotifier_Type::Notification, NotificationData_T = CLVDRNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v20);
      if (v20 != (char *)buf) {
        free(v20);
      }
    }
    int v8 = *(void **)(a1 + 80);
    if (v8 != (void *)(a1 + 88))
    {
      do
      {
        BOOL v9 = (void *)v8[5];
        if (v9 != v8 + 6)
        {
          do
          {
            if (qword_102419580 != -1) {
              dispatch_once(&qword_102419580, &stru_1022C4B98);
            }
            uint64_t v10 = qword_102419588;
            if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
            {
              int v11 = (void *)(a1 + 8);
              if (*(char *)(a1 + 31) < 0) {
                int v11 = *(void **)(a1 + 8);
              }
              int v12 = *((_DWORD *)v8 + 8);
              int v13 = *((_DWORD *)v9 + 7);
              *(_DWORD *)uint64_t buf = 136315650;
              int v22 = v11;
              __int16 v23 = 1024;
              LODWORD(v24[0]) = v12;
              WORD2(v24[0]) = 1024;
              *(_DWORD *)((char *)v24 + 6) = v13;
              _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022C4B98);
              }
              int v17 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::listClients() [Notification_T = CLVDRNotifier_Type::Notification, NotificationData_T = CLVDRNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v17);
              if (v17 != (char *)buf) {
                free(v17);
              }
            }
            long long v14 = (void *)v9[1];
            if (v14)
            {
              do
              {
                int v15 = v14;
                long long v14 = (void *)*v14;
              }
              while (v14);
            }
            else
            {
              do
              {
                int v15 = (void *)v9[2];
                BOOL v16 = *v15 == (void)v9;
                BOOL v9 = v15;
              }
              while (!v16);
            }
            BOOL v9 = v15;
          }
          while (v15 != v8 + 6);
        }
        uint64_t v18 = (void *)v8[1];
        if (v18)
        {
          do
          {
            long long v19 = v18;
            uint64_t v18 = (void *)*v18;
          }
          while (v18);
        }
        else
        {
          do
          {
            long long v19 = (void *)v8[2];
            BOOL v16 = *v19 == (void)v8;
            int v8 = v19;
          }
          while (!v16);
        }
        int v8 = v19;
      }
      while (v19 != (void *)(a1 + 88));
    }
  }
}

void sub_1006D1724(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1006D1754(id a1)
{
  qword_102419508 = (uint64_t)os_log_create("com.apple.locationd.Position", "VDR");
}

void *sub_1006D1784(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *BOOL result = off_1022C4BE8;
  result[1] = v3;
  return result;
}

uint64_t sub_1006D17CC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C4BE8;
  a2[1] = v2;
  return result;
}

uint64_t sub_1006D17F8(uint64_t a1, void *a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, uint64_t))(a1 + 8))(*a2, a3);
}

uint64_t sub_1006D1808(uint64_t a1, uint64_t a2)
{
  if (sub_1000E9B14(a2, (uint64_t)&off_1022C4C68)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_1006D1848()
{
  return &off_1022C4C68;
}

void *sub_1006D1854(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1006D18D8()
{
}

void sub_1006D1994(void *a1, int *a2, void *a3)
{
  if (!*((unsigned char *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      BOOL v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          int v12 = (uint64_t *)v4;
        }
        else {
          int v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          BOOL v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }
      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        __int16 v49 = v9;
        id v13 = sub_1006D1F18(a3);
        (*(void (**)(void *, int *, id, void *))(*a1 + 184))(a1, a2, v13, v9 + 10);
        long long v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          int v15 = a1 + 11;
          BOOL v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            long long v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                int v22 = (uint64_t *)v17;
              }
              else {
                int v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                long long v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }
            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              uint64_t v48 = v19;
              sub_1006D1D84(a1, (uint64_t)&v48, (uint64_t)&v49, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              uint64_t v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  uint64_t v32 = (uint64_t *)v27;
                }
                else {
                  uint64_t v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  uint64_t v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }
              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              __int16 v49 = v29;
              uint64_t v34 = v29[6];
              long long v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                uint64_t v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    int v39 = (uint64_t *)v36;
                  }
                  else {
                    int v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    uint64_t v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }
                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      uint64_t v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      uint64_t v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      long long v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }
                  while (*v42);
                }
                else
                {
                  __int16 v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      long long v14 = v43;
                      __int16 v43 = (void *)*v43;
                    }
                    while (v43);
                  }
                  else
                  {
                    do
                    {
                      long long v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      uint64_t v35 = v14;
                    }
                    while (!v44);
                  }
                }
              }
            }
            else
            {
LABEL_25:
              uint64_t v48 = a1 + 11;
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022C4B98);
              }
              __int16 v24 = qword_102419588;
              if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
              {
                __int16 v25 = a1 + 1;
                if (*((char *)a1 + 31) < 0) {
                  __int16 v25 = (void *)*v16;
                }
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)uint64_t buf = 136446466;
                __int16 v55 = v25;
                __int16 v56 = 1026;
                int v57 = v26;
                _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_FAULT, "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_102419580 != -1) {
                  dispatch_once(&qword_102419580, &stru_1022C4B98);
                }
                __int16 v45 = a1 + 1;
                if (*((char *)a1 + 31) < 0) {
                  __int16 v45 = (void *)*v16;
                }
                int v46 = *((_DWORD *)v14 + 7);
                int v50 = 136446466;
                __int16 v51 = v45;
                __int16 v52 = 1026;
                int v53 = v46;
                __int16 v47 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 0, "void CLNotifier<CLVDRNotifier_Type::Notification, CLVDRNotifier_Type::NotificationData>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLVDRNotifier_Type::Notification, NotificationData_T = CLVDRNotifier_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v47);
                if (v47 != (char *)buf) {
                  free(v47);
                }
              }
            }
          }
          while (v14 != v49 + 6);
        }
      }
    }
  }
}

unsigned char *sub_1006D1D84(unsigned char *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    uint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32);
    LODWORD(v13) = *(_DWORD *)(*(void *)a3 + 32);
    id v9 = sub_1006D1F18(a4);
    uint64_t v10 = *(void *)a3 + 80;
    BOOL v11 = (uint64_t **)(*(void *)a3 + 40);
    long long v14 = (int *)(*(void *)a2 + 32);
    int v12 = sub_1000EB1B8(v11, v14, (uint64_t)&unk_101D0B290, &v14);
    BOOL result = (unsigned char *)(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t *, id, uint64_t, uint64_t **))(*(void *)v7 + 192))(v7, v8, &v13, v9, v10, v12 + 4);
    if (result) {
      return [*(id *)(*(void *)a2 + 64) onNotification:*(unsigned int *)(*(void *)a3 + 32) withData:a4, v13];
    }
  }
  return result;
}

void sub_1006D1E7C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022C4C98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1006D1E9C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022C4C98;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1006D1EF8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    operator delete();
  }
  return result;
}

id sub_1006D1F18(void *a1)
{
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    return sub_1006D1FB4(a1);
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      return sub_1006D2340(a1);
    }
    else
    {
      return 0;
    }
  }
}

id sub_1006D1FB4(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2) {
    return sub_1006D2700((uint64_t)&v7, a1);
  }
  if (!getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_102418F90 != -1) {
      dispatch_once(&qword_102418F90, &stru_1022C4CD8);
    }
    uint64_t v5 = qword_102418F98;
    if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218498;
      id v15 = v2;
      __int16 v16 = 2048;
      uint64_t v17 = 0;
      __int16 v18 = 2080;
      unint64_t v19 = 0x8000000101D2A7ACLL & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
    }
    if (!sub_10013D1A0(115, 0)) {
      return 0;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102418F90 == -1) {
      goto LABEL_18;
    }
    goto LABEL_20;
  }
  if (qword_102418F90 != -1) {
    dispatch_once(&qword_102418F90, &stru_1022C4CD8);
  }
  uint64_t v3 = qword_102418F98;
  if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)uint64_t buf = 134218498;
    id v15 = v2;
    __int16 v16 = 2048;
    uint64_t v17 = 0;
    __int16 v18 = 2080;
    unint64_t v19 = 0x8000000101D2A7ACLL & 0x7FFFFFFFFFFFFFFFLL;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
  }
  if (!sub_10013D1A0(115, 0)) {
    return 0;
  }
  bzero(buf, 0x65CuLL);
  if (qword_102418F90 != -1) {
LABEL_20:
  }
    dispatch_once(&qword_102418F90, &stru_1022C4CD8);
LABEL_18:
  int v8 = 134218498;
  id v9 = v2;
  __int16 v10 = 2048;
  uint64_t v11 = 0;
  __int16 v12 = 2080;
  unint64_t v13 = 0x8000000101D2A7ACLL & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v6 = (char *)_os_log_send_and_compose_impl();
  sub_1004BA5E4("Generic", 1, 0, 0, "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLVDRNotifier_Type::NotificationData, Callbacuint64_t k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]", "%s\n", v6);
  if (v6 != (char *)buf) {
    free(v6);
  }
  return 0;
}

id sub_1006D2340(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (v2)
  {
    if (getenv("_INTERSILO_UNIT_TEST"))
    {
      if (qword_102418F90 != -1) {
        dispatch_once(&qword_102418F90, &stru_1022C4CD8);
      }
      uint64_t v3 = qword_102418F98;
      if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)uint64_t buf = 134218498;
        id v8 = v2;
        __int16 v9 = 2048;
        uint64_t v10 = 0;
        __int16 v11 = 2080;
        unint64_t v12 = 0x8000000101D2A7ACLL & 0x7FFFFFFFFFFFFFFFLL;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
      }
      if (!sub_10013D1A0(115, 0)) {
        return 0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102418F90 == -1)
      {
LABEL_20:
        uint64_t v6 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLVDRNotifier_Type::NotificationData, Callbacuint64_t k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]", "%s\n", v6);
        if (v6 != (char *)buf) {
          free(v6);
        }
        return 0;
      }
    }
    else
    {
      if (qword_102418F90 != -1) {
        dispatch_once(&qword_102418F90, &stru_1022C4CD8);
      }
      uint64_t v5 = qword_102418F98;
      if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)uint64_t buf = 134218498;
        id v8 = v2;
        __int16 v9 = 2048;
        uint64_t v10 = 0;
        __int16 v11 = 2080;
        unint64_t v12 = 0x8000000101D2A7ACLL & 0x7FFFFFFFFFFFFFFFLL;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
      }
      if (!sub_10013D1A0(115, 0)) {
        return 0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102418F90 == -1) {
        goto LABEL_20;
      }
    }
    dispatch_once(&qword_102418F90, &stru_1022C4CD8);
    goto LABEL_20;
  }

  return [a1 cppObjectPtr];
}

id sub_1006D2700(uint64_t a1, void *a2)
{
  if (![a2 cppObjectPtr]
    && objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_1023929F0))
  {
    if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") != (id)56) {
      sub_101A6AB84();
    }
    [a2 setCppObjectPtr:[objc_msgSend(objc_msgSend(a2, "serialized"), "bytes") bytes]];
  }

  return [a2 cppObjectPtr];
}

void sub_1006D2788(id a1)
{
  qword_102418F98 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

void sub_1006D27B8()
{
}

uint64_t sub_1006D2874(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    operator delete();
  }
  return result;
}

void sub_1006D2894()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADF0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10241ADF0))
    {
      uint64_t v1 = 0x7FFFFFFF00000000;
      v0[2] = xmmword_101D2A650;
      v0[3] = unk_101D2A660;
      v0[4] = xmmword_101D2A670;
      v0[0] = xmmword_101D2A630;
      v0[1] = unk_101D2A640;
      sub_1003BFBA4((uint64_t)&unk_10241ADD8, (int *)v0, 11);
      __cxa_atexit((void (*)(void *))sub_1003BE998, &unk_10241ADD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ADF0);
    }
  }
}

void sub_1006D2974(_Unwind_Exception *a1)
{
}

uint64_t sub_1006D298C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = 0x7FEFFFFFFFFFFFFFLL;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  uint64_t v4 = 0x3FF99999A0000000;
  sub_101A1F180((unsigned __int8 *)(a1 + 40), "FallUserMaxMets", &v4, 0);
  return a1;
}

void sub_1006D29F4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 24) = v5;
    operator delete(v5);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006D2A18(uint64_t a1, double *a2, double a3)
{
  if (*(unsigned char *)(a1 + 40))
  {
    *a2 = *(double *)(a1 + 48);
    return 1;
  }
  else
  {
    long long __p = 0;
    __int16 v16 = 0;
    uint64_t v17 = 0;
    sub_100451494(a1 + 8, &__p);
    uint64_t v6 = (float *)__p;
    if (__p == v16) {
      goto LABEL_13;
    }
    double v7 = 0.0;
    id v8 = (int *)__p;
    do
    {
      double v7 = (double)(v8[1] + (uint64_t)v7);
      v8 += 2;
    }
    while (v8 != v16);
    uint64_t v9 = (uint64_t)v7;
    if ((uint64_t)v7 < 1 || __p == v16)
    {
LABEL_13:
      uint64_t v4 = 0;
      *a2 = NAN;
    }
    else
    {
      uint64_t v11 = 0;
      while (1)
      {
        v11 += *((int *)v6 + 1);
        if ((double)v11 / (double)v9 >= a3) {
          break;
        }
        v6 += 2;
        if (v6 == (float *)v16) {
          goto LABEL_13;
        }
      }
      *a2 = *v6;
      if (qword_1024190F0 != -1) {
        dispatch_once(&qword_1024190F0, &stru_1022C4D18);
      }
      unint64_t v13 = qword_1024190F8;
      uint64_t v4 = 1;
      if (os_log_type_enabled((os_log_t)qword_1024190F8, OS_LOG_TYPE_INFO))
      {
        double v14 = *a2;
        *(_DWORD *)uint64_t buf = 68289539;
        int v19 = 0;
        __int16 v20 = 2082;
        BOOL v21 = "";
        __int16 v22 = 2049;
        uint64_t v23 = v9;
        __int16 v24 = 2049;
        double v25 = v14;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"MaxMETs,MET Minutes\", \"total count\":%{private}ld, \"Max. METs\":\"%{private}f\"}", buf, 0x26u);
      }
    }
    if (__p)
    {
      __int16 v16 = (int *)__p;
      operator delete(__p);
    }
  }
  return v4;
}

void sub_1006D2BEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006D2C08(uint64_t a1)
{
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  sub_100451494(a1 + 8, &v5);
  if (v5 == v6)
  {
    uint64_t v3 = 0;
    if (!v5) {
      return v3;
    }
    goto LABEL_5;
  }
  double v1 = 0.0;
  id v2 = v5;
  do
  {
    uint64_t v3 = (v2[1] + (int)v1);
    double v1 = (double)(int)v3;
    v2 += 2;
  }
  while (v2 != v6);
  if (v5)
  {
LABEL_5:
    uint64_t v6 = v5;
    operator delete(v5);
  }
  return v3;
}

void sub_1006D2C8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1006D2CA8(uint64_t a1, double a2, double a3)
{
  double Current = CFAbsoluteTimeGetCurrent();
  double v7 = *(double *)(a1 + 8);
  double v8 = Current + -28800.0;
  if (v7 <= Current + -28800.0)
  {
    double v9 = Current + -86400.0;
    if (v7 >= v9) {
      double v10 = *(double *)(a1 + 8);
    }
    else {
      double v10 = v9;
    }
    double v11 = v9 + 28800.0;
    if (v7 + 28800.0 >= v11) {
      double v12 = v7 + 28800.0;
    }
    else {
      double v12 = v11;
    }
    if (qword_1024190F0 != -1) {
      dispatch_once(&qword_1024190F0, &stru_1022C4D18);
    }
    unint64_t v13 = qword_1024190F8;
    if (os_log_type_enabled((os_log_t)qword_1024190F8, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289539;
      int v18 = 0;
      __int16 v19 = 2082;
      __int16 v20 = "";
      __int16 v21 = 2049;
      double v22 = v10;
      __int16 v23 = 2049;
      double v24 = v12;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"MaxMETs,Setting query range\", \"start_s\":\"%{private}.09f\", \"end_s\":\"%{private}.09f\"}", buf, 0x26u);
    }
    double v14 = *(void **)a1;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    void v16[2] = sub_1006D2E6C;
    v16[3] = &unk_1022C4CF8;
    void v16[4] = a1;
    *(double *)&v16[5] = v10;
    *(double *)&v16[6] = v12;
    *(double *)&v16[7] = a2;
    *(double *)&v16[8] = a3;
    [v14 queryMetMinutesInTimeRange:v16 withReply:v10, v12];
  }
  return v7 <= v8;
}

void sub_1006D2E6C(double *a1, void *a2, int a3)
{
  if (a3 == 100)
  {
    double v3 = a1[5];
    double v4 = a1[6];
    double v5 = a1[7];
    double v6 = a1[8];
    uint64_t v7 = *((void *)a1 + 4) + 8;
    sub_100451A1C(v7, a2, v3, v4, v5, v6);
  }
  else
  {
    if (qword_1024190F0 != -1) {
      dispatch_once(&qword_1024190F0, &stru_1022C4D18);
    }
    double v9 = qword_1024190F8;
    if (os_log_type_enabled((os_log_t)qword_1024190F8, OS_LOG_TYPE_ERROR))
    {
      int v11 = 68289282;
      int v12 = 0;
      __int16 v13 = 2082;
      double v14 = "";
      __int16 v15 = 1026;
      int v16 = a3;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"MaxMETs,query,\", \"error\":%{public}d}", (uint8_t *)&v11, 0x18u);
      if (qword_1024190F0 != -1) {
        dispatch_once(&qword_1024190F0, &stru_1022C4D18);
      }
    }
    double v10 = qword_1024190F8;
    if (os_signpost_enabled((os_log_t)qword_1024190F8))
    {
      int v11 = 68289282;
      int v12 = 0;
      __int16 v13 = 2082;
      double v14 = "";
      __int16 v15 = 1026;
      int v16 = a3;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "MaxMETs,query,", "{\"msg%{public}.0s\":\"MaxMETs,query,\", \"error\":%{public}d}", (uint8_t *)&v11, 0x18u);
    }
  }
}

void sub_1006D304C(id a1)
{
  qword_1024190F8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Fall");
}

uint64_t sub_1006D307C()
{
  sub_100134750(qword_10247CE88, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");

  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247CE88, (void *)&_mh_execute_header);
}

BOOL sub_1006D30E0(_DWORD *a1)
{
  return *a1 == 1;
}

BOOL sub_1006D30F0(_DWORD *a1)
{
  return *a1 == 6;
}

BOOL sub_1006D3100(_DWORD *a1)
{
  return *a1 == 1 || *a1 == 6;
}

BOOL sub_1006D3114(_DWORD *a1)
{
  return *a1 == 2;
}

BOOL sub_1006D3124(_DWORD *a1)
{
  return !*a1 && a1[1] == 1;
}

std::string *sub_1006D3144(int *a1)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022C4D58);
  }
  id v2 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
  {
    int v3 = *a1;
    *(_DWORD *)uint64_t buf = 67240192;
    int v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "WifiFlow, reset, last, %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C4D58);
    }
    double v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationUpdateRequest::reset()", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  int v4 = *a1;
  *a1 = 0;
  a1[1] = v4;
  a1[12] = 0;
  *((void *)a1 + 5) = 0xBFF0000000000000;
  return std::string::assign((std::string *)(a1 + 4), "default");
}

void sub_1006D331C(uint64_t a1, int a2, unsigned int a3, double a4)
{
  if (*(_DWORD *)(a1 + 56) == a2)
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C4D58);
    }
    double v5 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
    {
      if ((a2 - 1) > 4) {
        double v6 = "none";
      }
      else {
        double v6 = off_1022C4D98[a2 - 1];
      }
      *(_DWORD *)uint64_t buf = 136446210;
      *(void *)&uint8_t buf[4] = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "WifiStep, same, %{public}s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022C4D58);
      }
      uint64_t v42 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationUpdateRequest::updateStep(Step, CFAbsoluteTime, DoneReason)", "%s\n", v42);
      if (v42 != buf) {
        free(v42);
      }
    }
  }
  else
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C4D58);
    }
    double v10 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
    {
      if ((a2 - 1) > 4) {
        int v11 = "none";
      }
      else {
        int v11 = off_1022C4D98[a2 - 1];
      }
      unsigned int v12 = *(_DWORD *)(a1 + 56) - 1;
      if (v12 > 4) {
        __int16 v13 = "none";
      }
      else {
        __int16 v13 = off_1022C4D98[v12];
      }
      *(_DWORD *)uint64_t buf = 136446722;
      *(void *)&uint8_t buf[4] = v11;
      *(_WORD *)&unsigned char buf[12] = 2082;
      *(void *)&buf[14] = v13;
      *(_WORD *)&unsigned char buf[22] = 2082;
      int v46 = sub_1006D3DB0(a3);
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "WifiFlow, step, %{public}s, from, %{public}s, donereason, %{public}s", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022C4D58);
      }
      sub_1006D3DB0(a3);
      __int16 v43 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationUpdateRequest::updateStep(Step, CFAbsoluteTime, DoneReason)", "%s\n", v43);
      if (v43 != buf) {
        free(v43);
      }
    }
    *(_DWORD *)(a1 + 56) = a2;
    if (a2 == 5)
    {
      *(_DWORD *)(a1 + 60) = a3;
      double v20 = *(double *)(a1 + 64);
      double v19 = *(double *)(a1 + 72);
      double v21 = a4 - v20;
      *(double *)(a1 + 96) = a4 - v20;
      if (v19 <= 0.0) {
        double v22 = -1.0;
      }
      else {
        double v22 = v20 - v19;
      }
      *(double *)(a1 + 72) = v20;
      double v23 = *(double *)(a1 + 80);
      double v24 = ">5s";
      if (v23 == -1.0)
      {
        double v25 = "na";
      }
      else if (v23 <= 0.5)
      {
        double v25 = "0.5s";
      }
      else if (v23 <= 1.0)
      {
        double v25 = "1s";
      }
      else if (v23 <= 2.0)
      {
        double v25 = "2s";
      }
      else if (v23 > 5.0)
      {
        double v25 = ">5s";
      }
      else
      {
        double v25 = "5s";
      }
      double v27 = *(double *)(a1 + 88);
      if (v27 == -1.0)
      {
        int v28 = "na";
      }
      else if (v27 <= 0.5)
      {
        int v28 = "0.5s";
      }
      else if (v27 <= 1.0)
      {
        int v28 = "1s";
      }
      else if (v27 <= 2.0)
      {
        int v28 = "2s";
      }
      else if (v27 > 5.0)
      {
        int v28 = ">5s";
      }
      else
      {
        int v28 = "5s";
      }
      if (v21 <= 5.0) {
        double v24 = "5s";
      }
      if (v21 <= 2.0) {
        double v24 = "2s";
      }
      if (v21 <= 1.0) {
        double v24 = "1s";
      }
      if (v21 <= 0.5) {
        double v24 = "0.5s";
      }
      if (v21 == -1.0) {
        uint64_t v29 = "na";
      }
      else {
        uint64_t v29 = v24;
      }
      if (v22 == -1.0)
      {
        int v30 = "na";
      }
      else if (v22 <= 4.0)
      {
        int v30 = "4s";
      }
      else if (v22 <= 7.0)
      {
        int v30 = "7s";
      }
      else if (v22 <= 60.0)
      {
        int v30 = "1m";
      }
      else if (v22 <= 840.0)
      {
        int v30 = "14m";
      }
      else if (v22 <= 960.0)
      {
        int v30 = "16m";
      }
      else if (v22 <= 1800.0)
      {
        int v30 = "30m";
      }
      else if (v22 > 3600.0)
      {
        int v30 = ">1h";
      }
      else
      {
        int v30 = "1h";
      }
      if (qword_1024193B0 != -1) {
        dispatch_once(&qword_1024193B0, &stru_1022C4D78);
      }
      BOOL v31 = qword_1024193B8;
      if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v32 = v29;
        uint64_t v33 = (void *)(a1 + 120);
        uint64_t v34 = v28;
        if (*(char *)(a1 + 143) < 0) {
          uint64_t v33 = (void *)*v33;
        }
        uint64_t v35 = v25;
        unsigned int v36 = *(_DWORD *)(a1 + 112) - 1;
        if (v36 > 6) {
          int v37 = "none";
        }
        else {
          int v37 = off_1022C4E20[v36];
        }
        BOOL v38 = sub_1006D3DB0(a3);
        int v39 = *(_DWORD *)(a1 + 104);
        if (v39 == 2)
        {
          int v40 = "strong";
        }
        else if (v39)
        {
          int v40 = "weak";
        }
        else if (*(unsigned char *)(a1 + 108))
        {
          int v40 = "empty";
        }
        else
        {
          int v40 = "unknown";
        }
        int v41 = *(unsigned __int8 *)(a1 + 109);
        *(_DWORD *)uint64_t buf = 136448258;
        *(void *)&uint8_t buf[4] = v33;
        *(_WORD *)&unsigned char buf[12] = 2082;
        *(void *)&buf[14] = v37;
        *(_WORD *)&unsigned char buf[22] = 2082;
        int v46 = v38;
        __int16 v47 = 2082;
        uint64_t v48 = v40;
        __int16 v49 = 2082;
        int v50 = v35;
        __int16 v51 = 2082;
        __int16 v52 = v34;
        __int16 v53 = 2082;
        uint64_t v54 = v32;
        __int16 v55 = 2082;
        __int16 v56 = v30;
        __int16 v57 = 1026;
        int v58 = v41;
        _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEBUG, "WlpMetric, request, %{public}s, %{public}s, done, %{public}s, fix, %{public}s, tt, %{public}s, %{public}s, durint, %{public}s, %{public}s, als, %{public}d", buf, 0x58u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193B0 != -1) {
          dispatch_once(&qword_1024193B0, &stru_1022C4D78);
        }
        sub_1006D3DB0(a3);
        BOOL v44 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationUpdateRequest::updateStep(Step, CFAbsoluteTime, DoneReason)", "%s\n", v44);
        if (v44 != buf) {
          free(v44);
        }
      }
      if (*(unsigned char *)(a1 + 110)) {
        AnalyticsSendEventLazy();
      }
    }
    else if (a2 == 1)
    {
      *(double *)(a1 + 64) = a4;
      __asm { FMOV            V0.2D, #-1.0 }
      *(_OWORD *)(a1 + 80) = _Q0;
      *(_DWORD *)(a1 + 104) = 0;
      *(_DWORD *)(a1 + 60) = -1;
      *(void *)(a1 + 96) = 0xBFF0000000000000;
      *(_WORD *)(a1 + 108) = 1;
      *(_DWORD *)(a1 + 112) = *(_DWORD *)a1;
      if (*(char *)(a1 + 39) < 0)
      {
        sub_1000DC48C(buf, *(void **)(a1 + 16), *(void *)(a1 + 24));
      }
      else
      {
        *(_OWORD *)uint64_t buf = *(_OWORD *)(a1 + 16);
        *(void *)&uint8_t buf[16] = *(void *)(a1 + 32);
      }
      int v26 = (void **)(a1 + 120);
      if (*(char *)(a1 + 143) < 0) {
        operator delete(*v26);
      }
      *(_OWORD *)int v26 = *(_OWORD *)buf;
      *(void *)(a1 + 136) = *(void *)&buf[16];
    }
  }
}

const char *sub_1006D3DB0(unsigned int a1)
{
  if (a1 > 0xB) {
    return "na";
  }
  else {
    return off_1022C4DC0[a1];
  }
}

char *sub_1006D3DD4@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[39] < 0) {
    return (char *)sub_1000DC48C((unsigned char *)a2, *((void **)result + 2), *((void *)result + 3));
  }
  *(_OWORD *)a2 = *((_OWORD *)result + 1);
  *(void *)(a2 + 16) = *((void *)result + 4);
  return result;
}

const char *sub_1006D3E00(int a1)
{
  if ((a1 - 1) > 6) {
    return "none";
  }
  else {
    return off_1022C4E20[a1 - 1];
  }
}

NSDictionary *sub_1006D3E28(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v10[0] = @"requester";
  int v3 = (void *)(v2 + 120);
  if (*(char *)(v2 + 143) < 0) {
    int v3 = (void *)*v3;
  }
  v11[0] = +[NSString stringWithUTF8String:v3];
  v10[1] = @"type";
  unsigned int v4 = *(_DWORD *)(v2 + 112) - 1;
  if (v4 > 6) {
    double v5 = "none";
  }
  else {
    double v5 = off_1022C4E20[v4];
  }
  v11[1] = +[NSString stringWithUTF8String:v5];
  _DWORD v10[2] = @"result";
  int32x4_t v11[2] = +[NSString stringWithUTF8String:sub_1006D3DB0(*(_DWORD *)(a1 + 72))];
  void v10[3] = @"fix";
  int v6 = *(_DWORD *)(v2 + 104);
  if (v6 == 2)
  {
    uint64_t v7 = "strong";
  }
  else if (v6)
  {
    uint64_t v7 = "weak";
  }
  else if (*(unsigned char *)(v2 + 108))
  {
    uint64_t v7 = "empty";
  }
  else
  {
    uint64_t v7 = "unknown";
  }
  _OWORD v11[3] = +[NSString stringWithUTF8String:v7];
  void v10[4] = @"ttff";
  void v11[4] = +[NSString stringWithUTF8String:*(void *)(a1 + 40)];
  v10[5] = @"ttsf";
  v11[5] = +[NSString stringWithUTF8String:*(void *)(a1 + 48)];
  void v10[6] = @"duration";
  void v11[6] = +[NSString stringWithUTF8String:*(void *)(a1 + 56)];
  v10[7] = @"interval";
  v11[7] = +[NSString stringWithUTF8String:*(void *)(a1 + 64)];
  void v10[8] = @"als";
  int v8 = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 109)];
  v10[9] = @"daily";
  void v11[8] = v8;
  v11[9] = &off_102392A08;
  return +[NSDictionary dictionaryWithObjects:v11 forKeys:v10 count:10];
}

double sub_1006D4034(uint64_t a1, int a2, double result)
{
  if (a2 >= 1)
  {
    double v3 = *(double *)(a1 + 64);
    if (v3 != -1.0)
    {
      if (*(double *)(a1 + 80) == -1.0)
      {
        *(double *)(a1 + 80) = result - v3;
        *(_DWORD *)(a1 + 104) = a2;
      }
      if (a2 == 2 && *(double *)(a1 + 88) == -1.0)
      {
        uint64_t result = result - v3;
        *(double *)(a1 + 88) = result;
        *(_DWORD *)(a1 + 104) = 2;
      }
    }
  }
  return result;
}

BOOL sub_1006D4090(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 56);
  return v1 && v1 < 5;
}

_DWORD *sub_1006D40A4(_DWORD *result, _DWORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_1006D40B0(unsigned int *a1)
{
  return *a1;
}

uint64_t sub_1006D40B8(uint64_t result, unsigned char *a2)
{
  *(unsigned char *)(result + 8) = *a2;
  return result;
}

uint64_t sub_1006D40C4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

double sub_1006D40CC(uint64_t a1, double *a2)
{
  double result = *a2;
  *(double *)(a1 + 40) = *a2;
  return result;
}

uint64_t sub_1006D40D8(uint64_t result, _DWORD *a2)
{
  *(_DWORD *)(result + 48) = *a2;
  return result;
}

uint64_t sub_1006D40E4(uint64_t result)
{
  return result;
}

const char *sub_1006D40F4(_DWORD *a1)
{
  unsigned int v1 = *a1 - 1;
  if (v1 > 6) {
    return "none";
  }
  else {
    return off_1022C4E20[v1];
  }
}

void sub_1006D4120(unsigned int a1)
{
  if (a1 > 5) {
    unsigned int v1 = "";
  }
  else {
    unsigned int v1 = off_1022C4E58[a1];
  }
  if (qword_1024193B0 != -1) {
    dispatch_once(&qword_1024193B0, &stru_1022C4D78);
  }
  uint64_t v2 = qword_1024193B8;
  if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 136446210;
    double v5 = v1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "@WifiFlow, outcome, %{public}s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193B0 != -1) {
      dispatch_once(&qword_1024193B0, &stru_1022C4D78);
    }
    double v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "static void CLWifiLocationUpdateRequest::logLocationRequestOutcome(CLWifiLocationUpdateRequest::Outcome)", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
}

void sub_1006D42E8(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_1006D4318(id a1)
{
  qword_1024193B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

uint64_t sub_1006D4348(uint64_t a1, char *a2, uint64_t a3, double a4)
{
  double v14 = a4;
  sub_10064DE4C(a1, (uint64_t *)a3, &v14);
  *(void *)a1 = off_1022C4E98;
  sub_101171D90(a1 + 232);
  sub_100134750((void *)(a1 + 272), a2);
  if (*(unsigned char *)(a3 + 8))
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C4ED8);
    }
    uint64_t v7 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 136315138;
      *(void *)&uint8_t buf[4] = a2;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "read only database - not creating bounding boxes, tableName, %s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 == -1)
      {
LABEL_29:
        int v15 = 136315138;
        int v16 = a2;
        __int16 v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "CLWifiLocationDatabase::CLWifiLocationDatabase(const char *, const CLSqliteDatabase::SqliteProperties &, double)", "%s\n", v13);
        if (v13 != (char *)buf) {
          free(v13);
        }
        goto LABEL_14;
      }
LABEL_31:
      dispatch_once(&qword_102419630, &stru_1022C4ED8);
      goto LABEL_29;
    }
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C4ED8);
    }
    int v8 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 136315138;
      *(void *)&uint8_t buf[4] = a2;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "platform does not support WiFi location monitoring - not creating bounding boxes, tableName, %s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 == -1) {
        goto LABEL_29;
      }
      goto LABEL_31;
    }
  }
LABEL_14:
  if (sub_10014C3C0(a1 + 64))
  {
    *(_OWORD *)uint64_t buf = off_1022C4EB0;
    double v9 = (char *)(a1 + 272);
    if (*(char *)(a1 + 295) < 0) {
      double v9 = *(char **)(a1 + 272);
    }
    sub_1005F7B0C(a1 + 64, v9, (const char **)&qword_10247CEA0, (const std::string::value_type **)buf, 0);
    sub_10064DFA4(a1);
  }
  else
  {
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
    }
    double v10 = off_1024195E8;
    if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 136380675;
      *(void *)&uint8_t buf[4] = "CLWifiLocationDatabase";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#Warning Database is not valid; not initializing in %{private}s",
        buf,
        0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024195E0 != -1) {
        dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
      }
      int v15 = 136380675;
      int v16 = "CLWifiLocationDatabase";
      unsigned int v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLWifiLocationDatabase::CLWifiLocationDatabase(const char *, const CLSqliteDatabase::SqliteProperties &, double)", "%s\n", v12);
      if (v12 != (char *)buf) {
        free(v12);
      }
    }
  }
  return a1;
}

void sub_1006D4828(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 295) < 0) {
    operator delete(*v2);
  }
  sub_10064DF48(v1);
  _Unwind_Resume(a1);
}

char *sub_1006D4870@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[295] < 0) {
    return (char *)sub_1000DC48C((unsigned char *)a2, *((void **)result + 34), *((void *)result + 35));
  }
  *(_OWORD *)a2 = *((_OWORD *)result + 17);
  *(void *)(a2 + 16) = *((void *)result + 36);
  return result;
}

void sub_1006D489C(uint64_t a1)
{
  if (sub_10064E538(a1))
  {
    sub_10010F274((uint64_t)buf);
    uint64_t v2 = sub_100132EFC(&v59, (uint64_t)"INSERT OR REPLACE INTO ", 23);
    double v3 = (const char *)(a1 + 272);
    if (*(char *)(a1 + 295) < 0) {
      double v3 = *(const char **)v3;
    }
    size_t v4 = strlen(v3);
    double v5 = sub_100132EFC(v2, (uint64_t)v3, v4);
    int v6 = sub_100132EFC(v5, (uint64_t)"(", 3);
    uint64_t v7 = sub_100132EFC(v6, (uint64_t)"MAC", 3);
    int v8 = sub_100132EFC(v7, (uint64_t)",", 1);
    size_t v9 = strlen("Timestamp");
    double v10 = sub_100132EFC(v8, (uint64_t)"Timestamp", v9);
    int v11 = sub_100132EFC(v10, (uint64_t)",", 1);
    size_t v12 = strlen("Latitude");
    __int16 v13 = sub_100132EFC(v11, (uint64_t)"Latitude", v12);
    double v14 = sub_100132EFC(v13, (uint64_t)",", 1);
    size_t v15 = strlen("Longitude");
    int v16 = sub_100132EFC(v14, (uint64_t)"Longitude", v15);
    uint64_t v17 = sub_100132EFC(v16, (uint64_t)",", 1);
    size_t v18 = strlen("HorizontalAccuracy");
    double v19 = sub_100132EFC(v17, (uint64_t)"HorizontalAccuracy", v18);
    double v20 = sub_100132EFC(v19, (uint64_t)",", 1);
    size_t v21 = strlen("Altitude");
    double v22 = sub_100132EFC(v20, (uint64_t)"Altitude", v21);
    double v23 = sub_100132EFC(v22, (uint64_t)",", 1);
    size_t v24 = strlen("VerticalAccuracy");
    double v25 = sub_100132EFC(v23, (uint64_t)"VerticalAccuracy", v24);
    int v26 = sub_100132EFC(v25, (uint64_t)",", 1);
    size_t v27 = strlen("Speed");
    int v28 = sub_100132EFC(v26, (uint64_t)"Speed", v27);
    uint64_t v29 = sub_100132EFC(v28, (uint64_t)",", 1);
    size_t v30 = strlen("Course");
    BOOL v31 = sub_100132EFC(v29, (uint64_t)"Course", v30);
    uint64_t v32 = sub_100132EFC(v31, (uint64_t)",", 1);
    size_t v33 = strlen("Confidence");
    uint64_t v34 = sub_100132EFC(v32, (uint64_t)"Confidence", v33);
    uint64_t v35 = sub_100132EFC(v34, (uint64_t)",", 1);
    size_t v36 = strlen("Score");
    int v37 = sub_100132EFC(v35, (uint64_t)"Score", v36);
    BOOL v38 = sub_100132EFC(v37, (uint64_t)",", 1);
    size_t v39 = strlen("Reach");
    int v40 = sub_100132EFC(v38, (uint64_t)"Reach", v39);
    int v41 = sub_100132EFC(v40, (uint64_t)",", 1);
    uint64_t v42 = sub_100132EFC(v41, (uint64_t)"Channel", 7);
    __int16 v43 = sub_100132EFC(v42, (uint64_t)",", 1);
    BOOL v44 = sub_100132EFC(v43, (uint64_t)"FenceForeignKey", 15);
    __int16 v45 = sub_100132EFC(v44, (uint64_t)",", 1);
    int v46 = sub_100132EFC(v45, (uint64_t)"InfoMask", 8);
    __int16 v47 = sub_100132EFC(v46, (uint64_t)",", 1);
    size_t v48 = strlen("ZaxisHarvestTraces");
    __int16 v49 = sub_100132EFC(v47, (uint64_t)"ZaxisHarvestTraces", v48);
    int v50 = sub_100132EFC(v49, (uint64_t)") ", 3);
    __int16 v51 = sub_100132EFC(v50, (uint64_t)" VALUES ", 8);
    sub_100132EFC(v51, (uint64_t)"(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);", 34);
    std::stringbuf::str();
    uint64_t v52 = a1 + 64;
    if (v57 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    sub_10014D518(v52, (uint64_t)p_p);
  }
  if (qword_1024195E0 != -1) {
    dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
  }
  uint64_t v54 = off_1024195E8;
  if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call save() without a backing database in CLWifiLocationDatabase!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
    }
    LOWORD(__p) = 0;
    __int16 v55 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationDatabase::save(const CLWifiLocationDatabaseEntry &)", "%s\n", v55);
    if (v55 != (char *)buf) {
      free(v55);
    }
  }
}

void sub_1006D517C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18)
{
  __cxa_free_exception(v18);
  if (a17) {
    (*(void (**)(uint64_t))(*(void *)a17 + 8))(a17);
  }
  sub_101A129A8((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_1006D5208(std::runtime_error *this)
{
  this->__vftable = (std::runtime_error_vtbl *)off_1022C4F28;
  if (SHIBYTE(this[4].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }
  if (SHIBYTE(this[2].__vftable) < 0) {
    operator delete(this[1].__vftable);
  }

  std::runtime_error::~runtime_error(this);
}

void sub_1006D5278(uint64_t a1, unint64_t a2)
{
  if (sub_10064E538(a1))
  {
    if ((a2 & 0x8000000000000000) == 0 && sub_1006D5CC0(a1) > a2)
    {
      long long __p = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      *((unsigned char *)&v27.__r_.__value_.__s + 23) = 18;
      strcpy((char *)&v27, "SELECT ROWID FROM ");
      size_t v4 = (const std::string::value_type *)(a1 + 272);
      if (*(char *)(a1 + 295) < 0) {
        size_t v4 = *(const std::string::value_type **)(a1 + 272);
      }
      double v5 = std::string::append(&v27, v4);
      long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
      v28.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v6;
      v5->__r_.__value_.__l.__size_ = 0;
      v5->__r_.__value_.__r.__words[2] = 0;
      v5->__r_.__value_.__r.__words[0] = 0;
      uint64_t v7 = std::string::append(&v28, " WHERE ");
      long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
      v29.__r_.__value_.__r.__words[2] = v7->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v8;
      v7->__r_.__value_.__l.__size_ = 0;
      v7->__r_.__value_.__r.__words[2] = 0;
      v7->__r_.__value_.__r.__words[0] = 0;
      size_t v9 = std::string::append(&v29, "FenceForeignKey");
      long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
      v30.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v10;
      v9->__r_.__value_.__l.__size_ = 0;
      v9->__r_.__value_.__r.__words[2] = 0;
      v9->__r_.__value_.__r.__words[0] = 0;
      int v11 = std::string::append(&v30, " =");
      long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
      v31.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v12;
      v11->__r_.__value_.__l.__size_ = 0;
      v11->__r_.__value_.__r.__words[2] = 0;
      v11->__r_.__value_.__r.__words[0] = 0;
      std::to_string(&v26, -1);
      if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        __int16 v13 = &v26;
      }
      else {
        __int16 v13 = (std::string *)v26.__r_.__value_.__r.__words[0];
      }
      if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v26.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v26.__r_.__value_.__l.__size_;
      }
      size_t v15 = std::string::append(&v31, (const std::string::value_type *)v13, size);
      long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
      v32.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v16;
      v15->__r_.__value_.__l.__size_ = 0;
      v15->__r_.__value_.__r.__words[2] = 0;
      v15->__r_.__value_.__r.__words[0] = 0;
      uint64_t v17 = std::string::append(&v32, " ORDER BY ");
      long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
      v33.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v18;
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      double v19 = std::string::append(&v33, "Timestamp");
      long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
      v34.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v20;
      v19->__r_.__value_.__l.__size_ = 0;
      v19->__r_.__value_.__r.__words[2] = 0;
      v19->__r_.__value_.__r.__words[0] = 0;
      size_t v21 = std::string::append(&v34, " ASC LIMIT ?");
      long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
      int64_t v39 = v21->__r_.__value_.__r.__words[2];
      long long buf = v22;
      v21->__r_.__value_.__l.__size_ = 0;
      v21->__r_.__value_.__r.__words[2] = 0;
      v21->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v34.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v33.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v32.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v26.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v31.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v30.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v29.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v28.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v27.__r_.__value_.__l.__data_);
      }
      if (v39 >= 0) {
        p_long long buf = &buf;
      }
      else {
        p_long long buf = (long long *)buf;
      }
      sub_10014D518(a1 + 64, (uint64_t)p_buf);
    }
  }
  else
  {
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
    }
    size_t v24 = off_1024195E8;
    if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_DEBUG))
    {
      LOWORD(buf) = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call truncatePastLimit() without a backing database in CLWifiLocationDatabase!", (uint8_t *)&buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_1024195E0 != -1) {
        dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
      }
      LOWORD(__p) = 0;
      double v25 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationDatabase::truncatePastLimit(int64_t)", "%s\n", v25);
      if (v25 != (char *)&buf) {
        free(v25);
      }
    }
  }
}

void sub_1006D5AF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *__p,uint64_t a46,int a47,__int16 a48,char a49,char a50,uint64_t a51,void *a52)
{
  if (v52) {
    (*(void (**)(uint64_t))(*(void *)v52 + 8))(v52);
  }
  if (a50 < 0) {
    operator delete(__p);
  }
  if (a52) {
    operator delete(a52);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1006D5CC0(uint64_t a1)
{
  if (sub_10064E538(a1))
  {
    sub_10010F274((uint64_t)&v10);
    uint64_t v2 = sub_100132EFC(&v11, (uint64_t)"SELECT COUNT(*) FROM ", 21);
    double v3 = (const char *)(a1 + 272);
    if (*(char *)(a1 + 295) < 0) {
      double v3 = *(const char **)v3;
    }
    size_t v4 = strlen(v3);
    double v5 = sub_100132EFC(v2, (uint64_t)v3, v4);
    sub_100132EFC(v5, (uint64_t)";", 1);
    std::stringbuf::str();
    if (v13 >= 0) {
      long long v6 = __p;
    }
    else {
      long long v6 = (void **)__p[0];
    }
    sub_10014D518(a1 + 64, (uint64_t)v6);
  }
  if (qword_1024195E0 != -1) {
    dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
  }
  uint64_t v7 = off_1024195E8;
  if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(__p[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call count() without a backing database in CLWifiLocationDatabase!", (uint8_t *)__p, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
    }
    LOWORD(v10) = 0;
    size_t v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "uint32_t CLWifiLocationDatabase::count()", "%s\n", v9);
    if (v9 != (char *)__p) {
      free(v9);
    }
  }
  return 0;
}

void sub_1006D61B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,void *__p,uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  if (v54) {
    (*(void (**)(uint64_t))(*(void *)v54 + 8))(v54);
  }
  sub_101A129A8((uint64_t)&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_1006D6228(uint64_t a1)
{
  if (sub_10064E538(a1))
  {
    *((unsigned char *)&v21.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&v21, "SELECT ");
    sub_1006D66FC((uint64_t)__p);
    if ((v20 & 0x80u) == 0) {
      uint64_t v2 = __p;
    }
    else {
      uint64_t v2 = (void **)__p[0];
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v3 = v20;
    }
    else {
      std::string::size_type v3 = (std::string::size_type)__p[1];
    }
    size_t v4 = std::string::append(&v21, (const std::string::value_type *)v2, v3);
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v22.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    long long v6 = std::string::append(&v22, " FROM ");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v23.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    int v8 = *(char *)(a1 + 295);
    if (v8 >= 0) {
      size_t v9 = (const std::string::value_type *)(a1 + 272);
    }
    else {
      size_t v9 = *(const std::string::value_type **)(a1 + 272);
    }
    if (v8 >= 0) {
      std::string::size_type v10 = *(unsigned __int8 *)(a1 + 295);
    }
    else {
      std::string::size_type v10 = *(void *)(a1 + 280);
    }
    uint64_t v11 = std::string::append(&v23, v9, v10);
    long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v24.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    char v13 = std::string::append(&v24, " WHERE ROWID=?");
    long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    int64_t v26 = v13->__r_.__value_.__r.__words[2];
    *(_OWORD *)long long buf = v14;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v23.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
    if ((char)v20 < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v21.__r_.__value_.__l.__data_);
    }
    if (v26 >= 0) {
      size_t v15 = buf;
    }
    else {
      size_t v15 = *(uint8_t **)buf;
    }
    sub_10014D518(a1 + 64, (uint64_t)v15);
  }
  if (qword_1024195E0 != -1) {
    dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
  }
  long long v16 = off_1024195E8;
  if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call getLocation() without a backing database in CLWifiLocationDatabase!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
    }
    LOWORD(v24.__r_.__value_.__l.__data_) = 0;
    long long v18 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWifiLocationDatabase::getLocation(sqlite3_int64, WifiData &) const", "%s\n", v18);
    if (v18 != (char *)buf) {
      free(v18);
    }
  }
  return 0;
}

void sub_1006D6628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,void *__p,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a37) {
    (*(void (**)(void *))(*(void *)a37 + 8))(a37);
  }
  if (a49 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006D66FC(uint64_t a1@<X8>)
{
  uint64_t v2 = 0;
  v11[0] = "MAC";
  v11[1] = "Channel";
  int32x4_t v11[2] = "InfoMask";
  _OWORD v11[3] = "Score";
  void v11[4] = "Reach";
  v11[5] = "FenceForeignKey";
  void v11[6] = "ZaxisHarvestTraces";
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  do
  {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 23);
    if ((v3 & 0x80u) != 0) {
      uint64_t v3 = *(void *)(a1 + 8);
    }
    if (v3)
    {
      *((unsigned char *)&v8.__r_.__value_.__s + 23) = 2;
      strcpy((char *)&v8, ", ");
      size_t v4 = std::string::append(&v8, (const std::string::value_type *)v11[v2]);
      long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      int64_t v10 = v4->__r_.__value_.__r.__words[2];
      *(_OWORD *)long long __p = v5;
      v4->__r_.__value_.__l.__size_ = 0;
      v4->__r_.__value_.__r.__words[2] = 0;
      v4->__r_.__value_.__r.__words[0] = 0;
      if (v10 >= 0) {
        long long v6 = __p;
      }
      else {
        long long v6 = (void **)__p[0];
      }
      if (v10 >= 0) {
        std::string::size_type v7 = HIBYTE(v10);
      }
      else {
        std::string::size_type v7 = (std::string::size_type)__p[1];
      }
      std::string::append((std::string *)a1, (const std::string::value_type *)v6, v7);
      if (SHIBYTE(v10) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v8.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      std::string::append((std::string *)a1, (const std::string::value_type *)v11[v2]);
    }
    ++v2;
  }
  while (v2 != 7);
}

void sub_1006D6874(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (*(char *)(v21 + 23) < 0) {
    operator delete(*(void **)v21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006D68C0(uint64_t a1)
{
  if (sub_10064E538(a1))
  {
    v24.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
    *(_OWORD *)&v24.__r_.__value_.__r.__words[1] = xmmword_101D04970;
    strcpy(v24.__r_.__value_.__l.__data_, "INSERT OR REPLACE INTO ");
    int v2 = *(char *)(a1 + 295);
    if (v2 >= 0) {
      uint64_t v3 = (const std::string::value_type *)(a1 + 272);
    }
    else {
      uint64_t v3 = *(const std::string::value_type **)(a1 + 272);
    }
    if (v2 >= 0) {
      std::string::size_type v4 = *(unsigned __int8 *)(a1 + 295);
    }
    else {
      std::string::size_type v4 = *(void *)(a1 + 280);
    }
    long long v5 = std::string::append(&v24, v3, v4);
    long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    v25.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    char v23 = 2;
    strcpy(__s, " (");
    std::string::size_type v7 = std::string::append(&v25, __s, 2uLL);
    long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
    v26.__r_.__value_.__r.__words[2] = v7->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v8;
    v7->__r_.__value_.__l.__size_ = 0;
    v7->__r_.__value_.__r.__words[2] = 0;
    v7->__r_.__value_.__r.__words[0] = 0;
    sub_1006D66FC((uint64_t)__p);
    if ((v21 & 0x80u) == 0) {
      size_t v9 = __p;
    }
    else {
      size_t v9 = (void **)__p[0];
    }
    if ((v21 & 0x80u) == 0) {
      std::string::size_type v10 = v21;
    }
    else {
      std::string::size_type v10 = (std::string::size_type)__p[1];
    }
    uint64_t v11 = std::string::append(&v26, (const std::string::value_type *)v9, v10);
    long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v27.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    char v13 = (char *)operator new(0x20uLL);
    strcpy(v13, ") VALUES (?,?,?,?,?,?,?)");
    long long v14 = std::string::append(&v27, v13, 0x18uLL);
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    int64_t v29 = v14->__r_.__value_.__r.__words[2];
    long long buf = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    operator delete(v13);
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v27.__r_.__value_.__l.__data_);
    }
    if ((char)v21 < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v26.__r_.__value_.__l.__data_);
    }
    if (v23 < 0) {
      operator delete(*(void **)__s);
    }
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v25.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
    if (v29 >= 0) {
      p_long long buf = &buf;
    }
    else {
      p_long long buf = (long long *)buf;
    }
    sub_10014D518(a1 + 64, (uint64_t)p_buf);
  }
  if (qword_1024195E0 != -1) {
    dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
  }
  uint64_t v17 = off_1024195E8;
  if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(buf) = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call setLocation() without a backing database in CLWifiLocationDatabase!", (uint8_t *)&buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
    }
    LOWORD(v27.__r_.__value_.__l.__data_) = 0;
    double v19 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWifiLocationDatabase::setLocation(const WifiData &, const CLDaemonLocation &)", "%s\n", v19);
    if (v19 != (char *)&buf) {
      free(v19);
    }
  }
  return 0;
}

void sub_1006D6D7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56)
{
  if (v56) {
    (*(void (**)(uint64_t))(*(void *)v56 + 8))(v56);
  }
  if (a56 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006D6E6C(uint64_t a1)
{
  if (sub_10064E538(a1))
  {
    sub_10010F274((uint64_t)buf);
    int v2 = sub_100132EFC(&v22, (uint64_t)"UPDATE OR IGNORE ", 17);
    uint64_t v3 = (const char *)(a1 + 272);
    if (*(char *)(a1 + 295) < 0) {
      uint64_t v3 = *(const char **)v3;
    }
    size_t v4 = strlen(v3);
    long long v5 = sub_100132EFC(v2, (uint64_t)v3, v4);
    long long v6 = sub_100132EFC(v5, (uint64_t)" SET ", 5);
    size_t v7 = strlen("Score");
    long long v8 = sub_100132EFC(v6, (uint64_t)"Score", v7);
    size_t v9 = sub_100132EFC(v8, (uint64_t)" = ", 3);
    size_t v10 = strlen("Score");
    uint64_t v11 = sub_100132EFC(v9, (uint64_t)"Score", v10);
    long long v12 = sub_100132EFC(v11, (uint64_t)" / 2.0 ", 7);
    char v13 = sub_100132EFC(v12, (uint64_t)" WHERE ", 7);
    long long v14 = sub_100132EFC(v13, (uint64_t)"MAC", 3);
    sub_100132EFC(v14, (uint64_t)" = ? ", 5);
    std::stringbuf::str();
    if (v20 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    sub_10014D518(a1 + 64, (uint64_t)p_p);
  }
  if (qword_1024195E0 != -1) {
    dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
  }
  long long v16 = off_1024195E8;
  if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call downgradeAPByScore() without a backing database in CLWifiLocationDatabase!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
    }
    LOWORD(__p) = 0;
    long long v18 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLWifiLocationDatabase::downgradeAPByScore(const CLMacAddress &)", "%s\n", v18);
    if (v18 != (char *)buf) {
      free(v18);
    }
  }
  return 0;
}

void sub_1006D72D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_1006D7320(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (sub_10064E538(a1))
  {
    sub_10010F274((uint64_t)&v46);
    size_t v4 = sub_100132EFC(&v47, (uint64_t)"SELECT ", 7);
    long long v5 = sub_100132EFC(v4, (uint64_t)"MAC", 3);
    long long v6 = sub_100132EFC(v5, (uint64_t)" , ", 3);
    size_t v7 = strlen("Latitude");
    long long v8 = sub_100132EFC(v6, (uint64_t)"Latitude", v7);
    size_t v9 = sub_100132EFC(v8, (uint64_t)" , ", 3);
    size_t v10 = strlen("Longitude");
    uint64_t v11 = sub_100132EFC(v9, (uint64_t)"Longitude", v10);
    long long v12 = sub_100132EFC(v11, (uint64_t)" , ", 3);
    size_t v13 = strlen("Altitude");
    long long v14 = sub_100132EFC(v12, (uint64_t)"Altitude", v13);
    long long v15 = sub_100132EFC(v14, (uint64_t)" , ", 3);
    size_t v16 = strlen("HorizontalAccuracy");
    uint64_t v17 = sub_100132EFC(v15, (uint64_t)"HorizontalAccuracy", v16);
    long long v18 = sub_100132EFC(v17, (uint64_t)" , ", 3);
    size_t v19 = strlen("VerticalAccuracy");
    char v20 = sub_100132EFC(v18, (uint64_t)"VerticalAccuracy", v19);
    unsigned __int8 v21 = sub_100132EFC(v20, (uint64_t)" , ", 3);
    size_t v22 = strlen("Score");
    char v23 = sub_100132EFC(v21, (uint64_t)"Score", v22);
    std::string v24 = sub_100132EFC(v23, (uint64_t)" , ", 3);
    size_t v25 = strlen("Reach");
    std::string v26 = sub_100132EFC(v24, (uint64_t)"Reach", v25);
    std::string v27 = sub_100132EFC(v26, (uint64_t)" , ", 3);
    std::string v28 = sub_100132EFC(v27, (uint64_t)"Channel", 7);
    int64_t v29 = sub_100132EFC(v28, (uint64_t)" , ", 3);
    std::string v30 = sub_100132EFC(v29, (uint64_t)"InfoMask", 8);
    std::string v31 = sub_100132EFC(v30, (uint64_t)" , ", 3);
    size_t v32 = strlen("Timestamp");
    std::string v33 = sub_100132EFC(v31, (uint64_t)"Timestamp", v32);
    std::string v34 = sub_100132EFC(v33, (uint64_t)" FROM ", 6);
    int v35 = *(char *)(a1 + 295);
    if (v35 >= 0) {
      uint64_t v36 = a1 + 272;
    }
    else {
      uint64_t v36 = *(void *)(a1 + 272);
    }
    if (v35 >= 0) {
      uint64_t v37 = *(unsigned __int8 *)(a1 + 295);
    }
    else {
      uint64_t v37 = *(void *)(a1 + 280);
    }
    BOOL v38 = sub_100132EFC(v34, v36, v37);
    int64_t v39 = sub_100132EFC(v38, (uint64_t)" WHERE ", 7);
    int v40 = sub_100132EFC(v39, (uint64_t)"FenceForeignKey", 15);
    int v41 = sub_100132EFC(v40, (uint64_t)" =?", 3);
    sub_100132EFC(v41, (uint64_t)" ORDER BY Score DESC LIMIT ", 27);
    uint64_t v42 = (void *)std::ostream::operator<<();
    sub_100132EFC(v42, (uint64_t)";", 1);
    std::stringbuf::str();
    if (v49 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    sub_10014D518(a1 + 64, (uint64_t)p_p);
  }
  if (qword_1024195E0 != -1) {
    dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
  }
  BOOL v44 = off_1024195E8;
  if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_DEBUG))
  {
    LOWORD(__p) = 0;
    _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call getNearbyWifisForFence() without a backing database in CLWifiLocationDatabase!", (uint8_t *)&__p, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&__p, 0x65CuLL);
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
    }
    LOWORD(v46) = 0;
    __int16 v45 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<CLWifiAPLocation> CLWifiLocationDatabase::getNearbyWifisForFence(double, double, double, int, int, BOOL, double)", "%s\n", v45);
    if (v45 != (char *)&__p) {
      free(v45);
    }
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
}

void sub_1006D817C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  char v20 = *(void **)v17;
  if (*(void *)v17)
  {
    *(void *)(v17 + 8) = v20;
    operator delete(v20);
  }
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
  }
  sub_101A129A8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1006D825C(uint64_t a1)
{
  int v2 = *(char **)a1;
  int64x2_t v3 = *(int64x2_t *)(a1 + 8);
  int64x2_t v4 = vshrq_n_s64(vsubq_s64(v3, vdupq_n_s64((unint64_t)v2)), 5uLL);
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * v4.i64[0];
  unint64_t v6 = v5;
  if (0xAAAAAAAAAAAAAAABLL * v4.i64[1] <= v5) {
    return;
  }
  if ((char *)v3.i64[0] == v2)
  {
    uint64_t v11 = 0;
    uint64_t v9 = 96 * v5;
    goto LABEL_8;
  }
  size_t v7 = (char *)sub_100642EA8(a1 + 16, v5);
  int v2 = *(char **)a1;
  long long v8 = *(char **)(a1 + 8);
  uint64_t v9 = (uint64_t)&v7[96 * v6];
  uint64_t v11 = &v7[96 * v10];
  if (v8 == *(char **)a1)
  {
LABEL_8:
    uint64_t v12 = v9;
    goto LABEL_9;
  }
  uint64_t v12 = v9;
  do
  {
    long long v13 = *((_OWORD *)v8 - 5);
    *(_OWORD *)(v12 - 96) = *((_OWORD *)v8 - 6);
    *(_OWORD *)(v12 - 80) = v13;
    long long v14 = *((_OWORD *)v8 - 4);
    long long v15 = *((_OWORD *)v8 - 3);
    long long v16 = *((_OWORD *)v8 - 1);
    *(_OWORD *)(v12 - 32) = *((_OWORD *)v8 - 2);
    *(_OWORD *)(v12 - 16) = v16;
    *(_OWORD *)(v12 - 64) = v14;
    *(_OWORD *)(v12 - ++*(_DWORD *)(result + 48) = v15;
    v12 -= 96;
    v8 -= 96;
  }
  while (v8 != v2);
  int v2 = *(char **)a1;
LABEL_9:
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v11;
  if (v2)
  {
    operator delete(v2);
  }
}

void sub_1006D836C(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  *a2 = 0;
  a2[192] = 0;
  if (sub_10064E538(a1))
  {
    sub_10010F274((uint64_t)buf);
    int64x2_t v3 = sub_100132EFC(&v47, (uint64_t)"SELECT ", 7);
    int64x2_t v4 = sub_100132EFC(v3, (uint64_t)"MAC", 3);
    unint64_t v5 = sub_100132EFC(v4, (uint64_t)" , ", 3);
    size_t v6 = strlen("Latitude");
    size_t v7 = sub_100132EFC(v5, (uint64_t)"Latitude", v6);
    long long v8 = sub_100132EFC(v7, (uint64_t)" , ", 3);
    size_t v9 = strlen("Longitude");
    uint64_t v10 = sub_100132EFC(v8, (uint64_t)"Longitude", v9);
    uint64_t v11 = sub_100132EFC(v10, (uint64_t)" , ", 3);
    size_t v12 = strlen("Altitude");
    long long v13 = sub_100132EFC(v11, (uint64_t)"Altitude", v12);
    long long v14 = sub_100132EFC(v13, (uint64_t)" , ", 3);
    size_t v15 = strlen("HorizontalAccuracy");
    long long v16 = sub_100132EFC(v14, (uint64_t)"HorizontalAccuracy", v15);
    uint64_t v17 = sub_100132EFC(v16, (uint64_t)" , ", 3);
    size_t v18 = strlen("VerticalAccuracy");
    size_t v19 = sub_100132EFC(v17, (uint64_t)"VerticalAccuracy", v18);
    char v20 = sub_100132EFC(v19, (uint64_t)" , ", 3);
    size_t v21 = strlen("Score");
    size_t v22 = sub_100132EFC(v20, (uint64_t)"Score", v21);
    char v23 = sub_100132EFC(v22, (uint64_t)" , ", 3);
    size_t v24 = strlen("Reach");
    size_t v25 = sub_100132EFC(v23, (uint64_t)"Reach", v24);
    std::string v26 = sub_100132EFC(v25, (uint64_t)" , ", 3);
    std::string v27 = sub_100132EFC(v26, (uint64_t)"Channel", 7);
    std::string v28 = sub_100132EFC(v27, (uint64_t)" , ", 3);
    int64_t v29 = sub_100132EFC(v28, (uint64_t)"InfoMask", 8);
    std::string v30 = sub_100132EFC(v29, (uint64_t)" , ", 3);
    size_t v31 = strlen("Timestamp");
    sub_100132EFC(v30, (uint64_t)"Timestamp", v31);
    if (!*(unsigned char *)(a1 + 16))
    {
      size_t v32 = sub_100132EFC(&v47, (uint64_t)" , ", 3);
      size_t v33 = strlen("ZaxisHarvestTraces");
      sub_100132EFC(v32, (uint64_t)"ZaxisHarvestTraces", v33);
    }
    std::string v34 = sub_100132EFC(&v47, (uint64_t)" FROM ", 6);
    int v35 = *(char *)(a1 + 295);
    if (v35 >= 0) {
      uint64_t v36 = a1 + 272;
    }
    else {
      uint64_t v36 = *(void *)(a1 + 272);
    }
    if (v35 >= 0) {
      uint64_t v37 = *(unsigned __int8 *)(a1 + 295);
    }
    else {
      uint64_t v37 = *(void *)(a1 + 280);
    }
    BOOL v38 = sub_100132EFC(v34, v36, v37);
    int64_t v39 = sub_100132EFC(v38, (uint64_t)" WHERE ", 7);
    int v40 = sub_100132EFC(v39, (uint64_t)"MAC", 3);
    sub_100132EFC(v40, (uint64_t)" = ? ", 5);
    std::stringbuf::str();
    if (v45 >= 0) {
      int v41 = __p;
    }
    else {
      int v41 = (void **)__p[0];
    }
    sub_10014D518(a1 + 64, (uint64_t)v41);
  }
  if (qword_1024195E0 != -1) {
    dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
  }
  uint64_t v42 = off_1024195E8;
  if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call findByMacAddress() without a backing database in CLWifiLocationDatabase!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
    }
    LOWORD(__p[0]) = 0;
    __int16 v43 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::optional<CLWifiLocationDatabaseEntry> CLWifiLocationDatabase::findByMacAddress(const CLMacAddress &)", "%s\n", v43);
    if (v43 != (char *)buf) {
      free(v43);
    }
  }
}

void sub_1006D8C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a36) {
    (*(void (**)(uint64_t))(*(void *)a36 + 8))(a36);
  }
  sub_101A129A8((uint64_t)&a37);
  _Unwind_Resume(a1);
}

void sub_1006D8CE0(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (sub_10064E538(a1))
  {
    sub_10010F274((uint64_t)buf);
    int64x2_t v3 = sub_100132EFC(&v45, (uint64_t)"SELECT ", 7);
    int64x2_t v4 = sub_100132EFC(v3, (uint64_t)"MAC", 3);
    unint64_t v5 = sub_100132EFC(v4, (uint64_t)" , ", 3);
    size_t v6 = strlen("Latitude");
    size_t v7 = sub_100132EFC(v5, (uint64_t)"Latitude", v6);
    long long v8 = sub_100132EFC(v7, (uint64_t)" , ", 3);
    size_t v9 = strlen("Longitude");
    uint64_t v10 = sub_100132EFC(v8, (uint64_t)"Longitude", v9);
    uint64_t v11 = sub_100132EFC(v10, (uint64_t)" , ", 3);
    size_t v12 = strlen("Altitude");
    long long v13 = sub_100132EFC(v11, (uint64_t)"Altitude", v12);
    long long v14 = sub_100132EFC(v13, (uint64_t)" , ", 3);
    size_t v15 = strlen("HorizontalAccuracy");
    long long v16 = sub_100132EFC(v14, (uint64_t)"HorizontalAccuracy", v15);
    uint64_t v17 = sub_100132EFC(v16, (uint64_t)" , ", 3);
    size_t v18 = strlen("VerticalAccuracy");
    size_t v19 = sub_100132EFC(v17, (uint64_t)"VerticalAccuracy", v18);
    char v20 = sub_100132EFC(v19, (uint64_t)" , ", 3);
    size_t v21 = strlen("Score");
    size_t v22 = sub_100132EFC(v20, (uint64_t)"Score", v21);
    char v23 = sub_100132EFC(v22, (uint64_t)" , ", 3);
    size_t v24 = strlen("Reach");
    size_t v25 = sub_100132EFC(v23, (uint64_t)"Reach", v24);
    std::string v26 = sub_100132EFC(v25, (uint64_t)" , ", 3);
    std::string v27 = sub_100132EFC(v26, (uint64_t)"Channel", 7);
    std::string v28 = sub_100132EFC(v27, (uint64_t)" , ", 3);
    int64_t v29 = sub_100132EFC(v28, (uint64_t)"InfoMask", 8);
    std::string v30 = sub_100132EFC(v29, (uint64_t)" , ", 3);
    size_t v31 = strlen("Timestamp");
    sub_100132EFC(v30, (uint64_t)"Timestamp", v31);
    if (!*(unsigned char *)(a1 + 16))
    {
      size_t v32 = sub_100132EFC(&v45, (uint64_t)" , ", 3);
      size_t v33 = strlen("ZaxisHarvestTraces");
      sub_100132EFC(v32, (uint64_t)"ZaxisHarvestTraces", v33);
    }
    std::string v34 = sub_100132EFC(&v45, (uint64_t)" FROM ", 6);
    int v35 = *(char *)(a1 + 295);
    if (v35 >= 0) {
      uint64_t v36 = a1 + 272;
    }
    else {
      uint64_t v36 = *(void *)(a1 + 272);
    }
    if (v35 >= 0) {
      uint64_t v37 = *(unsigned __int8 *)(a1 + 295);
    }
    else {
      uint64_t v37 = *(void *)(a1 + 280);
    }
    sub_100132EFC(v34, v36, v37);
    std::stringbuf::str();
    if (v43 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    sub_10014D518(a1 + 64, (uint64_t)p_p);
  }
  if (qword_1024195E0 != -1) {
    dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
  }
  int64_t v39 = off_1024195E8;
  if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call getAllEntries() without a backing database in CLWifiLocationDatabase!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
    }
    LOWORD(__p) = 0;
    int v40 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<CLWifiLocationDatabaseEntry> CLWifiLocationDatabase::getAllEntries()", "%s\n", v40);
    if (v40 != (char *)buf) {
      free(v40);
    }
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
}

void sub_1006D9608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,char a26)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a26);
  _Unwind_Resume(a1);
}

void sub_1006D96B0(uint64_t a1)
{
  if (sub_10064E538(a1))
  {
    sub_10010F274((uint64_t)buf);
    int v2 = sub_100132EFC(&v17, (uint64_t)"DELETE FROM ", 12);
    int v3 = *(char *)(a1 + 295);
    if (v3 >= 0) {
      uint64_t v4 = a1 + 272;
    }
    else {
      uint64_t v4 = *(void *)(a1 + 272);
    }
    if (v3 >= 0) {
      uint64_t v5 = *(unsigned __int8 *)(a1 + 295);
    }
    else {
      uint64_t v5 = *(void *)(a1 + 280);
    }
    size_t v6 = sub_100132EFC(v2, v4, v5);
    size_t v7 = sub_100132EFC(v6, (uint64_t)" WHERE ", 7);
    long long v8 = sub_100132EFC(v7, (uint64_t)"MAC", 3);
    size_t v9 = sub_100132EFC(v8, (uint64_t)" IS NULL OR ", 12);
    uint64_t v10 = sub_100132EFC(v9, (uint64_t)"MAC", 3);
    sub_100132EFC(v10, (uint64_t)" = '' ", 6);
    std::stringbuf::str();
    if (v15 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    sub_10014D518(a1 + 64, (uint64_t)p_p);
  }
  if (qword_1024195E0 != -1) {
    dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
  }
  size_t v12 = off_1024195E8;
  if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call deleteWhereMacAddressIsEmpty() without a backing database in CLWifiLocationDatabase!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
    }
    LOWORD(__p) = 0;
    long long v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationDatabase::deleteWhereMacAddressIsEmpty()", "%s\n", v13);
    if (v13 != (char *)buf) {
      free(v13);
    }
  }
}

void sub_1006D9A7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, char a18)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_1006D9AC8(uint64_t a1)
{
  if (sub_10064E538(a1))
  {
    sub_10010F274((uint64_t)buf);
    int v2 = sub_100132EFC(&v15, (uint64_t)"DELETE FROM ", 12);
    int v3 = *(char *)(a1 + 295);
    if (v3 >= 0) {
      uint64_t v4 = a1 + 272;
    }
    else {
      uint64_t v4 = *(void *)(a1 + 272);
    }
    if (v3 >= 0) {
      uint64_t v5 = *(unsigned __int8 *)(a1 + 295);
    }
    else {
      uint64_t v5 = *(void *)(a1 + 280);
    }
    size_t v6 = sub_100132EFC(v2, v4, v5);
    size_t v7 = sub_100132EFC(v6, (uint64_t)" WHERE ", 7);
    long long v8 = sub_100132EFC(v7, (uint64_t)"MAC", 3);
    sub_100132EFC(v8, (uint64_t)" = ? ", 5);
    std::stringbuf::str();
    if (v13 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    sub_10014D518(a1 + 64, (uint64_t)p_p);
  }
  if (qword_1024195E0 != -1) {
    dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
  }
  uint64_t v10 = off_1024195E8;
  if (os_log_type_enabled((os_log_t)off_1024195E8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "#Warning Attempt to call deleteByMac() without a backing database in CLWifiLocationDatabase!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024195E0 != -1) {
      dispatch_once(&qword_1024195E0, &stru_1022C4EF8);
    }
    LOWORD(__p) = 0;
    uint64_t v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiLocationDatabase::deleteByMac(const CLMacAddress &)", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
  }
}

void sub_1006D9ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a20);
  _Unwind_Resume(a1);
}

uint64_t sub_1006D9F24(uint64_t a1)
{
  *(void *)a1 = off_1022C4E98;
  if (*(char *)(a1 + 295) < 0) {
    operator delete(*(void **)(a1 + 272));
  }

  return sub_10064DF48(a1);
}

void sub_1006D9F84(uint64_t a1)
{
  *(void *)a1 = off_1022C4E98;
  if (*(char *)(a1 + 295) < 0) {
    operator delete(*(void **)(a1 + 272));
  }
  sub_10064DF48(a1);

  operator delete();
}

void sub_1006D9FF8(id a1)
{
  qword_102419638 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_1006DA028(id a1)
{
  off_1024195E8 = os_log_create("com.apple.locationd.Utility", "Database");
}

void sub_1006DA058(std::runtime_error *this)
{
  this->__vftable = (std::runtime_error_vtbl *)off_1022C4F28;
  if (SHIBYTE(this[4].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }
  if (SHIBYTE(this[2].__vftable) < 0) {
    operator delete(this[1].__vftable);
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_1006DA0DC(id a1)
{
  qword_1024193C8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

void sub_1006DA10C(id a1)
{
  qword_1024193B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

BOOL sub_1006DA148()
{
  int v2 = *(NSObject **)(v0 + 1512);
  return os_log_type_enabled(v2, OS_LOG_TYPE_INFO);
}

void sub_1006DA164()
{
  qword_10247CEA0 = (uint64_t)"MAC";
  dword_10247CEA8 = 1;
  word_10247CEAC = 1;
  byte_10247CEB0 = 0;
  byte_10247CEC8 = 0;
  qword_10247CED0 = (uint64_t)"Channel";
  dword_10247CED8 = 1;
  word_10247CEDC = 0;
  byte_10247CEE0 = 0;
  byte_10247CEF8 = 0;
  qword_10247CF00 = (uint64_t)"InfoMask";
  dword_10247CF08 = 1;
  word_10247CF0C = 0;
  byte_10247CF10 = 0;
  byte_10247CF28 = 0;
  qword_10247CF30 = (uint64_t)"Timestamp";
  dword_10247CF38 = 2;
  word_10247CF3C = 0;
  byte_10247CF40 = 0;
  byte_10247CF58 = 0;
  qword_10247CF60 = (uint64_t)"Latitude";
  dword_10247CF68 = 2;
  word_10247CF6C = 0;
  byte_10247CF70 = 0;
  byte_10247CF88 = 0;
  qword_10247CF90 = (uint64_t)"Longitude";
  dword_10247CF98 = 2;
  word_10247CF9C = 0;
  byte_10247CFA0 = 0;
  byte_10247CFB8 = 0;
  qword_10247CFC0 = (uint64_t)"HorizontalAccuracy";
  dword_10247CFC8 = 2;
  word_10247CFCC = 0;
  byte_10247CFD0 = 0;
  byte_10247CFE8 = 0;
  qword_10247CFF0 = (uint64_t)"Altitude";
  dword_10247CFF8 = 2;
  word_10247CFFC = 0;
  byte_10247D000 = 0;
  byte_10247D018 = 0;
  qword_10247D020 = (uint64_t)"VerticalAccuracy";
  dword_10247D028 = 2;
  word_10247D02C = 0;
  byte_10247D030 = 0;
  byte_10247D048 = 0;
  qword_10247D050 = (uint64_t)"Speed";
  dword_10247D058 = 2;
  word_10247D05C = 0;
  byte_10247D060 = 0;
  byte_10247D078 = 0;
  qword_10247D080 = (uint64_t)"Course";
  dword_10247D088 = 2;
  word_10247D08C = 0;
  byte_10247D090 = 0;
  byte_10247D0A8 = 0;
  qword_10247D0B0 = (uint64_t)"Confidence";
  dword_10247D0B8 = 1;
  word_10247D0BC = 0;
  byte_10247D0C0 = 0;
  byte_10247D0D8 = 0;
  qword_10247D0E0 = (uint64_t)"Score";
  dword_10247D0E8 = 1;
  word_10247D0EC = 0;
  byte_10247D0F0 = 0;
  byte_10247D108 = 0;
  qword_10247D110 = (uint64_t)"Reach";
  dword_10247D118 = 1;
  word_10247D11C = 0;
  byte_10247D120 = 0;
  byte_10247D138 = 0;
  qword_10247D140 = (uint64_t)"FenceForeignKey";
  dword_10247D148 = 1;
  word_10247D14C = 1;
  byte_10247D150 = 0;
  byte_10247D168 = 0;
  qword_10247D170 = (uint64_t)"ZaxisHarvestTraces";
  dword_10247D178 = 1;
  word_10247D17C = 0;
  byte_10247D180 = 0;
  byte_10247D198 = 0;
  qword_10247D1A0 = 0;
  dword_10247D1A8 = 5;
  word_10247D1AC = 0;
  byte_10247D1B0 = 0;
  byte_10247D1C8 = 0;
}

id sub_1006DA380(void *a1, uint64_t a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  uint64_t v3[2] = sub_1006DA40C;
  void v3[3] = &unk_1022C4F88;
  void v3[4] = a2;
  return [a1 filteredArrayUsingPredicate:+[NSPredicate predicateWithBlock:](NSPredicate, "predicateWithBlock:", v3)];
}

BOOL sub_1006DA40C(uint64_t a1, void *a2)
{
  return [[[a2 timestamp] compare:*(void *)(a1 + 32)] != (id)-1;
}

uint64_t sub_1006DA444(uint64_t a1)
{
  int v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

void **sub_1006DA478(void **a1)
{
  int v3 = a1;
  sub_10063A340(&v3);
  return a1;
}

uint64_t sub_1006DA4B0(uint64_t a1)
{
  int v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

uint64_t sub_1006DA4E4(uint64_t a1)
{
  int v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

uint64_t sub_1006DA518(uint64_t a1)
{
  int v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

uint64_t sub_1006DA54C(uint64_t a1)
{
  int v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_1006DA610(id a1)
{
  qword_10247D1D0 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLNetworkLocationProviderSilo"];
}

uint64_t sub_1006DA6D0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1006DE1FC;
  block[3] = &unk_10229FED8;
  void block[4] = a1;
  if (qword_10247D1E0 != -1) {
    dispatch_once(&qword_10247D1E0, block);
  }
  return qword_10248A300;
}

void sub_1006DA94C(uint64_t a1)
{
  int v7 = 0xFFFF;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  long long v10 = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v11 = _Q0;
  long long v12 = _Q0;
  long long v13 = _Q0;
  int v14 = 0;
  uint64_t v17 = 0;
  unint64_t v15 = 0xBFF0000000000000;
  uint64_t v16 = 0;
  int v18 = 0;
  unint64_t v19 = 0xBFF0000000000000;
  int v20 = 0x7FFFFFFF;
  uint64_t v23 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  char v24 = 0;
  uint64_t v6 = sub_1006DE9BC(a1);
  sub_1006BD150(*(void *)(v6 + 32));
}

void sub_1006DB08C(uint64_t a1)
{
  int v7 = 0xFFFF;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  long long v10 = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v11 = _Q0;
  long long v12 = _Q0;
  long long v13 = _Q0;
  int v14 = 0;
  uint64_t v17 = 0;
  unint64_t v15 = 0xBFF0000000000000;
  uint64_t v16 = 0;
  int v18 = 0;
  unint64_t v19 = 0xBFF0000000000000;
  int v20 = 0x7FFFFFFF;
  uint64_t v23 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  char v24 = 0;
  uint64_t v6 = sub_1006DE8AC(a1);
  sub_1006BD150(*(void *)(v6 + 32));
}

void sub_1006DB7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1006DB7FC(uint64_t a1, int *a2)
{
  uint64_t v54 = 0;
  uint64_t v53 = 0;
  long long v55 = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v56 = _Q0;
  long long v57 = _Q0;
  long long v58 = _Q0;
  int v52 = 0xFFFF;
  int v59 = 0;
  uint64_t v61 = 0;
  uint64_t v62 = 0;
  unint64_t v60 = 0xBFF0000000000000;
  unint64_t v64 = 0xBFF0000000000000;
  int v63 = 0;
  int v65 = 0x7FFFFFFF;
  uint64_t v67 = 0;
  uint64_t v68 = 0;
  uint64_t v66 = 0;
  char v69 = 0;
  int v26 = *a2;
  uint64_t v9 = (const void *)*((void *)a2 + 1);
  uint64_t v10 = *((void *)a2 + 2);
  memset(v27, 0, sizeof(v27));
  sub_10010F834(v27, v9, v10, (v10 - (uint64_t)v9) >> 2);
  long long v11 = *((_OWORD *)a2 + 12);
  long long v12 = *((_OWORD *)a2 + 13);
  long long v13 = *((_OWORD *)a2 + 10);
  long long v37 = *((_OWORD *)a2 + 11);
  long long v38 = v11;
  v39[0] = v12;
  *(_OWORD *)((char *)v39 + 12) = *(_OWORD *)(a2 + 55);
  long long v14 = *((_OWORD *)a2 + 8);
  long long v15 = *((_OWORD *)a2 + 9);
  long long v16 = *((_OWORD *)a2 + 6);
  long long v33 = *((_OWORD *)a2 + 7);
  long long v34 = v14;
  long long v35 = v15;
  long long v36 = v13;
  long long v17 = *((_OWORD *)a2 + 5);
  long long v30 = *((_OWORD *)a2 + 4);
  long long v31 = v17;
  long long v32 = v16;
  long long v18 = *((_OWORD *)a2 + 3);
  long long v28 = *((_OWORD *)a2 + 2);
  long long v29 = v18;
  if (*((char *)a2 + 263) < 0)
  {
    sub_1000DC48C(v40, *((void **)a2 + 30), *((void *)a2 + 31));
  }
  else
  {
    *(_OWORD *)int v40 = *((_OWORD *)a2 + 15);
    v40[2] = *((void **)a2 + 32);
  }
  long long v19 = *(_OWORD *)(a2 + 102);
  long long v49 = *(_OWORD *)(a2 + 98);
  long long v50 = v19;
  long long v20 = *(_OWORD *)(a2 + 86);
  long long v45 = *(_OWORD *)(a2 + 82);
  long long v46 = v20;
  long long v21 = *(_OWORD *)(a2 + 94);
  long long v47 = *(_OWORD *)(a2 + 90);
  long long v48 = v21;
  long long v22 = *(_OWORD *)(a2 + 70);
  long long v41 = *(_OWORD *)(a2 + 66);
  long long v42 = v22;
  long long v23 = *(_OWORD *)(a2 + 78);
  long long v43 = *(_OWORD *)(a2 + 74);
  long long v44 = v23;
  int v51 = a2[106];
  sub_1006E9D30((uint64_t)&v26);
  sub_100613DB4((uint64_t)&v26, &__p);
  uint64_t v24 = sub_1006DEACC(a1);
  sub_1009B4724(*(void *)(v24 + 32));
}

void sub_1006DBF84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, void *a19, uint64_t a20)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_1006302A8((uint64_t)&a18);
  _Unwind_Resume(a1);
}

void sub_1006DC0B0(uint64_t a1)
{
  int v7 = 0xFFFF;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  long long v10 = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v11 = _Q0;
  long long v12 = _Q0;
  long long v13 = _Q0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  unint64_t v15 = 0xBFF0000000000000;
  int v14 = 0;
  int v18 = 0;
  unint64_t v19 = 0xBFF0000000000000;
  int v20 = 0x7FFFFFFF;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v21 = 0;
  char v24 = 0;
  uint64_t v6 = sub_1000AB2B4(a1);
  sub_1000AB1AC(*(void *)(v6 + 32));
}

void sub_1006DC800(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006DC90C(uint64_t a1)
{
  int v7 = 0xFFFF;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  long long v10 = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v11 = _Q0;
  long long v12 = _Q0;
  long long v13 = _Q0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  unint64_t v15 = 0xBFF0000000000000;
  int v14 = 0;
  int v18 = 0;
  unint64_t v19 = 0xBFF0000000000000;
  int v20 = 0x7FFFFFFF;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v21 = 0;
  char v24 = 0;
  uint64_t v6 = sub_1006DEBDC(a1);
  sub_10082E220(*(void *)(v6 + 32));
}

void sub_1006DD05C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,__int16 a43,char a44,char a45)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006DD0F4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 560);
  *(_DWORD *)(a2 + 56) = *(_DWORD *)(a1 + 576);
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  uint64_t v4 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    int v5 = *(_DWORD *)(a2 + 40);
    int v6 = *(_DWORD *)(a2 + 44);
    int v7 = *(_DWORD *)(a2 + 48);
    int v8 = *(_DWORD *)(a2 + 52);
    int v9 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)long long buf = 67110144;
    int v13 = v5;
    __int16 v14 = 1024;
    int v15 = v6;
    __int16 v16 = 1024;
    int v17 = v7;
    __int16 v18 = 1024;
    int v19 = v8;
    __int16 v20 = 1024;
    int v21 = v9;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "NETWORK: stats: cellsQueried, %d, wifisQueried, %d, locationsQueried, %d, totalRequests, %d, totalRequestsSuccessful, %d", buf, 0x20u);
  }
  uint64_t v10 = a1 + 560;
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    long long v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::getMetric(CLDaemonStats_Type::LocationNetworkQueries &)", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
  }
  *(void *)uint64_t v10 = 0;
  *(void *)(v10 + 8) = 0;
  *(_DWORD *)(v10 + 16) = 0;
}

uint64_t sub_1006DD360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 456))
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v3 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#Warning in private location mode; not querying for unknown cells or unknown wifis",
        buf,
        2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419630 == -1)
    {
LABEL_31:
      LOWORD(v12[0]) = 0;
      long long v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryNearbys(const CLDaemonLocation &, const std::vector<int> &)", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
      return 0xFFFFFFFFLL;
    }
LABEL_33:
    dispatch_once(&qword_102419630, &stru_1022C5170);
    goto LABEL_31;
  }
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32))(*(void *)(a1 + 112)) != 1)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v9 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "#Warning Location Services disabled, not querying location", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419630 == -1) {
      goto LABEL_31;
    }
    goto LABEL_33;
  }
  if (!*(_DWORD *)(a1 + 608) && !*(unsigned char *)(a1 + 440))
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    uint64_t v10 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "@AlsFlow, querynearby, skip, connectivity", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    goto LABEL_31;
  }
  *(int32x2_t *)(a1 + 568) = vadd_s32(*(int32x2_t *)(a1 + 568), (int32x2_t)0x100000001);
  sub_100134750(__p, "queryNearbys");
  sub_100EBBFD8(a1 + 464, (uint64_t *)__p);
  if (v14 < 0) {
    operator delete(__p[0]);
  }
  v12[0] = (*(uint64_t (**)(void, uint64_t, uint64_t))(**(void **)(a1 + 448) + 40))(*(void *)(a1 + 448), a2, 0xFFFFFFFFLL);
  *(void *)long long buf = v12;
  int v7 = (char *)(sub_1000EAEE4((uint64_t **)(a1 + 392), v12, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5);
  if (v7 != (char *)a3) {
    sub_1000FB43C(v7, *(char **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 2);
  }
  return v12[0];
}

void sub_1006DD838(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006DD9A0(uint64_t a1, uint64_t *a2, int a3)
{
  uint64_t v108 = 0;
  uint64_t v109 = 0;
  uint64_t v110 = 0;
  long long __p = 0;
  unint64_t v106 = 0;
  char v107 = 0;
  uint64_t v102 = 0;
  unint64_t v103 = 0;
  unint64_t v104 = 0;
  long long v99 = 0;
  int v100 = 0;
  unint64_t v101 = 0;
  long long v96 = 0;
  long long v97 = 0;
  long long v98 = 0;
  uint64_t v4 = *a2;
  if (a2[1] != *a2)
  {
    for (unint64_t i = 0; i < 0x66FD0EB66FD0EB67 * ((a2[1] - *a2) >> 3); ++i)
    {
      uint64_t v7 = v4 + 696 * i;
      unsigned int v8 = *(_DWORD *)(v7 + 8);
      if (v8 < 3) {
        goto LABEL_6;
      }
      if (v8 == 9)
      {
        __int16 v20 = (_OWORD *)sub_1006E744C(v7);
        int v21 = v20;
        uint64_t v22 = v106;
        if (v106 >= v107)
        {
          long long v41 = (char *)__p;
          uint64_t v42 = (v106 - (unsigned char *)__p) >> 5;
          unint64_t v43 = v42 + 1;
          if ((unint64_t)(v42 + 1) >> 59) {
            sub_1001D7FD4();
          }
          uint64_t v44 = v107 - (unsigned char *)__p;
          if ((v107 - (unsigned char *)__p) >> 4 > v43) {
            unint64_t v43 = v44 >> 4;
          }
          if ((unint64_t)v44 >= 0x7FFFFFFFFFFFFFE0) {
            unint64_t v45 = 0x7FFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v45 = v43;
          }
          if (v45)
          {
            long long v46 = (char *)sub_1001D9EDC((uint64_t)&v107, v45);
            long long v41 = (char *)__p;
            uint64_t v22 = v106;
          }
          else
          {
            long long v46 = 0;
          }
          long long v47 = v21[1];
          long long v48 = &v46[32 * v42];
          *(_OWORD *)long long v48 = *v21;
          *((_OWORD *)v48 + 1) = v47;
          if (v22 == v41)
          {
            int v51 = &v46[32 * v42];
          }
          else
          {
            long long v49 = &v46[32 * v42];
            do
            {
              long long v50 = *((_OWORD *)v22 - 1);
              int v51 = v49 - 32;
              *((_OWORD *)v49 - 2) = *((_OWORD *)v22 - 2);
              *((_OWORD *)v49 - 1) = v50;
              v22 -= 32;
              v49 -= 32;
            }
            while (v22 != v41);
          }
          char v24 = v48 + 32;
          long long __p = v51;
          unint64_t v106 = v48 + 32;
          char v107 = &v46[32 * v45];
          if (v41) {
            operator delete(v41);
          }
        }
        else
        {
          long long v23 = v20[1];
          *(_OWORD *)unint64_t v106 = *v20;
          *((_OWORD *)v22 + 1) = v23;
          char v24 = v22 + 32;
        }
        unint64_t v106 = v24;
        goto LABEL_30;
      }
      if (v8 == 7)
      {
LABEL_6:
        int v9 = (_OWORD *)sub_1006E6690(v7);
        uint64_t v10 = v9;
        long long v11 = v109;
        if (v109 >= v110)
        {
          char v14 = v108;
          uint64_t v15 = (v109 - v108) >> 5;
          unint64_t v16 = v15 + 1;
          if ((unint64_t)(v15 + 1) >> 59) {
            sub_1001D7FD4();
          }
          uint64_t v17 = v110 - v108;
          if ((v110 - v108) >> 4 > v16) {
            unint64_t v16 = v17 >> 4;
          }
          if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFE0) {
            unint64_t v18 = 0x7FFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v18 = v16;
          }
          if (v18)
          {
            int v19 = (char *)sub_1001D9EDC((uint64_t)&v110, v18);
            char v14 = v108;
            long long v11 = v109;
          }
          else
          {
            int v19 = 0;
          }
          long long v28 = v10[1];
          long long v29 = &v19[32 * v15];
          *(_OWORD *)long long v29 = *v10;
          *((_OWORD *)v29 + 1) = v28;
          if (v11 == v14)
          {
            long long v32 = &v19[32 * v15];
          }
          else
          {
            long long v30 = &v19[32 * v15];
            do
            {
              long long v31 = *((_OWORD *)v11 - 1);
              long long v32 = v30 - 32;
              *((_OWORD *)v30 - 2) = *((_OWORD *)v11 - 2);
              *((_OWORD *)v30 - 1) = v31;
              v11 -= 32;
              v30 -= 32;
            }
            while (v11 != v14);
          }
          int v13 = v29 + 32;
          uint64_t v108 = v32;
          uint64_t v109 = v29 + 32;
          uint64_t v110 = &v19[32 * v18];
          if (v14) {
            operator delete(v14);
          }
        }
        else
        {
          long long v12 = v9[1];
          *(_OWORD *)uint64_t v109 = *v9;
          *((_OWORD *)v11 + 1) = v12;
          int v13 = v11 + 32;
        }
        uint64_t v109 = v13;
      }
      else if (v8 - 3 > 2)
      {
        if (v8 == 10)
        {
          int v52 = (_OWORD *)sub_1006E8278(v7);
          uint64_t v53 = v52;
          uint64_t v54 = v97;
          if (v97 >= v98)
          {
            int v65 = v96;
            unint64_t v66 = 0xAAAAAAAAAAAAAAABLL * ((v97 - (unsigned char *)v96) >> 5);
            unint64_t v67 = v66 + 1;
            if (v66 + 1 > 0x2AAAAAAAAAAAAAALL) {
              sub_1001D7FD4();
            }
            if (0x5555555555555556 * ((v98 - (unsigned char *)v96) >> 5) > v67) {
              unint64_t v67 = 0x5555555555555556 * ((v98 - (unsigned char *)v96) >> 5);
            }
            if (0xAAAAAAAAAAAAAAABLL * ((v98 - (unsigned char *)v96) >> 5) >= 0x155555555555555) {
              unint64_t v68 = 0x2AAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v68 = v67;
            }
            if (v68)
            {
              char v69 = (char *)sub_100642EA8((uint64_t)&v98, v68);
              int v65 = v96;
              uint64_t v54 = v97;
            }
            else
            {
              char v69 = 0;
            }
            char v81 = &v69[32 * ((v97 - (unsigned char *)v96) >> 5)];
            long long v82 = v53[1];
            *(_OWORD *)char v81 = *v53;
            *((_OWORD *)v81 + 1) = v82;
            long long v83 = v53[2];
            long long v84 = v53[3];
            long long v85 = v53[5];
            *((_OWORD *)v81 + 4) = v53[4];
            *((_OWORD *)v81 + 5) = v85;
            *((_OWORD *)v81 + 2) = v83;
            *((_OWORD *)v81 + 3) = v84;
            if (v54 == v65)
            {
              long long v91 = &v69[96 * v66];
            }
            else
            {
              uint64_t v86 = &v69[96 * v66];
              do
              {
                long long v87 = *(v54 - 5);
                *((_OWORD *)v86 - 6) = *(v54 - 6);
                *((_OWORD *)v86 - 5) = v87;
                long long v88 = *(v54 - 4);
                long long v89 = *(v54 - 3);
                long long v90 = *(v54 - 2);
                long long v91 = v86 - 96;
                *(_OWORD *)(v86 - 20) = *(_OWORD *)((char *)v54 - 20);
                *((_OWORD *)v86 - 3) = v89;
                *((_OWORD *)v86 - 2) = v90;
                *((_OWORD *)v86 - 4) = v88;
                v54 -= 6;
                v86 -= 96;
              }
              while (v54 != v65);
            }
            int v59 = v81 + 96;
            long long v96 = v91;
            long long v97 = v81 + 96;
            long long v98 = &v69[96 * v68];
            if (v65) {
              operator delete(v65);
            }
          }
          else
          {
            long long v55 = v52[1];
            *(_OWORD *)long long v97 = *v52;
            v54[1] = v55;
            long long v56 = v52[2];
            long long v57 = v52[3];
            long long v58 = v52[5];
            v54[4] = v52[4];
            v54[5] = v58;
            v54[2] = v56;
            v54[3] = v57;
            int v59 = (char *)(v54 + 6);
          }
          long long v97 = v59;
        }
        else if (v8 == 6)
        {
          uint64_t v33 = sub_100117098(v7);
          uint64_t v34 = v33;
          long long v35 = v100;
          if (v100 >= v101)
          {
            unint64_t v60 = v99;
            uint64_t v61 = 0x2E8BA2E8BA2E8BA3 * ((v100 - (unsigned char *)v99) >> 3);
            unint64_t v62 = v61 + 1;
            if ((unint64_t)(v61 + 1) > 0x2E8BA2E8BA2E8BALL) {
              sub_1001D7FD4();
            }
            if (0x5D1745D1745D1746 * ((v101 - (unsigned char *)v99) >> 3) > v62) {
              unint64_t v62 = 0x5D1745D1745D1746 * ((v101 - (unsigned char *)v99) >> 3);
            }
            if ((unint64_t)(0x2E8BA2E8BA2E8BA3 * ((v101 - (unsigned char *)v99) >> 3)) >= 0x1745D1745D1745DLL) {
              unint64_t v63 = 0x2E8BA2E8BA2E8BALL;
            }
            else {
              unint64_t v63 = v62;
            }
            if (v63)
            {
              unint64_t v64 = (char *)sub_1000DA8B4((uint64_t)&v101, v63);
              unint64_t v60 = v99;
              long long v35 = v100;
            }
            else
            {
              unint64_t v64 = 0;
            }
            long long v70 = &v64[88 * v61];
            long long v71 = *(_OWORD *)(v34 + 16);
            *(_OWORD *)long long v70 = *(_OWORD *)v34;
            *((_OWORD *)v70 + 1) = v71;
            long long v72 = *(_OWORD *)(v34 + 32);
            long long v73 = *(_OWORD *)(v34 + 48);
            long long v74 = *(_OWORD *)(v34 + 64);
            *((void *)v70 + 10) = *(void *)(v34 + 80);
            *((_OWORD *)v70 + 3) = v73;
            *((_OWORD *)v70 + 4) = v74;
            *((_OWORD *)v70 + 2) = v72;
            if (v35 == v60)
            {
              uint64_t v80 = &v64[88 * v61];
            }
            else
            {
              long long v75 = &v64[88 * v61];
              do
              {
                long long v76 = *(_OWORD *)((char *)v35 - 88);
                *(_OWORD *)(v75 - 72) = *(_OWORD *)((char *)v35 - 72);
                *(_OWORD *)(v75 - 88) = v76;
                long long v77 = *(_OWORD *)((char *)v35 - 56);
                long long v78 = *(_OWORD *)((char *)v35 - 40);
                long long v79 = *(_OWORD *)((char *)v35 - 24);
                uint64_t v80 = v75 - 88;
                *((_DWORD *)v75 - 2) = *((_DWORD *)v35 - 2);
                *(_OWORD *)(v75 - 24) = v79;
                *(_OWORD *)(v75 - 40) = v78;
                *(_OWORD *)(v75 - 56) = v77;
                long long v35 = (_OWORD *)((char *)v35 - 88);
                v75 -= 88;
              }
              while (v35 != v60);
            }
            int v40 = v70 + 88;
            long long v99 = v80;
            int v100 = v70 + 88;
            unint64_t v101 = &v64[88 * v63];
            if (v60) {
              operator delete(v60);
            }
          }
          else
          {
            long long v36 = *(_OWORD *)(v33 + 16);
            *(_OWORD *)int v100 = *(_OWORD *)v33;
            v35[1] = v36;
            long long v37 = *(_OWORD *)(v33 + 32);
            long long v38 = *(_OWORD *)(v33 + 48);
            long long v39 = *(_OWORD *)(v33 + 64);
            *((void *)v35 + 10) = *(void *)(v33 + 80);
            _OWORD v35[3] = v38;
            v35[4] = v39;
            _OWORD v35[2] = v37;
            int v40 = (char *)v35 + 88;
          }
          int v100 = v40;
        }
      }
      else
      {
        uint64_t v25 = sub_1006E58D4(v7);
        unint64_t v26 = v103;
        if (v103 >= v104)
        {
          uint64_t v27 = sub_1006FECBC(&v102, v25);
        }
        else
        {
          sub_1006FEDE4((uint64_t)&v104, v103, v25);
          uint64_t v27 = v26 + 432;
        }
        unint64_t v103 = v27;
      }
LABEL_30:
      uint64_t v4 = *a2;
    }
  }
  sub_100A700F8(v111, 1);
  int v95 = v111[0];
  uint64_t v92 = sub_1006E9F20(a1, &v108, &__p, &v102, &v99, &v96, (uint64_t **)&qword_10248A2E8, a3, 0, (uint64_t)&v95);
  if (v96)
  {
    long long v97 = (char *)v96;
    operator delete(v96);
  }
  if (v99)
  {
    int v100 = (char *)v99;
    operator delete(v99);
  }
  long long v99 = &v102;
  sub_10063A340((void ***)&v99);
  if (__p)
  {
    unint64_t v106 = (char *)__p;
    operator delete(__p);
  }
  if (v108)
  {
    uint64_t v109 = v108;
    operator delete(v108);
  }
  return v92;
}

void sub_1006DE014(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, char *a19, char *a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26)
{
  if (__p) {
    operator delete(__p);
  }
  if (a19)
  {
    a20 = a19;
    operator delete(a19);
  }
  a19 = &a22;
  sub_10063A340((void ***)&a19);
  if (a25)
  {
    a26 = (uint64_t)a25;
    operator delete(a25);
  }
  long long v28 = *(void **)(v26 - 120);
  if (v28)
  {
    *(void *)(v26 - 112) = v28;
    operator delete(v28);
  }
  _Unwind_Resume(a1);
}

void sub_1006DE1E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006DE1FC()
{
}

void sub_1006DE248()
{
}

void sub_1006DE26C()
{
}

void sub_1006DE304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12)
{
  if (a11) {
    sub_1000DB0A0(a11);
  }
  if (a12) {
    (*(void (**)(uint64_t))(*(void *)a12 + 8))(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006DE354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_101171D90((uint64_t)v31);
  sub_1000F1268(v6, a2, a3);
  sub_10010F274((uint64_t)v28);
  uint64_t v7 = sub_100132EFC(v29, (uint64_t)"cell ", 5);
  int v8 = *(char *)(a1 + 23);
  if (v8 >= 0) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = *(void *)a1;
  }
  if (v8 >= 0) {
    uint64_t v10 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v10 = *(void *)(a1 + 8);
  }
  long long v11 = sub_100132EFC(v7, v9, v10);
  long long v12 = sub_100132EFC(v11, (uint64_t)", local ", 8);
  sub_100BCE3E8();
  if ((v27 & 0x80u) == 0) {
    int v13 = v26;
  }
  else {
    int v13 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    uint64_t v14 = v27;
  }
  else {
    uint64_t v14 = (uint64_t)v26[1];
  }
  uint64_t v15 = sub_100132EFC(v12, (uint64_t)v13, v14);
  unint64_t v16 = sub_100132EFC(v15, (uint64_t)", remote ", 9);
  sub_100BCE3E8();
  if ((v25 & 0x80u) == 0) {
    uint64_t v17 = __p;
  }
  else {
    uint64_t v17 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    uint64_t v18 = v25;
  }
  else {
    uint64_t v18 = (uint64_t)__p[1];
  }
  sub_100132EFC(v16, (uint64_t)v17, v18);
  if ((char)v25 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v27 < 0) {
    operator delete(v26[0]);
  }
  int v19 = sub_100132EFC(v29, (uint64_t)", ", 2);
  uint64_t v20 = *v19;
  *(uint64_t *)((char *)v19 + *(void *)(*v19 - 24) + 16) = 1;
  *(_DWORD *)((char *)v19 + *(void *)(v20 - 24) + 8) = *(_DWORD *)((unsigned char *)v19 + *(void *)(v20 - 24) + 8) & 0xFFFFFEFB | 4;
  int v21 = (void *)std::ostream::operator<<();
  sub_100132EFC(v21, (uint64_t)"m apart", 7);
  std::stringbuf::str();
  *(void *)((char *)v28
  v29[0] = v22;
  if (v30 < 0) {
    operator delete((void *)v29[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_1006DE654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  sub_101A129A8((uint64_t)&a21);
  _Unwind_Resume(a1);
}

void sub_1006DE6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1006DE354(a1, a2, a3);
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022C5150);
  }
  int v3 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v4 = __p;
    if (v8 < 0) {
      uint64_t v4 = (void **)__p[0];
    }
    *(_DWORD *)long long buf = 136380675;
    long long v12 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "CELL_LOC: %{private}s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    int v5 = __p;
    if (v8 < 0) {
      int v5 = (void **)__p[0];
    }
    int v9 = 136380675;
    uint64_t v10 = v5;
    int v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "static void CLNetworkLocationProvider::logCellLocationsWhenLocalAndRemoteDiffer(const std::string &, const CLDaemonLocation &, const CLDaemonLocation &)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  if (v8 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1006DE884(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006DE8AC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 200);
  if (!result) {
    operator new();
  }
  return result;
}

void sub_1006DE910()
{
}

uint64_t sub_1006DE934(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 192);
  if (!result) {
    operator new();
  }
  return result;
}

void sub_1006DE998()
{
}

uint64_t sub_1006DE9BC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 160);
  if (!result) {
    operator new();
  }
  return result;
}

void sub_1006DEA20()
{
}

uint64_t sub_1006DEA44(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 152);
  if (!result) {
    operator new();
  }
  return result;
}

void sub_1006DEAA8()
{
}

uint64_t sub_1006DEACC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 240);
  if (!result) {
    operator new();
  }
  return result;
}

void sub_1006DEB30()
{
}

uint64_t sub_1006DEB54(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 232);
  if (!result) {
    operator new();
  }
  return result;
}

void sub_1006DEBB8()
{
}

uint64_t sub_1006DEBDC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 320);
  if (!result) {
    operator new();
  }
  return result;
}

void sub_1006DEC44()
{
}

uint64_t sub_1006DEC68(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 312);
  if (!result) {
    operator new();
  }
  return result;
}

void sub_1006DECD0()
{
}

void sub_1006DECF4(uint64_t a1, void *a2, uint64_t *a3, void *a4)
{
  uint64_t v7 = sub_1006DFC30(a1, "CLNetworkLocationProvider", a2);
  *(void *)uint64_t v7 = off_1022C4FD8;
  uint64_t v8 = *a3;
  *a3 = 0;
  *(void *)(v7 + 112) = v8;
  *(unsigned char *)(v7 + 120) = 0;
  *(_OWORD *)(v7 + 128) = 0u;
  *(void *)(v7 + 160) = 0;
  *(void *)(v7 + 176) = 0;
  *(void *)(v7 + 168) = v7 + 176;
  *(void *)(v7 + 184) = 0;
  *(void *)(v7 + 192) = 0;
  *(void *)(v7 + 200) = 0;
  *(void *)(v7 + 216) = 0;
  *(void *)(v7 + 208) = v7 + 216;
  *(_OWORD *)(v7 + 144) = 0u;
  *(void *)(v7 + 224) = 0;
  *(void *)(v7 + 232) = 0;
  *(void *)(v7 + 240) = 0;
  *(void *)(v7 + 2++*(_DWORD *)(result + 48) = v7 + 256;
  *(void *)(v7 + 256) = 0;
  *(void *)(v7 + 264) = 0;
  *(void *)(v7 + 272) = 0;
  *(void *)(v7 + 280) = 0;
  *(void *)(v7 + 288) = v7 + 296;
  *(void *)(v7 + 296) = 0;
  *(void *)(v7 + 336) = 0;
  *(void *)(v7 + 344) = 0;
  *(void *)(v7 + 304) = 0;
  *(void *)(v7 + 312) = 0;
  *(void *)(v7 + 320) = 0;
  *(void *)(v7 + 328) = v7 + 336;
  *(_DWORD *)(v7 + 352) = 0;
  *(_OWORD *)(v7 + 360) = 0u;
  *(_OWORD *)(v7 + 376) = 0u;
  *(void *)(v7 + 392) = v7 + 400;
  *(void *)(v7 + 400) = 0;
  *(void *)(v7 + 424) = 0;
  *(void *)(v7 + 432) = 0;
  *(void *)(v7 + 408) = 0;
  *(void *)(v7 + 416) = v7 + 424;
  *(unsigned char *)(v7 + 440) = 0;
  *(void *)(v7 + 4++*(_DWORD *)(result + 48) = 0;
  *(_WORD *)(a1 + 456) = 0;
  sub_100EBBEB0(v7 + 464, (uint64_t)"NetworkProvider", a1, 300.0);
  *(void *)(a1 + 512) = 0;
  *(_DWORD *)(a1 + 520) = -1;
  *(unsigned char *)(a1 + 524) = 1;
  *(void *)(a1 + 528) = 0;
  *(_OWORD *)(a1 + 536) = xmmword_101D2A830;
  *(void *)(a1 + 552) = 0x40DC200000000000;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_DWORD *)(a1 + 576) = 0;
  *(void *)(a1 + 584) = a1 + 592;
  *(void *)(a1 + 608) = 0;
  *(_DWORD *)(a1 + 616) = 0;
  sub_101171D90(a1 + 624);
  *(_WORD *)(a1 + 664) = 1;
  *(void *)(a1 + 672) = *a4;
  uint64_t v9 = a4[1];
  *(void *)(a1 + 680) = v9;
  if (v9) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
  }
  sub_101171D90(a1 + 688);
  *(_DWORD *)(a1 + 728) = 0xFFFF;
  *(void *)(v10 + 52) = 0;
  *(void *)(v10 + 44) = 0;
  *(_OWORD *)(a1 + 7++*(_DWORD *)(result + 48) = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 764) = _Q0;
  *(_OWORD *)(a1 + 780) = _Q0;
  *(_OWORD *)(a1 + 796) = _Q0;
  *(_DWORD *)(a1 + 812) = 0;
  *(void *)(a1 + 816) = 0xBFF0000000000000;
  *(void *)(a1 + 832) = 0;
  *(void *)(a1 + 824) = 0;
  *(_DWORD *)(a1 + 840) = 0;
  *(void *)(a1 + 844) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 852) = 0x7FFFFFFF;
  *(void *)(a1 + 856) = 0;
  *(void *)(a1 + 872) = 0;
  *(void *)(a1 + 864) = 0;
  *(unsigned char *)(a1 + 880) = 0;
  *(_WORD *)(a1 + 884) = 257;
  *(_DWORD *)(a1 + 888) = 100;
  *(void *)(v10 + 204) = 0x4448000042480000;
  operator new();
}

void sub_1006DF94C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _Unwind_Exception *exception_object, void **a17, uint64_t a18, uint64_t *a19, uint64_t *a20,uint64_t a21,uint64_t *a22,uint64_t *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *__p,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  long long v57 = *(std::__shared_weak_count **)(v52 + 680);
  if (v57) {
    sub_1000DB0A0(v57);
  }
  sub_1000F5BB0(v52 + 584, *a17);
  sub_100EBBF9C(a18);
  sub_1000F5BB0(v52 + 416, *(void **)(v52 + 424));
  sub_1006FE1A8(v52 + 392, *(void **)(v52 + 400));
  sub_1000F5BB0(v52 + 328, *(void **)(v52 + 336));
  sub_1006FDFF4((uint64_t *)(v52 + 320), 0);
  sub_1006FDFF4((uint64_t *)(v52 + 312), 0);
  sub_1000F5BB0(v52 + 288, *(void **)(v52 + 296));
  sub_1006FDEF4((uint64_t *)(v52 + 280), 0);
  sub_1006FDEF4((uint64_t *)(v52 + 272), 0);
  sub_1006FE0F4(v56, *(void **)(v52 + 256));
  sub_1006FDDF4(v55, 0);
  sub_1006FDDF4(v54, 0);
  sub_1000F5BB0(v53, *(void **)(v52 + 216));
  sub_1006FDCF4(a19, 0);
  sub_1006FDCF4(a20, 0);
  sub_1000F5BB0(a21, *(void **)(v52 + 176));
  sub_1006FDCF4(a22, 0);
  sub_1006FDCF4((uint64_t *)(v52 + 152), 0);
  uint64_t v58 = *(void *)(v52 + 144);
  *(void *)(v52 + 144) = 0;
  if (v58) {
    (*(void (**)(uint64_t))(*(void *)v58 + 8))(v58);
  }
  uint64_t v59 = *(void *)(v52 + 136);
  *(void *)(v52 + 136) = 0;
  if (v59) {
    (*(void (**)(uint64_t))(*(void *)v59 + 8))(v59);
  }
  uint64_t v60 = *a23;
  *a23 = 0;
  if (v60) {
    (*(void (**)(uint64_t))(*(void *)v60 + 8))(v60);
  }
  uint64_t v61 = *(void *)(v52 + 112);
  *(void *)(v52 + 112) = 0;
  if (v61) {
    (*(void (**)(uint64_t))(*(void *)v61 + 8))(v61);
  }
  sub_1006E2130(v52);
  _Unwind_Resume(a1);
}

uint64_t sub_1006DFC30(uint64_t a1, char *a2, void *a3)
{
  *(void *)a1 = off_1022C5220;
  sub_100134750((void *)(a1 + 8), a2);
  *(void *)(a1 + 32) = a3;
  *(void *)(a1 + 40) = [a3 silo];
  *(void *)(a1 + ++*(_DWORD *)(result + 48) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = a1 + 64;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a1 + 88;
  *(_DWORD *)(a1 + 104) = 0;
  *(unsigned char *)(a1 + 108) = 0;
  return a1;
}

void sub_1006DFCC0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006DFCDC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a5 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterCellLocationSeries", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    uint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a5;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterCellLocationSeries\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006F09BC((void *)a5, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006DFE90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006DFEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a6 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v13 = 1;
    uint64_t v10 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterCellLocation", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    char v11 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v15 = 0;
      __int16 v16 = 2082;
      uint64_t v17 = "";
      __int16 v18 = 2082;
      uint64_t v19 = "activity";
      __int16 v20 = 2050;
      uint64_t v21 = a6;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterCellLocation\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v13 = 0;
  }
  sub_1006F18E4(a6, v9, a2, a3);
  if (v13) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E006C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E008C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a5 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterCellLocationUnknown", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    uint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a5;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterCellLocationUnknown\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006F1E10(a5, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E0240(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E0260(uint64_t a1, uint64_t a2, long long **a3, int a4, int a5, int a6, uint64_t a7)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a7 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v17 = 1;
    __int16 v14 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterWifiLocationSeriesComplete", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v14, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    int v15 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v19 = 0;
      __int16 v20 = 2082;
      uint64_t v21 = "";
      __int16 v22 = 2082;
      long long v23 = "activity";
      __int16 v24 = 2050;
      uint64_t v25 = a7;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterWifiLocationSeriesComplete\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v17 = 0;
  }
  sub_1006F562C(a7, v13, a2, a3, a4, a5, a6);
  if (v17) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E0444(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E0464(uint64_t a1, double *a2, const __CFDictionary *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a6 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v13 = 1;
    uint64_t v10 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterResponse", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    char v11 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v15 = 0;
      __int16 v16 = 2082;
      char v17 = "";
      __int16 v18 = 2082;
      int v19 = "activity";
      __int16 v20 = 2050;
      uint64_t v21 = a6;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterResponse\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v13 = 0;
  }
  sub_1006F6648(a6, v9, a2, a3);
  if (v13) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E0620(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E0640(uint64_t a1, int a2, int a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterLocationError", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    uint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterLocationError\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006F6848(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E07FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E081C(uint64_t a1, int a2, int a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterNearbyError", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    uint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterNearbyError\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006F7814((void *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E09D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E09F8(uint64_t a1, int a2, int a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterFinished", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    uint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterFinished\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006F7A20((_DWORD *)a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E0BB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E0BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a6 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v13 = 1;
    uint64_t v10 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterCdmaCellLocation", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    char v11 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v15 = 0;
      __int16 v16 = 2082;
      char v17 = "";
      __int16 v18 = 2082;
      uint64_t v19 = "activity";
      __int16 v20 = 2050;
      uint64_t v21 = a6;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterCdmaCellLocation\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v13 = 0;
  }
  sub_1006F22F0(a6, v9, a2, a3);
  if (v13) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E0D90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E0DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a5 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterCdmaCellLocationUnknown", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    uint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a5;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterCdmaCellLocationUnknown\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006F2A1C(a5, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E0F64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E0F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a6 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v13 = 1;
    uint64_t v10 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterLteCellLocation", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    char v11 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v15 = 0;
      __int16 v16 = 2082;
      char v17 = "";
      __int16 v18 = 2082;
      uint64_t v19 = "activity";
      __int16 v20 = 2050;
      uint64_t v21 = a6;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterLteCellLocation\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v13 = 0;
  }
  sub_1006F2F1C(a6, v9, a2, a3);
  if (v13) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E1140(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E1160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a5 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterLteCellLocationUnknown", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    uint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a5;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterLteCellLocationUnknown\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006F3A10(a5, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E1314(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E1334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a6 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v13 = 1;
    uint64_t v10 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterNrCellLocation", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    char v11 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v15 = 0;
      __int16 v16 = 2082;
      char v17 = "";
      __int16 v18 = 2082;
      uint64_t v19 = "activity";
      __int16 v20 = 2050;
      uint64_t v21 = a6;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterNrCellLocation\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v13 = 0;
  }
  sub_1006F429C(a6, v9, a2, a3);
  if (v13) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E14F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E1510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a5 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterNrCellLocationUnknown", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    uint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a5;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterNrCellLocationUnknown\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006F4D98(a5, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E16C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E16E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a6 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v13 = 1;
    uint64_t v10 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterScdmaCellLocation", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v10, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    char v11 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v15 = 0;
      __int16 v16 = 2082;
      char v17 = "";
      __int16 v18 = 2082;
      uint64_t v19 = "activity";
      __int16 v20 = 2050;
      uint64_t v21 = a6;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterScdmaCellLocation\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v13 = 0;
  }
  sub_1006F0ED8(a6, v9, a2, a3);
  if (v13) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E18A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E18C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a5 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onLocationRequesterScdmaCellLocationUnknown", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    uint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      int v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a5;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onLocationRequesterScdmaCellLocationUnknown\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_1006F1404(a5, v7, a2);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E1A74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E1A94(uint64_t a1, uint64_t a2)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a2 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v6 = 1;
    int v3 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onPurgeTimer", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v3, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    uint64_t v4 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v8 = 0;
      __int16 v9 = 2082;
      uint64_t v10 = "";
      __int16 v11 = 2082;
      long long v12 = "activity";
      __int16 v13 = 2050;
      uint64_t v14 = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onPurgeTimer\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v6 = 0;
  }
  sub_1006E1C5C(a2, *(double *)(a2 + 536));
  if (v6) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E1C3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006E1C5C(uint64_t a1, double a2)
{
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  uint64_t v4 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 134217984;
    *(double *)&uint8_t buf[4] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Purging entries older than %.2fs.", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    char v17 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::clearDatabaseEntriesByAge(CFTimeInterval)", "%s\n", v17);
    if (v17 != buf) {
      free(v17);
    }
  }
  sub_100103240();
  int v5 = sub_1001073D0();
  if ((v5 & 0x400) != 0)
  {
    uint64_t v9 = sub_1006DE9BC(a1);
    *(double *)long long buf = a2;
    sub_10064E5D0(*(void *)(v9 + 32), (uint64_t)buf);
    uint64_t v10 = sub_1006DEA44(a1);
    *(double *)long long buf = a2;
    sub_10064E5D0(*(void *)(v10 + 32), (uint64_t)buf);
    if ((v5 & 0x800000) == 0)
    {
LABEL_8:
      if ((v5 & 0x800) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else if ((v5 & 0x800000) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v11 = sub_1006DE8AC(a1);
  *(double *)long long buf = a2;
  sub_10064E5D0(*(void *)(v11 + 32), (uint64_t)buf);
  uint64_t v12 = sub_1006DE934(a1);
  *(double *)long long buf = a2;
  sub_10064E5D0(*(void *)(v12 + 32), (uint64_t)buf);
  if ((v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_10;
    }
LABEL_16:
    uint64_t v15 = sub_1000AB2B4(a1);
    *(double *)long long buf = a2;
    sub_10064E5D0(*(void *)(v15 + 32), (uint64_t)buf);
    uint64_t v16 = sub_1000AB228(a1);
    *(double *)long long buf = a2;
    sub_10064E5D0(*(void *)(v16 + 32), (uint64_t)buf);
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t v13 = sub_1006DEACC(a1);
  *(double *)long long buf = a2;
  sub_10064E5D0(*(void *)(v13 + 32), (uint64_t)buf);
  uint64_t v14 = sub_1006DEB54(a1);
  *(double *)long long buf = a2;
  sub_10064E5D0(*(void *)(v14 + 32), (uint64_t)buf);
  if ((v5 & 0x40000) != 0) {
    goto LABEL_16;
  }
LABEL_10:
  if ((v5 & 0x4000000) != 0)
  {
LABEL_11:
    uint64_t v6 = sub_1006DEBDC(a1);
    *(double *)long long buf = a2;
    sub_10064E5D0(*(void *)(v6 + 32), (uint64_t)buf);
    uint64_t v7 = sub_1006DEC68(a1);
    *(double *)long long buf = a2;
    sub_10064E5D0(*(void *)(v7 + 32), (uint64_t)buf);
  }
LABEL_12:
  double Current = CFAbsoluteTimeGetCurrent();
  sub_101452AB8(*(void *)(a1 + 672), a2);
  sub_1006F95E0(a2, Current, a1, (uint64_t **)(a1 + 168));
  sub_1006F9848(a2, Current, a1, (uint64_t **)(a1 + 208));
  sub_1006F9AB0(a2, Current, a1, (uint64_t **)(a1 + 248));
  sub_1006F9D24(a2, Current, a1, (uint64_t **)(a1 + 288));
  sub_1006F9F8C(a2, Current, a1, (uint64_t **)(a1 + 328));
  sub_1006FA1F4(a2, Current, a1, (uint64_t **)(a1 + 416));
}

BOOL sub_1006E1FC4(uint64_t a1)
{
  BOOL result = sub_101454CE8(*(void *)(a1 + 672));
  if (result) {
    sub_100681630();
  }
  return result;
}

uint64_t sub_1006E2130(uint64_t a1)
{
  *(void *)a1 = off_1022C5220;
  [*(id *)(a1 + 48) invalidate];

  sub_1004459BC(a1 + 80, *(void **)(a1 + 88));
  sub_100445A1C(a1 + 56, *(void **)(a1 + 64));
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t sub_1006E21B4(uint64_t a1)
{
  *(void *)a1 = off_1022C4FD8;
  uint64_t v2 = *(void *)(a1 + 528);
  if (v2)
  {
    sub_1001B0AE4(v2);
    uint64_t v3 = *(void *)(a1 + 528);
    if (v3)
    {
      sub_100998C38(v3);
      operator delete();
    }
    *(void *)(a1 + 528) = 0;
  }
  sub_1006E23EC((void *)a1);
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 680);
  if (v4) {
    sub_1000DB0A0(v4);
  }
  sub_1000F5BB0(a1 + 584, *(void **)(a1 + 592));
  sub_100EBBF9C(a1 + 464);
  sub_1000F5BB0(a1 + 416, *(void **)(a1 + 424));
  sub_1006FE1A8(a1 + 392, *(void **)(a1 + 400));
  sub_1000F5BB0(a1 + 328, *(void **)(a1 + 336));
  sub_1006FDFF4((uint64_t *)(a1 + 320), 0);
  sub_1006FDFF4((uint64_t *)(a1 + 312), 0);
  sub_1000F5BB0(a1 + 288, *(void **)(a1 + 296));
  sub_1006FDEF4((uint64_t *)(a1 + 280), 0);
  sub_1006FDEF4((uint64_t *)(a1 + 272), 0);
  sub_1006FE0F4(a1 + 248, *(void **)(a1 + 256));
  sub_1006FDDF4((uint64_t *)(a1 + 240), 0);
  sub_1006FDDF4((uint64_t *)(a1 + 232), 0);
  sub_1000F5BB0(a1 + 208, *(void **)(a1 + 216));
  sub_1006FDCF4((uint64_t *)(a1 + 200), 0);
  sub_1006FDCF4((uint64_t *)(a1 + 192), 0);
  sub_1000F5BB0(a1 + 168, *(void **)(a1 + 176));
  sub_1006FDCF4((uint64_t *)(a1 + 160), 0);
  sub_1006FDCF4((uint64_t *)(a1 + 152), 0);
  uint64_t v5 = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  uint64_t v8 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }

  return sub_1006E2130(a1);
}

id sub_1006E23EC(void *a1)
{
  id result = (id)sub_101454CE8(a1[84]);
  if (result)
  {
    [*(id *)(a1[16] + 16) unregister:*(void *)(a1[16] + 8) forNotification:33];
    uint64_t v3 = a1[17];
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t v4 = *(void **)(v3 + 16);
    return [v4 unregister:v5 forNotification:1];
  }
  return result;
}

void sub_1006E2454(uint64_t a1)
{
  sub_1006E21B4(a1);

  operator delete();
}

void sub_1006E248C(uint64_t a1, _DWORD *a2, _DWORD *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v10 = 1;
    uint64_t v7 = _os_activity_create((void *)&_mh_execute_header, "CL: CLNetworkLocationProvider::onMotionNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v7, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    uint64_t v8 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v12 = 0;
      __int16 v13 = 2082;
      uint64_t v14 = "";
      __int16 v15 = 2082;
      uint64_t v16 = "activity";
      __int16 v17 = 2050;
      uint64_t v18 = a4;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLNetworkLocationProvider::onMotionNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v10 = 0;
  }
  if (*a2 == 1) {
    sub_101454CD8(*(void *)(a4 + 672), a3);
  }
  if (v10) {
    os_activity_scope_leave(&state);
  }
}

void sub_1006E2650(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1006E2670@<X0>(_DWORD *a1@<X1>, void *a2@<X8>)
{
  snprintf(__str, 0x20uLL, "%d", *a1);
  return sub_100134750(a2, __str);
}

uint64_t sub_1006E26EC()
{
  return 1;
}

uint64_t sub_1006E26F4()
{
  return 1;
}

void sub_1006E26FC(uint64_t a1)
{
  double Current = CFAbsoluteTimeGetCurrent();
  double v3 = *(double *)(a1 + 368);
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  double v4 = vabdd_f64(Current, v3);
  uint64_t v5 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *(_DWORD *)(a1 + 352);
    *(_DWORD *)long long buf = 67109376;
    int v9 = v6;
    __int16 v10 = 2048;
    double v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "NETWORK: check reschedule, fQueryRetries, %d, sinceLastRetry, %.1lf", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::rescheduleOnReachability()", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  if (v4 >= 900.0)
  {
    *(_DWORD *)(a1 + 352) = 0;
    *(double *)(a1 + 360) = Current;
    goto LABEL_10;
  }
  if (*(int *)(a1 + 352) <= 4) {
LABEL_10:
  }
    sub_1006E2918(a1, (uint64_t)"rescheduleOnReachability");
}

void sub_1006E2918(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 512))
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v2 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "NETWORK: scheduleRetryTimer, retry timer already scheduled", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      LOWORD(v27) = 0;
LABEL_25:
      uint64_t v25 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::scheduleRetryTimer(const char *)", "%s\n", v25);
      if (v25 != (char *)buf) {
        free(v25);
      }
    }
  }
  else
  {
    int v5 = sub_1006FA6FC(a1);
    if (v5)
    {
      if (*(unsigned char *)(a1 + 524)) {
        double v6 = sub_1004BF698(*(_DWORD *)(a1 + 352), 8, 5);
      }
      else {
        double v6 = 10.0;
      }
      id v7 = [*(id *)(a1 + 40) newTimer];
      *(void *)(a1 + 512) = v7;
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472;
      v26[2] = sub_1006FA9FC;
      v26[3] = &unk_1022A3020;
      v26[4] = a1;
      [v7 setHandler:v26];
      [*(id *)(a1 + 512) setNextFireDelay:v6];
    }
    else
    {
      sub_1006F744C(a1, (uint64_t)"scheduleRetryTimer");
      double v6 = -1.0;
    }
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v8 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v9 = *(void *)(a1 + 512);
      int v10 = *(_DWORD *)(a1 + 352);
      uint64_t v11 = *(void *)(a1 + 432);
      uint64_t v12 = *(void *)(a1 + 184);
      uint64_t v13 = *(void *)(a1 + 224);
      uint64_t v14 = *(void *)(a1 + 264);
      uint64_t v15 = *(void *)(a1 + 304);
      uint64_t v16 = *(void *)(a1 + 344);
      *(_DWORD *)long long buf = 136317698;
      uint64_t v50 = a2;
      __int16 v51 = 2048;
      uint64_t v52 = v9;
      __int16 v53 = 1024;
      int v54 = v10;
      __int16 v55 = 2048;
      uint64_t v56 = v11;
      __int16 v57 = 2048;
      uint64_t v58 = v12;
      __int16 v59 = 2048;
      uint64_t v60 = v13;
      __int16 v61 = 2048;
      uint64_t v62 = v14;
      __int16 v63 = 2048;
      uint64_t v64 = v15;
      __int16 v65 = 2048;
      uint64_t v66 = v16;
      __int16 v67 = 2048;
      double v68 = v6;
      __int16 v69 = 1024;
      int v70 = v5;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "NETWORK: scheduleRetryTimer, %s, %p, fQueryRetries, %d, pending, %lu, %lu, %lu, %lu, %lu, %lu, timerInterval, %.1lf, isTimerNeeded, %d", buf, 0x68u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      uint64_t v17 = *(void *)(a1 + 512);
      int v18 = *(_DWORD *)(a1 + 352);
      uint64_t v19 = *(void *)(a1 + 432);
      uint64_t v20 = *(void *)(a1 + 184);
      uint64_t v21 = *(void *)(a1 + 224);
      uint64_t v22 = *(void *)(a1 + 264);
      uint64_t v23 = *(void *)(a1 + 304);
      uint64_t v24 = *(void *)(a1 + 344);
      int v27 = 136317698;
      uint64_t v28 = a2;
      __int16 v29 = 2048;
      uint64_t v30 = v17;
      __int16 v31 = 1024;
      int v32 = v18;
      __int16 v33 = 2048;
      uint64_t v34 = v19;
      __int16 v35 = 2048;
      uint64_t v36 = v20;
      __int16 v37 = 2048;
      uint64_t v38 = v21;
      __int16 v39 = 2048;
      uint64_t v40 = v22;
      __int16 v41 = 2048;
      uint64_t v42 = v23;
      __int16 v43 = 2048;
      uint64_t v44 = v24;
      __int16 v45 = 2048;
      double v46 = v6;
      __int16 v47 = 1024;
      int v48 = v5;
      goto LABEL_25;
    }
  }
}

NSDictionary *sub_1006E2D58(uint64_t a1)
{
  CFStringRef v2 = @"outcome";
  double v3 = +[NSString stringWithUTF8String:*(void *)(a1 + 32)];
  return +[NSDictionary dictionaryWithObjects:&v3 forKeys:&v2 count:1];
}

uint64_t sub_1006E2DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1006DE6A4(a1, a2, a3);
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022C5150);
  }
  double v4 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "CELL_LOC: ignoring cell since local and network locations disagree.", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    uint64_t v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL getCellLocationWhenLocalAndRemoteDiffer(const std::string &, CLDaemonLocation &, const CLDaemonLocation &)", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
  }
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(_DWORD *)(a2 + 112) = 0;
  *(void *)(a2 + 136) = 0;
  *(void *)(a2 + 144) = 0;
  *(void *)(a2 + 128) = 0;
  *(unsigned char *)(a2 + 152) = 0;
  *(_DWORD *)a2 = 0xFFFF;
  *(void *)(a2 + 12) = 0;
  *(void *)(a2 + 4) = 0;
  *(_OWORD *)(a2 + 20) = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a2 + 36) = _Q0;
  *(_OWORD *)(a2 + 52) = _Q0;
  *(_OWORD *)(a2 + 68) = _Q0;
  *(_DWORD *)(a2 + 84) = 0;
  *(void *)(a2 + 88) = 0xBFF0000000000000;
  *(void *)(a2 + 116) = 0xBFF0000000000000;
  *(_DWORD *)(a2 + 124) = 0x7FFFFFFF;
  *(void *)long long buf = _NSConcreteStackBlock;
  uint64_t v13 = 3221225472;
  uint64_t v14 = sub_1006E2D58;
  uint64_t v15 = &unk_1022A6368;
  uint64_t v16 = off_10241D4D8;
  AnalyticsSendEventLazy();
  return 0;
}

void sub_1006E3030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + 104) = 0;
  *(_DWORD *)(a3 + 112) = 0;
  *(void *)(a3 + 136) = 0;
  *(void *)(a3 + 144) = 0;
  *(void *)(a3 + 128) = 0;
  *(unsigned char *)(a3 + 152) = 0;
  *(_DWORD *)a3 = 0xFFFF;
  *(void *)(a3 + 4) = 0;
  *(void *)(a3 + 12) = 0;
  *(_OWORD *)(a3 + 20) = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a3 + 36) = _Q0;
  *(_OWORD *)(a3 + 52) = _Q0;
  *(_OWORD *)(a3 + 68) = _Q0;
  *(_DWORD *)(a3 + 84) = 0;
  *(void *)(a3 + 88) = 0xBFF0000000000000;
  *(void *)(a3 + 96) = 0;
  *(void *)(a3 + 116) = 0xBFF0000000000000;
  *(_DWORD *)(a3 + 124) = 0x7FFFFFFF;
  uint64_t v8 = sub_1006DEA44(a1);
  sub_1006BD150(*(void *)(v8 + 32));
}

void sub_1006E3984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1006E39D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + 104) = 0;
  *(_DWORD *)(a3 + 112) = 0;
  *(void *)(a3 + 136) = 0;
  *(void *)(a3 + 144) = 0;
  *(void *)(a3 + 128) = 0;
  *(unsigned char *)(a3 + 152) = 0;
  *(_DWORD *)a3 = 0xFFFF;
  *(void *)(a3 + 4) = 0;
  *(void *)(a3 + 12) = 0;
  *(_OWORD *)(a3 + 20) = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a3 + 36) = _Q0;
  *(_OWORD *)(a3 + 52) = _Q0;
  *(_OWORD *)(a3 + 68) = _Q0;
  *(_DWORD *)(a3 + 84) = 0;
  *(void *)(a3 + 88) = 0xBFF0000000000000;
  *(void *)(a3 + 96) = 0;
  *(void *)(a3 + 116) = 0xBFF0000000000000;
  *(_DWORD *)(a3 + 124) = 0x7FFFFFFF;
  uint64_t v8 = sub_1006DE934(a1);
  sub_1006BD150(*(void *)(v8 + 32));
}

void sub_1006E4324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1006E4370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v17 = *(_DWORD *)a2;
  memset(v18, 0, sizeof(v18));
  sub_10010F834(v18, *(const void **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  long long v6 = *(_OWORD *)(a2 + 208);
  long long v29 = *(_OWORD *)(a2 + 192);
  v30[0] = v6;
  *(_OWORD *)((char *)v30 + 12) = *(_OWORD *)(a2 + 220);
  long long v7 = *(_OWORD *)(a2 + 144);
  long long v25 = *(_OWORD *)(a2 + 128);
  long long v26 = v7;
  long long v8 = *(_OWORD *)(a2 + 176);
  long long v27 = *(_OWORD *)(a2 + 160);
  long long v28 = v8;
  long long v9 = *(_OWORD *)(a2 + 80);
  long long v21 = *(_OWORD *)(a2 + 64);
  long long v22 = v9;
  long long v10 = *(_OWORD *)(a2 + 112);
  long long v23 = *(_OWORD *)(a2 + 96);
  long long v24 = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  long long v19 = *(_OWORD *)(a2 + 32);
  long long v20 = v11;
  if (*(char *)(a2 + 263) < 0)
  {
    sub_1000DC48C(v31, *(void **)(a2 + 240), *(void *)(a2 + 248));
  }
  else
  {
    *(_OWORD *)__int16 v31 = *(_OWORD *)(a2 + 240);
    v31[2] = *(void **)(a2 + 256);
  }
  long long v12 = *(_OWORD *)(a2 + 408);
  long long v40 = *(_OWORD *)(a2 + 392);
  long long v41 = v12;
  long long v13 = *(_OWORD *)(a2 + 344);
  long long v36 = *(_OWORD *)(a2 + 328);
  long long v37 = v13;
  long long v14 = *(_OWORD *)(a2 + 376);
  long long v38 = *(_OWORD *)(a2 + 360);
  long long v39 = v14;
  long long v15 = *(_OWORD *)(a2 + 280);
  long long v32 = *(_OWORD *)(a2 + 264);
  long long v33 = v15;
  long long v16 = *(_OWORD *)(a2 + 312);
  long long v34 = *(_OWORD *)(a2 + 296);
  long long v35 = v16;
  int v42 = *(_DWORD *)(a2 + 424);
  sub_1006E9D30((uint64_t)&v17);
  sub_1006E8E6C(a1, &v17, a3);
}

void sub_1006E57F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1006302A8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1006E58D4(uint64_t a1)
{
  if ((*(_DWORD *)(a1 + 8) - 3) < 3) {
    return a1 + 80;
  }
  uint64_t v2 = sub_101A6B420();
  return sub_1006E5900(v2);
}

void sub_1006E5900(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  long long v3 = a2[1];
  v4[0] = *a2;
  v4[1] = v3;
  sub_1006E3030(a1, (uint64_t)v4, a3);
}

void sub_1006E6638(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (*(char *)(v28 - 73) < 0) {
    operator delete(*(void **)(v28 - 96));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006E6690(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 < 3 || v1 == 7) {
    return a1 + 12;
  }
  uint64_t v3 = sub_101A6B58C();
  return sub_1006E66BC(v3);
}

void sub_1006E66BC(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  long long v3 = a2[1];
  v4[0] = *a2;
  v4[1] = v3;
  sub_1006E39D0(a1, (uint64_t)v4, a3);
}

void sub_1006E73F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (*(char *)(v28 - 73) < 0) {
    operator delete(*(void **)(v28 - 96));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006E744C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 8) == 9) {
    return a1 + 44;
  }
  uint64_t v2 = sub_101A6B6F8();
  return sub_1006E7474(v2);
}

void sub_1006E7474(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v3 = a2[3];
  int32x4_t v11[2] = a2[2];
  _OWORD v11[3] = v3;
  long long v4 = a2[5];
  void v11[4] = a2[4];
  v11[5] = v4;
  long long v5 = a2[1];
  v11[0] = *a2;
  v11[1] = v5;
  *(void *)(a3 + 96) = 0;
  *(void *)(a3 + 104) = 0;
  *(_DWORD *)(a3 + 112) = 0;
  *(void *)(a3 + 136) = 0;
  *(void *)(a3 + 144) = 0;
  *(void *)(a3 + 128) = 0;
  *(unsigned char *)(a3 + 152) = 0;
  *(_DWORD *)a3 = 0xFFFF;
  *(void *)(a3 + 12) = 0;
  *(void *)(a3 + 4) = 0;
  *(_OWORD *)(a3 + 20) = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a3 + 36) = _Q0;
  *(_OWORD *)(a3 + 52) = _Q0;
  *(_OWORD *)(a3 + 68) = _Q0;
  *(_DWORD *)(a3 + 84) = 0;
  *(void *)(a3 + 88) = 0xBFF0000000000000;
  *(void *)(a3 + 116) = 0xBFF0000000000000;
  *(_DWORD *)(a3 + 124) = 0x7FFFFFFF;
  sub_1006E82A0(a1, v11, a3);
}

void sub_1006E8220(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (*(char *)(v36 - 89) < 0) {
    operator delete(*(void **)(v36 - 112));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006E8278(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 8) != 10)
  {
    uint64_t v2 = sub_101A6B864();
    sub_1006E82A0(v2, v3, v4);
  }
  return a1 + 600;
}

void sub_1006E82A0(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v5 = a2[3];
  long long v17 = a2[2];
  long long v18 = v5;
  long long v6 = a2[5];
  long long v19 = a2[4];
  long long v20 = v6;
  long long v7 = a2[1];
  long long v15 = *a2;
  long long v16 = v7;
  sub_100614EB8(&v14);
  *(void *)(a3 + 104) = 0;
  *(_DWORD *)(a3 + 112) = 0;
  *(void *)(a3 + 136) = 0;
  *(void *)(a3 + 144) = 0;
  *(void *)(a3 + 128) = 0;
  *(unsigned char *)(a3 + 152) = 0;
  *(_DWORD *)a3 = 0xFFFF;
  *(void *)(a3 + 4) = 0;
  *(void *)(a3 + 12) = 0;
  *(_OWORD *)(a3 + 20) = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a3 + 36) = _Q0;
  *(_OWORD *)(a3 + 52) = _Q0;
  *(_OWORD *)(a3 + 68) = _Q0;
  *(_DWORD *)(a3 + 84) = 0;
  *(void *)(a3 + 88) = 0xBFF0000000000000;
  *(void *)(a3 + 96) = 0;
  *(void *)(a3 + 116) = 0xBFF0000000000000;
  *(_DWORD *)(a3 + 124) = 0x7FFFFFFF;
  uint64_t v13 = sub_1006DEC68(a1);
  sub_10082E220(*(void *)(v13 + 32));
}

void sub_1006E8DDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1006E8E6C(uint64_t a1, int *a2, uint64_t a3)
{
  int v26 = *a2;
  memset(v27, 0, sizeof(v27));
  sub_10010F834(v27, *((const void **)a2 + 1), *((void *)a2 + 2), (uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 2);
  long long v6 = *((_OWORD *)a2 + 12);
  long long v7 = *((_OWORD *)a2 + 13);
  long long v8 = *((_OWORD *)a2 + 10);
  long long v37 = *((_OWORD *)a2 + 11);
  long long v38 = v6;
  v39[0] = v7;
  *(_OWORD *)((char *)v39 + 12) = *(_OWORD *)(a2 + 55);
  long long v9 = *((_OWORD *)a2 + 8);
  long long v10 = *((_OWORD *)a2 + 9);
  long long v11 = *((_OWORD *)a2 + 6);
  long long v33 = *((_OWORD *)a2 + 7);
  long long v34 = v9;
  long long v35 = v10;
  long long v36 = v8;
  long long v12 = *((_OWORD *)a2 + 5);
  long long v30 = *((_OWORD *)a2 + 4);
  long long v31 = v12;
  long long v32 = v11;
  long long v13 = *((_OWORD *)a2 + 3);
  long long v28 = *((_OWORD *)a2 + 2);
  long long v29 = v13;
  if (*((char *)a2 + 263) < 0)
  {
    sub_1000DC48C(v40, *((void **)a2 + 30), *((void *)a2 + 31));
  }
  else
  {
    *(_OWORD *)long long v40 = *((_OWORD *)a2 + 15);
    v40[2] = *((void **)a2 + 32);
  }
  long long v14 = *(_OWORD *)(a2 + 102);
  long long v49 = *(_OWORD *)(a2 + 98);
  long long v50 = v14;
  long long v15 = *(_OWORD *)(a2 + 86);
  long long v45 = *(_OWORD *)(a2 + 82);
  long long v46 = v15;
  long long v16 = *(_OWORD *)(a2 + 94);
  long long v47 = *(_OWORD *)(a2 + 90);
  long long v48 = v16;
  long long v17 = *(_OWORD *)(a2 + 70);
  long long v41 = *(_OWORD *)(a2 + 66);
  long long v42 = v17;
  long long v18 = *(_OWORD *)(a2 + 78);
  long long v43 = *(_OWORD *)(a2 + 74);
  long long v44 = v18;
  int v51 = a2[106];
  sub_1006E9D30((uint64_t)&v26);
  sub_100613DB4((uint64_t)&v26, &v25);
  *(void *)(a3 + 104) = 0;
  *(_DWORD *)(a3 + 112) = 0;
  *(void *)(a3 + 136) = 0;
  *(void *)(a3 + 144) = 0;
  *(void *)(a3 + 128) = 0;
  *(unsigned char *)(a3 + 152) = 0;
  *(_DWORD *)a3 = 0xFFFF;
  *(void *)(a3 + 4) = 0;
  *(void *)(a3 + 12) = 0;
  *(_OWORD *)(a3 + 20) = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a3 + 36) = _Q0;
  *(_OWORD *)(a3 + 52) = _Q0;
  *(_OWORD *)(a3 + 68) = _Q0;
  *(_DWORD *)(a3 + 84) = 0;
  *(void *)(a3 + 88) = 0xBFF0000000000000;
  *(void *)(a3 + 96) = 0;
  *(void *)(a3 + 116) = 0xBFF0000000000000;
  *(_DWORD *)(a3 + 124) = 0x7FFFFFFF;
  uint64_t v24 = sub_1006DEB54(a1);
  sub_1009B4724(*(void *)(v24 + 32));
}

void sub_1006E9C68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, ...)
{
  va_start(va, a14);
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1006302A8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1006E9D30(uint64_t a1)
{
  unsigned int v1 = *(_DWORD **)(a1 + 8);
  unint64_t v2 = *(void *)(a1 + 16) - (void)v1;
  if (v2)
  {
    *(_DWORD *)a1 = *v1;
    if (v2 >= 5)
    {
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      uint64_t v4 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
      {
        long long v5 = *(int **)(a1 + 8);
        int v6 = *v5;
        LODWORD(v5) = v5[1];
        *(_DWORD *)long long buf = 67109376;
        int v9 = v6;
        __int16 v10 = 1024;
        int v11 = (int)v5;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#Warning ignoring second MCC %d %d", buf, 0xEu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        long long v7 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLTelephonyService_Type::CdmaCell::applyDerivedMcc()", "%s\n", v7);
        if (v7 != (char *)buf) {
          free(v7);
        }
      }
    }
  }
}

uint64_t sub_1006E9F20(uint64_t a1, void *a2, void *a3, uint64_t *a4, void *a5, void *a6, uint64_t **a7, int a8, unsigned __int8 a9, uint64_t a10)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022C5150);
  }
  long long v15 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v16 = (uint64_t)(a2[1] - *a2) >> 5;
    uint64_t v17 = (uint64_t)(a3[1] - *a3) >> 5;
    unint64_t v18 = 0x84BDA12F684BDA13 * ((a4[1] - *a4) >> 4);
    uint64_t v19 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(a5[1] - *a5) >> 3);
    unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a6[1] - *a6) >> 5);
    uint64_t v21 = a7[1] - *a7;
    *(_DWORD *)long long buf = 134350848;
    *(void *)&uint8_t buf[4] = v16;
    *(_WORD *)&unsigned char buf[12] = 2050;
    *(void *)&buf[14] = v17;
    *(_WORD *)&unsigned char buf[22] = 2050;
    *(void *)&unsigned char buf[24] = v18;
    *(_WORD *)&unsigned char buf[32] = 2050;
    *(void *)&buf[34] = v19;
    *(_WORD *)&buf[42] = 2050;
    *(void *)&buf[44] = v20;
    *(_WORD *)&buf[52] = 2050;
    *(void *)&buf[54] = v21;
    *(_WORD *)&buf[62] = 1026;
    *(_DWORD *)&buf[64] = a8;
    __int16 v404 = 1026;
    int v405 = a9;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "@AlsFlow, query, in, cells, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{public}lu, wifi, %{public}lu, cache, %{public}d, piggyback, %{public}d\n", buf, 0x4Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    uint64_t v318 = (uint64_t)(a2[1] - *a2) >> 5;
    uint64_t v319 = (uint64_t)(a3[1] - *a3) >> 5;
    unint64_t v320 = 0x84BDA12F684BDA13 * ((a4[1] - *a4) >> 4);
    uint64_t v321 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(a5[1] - *a5) >> 3);
    unint64_t v322 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a6[1] - *a6) >> 5);
    uint64_t v323 = a7[1] - *a7;
    *(_DWORD *)v380 = 134350848;
    *(void *)&v380[4] = v318;
    *(_WORD *)&v380[12] = 2050;
    *(void *)&v380[14] = v319;
    *(_WORD *)&v380[22] = 2050;
    *(void *)&v380[24] = v320;
    *(_WORD *)&v380[32] = 2050;
    *(void *)&v380[34] = v321;
    *(_WORD *)&v380[42] = 2050;
    *(void *)&v380[44] = v322;
    *(_WORD *)&v380[52] = 2050;
    *(void *)&v380[54] = v323;
    *(_WORD *)&v380[62] = 1026;
    *(_DWORD *)&v380[64] = a8;
    *(_WORD *)&v380[68] = 1026;
    *(_DWORD *)&v380[70] = a9;
    v324 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v324);
    if (v324 != buf) {
      free(v324);
    }
  }
  if (*(unsigned char *)(a1 + 456))
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    long long v22 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "@AlsFlow, query, skip, private", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 == -1)
    {
LABEL_488:
      *(_WORD *)v380 = 0;
      v325 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v325);
      if (v325 != buf) {
        free(v325);
      }
      return 0xFFFFFFFFLL;
    }
LABEL_535:
    dispatch_once(&qword_1024193A0, &stru_1022C5150);
    goto LABEL_488;
  }
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32))(*(void *)(a1 + 112)) != 1)
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    __int16 v61 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, OS_LOG_TYPE_DEFAULT, "@AlsFlow, query, skip, bigswitch", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 == -1) {
      goto LABEL_488;
    }
    goto LABEL_535;
  }
  if (!*(_DWORD *)(a1 + 608) && !*(unsigned char *)(a1 + 440))
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    v317 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v317, OS_LOG_TYPE_DEFAULT, "@AlsFlow, query, skip, connectivity", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 == -1) {
      goto LABEL_488;
    }
    goto LABEL_535;
  }
  int v352 = 0xFFFF;
  uint64_t v353 = 0;
  uint64_t v354 = 0;
  long long v355 = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v356 = _Q0;
  long long v357 = _Q0;
  long long v358 = _Q0;
  uint64_t v361 = 0;
  uint64_t v362 = 0;
  unint64_t v360 = 0xBFF0000000000000;
  int v359 = 0;
  int v363 = 0;
  unint64_t v364 = 0xBFF0000000000000;
  int v365 = 0x7FFFFFFF;
  uint64_t v367 = 0;
  uint64_t v368 = 0;
  uint64_t v366 = 0;
  char v369 = 0;
  double Current = CFAbsoluteTimeGetCurrent();
  v341 = a7;
  uint64_t v342 = a1;
  uint64_t v349 = 0;
  unint64_t v350 = 0;
  unint64_t v351 = 0;
  uint64_t v29 = *a4;
  if (a4[1] != *a4)
  {
    uint64_t v30 = 0;
    unsigned int v31 = 1;
    do
    {
      uint64_t v32 = v29 + 432 * v30;
      *(_DWORD *)v380 = *(_DWORD *)v32;
      memset(&v380[8], 0, 24);
      sub_10010F834(&v380[8], *(const void **)(v32 + 8), *(void *)(v32 + 16), (uint64_t)(*(void *)(v32 + 16) - *(void *)(v32 + 8)) >> 2);
      *(_OWORD *)&v380[32] = *(_OWORD *)(v32 + 32);
      long long v33 = *(_OWORD *)(v32 + 48);
      long long v34 = *(_OWORD *)(v32 + 64);
      long long v35 = *(_OWORD *)(v32 + 96);
      long long v381 = *(_OWORD *)(v32 + 80);
      long long v382 = v35;
      *(_OWORD *)&v380[48] = v33;
      *(_OWORD *)&v380[64] = v34;
      long long v36 = *(_OWORD *)(v32 + 112);
      long long v37 = *(_OWORD *)(v32 + 128);
      long long v38 = *(_OWORD *)(v32 + 160);
      long long v385 = *(_OWORD *)(v32 + 144);
      long long v386 = v38;
      long long v383 = v36;
      long long v384 = v37;
      long long v39 = *(_OWORD *)(v32 + 176);
      long long v40 = *(_OWORD *)(v32 + 192);
      long long v41 = *(_OWORD *)(v32 + 208);
      *(_OWORD *)((char *)v389 + 12) = *(_OWORD *)(v32 + 220);
      long long v388 = v40;
      v389[0] = v41;
      long long v387 = v39;
      long long v42 = (void **)(v32 + 240);
      if (*(char *)(v32 + 263) < 0)
      {
        sub_1000DC48C(&v390, *v42, *(void *)(v29 + 432 * v30 + 248));
      }
      else
      {
        long long v43 = *(_OWORD *)v42;
        uint64_t v391 = *(void *)(v32 + 256);
        long long v390 = v43;
      }
      uint64_t v44 = v29 + 432 * v30;
      long long v45 = *(_OWORD *)(v44 + 264);
      long long v46 = *(_OWORD *)(v44 + 296);
      long long v393 = *(_OWORD *)(v44 + 280);
      long long v394 = v46;
      long long v392 = v45;
      long long v47 = *(_OWORD *)(v44 + 312);
      long long v48 = *(_OWORD *)(v44 + 328);
      long long v49 = *(_OWORD *)(v44 + 360);
      long long v397 = *(_OWORD *)(v44 + 344);
      long long v398 = v49;
      long long v395 = v47;
      long long v396 = v48;
      long long v50 = *(_OWORD *)(v44 + 376);
      long long v51 = *(_OWORD *)(v44 + 392);
      long long v52 = *(_OWORD *)(v44 + 408);
      int v402 = *(_DWORD *)(v44 + 424);
      long long v400 = v51;
      long long v401 = v52;
      long long v399 = v50;
      sub_1006E9D30((uint64_t)v380);
      sub_100613DB4((uint64_t)v380, &__p);
      if (a8)
      {
        uint64_t v53 = sub_1006DEACC(a1);
        sub_1009B4724(*(void *)(v53 + 32));
      }
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      int v54 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
      {
        p_p = &__p;
        if (SHIBYTE(v379) < 0) {
          p_p = (long long *)__p;
        }
        *(_DWORD *)long long buf = 136315138;
        *(void *)&uint8_t buf[4] = p_p;
        _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEBUG, "CELL_LOC: cdma cell, %s, re-querying", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        __int16 v59 = &__p;
        if (SHIBYTE(v379) < 0) {
          __int16 v59 = (long long *)__p;
        }
        LODWORD(v376) = 136315138;
        *(void *)((char *)&v376 + 4) = v59;
        uint64_t v60 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v60);
        if (v60 != buf) {
          free(v60);
        }
      }
      *(void *)&long long v376 = v380;
      *((double *)sub_1006FE398((uint64_t **)(a1 + 248), (uint64_t)v380, (uint64_t)&unk_101D0B290, (uint64_t *)&v376) + 58) = Current;
      unint64_t v56 = v350;
      if (v350 >= v351)
      {
        uint64_t v57 = sub_1006FECBC(&v349, (uint64_t)v380);
      }
      else
      {
        sub_1006FEDE4((uint64_t)&v351, v350, (uint64_t)v380);
        uint64_t v57 = v56 + 432;
      }
      unint64_t v350 = v57;
      if (SHIBYTE(v379) < 0) {
        operator delete((void *)__p);
      }
      if (SHIBYTE(v391) < 0) {
        operator delete((void *)v390);
      }
      if (*(void *)&v380[8])
      {
        *(void *)&v380[16] = *(void *)&v380[8];
        operator delete(*(void **)&v380[8]);
      }
      uint64_t v30 = v31;
      uint64_t v29 = *a4;
    }
    while (0x84BDA12F684BDA13 * ((a4[1] - *a4) >> 4) > v31++);
  }
  long long v376 = 0uLL;
  v377 = 0;
  if (a2[1] != *a2)
  {
    uint64_t v64 = 0;
    unsigned int v65 = 0;
    do
    {
      if (a8)
      {
        uint64_t v66 = sub_1006DE9BC(v342);
        sub_1006BD150(*(void *)(v66 + 32));
      }
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      __int16 v67 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
      {
        sub_100614504(buf);
        double v68 = buf;
        if (buf[23] < 0) {
          double v68 = *(unsigned char **)buf;
        }
        *(_DWORD *)v380 = 136315138;
        *(void *)&v380[4] = v68;
        _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_DEBUG, "CELL_LOC: gsm cell, %s, re-querying", v380, 0xCu);
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        sub_100614504(v380);
        long long v84 = v380;
        if (v380[23] < 0) {
          long long v84 = *(unsigned char **)v380;
        }
        LODWORD(__p) = 136315138;
        *(void *)((char *)&__p + 4) = v84;
        long long v85 = (char *)_os_log_send_and_compose_impl();
        if ((v380[23] & 0x80000000) != 0) {
          operator delete(*(void **)v380);
        }
        sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v85);
        if (v85 != buf) {
          free(v85);
        }
      }
      *(void *)v380 = *a2 + 32 * v64;
      *((double *)sub_1006FE20C((uint64_t **)(v342 + 168), *(_DWORD **)v380, (uint64_t)&unk_101D0B290, (_OWORD **)v380) + 8) = Current;
      __int16 v69 = (_OWORD *)(*a2 + 32 * v64);
      int v70 = (_OWORD *)*((void *)&v376 + 1);
      if (*((void *)&v376 + 1) >= (unint64_t)v377)
      {
        long long v73 = (_OWORD *)v376;
        uint64_t v74 = (uint64_t)(*((void *)&v376 + 1) - v376) >> 5;
        unint64_t v75 = v74 + 1;
        if ((unint64_t)(v74 + 1) >> 59) {
          sub_1001D7FD4();
        }
        uint64_t v76 = (uint64_t)&v377[-v376];
        if ((uint64_t)&v377[-v376] >> 4 > v75) {
          unint64_t v75 = v76 >> 4;
        }
        if ((unint64_t)v76 >= 0x7FFFFFFFFFFFFFE0) {
          unint64_t v77 = 0x7FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v77 = v75;
        }
        if (v77)
        {
          long long v78 = (char *)sub_1001D9EDC((uint64_t)&v377, v77);
          int v70 = (_OWORD *)*((void *)&v376 + 1);
          long long v73 = (_OWORD *)v376;
        }
        else
        {
          long long v78 = 0;
        }
        long long v79 = v69[1];
        uint64_t v80 = &v78[32 * v74];
        *(_OWORD *)uint64_t v80 = *v69;
        *((_OWORD *)v80 + 1) = v79;
        if (v70 == v73)
        {
          long long v83 = &v78[32 * v74];
        }
        else
        {
          char v81 = &v78[32 * v74];
          do
          {
            long long v82 = *(v70 - 1);
            long long v83 = v81 - 32;
            *((_OWORD *)v81 - 2) = *(v70 - 2);
            *((_OWORD *)v81 - 1) = v82;
            v70 -= 2;
            v81 -= 32;
          }
          while (v70 != v73);
        }
        long long v72 = v80 + 32;
        *(void *)&long long v376 = v83;
        *((void *)&v376 + 1) = v80 + 32;
        v377 = &v78[32 * v77];
        if (v73) {
          operator delete(v73);
        }
      }
      else
      {
        long long v71 = v69[1];
        **((_OWORD **)&v376 + 1) = *v69;
        v70[1] = v71;
        long long v72 = v70 + 2;
      }
      *((void *)&v376 + 1) = v72;
      uint64_t v64 = ++v65;
    }
    while (v65 < (unint64_t)((uint64_t)(a2[1] - *a2) >> 5));
  }
  long long __p = 0uLL;
  v379 = 0;
  if (a3[1] != *a3)
  {
    uint64_t v86 = 0;
    unsigned int v87 = 0;
    do
    {
      if (a8)
      {
        uint64_t v88 = sub_1006DE8AC(v342);
        sub_1006BD150(*(void *)(v88 + 32));
      }
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      long long v89 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
      {
        sub_100614504(buf);
        long long v90 = buf;
        if (buf[23] < 0) {
          long long v90 = *(unsigned char **)buf;
        }
        *(_DWORD *)v380 = 136315138;
        *(void *)&v380[4] = v90;
        _os_log_impl((void *)&_mh_execute_header, v89, OS_LOG_TYPE_DEBUG, "CELL_LOC: scdma cell, %s, re-querying", v380, 0xCu);
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        sub_100614504(v380);
        unint64_t v106 = v380;
        if (v380[23] < 0) {
          unint64_t v106 = *(unsigned char **)v380;
        }
        LODWORD(v374) = 136315138;
        *(void *)((char *)&v374 + 4) = v106;
        char v107 = (char *)_os_log_send_and_compose_impl();
        if ((v380[23] & 0x80000000) != 0) {
          operator delete(*(void **)v380);
        }
        sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v107);
        if (v107 != buf) {
          free(v107);
        }
      }
      *(void *)v380 = *a3 + 32 * v86;
      *((double *)sub_1006FE20C((uint64_t **)(v342 + 208), *(_DWORD **)v380, (uint64_t)&unk_101D0B290, (_OWORD **)v380) + 8) = Current;
      long long v91 = (_OWORD *)(*a3 + 32 * v86);
      uint64_t v92 = (_OWORD *)*((void *)&__p + 1);
      if (*((void *)&__p + 1) >= (unint64_t)v379)
      {
        int v95 = (_OWORD *)__p;
        uint64_t v96 = (uint64_t)(*((void *)&__p + 1) - __p) >> 5;
        unint64_t v97 = v96 + 1;
        if ((unint64_t)(v96 + 1) >> 59) {
          sub_1001D7FD4();
        }
        uint64_t v98 = (uint64_t)&v379[-__p];
        if ((uint64_t)&v379[-__p] >> 4 > v97) {
          unint64_t v97 = v98 >> 4;
        }
        if ((unint64_t)v98 >= 0x7FFFFFFFFFFFFFE0) {
          unint64_t v99 = 0x7FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v99 = v97;
        }
        if (v99)
        {
          int v100 = (char *)sub_1001D9EDC((uint64_t)&v379, v99);
          uint64_t v92 = (_OWORD *)*((void *)&__p + 1);
          int v95 = (_OWORD *)__p;
        }
        else
        {
          int v100 = 0;
        }
        long long v101 = v91[1];
        uint64_t v102 = &v100[32 * v96];
        *(_OWORD *)uint64_t v102 = *v91;
        *((_OWORD *)v102 + 1) = v101;
        if (v92 == v95)
        {
          uint64_t v105 = &v100[32 * v96];
        }
        else
        {
          unint64_t v103 = &v100[32 * v96];
          do
          {
            long long v104 = *(v92 - 1);
            uint64_t v105 = v103 - 32;
            *((_OWORD *)v103 - 2) = *(v92 - 2);
            *((_OWORD *)v103 - 1) = v104;
            v92 -= 2;
            v103 -= 32;
          }
          while (v92 != v95);
        }
        long long v94 = v102 + 32;
        *(void *)&long long __p = v105;
        *((void *)&__p + 1) = v102 + 32;
        v379 = &v100[32 * v99];
        if (v95) {
          operator delete(v95);
        }
      }
      else
      {
        long long v93 = v91[1];
        **((_OWORD **)&__p + 1) = *v91;
        v92[1] = v93;
        long long v94 = v92 + 2;
      }
      *((void *)&__p + 1) = v94;
      uint64_t v86 = ++v87;
    }
    while (v87 < (unint64_t)((uint64_t)(a3[1] - *a3) >> 5));
  }
  long long v374 = 0uLL;
  v375 = 0;
  if (a5[1] != *a5)
  {
    uint64_t v108 = 0;
    unsigned int v109 = 0;
    do
    {
      if (a8)
      {
        uint64_t v110 = sub_1000AB2B4(v342);
        sub_1000AB1AC(*(void *)(v110 + 32));
      }
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      long long v111 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
      {
        sub_1000AAEBC(buf);
        int v112 = buf;
        if (buf[23] < 0) {
          int v112 = *(unsigned char **)buf;
        }
        *(_DWORD *)v380 = 136315138;
        *(void *)&v380[4] = v112;
        _os_log_impl((void *)&_mh_execute_header, v111, OS_LOG_TYPE_DEBUG, "CELL_LOC: lte cell, %s, re-querying", v380, 0xCu);
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        sub_1000AAEBC(v380);
        long long v136 = v380;
        if (v380[23] < 0) {
          long long v136 = *(unsigned char **)v380;
        }
        LODWORD(v372) = 136315138;
        *(void *)((char *)&v372 + 4) = v136;
        long long v137 = (char *)_os_log_send_and_compose_impl();
        if ((v380[23] & 0x80000000) != 0) {
          operator delete(*(void **)v380);
        }
        sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v137);
        if (v137 != buf) {
          free(v137);
        }
      }
      *(void *)v380 = *a5 + 88 * v108;
      *((double *)sub_1006FEA04((uint64_t **)(v342 + 288), *(_DWORD **)v380, (uint64_t)&unk_101D0B290, (_OWORD **)v380)
      + 15) = Current;
      uint64_t v113 = *a5 + 88 * v108;
      uint64_t v114 = *((void *)&v374 + 1);
      if (*((void *)&v374 + 1) >= (unint64_t)v375)
      {
        uint64_t v120 = (void *)v374;
        uint64_t v121 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*((void *)&v374 + 1) - v374) >> 3);
        unint64_t v122 = v121 + 1;
        if ((unint64_t)(v121 + 1) > 0x2E8BA2E8BA2E8BALL) {
          sub_1001D7FD4();
        }
        if (0x5D1745D1745D1746 * ((uint64_t)&v375[-v374] >> 3) > v122) {
          unint64_t v122 = 0x5D1745D1745D1746 * ((uint64_t)&v375[-v374] >> 3);
        }
        if ((unint64_t)(0x2E8BA2E8BA2E8BA3 * ((uint64_t)&v375[-v374] >> 3)) >= 0x1745D1745D1745DLL) {
          unint64_t v123 = 0x2E8BA2E8BA2E8BALL;
        }
        else {
          unint64_t v123 = v122;
        }
        if (v123)
        {
          long long v124 = (char *)sub_1000DA8B4((uint64_t)&v375, v123);
          uint64_t v114 = *((void *)&v374 + 1);
          uint64_t v120 = (void *)v374;
        }
        else
        {
          long long v124 = 0;
        }
        long long v125 = &v124[88 * v121];
        long long v126 = *(_OWORD *)(v113 + 16);
        *(_OWORD *)long long v125 = *(_OWORD *)v113;
        *((_OWORD *)v125 + 1) = v126;
        long long v127 = *(_OWORD *)(v113 + 32);
        long long v128 = *(_OWORD *)(v113 + 48);
        long long v129 = *(_OWORD *)(v113 + 64);
        *((void *)v125 + 10) = *(void *)(v113 + 80);
        *((_OWORD *)v125 + 3) = v128;
        *((_OWORD *)v125 + 4) = v129;
        *((_OWORD *)v125 + 2) = v127;
        if ((void *)v114 == v120)
        {
          long long v135 = &v124[88 * v121];
        }
        else
        {
          long long v130 = &v124[88 * v121];
          do
          {
            long long v131 = *(_OWORD *)(v114 - 88);
            *(_OWORD *)(v130 - 72) = *(_OWORD *)(v114 - 72);
            *(_OWORD *)(v130 - 88) = v131;
            long long v132 = *(_OWORD *)(v114 - 56);
            long long v133 = *(_OWORD *)(v114 - 40);
            long long v134 = *(_OWORD *)(v114 - 24);
            long long v135 = v130 - 88;
            *((_DWORD *)v130 - 2) = *(_DWORD *)(v114 - 8);
            *(_OWORD *)(v130 - 24) = v134;
            *(_OWORD *)(v130 - 40) = v133;
            *(_OWORD *)(v130 - 56) = v132;
            v114 -= 88;
            v130 -= 88;
          }
          while ((void *)v114 != v120);
        }
        char v119 = v125 + 88;
        *(void *)&long long v374 = v135;
        *((void *)&v374 + 1) = v125 + 88;
        v375 = &v124[88 * v123];
        if (v120) {
          operator delete(v120);
        }
      }
      else
      {
        long long v115 = *(_OWORD *)(v113 + 16);
        **((_OWORD **)&v374 + 1) = *(_OWORD *)v113;
        *(_OWORD *)(v114 + 16) = v115;
        long long v116 = *(_OWORD *)(v113 + 32);
        long long v117 = *(_OWORD *)(v113 + 48);
        long long v118 = *(_OWORD *)(v113 + 64);
        *(void *)(v114 + 80) = *(void *)(v113 + 80);
        *(_OWORD *)(v114 + ++*(_DWORD *)(result + 48) = v117;
        *(_OWORD *)(v114 + 64) = v118;
        *(_OWORD *)(v114 + 32) = v116;
        char v119 = (char *)(v114 + 88);
      }
      *((void *)&v374 + 1) = v119;
      uint64_t v108 = ++v109;
    }
    while (0x2E8BA2E8BA2E8BA3 * ((uint64_t)(a5[1] - *a5) >> 3) > (unint64_t)v109);
  }
  long long v372 = 0uLL;
  v373 = 0;
  if (a6[1] != *a6)
  {
    uint64_t v138 = 0;
    unsigned int v139 = 0;
    do
    {
      if (a8)
      {
        uint64_t v140 = sub_1006DEBDC(v342);
        sub_10082E220(*(void *)(v140 + 32));
      }
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022C5150);
      }
      long long v141 = qword_1024193A8;
      if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
      {
        sub_100614EB8(buf);
        long long v142 = buf;
        if (buf[23] < 0) {
          long long v142 = *(unsigned char **)buf;
        }
        *(_DWORD *)v380 = 136315138;
        *(void *)&v380[4] = v142;
        _os_log_impl((void *)&_mh_execute_header, v141, OS_LOG_TYPE_DEBUG, "CELL_LOC: nr cell, %s, re-querying", v380, 0xCu);
        if ((buf[23] & 0x80000000) != 0) {
          operator delete(*(void **)buf);
        }
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022C5150);
        }
        sub_100614EB8(v380);
        long long v166 = v380;
        if (v380[23] < 0) {
          long long v166 = *(unsigned char **)v380;
        }
        LODWORD(v370) = 136315138;
        *(void *)((char *)&v370 + 4) = v166;
        long long v167 = (char *)_os_log_send_and_compose_impl();
        if ((v380[23] & 0x80000000) != 0) {
          operator delete(*(void **)v380);
        }
        sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v167);
        if (v167 != buf) {
          free(v167);
        }
      }
      *(void *)v380 = *a6 + 96 * v138;
      *((double *)sub_1006FEAA4((uint64_t **)(v342 + 328), *(uint64_t *)v380, (uint64_t)&unk_101D0B290, (_OWORD **)v380)
      + 16) = Current;
      int v143 = (_OWORD *)(*a6 + 96 * v138);
      int v144 = (_OWORD *)*((void *)&v372 + 1);
      if (*((void *)&v372 + 1) >= (unint64_t)v373)
      {
        long long v150 = (_OWORD *)v372;
        unint64_t v151 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v372 + 1) - v372) >> 5);
        unint64_t v152 = v151 + 1;
        if (v151 + 1 > 0x2AAAAAAAAAAAAAALL) {
          sub_1001D7FD4();
        }
        if (0x5555555555555556 * ((uint64_t)&v373[-v372] >> 5) > v152) {
          unint64_t v152 = 0x5555555555555556 * ((uint64_t)&v373[-v372] >> 5);
        }
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v373[-v372] >> 5) >= 0x155555555555555) {
          unint64_t v153 = 0x2AAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v153 = v152;
        }
        if (v153)
        {
          char v154 = (char *)sub_100642EA8((uint64_t)&v373, v153);
          int v144 = (_OWORD *)*((void *)&v372 + 1);
          long long v150 = (_OWORD *)v372;
        }
        else
        {
          char v154 = 0;
        }
        long long v155 = &v154[96 * v151];
        long long v156 = v143[1];
        *(_OWORD *)long long v155 = *v143;
        *((_OWORD *)v155 + 1) = v156;
        long long v157 = v143[2];
        long long v158 = v143[3];
        long long v159 = v143[5];
        *((_OWORD *)v155 + 4) = v143[4];
        *((_OWORD *)v155 + 5) = v159;
        *((_OWORD *)v155 + 2) = v157;
        *((_OWORD *)v155 + 3) = v158;
        if (v144 == v150)
        {
          long long v165 = &v154[96 * v151];
        }
        else
        {
          long long v160 = &v154[96 * v151];
          do
          {
            long long v161 = *(v144 - 5);
            *((_OWORD *)v160 - 6) = *(v144 - 6);
            *((_OWORD *)v160 - 5) = v161;
            long long v162 = *(v144 - 4);
            long long v163 = *(v144 - 3);
            long long v164 = *(v144 - 2);
            long long v165 = v160 - 96;
            *(_OWORD *)(v160 - 20) = *(_OWORD *)((char *)v144 - 20);
            *((_OWORD *)v160 - 3) = v163;
            *((_OWORD *)v160 - 2) = v164;
            *((_OWORD *)v160 - 4) = v162;
            v144 -= 6;
            v160 -= 96;
          }
          while (v144 != v150);
        }
        long long v149 = v155 + 96;
        *(void *)&long long v372 = v165;
        *((void *)&v372 + 1) = v155 + 96;
        v373 = &v154[96 * v153];
        if (v150) {
          operator delete(v150);
        }
      }
      else
      {
        long long v145 = v143[1];
        **((_OWORD **)&v372 + 1) = *v143;
        v144[1] = v145;
        long long v146 = v143[2];
        long long v147 = v143[3];
        long long v148 = v143[5];
        v144[4] = v143[4];
        v144[5] = v148;
        v144[2] = v146;
        v144[3] = v147;
        long long v149 = v144 + 6;
      }
      *((void *)&v372 + 1) = v149;
      uint64_t v138 = ++v139;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a6[1] - *a6) >> 5) > v139);
  }
  long long v370 = 0uLL;
  v371 = 0;
  long long v168 = *v341;
  long long v169 = v341[1];
  if (*v341 == v169)
  {
    int v171 = 0;
    int v346 = 0;
    int v170 = 0;
    uint64_t v172 = v342;
  }
  else
  {
    int v170 = 0;
    int v346 = 0;
    int v171 = 0;
    uint64_t v172 = v342;
    long long v173 = (uint64_t **)(v342 + 416);
    do
    {
      uint64_t v174 = *(void *)(v172 + 672);
      uint64_t v175 = *v168;
      long long v176 = operator new(8uLL);
      *(void *)v380 = v176;
      *long long v176 = v175;
      *(void *)&v380[16] = v176 + 1;
      *(void *)&v380[8] = v176 + 1;
      (*(void (**)(unsigned char *__return_ptr, uint64_t, unsigned char *))(*(void *)v174 + 32))(buf, v174, v380);
      uint64_t v172 = v342;
      if (*(void *)v380)
      {
        *(void *)&v380[8] = *(void *)v380;
        operator delete(*(void **)v380);
      }
      long long v177 = (double *)sub_100529674((uint64_t)buf, v168);
      if (&buf[8] == (unsigned char *)v177 || !a8 || Current - v177[13] >= 28800.0)
      {
        if (!a8
          || (long long v178 = (double *)sub_100529674((uint64_t)v173, v168), (double *)(v342 + 424) == v178)
          || Current - v178[5] >= 3600.0)
        {
          *(void *)v380 = v168;
          *((double *)sub_1006FF324(v173, v168, (uint64_t)&unk_101D0B290, (uint64_t **)v380) + 5) = Current;
          long long v179 = (char *)*((void *)&v370 + 1);
          if (*((void *)&v370 + 1) >= (unint64_t)v371)
          {
            long long v181 = (char *)v370;
            uint64_t v182 = (uint64_t)(*((void *)&v370 + 1) - v370) >> 3;
            unint64_t v183 = v182 + 1;
            if ((unint64_t)(v182 + 1) >> 61) {
              sub_1001D7FD4();
            }
            uint64_t v184 = (uint64_t)&v371[-v370];
            if ((uint64_t)&v371[-v370] >> 2 > v183) {
              unint64_t v183 = v184 >> 2;
            }
            if ((unint64_t)v184 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v185 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v185 = v183;
            }
            if (v185)
            {
              long long v186 = (char *)sub_1000DA54C((uint64_t)&v371, v185);
              long long v179 = (char *)*((void *)&v370 + 1);
              long long v181 = (char *)v370;
            }
            else
            {
              long long v186 = 0;
            }
            int v187 = &v186[8 * v182];
            *(void *)int v187 = *v168;
            long long v180 = v187 + 8;
            while (v179 != v181)
            {
              uint64_t v188 = *((void *)v179 - 1);
              v179 -= 8;
              *((void *)v187 - 1) = v188;
              v187 -= 8;
            }
            *(void *)&long long v370 = v187;
            *((void *)&v370 + 1) = v180;
            v371 = &v186[8 * v185];
            if (v181) {
              operator delete(v181);
            }
          }
          else
          {
            **((void **)&v370 + 1) = *v168;
            long long v180 = v179 + 8;
          }
          *((void *)&v370 + 1) = v180;
          ++v170;
        }
        else
        {
          ++v346;
        }
      }
      else
      {
        ++v171;
      }
      sub_1000F5BB0((uint64_t)buf, *(void **)&buf[8]);
      ++v168;
    }
    while (v168 != v169);
  }
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022C5150);
  }
  long long v189 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_INFO))
  {
    uint64_t v190 = v341[1] - *v341;
    *(_DWORD *)long long buf = 134350080;
    *(void *)&uint8_t buf[4] = v190;
    *(_WORD *)&unsigned char buf[12] = 1026;
    *(_DWORD *)&buf[14] = v170;
    *(_WORD *)&unsigned char buf[18] = 1026;
    *(_DWORD *)&buf[20] = v171;
    *(_WORD *)&unsigned char buf[24] = 1026;
    *(_DWORD *)&buf[26] = v346;
    *(_WORD *)&buf[30] = 2050;
    *(void *)&unsigned char buf[32] = (uint64_t)(*((void *)&v370 + 1) - v370) >> 3;
    _os_log_impl((void *)&_mh_execute_header, v189, OS_LOG_TYPE_INFO, "AlsWifi, query, in, %{public}lu, paths, %{public}d, %{public}d, %{public}d, out, %{public}lu", buf, 0x28u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    uint64_t v326 = v341[1] - *v341;
    *(_DWORD *)v380 = 134350080;
    *(void *)&v380[4] = v326;
    *(_WORD *)&v380[12] = 1026;
    *(_DWORD *)&v380[14] = v170;
    *(_WORD *)&v380[18] = 1026;
    *(_DWORD *)&v380[20] = v171;
    *(_WORD *)&v380[24] = 1026;
    *(_DWORD *)&v380[26] = v346;
    *(_WORD *)&v380[30] = 2050;
    *(void *)&v380[32] = (uint64_t)(*((void *)&v370 + 1) - v370) >> 3;
    v327 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v327);
    if (v327 != buf) {
      free(v327);
    }
    uint64_t v172 = v342;
  }
  if ((void)v376 != *((void *)&v376 + 1))
  {
    uint64_t v192 = *((void *)&__p + 1);
    uint64_t v191 = __p;
    uint64_t v193 = v349;
LABEL_259:
    *(_DWORD *)(v172 + 560) = ((unint64_t)(v192 - v191) >> 5)
                            + ((*((void *)&v376 + 1) - (void)v376) >> 5)
                            + 1749801491 * ((v350 - v193) >> 4)
                            + *(_DWORD *)(v172 + 560)
                            - 1171354717 * ((*((void *)&v374 + 1) - (void)v374) >> 3)
                            - 1431655765 * ((*((void *)&v372 + 1) - (void)v372) >> 5);
    *(_DWORD *)(v172 + 564) += (*((void *)&v370 + 1) - (void)v370) >> 3;
    if (a9) {
      int v194 = 100;
    }
    else {
      int v194 = 1;
    }
    uint64_t v195 = *(void *)(v172 + 448);
    *(_DWORD *)(v195 + 296) = 0;
    *(_DWORD *)(v195 + 300) = v194;
    unsigned int v344 = sub_1006EF0AC(v172, &v376, &__p, &v349, &v374, &v372, &v370, a10);
    *(void *)(*(void *)(v172 + 448) + 296) = &_mh_execute_header;
    goto LABEL_263;
  }
  uint64_t v192 = *((void *)&__p + 1);
  uint64_t v191 = __p;
  uint64_t v193 = v349;
  if ((void)__p != *((void *)&__p + 1)) {
    goto LABEL_259;
  }
  if (v349 != v350 || (void)v374 != *((void *)&v374 + 1) || (void)v372 != *((void *)&v372 + 1))
  {
    uint64_t v192 = __p;
    goto LABEL_259;
  }
  uint64_t v192 = __p;
  if ((void)v370 != *((void *)&v370 + 1)) {
    goto LABEL_259;
  }
  int v194 = 0;
  unsigned int v344 = -1;
LABEL_263:
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022C5150);
  }
  long long v196 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 67241984;
    *(_DWORD *)&uint8_t buf[4] = v344;
    *(_WORD *)&uint8_t buf[8] = 2050;
    *(void *)&buf[10] = (uint64_t)(*((void *)&v376 + 1) - v376) >> 5;
    *(_WORD *)&unsigned char buf[18] = 2050;
    *(void *)&buf[20] = (uint64_t)(*((void *)&__p + 1) - __p) >> 5;
    *(_WORD *)&buf[28] = 2050;
    *(void *)&buf[30] = 0x84BDA12F684BDA13 * ((uint64_t)(v350 - v349) >> 4);
    *(_WORD *)&buf[38] = 2050;
    *(void *)&unsigned char buf[40] = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*((void *)&v374 + 1) - v374) >> 3);
    *(_WORD *)&buf[48] = 2050;
    *(void *)&buf[50] = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v372 + 1) - v372) >> 5);
    *(_WORD *)&buf[58] = 2050;
    *(void *)&buf[60] = (uint64_t)(*((void *)&v370 + 1) - v370) >> 3;
    __int16 v404 = 1026;
    int v405 = v194;
    _os_log_impl((void *)&_mh_execute_header, v196, OS_LOG_TYPE_DEFAULT, "@AlsFlow, query, made, %{public}d, cells, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{public}lu, wifi, %{public}lu, nearby, %{public}d\n", buf, 0x4Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    *(_DWORD *)v380 = 67241984;
    *(_DWORD *)&v380[4] = v344;
    *(_WORD *)&v380[8] = 2050;
    *(void *)&v380[10] = (uint64_t)(*((void *)&v376 + 1) - v376) >> 5;
    *(_WORD *)&v380[18] = 2050;
    *(void *)&v380[20] = (uint64_t)(*((void *)&__p + 1) - __p) >> 5;
    *(_WORD *)&v380[28] = 2050;
    *(void *)&v380[30] = 0x84BDA12F684BDA13 * ((uint64_t)(v350 - v349) >> 4);
    *(_WORD *)&v380[38] = 2050;
    *(void *)&v380[40] = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*((void *)&v374 + 1) - v374) >> 3);
    *(_WORD *)&v380[48] = 2050;
    *(void *)&v380[50] = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v372 + 1) - v372) >> 5);
    *(_WORD *)&v380[58] = 2050;
    *(void *)&v380[60] = (uint64_t)(*((void *)&v370 + 1) - v370) >> 3;
    *(_WORD *)&v380[68] = 1026;
    *(_DWORD *)&v380[70] = v194;
    v328 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v328);
    if (v328 != buf) {
      free(v328);
    }
    uint64_t v172 = v342;
  }
  if (*(void *)(v172 + 432) > 0x258uLL)
  {
    v197 = *(double **)(v172 + 416);
    char v198 = (double *)(v172 + 424);
    if (v197 != (double *)(v172 + 424))
    {
      do
      {
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022C5150);
        }
        v199 = qword_1024193A8;
        if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
        {
          sub_10006DE8C((std::string *)v380);
          int v200 = v380[23];
          v201 = *(unsigned char **)v380;
          uint64_t v202 = *((void *)v197 + 5);
          double v203 = CFAbsoluteTimeGetCurrent();
          v204 = v380;
          if (v200 < 0) {
            v204 = v201;
          }
          double v205 = v203 - v197[5];
          *(_DWORD *)long long buf = 136381187;
          *(void *)&uint8_t buf[4] = v204;
          *(_WORD *)&unsigned char buf[12] = 2050;
          *(void *)&buf[14] = v202;
          *(_WORD *)&unsigned char buf[22] = 2050;
          *(double *)&unsigned char buf[24] = v205;
          _os_log_impl((void *)&_mh_execute_header, v199, OS_LOG_TYPE_DEBUG, "AlsWifi, pending, %{private}s, from, %{public}.3f, %{public}.3fs", buf, 0x20u);
          if ((v380[23] & 0x80000000) != 0) {
            operator delete(*(void **)v380);
          }
        }
        uint64_t v172 = v342;
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022C5150);
          }
          sub_10006DE8C(&v348);
          int v208 = SHIBYTE(v348.__r_.__value_.__r.__words[2]);
          std::string::size_type v209 = v348.__r_.__value_.__r.__words[0];
          uint64_t v210 = *((void *)v197 + 5);
          double v211 = CFAbsoluteTimeGetCurrent();
          v212 = &v348;
          if (v208 < 0) {
            v212 = (std::string *)v209;
          }
          double v213 = v211 - v197[5];
          *(_DWORD *)v380 = 136381187;
          *(void *)&v380[4] = v212;
          *(_WORD *)&v380[12] = 2050;
          *(void *)&v380[14] = v210;
          *(_WORD *)&v380[22] = 2050;
          *(double *)&v380[24] = v213;
          v214 = (char *)_os_log_send_and_compose_impl();
          if (SHIBYTE(v348.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v348.__r_.__value_.__l.__data_);
          }
          sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v214);
          uint64_t v172 = v342;
          if (v214 != buf) {
            free(v214);
          }
        }
        v206 = (double *)*((void *)v197 + 1);
        if (v206)
        {
          do
          {
            v207 = v206;
            v206 = *(double **)v206;
          }
          while (v206);
        }
        else
        {
          do
          {
            v207 = (double *)*((void *)v197 + 2);
            _ZF = *(void *)v207 == (void)v197;
            v197 = v207;
          }
          while (!_ZF);
        }
        v197 = v207;
      }
      while (v207 != v198);
    }
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    v215 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v216 = *(void *)(v172 + 432);
      *(_DWORD *)long long buf = 134349056;
      *(void *)&uint8_t buf[4] = v216;
      _os_log_impl((void *)&_mh_execute_header, v215, OS_LOG_TYPE_DEFAULT, "AlsWifi, clearpending, %{public}ld, #CloneMe", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022C5150);
      }
      uint64_t v331 = *(void *)(v342 + 432);
      *(_DWORD *)v380 = 134349056;
      *(void *)&v380[4] = v331;
      v332 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v332);
      if (v332 != buf) {
        free(v332);
      }
      uint64_t v172 = v342;
    }
    sub_1000F5BB0(v172 + 416, *(void **)(v172 + 424));
    *(void *)(v172 + 424) = 0;
    *(void *)(v172 + 432) = 0;
    *(void *)(v172 + 416) = v198;
  }
  if (*(void *)(v172 + 184) > 0x12CuLL)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    v217 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v218 = *(void *)(v172 + 184);
      *(_DWORD *)long long buf = 134217984;
      *(void *)&uint8_t buf[4] = v218;
      _os_log_impl((void *)&_mh_execute_header, v217, OS_LOG_TYPE_DEFAULT, "#Warning CELL_LOC: %ld pending gsm cells, clearing", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      uint64_t v329 = *(void *)(v342 + 184);
      *(_DWORD *)v380 = 134217984;
      *(void *)&v380[4] = v329;
      v330 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v330);
      if (v330 != buf) {
        free(v330);
      }
      uint64_t v172 = v342;
    }
    v219 = *(double **)(v172 + 168);
    v220 = (double *)(v172 + 176);
    if (v219 != (double *)(v172 + 176))
    {
      do
      {
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        v221 = qword_102419638;
        if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
        {
          sub_100614504(v380);
          int v222 = v380[23];
          v223 = *(unsigned char **)v380;
          uint64_t v224 = *((void *)v219 + 8);
          double v225 = CFAbsoluteTimeGetCurrent();
          if (v222 >= 0) {
            v226 = v380;
          }
          else {
            v226 = v223;
          }
          double v227 = v225 - v219[8];
          *(_DWORD *)long long buf = 136315650;
          *(void *)&uint8_t buf[4] = v226;
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v224;
          *(_WORD *)&unsigned char buf[22] = 2048;
          *(double *)&unsigned char buf[24] = v227;
          _os_log_impl((void *)&_mh_execute_header, v221, OS_LOG_TYPE_DEBUG, "CELL_LOC: pending gsm cell, %s, from, %.3f, %.3f, ago)", buf, 0x20u);
          if ((v380[23] & 0x80000000) != 0) {
            operator delete(*(void **)v380);
          }
          uint64_t v172 = v342;
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419630 != -1) {
            dispatch_once(&qword_102419630, &stru_1022C5170);
          }
          sub_100614504(&v348);
          int v230 = SHIBYTE(v348.__r_.__value_.__r.__words[2]);
          std::string::size_type v231 = v348.__r_.__value_.__r.__words[0];
          uint64_t v232 = *((void *)v219 + 8);
          double v233 = CFAbsoluteTimeGetCurrent();
          v234 = &v348;
          if (v230 < 0) {
            v234 = (std::string *)v231;
          }
          double v235 = v233 - v219[8];
          *(_DWORD *)v380 = 136315650;
          *(void *)&v380[4] = v234;
          *(_WORD *)&v380[12] = 2048;
          *(void *)&v380[14] = v232;
          *(_WORD *)&v380[22] = 2048;
          *(double *)&v380[24] = v235;
          v236 = (char *)_os_log_send_and_compose_impl();
          if (SHIBYTE(v348.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v348.__r_.__value_.__l.__data_);
          }
          sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v236);
          uint64_t v172 = v342;
          if (v236 != buf) {
            free(v236);
          }
        }
        v228 = (double *)*((void *)v219 + 1);
        if (v228)
        {
          do
          {
            v229 = v228;
            v228 = *(double **)v228;
          }
          while (v228);
        }
        else
        {
          do
          {
            v229 = (double *)*((void *)v219 + 2);
            _ZF = *(void *)v229 == (void)v219;
            v219 = v229;
          }
          while (!_ZF);
        }
        v219 = v229;
      }
      while (v229 != v220);
    }
    sub_1000F5BB0(v172 + 168, *(void **)(v172 + 176));
    *(void *)(v172 + 176) = 0;
    *(void *)(v172 + 184) = 0;
    *(void *)(v172 + 168) = v220;
  }
  if (*(void *)(v172 + 224) > 0x12CuLL)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    v237 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v238 = *(void *)(v172 + 224);
      *(_DWORD *)long long buf = 134217984;
      *(void *)&uint8_t buf[4] = v238;
      _os_log_impl((void *)&_mh_execute_header, v237, OS_LOG_TYPE_DEFAULT, "#Warning CELL_LOC: %ld pending scdma cells, clearing", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      uint64_t v333 = *(void *)(v342 + 224);
      *(_DWORD *)v380 = 134217984;
      *(void *)&v380[4] = v333;
      v334 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v334);
      if (v334 != buf) {
        free(v334);
      }
      uint64_t v172 = v342;
    }
    v239 = *(double **)(v172 + 208);
    v240 = (double *)(v172 + 216);
    if (v239 != (double *)(v172 + 216))
    {
      do
      {
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        v241 = qword_102419638;
        if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
        {
          sub_100614504(v380);
          int v242 = v380[23];
          v243 = *(unsigned char **)v380;
          uint64_t v244 = *((void *)v239 + 8);
          double v245 = CFAbsoluteTimeGetCurrent();
          if (v242 >= 0) {
            v246 = v380;
          }
          else {
            v246 = v243;
          }
          double v247 = v245 - v239[8];
          *(_DWORD *)long long buf = 136315650;
          *(void *)&uint8_t buf[4] = v246;
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v244;
          *(_WORD *)&unsigned char buf[22] = 2048;
          *(double *)&unsigned char buf[24] = v247;
          _os_log_impl((void *)&_mh_execute_header, v241, OS_LOG_TYPE_DEBUG, "CELL_LOC: pending scdma cell, %s, from, %.3f, %.3f, ago)", buf, 0x20u);
          if ((v380[23] & 0x80000000) != 0) {
            operator delete(*(void **)v380);
          }
          uint64_t v172 = v342;
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419630 != -1) {
            dispatch_once(&qword_102419630, &stru_1022C5170);
          }
          sub_100614504(&v348);
          int v250 = SHIBYTE(v348.__r_.__value_.__r.__words[2]);
          std::string::size_type v251 = v348.__r_.__value_.__r.__words[0];
          uint64_t v252 = *((void *)v239 + 8);
          double v253 = CFAbsoluteTimeGetCurrent();
          v254 = &v348;
          if (v250 < 0) {
            v254 = (std::string *)v251;
          }
          double v255 = v253 - v239[8];
          *(_DWORD *)v380 = 136315650;
          *(void *)&v380[4] = v254;
          *(_WORD *)&v380[12] = 2048;
          *(void *)&v380[14] = v252;
          *(_WORD *)&v380[22] = 2048;
          *(double *)&v380[24] = v255;
          v256 = (char *)_os_log_send_and_compose_impl();
          if (SHIBYTE(v348.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v348.__r_.__value_.__l.__data_);
          }
          sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v256);
          uint64_t v172 = v342;
          if (v256 != buf) {
            free(v256);
          }
        }
        v248 = (double *)*((void *)v239 + 1);
        if (v248)
        {
          do
          {
            v249 = v248;
            v248 = *(double **)v248;
          }
          while (v248);
        }
        else
        {
          do
          {
            v249 = (double *)*((void *)v239 + 2);
            _ZF = *(void *)v249 == (void)v239;
            v239 = v249;
          }
          while (!_ZF);
        }
        v239 = v249;
      }
      while (v249 != v240);
    }
    sub_1000F5BB0(v172 + 208, *(void **)(v172 + 216));
    *(void *)(v172 + 216) = 0;
    *(void *)(v172 + 224) = 0;
    *(void *)(v172 + 208) = v240;
  }
  if (*(void *)(v172 + 264) > 0x12CuLL)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    v257 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v258 = *(void *)(v172 + 264);
      *(_DWORD *)long long buf = 134217984;
      *(void *)&uint8_t buf[4] = v258;
      _os_log_impl((void *)&_mh_execute_header, v257, OS_LOG_TYPE_DEFAULT, "#Warning CELL_LOC: %ld pending cdma cells, clearing", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      uint64_t v335 = *(void *)(v342 + 264);
      *(_DWORD *)v380 = 134217984;
      *(void *)&v380[4] = v335;
      v336 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v336);
      if (v336 != buf) {
        free(v336);
      }
      uint64_t v172 = v342;
    }
    v259 = *(double **)(v172 + 248);
    v260 = (double *)(v172 + 256);
    if (v259 != (double *)(v172 + 256))
    {
      do
      {
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        v261 = qword_102419638;
        if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
        {
          sub_100613DB4((uint64_t)(v259 + 4), v380);
          int v262 = v380[23];
          v263 = *(unsigned char **)v380;
          uint64_t v264 = *((void *)v259 + 58);
          double v265 = CFAbsoluteTimeGetCurrent();
          if (v262 >= 0) {
            v266 = v380;
          }
          else {
            v266 = v263;
          }
          double v267 = v265 - v259[58];
          *(_DWORD *)long long buf = 136315650;
          *(void *)&uint8_t buf[4] = v266;
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v264;
          *(_WORD *)&unsigned char buf[22] = 2048;
          *(double *)&unsigned char buf[24] = v267;
          _os_log_impl((void *)&_mh_execute_header, v261, OS_LOG_TYPE_DEBUG, "CELL_LOC: pending cdma cell, %s, from, %.3f, %.3f, ago)", buf, 0x20u);
          if ((v380[23] & 0x80000000) != 0) {
            operator delete(*(void **)v380);
          }
          uint64_t v172 = v342;
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419630 != -1) {
            dispatch_once(&qword_102419630, &stru_1022C5170);
          }
          sub_100613DB4((uint64_t)(v259 + 4), &v348);
          int v270 = SHIBYTE(v348.__r_.__value_.__r.__words[2]);
          std::string::size_type v271 = v348.__r_.__value_.__r.__words[0];
          uint64_t v272 = *((void *)v259 + 58);
          double v273 = CFAbsoluteTimeGetCurrent();
          v274 = &v348;
          if (v270 < 0) {
            v274 = (std::string *)v271;
          }
          double v275 = v273 - v259[58];
          *(_DWORD *)v380 = 136315650;
          *(void *)&v380[4] = v274;
          *(_WORD *)&v380[12] = 2048;
          *(void *)&v380[14] = v272;
          *(_WORD *)&v380[22] = 2048;
          *(double *)&v380[24] = v275;
          v276 = (char *)_os_log_send_and_compose_impl();
          if (SHIBYTE(v348.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v348.__r_.__value_.__l.__data_);
          }
          sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v276);
          uint64_t v172 = v342;
          if (v276 != buf) {
            free(v276);
          }
        }
        v268 = (double *)*((void *)v259 + 1);
        if (v268)
        {
          do
          {
            v269 = v268;
            v268 = *(double **)v268;
          }
          while (v268);
        }
        else
        {
          do
          {
            v269 = (double *)*((void *)v259 + 2);
            _ZF = *(void *)v269 == (void)v259;
            v259 = v269;
          }
          while (!_ZF);
        }
        v259 = v269;
      }
      while (v269 != v260);
    }
    sub_1006FE0F4(v172 + 248, *(void **)(v172 + 256));
    *(void *)(v172 + 256) = 0;
    *(void *)(v172 + 264) = 0;
    *(void *)(v172 + 2++*(_DWORD *)(result + 48) = v260;
  }
  if (*(void *)(v172 + 304) > 0x12CuLL)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    v277 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v278 = *(void *)(v172 + 304);
      *(_DWORD *)long long buf = 134217984;
      *(void *)&uint8_t buf[4] = v278;
      _os_log_impl((void *)&_mh_execute_header, v277, OS_LOG_TYPE_DEFAULT, "#Warning CELL_LOC: %ld pending lte cells, clearing", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      uint64_t v337 = *(void *)(v342 + 304);
      *(_DWORD *)v380 = 134217984;
      *(void *)&v380[4] = v337;
      v338 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v338);
      if (v338 != buf) {
        free(v338);
      }
      uint64_t v172 = v342;
    }
    v279 = *(double **)(v172 + 288);
    v280 = (double *)(v172 + 296);
    if (v279 != (double *)(v172 + 296))
    {
      do
      {
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        v281 = qword_102419638;
        if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
        {
          sub_1000AAEBC(v380);
          int v282 = v380[23];
          v283 = *(unsigned char **)v380;
          uint64_t v284 = *((void *)v279 + 15);
          double v285 = CFAbsoluteTimeGetCurrent();
          if (v282 >= 0) {
            v286 = v380;
          }
          else {
            v286 = v283;
          }
          double v287 = v285 - v279[15];
          *(_DWORD *)long long buf = 136315650;
          *(void *)&uint8_t buf[4] = v286;
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v284;
          *(_WORD *)&unsigned char buf[22] = 2048;
          *(double *)&unsigned char buf[24] = v287;
          _os_log_impl((void *)&_mh_execute_header, v281, OS_LOG_TYPE_DEBUG, "CELL_LOC: pending lte cell, %s, from, %.3f, %.3f, ago)", buf, 0x20u);
          if ((v380[23] & 0x80000000) != 0) {
            operator delete(*(void **)v380);
          }
          uint64_t v172 = v342;
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419630 != -1) {
            dispatch_once(&qword_102419630, &stru_1022C5170);
          }
          sub_1000AAEBC(&v348);
          int v290 = SHIBYTE(v348.__r_.__value_.__r.__words[2]);
          std::string::size_type v291 = v348.__r_.__value_.__r.__words[0];
          uint64_t v292 = *((void *)v279 + 15);
          double v293 = CFAbsoluteTimeGetCurrent();
          v294 = &v348;
          if (v290 < 0) {
            v294 = (std::string *)v291;
          }
          double v295 = v293 - v279[15];
          *(_DWORD *)v380 = 136315650;
          *(void *)&v380[4] = v294;
          *(_WORD *)&v380[12] = 2048;
          *(void *)&v380[14] = v292;
          *(_WORD *)&v380[22] = 2048;
          *(double *)&v380[24] = v295;
          v296 = (char *)_os_log_send_and_compose_impl();
          if (SHIBYTE(v348.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v348.__r_.__value_.__l.__data_);
          }
          sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v296);
          uint64_t v172 = v342;
          if (v296 != buf) {
            free(v296);
          }
        }
        v288 = (double *)*((void *)v279 + 1);
        if (v288)
        {
          do
          {
            v289 = v288;
            v288 = *(double **)v288;
          }
          while (v288);
        }
        else
        {
          do
          {
            v289 = (double *)*((void *)v279 + 2);
            _ZF = *(void *)v289 == (void)v279;
            v279 = v289;
          }
          while (!_ZF);
        }
        v279 = v289;
      }
      while (v289 != v280);
    }
    sub_1000F5BB0(v172 + 288, *(void **)(v172 + 296));
    *(void *)(v172 + 296) = 0;
    *(void *)(v172 + 304) = 0;
    *(void *)(v172 + 288) = v280;
  }
  if (*(void *)(v172 + 344) > 0x12CuLL)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    v297 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v298 = *(void *)(v172 + 344);
      *(_DWORD *)long long buf = 134217984;
      *(void *)&uint8_t buf[4] = v298;
      _os_log_impl((void *)&_mh_execute_header, v297, OS_LOG_TYPE_DEFAULT, "#Warning CELL_LOC: %ld pending nr cells, clearing", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      uint64_t v339 = *(void *)(v342 + 344);
      *(_DWORD *)v380 = 134217984;
      *(void *)&v380[4] = v339;
      v340 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v340);
      if (v340 != buf) {
        free(v340);
      }
      uint64_t v172 = v342;
    }
    v299 = *(double **)(v172 + 328);
    v300 = (double *)(v172 + 336);
    if (v299 != v300)
    {
      do
      {
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        v301 = qword_102419638;
        if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
        {
          sub_100614EB8(v380);
          int v302 = v380[23];
          v303 = *(unsigned char **)v380;
          uint64_t v304 = *((void *)v299 + 16);
          double v305 = CFAbsoluteTimeGetCurrent();
          v306 = v302 >= 0 ? v380 : v303;
          double v307 = v305 - v299[16];
          *(_DWORD *)long long buf = 136315650;
          *(void *)&uint8_t buf[4] = v306;
          *(_WORD *)&unsigned char buf[12] = 2048;
          *(void *)&buf[14] = v304;
          *(_WORD *)&unsigned char buf[22] = 2048;
          *(double *)&unsigned char buf[24] = v307;
          _os_log_impl((void *)&_mh_execute_header, v301, OS_LOG_TYPE_DEBUG, "CELL_LOC: pending nr cell, %s, from, %.3f, %.3f, ago)", buf, 0x20u);
          if ((v380[23] & 0x80000000) != 0) {
            operator delete(*(void **)v380);
          }
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419630 != -1) {
            dispatch_once(&qword_102419630, &stru_1022C5170);
          }
          sub_100614EB8(&v348);
          int v310 = SHIBYTE(v348.__r_.__value_.__r.__words[2]);
          std::string::size_type v311 = v348.__r_.__value_.__r.__words[0];
          uint64_t v312 = *((void *)v299 + 16);
          double v313 = CFAbsoluteTimeGetCurrent();
          v314 = &v348;
          if (v310 < 0) {
            v314 = (std::string *)v311;
          }
          double v315 = v313 - v299[16];
          *(_DWORD *)v380 = 136315650;
          *(void *)&v380[4] = v314;
          *(_WORD *)&v380[12] = 2048;
          *(void *)&v380[14] = v312;
          *(_WORD *)&v380[22] = 2048;
          *(double *)&v380[24] = v315;
          v316 = (char *)_os_log_send_and_compose_impl();
          if (SHIBYTE(v348.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v348.__r_.__value_.__l.__data_);
          }
          sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::queryLocations(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, BOOL, BOOL, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v316);
          if (v316 != buf) {
            free(v316);
          }
        }
        v308 = (double *)*((void *)v299 + 1);
        if (v308)
        {
          do
          {
            v309 = v308;
            v308 = *(double **)v308;
          }
          while (v308);
        }
        else
        {
          do
          {
            v309 = (double *)*((void *)v299 + 2);
            _ZF = *(void *)v309 == (void)v299;
            v299 = v309;
          }
          while (!_ZF);
        }
        v299 = v309;
      }
      while (v309 != v300);
    }
    sub_1000F5BB0(v342 + 328, *(void **)(v342 + 336));
    *(void *)(v342 + 336) = 0;
    *(void *)(v342 + 344) = 0;
    *(void *)(v342 + 328) = v300;
  }
  if ((void)v370)
  {
    *((void *)&v370 + 1) = v370;
    operator delete((void *)v370);
  }
  uint64_t v62 = v344;
  if ((void)v372)
  {
    *((void *)&v372 + 1) = v372;
    operator delete((void *)v372);
  }
  if ((void)v374)
  {
    *((void *)&v374 + 1) = v374;
    operator delete((void *)v374);
  }
  if ((void)__p)
  {
    *((void *)&__p + 1) = __p;
    operator delete((void *)__p);
  }
  if ((void)v376)
  {
    *((void *)&v376 + 1) = v376;
    operator delete((void *)v376);
  }
  *(void *)long long buf = &v349;
  sub_10063A340((void ***)buf);
  return v62;
}

void sub_1006EEDF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p,uint64_t a56,uint64_t a57,uint64_t a58,void *a59,uint64_t a60,uint64_t a61,uint64_t a62,void *a63)
{
  if (__p)
  {
    a56 = (uint64_t)__p;
    operator delete(__p);
  }
  if (a59)
  {
    a60 = (uint64_t)a59;
    operator delete(a59);
  }
  if (a63)
  {
    a64 = (uint64_t)a63;
    operator delete(a63);
  }
  if (a71)
  {
    a72 = (uint64_t)a71;
    operator delete(a71);
  }
  if (a67)
  {
    a68 = (uint64_t)a67;
    operator delete(a67);
  }
  STACK[0x3C0] = (unint64_t)&a32;
  sub_10063A340((void ***)&STACK[0x3C0]);
  _Unwind_Resume(a1);
}

uint64_t sub_1006EF0AC(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, void *a7, uint64_t a8)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022C5150);
  }
  long long v13 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = (uint64_t)(a2[1] - *a2) >> 5;
    uint64_t v15 = (uint64_t)(a3[1] - *a3) >> 5;
    unint64_t v16 = 0x84BDA12F684BDA13 * ((uint64_t)(a4[1] - *a4) >> 4);
    uint64_t v17 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(a5[1] - *a5) >> 3);
    unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a6[1] - *a6) >> 5);
    uint64_t v19 = (uint64_t)(a7[1] - *a7) >> 3;
    int v20 = *(unsigned __int8 *)(a1 + 120);
    *(_DWORD *)long long buf = 134350592;
    *(void *)__int16 v55 = v14;
    *(_WORD *)&v55[8] = 2050;
    uint64_t v56 = v15;
    __int16 v57 = 2050;
    unint64_t v58 = v16;
    __int16 v59 = 2050;
    uint64_t v60 = v17;
    __int16 v61 = 2050;
    unint64_t v62 = v18;
    __int16 v63 = 2050;
    uint64_t v64 = v19;
    __int16 v65 = 1026;
    int v66 = v20;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "@AlsFlow, query, internal, cells, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{public}lu, wifi, %{public}lu, skipnearby, %{public}d\n", buf, 0x44u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    uint64_t v26 = (uint64_t)(a2[1] - *a2) >> 5;
    uint64_t v27 = (uint64_t)(a3[1] - *a3) >> 5;
    unint64_t v28 = 0x84BDA12F684BDA13 * ((uint64_t)(a4[1] - *a4) >> 4);
    uint64_t v29 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(a5[1] - *a5) >> 3);
    unint64_t v30 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a6[1] - *a6) >> 5);
    uint64_t v31 = (uint64_t)(a7[1] - *a7) >> 3;
    int v32 = *(unsigned __int8 *)(a1 + 120);
    int v41 = 134350592;
    *(void *)long long v42 = v26;
    *(_WORD *)&unsigned char v42[8] = 2050;
    uint64_t v43 = v27;
    __int16 v44 = 2050;
    unint64_t v45 = v28;
    __int16 v46 = 2050;
    uint64_t v47 = v29;
    __int16 v48 = 2050;
    unint64_t v49 = v30;
    __int16 v50 = 2050;
    uint64_t v51 = v31;
    __int16 v52 = 1026;
    int v53 = v32;
    long long v33 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::query(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v33);
    if (v33 != (char *)buf) {
      free(v33);
    }
  }
  sub_100134750(__p, "query");
  sub_100EBBFD8(a1 + 464, (uint64_t *)__p);
  if (v40 < 0) {
    operator delete(__p[0]);
  }
  if (*(unsigned char *)(a1 + 120)) {
    *(void *)(*(void *)(a1 + 448) + 296) = &_mh_execute_header;
  }
  BOOL v21 = sub_10002CD60((_DWORD *)a1);
  if (v21) {
    int v22 = 16;
  }
  else {
    int v22 = 40;
  }
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  long long v23 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 67109376;
    *(_DWORD *)__int16 v55 = v21;
    *(_WORD *)&v55[4] = 1024;
    *(_DWORD *)&v55[6] = v22;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "query, broadDataConnection, %d, timeout, %d", buf, 0xEu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v41 = 67109376;
    *(_DWORD *)long long v42 = v21;
    *(_WORD *)&v42[4] = 1024;
    *(_DWORD *)&v42[6] = v22;
    long long v34 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "int CLNetworkLocationProvider::query(const std::vector<CLTelephonyService_Type::Cell> &, const std::vector<CLTelephonyService_Type::ScdmaCell> &, const std::vector<CLTelephonyService_Type::CdmaCell> &, const std::vector<CLTelephonyService_Type::LteCell> &, const std::vector<CLTelephonyService_Type::NrCell> &, const std::vector<CLMacAddress> &, const CLNetworkLocationRequest_Type::CLNetworkLocationRequestConfig &)", "%s\n", v34);
    if (v34 != (char *)buf) {
      free(v34);
    }
  }
  ++*(_DWORD *)(a1 + 572);
  uint64_t v24 = (*(uint64_t (**)(void, void *, void *, void *, void *, void *, void *, uint64_t, int, int))(**(void **)(a1 + 448) + 24))(*(void *)(a1 + 448), a2, a3, a4, a5, a6, a7, a8, v22, v35);
  if (sub_1000FC450())
  {
    sub_1000E9354(buf);
    int v41 = *(_DWORD *)(a1 + 352);
    sub_1000EA838((uint64_t)buf, "queryLoc", &v41);
    int v41 = v24;
    sub_1000EA838((uint64_t)buf, "tag", &v41);
    int v41 = (a2[1] - *a2) >> 5;
    sub_1000EA838((uint64_t)buf, "p1", &v41);
    int v41 = 1749801491 * ((a4[1] - *a4) >> 4);
    sub_1000EA838((uint64_t)buf, "p2", &v41);
    int v41 = -1171354717 * ((a5[1] - *a5) >> 3);
    sub_1000EA838((uint64_t)buf, "p3", &v41);
    int v41 = (a7[1] - *a7) >> 3;
    sub_1000EA838((uint64_t)buf, "p4", &v41);
    int v41 = (a3[1] - *a3) >> 5;
    sub_1000EA838((uint64_t)buf, "p5", &v41);
    int v41 = -1431655765 * ((a6[1] - *a6) >> 5);
    sub_1000EA838((uint64_t)buf, "p6", &v41);
    sub_1000FC45C((uint64_t)buf, (uint64_t)"locationd");
    sub_10013F3C4(buf);
  }
  return v24;
}

void sub_1006EF77C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

void sub_1006EF7D0(uint64_t a1)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022C5150);
  }
  unint64_t v2 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 184);
    uint64_t v4 = *(void *)(a1 + 224);
    unint64_t v5 = *(void *)(a1 + 264);
    uint64_t v6 = *(void *)(a1 + 304);
    unint64_t v7 = *(void *)(a1 + 432);
    uint64_t v8 = *(void *)(a1 + 344);
    int v9 = *(_DWORD *)(a1 + 352);
    uint64_t v10 = *(void *)(a1 + 368);
    *(_DWORD *)long long buf = 134350848;
    *(void *)&uint8_t buf[4] = v3;
    __int16 v164 = 2050;
    uint64_t v165 = v4;
    __int16 v166 = 2050;
    unint64_t v167 = v5;
    __int16 v168 = 2050;
    uint64_t v169 = v6;
    __int16 v170 = 2050;
    unint64_t v171 = v7;
    __int16 v172 = 2050;
    uint64_t v173 = v8;
    __int16 v174 = 1026;
    int v175 = v9;
    __int16 v176 = 2050;
    uint64_t v177 = v10;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "@AlsFlow, requery, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{public}lu, %{public}lu, items, fQueryRetries, %{public}d, fLastRetryTimestamp, %{public}.1lf", buf, 0x4Eu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    uint64_t v117 = *(void *)(a1 + 184);
    uint64_t v118 = *(void *)(a1 + 224);
    unint64_t v119 = *(void *)(a1 + 264);
    uint64_t v120 = *(void *)(a1 + 304);
    unint64_t v121 = *(void *)(a1 + 432);
    uint64_t v122 = *(void *)(a1 + 344);
    int v123 = *(_DWORD *)(a1 + 352);
    uint64_t v124 = *(void *)(a1 + 368);
    int v147 = 134350848;
    uint64_t v148 = v117;
    __int16 v149 = 2050;
    uint64_t v150 = v118;
    __int16 v151 = 2050;
    unint64_t v152 = v119;
    __int16 v153 = 2050;
    uint64_t v154 = v120;
    __int16 v155 = 2050;
    unint64_t v156 = v121;
    __int16 v157 = 2050;
    uint64_t v158 = v122;
    __int16 v159 = 1026;
    int v160 = v123;
    __int16 v161 = 2050;
    uint64_t v162 = v124;
    long long v125 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::requeryLocations()", "%s\n", v125);
    if (v125 != buf) {
      free(v125);
    }
  }
  if (*(unsigned char *)(a1 + 456))
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v11 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#Warning NETWORK: in private location mode; not querying for unknown cells or unknown wifis",
        buf,
        2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 == -1)
      {
LABEL_190:
        LOWORD(v147) = 0;
        long long v126 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::requeryLocations()", "%s\n", v126);
        if (v126 != buf) {
          free(v126);
        }
        return;
      }
LABEL_201:
      dispatch_once(&qword_102419630, &stru_1022C5170);
      goto LABEL_190;
    }
  }
  else if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32))(*(void *)(a1 + 112)) == 1)
  {
    if (sub_1000FC450())
    {
      sub_1000E9354(buf);
      int v147 = *(_DWORD *)(a1 + 352);
      sub_1000EA838((uint64_t)buf, "requeryLocations", &v147);
      int v147 = *(void *)(a1 + 184);
      sub_1000EA838((uint64_t)buf, "p1", &v147);
      int v147 = *(void *)(a1 + 264);
      sub_1000EA838((uint64_t)buf, "p2", &v147);
      int v147 = *(void *)(a1 + 304);
      sub_1000EA838((uint64_t)buf, "p3", &v147);
      int v147 = *(void *)(a1 + 432);
      sub_1000EA838((uint64_t)buf, "p4", &v147);
      int v147 = *(void *)(a1 + 224);
      sub_1000EA838((uint64_t)buf, "p5", &v147);
      int v147 = *(void *)(a1 + 344);
      sub_1000EA838((uint64_t)buf, "p6", &v147);
      sub_1000FC45C((uint64_t)buf, (uint64_t)"locationd");
      sub_10013F3C4(buf);
    }
    long long __p = 0;
    long long v145 = 0;
    long long v146 = 0;
    long long v141 = 0;
    long long v142 = 0;
    int v143 = 0;
    uint64_t v138 = 0;
    unint64_t v139 = 0;
    unint64_t v140 = 0;
    long long v135 = 0;
    long long v136 = 0;
    long long v137 = 0;
    long long v132 = 0;
    long long v133 = 0;
    long long v134 = 0;
    long long v129 = 0;
    long long v130 = 0;
    long long v131 = 0;
    long long v12 = *(void **)(a1 + 168);
    if (v12 != (void *)(a1 + 176))
    {
      long long v13 = 0;
      do
      {
        uint64_t v14 = v12 + 4;
        if (v13 >= v146)
        {
          unint64_t v16 = (char *)__p;
          uint64_t v17 = (v13 - (unsigned char *)__p) >> 5;
          unint64_t v18 = v17 + 1;
          if ((unint64_t)(v17 + 1) >> 59) {
            sub_1001D7FD4();
          }
          uint64_t v19 = v146 - (unsigned char *)__p;
          if ((v146 - (unsigned char *)__p) >> 4 > v18) {
            unint64_t v18 = v19 >> 4;
          }
          if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFE0) {
            unint64_t v20 = 0x7FFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v20 = v18;
          }
          if (v20)
          {
            BOOL v21 = (char *)sub_1001D9EDC((uint64_t)&v146, v20);
            unint64_t v16 = (char *)__p;
            long long v13 = v145;
          }
          else
          {
            BOOL v21 = 0;
          }
          long long v22 = *((_OWORD *)v12 + 3);
          long long v23 = &v21[32 * v17];
          *(_OWORD *)long long v23 = *v14;
          *((_OWORD *)v23 + 1) = v22;
          if (v13 == v16)
          {
            uint64_t v26 = &v21[32 * v17];
          }
          else
          {
            uint64_t v24 = &v21[32 * v17];
            do
            {
              long long v25 = *((_OWORD *)v13 - 1);
              uint64_t v26 = v24 - 32;
              *((_OWORD *)v24 - 2) = *((_OWORD *)v13 - 2);
              *((_OWORD *)v24 - 1) = v25;
              v13 -= 32;
              v24 -= 32;
            }
            while (v13 != v16);
          }
          long long v13 = v23 + 32;
          long long __p = v26;
          long long v145 = v23 + 32;
          long long v146 = &v21[32 * v20];
          if (v16) {
            operator delete(v16);
          }
        }
        else
        {
          long long v15 = *((_OWORD *)v12 + 3);
          *(_OWORD *)long long v13 = *v14;
          *((_OWORD *)v13 + 1) = v15;
          v13 += 32;
        }
        long long v145 = v13;
        uint64_t v27 = (void *)v12[1];
        if (v27)
        {
          do
          {
            unint64_t v28 = v27;
            uint64_t v27 = (void *)*v27;
          }
          while (v27);
        }
        else
        {
          do
          {
            unint64_t v28 = (void *)v12[2];
            BOOL v29 = *v28 == (void)v12;
            long long v12 = v28;
          }
          while (!v29);
        }
        long long v12 = v28;
      }
      while (v28 != (void *)(a1 + 176));
    }
    unint64_t v30 = *(void **)(a1 + 208);
    if (v30 != (void *)(a1 + 216))
    {
      uint64_t v31 = v142;
      do
      {
        int v32 = v30 + 4;
        if (v31 >= v143)
        {
          long long v34 = (char *)v141;
          uint64_t v35 = (v31 - (unsigned char *)v141) >> 5;
          unint64_t v36 = v35 + 1;
          if ((unint64_t)(v35 + 1) >> 59) {
            sub_1001D7FD4();
          }
          uint64_t v37 = v143 - (unsigned char *)v141;
          if ((v143 - (unsigned char *)v141) >> 4 > v36) {
            unint64_t v36 = v37 >> 4;
          }
          if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFE0) {
            unint64_t v38 = 0x7FFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v38 = v36;
          }
          if (v38)
          {
            long long v39 = (char *)sub_1001D9EDC((uint64_t)&v143, v38);
            long long v34 = (char *)v141;
            uint64_t v31 = v142;
          }
          else
          {
            long long v39 = 0;
          }
          long long v40 = *((_OWORD *)v30 + 3);
          int v41 = &v39[32 * v35];
          *(_OWORD *)int v41 = *v32;
          *((_OWORD *)v41 + 1) = v40;
          if (v31 == v34)
          {
            __int16 v44 = &v39[32 * v35];
          }
          else
          {
            long long v42 = &v39[32 * v35];
            do
            {
              long long v43 = *((_OWORD *)v31 - 1);
              __int16 v44 = v42 - 32;
              *((_OWORD *)v42 - 2) = *((_OWORD *)v31 - 2);
              *((_OWORD *)v42 - 1) = v43;
              v31 -= 32;
              v42 -= 32;
            }
            while (v31 != v34);
          }
          uint64_t v31 = v41 + 32;
          long long v141 = v44;
          long long v142 = v41 + 32;
          int v143 = &v39[32 * v38];
          if (v34) {
            operator delete(v34);
          }
        }
        else
        {
          long long v33 = *((_OWORD *)v30 + 3);
          *(_OWORD *)uint64_t v31 = *v32;
          *((_OWORD *)v31 + 1) = v33;
          v31 += 32;
        }
        long long v142 = v31;
        unint64_t v45 = (void *)v30[1];
        if (v45)
        {
          do
          {
            __int16 v46 = v45;
            unint64_t v45 = (void *)*v45;
          }
          while (v45);
        }
        else
        {
          do
          {
            __int16 v46 = (void *)v30[2];
            BOOL v29 = *v46 == (void)v30;
            unint64_t v30 = v46;
          }
          while (!v29);
        }
        unint64_t v30 = v46;
      }
      while (v46 != (void *)(a1 + 216));
    }
    uint64_t v47 = *(void **)(a1 + 248);
    if (v47 != (void *)(a1 + 256))
    {
      unint64_t v48 = v139;
      do
      {
        if (v48 >= v140)
        {
          unint64_t v48 = sub_1006FECBC(&v138, (uint64_t)(v47 + 4));
        }
        else
        {
          sub_1006FEDE4((uint64_t)&v140, v48, (uint64_t)(v47 + 4));
          v48 += 432;
        }
        unint64_t v139 = v48;
        unint64_t v49 = (void *)v47[1];
        if (v49)
        {
          do
          {
            __int16 v50 = v49;
            unint64_t v49 = (void *)*v49;
          }
          while (v49);
        }
        else
        {
          do
          {
            __int16 v50 = (void *)v47[2];
            BOOL v29 = *v50 == (void)v47;
            uint64_t v47 = v50;
          }
          while (!v29);
        }
        uint64_t v47 = v50;
      }
      while (v50 != (void *)(a1 + 256));
    }
    uint64_t v51 = *(void **)(a1 + 288);
    if (v51 != (void *)(a1 + 296))
    {
      __int16 v52 = v136;
      do
      {
        int v53 = v51 + 4;
        if (v52 >= (_OWORD *)v137)
        {
          unint64_t v58 = v135;
          uint64_t v59 = 0x2E8BA2E8BA2E8BA3 * (((char *)v52 - (unsigned char *)v135) >> 3);
          unint64_t v60 = v59 + 1;
          if ((unint64_t)(v59 + 1) > 0x2E8BA2E8BA2E8BALL) {
            sub_1001D7FD4();
          }
          if (0x5D1745D1745D1746 * ((v137 - (unsigned char *)v135) >> 3) > v60) {
            unint64_t v60 = 0x5D1745D1745D1746 * ((v137 - (unsigned char *)v135) >> 3);
          }
          if ((unint64_t)(0x2E8BA2E8BA2E8BA3 * ((v137 - (unsigned char *)v135) >> 3)) >= 0x1745D1745D1745DLL) {
            unint64_t v61 = 0x2E8BA2E8BA2E8BALL;
          }
          else {
            unint64_t v61 = v60;
          }
          if (v61)
          {
            unint64_t v62 = (char *)sub_1000DA8B4((uint64_t)&v137, v61);
            unint64_t v58 = v135;
            __int16 v52 = v136;
          }
          else
          {
            unint64_t v62 = 0;
          }
          __int16 v63 = &v62[88 * v59];
          long long v64 = *((_OWORD *)v51 + 3);
          *(_OWORD *)__int16 v63 = *v53;
          *((_OWORD *)v63 + 1) = v64;
          long long v65 = *((_OWORD *)v51 + 4);
          long long v66 = *((_OWORD *)v51 + 5);
          long long v67 = *((_OWORD *)v51 + 6);
          *((void *)v63 + 10) = v51[14];
          *((_OWORD *)v63 + 3) = v66;
          *((_OWORD *)v63 + 4) = v67;
          *((_OWORD *)v63 + 2) = v65;
          if (v52 == v58)
          {
            long long v73 = &v62[88 * v59];
          }
          else
          {
            double v68 = &v62[88 * v59];
            do
            {
              long long v69 = *(_OWORD *)((char *)v52 - 88);
              *(_OWORD *)(v68 - 72) = *(_OWORD *)((char *)v52 - 72);
              *(_OWORD *)(v68 - 88) = v69;
              long long v70 = *(_OWORD *)((char *)v52 - 56);
              long long v71 = *(_OWORD *)((char *)v52 - 40);
              long long v72 = *(_OWORD *)((char *)v52 - 24);
              long long v73 = v68 - 88;
              *((_DWORD *)v68 - 2) = *((_DWORD *)v52 - 2);
              *(_OWORD *)(v68 - 24) = v72;
              *(_OWORD *)(v68 - 40) = v71;
              *(_OWORD *)(v68 - 56) = v70;
              __int16 v52 = (_OWORD *)((char *)v52 - 88);
              v68 -= 88;
            }
            while (v52 != v58);
          }
          __int16 v52 = v63 + 88;
          long long v135 = v73;
          long long v136 = v63 + 88;
          long long v137 = &v62[88 * v61];
          if (v58) {
            operator delete(v58);
          }
        }
        else
        {
          long long v54 = *((_OWORD *)v51 + 3);
          _OWORD *v52 = *v53;
          v52[1] = v54;
          long long v55 = *((_OWORD *)v51 + 4);
          long long v56 = *((_OWORD *)v51 + 5);
          long long v57 = *((_OWORD *)v51 + 6);
          *((void *)v52 + 10) = v51[14];
          v52[3] = v56;
          v52[4] = v57;
          v52[2] = v55;
          __int16 v52 = (_OWORD *)((char *)v52 + 88);
        }
        long long v136 = v52;
        uint64_t v74 = (void *)v51[1];
        if (v74)
        {
          do
          {
            unint64_t v75 = v74;
            uint64_t v74 = (void *)*v74;
          }
          while (v74);
        }
        else
        {
          do
          {
            unint64_t v75 = (void *)v51[2];
            BOOL v29 = *v75 == (void)v51;
            uint64_t v51 = v75;
          }
          while (!v29);
        }
        uint64_t v51 = v75;
      }
      while (v75 != (void *)(a1 + 296));
    }
    uint64_t v76 = *(void **)(a1 + 416);
    if (v76 != (void *)(a1 + 424))
    {
      unint64_t v77 = v130;
      do
      {
        if (v77 >= v131)
        {
          long long v78 = (char *)v129;
          uint64_t v79 = (v77 - (unsigned char *)v129) >> 3;
          unint64_t v80 = v79 + 1;
          if ((unint64_t)(v79 + 1) >> 61) {
            sub_1001D7FD4();
          }
          uint64_t v81 = v131 - (unsigned char *)v129;
          if ((v131 - (unsigned char *)v129) >> 2 > v80) {
            unint64_t v80 = v81 >> 2;
          }
          if ((unint64_t)v81 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v82 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v82 = v80;
          }
          if (v82)
          {
            long long v83 = (char *)sub_1000DA54C((uint64_t)&v131, v82);
            long long v78 = (char *)v129;
            unint64_t v77 = v130;
          }
          else
          {
            long long v83 = 0;
          }
          long long v84 = &v83[8 * v79];
          *(void *)long long v84 = v76[4];
          long long v85 = v84 + 8;
          while (v77 != v78)
          {
            uint64_t v86 = *((void *)v77 - 1);
            v77 -= 8;
            *((void *)v84 - 1) = v86;
            v84 -= 8;
          }
          long long v129 = v84;
          long long v130 = v85;
          long long v131 = &v83[8 * v82];
          if (v78) {
            operator delete(v78);
          }
          unint64_t v77 = v85;
        }
        else
        {
          *(void *)unint64_t v77 = v76[4];
          v77 += 8;
        }
        long long v130 = v77;
        unsigned int v87 = (void *)v76[1];
        if (v87)
        {
          do
          {
            uint64_t v88 = v87;
            unsigned int v87 = (void *)*v87;
          }
          while (v87);
        }
        else
        {
          do
          {
            uint64_t v88 = (void *)v76[2];
            BOOL v29 = *v88 == (void)v76;
            uint64_t v76 = v88;
          }
          while (!v29);
        }
        uint64_t v76 = v88;
      }
      while (v88 != (void *)(a1 + 424));
    }
    long long v89 = *(void **)(a1 + 328);
    if (v89 != (void *)(a1 + 336))
    {
      long long v90 = v133;
      do
      {
        long long v91 = v89 + 4;
        if (v90 >= v134)
        {
          uint64_t v96 = (char *)v132;
          unint64_t v97 = 0xAAAAAAAAAAAAAAABLL * ((v90 - (unsigned char *)v132) >> 5);
          unint64_t v98 = v97 + 1;
          if (v97 + 1 > 0x2AAAAAAAAAAAAAALL) {
            sub_1001D7FD4();
          }
          if (0x5555555555555556 * ((v134 - (unsigned char *)v132) >> 5) > v98) {
            unint64_t v98 = 0x5555555555555556 * ((v134 - (unsigned char *)v132) >> 5);
          }
          if (0xAAAAAAAAAAAAAAABLL * ((v134 - (unsigned char *)v132) >> 5) >= 0x155555555555555) {
            unint64_t v99 = 0x2AAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v99 = v98;
          }
          if (v99)
          {
            int v100 = (char *)sub_100642EA8((uint64_t)&v134, v99);
            uint64_t v96 = (char *)v132;
            long long v90 = v133;
          }
          else
          {
            int v100 = 0;
          }
          long long v101 = &v100[96 * v97];
          long long v102 = *((_OWORD *)v89 + 3);
          *(_OWORD *)long long v101 = *v91;
          *((_OWORD *)v101 + 1) = v102;
          long long v103 = *((_OWORD *)v89 + 4);
          long long v104 = *((_OWORD *)v89 + 5);
          long long v105 = *((_OWORD *)v89 + 7);
          *((_OWORD *)v101 + 4) = *((_OWORD *)v89 + 6);
          *((_OWORD *)v101 + 5) = v105;
          *((_OWORD *)v101 + 2) = v103;
          *((_OWORD *)v101 + 3) = v104;
          if (v90 == v96)
          {
            long long v111 = &v100[96 * v97];
          }
          else
          {
            unint64_t v106 = &v100[96 * v97];
            do
            {
              long long v107 = *((_OWORD *)v90 - 5);
              *((_OWORD *)v106 - 6) = *((_OWORD *)v90 - 6);
              *((_OWORD *)v106 - 5) = v107;
              long long v108 = *((_OWORD *)v90 - 4);
              long long v109 = *((_OWORD *)v90 - 3);
              long long v110 = *((_OWORD *)v90 - 2);
              long long v111 = v106 - 96;
              *(_OWORD *)(v106 - 20) = *(_OWORD *)(v90 - 20);
              *((_OWORD *)v106 - 3) = v109;
              *((_OWORD *)v106 - 2) = v110;
              *((_OWORD *)v106 - 4) = v108;
              v90 -= 96;
              v106 -= 96;
            }
            while (v90 != v96);
          }
          long long v90 = v101 + 96;
          long long v132 = v111;
          long long v133 = v101 + 96;
          long long v134 = &v100[96 * v99];
          if (v96) {
            operator delete(v96);
          }
        }
        else
        {
          long long v92 = *((_OWORD *)v89 + 3);
          *(_OWORD *)long long v90 = *v91;
          *((_OWORD *)v90 + 1) = v92;
          long long v93 = *((_OWORD *)v89 + 4);
          long long v94 = *((_OWORD *)v89 + 5);
          long long v95 = *((_OWORD *)v89 + 7);
          *((_OWORD *)v90 + 4) = *((_OWORD *)v89 + 6);
          *((_OWORD *)v90 + 5) = v95;
          *((_OWORD *)v90 + 2) = v93;
          *((_OWORD *)v90 + 3) = v94;
          v90 += 96;
        }
        long long v133 = v90;
        int v112 = (void *)v89[1];
        if (v112)
        {
          do
          {
            uint64_t v113 = v112;
            int v112 = (void *)*v112;
          }
          while (v112);
        }
        else
        {
          do
          {
            uint64_t v113 = (void *)v89[2];
            BOOL v29 = *v113 == (void)v89;
            long long v89 = v113;
          }
          while (!v29);
        }
        long long v89 = v113;
      }
      while (v113 != (void *)(a1 + 336));
    }
    if (__p != v145 || v141 != v142 || v129 != v130 || v135 != v136 || v138 != v139 || v132 != v133)
    {
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      uint64_t v114 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
      {
        int v115 = *(_DWORD *)(a1 + 352);
        *(_DWORD *)long long buf = 134219520;
        *(void *)&uint8_t buf[4] = (v145 - (unsigned char *)__p) >> 5;
        __int16 v164 = 2048;
        uint64_t v165 = (v142 - (unsigned char *)v141) >> 5;
        __int16 v166 = 2048;
        unint64_t v167 = 0x84BDA12F684BDA13 * ((uint64_t)(v139 - v138) >> 4);
        __int16 v168 = 2048;
        uint64_t v169 = 0x2E8BA2E8BA2E8BA3 * ((v136 - (unsigned char *)v135) >> 3);
        __int16 v170 = 2048;
        unint64_t v171 = 0xAAAAAAAAAAAAAAABLL * ((v133 - (unsigned char *)v132) >> 5);
        __int16 v172 = 2048;
        uint64_t v173 = (v130 - (unsigned char *)v129) >> 3;
        __int16 v174 = 1024;
        int v175 = v115;
        _os_log_impl((void *)&_mh_execute_header, v114, OS_LOG_TYPE_DEBUG, "NETWORK: re-querying cells, %lu, %lu, %lu, %lu, %lu, wifis, %lu, retry count, %d", buf, 0x44u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        int v127 = *(_DWORD *)(a1 + 352);
        int v147 = 134219520;
        uint64_t v148 = (v145 - (unsigned char *)__p) >> 5;
        __int16 v149 = 2048;
        uint64_t v150 = (v142 - (unsigned char *)v141) >> 5;
        __int16 v151 = 2048;
        unint64_t v152 = 0x84BDA12F684BDA13 * ((uint64_t)(v139 - v138) >> 4);
        __int16 v153 = 2048;
        uint64_t v154 = 0x2E8BA2E8BA2E8BA3 * ((v136 - (unsigned char *)v135) >> 3);
        __int16 v155 = 2048;
        unint64_t v156 = 0xAAAAAAAAAAAAAAABLL * ((v133 - (unsigned char *)v132) >> 5);
        __int16 v157 = 2048;
        uint64_t v158 = (v130 - (unsigned char *)v129) >> 3;
        __int16 v159 = 1024;
        int v160 = v127;
        long long v128 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::requeryLocations()", "%s\n", v128);
        if (v128 != buf) {
          free(v128);
        }
      }
      sub_100A700F8(&v147, 1);
      *(_DWORD *)long long buf = v147;
      *(_DWORD *)(a1 + 520) = sub_1006EF0AC(a1, &__p, &v141, &v138, &v135, &v132, &v129, (uint64_t)buf);
    }
    *(CFAbsoluteTime *)(a1 + 368) = CFAbsoluteTimeGetCurrent();
    if (v129)
    {
      long long v130 = (char *)v129;
      operator delete(v129);
    }
    if (v132)
    {
      long long v133 = (char *)v132;
      operator delete(v132);
    }
    if (v135)
    {
      long long v136 = v135;
      operator delete(v135);
    }
    *(void *)long long buf = &v138;
    sub_10063A340((void ***)buf);
    if (v141)
    {
      long long v142 = (char *)v141;
      operator delete(v141);
    }
    if (__p)
    {
      long long v145 = (char *)__p;
      operator delete(__p);
    }
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    long long v116 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v116, OS_LOG_TYPE_DEFAULT, "#Warning NETWORK: Location Services disabled, not querying location", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 == -1) {
        goto LABEL_190;
      }
      goto LABEL_201;
    }
  }
}

void sub_1006F08DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char *a39)
{
  if (__p) {
    operator delete(__p);
  }
  if (a14) {
    operator delete(a14);
  }
  if (a17) {
    operator delete(a17);
  }
  a39 = &a20;
  sub_10063A340((void ***)&a39);
  if (a23)
  {
    a24 = (uint64_t)a23;
    operator delete(a23);
  }
  if (a26)
  {
    a27 = (uint64_t)a26;
    operator delete(a26);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1006F09BC(void *a1, uint64_t a2, int a3)
{
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  unint64_t v5 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 134217984;
    uint64_t v24 = a1;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "CELL_LOC: start sequence, This, %p", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    unint64_t v20 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterCellLocationSeries(CLNetworkLocationRequester *, BOOL, CLNetworkLocationRequester::RequestType, int)", "%s\n", v20);
    if (v20 != (char *)buf) {
      free(v20);
    }
  }
  if (a3)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v6 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "CELL_LOC: beginning cell database", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      BOOL v21 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterCellLocationSeries(CLNetworkLocationRequester *, BOOL, CLNetworkLocationRequester::RequestType, int)", "%s\n", v21);
      if (v21 != (char *)buf) {
        free(v21);
      }
    }
    uint64_t v7 = sub_1006DE9BC((uint64_t)a1);
    uint64_t v8 = sub_1006DE8AC((uint64_t)a1);
    uint64_t v9 = sub_1006DEACC((uint64_t)a1);
    uint64_t v10 = sub_1000AB2B4((uint64_t)a1);
    uint64_t v11 = sub_1006DEBDC((uint64_t)a1);
    sub_10064E670(*(void *)(v7 + 32));
    sub_10064E670(*(void *)(v8 + 32));
    sub_10064E670(*(void *)(v9 + 32));
    sub_10064E670(*(void *)(v10 + 32));
    return sub_10064E670(*(void *)(v11 + 32));
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    long long v13 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v14 = (void *)(a1[28] + a1[23] + a1[33] + a1[38] + a1[43]);
      *(_DWORD *)long long buf = 134217984;
      uint64_t v24 = v14;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "CELL_LOC: ending cell database (%lu cells still pending)", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      long long v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterCellLocationSeries(CLNetworkLocationRequester *, BOOL, CLNetworkLocationRequester::RequestType, int)", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
    }
    uint64_t v15 = sub_1006DE9BC((uint64_t)a1);
    sub_10064E678(*(void *)(v15 + 32));
    uint64_t v16 = sub_1006DE8AC((uint64_t)a1);
    sub_10064E678(*(void *)(v16 + 32));
    uint64_t v17 = sub_1006DEACC((uint64_t)a1);
    sub_10064E678(*(void *)(v17 + 32));
    uint64_t v18 = sub_1000AB2B4((uint64_t)a1);
    sub_10064E678(*(void *)(v18 + 32));
    uint64_t v19 = sub_1006DEBDC((uint64_t)a1);
    return sub_10064E678(*(void *)(v19 + 32));
  }
}

void sub_1006F0ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10142D72C(v32, a3, 9);
  sub_100108C54((uint64_t)v32, -1, -1, -1, -1);
  uint64_t v6 = (int *)sub_1006E744C((uint64_t)v32);
  uint64_t v7 = sub_1006DE8AC(a1);
  if (qword_102419650 != -1) {
    dispatch_once(&qword_102419650, &stru_1022C5190);
  }
  uint64_t v8 = qword_102419658;
  if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v9 = *(void *)(a4 + 4);
    uint64_t v10 = *(void *)(a4 + 12);
    uint64_t v11 = *(void *)(a4 + 20);
    int v12 = *v6;
    int v13 = v6[1];
    int v14 = v6[2];
    int v15 = v6[3];
    int v16 = *(_DWORD *)(a4 + 84);
    int v17 = *(_DWORD *)(a1 + 384);
    *(_DWORD *)long long buf = 136317954;
    unint64_t v62 = "Network-Cell";
    __int16 v63 = 1024;
    int v64 = 1;
    __int16 v65 = 2048;
    uint64_t v66 = v9;
    __int16 v67 = 2048;
    uint64_t v68 = v10;
    __int16 v69 = 2048;
    uint64_t v70 = v11;
    __int16 v71 = 1024;
    int v72 = v12;
    __int16 v73 = 1024;
    int v74 = v13;
    __int16 v75 = 1024;
    int v76 = v14;
    __int16 v77 = 1024;
    int v78 = v15;
    __int16 v79 = 1024;
    int v80 = v16;
    __int16 v81 = 1024;
    int v82 = v17;
    __int16 v83 = 1024;
    int v84 = -1;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,LAC,0x%x,CI,0x%x,Confidence,%d,Count,%d,lock,%d", buf, 0x5Au);
  }
  if (sub_10013D1A0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419650 != -1) {
      dispatch_once(&qword_102419650, &stru_1022C5190);
    }
    uint64_t v21 = *(void *)(a4 + 4);
    uint64_t v22 = *(void *)(a4 + 12);
    uint64_t v23 = *(void *)(a4 + 20);
    int v24 = *v6;
    int v25 = v6[1];
    int v26 = v6[2];
    int v27 = v6[3];
    int v28 = *(_DWORD *)(a4 + 84);
    int v29 = *(_DWORD *)(a1 + 384);
    int v37 = 136317954;
    unint64_t v38 = "Network-Cell";
    __int16 v39 = 1024;
    int v40 = 1;
    __int16 v41 = 2048;
    uint64_t v42 = v21;
    __int16 v43 = 2048;
    uint64_t v44 = v22;
    __int16 v45 = 2048;
    uint64_t v46 = v23;
    __int16 v47 = 1024;
    int v48 = v24;
    __int16 v49 = 1024;
    int v50 = v25;
    __int16 v51 = 1024;
    int v52 = v26;
    __int16 v53 = 1024;
    int v54 = v27;
    __int16 v55 = 1024;
    int v56 = v28;
    __int16 v57 = 1024;
    int v58 = v29;
    __int16 v59 = 1024;
    int v60 = -1;
    unint64_t v30 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("LOCATION", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterScdmaCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::ScdmaCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v30);
    if (v30 != (char *)buf) {
      free(v30);
    }
  }
  uint64_t v18 = (uint64_t *)sub_1006FF22C(a1 + 208, v6);
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v19 = (int *)sub_1006E744C((uint64_t)v32);
    if (sub_1006BD810(*(void *)(v7 + 32), v19, a4)) {
      ++*(_DWORD *)(a1 + 384);
    }
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    unint64_t v20 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "#Warning Location Services disabled, not storing location entry", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      LOWORD(v37) = 0;
      uint64_t v31 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterScdmaCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::ScdmaCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v31);
      if (v31 != (char *)buf) {
        free(v31);
      }
    }
  }
  if ((uint64_t *)(a1 + 216) != v18)
  {
    sub_1000F0A30((uint64_t **)(a1 + 208), v18);
    operator delete(v18);
  }
  if (v36 < 0) {
    operator delete(__p);
  }
  if (v33)
  {
    long long v34 = v33;
    operator delete(v33);
  }
}

void sub_1006F13D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_10055C7F8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1006F1404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10142D72C(v23, a3, 9);
  sub_100108C54((uint64_t)v23, -1, -1, -1, -1);
  uint64_t v4 = (int *)sub_1006E744C((uint64_t)v23);
  if (qword_102419650 != -1) {
    dispatch_once(&qword_102419650, &stru_1022C5190);
  }
  unint64_t v5 = qword_102419658;
  if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *v4;
    int v7 = v4[1];
    int v8 = v4[2];
    int v9 = v4[3];
    *(_DWORD *)long long buf = 136317186;
    __int16 v47 = "Network-Cell";
    uint64_t v48 = 0x800000000000400;
    *(void *)__int16 v49 = 0;
    *(_WORD *)&v49[8] = 2048;
    *(void *)&v49[10] = 0;
    *(_WORD *)&v49[18] = 2048;
    *(void *)&v49[20] = 0xBFF0000000000000;
    *(_WORD *)&v49[28] = 1024;
    *(_DWORD *)&v49[30] = v6;
    *(_WORD *)&v49[34] = 1024;
    *(_DWORD *)&v49[36] = v7;
    *(_WORD *)&v49[40] = 1024;
    *(_DWORD *)&v49[42] = v8;
    *(_WORD *)&v49[46] = 1024;
    LODWORD(v50) = v9;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,LAC,0x%x,CI,0x%x,", buf, 0x48u);
  }
  if (sub_10013D1A0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419650 != -1) {
      dispatch_once(&qword_102419650, &stru_1022C5190);
    }
    int v17 = *v4;
    int v18 = v4[1];
    int v19 = v4[2];
    int v20 = v4[3];
    int v28 = 136317186;
    int v29 = "Network-Cell";
    __int16 v30 = 1024;
    int v31 = 0;
    __int16 v32 = 2048;
    uint64_t v33 = 0;
    __int16 v34 = 2048;
    uint64_t v35 = 0;
    __int16 v36 = 2048;
    unint64_t v37 = 0xBFF0000000000000;
    __int16 v38 = 1024;
    int v39 = v17;
    __int16 v40 = 1024;
    int v41 = v18;
    __int16 v42 = 1024;
    int v43 = v19;
    __int16 v44 = 1024;
    int v45 = v20;
    uint64_t v21 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("LOCATION", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterScdmaCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::ScdmaCell &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v21);
    if (v21 != (char *)buf) {
      free(v21);
    }
  }
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v48 = 0;
    __int16 v47 = 0;
    *(_OWORD *)__int16 v49 = xmmword_101D1C320;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)&v49[16] = _Q0;
    *(_OWORD *)&v49[32] = _Q0;
    unint64_t v50 = 0xBFF0000000000000;
    *(_DWORD *)long long buf = 0xFFFF;
    int v52 = 0;
    uint64_t v55 = 0;
    unint64_t v53 = 0xBFF0000000000000;
    uint64_t v54 = 0;
    unint64_t v57 = 0xBFF0000000000000;
    int v56 = 0;
    int v58 = 0x7FFFFFFF;
    uint64_t v61 = 0;
    uint64_t v59 = 0;
    uint64_t v60 = 0;
    char v62 = 0;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    uint64_t v15 = sub_1006DE8AC(a1);
    sub_1006BD810(*(void *)(v15 + 32), v4, (uint64_t)buf);
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v16 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#Warning Location Services disabled, not storing location entry", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      LOWORD(v28) = 0;
      uint64_t v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterScdmaCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::ScdmaCell &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
    }
  }
  sub_1006FF3AC((uint64_t **)(a1 + 208), v4);
  if (v27 < 0) {
    operator delete(__p);
  }
  if (v24)
  {
    int v25 = v24;
    operator delete(v24);
  }
}

void sub_1006F18B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_10055C7F8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1006F18E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10142D434(v32, a3, 0);
  sub_100108C54((uint64_t)v32, -1, -1, -1, -1);
  int v6 = (int *)sub_1006E6690((uint64_t)v32);
  uint64_t v7 = sub_1006DE9BC(a1);
  if (qword_102419650 != -1) {
    dispatch_once(&qword_102419650, &stru_1022C5190);
  }
  int v8 = qword_102419658;
  if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v9 = *(void *)(a4 + 4);
    uint64_t v10 = *(void *)(a4 + 12);
    uint64_t v11 = *(void *)(a4 + 20);
    int v12 = *v6;
    int v13 = v6[1];
    int v14 = v6[2];
    int v15 = v6[3];
    int v16 = *(_DWORD *)(a4 + 84);
    int v17 = *(_DWORD *)(a1 + 384);
    *(_DWORD *)long long buf = 136317954;
    char v62 = "Network-Cell";
    __int16 v63 = 1024;
    int v64 = 1;
    __int16 v65 = 2048;
    uint64_t v66 = v9;
    __int16 v67 = 2048;
    uint64_t v68 = v10;
    __int16 v69 = 2048;
    uint64_t v70 = v11;
    __int16 v71 = 1024;
    int v72 = v12;
    __int16 v73 = 1024;
    int v74 = v13;
    __int16 v75 = 1024;
    int v76 = v14;
    __int16 v77 = 1024;
    int v78 = v15;
    __int16 v79 = 1024;
    int v80 = v16;
    __int16 v81 = 1024;
    int v82 = v17;
    __int16 v83 = 1024;
    int v84 = -1;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,LAC,0x%x,CI,0x%x,Confidence,%d,Count,%d,lock,%d", buf, 0x5Au);
  }
  if (sub_10013D1A0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419650 != -1) {
      dispatch_once(&qword_102419650, &stru_1022C5190);
    }
    uint64_t v21 = *(void *)(a4 + 4);
    uint64_t v22 = *(void *)(a4 + 12);
    uint64_t v23 = *(void *)(a4 + 20);
    int v24 = *v6;
    int v25 = v6[1];
    int v26 = v6[2];
    int v27 = v6[3];
    int v28 = *(_DWORD *)(a4 + 84);
    int v29 = *(_DWORD *)(a1 + 384);
    int v37 = 136317954;
    __int16 v38 = "Network-Cell";
    __int16 v39 = 1024;
    int v40 = 1;
    __int16 v41 = 2048;
    uint64_t v42 = v21;
    __int16 v43 = 2048;
    uint64_t v44 = v22;
    __int16 v45 = 2048;
    uint64_t v46 = v23;
    __int16 v47 = 1024;
    int v48 = v24;
    __int16 v49 = 1024;
    int v50 = v25;
    __int16 v51 = 1024;
    int v52 = v26;
    __int16 v53 = 1024;
    int v54 = v27;
    __int16 v55 = 1024;
    int v56 = v28;
    __int16 v57 = 1024;
    int v58 = v29;
    __int16 v59 = 1024;
    int v60 = -1;
    __int16 v30 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("LOCATION", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::Cell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v30);
    if (v30 != (char *)buf) {
      free(v30);
    }
  }
  int v18 = (uint64_t *)sub_1006FF22C(a1 + 168, v6);
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32))(*(void *)(a1 + 112)) == 1)
  {
    int v19 = (int *)sub_1006E6690((uint64_t)v32);
    if (sub_1006BD810(*(void *)(v7 + 32), v19, a4)) {
      ++*(_DWORD *)(a1 + 384);
    }
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v20 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "#Warning Location Services disabled, not storing location entry", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      LOWORD(v37) = 0;
      int v31 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::Cell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v31);
      if (v31 != (char *)buf) {
        free(v31);
      }
    }
  }
  if ((uint64_t *)(a1 + 176) != v18)
  {
    sub_1000F0A30((uint64_t **)(a1 + 168), v18);
    operator delete(v18);
  }
  if (v36 < 0) {
    operator delete(__p);
  }
  if (v33)
  {
    __int16 v34 = v33;
    operator delete(v33);
  }
}

void sub_1006F1DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_10055C7F8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1006F1E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10142D434(v23, a3, 0);
  sub_100108C54((uint64_t)v23, -1, -1, -1, -1);
  uint64_t v4 = (int *)sub_1006E6690((uint64_t)v23);
  if (qword_102419650 != -1) {
    dispatch_once(&qword_102419650, &stru_1022C5190);
  }
  unint64_t v5 = qword_102419658;
  if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *v4;
    int v7 = v4[1];
    int v8 = v4[2];
    int v9 = v4[3];
    *(_DWORD *)long long buf = 136317186;
    __int16 v47 = "Network-Cell";
    uint64_t v48 = 0x800000000000400;
    *(void *)__int16 v49 = 0;
    *(_WORD *)&v49[8] = 2048;
    *(void *)&v49[10] = 0;
    *(_WORD *)&v49[18] = 2048;
    *(void *)&v49[20] = 0xBFF0000000000000;
    *(_WORD *)&v49[28] = 1024;
    *(_DWORD *)&v49[30] = v6;
    *(_WORD *)&v49[34] = 1024;
    *(_DWORD *)&v49[36] = v7;
    *(_WORD *)&v49[40] = 1024;
    *(_DWORD *)&v49[42] = v8;
    *(_WORD *)&v49[46] = 1024;
    LODWORD(v50) = v9;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,LAC,0x%x,CI,0x%x,", buf, 0x48u);
  }
  if (sub_10013D1A0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419650 != -1) {
      dispatch_once(&qword_102419650, &stru_1022C5190);
    }
    int v17 = *v4;
    int v18 = v4[1];
    int v19 = v4[2];
    int v20 = v4[3];
    int v28 = 136317186;
    int v29 = "Network-Cell";
    __int16 v30 = 1024;
    int v31 = 0;
    __int16 v32 = 2048;
    uint64_t v33 = 0;
    __int16 v34 = 2048;
    uint64_t v35 = 0;
    __int16 v36 = 2048;
    unint64_t v37 = 0xBFF0000000000000;
    __int16 v38 = 1024;
    int v39 = v17;
    __int16 v40 = 1024;
    int v41 = v18;
    __int16 v42 = 1024;
    int v43 = v19;
    __int16 v44 = 1024;
    int v45 = v20;
    uint64_t v21 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("LOCATION", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::Cell &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v21);
    if (v21 != (char *)buf) {
      free(v21);
    }
  }
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v48 = 0;
    __int16 v47 = 0;
    *(_OWORD *)__int16 v49 = xmmword_101D1C320;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)&v49[16] = _Q0;
    *(_OWORD *)&v49[32] = _Q0;
    unint64_t v50 = 0xBFF0000000000000;
    *(_DWORD *)long long buf = 0xFFFF;
    int v52 = 0;
    uint64_t v55 = 0;
    unint64_t v53 = 0xBFF0000000000000;
    uint64_t v54 = 0;
    unint64_t v57 = 0xBFF0000000000000;
    int v56 = 0;
    int v58 = 0x7FFFFFFF;
    uint64_t v61 = 0;
    uint64_t v59 = 0;
    uint64_t v60 = 0;
    char v62 = 0;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    uint64_t v15 = sub_1006DE9BC(a1);
    sub_1006BD810(*(void *)(v15 + 32), v4, (uint64_t)buf);
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v16 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#Warning Location Services disabled, not storing location entry", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      LOWORD(v28) = 0;
      uint64_t v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::Cell &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
    }
  }
  sub_1006FF3AC((uint64_t **)(a1 + 168), v4);
  if (v27 < 0) {
    operator delete(__p);
  }
  if (v24)
  {
    int v25 = v24;
    operator delete(v24);
  }
}

void sub_1006F22C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_10055C7F8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1006F22F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10142DB34(v45, a3, 3);
  sub_100108C54((uint64_t)v45, -1, -1, -1, -1);
  int v6 = (int *)sub_1006E58D4((uint64_t)v45);
  sub_100613DB4((uint64_t)v6, __p);
  if (qword_102419650 != -1) {
    dispatch_once(&qword_102419650, &stru_1022C5190);
  }
  int v7 = qword_102419658;
  if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v8 = *(void *)(a4 + 4);
    uint64_t v9 = *(void *)(a4 + 12);
    uint64_t v10 = *(void *)(a4 + 20);
    int v11 = *v6;
    int v12 = v6[58];
    int v13 = v6[8];
    int v14 = v6[9];
    int v15 = v6[11];
    int v16 = *(_DWORD *)(a4 + 84);
    int v17 = *(_DWORD *)(a1 + 384);
    *(_DWORD *)long long buf = 136318210;
    __int16 v71 = "Network-Cell";
    __int16 v72 = 1024;
    *(_DWORD *)__int16 v73 = 1;
    *(_WORD *)&v73[4] = 2048;
    *(void *)&v73[6] = v8;
    *(_WORD *)&long long v73[14] = 2048;
    *(void *)&v73[16] = v9;
    *(_WORD *)&v73[24] = 2048;
    *(void *)&v73[26] = v10;
    __int16 v74 = 1024;
    int v75 = v11;
    __int16 v76 = 1024;
    int v77 = v12;
    __int16 v78 = 1024;
    int v79 = v13;
    __int16 v80 = 1024;
    int v81 = v14;
    __int16 v82 = 1024;
    int v83 = v15;
    __int16 v84 = 1024;
    int v85 = v16;
    __int16 v86 = 1024;
    int v87 = v17;
    __int16 v88 = 1024;
    int v89 = -1;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,SID,%03d,NID,%03d,BSID,%03d,Confidence,%d,Count,%d,lock,%d", buf, 0x60u);
  }
  if (sub_10013D1A0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419650 != -1) {
      dispatch_once(&qword_102419650, &stru_1022C5190);
    }
    uint64_t v26 = *(void *)(a4 + 4);
    uint64_t v27 = *(void *)(a4 + 12);
    uint64_t v28 = *(void *)(a4 + 20);
    int v29 = *v6;
    int v30 = v6[58];
    int v31 = v6[8];
    int v32 = v6[9];
    int v33 = v6[11];
    int v34 = *(_DWORD *)(a4 + 84);
    int v35 = *(_DWORD *)(a1 + 384);
    int v50 = 136318210;
    __int16 v51 = "Network-Cell";
    __int16 v52 = 1024;
    *(_DWORD *)unint64_t v53 = 1;
    *(_WORD *)&v53[4] = 2048;
    *(void *)&v53[6] = v26;
    *(_WORD *)&v53[14] = 2048;
    *(void *)&v53[16] = v27;
    *(_WORD *)&v53[24] = 2048;
    *(void *)&v53[26] = v28;
    __int16 v54 = 1024;
    int v55 = v29;
    __int16 v56 = 1024;
    int v57 = v30;
    __int16 v58 = 1024;
    int v59 = v31;
    __int16 v60 = 1024;
    int v61 = v32;
    __int16 v62 = 1024;
    int v63 = v33;
    __int16 v64 = 1024;
    int v65 = v34;
    __int16 v66 = 1024;
    int v67 = v35;
    __int16 v68 = 1024;
    int v69 = -1;
    __int16 v36 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("LOCATION", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterCdmaCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::CdmaCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v36);
    if (v36 != (char *)buf) {
      free(v36);
    }
  }
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  int v18 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    int v19 = __p;
    if (v44 < 0) {
      int v19 = (void **)__p[0];
    }
    uint64_t v20 = *(void *)(a4 + 4);
    uint64_t v21 = *(void *)(a4 + 12);
    uint64_t v22 = *(void *)(a4 + 20);
    *(_DWORD *)long long buf = 136315906;
    __int16 v71 = (const char *)v19;
    __int16 v72 = 2048;
    *(void *)__int16 v73 = v20;
    *(_WORD *)&v73[8] = 2048;
    *(void *)&v73[10] = v21;
    *(_WORD *)&v73[18] = 2048;
    *(void *)&v73[20] = v22;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "CELL_LOC: server response cell(%s) loc (%lf %lf) acc(%lf)", buf, 0x2Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    unint64_t v37 = __p;
    if (v44 < 0) {
      unint64_t v37 = (void **)__p[0];
    }
    uint64_t v38 = *(void *)(a4 + 4);
    uint64_t v39 = *(void *)(a4 + 12);
    uint64_t v40 = *(void *)(a4 + 20);
    int v50 = 136315906;
    __int16 v51 = (const char *)v37;
    __int16 v52 = 2048;
    *(void *)unint64_t v53 = v38;
    *(_WORD *)&v53[8] = 2048;
    *(void *)&v53[10] = v39;
    *(_WORD *)&v53[18] = 2048;
    *(void *)&v53[20] = v40;
    int v41 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterCdmaCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::CdmaCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v41);
    if (v41 != (char *)buf) {
      free(v41);
    }
  }
  uint64_t v23 = sub_1006FEC40(a1 + 248, (uint64_t)v6);
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v24 = sub_1006DEACC(a1);
    if (sub_1009B4EB8(*(void *)(v24 + 32), v6, a4)) {
      ++*(_DWORD *)(a1 + 384);
    }
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v25 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#Warning Location Services disabled, not storing location entry", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      LOWORD(v50) = 0;
      __int16 v42 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterCdmaCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::CdmaCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v42);
      if (v42 != (char *)buf) {
        free(v42);
      }
    }
  }
  if ((uint64_t *)(a1 + 256) != v23)
  {
    sub_1000F0A30((uint64_t **)(a1 + 248), v23);
    sub_1006FE150((uint64_t)(v23 + 4));
    operator delete(v23);
  }
  if (v44 < 0) {
    operator delete(__p[0]);
  }
  if (v49 < 0) {
    operator delete(v48);
  }
  if (v46)
  {
    __int16 v47 = v46;
    operator delete(v46);
  }
}

void sub_1006F29D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_10055C7F8((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_1006F2A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10142DB34(v25, a3, 3);
  sub_100108C54((uint64_t)v25, -1, -1, -1, -1);
  uint64_t v4 = (int *)sub_1006E58D4((uint64_t)v25);
  if (qword_102419650 != -1) {
    dispatch_once(&qword_102419650, &stru_1022C5190);
  }
  unint64_t v5 = qword_102419658;
  if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *v4;
    int v7 = v4[58];
    int v8 = v4[8];
    int v9 = v4[9];
    int v10 = v4[11];
    *(_DWORD *)long long buf = 136317442;
    __int16 v51 = "Network-Cell";
    uint64_t v52 = 0x800000000000400;
    *(void *)unint64_t v53 = 0;
    *(_WORD *)&v53[8] = 2048;
    *(void *)&v53[10] = 0;
    *(_WORD *)&v53[18] = 2048;
    *(void *)&v53[20] = 0xBFF0000000000000;
    *(_WORD *)&v53[28] = 1024;
    *(_DWORD *)&v53[30] = v6;
    *(_WORD *)&unsigned char v53[34] = 1024;
    *(_DWORD *)&v53[36] = v7;
    *(_WORD *)&v53[40] = 1024;
    *(_DWORD *)&v53[42] = v8;
    *(_WORD *)&v53[46] = 1024;
    LODWORD(v54) = v9;
    WORD2(v54) = 1024;
    *(_DWORD *)((char *)&v54 + 6) = v10;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,SID,%03d,NID,%03d,BSID,%03d", buf, 0x4Eu);
  }
  if (sub_10013D1A0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419650 != -1) {
      dispatch_once(&qword_102419650, &stru_1022C5190);
    }
    int v18 = *v4;
    int v19 = v4[58];
    int v20 = v4[8];
    int v21 = v4[9];
    int v22 = v4[11];
    int v30 = 136317442;
    int v31 = "Network-Cell";
    __int16 v32 = 1024;
    int v33 = 0;
    __int16 v34 = 2048;
    uint64_t v35 = 0;
    __int16 v36 = 2048;
    uint64_t v37 = 0;
    __int16 v38 = 2048;
    unint64_t v39 = 0xBFF0000000000000;
    __int16 v40 = 1024;
    int v41 = v18;
    __int16 v42 = 1024;
    int v43 = v19;
    __int16 v44 = 1024;
    int v45 = v20;
    __int16 v46 = 1024;
    int v47 = v21;
    __int16 v48 = 1024;
    int v49 = v22;
    uint64_t v23 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("LOCATION", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterCdmaCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::CdmaCell &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v23);
    if (v23 != (char *)buf) {
      free(v23);
    }
  }
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v52 = 0;
    __int16 v51 = 0;
    *(_OWORD *)unint64_t v53 = xmmword_101D1C320;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)&v53[16] = _Q0;
    *(_OWORD *)&v53[32] = _Q0;
    *(void *)&long long v54 = 0xBFF0000000000000;
    *(_DWORD *)long long buf = 0xFFFF;
    int v55 = 0;
    uint64_t v58 = 0;
    unint64_t v56 = 0xBFF0000000000000;
    uint64_t v57 = 0;
    unint64_t v60 = 0xBFF0000000000000;
    int v59 = 0;
    int v61 = 0x7FFFFFFF;
    uint64_t v64 = 0;
    uint64_t v62 = 0;
    uint64_t v63 = 0;
    char v65 = 0;
    *((void *)&v54 + 1) = CFAbsoluteTimeGetCurrent();
    uint64_t v16 = sub_1006DEACC(a1);
    sub_1009B4EB8(*(void *)(v16 + 32), v4, (uint64_t)buf);
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v17 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "#Warning Location Services disabled, not storing location entry", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      LOWORD(v30) = 0;
      uint64_t v24 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterCdmaCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::CdmaCell &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v24);
      if (v24 != (char *)buf) {
        free(v24);
      }
    }
  }
  sub_1006FF400((uint64_t **)(a1 + 248), (uint64_t)v4);
  if (v29 < 0) {
    operator delete(__p);
  }
  if (v26)
  {
    uint64_t v27 = v26;
    operator delete(v26);
  }
}

void sub_1006F2EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_10055C7F8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1006F2F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10142DE18(v56, a3, 6);
  sub_100108C54((uint64_t)v56, -1, -1, -1, -1);
  int v6 = (int *)sub_100117098((uint64_t)v56);
  sub_1000AAEBC(v54);
  int v7 = &qword_102419000;
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  int v8 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    int v9 = v55;
    int v10 = (void **)v54[0];
    sub_1000AB340(a4);
    int v11 = v54;
    if (v9 < 0) {
      int v11 = v10;
    }
    if ((v90 & 0x80000000) == 0) {
      int v12 = __p;
    }
    else {
      int v12 = *(unsigned char **)__p;
    }
    *(_DWORD *)long long buf = 136315394;
    *(void *)&uint8_t buf[4] = v11;
    __int16 v62 = 2080;
    *(void *)uint64_t v63 = v12;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "CELL_LOC: server response lte cell, %s, location, %s", buf, 0x16u);
    if (SBYTE3(v90) < 0) {
      operator delete(*(void **)__p);
    }
    int v7 = &qword_102419000;
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v32 = v55;
    int v33 = (void **)v54[0];
    sub_1000AB340(a4);
    __int16 v34 = v54;
    if (v32 < 0) {
      __int16 v34 = v33;
    }
    if (v63[9] >= 0) {
      uint64_t v35 = buf;
    }
    else {
      uint64_t v35 = *(unsigned char **)buf;
    }
    int v82 = 136315394;
    int v83 = v34;
    __int16 v84 = 2080;
    int v85 = v35;
    __int16 v36 = (char *)_os_log_send_and_compose_impl();
    if ((v63[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterLteCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v36);
    int v7 = &qword_102419000;
    if (v36 != __p) {
      free(v36);
    }
  }
  if (qword_102419650 != -1) {
    dispatch_once(&qword_102419650, &stru_1022C5190);
  }
  int v13 = qword_102419658;
  if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v14 = *(void *)(a4 + 4);
    uint64_t v15 = *(void *)(a4 + 12);
    uint64_t v16 = *(void *)(a4 + 20);
    int v17 = *v6;
    int v18 = v6[1];
    int v19 = v6[2];
    int v20 = v6[3];
    int v21 = *(_DWORD *)(a4 + 84);
    int v22 = *(_DWORD *)(a1 + 384);
    *(_DWORD *)long long __p = 136317954;
    *(void *)&__p[4] = "Network-Cell";
    __int16 v87 = 1024;
    int v88 = 1;
    __int16 v89 = 2048;
    uint64_t v90 = v14;
    __int16 v91 = 2048;
    uint64_t v92 = v15;
    __int16 v93 = 2048;
    uint64_t v94 = v16;
    __int16 v95 = 1024;
    int v96 = v17;
    __int16 v97 = 1024;
    int v98 = v18;
    __int16 v99 = 1024;
    int v100 = v19;
    __int16 v101 = 1024;
    int v102 = v20;
    __int16 v103 = 1024;
    int v104 = v21;
    __int16 v105 = 1024;
    int v106 = v22;
    __int16 v107 = 1024;
    int v108 = -1;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,TAC,0x%x,CI,0x%x,Confidence,%d,Count,%d,lock,%d", __p, 0x5Au);
  }
  if (sub_10013D1A0(117, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_102419650 != -1) {
      dispatch_once(&qword_102419650, &stru_1022C5190);
    }
    uint64_t v37 = *(void *)(a4 + 4);
    uint64_t v38 = *(void *)(a4 + 12);
    uint64_t v39 = *(void *)(a4 + 20);
    int v40 = *v6;
    int v41 = v6[1];
    int v42 = v6[2];
    int v43 = v6[3];
    int v44 = *(_DWORD *)(a4 + 84);
    int v45 = *(_DWORD *)(a1 + 384);
    *(_DWORD *)long long buf = 136317954;
    *(void *)&uint8_t buf[4] = "Network-Cell";
    __int16 v62 = 1024;
    *(_DWORD *)uint64_t v63 = 1;
    *(_WORD *)&v63[4] = 2048;
    *(void *)&v63[6] = v37;
    __int16 v64 = 2048;
    uint64_t v65 = v38;
    __int16 v66 = 2048;
    uint64_t v67 = v39;
    __int16 v68 = 1024;
    int v69 = v40;
    __int16 v70 = 1024;
    int v71 = v41;
    __int16 v72 = 1024;
    int v73 = v42;
    __int16 v74 = 1024;
    int v75 = v43;
    __int16 v76 = 1024;
    int v77 = v44;
    __int16 v78 = 1024;
    int v79 = v45;
    __int16 v80 = 1024;
    int v81 = -1;
    __int16 v46 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("LOCATION", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterLteCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v46);
    if (v46 != __p) {
      free(v46);
    }
  }
  uint64_t v23 = (uint64_t *)sub_1006FF22C(a1 + 288, v6);
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v24 = sub_1000AB2B4(a1);
    if (sub_100E07058(*(void *)(v24 + 32), v6, a4)) {
      ++*(_DWORD *)(a1 + 384);
    }
  }
  else
  {
    if (v7[198] != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v25 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long __p = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#Warning Location Services disabled, not storing location entry", __p, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (v7[198] != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      *(_WORD *)long long buf = 0;
      unint64_t v53 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterLteCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v53);
      if (v53 != __p) {
        free(v53);
      }
    }
  }
  if (v7[198] != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  uint64_t v26 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v27 = *(void *)(a1 + 304);
    sub_1000AAEBC(__p);
    if ((v90 & 0x80000000) == 0) {
      uint64_t v28 = __p;
    }
    else {
      uint64_t v28 = *(unsigned char **)__p;
    }
    *(_DWORD *)long long buf = 134218242;
    *(void *)&uint8_t buf[4] = v27;
    __int16 v62 = 2080;
    *(void *)uint64_t v63 = v28;
    _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "NETWORK: pending, known, before, %lu, cell, %s", buf, 0x16u);
    if (SBYTE3(v90) < 0) {
      operator delete(*(void **)__p);
    }
    int v7 = &qword_102419000;
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (v7[198] != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v47 = *(void ***)(a1 + 304);
    sub_1000AAEBC(buf);
    if (v63[9] >= 0) {
      __int16 v48 = buf;
    }
    else {
      __int16 v48 = *(unsigned char **)buf;
    }
    int v82 = 134218242;
    int v83 = v47;
    __int16 v84 = 2080;
    int v85 = v48;
    int v49 = (char *)_os_log_send_and_compose_impl();
    if ((v63[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterLteCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v49);
    int v7 = &qword_102419000;
    if (v49 != __p) {
      free(v49);
    }
  }
  if ((uint64_t *)(a1 + 296) != v23)
  {
    sub_1000F0A30((uint64_t **)(a1 + 288), v23);
    operator delete(v23);
  }
  if (v7[198] != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  char v29 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v30 = *(void *)(a1 + 304);
    sub_1000AAEBC(__p);
    int v31 = (v90 & 0x80000000) == 0 ? __p : *(unsigned char **)__p;
    *(_DWORD *)long long buf = 134218242;
    *(void *)&uint8_t buf[4] = v30;
    __int16 v62 = 2080;
    *(void *)uint64_t v63 = v31;
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "NETWORK: pending, known, after, %lu, cell, %s", buf, 0x16u);
    if (SBYTE3(v90) < 0) {
      operator delete(*(void **)__p);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (v7[198] != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v50 = *(void ***)(a1 + 304);
    sub_1000AAEBC(buf);
    if (v63[9] >= 0) {
      __int16 v51 = buf;
    }
    else {
      __int16 v51 = *(unsigned char **)buf;
    }
    int v82 = 134218242;
    int v83 = v50;
    __int16 v84 = 2080;
    int v85 = v51;
    uint64_t v52 = (char *)_os_log_send_and_compose_impl();
    if ((v63[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterLteCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::LteCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v52);
    if (v52 != __p) {
      free(v52);
    }
  }
  if (v55 < 0) {
    operator delete(v54[0]);
  }
  if (v60 < 0) {
    operator delete(v59);
  }
  if (v57)
  {
    uint64_t v58 = v57;
    operator delete(v57);
  }
}

void sub_1006F39A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_10055C7F8((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_1006F3A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10142DE18(v35, a3, 6);
  sub_100108C54((uint64_t)v35, -1, -1, -1, -1);
  uint64_t v4 = (int *)sub_100117098((uint64_t)v35);
  if (qword_102419650 != -1) {
    dispatch_once(&qword_102419650, &stru_1022C5190);
  }
  unint64_t v5 = qword_102419658;
  if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *v4;
    int v7 = v4[1];
    int v8 = v4[2];
    int v9 = v4[3];
    *(_DWORD *)long long buf = 136317186;
    *(void *)&uint8_t buf[4] = "Network-Cell";
    uint64_t v60 = 0x800000000000400;
    *(void *)int v61 = 0;
    *(_WORD *)&v61[8] = 2048;
    *(void *)&v61[10] = 0;
    *(_WORD *)&v61[18] = 2048;
    *(void *)&v61[20] = 0xBFF0000000000000;
    *(_WORD *)&unsigned char v61[28] = 1024;
    *(_DWORD *)&v61[30] = v6;
    *(_WORD *)&v61[34] = 1024;
    *(_DWORD *)&v61[36] = v7;
    *(_WORD *)&v61[40] = 1024;
    *(_DWORD *)&v61[42] = v8;
    *(_WORD *)&v61[46] = 1024;
    LODWORD(v62) = v9;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,TAC,0x%x,CI,0x%x,", buf, 0x48u);
  }
  if (sub_10013D1A0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419650 != -1) {
      dispatch_once(&qword_102419650, &stru_1022C5190);
    }
    int v23 = *v4;
    int v24 = v4[1];
    int v25 = v4[2];
    int v26 = v4[3];
    *(_DWORD *)int v44 = 136317186;
    *(void *)&v44[4] = "Network-Cell";
    __int16 v45 = 1024;
    *(_DWORD *)__int16 v46 = 0;
    *(_WORD *)&v46[4] = 2048;
    *(void *)&v46[6] = 0;
    __int16 v47 = 2048;
    uint64_t v48 = 0;
    __int16 v49 = 2048;
    unint64_t v50 = 0xBFF0000000000000;
    __int16 v51 = 1024;
    int v52 = v23;
    __int16 v53 = 1024;
    int v54 = v24;
    __int16 v55 = 1024;
    int v56 = v25;
    __int16 v57 = 1024;
    int v58 = v26;
    uint64_t v27 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("LOCATION", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterLteCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::LteCell &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v27);
    if (v27 != buf) {
      free(v27);
    }
  }
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v60 = 0;
    *(void *)&uint8_t buf[4] = 0;
    *(_OWORD *)int v61 = xmmword_101D1C320;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)&v61[16] = _Q0;
    *(_OWORD *)&v61[32] = _Q0;
    long long v62 = _Q0;
    *(_DWORD *)long long buf = 0xFFFF;
    int v63 = 0;
    uint64_t v66 = 0;
    unint64_t v64 = 0xBFF0000000000000;
    uint64_t v65 = 0;
    unint64_t v68 = 0xBFF0000000000000;
    int v67 = 0;
    int v69 = 0x7FFFFFFF;
    uint64_t v72 = 0;
    uint64_t v70 = 0;
    uint64_t v71 = 0;
    char v73 = 0;
    *((void *)&v62 + 1) = CFAbsoluteTimeGetCurrent();
    uint64_t v15 = sub_1000AB2B4(a1);
    sub_100E07058(*(void *)(v15 + 32), v4, (uint64_t)buf);
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v16 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#Warning Location Services disabled, not storing location entry", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      *(_WORD *)int v44 = 0;
      __int16 v34 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterLteCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::LteCell &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v34);
      if (v34 != buf) {
        free(v34);
      }
    }
  }
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  int v17 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v18 = *(void *)(a1 + 304);
    sub_1000AAEBC(buf);
    int v19 = v61[3] >= 0 ? buf : *(unsigned char **)buf;
    *(_DWORD *)int v44 = 134218242;
    *(void *)&v44[4] = v18;
    __int16 v45 = 2080;
    *(void *)__int16 v46 = v19;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "NETWORK: pending, unknown, before, %lu, cell, %s", v44, 0x16u);
    if ((v61[3] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v28 = *(void *)(a1 + 304);
    sub_1000AAEBC(v44);
    if (v46[9] >= 0) {
      char v29 = v44;
    }
    else {
      char v29 = *(unsigned char **)v44;
    }
    int v40 = 134218242;
    uint64_t v41 = v28;
    __int16 v42 = 2080;
    int v43 = v29;
    uint64_t v30 = (char *)_os_log_send_and_compose_impl();
    if ((v46[9] & 0x80000000) != 0) {
      operator delete(*(void **)v44);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterLteCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::LteCell &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v30);
    if (v30 != buf) {
      free(v30);
    }
  }
  sub_1006FF3AC((uint64_t **)(a1 + 288), v4);
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  int v20 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v21 = *(void *)(a1 + 304);
    sub_1000AAEBC(buf);
    int v22 = v61[3] >= 0 ? buf : *(unsigned char **)buf;
    *(_DWORD *)int v44 = 134218242;
    *(void *)&v44[4] = v21;
    __int16 v45 = 2080;
    *(void *)__int16 v46 = v22;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "NETWORK: pending, unknown, after, %lu, cell, %s", v44, 0x16u);
    if ((v61[3] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v31 = *(void *)(a1 + 304);
    sub_1000AAEBC(v44);
    if (v46[9] >= 0) {
      int v32 = v44;
    }
    else {
      int v32 = *(unsigned char **)v44;
    }
    int v40 = 134218242;
    uint64_t v41 = v31;
    __int16 v42 = 2080;
    int v43 = v32;
    int v33 = (char *)_os_log_send_and_compose_impl();
    if ((v46[9] & 0x80000000) != 0) {
      operator delete(*(void **)v44);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterLteCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::LteCell &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v33);
    if (v33 != buf) {
      free(v33);
    }
  }
  if (v39 < 0) {
    operator delete(__p);
  }
  if (v36)
  {
    uint64_t v37 = v36;
    operator delete(v36);
  }
}

void sub_1006F4258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_10055C7F8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1006F429C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10142E0F0(v56, a3, 10);
  sub_100108C54((uint64_t)v56, -1, -1, -1, -1);
  uint64_t v6 = sub_1006E8278((uint64_t)v56);
  sub_100614EB8(v54);
  int v7 = &qword_102419000;
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  int v8 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    int v9 = v55;
    int v10 = (void **)v54[0];
    sub_1000AB340(a4);
    int v11 = v54;
    if (v9 < 0) {
      int v11 = v10;
    }
    if ((v90 & 0x80000000) == 0) {
      int v12 = __p;
    }
    else {
      int v12 = *(unsigned char **)__p;
    }
    *(_DWORD *)long long buf = 136315394;
    *(void *)&uint8_t buf[4] = v11;
    __int16 v62 = 2080;
    *(void *)int v63 = v12;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "CELL_LOC: server response nr cell, %s, location, %s", buf, 0x16u);
    if (SBYTE3(v90) < 0) {
      operator delete(*(void **)__p);
    }
    int v7 = &qword_102419000;
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v32 = v55;
    int v33 = (void **)v54[0];
    sub_1000AB340(a4);
    __int16 v34 = v54;
    if (v32 < 0) {
      __int16 v34 = v33;
    }
    if (v63[9] >= 0) {
      uint64_t v35 = buf;
    }
    else {
      uint64_t v35 = *(unsigned char **)buf;
    }
    int v82 = 136315394;
    int v83 = v34;
    __int16 v84 = 2080;
    int v85 = v35;
    __int16 v36 = (char *)_os_log_send_and_compose_impl();
    if ((v63[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterNrCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::NrCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v36);
    int v7 = &qword_102419000;
    if (v36 != __p) {
      free(v36);
    }
  }
  if (qword_102419650 != -1) {
    dispatch_once(&qword_102419650, &stru_1022C5190);
  }
  int v13 = qword_102419658;
  if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v14 = *(void *)(a4 + 4);
    uint64_t v15 = *(void *)(a4 + 12);
    uint64_t v16 = *(void *)(a4 + 20);
    int v17 = *(_DWORD *)v6;
    int v18 = *(_DWORD *)(v6 + 4);
    int v19 = *(_DWORD *)(v6 + 8);
    uint64_t v20 = *(void *)(v6 + 16);
    int v21 = *(_DWORD *)(a4 + 84);
    int v22 = *(_DWORD *)(a1 + 384);
    *(_DWORD *)long long __p = 136317954;
    *(void *)&__p[4] = "Network-Cell";
    __int16 v87 = 1024;
    int v88 = 1;
    __int16 v89 = 2048;
    uint64_t v90 = v14;
    __int16 v91 = 2048;
    uint64_t v92 = v15;
    __int16 v93 = 2048;
    uint64_t v94 = v16;
    __int16 v95 = 1024;
    int v96 = v17;
    __int16 v97 = 1024;
    int v98 = v18;
    __int16 v99 = 1024;
    int v100 = v19;
    __int16 v101 = 2048;
    uint64_t v102 = v20;
    __int16 v103 = 1024;
    int v104 = v21;
    __int16 v105 = 1024;
    int v106 = v22;
    __int16 v107 = 1024;
    int v108 = -1;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,TAC,0x%x,CI,0x%llx,Confidence,%d,Count,%d,lock,%d", __p, 0x5Eu);
  }
  if (sub_10013D1A0(117, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_102419650 != -1) {
      dispatch_once(&qword_102419650, &stru_1022C5190);
    }
    uint64_t v37 = *(void *)(a4 + 4);
    uint64_t v38 = *(void *)(a4 + 12);
    uint64_t v39 = *(void *)(a4 + 20);
    int v40 = *(_DWORD *)v6;
    int v41 = *(_DWORD *)(v6 + 4);
    int v42 = *(_DWORD *)(v6 + 8);
    uint64_t v43 = *(void *)(v6 + 16);
    int v44 = *(_DWORD *)(a4 + 84);
    int v45 = *(_DWORD *)(a1 + 384);
    *(_DWORD *)long long buf = 136317954;
    *(void *)&uint8_t buf[4] = "Network-Cell";
    __int16 v62 = 1024;
    *(_DWORD *)int v63 = 1;
    *(_WORD *)&v63[4] = 2048;
    *(void *)&v63[6] = v37;
    __int16 v64 = 2048;
    uint64_t v65 = v38;
    __int16 v66 = 2048;
    uint64_t v67 = v39;
    __int16 v68 = 1024;
    int v69 = v40;
    __int16 v70 = 1024;
    int v71 = v41;
    __int16 v72 = 1024;
    int v73 = v42;
    __int16 v74 = 2048;
    uint64_t v75 = v43;
    __int16 v76 = 1024;
    int v77 = v44;
    __int16 v78 = 1024;
    int v79 = v45;
    __int16 v80 = 1024;
    int v81 = -1;
    __int16 v46 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("LOCATION", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterNrCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::NrCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v46);
    if (v46 != __p) {
      free(v46);
    }
  }
  int v23 = sub_1006FF2A8(a1 + 328, v6);
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v24 = sub_1006DEBDC(a1);
    if (sub_10082E88C(*(void *)(v24 + 32), v6, a4)) {
      ++*(_DWORD *)(a1 + 384);
    }
  }
  else
  {
    if (v7[198] != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v25 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long __p = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#Warning Location Services disabled, not storing location entry", __p, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (v7[198] != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      *(_WORD *)long long buf = 0;
      __int16 v53 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterNrCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::NrCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v53);
      if (v53 != __p) {
        free(v53);
      }
    }
  }
  if (v7[198] != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  int v26 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v27 = *(void *)(a1 + 344);
    sub_100614EB8(__p);
    if ((v90 & 0x80000000) == 0) {
      uint64_t v28 = __p;
    }
    else {
      uint64_t v28 = *(unsigned char **)__p;
    }
    *(_DWORD *)long long buf = 134218242;
    *(void *)&uint8_t buf[4] = v27;
    __int16 v62 = 2080;
    *(void *)int v63 = v28;
    _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "NETWORK: pending, known, before, %lu, cell, %s", buf, 0x16u);
    if (SBYTE3(v90) < 0) {
      operator delete(*(void **)__p);
    }
    int v7 = &qword_102419000;
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (v7[198] != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    __int16 v47 = *(void ***)(a1 + 344);
    sub_100614EB8(buf);
    if (v63[9] >= 0) {
      uint64_t v48 = buf;
    }
    else {
      uint64_t v48 = *(unsigned char **)buf;
    }
    int v82 = 134218242;
    int v83 = v47;
    __int16 v84 = 2080;
    int v85 = v48;
    __int16 v49 = (char *)_os_log_send_and_compose_impl();
    if ((v63[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterNrCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::NrCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v49);
    int v7 = &qword_102419000;
    if (v49 != __p) {
      free(v49);
    }
  }
  if ((uint64_t *)(a1 + 336) != v23)
  {
    sub_1000F0A30((uint64_t **)(a1 + 328), v23);
    operator delete(v23);
  }
  if (v7[198] != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  char v29 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v30 = *(void *)(a1 + 344);
    sub_100614EB8(__p);
    uint64_t v31 = (v90 & 0x80000000) == 0 ? __p : *(unsigned char **)__p;
    *(_DWORD *)long long buf = 134218242;
    *(void *)&uint8_t buf[4] = v30;
    __int16 v62 = 2080;
    *(void *)int v63 = v31;
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "NETWORK: pending, known, after, %lu, cell, %s", buf, 0x16u);
    if (SBYTE3(v90) < 0) {
      operator delete(*(void **)__p);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (v7[198] != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    unint64_t v50 = *(void ***)(a1 + 344);
    sub_100614EB8(buf);
    if (v63[9] >= 0) {
      __int16 v51 = buf;
    }
    else {
      __int16 v51 = *(unsigned char **)buf;
    }
    int v82 = 134218242;
    int v83 = v50;
    __int16 v84 = 2080;
    int v85 = v51;
    int v52 = (char *)_os_log_send_and_compose_impl();
    if ((v63[9] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterNrCellLocation(CLNetworkLocationRequester *, const CLTelephonyService_Type::NrCell &, const CLDaemonLocation &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v52);
    if (v52 != __p) {
      free(v52);
    }
  }
  if (v55 < 0) {
    operator delete(v54[0]);
  }
  if (v60 < 0) {
    operator delete(v59);
  }
  if (v57)
  {
    int v58 = v57;
    operator delete(v57);
  }
}

void sub_1006F4D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_10055C7F8((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_1006F4D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10142E0F0(v35, a3, 10);
  sub_100108C54((uint64_t)v35, -1, -1, -1, -1);
  uint64_t v4 = sub_1006E8278((uint64_t)v35);
  if (qword_102419650 != -1) {
    dispatch_once(&qword_102419650, &stru_1022C5190);
  }
  unint64_t v5 = qword_102419658;
  if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *(_DWORD *)v4;
    int v7 = *(_DWORD *)(v4 + 4);
    int v8 = *(_DWORD *)(v4 + 8);
    uint64_t v9 = *(void *)(v4 + 16);
    *(_DWORD *)long long buf = 136317186;
    *(void *)&uint8_t buf[4] = "Network-Cell";
    uint64_t v60 = 0x800000000000400;
    *(void *)int v61 = 0;
    *(_WORD *)&v61[8] = 2048;
    *(void *)&v61[10] = 0;
    *(_WORD *)&v61[18] = 2048;
    *(void *)&v61[20] = 0xBFF0000000000000;
    *(_WORD *)&unsigned char v61[28] = 1024;
    *(_DWORD *)&v61[30] = v6;
    *(_WORD *)&v61[34] = 1024;
    *(_DWORD *)&v61[36] = v7;
    *(_WORD *)&v61[40] = 1024;
    *(_DWORD *)&v61[42] = v8;
    *(_WORD *)&v61[46] = 2048;
    *(void *)&long long v62 = v9;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,MCC,%03d,MNC,%03d,TAC,0x%x,CI,0x%llx,", buf, 0x4Cu);
  }
  if (sub_10013D1A0(117, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419650 != -1) {
      dispatch_once(&qword_102419650, &stru_1022C5190);
    }
    int v23 = *(_DWORD *)v4;
    int v24 = *(_DWORD *)(v4 + 4);
    int v25 = *(_DWORD *)(v4 + 8);
    uint64_t v26 = *(void *)(v4 + 16);
    *(_DWORD *)int v44 = 136317186;
    *(void *)&v44[4] = "Network-Cell";
    __int16 v45 = 1024;
    *(_DWORD *)__int16 v46 = 0;
    *(_WORD *)&v46[4] = 2048;
    *(void *)&v46[6] = 0;
    __int16 v47 = 2048;
    uint64_t v48 = 0;
    __int16 v49 = 2048;
    unint64_t v50 = 0xBFF0000000000000;
    __int16 v51 = 1024;
    int v52 = v23;
    __int16 v53 = 1024;
    int v54 = v24;
    __int16 v55 = 1024;
    int v56 = v25;
    __int16 v57 = 2048;
    uint64_t v58 = v26;
    uint64_t v27 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("LOCATION", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterNrCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::NrCell &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v27);
    if (v27 != buf) {
      free(v27);
    }
  }
  if ((*(unsigned int (**)(void))(**(void **)(a1 + 112) + 32))(*(void *)(a1 + 112)) == 1)
  {
    uint64_t v60 = 0;
    *(void *)&uint8_t buf[4] = 0;
    *(_OWORD *)int v61 = xmmword_101D1C320;
    __asm { FMOV            V0.2D, #-1.0 }
    *(_OWORD *)&v61[16] = _Q0;
    *(_OWORD *)&v61[32] = _Q0;
    long long v62 = _Q0;
    *(_DWORD *)long long buf = 0xFFFF;
    int v63 = 0;
    uint64_t v66 = 0;
    unint64_t v64 = 0xBFF0000000000000;
    uint64_t v65 = 0;
    unint64_t v68 = 0xBFF0000000000000;
    int v67 = 0;
    int v69 = 0x7FFFFFFF;
    uint64_t v72 = 0;
    uint64_t v70 = 0;
    uint64_t v71 = 0;
    char v73 = 0;
    *((void *)&v62 + 1) = CFAbsoluteTimeGetCurrent();
    uint64_t v15 = sub_1006DEBDC(a1);
    sub_10082E88C(*(void *)(v15 + 32), v4, (uint64_t)buf);
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v16 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#Warning Location Services disabled, not storing location entry", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      *(_WORD *)int v44 = 0;
      __int16 v34 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterNrCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::NrCell &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v34);
      if (v34 != buf) {
        free(v34);
      }
    }
  }
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  int v17 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v18 = *(void *)(a1 + 344);
    sub_100614EB8(buf);
    int v19 = v61[3] >= 0 ? buf : *(unsigned char **)buf;
    *(_DWORD *)int v44 = 134218242;
    *(void *)&v44[4] = v18;
    __int16 v45 = 2080;
    *(void *)__int16 v46 = v19;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "NETWORK: pending, unknown, before, %lu, cell, %s", v44, 0x16u);
    if ((v61[3] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v28 = *(void *)(a1 + 344);
    sub_100614EB8(v44);
    if (v46[9] >= 0) {
      char v29 = v44;
    }
    else {
      char v29 = *(unsigned char **)v44;
    }
    int v40 = 134218242;
    uint64_t v41 = v28;
    __int16 v42 = 2080;
    uint64_t v43 = v29;
    uint64_t v30 = (char *)_os_log_send_and_compose_impl();
    if ((v46[9] & 0x80000000) != 0) {
      operator delete(*(void **)v44);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterNrCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::NrCell &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v30);
    if (v30 != buf) {
      free(v30);
    }
  }
  sub_1006FF45C((uint64_t **)(a1 + 328), v4);
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  uint64_t v20 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v21 = *(void *)(a1 + 344);
    sub_100614EB8(buf);
    int v22 = v61[3] >= 0 ? buf : *(unsigned char **)buf;
    *(_DWORD *)int v44 = 134218242;
    *(void *)&v44[4] = v21;
    __int16 v45 = 2080;
    *(void *)__int16 v46 = v22;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "NETWORK: pending, unknown, after, %lu, cell, %s", v44, 0x16u);
    if ((v61[3] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v31 = *(void *)(a1 + 344);
    sub_100614EB8(v44);
    if (v46[9] >= 0) {
      int v32 = v44;
    }
    else {
      int v32 = *(unsigned char **)v44;
    }
    int v40 = 134218242;
    uint64_t v41 = v31;
    __int16 v42 = 2080;
    uint64_t v43 = v32;
    int v33 = (char *)_os_log_send_and_compose_impl();
    if ((v46[9] & 0x80000000) != 0) {
      operator delete(*(void **)v44);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterNrCellLocationUnknown(CLNetworkLocationRequester *, const CLTelephonyService_Type::NrCell &, CLNetworkLocationRequester::RequestType, int)", "%s\n", v33);
    if (v33 != buf) {
      free(v33);
    }
  }
  if (v39 < 0) {
    operator delete(__p);
  }
  if (v36)
  {
    uint64_t v37 = v36;
    operator delete(v36);
  }
}

void sub_1006F55E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_10055C7F8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1006F562C(uint64_t a1, uint64_t a2, uint64_t a3, long long **a4, int a5, int a6, int a7)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022C5150);
  }
  int v12 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v13 = 0xD37A6F4DE9BD37A7 * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3);
    unint64_t v14 = 0xD37A6F4DE9BD37A7 * (((char *)a4[1] - (char *)*a4) >> 3);
    *(_DWORD *)long long buf = 134349312;
    *(void *)int v112 = v13;
    *(_WORD *)&v112[8] = 2050;
    *(void *)&v112[10] = v14;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "AlsWifi, seriesComplete, known, %{public}lu, unknown, %{public}lu", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    unint64_t v86 = 0xD37A6F4DE9BD37A7 * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3);
    unint64_t v87 = 0xD37A6F4DE9BD37A7 * (((char *)a4[1] - (char *)*a4) >> 3);
    LODWORD(v108.__r_.__value_.__l.__data_) = 134349312;
    *(std::string::size_type *)((char *)v108.__r_.__value_.__r.__words + 4) = v86;
    WORD2(v108.__r_.__value_.__r.__words[1]) = 2050;
    *(std::string::size_type *)((char *)&v108.__r_.__value_.__r.__words[1] + 6) = v87;
    int v88 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterWifiLocationSeriesComplete(CLNetworkLocationRequester *, const std::vector<CLAlsWifiAccessPoint> &, const std::vector<CLAlsWifiAccessPoint> &, CLNetworkLocationRequester::RequestType, int, CLNetworkLocationRequest_Type::CLAlsWifiBand)", "%s\n", v88);
    if (v88 != (char *)buf) {
      free(v88);
    }
  }
  int v15 = (*(uint64_t (**)(void))(**(void **)(a1 + 112) + 32))(*(void *)(a1 + 112));
  __int16 v105 = 0;
  int v106 = 0;
  uint64_t v107 = 0;
  uint64_t v16 = *(void *)(a1 + 400);
  __int16 v95 = a4;
  if (!v16) {
    goto LABEL_16;
  }
  uint64_t v17 = a1 + 400;
  do
  {
    int v18 = *(_DWORD *)(v16 + 32);
    BOOL v19 = v18 < a6;
    if (v18 >= a6) {
      uint64_t v20 = (uint64_t *)v16;
    }
    else {
      uint64_t v20 = (uint64_t *)(v16 + 8);
    }
    if (!v19) {
      uint64_t v17 = v16;
    }
    uint64_t v16 = *v20;
  }
  while (*v20);
  if (v17 == a1 + 400 || *(_DWORD *)(v17 + 32) > a6)
  {
LABEL_16:
    if (a5 != 1)
    {
      *(_DWORD *)long long buf = -1;
      sub_1000FB43C((char *)&v105, (char *)buf, (uint64_t)v112, 1uLL);
      goto LABEL_18;
    }
    sub_101A6B9D0(buf);
LABEL_121:
    abort_report_np();
    goto LABEL_123;
  }
  if (&v105 != (void **)(v17 + 40)) {
    sub_1000FB43C((char *)&v105, *(char **)(v17 + 40), *(void *)(v17 + 48), (uint64_t)(*(void *)(v17 + 48) - *(void *)(v17 + 40)) >> 2);
  }
  sub_1006FF4B0((uint64_t **)(a1 + 392), (uint64_t *)v17);
  if (v106 == v105)
  {
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022C51B0);
    }
    uint64_t v90 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)long long buf = 68289539;
      *(_DWORD *)int v112 = 0;
      *(_WORD *)&v112[4] = 2082;
      *(void *)&v112[6] = "";
      *(_WORD *)&v112[14] = 2082;
      *(void *)&v112[16] = "assert";
      *(_WORD *)&v112[24] = 2081;
      uint64_t v113 = "fenceKeys.size() > 0";
      _os_log_impl((void *)&_mh_execute_header, v90, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"At least one fence key required\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x26u);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022C51B0);
      }
    }
    __int16 v91 = qword_1024193C8;
    if (os_signpost_enabled((os_log_t)qword_1024193C8))
    {
      *(_DWORD *)long long buf = 68289539;
      *(_DWORD *)int v112 = 0;
      *(_WORD *)&v112[4] = 2082;
      *(void *)&v112[6] = "";
      *(_WORD *)&v112[14] = 2082;
      *(void *)&v112[16] = "assert";
      *(_WORD *)&v112[24] = 2081;
      uint64_t v113 = "fenceKeys.size() > 0";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v91, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "At least one fence key required", "{\"msg%{public}.0s\":\"At least one fence key required\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x26u);
      if (qword_1024193C0 != -1) {
        dispatch_once(&qword_1024193C0, &stru_1022C51B0);
      }
    }
    uint64_t v92 = qword_1024193C8;
    if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 68289539;
      *(_DWORD *)int v112 = 0;
      *(_WORD *)&v112[4] = 2082;
      *(void *)&v112[6] = "";
      *(_WORD *)&v112[14] = 2082;
      *(void *)&v112[16] = "assert";
      *(_WORD *)&v112[24] = 2081;
      uint64_t v113 = "fenceKeys.size() > 0";
      _os_log_impl((void *)&_mh_execute_header, v92, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"At least one fence key required\", \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x26u);
    }
    goto LABEL_121;
  }
  if (qword_1024193C0 != -1) {
    dispatch_once(&qword_1024193C0, &stru_1022C51B0);
  }
  int v82 = qword_1024193C8;
  if (os_log_type_enabled((os_log_t)qword_1024193C8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v83 = *(void *)(a1 + 408);
    *(_DWORD *)long long buf = 134283777;
    *(void *)int v112 = v83;
    *(_WORD *)&v112[8] = 2049;
    *(void *)&v112[10] = (v106 - (unsigned char *)v105) >> 2;
    _os_log_impl((void *)&_mh_execute_header, v82, OS_LOG_TYPE_DEBUG, "AlsWifi, seriesComplete, tags remain, %{private}zu, keys, %{private}zu", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193C0 != -1) {
      dispatch_once(&qword_1024193C0, &stru_1022C51B0);
    }
    std::string::size_type v84 = *(void *)(a1 + 408);
    LODWORD(v108.__r_.__value_.__l.__data_) = 134283777;
    *(std::string::size_type *)((char *)v108.__r_.__value_.__r.__words + 4) = v84;
    WORD2(v108.__r_.__value_.__r.__words[1]) = 2049;
    *(std::string::size_type *)((char *)&v108.__r_.__value_.__r.__words[1] + 6) = (v106 - (unsigned char *)v105) >> 2;
    int v85 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterWifiLocationSeriesComplete(CLNetworkLocationRequester *, const std::vector<CLAlsWifiAccessPoint> &, const std::vector<CLAlsWifiAccessPoint> &, CLNetworkLocationRequester::RequestType, int, CLNetworkLocationRequest_Type::CLAlsWifiBand)", "%s\n", v85);
    if (v85 != (char *)buf) {
      free(v85);
    }
  }
LABEL_18:
  if (v15)
  {
    uint64_t v21 = *(void **)(a1 + 584);
    if (v21 != (void *)(a1 + 592))
    {
      do
      {
        uint64_t v22 = v21[4];
        __int16 v103 = 0;
        uint64_t v104 = 0;
        long long __p = 0;
        sub_1000E39FC(&__p, *(const void **)a3, *(void *)(a3 + 8), 0xD37A6F4DE9BD37A7 * ((uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3));
        (*(void (**)(uint64_t, void **, BOOL))(*(void *)v22 + 24))(v22, &__p, a5 == 1);
        if (__p)
        {
          __int16 v103 = __p;
          operator delete(__p);
        }
        int v23 = (void *)v21[1];
        if (v23)
        {
          do
          {
            int v24 = v23;
            int v23 = (void *)*v23;
          }
          while (v23);
        }
        else
        {
          do
          {
            int v24 = (void *)v21[2];
            BOOL v25 = *v24 == (void)v21;
            uint64_t v21 = v24;
          }
          while (!v25);
        }
        uint64_t v21 = v24;
      }
      while (v24 != (void *)(a1 + 592));
    }
  }
  int v94 = v15;
  uint64_t v97 = a1;
  __int16 v99 = 0;
  int v100 = 0;
  __int16 v101 = 0;
  uint64_t v27 = *(_DWORD **)a3;
  uint64_t v26 = *(_DWORD **)(a3 + 8);
  if (*(_DWORD **)a3 == v26)
  {
    int v28 = 0;
  }
  else
  {
    int v28 = 0;
    BOOL v96 = a5 == 1;
    uint64_t v29 = a1 + 416;
    uint64_t v30 = (void *)(a1 + 424);
    do
    {
      if (v30 == sub_100529674(v29, (void *)v27 + 22))
      {
        if ((v27[40] - 1) >= 0xE)
        {
          if (qword_1024193B0 != -1) {
            dispatch_once(&qword_1024193B0, &stru_1022C51D0);
          }
          uint64_t v31 = qword_1024193B8;
          if (os_log_type_enabled((os_log_t)qword_1024193B8, OS_LOG_TYPE_DEBUG))
          {
            sub_10006DE8C(&v108);
            int v32 = &v108;
            if ((v108.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              int v32 = (std::string *)v108.__r_.__value_.__r.__words[0];
            }
            int v33 = v27[40];
            int v34 = *(unsigned __int8 *)(v97 + 120);
            *(_DWORD *)long long buf = 136315906;
            *(void *)int v112 = v32;
            *(_WORD *)&v112[8] = 1024;
            *(_DWORD *)&v112[10] = v33;
            *(_WORD *)&v112[14] = 1024;
            *(_DWORD *)&v112[16] = v96;
            *(_WORD *)&v112[20] = 1024;
            *(_DWORD *)&v112[22] = v34;
            _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEBUG, "Extra 5GHz #als response, mac, %s, channel, %d, isNearbyQuery, %d, fDataProtectionEnabled, %d", buf, 0x1Eu);
            if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v108.__r_.__value_.__l.__data_);
            }
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_1024193B0 != -1) {
              dispatch_once(&qword_1024193B0, &stru_1022C51D0);
            }
            sub_10006DE8C(&v98);
            uint64_t v72 = &v98;
            if ((v98.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              uint64_t v72 = (std::string *)v98.__r_.__value_.__r.__words[0];
            }
            int v73 = v27[40];
            int v74 = *(unsigned __int8 *)(v97 + 120);
            LODWORD(v108.__r_.__value_.__l.__data_) = 136315906;
            *(std::string::size_type *)((char *)v108.__r_.__value_.__r.__words + 4) = (std::string::size_type)v72;
            WORD2(v108.__r_.__value_.__r.__words[1]) = 1024;
            *(_DWORD *)((char *)&v108.__r_.__value_.__r.__words[1] + 6) = v73;
            WORD1(v108.__r_.__value_.__r.__words[2]) = 1024;
            HIDWORD(v108.__r_.__value_.__r.__words[2]) = v96;
            __int16 v109 = 1024;
            int v110 = v74;
            uint64_t v75 = (char *)_os_log_send_and_compose_impl();
            if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v98.__r_.__value_.__l.__data_);
            }
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterWifiLocationSeriesComplete(CLNetworkLocationRequester *, const std::vector<CLAlsWifiAccessPoint> &, const std::vector<CLAlsWifiAccessPoint> &, CLNetworkLocationRequester::RequestType, int, CLNetworkLocationRequest_Type::CLAlsWifiBand)", "%s\n", v75);
            if (v75 != (char *)buf) {
              free(v75);
            }
          }
        }
      }
      else
      {
        ++v28;
      }
      uint64_t v35 = v100;
      if (v100 >= v101)
      {
        __int16 v46 = (char *)v99;
        unint64_t v47 = 0xD37A6F4DE9BD37A7 * ((v100 - (unsigned char *)v99) >> 3);
        unint64_t v48 = v47 + 1;
        if (v47 + 1 > 0x1642C8590B21642) {
          sub_1001D7FD4();
        }
        if (0xA6F4DE9BD37A6F4ELL * ((v101 - (unsigned char *)v99) >> 3) > v48) {
          unint64_t v48 = 0xA6F4DE9BD37A6F4ELL * ((v101 - (unsigned char *)v99) >> 3);
        }
        if (0xD37A6F4DE9BD37A7 * ((v101 - (unsigned char *)v99) >> 3) >= 0xB21642C8590B21) {
          unint64_t v49 = 0x1642C8590B21642;
        }
        else {
          unint64_t v49 = v48;
        }
        if (v49)
        {
          unint64_t v50 = (char *)sub_10050F820((uint64_t)&v101, v49);
          __int16 v46 = (char *)v99;
          uint64_t v35 = v100;
        }
        else
        {
          unint64_t v50 = 0;
        }
        __int16 v51 = &v50[184 * v47];
        long long v52 = *(_OWORD *)v27;
        long long v53 = *((_OWORD *)v27 + 1);
        long long v54 = *((_OWORD *)v27 + 3);
        *((_OWORD *)v51 + 2) = *((_OWORD *)v27 + 2);
        *((_OWORD *)v51 + 3) = v54;
        *(_OWORD *)__int16 v51 = v52;
        *((_OWORD *)v51 + 1) = v53;
        long long v55 = *((_OWORD *)v27 + 4);
        long long v56 = *((_OWORD *)v27 + 5);
        long long v57 = *((_OWORD *)v27 + 7);
        *((_OWORD *)v51 + 6) = *((_OWORD *)v27 + 6);
        *((_OWORD *)v51 + 7) = v57;
        *((_OWORD *)v51 + 4) = v55;
        *((_OWORD *)v51 + 5) = v56;
        long long v58 = *((_OWORD *)v27 + 8);
        long long v59 = *((_OWORD *)v27 + 9);
        long long v60 = *((_OWORD *)v27 + 10);
        *((void *)v51 + 22) = *((void *)v27 + 22);
        *((_OWORD *)v51 + 9) = v59;
        *((_OWORD *)v51 + 10) = v60;
        *((_OWORD *)v51 + 8) = v58;
        if (v35 == v46)
        {
          uint64_t v71 = &v50[184 * v47];
        }
        else
        {
          int v61 = &v50[184 * v47];
          do
          {
            long long v62 = *(_OWORD *)(v35 - 184);
            long long v63 = *(_OWORD *)(v35 - 168);
            long long v64 = *(_OWORD *)(v35 - 152);
            *(_OWORD *)(v61 - 136) = *(_OWORD *)(v35 - 136);
            *(_OWORD *)(v61 - 152) = v64;
            *(_OWORD *)(v61 - 168) = v63;
            *(_OWORD *)(v61 - 184) = v62;
            long long v65 = *(_OWORD *)(v35 - 120);
            long long v66 = *(_OWORD *)(v35 - 104);
            long long v67 = *(_OWORD *)(v35 - 88);
            *(_OWORD *)(v61 - 72) = *(_OWORD *)(v35 - 72);
            *(_OWORD *)(v61 - 88) = v67;
            *(_OWORD *)(v61 - 104) = v66;
            *(_OWORD *)(v61 - 120) = v65;
            long long v68 = *(_OWORD *)(v35 - 56);
            long long v69 = *(_OWORD *)(v35 - 40);
            long long v70 = *(_OWORD *)(v35 - 24);
            uint64_t v71 = v61 - 184;
            *((void *)v61 - 1) = *((void *)v35 - 1);
            *(_OWORD *)(v61 - 24) = v70;
            *(_OWORD *)(v61 - 40) = v69;
            *(_OWORD *)(v61 - 56) = v68;
            v35 -= 184;
            v61 -= 184;
          }
          while (v35 != v46);
        }
        __int16 v45 = v51 + 184;
        __int16 v99 = v71;
        int v100 = v51 + 184;
        __int16 v101 = &v50[184 * v49];
        if (v46) {
          operator delete(v46);
        }
      }
      else
      {
        long long v36 = *(_OWORD *)v27;
        long long v37 = *((_OWORD *)v27 + 1);
        long long v38 = *((_OWORD *)v27 + 3);
        *((_OWORD *)v100 + 2) = *((_OWORD *)v27 + 2);
        *((_OWORD *)v35 + 3) = v38;
        *(_OWORD *)uint64_t v35 = v36;
        *((_OWORD *)v35 + 1) = v37;
        long long v39 = *((_OWORD *)v27 + 4);
        long long v40 = *((_OWORD *)v27 + 5);
        long long v41 = *((_OWORD *)v27 + 7);
        *((_OWORD *)v35 + 6) = *((_OWORD *)v27 + 6);
        *((_OWORD *)v35 + 7) = v41;
        *((_OWORD *)v35 + 4) = v39;
        *((_OWORD *)v35 + 5) = v40;
        long long v42 = *((_OWORD *)v27 + 8);
        long long v43 = *((_OWORD *)v27 + 9);
        long long v44 = *((_OWORD *)v27 + 10);
        *((void *)v35 + 22) = *((void *)v27 + 22);
        *((_OWORD *)v35 + 9) = v43;
        *((_OWORD *)v35 + 10) = v44;
        *((_OWORD *)v35 + 8) = v42;
        __int16 v45 = v35 + 184;
      }
      int v100 = v45;
      v27 += 46;
    }
    while (v27 != v26);
  }
  sub_1006F64E8((uint64_t)&v99);
  sub_1006FF4F4(*v95, v95[1], &v99);
  if (v94 == 1)
  {
    if (v28) {
      sub_101454AB8(*(void *)(v97 + 672), v28);
    }
    uint64_t v76 = *(void *)(v97 + 672);
    double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
    int v78 = sub_10145141C(v76, (uint64_t *)&v99, (int **)&v105, a7, Current_5);
    if (v78)
    {
      if (0xD37A6F4DE9BD37A7 * ((v100 - (unsigned char *)v99) >> 3) == v78)
      {
        *(_DWORD *)(v97 + 388) -= 373475417 * ((*(void *)(a3 + 8) - *(void *)a3) >> 3);
        goto LABEL_81;
      }
      sub_101A6BBA4();
      abort_report_np();
LABEL_123:
      __break(1u);
    }
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v79 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v79, OS_LOG_TYPE_DEFAULT, "#Warning Location Services disabled, not storing location entries", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      LOWORD(v108.__r_.__value_.__l.__data_) = 0;
      __int16 v89 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterWifiLocationSeriesComplete(CLNetworkLocationRequester *, const std::vector<CLAlsWifiAccessPoint> &, const std::vector<CLAlsWifiAccessPoint> &, CLNetworkLocationRequester::RequestType, int, CLNetworkLocationRequest_Type::CLAlsWifiBand)", "%s\n", v89);
      if (v89 != (char *)buf) {
        free(v89);
      }
    }
  }
LABEL_81:
  __int16 v80 = (char *)v99;
  int v81 = v100;
  if (v99 != v100)
  {
    do
    {
      sub_1006FF744((uint64_t **)(v97 + 416), (void *)v80 + 22);
      v80 += 184;
    }
    while (v80 != v81);
    __int16 v80 = (char *)v99;
  }
  if (v80)
  {
    int v100 = v80;
    operator delete(v80);
  }
  if (v105)
  {
    int v106 = v105;
    operator delete(v105);
  }
}

void sub_1006F6468(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006F64E8(uint64_t a1)
{
  unint64_t v2 = *(char **)a1;
  int64x2_t v3 = *(int64x2_t *)(a1 + 8);
  int64x2_t v4 = vshrq_n_s64(vsubq_s64(v3, vdupq_n_s64((unint64_t)v2)), 3uLL);
  unint64_t v5 = 0xD37A6F4DE9BD37A7 * v4.i64[0];
  unint64_t v6 = v5;
  if (0xD37A6F4DE9BD37A7 * v4.i64[1] <= v5) {
    return;
  }
  if ((char *)v3.i64[0] == v2)
  {
    int v11 = 0;
    uint64_t v9 = 184 * v5;
    goto LABEL_8;
  }
  int v7 = (char *)sub_10050F820(a1 + 16, v5);
  unint64_t v2 = *(char **)a1;
  int v8 = *(char **)(a1 + 8);
  uint64_t v9 = (uint64_t)&v7[184 * v6];
  int v11 = &v7[184 * v10];
  if (v8 == *(char **)a1)
  {
LABEL_8:
    uint64_t v12 = v9;
    goto LABEL_9;
  }
  uint64_t v12 = v9;
  do
  {
    long long v13 = *(_OWORD *)(v8 - 184);
    long long v14 = *(_OWORD *)(v8 - 168);
    long long v15 = *(_OWORD *)(v8 - 152);
    *(_OWORD *)(v12 - 136) = *(_OWORD *)(v8 - 136);
    *(_OWORD *)(v12 - 152) = v15;
    *(_OWORD *)(v12 - 168) = v14;
    *(_OWORD *)(v12 - 184) = v13;
    long long v16 = *(_OWORD *)(v8 - 120);
    long long v17 = *(_OWORD *)(v8 - 104);
    long long v18 = *(_OWORD *)(v8 - 88);
    *(_OWORD *)(v12 - 72) = *(_OWORD *)(v8 - 72);
    *(_OWORD *)(v12 - 88) = v18;
    *(_OWORD *)(v12 - 104) = v17;
    *(_OWORD *)(v12 - 120) = v16;
    long long v19 = *(_OWORD *)(v8 - 56);
    long long v20 = *(_OWORD *)(v8 - 40);
    long long v21 = *(_OWORD *)(v8 - 24);
    *(void *)(v12 - 8) = *((void *)v8 - 1);
    *(_OWORD *)(v12 - 24) = v21;
    *(_OWORD *)(v12 - 40) = v20;
    *(_OWORD *)(v12 - 56) = v19;
    v12 -= 184;
    v8 -= 184;
  }
  while (v8 != v2);
  unint64_t v2 = *(char **)a1;
LABEL_9:
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v11;
  if (v2)
  {
    operator delete(v2);
  }
}

uint64_t sub_1006F6648(uint64_t a1, uint64_t a2, double *a3, const __CFDictionary *a4)
{
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  int v7 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *(_DWORD *)(a1 + 576);
    *(_DWORD *)long long buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "NETWORK: stats: onLocationRequesterResponse, %d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterResponse(CLNetworkLocationRequester *, const CFTimeInterval &, CFDictionaryRef, CLNetworkLocationRequester::RequestType, int)", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
  ++*(_DWORD *)(a1 + 576);
  *(void *)long long buf = 0;
  uint64_t result = sub_1004BD564(a4, a3, (double *)buf);
  if (result) {
    return TMSetSourceTime();
  }
  return result;
}

void sub_1006F6848(uint64_t a1, uint64_t a2, int a3, int a4)
{
  v23[3] = a3;
  int v24 = a4;
  v23[0] = a4;
  int v5 = (*(uint64_t (**)(void))(**(void **)(a1 + 112) + 16))(*(void *)(a1 + 112));
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  unint64_t v6 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = *(_DWORD *)(a1 + 352);
    *(_DWORD *)long long buf = 67240448;
    int v30 = v5;
    __int16 v31 = 1026;
    int v32 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#Notice NETWORK: no response from server, reachability, %{public}d, queryRetries, %{public}d", buf, 0xEu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v16 = *(_DWORD *)(a1 + 352);
    int v25 = 67240448;
    int v26 = v5;
    __int16 v27 = 1026;
    int v28 = v16;
    long long v17 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterLocationError(CLNetworkLocationRequester *, CLNetworkLocationRequester::RequestType, int)", "%s\n", v17);
    if (v17 != (char *)buf) {
      free(v17);
    }
  }
  if (sub_1000FC450())
  {
    sub_1000E9354(buf);
    sub_1000EA838((uint64_t)buf, "queryFailed", &v24);
    int v25 = *(void *)(a1 + 184);
    sub_1000EA838((uint64_t)buf, "p1", &v25);
    int v25 = *(void *)(a1 + 264);
    sub_1000EA838((uint64_t)buf, "p2", &v25);
    int v25 = *(void *)(a1 + 304);
    sub_1000EA838((uint64_t)buf, "p3", &v25);
    int v25 = *(void *)(a1 + 432);
    sub_1000EA838((uint64_t)buf, "p4", &v25);
    int v25 = *(void *)(a1 + 344);
    sub_1000EA838((uint64_t)buf, "p5", &v25);
    sub_1000FC45C((uint64_t)buf, (uint64_t)"locationd");
    sub_10013F3C4(buf);
  }
  if (v24 == *(_DWORD *)(a1 + 520)) {
    *(_DWORD *)(a1 + 520) = -1;
  }
  sub_100EBC6AC(a1 + 464);
  double Current = CFAbsoluteTimeGetCurrent();
  if (*(int *)(a1 + 352) > 4)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    long long v13 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      int v14 = *(_DWORD *)(a1 + 352);
      *(_DWORD *)long long buf = 67109376;
      int v30 = v14;
      __int16 v31 = 1024;
      int v32 = 5;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "NETWORK: retry count %d exceeded %d - not retrying", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      int v18 = *(_DWORD *)(a1 + 352);
      int v25 = 67109376;
      int v26 = v18;
      __int16 v27 = 1024;
      int v28 = 5;
      long long v19 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterLocationError(CLNetworkLocationRequester *, CLNetworkLocationRequester::RequestType, int)", "%s\n", v19);
      if (v19 != (char *)buf) {
        free(v19);
      }
    }
    sub_1006F706C(a1);
    sub_1006F744C(a1, (uint64_t)"max.retries");
    *(_DWORD *)long long buf = 3;
    (*(void (**)(uint64_t, uint8_t *, _DWORD *, void, uint64_t, void))(*(void *)a1 + 152))(a1, buf, v23, 0, 0xFFFFFFFFLL, 0);
  }
  else if (v5)
  {
    double v9 = Current;
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v10 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      int v11 = *(_DWORD *)(a1 + 352);
      *(_DWORD *)long long buf = 67109376;
      int v30 = v11;
      __int16 v31 = 1024;
      int v32 = 5;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "NETWORK: retry query, %d, %d", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      int v20 = *(_DWORD *)(a1 + 352);
      int v25 = 67109376;
      int v26 = v20;
      __int16 v27 = 1024;
      int v28 = 5;
      long long v21 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterLocationError(CLNetworkLocationRequester *, CLNetworkLocationRequester::RequestType, int)", "%s\n", v21);
      if (v21 != (char *)buf) {
        free(v21);
      }
    }
    int v12 = *(_DWORD *)(a1 + 352);
    if (!v12) {
      *(double *)(a1 + 360) = v9;
    }
    *(_DWORD *)(a1 + 352) = v12 + 1;
    sub_1006E2918(a1, (uint64_t)"retry.query");
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    long long v15 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "NETWORK: data reachability is not available - not retrying", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      LOWORD(v25) = 0;
      uint64_t v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterLocationError(CLNetworkLocationRequester *, CLNetworkLocationRequester::RequestType, int)", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
    }
    sub_1006F706C(a1);
    *(_DWORD *)(a1 + 352) = 5;
    sub_1006F744C(a1, (uint64_t)"no.data.reachability");
    *(_DWORD *)long long buf = 3;
    (*(void (**)(uint64_t, uint8_t *, _DWORD *, void, uint64_t, void))(*(void *)a1 + 152))(a1, buf, v23, 0, 0xFFFFFFFFLL, 0);
  }
  *(void *)(a1 + 384) = 0;
}

void sub_1006F703C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_10013F3C4(va);
  _Unwind_Resume(a1);
}

void sub_1006F706C(uint64_t a1)
{
  if (*(void *)(a1 + 184) > 0x3BuLL
    || *(void *)(a1 + 224) > 0x3BuLL
    || *(void *)(a1 + 264) > 0x3BuLL
    || *(void *)(a1 + 304) > 0x3BuLL
    || *(void *)(a1 + 432) > 0x3BuLL
    || *(void *)(a1 + 344) >= 0x3CuLL)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    unint64_t v2 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = *(void *)(a1 + 184);
      uint64_t v4 = *(void *)(a1 + 224);
      uint64_t v5 = *(void *)(a1 + 264);
      uint64_t v6 = *(void *)(a1 + 304);
      uint64_t v7 = *(void *)(a1 + 432);
      uint64_t v8 = *(void *)(a1 + 344);
      *(_DWORD *)long long buf = 134219520;
      uint64_t v17 = v3;
      __int16 v18 = 2048;
      uint64_t v19 = v4;
      __int16 v20 = 2048;
      uint64_t v21 = v5;
      __int16 v22 = 2048;
      uint64_t v23 = v6;
      __int16 v24 = 2048;
      uint64_t v25 = v7;
      __int16 v26 = 2048;
      uint64_t v27 = v8;
      __int16 v28 = 1024;
      int v29 = 60;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "trimming pending gsm, %lu, scdma, %lu, cdma, %lu, lte, %lu, wifis, %lu, nr, %lu, to, %d", buf, 0x44u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      long long v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::trimPendingQueries()", "%s\n", v15);
      if (v15 != (char *)buf) {
        free(v15);
      }
    }
    if (*(void *)(a1 + 184) >= 0x3DuLL)
    {
      do
      {
        double v9 = *(uint64_t **)(a1 + 168);
        sub_1000F0A30((uint64_t **)(a1 + 168), v9);
        operator delete(v9);
      }
      while (*(void *)(a1 + 184) > 0x3CuLL);
    }
    if (*(void *)(a1 + 224) >= 0x3DuLL)
    {
      do
      {
        uint64_t v10 = *(uint64_t **)(a1 + 208);
        sub_1000F0A30((uint64_t **)(a1 + 208), v10);
        operator delete(v10);
      }
      while (*(void *)(a1 + 224) > 0x3CuLL);
    }
    if (*(void *)(a1 + 264) >= 0x3DuLL)
    {
      do
      {
        int v11 = *(uint64_t **)(a1 + 248);
        sub_1000F0A30((uint64_t **)(a1 + 248), v11);
        sub_1006FE150((uint64_t)(v11 + 4));
        operator delete(v11);
      }
      while (*(void *)(a1 + 264) > 0x3CuLL);
    }
    if (*(void *)(a1 + 304) >= 0x3DuLL)
    {
      do
      {
        int v12 = *(uint64_t **)(a1 + 288);
        sub_1000F0A30((uint64_t **)(a1 + 288), v12);
        operator delete(v12);
      }
      while (*(void *)(a1 + 304) > 0x3CuLL);
    }
    if (*(void *)(a1 + 432) >= 0x3DuLL)
    {
      do
      {
        long long v13 = *(uint64_t **)(a1 + 416);
        sub_1000F0A30((uint64_t **)(a1 + 416), v13);
        operator delete(v13);
      }
      while (*(void *)(a1 + 432) > 0x3CuLL);
    }
    if (*(void *)(a1 + 344) >= 0x3DuLL)
    {
      do
      {
        int v14 = *(uint64_t **)(a1 + 328);
        sub_1000F0A30((uint64_t **)(a1 + 328), v14);
        operator delete(v14);
      }
      while (*(void *)(a1 + 344) > 0x3CuLL);
    }
  }
}

void sub_1006F744C(uint64_t a1, uint64_t a2)
{
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  uint64_t v4 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 512);
    int v6 = *(_DWORD *)(a1 + 352);
    uint64_t v7 = *(void *)(a1 + 432);
    uint64_t v8 = *(void *)(a1 + 184);
    uint64_t v9 = *(void *)(a1 + 224);
    uint64_t v10 = *(void *)(a1 + 264);
    uint64_t v11 = *(void *)(a1 + 304);
    uint64_t v12 = *(void *)(a1 + 344);
    *(_DWORD *)long long buf = 136317186;
    uint64_t v18 = a2;
    __int16 v19 = 2048;
    uint64_t v20 = v5;
    __int16 v21 = 1024;
    int v22 = v6;
    __int16 v23 = 2048;
    uint64_t v24 = v7;
    __int16 v25 = 2048;
    uint64_t v26 = v8;
    __int16 v27 = 2048;
    uint64_t v28 = v9;
    __int16 v29 = 2048;
    uint64_t v30 = v10;
    __int16 v31 = 2048;
    uint64_t v32 = v11;
    __int16 v33 = 2048;
    uint64_t v34 = v12;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "NETWORK: cancelRetryTimer, %s, %p, fQueryRetries, %d, pending, %lu, %lu, %lu, %lu, %lu, %lu", buf, 0x58u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    long long v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::cancelRetryTimer(const char *)", "%s\n", v15);
    if (v15 != (char *)buf) {
      free(v15);
    }
  }
  long long v13 = *(void **)(a1 + 512);
  if (v13)
  {
    [v13 invalidate];

    *(void *)(a1 + 512) = 0;
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v14 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "NETWORK: cancelRetryTimer, no retry timer", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      int v16 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::cancelRetryTimer(const char *)", "%s\n", v16);
      if (v16 != (char *)buf) {
        free(v16);
      }
    }
  }
}

BOOL sub_1006F7814(void *a1, uint64_t a2, int a3, int a4)
{
  int v11 = a4;
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  uint64_t v7 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "NETWORK: query failed for nearbys - not retrying", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    LOWORD(v10[0]) = 0;
    uint64_t v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterNearbyError(CLNetworkLocationRequester *, CLNetworkLocationRequester::RequestType, int)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  a1[48] = 0;
  *(_DWORD *)long long buf = a4;
  int v13 = a3;
  sub_100700668((uint64_t)(a1 + 49), &v11);
  v10[0] = 3;
  (*(void (**)(void *, int *, uint8_t *, void, uint64_t, void))(*a1 + 152))(a1, v10, buf, 0, 0xFFFFFFFFLL, 0);
  return sub_100EBC6AC((uint64_t)(a1 + 58));
}

void sub_1006F7A20(_DWORD *a1, uint64_t a2, int a3, int a4)
{
  int v6 = a1[97];
  v10[0] = a4;
  v10[1] = v6;
  int v7 = a1[96];
  _DWORD v10[2] = v7;
  int v10[3] = a3;
  if (a1[130] == a4) {
    a1[130] = -1;
  }
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  uint64_t v8 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 67109632;
    int v16 = a4;
    __int16 v17 = 1024;
    int v18 = v7;
    __int16 v19 = 1024;
    int v20 = v6;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "NETWORK: query: finished, tag, %d, cells, %d, wifis, %d", buf, 0x14u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    void v10[4] = 67109632;
    v10[5] = a4;
    __int16 v11 = 1024;
    int v12 = v7;
    __int16 v13 = 1024;
    int v14 = v6;
    uint64_t v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onLocationRequesterFinished(CLNetworkLocationRequester *, CLNetworkLocationRequester::RequestType, int)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  a1[88] = 0;
  if ((int)a1[96] >= 1)
  {
    *(_DWORD *)long long buf = 0;
    (*(void (**)(_DWORD *, uint8_t *, _DWORD *, void, uint64_t, void))(*(void *)a1 + 152))(a1, buf, v10, 0, 0xFFFFFFFFLL, 0);
    a1[96] = 0;
  }
  if ((int)a1[97] > 0)
  {
    *(_DWORD *)long long buf = 1;
    (*(void (**)(_DWORD *, uint8_t *, _DWORD *, void, uint64_t, void))(*(void *)a1 + 152))(a1, buf, v10, 0, 0xFFFFFFFFLL, 0);
    a1[97] = 0;
  }
  *(_DWORD *)long long buf = 2;
  (*(void (**)(_DWORD *, uint8_t *, _DWORD *, void, uint64_t, void))(*(void *)a1 + 152))(a1, buf, v10, 0, 0xFFFFFFFFLL, 0);
  sub_100EBC6AC((uint64_t)(a1 + 116));
  sub_10000EE38((uint64_t)a1, (uint64_t)"onLocationRequesterFinished");
}

void sub_1006F7D34(uint64_t a1, uint64_t a2, _DWORD *a3, int *a4)
{
  if (*a3 == 16)
  {
    (*(void (**)(void))(**(void **)(a1 + 448) + 48))(*(void *)(a1 + 448));
    (*(void (**)(void))(**(void **)(a1 + 448) + 56))(*(void *)(a1 + 448));
    uint64_t v13 = *(void *)(a1 + 672);
    sub_101452F24(v13);
  }
  else if (*a3 == 6)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v6 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      int v7 = *a4;
      int v8 = a4[1];
      *(_DWORD *)long long buf = 67109376;
      int v17 = v7;
      __int16 v18 = 1024;
      int v19 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "NETWORK: onStatusNotification, kNotificationReachability, from, %d, to, %d", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      int v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
    *(_DWORD *)(a1 + 608) = a4[1];
    if (a4[1] && !*a4) {
      sub_1006E26FC(a1);
    }
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    uint64_t v9 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
    {
      int v10 = *(_DWORD *)(a1 + 608);
      int v11 = *a4;
      int v12 = *(_DWORD *)(a1 + 352);
      *(_DWORD *)long long buf = 67240704;
      int v17 = v10;
      __int16 v18 = 1026;
      int v19 = v11;
      __int16 v20 = 1026;
      int v21 = v12;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "@ClxLink, reach, %{public}d, last, %{public}d, retries, %{public}d", buf, 0x14u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022C5150);
      }
      long long v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onStatusNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v15);
      if (v15 != (char *)buf) {
        free(v15);
      }
    }
  }
}

id *sub_1006F8154(id *result, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v4 = (uint64_t)result;
  if (*a3 == 4)
  {
    if (*(_DWORD *)(a4 + 188) != 1)
    {
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      int v6 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "#Warning Location Services disabled, clearing all local cache", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        int v8 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onManagerNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v8);
        if (v8 != (char *)buf) {
          free(v8);
        }
      }
      return sub_1006F8470(v4);
    }
  }
  else if (!*a3)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v5 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Location Services reset, clearing all local cache", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      int v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onManagerNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
    sub_1006F8470(v4);
    return (id *)(*(uint64_t (**)(void))(**(void **)(v4 + 112) + 40))(*(void *)(v4 + 112));
  }
  return result;
}

id *sub_1006F8470(uint64_t a1)
{
  sub_1000E1294((uint64_t *)v18, (uint64_t)"clearAlsDatabaseEntries", 0);
  sub_100103240();
  int v2 = sub_1001073D0();
  if ((v2 & 0x400) != 0)
  {
    uint64_t v3 = sub_1006DE9BC(a1);
    sub_1006509BC(*(void *)(v3 + 32));
    uint64_t v4 = sub_1006DEA44(a1);
    sub_1006509BC(*(void *)(v4 + 32));
  }
  if ((v2 & 0x800000) != 0)
  {
    uint64_t v5 = sub_1006DE8AC(a1);
    sub_1006509BC(*(void *)(v5 + 32));
    uint64_t v6 = sub_1006DE934(a1);
    sub_1006509BC(*(void *)(v6 + 32));
  }
  if ((v2 & 0x800) != 0)
  {
    uint64_t v7 = sub_1006DEACC(a1);
    sub_1006509BC(*(void *)(v7 + 32));
    uint64_t v8 = sub_1006DEB54(a1);
    sub_1006509BC(*(void *)(v8 + 32));
  }
  if ((v2 & 0x40000) != 0)
  {
    uint64_t v9 = sub_1000AB2B4(a1);
    sub_1006509BC(*(void *)(v9 + 32));
    uint64_t v10 = sub_1000AB228(a1);
    sub_1006509BC(*(void *)(v10 + 32));
  }
  if ((v2 & 0x4000000) != 0)
  {
    uint64_t v11 = sub_1006DEBDC(a1);
    sub_1006509BC(*(void *)(v11 + 32));
    uint64_t v12 = sub_1006DEC68(a1);
    sub_1006509BC(*(void *)(v12 + 32));
  }
  sub_101452A04(*(void *)(a1 + 672));
  sub_101452AA8(*(void *)(a1 + 672));
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022C5150);
  }
  uint64_t v13 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Clearing associated AP centroids in WifiAssociatedApCentroidStore", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    int v17 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::clearDatabaseEntries()", "%s\n", v17);
    if (v17 != (char *)buf) {
      free(v17);
    }
  }
  sub_100D3A320();
  sub_1000F5BB0(a1 + 168, *(void **)(a1 + 176));
  *(void *)(a1 + 168) = a1 + 176;
  *(void *)(a1 + 176) = 0;
  long long v15 = *(void **)(a1 + 216);
  uint64_t v14 = a1 + 216;
  *(void *)(v14 - 32) = 0;
  sub_1000F5BB0(v14 - 8, v15);
  *(void *)(v14 - 8) = v14;
  *(void *)uint64_t v14 = 0;
  *(void *)(v14 + 8) = 0;
  sub_1006FE0F4(v14 + 32, *(void **)(v14 + 40));
  *(void *)(v14 + 40) = 0;
  *(void *)(v14 + ++*(_DWORD *)(result + 48) = 0;
  *(void *)(v14 + 32) = v14 + 40;
  sub_1000F5BB0(v14 + 72, *(void **)(v14 + 80));
  *(void *)(v14 + 80) = 0;
  *(void *)(v14 + 88) = 0;
  *(void *)(v14 + 72) = v14 + 80;
  sub_1000F5BB0(v14 + 112, *(void **)(v14 + 120));
  *(void *)(v14 + 120) = 0;
  *(void *)(v14 + 128) = 0;
  *(void *)(v14 + 112) = v14 + 120;
  sub_1000F5BB0(v14 + 200, *(void **)(v14 + 208));
  *(void *)(v14 + 208) = 0;
  *(void *)(v14 + 216) = 0;
  *(void *)(v14 + 200) = v14 + 208;
  return sub_1000E1098(v18);
}

void sub_1006F8784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000E1098((id *)va);
  _Unwind_Resume(a1);
}

void sub_1006F87A8(uint64_t a1, uint64_t a2, int *a3, unsigned __int8 *a4)
{
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  uint64_t v7 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    int v8 = *a3;
    *(_DWORD *)long long buf = 67109120;
    int v15 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "onCompanionNotification, notification, %d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, const CLCompanionNotifier_Type::NotificationData &)", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
  if (*a3 == 5)
  {
    sub_100103240();
    if (sub_10010145C())
    {
      int v9 = *a4;
      *(unsigned char *)(a1 + 440) = v9;
      if (v9) {
        sub_1006E26FC(a1);
      }
    }
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    uint64_t v10 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = *a4;
      *(_DWORD *)long long buf = 67240192;
      int v15 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "@ClxLink, Nearby, %{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022C5150);
      }
      uint64_t v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onCompanionNotification(int, const CLCompanionNotifier_Type::Notification &, const CLCompanionNotifier_Type::NotificationData &)", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
  }
}

void sub_1006F8AE8(uint64_t a1, int a2)
{
  *(unsigned char *)(a1 + 120) = a2 != 1;
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  uint64_t v3 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    if (*(unsigned char *)(a1 + 120)) {
      uint64_t v4 = "enabled";
    }
    else {
      uint64_t v4 = "disabled";
    }
    *(_DWORD *)long long buf = 136315138;
    int v8 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Data protection is now %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::handleDataProtectionStatusChanged(CLDataProtectionManager_Type::DataAvailability)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  if (!*(unsigned char *)(a1 + 120))
  {
    sub_1006F8CF8((void *)a1);
    sub_1006FAA04(a1);
    nullsub_41(*(void *)(a1 + 672), v5);
  }
}

unsigned char *sub_1006F8CF8(void *a1)
{
  sub_101452960(a1[84]);
  int v2 = (unsigned char *)a1[20];
  if (v2) {
    sub_1006FACC4(v2);
  }
  uint64_t v3 = (unsigned char *)a1[19];
  if (v3) {
    sub_1006FACC4(v3);
  }
  uint64_t v4 = (unsigned char *)a1[25];
  if (v4) {
    sub_1006FACC4(v4);
  }
  uint64_t v5 = (unsigned char *)a1[24];
  if (v5) {
    sub_1006FACC4(v5);
  }
  uint64_t v6 = (unsigned char *)a1[30];
  if (v6) {
    sub_1006FB21C(v6);
  }
  uint64_t v7 = (unsigned char *)a1[29];
  if (v7) {
    sub_1006FB21C(v7);
  }
  int v8 = (unsigned char *)a1[35];
  if (v8) {
    sub_1006FB774(v8);
  }
  int v9 = (unsigned char *)a1[34];
  if (v9) {
    sub_1006FB774(v9);
  }
  uint64_t v10 = (unsigned char *)a1[40];
  if (v10) {
    sub_1006FBCCC(v10);
  }
  uint64_t result = (unsigned char *)a1[39];
  if (result)
  {
    return sub_1006FBCCC(result);
  }
  return result;
}

void sub_1006F8DB0(uint64_t a1, uint64_t a2, _DWORD *a3, int *a4)
{
  sub_101454D28(*(void *)(a1 + 672));
  if (!*a3)
  {
    int v7 = *a4;
    sub_1006F8AE8(a1, v7);
  }
}

void sub_1006F8E18(uint64_t a1, uint64_t a2, int *a3, void **a4)
{
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022C5150);
  }
  int v7 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
  {
    CFStringRef v8 = (const __CFString *)sub_1000FA17C(a3);
    sub_1000FECE0(v8, (uint64_t)__p);
    int v9 = v44 >= 0 ? __p : *(unsigned char **)__p;
    *(_DWORD *)long long buf = 136446210;
    *(void *)&uint8_t buf[4] = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Nlp, received %{public}s", buf, 0xCu);
    if (v44 < 0) {
      operator delete(*(void **)__p);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    CFStringRef v27 = (const __CFString *)sub_1000FA17C(a3);
    sub_1000FECE0(v27, (uint64_t)buf);
    if ((SBYTE7(v39) & 0x80u) == 0) {
      uint64_t v28 = buf;
    }
    else {
      uint64_t v28 = *(uint8_t **)buf;
    }
    *(_DWORD *)uint64_t v32 = 136446210;
    *(void *)&v32[4] = v28;
    __int16 v29 = (char *)_os_log_send_and_compose_impl();
    if (SBYTE7(v39) < 0) {
      operator delete(*(void **)buf);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onTelephonyNotification(int, const CLTelephonyService_Type::Notification &, const CLTelephonyService_Type::NotificationData &)", "%s\n", v29);
    if (v29 != __p) {
      free(v29);
    }
  }
  uint64_t v10 = (const void *)sub_1000FA17C(a3);
  if (CFEqual(v10, @"kDataStatusNotification"))
  {
    int v11 = *a4;
    if (*a4)
    {
      *(_OWORD *)long long buf = 0u;
      long long v39 = 0u;
      int v40 = 1065353216;
      if (sub_10133145C(v11, (uint64_t)buf))
      {
        *(_DWORD *)uint64_t v32 = 0;
        *(void *)long long __p = v32;
        *(_DWORD *)(a1 + 612) = *((_DWORD *)sub_1007006D0((uint64_t)buf, (int *)v32, (uint64_t)&unk_101D0B290, (_DWORD **)__p)+ 6);
        if (sub_1000FFBA8())
        {
          *(_DWORD *)uint64_t v32 = 1;
          *(void *)long long __p = v32;
          *(_DWORD *)(a1 + 616) = *((_DWORD *)sub_1007006D0((uint64_t)buf, (int *)v32, (uint64_t)&unk_101D0B290, (_DWORD **)__p)+ 6);
        }
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022C5150);
        }
        uint64_t v12 = qword_1024193A8;
        if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v13 = *(int *)(a1 + 612);
          uint64_t v14 = *(int *)(a1 + 616);
          *(_DWORD *)long long __p = 134349312;
          *(void *)&__p[4] = v13;
          __int16 v42 = 2050;
          uint64_t v43 = v14;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Nlp, dataindictor, both, %{public}ld, %{public}ld", __p, 0x16u);
        }
        if (!sub_10013D1A0(115, 2)) {
          goto LABEL_51;
        }
        bzero(__p, 0x65CuLL);
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022C5150);
        }
        uint64_t v15 = *(int *)(a1 + 612);
        uint64_t v16 = *(int *)(a1 + 616);
        *(_DWORD *)uint64_t v32 = 134349312;
        *(void *)&v32[4] = v15;
        __int16 v33 = 2050;
        uint64_t v34 = v16;
        int v17 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onTelephonyNotification(int, const CLTelephonyService_Type::Notification &, const CLTelephonyService_Type::NotificationData &)", "%s\n", v17);
        if (v17 == __p) {
          goto LABEL_51;
        }
      }
      else
      {
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022C5150);
        }
        uint64_t v24 = qword_1024193A8;
        if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_ERROR))
        {
          CFStringRef v25 = (const __CFString *)sub_1000FA17C(a3);
          sub_1000FECE0(v25, (uint64_t)__p);
          uint64_t v26 = v44 >= 0 ? __p : *(unsigned char **)__p;
          *(_DWORD *)uint64_t v32 = 136446210;
          *(void *)&v32[4] = v26;
          _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "Nlp, invalid, datacopy, %{public}s", v32, 0xCu);
          if (v44 < 0) {
            operator delete(*(void **)__p);
          }
        }
        if (!sub_10013D1A0(115, 0)) {
          goto LABEL_51;
        }
        bzero(__p, 0x65CuLL);
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022C5150);
        }
        CFStringRef v30 = (const __CFString *)sub_1000FA17C(a3);
        sub_1000FECE0(v30, (uint64_t)v32);
        if (v35 >= 0) {
          __int16 v31 = v32;
        }
        else {
          __int16 v31 = *(unsigned char **)v32;
        }
        int v36 = 136446210;
        long long v37 = v31;
        int v17 = (char *)_os_log_send_and_compose_impl();
        if (v35 < 0) {
          operator delete(*(void **)v32);
        }
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLNetworkLocationProvider::onTelephonyNotification(int, const CLTelephonyService_Type::Notification &, const CLTelephonyService_Type::NotificationData &)", "%s\n", v17);
        if (v17 == __p) {
          goto LABEL_51;
        }
      }
      free(v17);
LABEL_51:
      sub_1000D7D80((uint64_t)buf);
      return;
    }
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022C5150);
    }
    __int16 v18 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_ERROR))
    {
      CFStringRef v19 = (const __CFString *)sub_1000FA17C(a3);
      sub_1000FECE0(v19, (uint64_t)__p);
      __int16 v20 = v44 >= 0 ? __p : *(unsigned char **)__p;
      *(_DWORD *)long long buf = 136446210;
      *(void *)&uint8_t buf[4] = v20;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "Nlp, invalid, data, %{public}s", buf, 0xCu);
      if (v44 < 0) {
        operator delete(*(void **)__p);
      }
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022C5150);
      }
      CFStringRef v21 = (const __CFString *)sub_1000FA17C(a3);
      sub_1000FECE0(v21, (uint64_t)buf);
      if ((SBYTE7(v39) & 0x80u) == 0) {
        int v22 = buf;
      }
      else {
        int v22 = *(uint8_t **)buf;
      }
      *(_DWORD *)uint64_t v32 = 136446210;
      *(void *)&v32[4] = v22;
      __int16 v23 = (char *)_os_log_send_and_compose_impl();
      if (SBYTE7(v39) < 0) {
        operator delete(*(void **)buf);
      }
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLNetworkLocationProvider::onTelephonyNotification(int, const CLTelephonyService_Type::Notification &, const CLTelephonyService_Type::NotificationData &)", "%s\n", v23);
      if (v23 != __p) {
        free(v23);
      }
    }
  }
}

void sub_1006F95AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1000D7D80((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1006F95E0(double a1, double a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = a4 + 1;
  uint64_t v5 = *a4;
  if (*a4 != (uint64_t *)(a4 + 1))
  {
    do
    {
      int v9 = (uint64_t *)v5[1];
      uint64_t v10 = v5;
      if (v9)
      {
        do
        {
          int v11 = v9;
          int v9 = (uint64_t *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          int v11 = (uint64_t *)v10[2];
          BOOL v12 = *v11 == (void)v10;
          uint64_t v10 = v11;
        }
        while (!v12);
      }
      double v13 = *((double *)v5 + 8);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      double v14 = vabdd_f64(a2, v13);
      uint64_t v15 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)long long buf = 134218240;
        double v18 = v14;
        __int16 v19 = 2048;
        double v20 = a1;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        uint64_t v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::cleanPendingListByAge(Container &, CFTimeInterval, CFAbsoluteTime) [Container = std::map<CLTelephonyService_Type::Cell, double>]", "%s\n", v16);
        if (v16 != (char *)buf) {
          free(v16);
        }
      }
      if (v14 >= a1)
      {
        sub_1000F0A30(a4, v5);
        operator delete(v5);
      }
      uint64_t v5 = v11;
    }
    while (v11 != (uint64_t *)v4);
  }
}

void sub_1006F9848(double a1, double a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = a4 + 1;
  uint64_t v5 = *a4;
  if (*a4 != (uint64_t *)(a4 + 1))
  {
    do
    {
      int v9 = (uint64_t *)v5[1];
      uint64_t v10 = v5;
      if (v9)
      {
        do
        {
          int v11 = v9;
          int v9 = (uint64_t *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          int v11 = (uint64_t *)v10[2];
          BOOL v12 = *v11 == (void)v10;
          uint64_t v10 = v11;
        }
        while (!v12);
      }
      double v13 = *((double *)v5 + 8);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      double v14 = vabdd_f64(a2, v13);
      uint64_t v15 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)long long buf = 134218240;
        double v18 = v14;
        __int16 v19 = 2048;
        double v20 = a1;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        uint64_t v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::cleanPendingListByAge(Container &, CFTimeInterval, CFAbsoluteTime) [Container = std::map<CLTelephonyService_Type::ScdmaCell, double>]", "%s\n", v16);
        if (v16 != (char *)buf) {
          free(v16);
        }
      }
      if (v14 >= a1)
      {
        sub_1000F0A30(a4, v5);
        operator delete(v5);
      }
      uint64_t v5 = v11;
    }
    while (v11 != (uint64_t *)v4);
  }
}

void sub_1006F9AB0(double a1, double a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = a4 + 1;
  uint64_t v5 = *a4;
  if (*a4 != (uint64_t *)(a4 + 1))
  {
    do
    {
      int v9 = (uint64_t *)v5[1];
      uint64_t v10 = v5;
      if (v9)
      {
        do
        {
          int v11 = v9;
          int v9 = (uint64_t *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          int v11 = (uint64_t *)v10[2];
          BOOL v12 = *v11 == (void)v10;
          uint64_t v10 = v11;
        }
        while (!v12);
      }
      double v13 = *((double *)v5 + 58);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      double v14 = vabdd_f64(a2, v13);
      uint64_t v15 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)long long buf = 134218240;
        double v18 = v14;
        __int16 v19 = 2048;
        double v20 = a1;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        uint64_t v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::cleanPendingListByAge(Container &, CFTimeInterval, CFAbsoluteTime) [Container = std::map<CLTelephonyService_Type::CdmaCell, double>]", "%s\n", v16);
        if (v16 != (char *)buf) {
          free(v16);
        }
      }
      if (v14 >= a1)
      {
        sub_1000F0A30(a4, v5);
        sub_1006FE150((uint64_t)(v5 + 4));
        operator delete(v5);
      }
      uint64_t v5 = v11;
    }
    while (v11 != (uint64_t *)v4);
  }
}

void sub_1006F9D24(double a1, double a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = a4 + 1;
  uint64_t v5 = *a4;
  if (*a4 != (uint64_t *)(a4 + 1))
  {
    do
    {
      int v9 = (uint64_t *)v5[1];
      uint64_t v10 = v5;
      if (v9)
      {
        do
        {
          int v11 = v9;
          int v9 = (uint64_t *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          int v11 = (uint64_t *)v10[2];
          BOOL v12 = *v11 == (void)v10;
          uint64_t v10 = v11;
        }
        while (!v12);
      }
      double v13 = *((double *)v5 + 15);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      double v14 = vabdd_f64(a2, v13);
      uint64_t v15 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)long long buf = 134218240;
        double v18 = v14;
        __int16 v19 = 2048;
        double v20 = a1;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        uint64_t v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::cleanPendingListByAge(Container &, CFTimeInterval, CFAbsoluteTime) [Container = std::map<CLTelephonyService_Type::LteCell, double>]", "%s\n", v16);
        if (v16 != (char *)buf) {
          free(v16);
        }
      }
      if (v14 >= a1)
      {
        sub_1000F0A30(a4, v5);
        operator delete(v5);
      }
      uint64_t v5 = v11;
    }
    while (v11 != (uint64_t *)v4);
  }
}

void sub_1006F9F8C(double a1, double a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = a4 + 1;
  uint64_t v5 = *a4;
  if (*a4 != (uint64_t *)(a4 + 1))
  {
    do
    {
      int v9 = (uint64_t *)v5[1];
      uint64_t v10 = v5;
      if (v9)
      {
        do
        {
          int v11 = v9;
          int v9 = (uint64_t *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          int v11 = (uint64_t *)v10[2];
          BOOL v12 = *v11 == (void)v10;
          uint64_t v10 = v11;
        }
        while (!v12);
      }
      double v13 = *((double *)v5 + 16);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      double v14 = vabdd_f64(a2, v13);
      uint64_t v15 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)long long buf = 134218240;
        double v18 = v14;
        __int16 v19 = 2048;
        double v20 = a1;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        uint64_t v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::cleanPendingListByAge(Container &, CFTimeInterval, CFAbsoluteTime) [Container = std::map<CLTelephonyService_Type::NrCell, double>]", "%s\n", v16);
        if (v16 != (char *)buf) {
          free(v16);
        }
      }
      if (v14 >= a1)
      {
        sub_1000F0A30(a4, v5);
        operator delete(v5);
      }
      uint64_t v5 = v11;
    }
    while (v11 != (uint64_t *)v4);
  }
}

void sub_1006FA1F4(double a1, double a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v4 = a4 + 1;
  uint64_t v5 = *a4;
  if (*a4 != (uint64_t *)(a4 + 1))
  {
    do
    {
      int v9 = (uint64_t *)v5[1];
      uint64_t v10 = v5;
      if (v9)
      {
        do
        {
          int v11 = v9;
          int v9 = (uint64_t *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          int v11 = (uint64_t *)v10[2];
          BOOL v12 = *v11 == (void)v10;
          uint64_t v10 = v11;
        }
        while (!v12);
      }
      double v13 = *((double *)v5 + 5);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      double v14 = vabdd_f64(a2, v13);
      uint64_t v15 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)long long buf = 134218240;
        double v18 = v14;
        __int16 v19 = 2048;
        double v20 = a1;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "NETWORK: cleaning, curEntryAge, %.1lf, ageThreshold, %.1lf", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022C5170);
        }
        uint64_t v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::cleanPendingListByAge(Container &, CFTimeInterval, CFAbsoluteTime) [Container = std::map<CLMacAddress, double>]", "%s\n", v16);
        if (v16 != (char *)buf) {
          free(v16);
        }
      }
      if (v14 >= a1)
      {
        sub_1000F0A30(a4, v5);
        operator delete(v5);
      }
      uint64_t v5 = v11;
    }
    while (v11 != (uint64_t *)v4);
  }
}

void sub_1006FA45C(uint64_t a1)
{
  if (*(void *)(a1 + 512))
  {
    sub_1006F744C(a1, (uint64_t)"onRetryTimer");
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    int v2 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = *(void *)(a1 + 512);
      int v4 = *(_DWORD *)(a1 + 352);
      uint64_t v5 = *(void *)(a1 + 432);
      uint64_t v6 = *(void *)(a1 + 184);
      uint64_t v7 = *(void *)(a1 + 224);
      uint64_t v8 = *(void *)(a1 + 264);
      uint64_t v9 = *(void *)(a1 + 304);
      uint64_t v10 = *(void *)(a1 + 344);
      *(_DWORD *)long long buf = 136317186;
      double v13 = "onRetryTimer";
      __int16 v14 = 2048;
      uint64_t v15 = v3;
      __int16 v16 = 1024;
      int v17 = v4;
      __int16 v18 = 2048;
      uint64_t v19 = v5;
      __int16 v20 = 2048;
      uint64_t v21 = v6;
      __int16 v22 = 2048;
      uint64_t v23 = v7;
      __int16 v24 = 2048;
      uint64_t v25 = v8;
      __int16 v26 = 2048;
      uint64_t v27 = v9;
      __int16 v28 = 2048;
      uint64_t v29 = v10;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "NETWORK: onRetryTimer, %s, %p, fQueryRetries, %d, pending, %lu, %lu, %lu, %lu, %lu, %lu", buf, 0x58u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C5170);
      }
      int v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNetworkLocationProvider::onRetryTimer()", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
    }
    sub_1006EF7D0(a1);
  }
}

uint64_t sub_1006FA6FC(uint64_t a1)
{
  double v2 = vabdd_f64(CFAbsoluteTimeGetCurrent(), *(double *)(a1 + 360));
  if (*(void *)(a1 + 432)
    || *(void *)(a1 + 184)
    || *(void *)(a1 + 224)
    || *(void *)(a1 + 264)
    || *(void *)(a1 + 304)
    || (uint64_t v3 = *(void *)(a1 + 344)) != 0)
  {
    LODWORD(v3) = *(_DWORD *)(a1 + 520) == -1;
  }
  if (*(int *)(a1 + 352) >= 5) {
    LODWORD(v3) = 0;
  }
  if (v2 <= 5400.0) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C5170);
  }
  uint64_t v5 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *(_DWORD *)(a1 + 352);
    uint64_t v7 = *(void *)(a1 + 432);
    uint64_t v8 = *(void *)(a1 + 184);
    uint64_t v9 = *(void *)(a1 + 224);
    uint64_t v10 = *(void *)(a1 + 264);
    uint64_t v11 = *(void *)(a1 + 304);
    uint64_t v12 = *(void *)(a1 + 344);
    int v13 = *(_DWORD *)(a1 + 520);
    *(_DWORD *)long long buf = 67111424;
    int v17 = v6;
    __int16 v18 = 2048;
    uint64_t v19 = v7;
    __int16 v20 = 2048;
    uint64_t v21 = v8;
    __int16 v22 = 2048;
    uint64_t v23 = v9;
    __int16 v24 = 2048;
    uint64_t v25 = v10;
    __int16 v26 = 2048;
    uint64_t v27 = v11;
    __int16 v28 = 2048;
    uint64_t v29 = v12;
    __int16 v30 = 1024;
    int v31 = v13;
    __int16 v32 = 2048;
    double v33 = v2;
    __int16 v34 = 1024;
    int v35 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "NETWORK: areQueryRetriesNeeded, fQueryRetries, %d, pending, %lu, %lu, %lu, %lu, %lu, %lu, currentRetry, %d, sinceRetrySequenceStart, %.2lf, needed, %d", buf, 0x5Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C5170);
    }
    uint64_t v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLNetworkLocationProvider::isRetryTimerNeeded()", "%s\n", v15);
    if (v15 != (char *)buf) {
      free(v15);
    }
  }
  return v4;
}

void sub_1006FA9FC(uint64_t a1)
{
}

void sub_1006FAA04(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 665))
  {
    double v2 = (char *)sub_1000A6958();
    sub_1000A5670(v2, (uint64_t)&v20);
    uint64_t v3 = std::string::append(&v20, "/lockCache_encryptedA.db");
    long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    int64_t v22 = v3->__r_.__value_.__r.__words[2];
    *(_OWORD *)uint64_t v21 = v4;
    v3->__r_.__value_.__l.__size_ = 0;
    v3->__r_.__value_.__r.__words[2] = 0;
    v3->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v20.__r_.__value_.__l.__data_);
    }
    int v5 = SHIBYTE(v22);
    if (v22 >= 0) {
      size_t v6 = HIBYTE(v22);
    }
    else {
      size_t v6 = (size_t)v21[1];
    }
    uint64_t v7 = &v20;
    sub_1001110E4((uint64_t)&v20, v6 + 8);
    if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v7 = (std::string *)v20.__r_.__value_.__r.__words[0];
    }
    if (v6)
    {
      if (v5 >= 0) {
        uint64_t v8 = v21;
      }
      else {
        uint64_t v8 = (void **)v21[0];
      }
      memmove(v7, v8, v6);
    }
    strcpy((char *)v7 + v6, "-journal");
    uint64_t v9 = v18;
    sub_1001110E4((uint64_t)v18, v6 + 4);
    if (v19 < 0) {
      uint64_t v9 = (void **)v18[0];
    }
    if (v6)
    {
      if (v5 >= 0) {
        uint64_t v10 = v21;
      }
      else {
        uint64_t v10 = (void **)v21[0];
      }
      memmove(v9, v10, v6);
    }
    strcpy((char *)v9 + v6, "-shm");
    uint64_t v11 = __p;
    sub_1001110E4((uint64_t)__p, v6 + 4);
    if (v17 < 0) {
      uint64_t v11 = (void **)__p[0];
    }
    if (v5 >= 0) {
      uint64_t v12 = v21;
    }
    else {
      uint64_t v12 = (void **)v21[0];
    }
    if (v6) {
      memmove(v11, v12, v6);
    }
    strcpy((char *)v11 + v6, "-wal");
    sub_1004BEB14((const char *)v12);
    if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v13 = &v20;
    }
    else {
      int v13 = (std::string *)v20.__r_.__value_.__r.__words[0];
    }
    sub_1004BEB14((const char *)v13);
    if (v19 >= 0) {
      __int16 v14 = v18;
    }
    else {
      __int16 v14 = (void **)v18[0];
    }
    sub_1004BEB14((const char *)v14);
    if (v17 >= 0) {
      uint64_t v15 = __p;
    }
    else {
      uint64_t v15 = (void **)__p[0];
    }
    sub_1004BEB14((const char *)v15);
    if (v17 < 0) {
      operator delete(__p[0]);
    }
    if (v19 < 0) {
      operator delete(v18[0]);
    }
    if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v20.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v22) < 0) {
      operator delete(v21[0]);
    }
    *(unsigned char *)(a1 + 665) = 1;
  }
}

void sub_1006FAC4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_1006FACC4(unsigned char *result)
{
  if (*result)
  {
    v1[0] = 0;
    v1[1] = v1;
    v1[2] = 0x3812000000;
    v1[3] = sub_10017795C;
    v1[4] = sub_100177318;
    v1[5] = 0;
    sub_10070098C();
  }
  return result;
}

void sub_1006FB034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,__int16 a29,uint64_t a30,uint64_t a31,uint64_t a32,uint8_t buf)
{
  _Block_object_dispose(&a18, 8);
  _Block_object_dispose(&a22, 8);
  uint64_t v34 = a28;
  a28 = 0;
  if (v34) {
    (*(void (**)(uint64_t))(*(void *)v34 + 8))(v34);
  }
  _Unwind_Resume(a1);
}

void sub_1006FB0A8()
{
}

void sub_1006FB1F8()
{
}

void sub_1006FB20C(void *a1, int a2)
{
  if (a2) {
    sub_1001C7F8C(a1);
  }
  JUMPOUT(0x1006FB0A0);
}

unsigned char *sub_1006FB21C(unsigned char *result)
{
  if (*result)
  {
    v1[0] = 0;
    v1[1] = v1;
    v1[2] = 0x3812000000;
    v1[3] = sub_100700E2C;
    v1[4] = sub_100700E3C;
    v1[5] = 0;
    sub_100700E74();
  }
  return result;
}

void sub_1006FB58C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,__int16 a29,uint64_t a30,uint64_t a31,uint64_t a32,uint8_t buf)
{
  _Block_object_dispose(&a18, 8);
  _Block_object_dispose(&a22, 8);
  uint64_t v34 = a28;
  a28 = 0;
  if (v34) {
    (*(void (**)(uint64_t))(*(void *)v34 + 8))(v34);
  }
  _Unwind_Resume(a1);
}

void sub_1006FB600()
{
}

void sub_1006FB750()
{
}

void sub_1006FB764(void *a1, int a2)
{
  if (a2) {
    sub_1001C7F8C(a1);
  }
  JUMPOUT(0x1006FB5F8);
}

unsigned char *sub_1006FB774(unsigned char *result)
{
  if (*result)
  {
    v1[0] = 0;
    v1[1] = v1;
    v1[2] = 0x3812000000;
    v1[3] = sub_1007013B4;
    v1[4] = sub_1007013C4;
    v1[5] = 0;
    sub_1007013FC();
  }
  return result;
}

void sub_1006FBAE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,__int16 a29,uint64_t a30,uint64_t a31,uint64_t a32,uint8_t buf)
{
  _Block_object_dispose(&a18, 8);
  _Block_object_dispose(&a22, 8);
  uint64_t v34 = a28;
  a28 = 0;
  if (v34) {
    (*(void (**)(uint64_t))(*(void *)v34 + 8))(v34);
  }
  _Unwind_Resume(a1);
}

void sub_1006FBB58()
{
}

void sub_1006FBCA8()
{
}

void sub_1006FBCBC(void *a1, int a2)
{
  if (a2) {
    sub_1001C7F8C(a1);
  }
  JUMPOUT(0x1006FBB50);
}

unsigned char *sub_1006FBCCC(unsigned char *result)
{
  if (*result)
  {
    v1[0] = 0;
    v1[1] = v1;
    v1[2] = 0x3812000000;
    v1[3] = sub_1007018BC;
    v1[4] = sub_1007018CC;
    v1[5] = 0;
    sub_1005A6A3C();
  }
  return result;
}

void sub_1006FC03C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,__int16 a29,uint64_t a30,uint64_t a31,uint64_t a32,uint8_t buf)
{
  _Block_object_dispose(&a18, 8);
  _Block_object_dispose(&a22, 8);
  uint64_t v34 = a28;
  a28 = 0;
  if (v34) {
    (*(void (**)(uint64_t))(*(void *)v34 + 8))(v34);
  }
  _Unwind_Resume(a1);
}

void sub_1006FC0B0()
{
}

void sub_1006FC200()
{
}

void sub_1006FC214(void *a1, int a2)
{
  if (a2) {
    sub_1001C7F8C(a1);
  }
  JUMPOUT(0x1006FC0A8);
}

void sub_1006FC224()
{
}

void sub_1006FC2E0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete();
}

uint64_t sub_1006FC31C(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = off_1022C5398;
  *(void *)(a1 + 8) = [[CLNotifierClientAdapter alloc] initWithClient:a1];
  *(void *)(a1 + 24) = a5;
  *(void *)(a1 + 32) = a6;
  if (*((char *)a3 + 23) >= 0) {
    uint64_t v12 = a3;
  }
  else {
    uint64_t v12 = (uint64_t *)*a3;
  }
  id v13 = [[[a4 vendor] proxyForService:+[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v12)];
  *(void *)(a1 + 16) = v13;
  id v14 = v13;
  if (a2) {
    [*(id *)(a1 + 16) setDelegateEntityName:a2];
  }
  [*(id *)(a1 + 16) registerDelegate:*(void *)(a1 + 8) inSilo:[a4 silo]];
  return a1;
}

void sub_1006FC400(uint64_t a1, uint64_t a2)
{
  v14[0] = a2;
  if (!*(unsigned char *)(a1 + 108))
  {
    uint64_t v4 = *(void *)(a1 + 88);
    if (!v4) {
      goto LABEL_12;
    }
    uint64_t v5 = a1 + 80;
    uint64_t v6 = a1 + 88;
    do
    {
      int v7 = *(_DWORD *)(v4 + 32);
      BOOL v8 = v7 < (int)a2;
      if (v7 >= (int)a2) {
        uint64_t v9 = (uint64_t *)v4;
      }
      else {
        uint64_t v9 = (uint64_t *)(v4 + 8);
      }
      if (!v8) {
        uint64_t v6 = v4;
      }
      uint64_t v4 = *v9;
    }
    while (*v9);
    if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= (int)a2)
    {
      while (*(void *)(v6 + 56))
      {
        *(_DWORD *)long long buf = *(_DWORD *)(*(void *)(v6 + 40) + 28);
        (*(void (**)(uint64_t, uint64_t, uint8_t *))(*(void *)a1 + 112))(a1, a2, buf);
      }
      sub_10006DA64(v5, v14);
    }
    else
    {
LABEL_12:
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022C5130);
      }
      uint64_t v10 = qword_102419588;
      if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
      {
        uint64_t v11 = (void *)(a1 + 8);
        if (*(char *)(a1 + 31) < 0) {
          uint64_t v11 = (void *)*v11;
        }
        *(_DWORD *)long long buf = 136446466;
        char v19 = v11;
        __int16 v20 = 1026;
        int v21 = a2;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
          buf,
          0x12u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419580 != -1) {
          dispatch_once(&qword_102419580, &stru_1022C5130);
        }
        uint64_t v12 = (void *)(a1 + 8);
        if (*(char *)(a1 + 31) < 0) {
          uint64_t v12 = (void *)*v12;
        }
        v14[1] = 136446466;
        uint64_t v15 = v12;
        __int16 v16 = 1026;
        int v17 = a2;
        id v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::NotificationData>::removeClient(int) [Notification_T = CLNetworkLocationProvider_Type::Notification, NotificationData_T = CLNetworkLocationProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v13);
        if (v13 != (char *)buf) {
          free(v13);
        }
      }
    }
  }
}

uint64_t sub_1006FC690(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 104))(a1, a2, &v4);
}

uint64_t sub_1006FC6D8(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, int *))(*(void *)a1 + 112))(a1, a2, &v4);
}

uint64_t sub_1006FC720(uint64_t a1, int a2)
{
  int v3 = a2;
  return (*(uint64_t (**)(uint64_t, int *))(*(void *)a1 + 120))(a1, &v3);
}

BOOL sub_1006FC768(uint64_t a1, int a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (!v5) {
    goto LABEL_11;
  }
  uint64_t v6 = a1 + 88;
  do
  {
    int v7 = *(_DWORD *)(v5 + 32);
    BOOL v8 = v7 < a2;
    if (v7 >= a2) {
      uint64_t v9 = (uint64_t *)v5;
    }
    else {
      uint64_t v9 = (uint64_t *)(v5 + 8);
    }
    if (!v8) {
      uint64_t v6 = v5;
    }
    uint64_t v5 = *v9;
  }
  while (*v9);
  if (v6 != a1 + 88 && *(_DWORD *)(v6 + 32) <= a2)
  {
    uint64_t v16 = *(void *)(v6 + 48);
    uint64_t v14 = v6 + 48;
    uint64_t v15 = v16;
    if (!v16) {
      goto LABEL_29;
    }
    int v17 = *a3;
    uint64_t v18 = v14;
    do
    {
      int v19 = *(_DWORD *)(v15 + 28);
      BOOL v20 = v19 < v17;
      if (v19 >= v17) {
        int v21 = (uint64_t *)v15;
      }
      else {
        int v21 = (uint64_t *)(v15 + 8);
      }
      if (!v20) {
        uint64_t v18 = v15;
      }
      uint64_t v15 = *v21;
    }
    while (*v21);
    if (v18 == v14 || v17 < *(_DWORD *)(v18 + 28)) {
LABEL_29:
    }
      uint64_t v18 = v14;
    return v18 != v14;
  }
  else
  {
LABEL_11:
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    uint64_t v10 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
    {
      uint64_t v11 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        uint64_t v11 = (void *)*v11;
      }
      *(_DWORD *)long long buf = 136446466;
      __int16 v24 = v11;
      __int16 v25 = 1026;
      int v26 = a2;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "%{public}s; client %{public}d does not exist",
        buf,
        0x12u);
    }
    BOOL v12 = sub_10013D1A0(115, 0);
    BOOL result = 0;
    if (v12)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022C5130);
      }
      int64_t v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::NotificationData>::clientRegistered(int, const Notification_T &) [Notification_T = CLNetworkLocationProvider_Type::Notification, NotificationData_T = CLNetworkLocationProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
      return 0;
    }
  }
  return result;
}

BOOL sub_1006FC9EC(char *a1, int a2, int *a3)
{
  int v32 = a2;
  int v3 = a1[108];
  if (!a1[108])
  {
    uint64_t v6 = *((void *)a1 + 11);
    if (v6)
    {
      BOOL v8 = a1 + 88;
      do
      {
        int v9 = *(_DWORD *)(v6 + 32);
        BOOL v10 = v9 < a2;
        if (v9 >= a2) {
          uint64_t v11 = (uint64_t *)v6;
        }
        else {
          uint64_t v11 = (uint64_t *)(v6 + 8);
        }
        if (!v10) {
          BOOL v8 = (char *)v6;
        }
        uint64_t v6 = *v11;
      }
      while (*v11);
      if (v8 != a1 + 88 && *((_DWORD *)v8 + 8) <= a2)
      {
        uint64_t v14 = (char *)*((void *)v8 + 6);
        BOOL v12 = v8 + 48;
        id v13 = v14;
        if (v14)
        {
          int v15 = *a3;
          uint64_t v16 = v12;
          do
          {
            int v17 = *((_DWORD *)v13 + 7);
            BOOL v18 = v17 < v15;
            if (v17 >= v15) {
              int v19 = (char **)v13;
            }
            else {
              int v19 = (char **)(v13 + 8);
            }
            if (!v18) {
              uint64_t v16 = v13;
            }
            id v13 = *v19;
          }
          while (*v19);
          if (v16 != v12 && v15 >= *((_DWORD *)v16 + 7))
          {
            LODWORD(__p[0]) = *a3;
            sub_1000ED9F4((uint64_t)(v12 - 8), (int *)__p);
            uint64_t v20 = *((void *)a1 + 8);
            if (!v20) {
              goto LABEL_33;
            }
            int v21 = *a3;
            int64_t v22 = a1 + 64;
            do
            {
              int v23 = *(_DWORD *)(v20 + 32);
              BOOL v24 = v23 < v21;
              if (v23 >= v21) {
                __int16 v25 = (uint64_t *)v20;
              }
              else {
                __int16 v25 = (uint64_t *)(v20 + 8);
              }
              if (!v24) {
                int64_t v22 = (char *)v20;
              }
              uint64_t v20 = *v25;
            }
            while (*v25);
            if (v22 != a1 + 64 && v21 >= *((_DWORD *)v22 + 8))
            {
              sub_1000ED9F4((uint64_t)(v22 + 40), &v32);
              if (!*((void *)v22 + 7)) {
                (*(void (**)(char *, int *))(*(void *)a1 + 176))(a1, a3);
              }
            }
            else
            {
LABEL_33:
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022C5130);
              }
              int v26 = qword_102419588;
              if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
              {
                uint64_t v27 = a1 + 8;
                if (a1[31] < 0) {
                  uint64_t v27 = (void *)*v27;
                }
                (*(void (**)(void **__return_ptr, char *, int *))(*(void *)a1 + 160))(__p, a1, a3);
                if (v42 >= 0) {
                  __int16 v28 = __p;
                }
                else {
                  __int16 v28 = (void **)__p[0];
                }
                *(_DWORD *)long long buf = 136446466;
                *(void *)&uint8_t buf[4] = v27;
                __int16 v34 = 2082;
                int v35 = v28;
                _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_FAULT, "%{public}s; notification %{public}s not found",
                  buf,
                  0x16u);
                if (v42 < 0) {
                  operator delete(__p[0]);
                }
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(__p, 0x65CuLL);
                if (qword_102419580 != -1) {
                  dispatch_once(&qword_102419580, &stru_1022C5130);
                }
                uint64_t v29 = a1 + 8;
                if (a1[31] < 0) {
                  uint64_t v29 = (void *)*v29;
                }
                (*(void (**)(unsigned char *__return_ptr, char *, int *))(*(void *)a1 + 160))(buf, a1, a3);
                if (v36 >= 0) {
                  __int16 v30 = buf;
                }
                else {
                  __int16 v30 = *(unsigned char **)buf;
                }
                int v37 = 136446466;
                long long v38 = v29;
                __int16 v39 = 2082;
                int v40 = v30;
                int v31 = (char *)_os_log_send_and_compose_impl();
                if (v36 < 0) {
                  operator delete(*(void **)buf);
                }
                sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::NotificationData>::unregisterForNotification(int, const Notification_T &) [Notification_T = CLNetworkLocationProvider_Type::Notification, NotificationData_T = CLNetworkLocationProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v31);
                if (v31 != (char *)__p) {
                  free(v31);
                }
              }
            }
          }
        }
      }
    }
  }
  return v3 == 0;
}

uint64_t sub_1006FCDC0(uint64_t a1, int *a2, _OWORD *a3)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v3 = a1 + 64;
  uint64_t v4 = v5;
  if (!v5) {
    return 0;
  }
  int v6 = *a2;
  uint64_t v7 = v3;
  do
  {
    int v8 = *(_DWORD *)(v4 + 32);
    BOOL v9 = v8 < v6;
    if (v8 >= v6) {
      BOOL v10 = (uint64_t *)v4;
    }
    else {
      BOOL v10 = (uint64_t *)(v4 + 8);
    }
    if (!v9) {
      uint64_t v7 = v4;
    }
    uint64_t v4 = *v10;
  }
  while (*v10);
  if (v7 == v3) {
    return 0;
  }
  if (v6 < *(_DWORD *)(v7 + 32)) {
    return 0;
  }
  uint64_t v11 = *(_OWORD **)(v7 + 64);
  if (!v11) {
    return 0;
  }
  *a3 = *v11;
  return 1;
}

uint64_t sub_1006FCE20(uint64_t a1, int *a2, _OWORD *a3)
{
  int v6 = (uint64_t *)operator new(0x28uLL);
  v6[1] = 0;
  v6[2] = 0;
  *int v6 = (uint64_t)off_1022C5300;
  *(_OWORD *)(v6 + 3) = *a3;
  int v10 = *a2;
  uint64_t v11 = &v10;
  uint64_t v7 = sub_10044715C((uint64_t **)(a1 + 56), &v10, (uint64_t)&unk_101D0B290, &v11);
  int v8 = (std::__shared_weak_count *)v7[9];
  v7[8] = v6 + 3;
  v7[9] = v6;
  if (v8) {
    sub_1000DB0A0(v8);
  }
  return 1;
}

void sub_1006FCED4(_Unwind_Exception *a1)
{
  sub_1000DB0A0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1006FCEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[0] = 0;
  v5[1] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, a2, v5, a3, a4, 0);
}

void sub_1006FCF3C(uint64_t a1, unsigned int *a2, _OWORD *a3, int a4)
{
  if (*(unsigned char *)(a1 + 108)) {
    return;
  }
  int v8 = _os_activity_create((void *)&_mh_execute_header, "CL: notifyClientsWithData (Fallback)", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_IF_NONE_PRESENT);
  os_activity_scope_enter(v8, &state);

  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5130);
  }
  BOOL v9 = qword_102419588;
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    int v10 = (void *)(a1 + 8);
    if (*(char *)(a1 + 31) < 0) {
      int v10 = (void *)*v10;
    }
    uint64_t v11 = (std::__shared_weak_count *)*a2;
    *(_DWORD *)long long buf = 68289794;
    int v22 = 0;
    __int16 v23 = 2082;
    *(void *)BOOL v24 = "";
    *(_WORD *)&v24[8] = 2082;
    *(void *)&v24[10] = "activity";
    __int16 v25 = 2082;
    int v26 = v10;
    __int16 v27 = 2050;
    __int16 v28 = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"notifyClientsWithData\", \"event\":%{public, location:escape_only}s, \"name\":%{public, location:escape_only}s, \"notification\":%{public}lld}", buf, 0x30u);
  }
  uint64_t v12 = *(void *)(a1 + 64);
  if (!v12) {
    goto LABEL_18;
  }
  int v13 = *a2;
  uint64_t v14 = (uint64_t **)(a1 + 64);
  do
  {
    int v15 = *(_DWORD *)(v12 + 32);
    BOOL v16 = v15 < v13;
    if (v15 >= v13) {
      int v17 = (uint64_t *)v12;
    }
    else {
      int v17 = (uint64_t *)(v12 + 8);
    }
    if (!v16) {
      uint64_t v14 = (uint64_t **)v12;
    }
    uint64_t v12 = *v17;
  }
  while (*v17);
  if (v14 == (uint64_t **)(a1 + 64) || v13 < *((_DWORD *)v14 + 8))
  {
LABEL_18:
    uint64_t v29 = v30;
    memset(v30, 0, sizeof(v30));
    int v31 = 0;
    sub_1004481D0((uint64_t)buf, a2, (uint64_t)&v29);
    uint64_t v14 = sub_100448098((uint64_t **)(a1 + 56), (__n128 *)buf);
    if (v28) {
      sub_1000DB0A0(v28);
    }
    sub_1000F5BB0((uint64_t)&v23, *(void **)&v24[6]);
    if (v31) {
      sub_1000DB0A0(v31);
    }
    sub_1000F5BB0((uint64_t)&v29, v30[0]);
  }
  if (a4)
  {
    BOOL v18 = (uint64_t *)operator new(0x28uLL);
    v18[1] = 0;
    id v18[2] = 0;
    *BOOL v18 = (uint64_t)off_1022C5300;
    *(_OWORD *)(v18 + 3) = *a3;
    int v19 = (std::__shared_weak_count *)v14[9];
    unsigned char v14[8] = v18 + 3;
    v14[9] = v18;
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  int v19 = (std::__shared_weak_count *)v14[9];
  unsigned char v14[8] = 0;
  v14[9] = 0;
  if (v19) {
LABEL_27:
  }
    sub_1000DB0A0(v19);
LABEL_28:
  if (v14[7]) {
    sub_1006FF798();
  }
  os_activity_scope_leave(&state);
}

void sub_1006FD520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, os_activity_scope_state_s state, char a18)
{
}

void sub_1006FD56C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 108))
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    double v2 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v3 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        uint64_t v3 = (void *)*v3;
      }
      *(_DWORD *)long long buf = 136315138;
      int v22 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "%s; already shutdown; not listing clients",
        buf,
        0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022C5130);
      }
      uint64_t v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::NotificationData>::listClients() [Notification_T = CLNetworkLocationProvider_Type::Notification, NotificationData_T = CLNetworkLocationProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
  else
  {
    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5130);
    }
    uint64_t v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      int v6 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        int v6 = (void *)*v6;
      }
      uint64_t v7 = *(void *)(a1 + 96);
      *(_DWORD *)long long buf = 136315394;
      int v22 = v6;
      __int16 v23 = 2048;
      v24[0] = v7;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "%s; listing clients, num clients: %zu",
        buf,
        0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419580 != -1) {
        dispatch_once(&qword_102419580, &stru_1022C5130);
      }
      uint64_t v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::NotificationData>::listClients() [Notification_T = CLNetworkLocationProvider_Type::Notification, NotificationData_T = CLNetworkLocationProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v20);
      if (v20 != (char *)buf) {
        free(v20);
      }
    }
    int v8 = *(void **)(a1 + 80);
    if (v8 != (void *)(a1 + 88))
    {
      do
      {
        BOOL v9 = (void *)v8[5];
        if (v9 != v8 + 6)
        {
          do
          {
            if (qword_102419580 != -1) {
              dispatch_once(&qword_102419580, &stru_1022C5130);
            }
            int v10 = qword_102419588;
            if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v11 = (void *)(a1 + 8);
              if (*(char *)(a1 + 31) < 0) {
                uint64_t v11 = *(void **)(a1 + 8);
              }
              int v12 = *((_DWORD *)v8 + 8);
              int v13 = *((_DWORD *)v9 + 7);
              *(_DWORD *)long long buf = 136315650;
              int v22 = v11;
              __int16 v23 = 1024;
              LODWORD(v24[0]) = v12;
              WORD2(v24[0]) = 1024;
              *(_DWORD *)((char *)v24 + 6) = v13;
              _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "%s; clients, id: %d, notification: %d",
                buf,
                0x18u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022C5130);
              }
              int v17 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::NotificationData>::listClients() [Notification_T = CLNetworkLocationProvider_Type::Notification, NotificationData_T = CLNetworkLocationProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v17);
              if (v17 != (char *)buf) {
                free(v17);
              }
            }
            uint64_t v14 = (void *)v9[1];
            if (v14)
            {
              do
              {
                int v15 = v14;
                uint64_t v14 = (void *)*v14;
              }
              while (v14);
            }
            else
            {
              do
              {
                int v15 = (void *)v9[2];
                BOOL v16 = *v15 == (void)v9;
                BOOL v9 = v15;
              }
              while (!v16);
            }
            BOOL v9 = v15;
          }
          while (v15 != v8 + 6);
        }
        BOOL v18 = (void *)v8[1];
        if (v18)
        {
          do
          {
            int v19 = v18;
            BOOL v18 = (void *)*v18;
          }
          while (v18);
        }
        else
        {
          do
          {
            int v19 = (void *)v8[2];
            BOOL v16 = *v19 == (void)v8;
            int v8 = v19;
          }
          while (!v16);
        }
        int v8 = v19;
      }
      while (v19 != (void *)(a1 + 88));
    }
  }
}

void sub_1006FDB1C(uint64_t a1)
{
  sub_100701CC4(a1);

  operator delete();
}

void sub_1006FDB54(uint64_t a1, int a2, void *a3)
{
  sub_1006FFDC8(a3);
  if (v5)
  {
    int v6 = a2;
    (*(void (**)(void, int *, uint64_t, void))(a1 + 24))(0, &v6, v5, *(void *)(a1 + 32));
  }
}

void sub_1006FDBA4(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1006FDBD4(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_1006FDC04(id a1)
{
  qword_102419638 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

void sub_1006FDC34(id a1)
{
  qword_102419658 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

void sub_1006FDC64(id a1)
{
  qword_1024193C8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeoFencing");
}

void sub_1006FDC94(id a1)
{
  qword_1024193B8 = (uint64_t)os_log_create("com.apple.locationd.Position", "WifiPosition");
}

void sub_1006FDCC4(id a1)
{
  qword_102419388 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

uint64_t sub_1006FDCF4(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1006FDD44(result);
    operator delete();
  }
  return result;
}

uint64_t sub_1006FDD44(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  uint64_t v3 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t sub_1006FDDF4(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1006FDE44(result);
    operator delete();
  }
  return result;
}

uint64_t sub_1006FDE44(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  uint64_t v3 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t sub_1006FDEF4(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1006FDF44(result);
    operator delete();
  }
  return result;
}

uint64_t sub_1006FDF44(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  uint64_t v3 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t sub_1006FDFF4(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1006FE044(result);
    operator delete();
  }
  return result;
}

uint64_t sub_1006FE044(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  uint64_t v3 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_1006FE0F4(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1006FE0F4(a1, *a2);
    sub_1006FE0F4(a1, a2[1]);
    sub_1006FE150((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_1006FE150(uint64_t a1)
{
  if (*(char *)(a1 + 263) < 0) {
    operator delete(*(void **)(a1 + 240));
  }
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    *(void *)(a1 + 16) = v2;
    operator delete(v2);
  }
}

void sub_1006FE1A8(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1006FE1A8(a1, *a2);
    sub_1006FE1A8(a1, a2[1]);
    uint64_t v4 = (void *)a2[5];
    if (v4)
    {
      a2[6] = v4;
      operator delete(v4);
    }
    operator delete(a2);
  }
}

_OWORD *sub_1006FE20C(uint64_t **a1, _DWORD *a2, uint64_t a3, _OWORD **a4)
{
  int v6 = (void **)sub_1006FE298((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    int v8 = (uint64_t **)v6;
    uint64_t v7 = operator new(0x48uLL);
    long long v9 = (*a4)[1];
    void v7[2] = **a4;
    v7[3] = v9;
    *((void *)v7 + 8) = 0;
    sub_1000EDF90(a1, v11, v8, (uint64_t *)v7);
  }
  return v7;
}

void *sub_1006FE298(uint64_t a1, void *a2, _DWORD *a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = (void *)v4;
        int v8 = (_DWORD *)(v4 + 32);
        if (!sub_1006FE32C(a3, (_DWORD *)(v4 + 32))) {
          break;
        }
        uint64_t v4 = *v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (!sub_1006FE32C(v8, a3)) {
        break;
      }
      uint64_t v5 = v7 + 1;
      uint64_t v4 = v7[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v7 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

BOOL sub_1006FE32C(_DWORD *a1, _DWORD *a2)
{
  BOOL v2 = *a1 < *a2;
  if (*a1 == *a2)
  {
    int v3 = a1[1];
    int v4 = a2[1];
    BOOL v2 = v3 < v4;
    if (v3 == v4)
    {
      if (a1[2] == a2[2] && a1[3] == a2[3]) {
        return 0;
      }
      int v6 = a1[2];
      int v7 = a2[2];
      BOOL v2 = v6 < v7;
      if (v6 == v7) {
        return a1[3] < a2[3];
      }
    }
  }
  return v2;
}

uint64_t *sub_1006FE398(uint64_t **a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  int v6 = (uint64_t **)sub_1006FE444((uint64_t)a1, &v11, a2);
  int v7 = *v6;
  if (!*v6)
  {
    int v8 = v6;
    sub_1006FE4D8((uint64_t)a1, a4, (uint64_t)v10);
    sub_1000EDF90(a1, v11, v8, v10[0]);
    int v7 = v10[0];
    v10[0] = 0;
    sub_1006FE9AC((uint64_t)v10, 0);
  }
  return v7;
}

void *sub_1006FE444(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  int v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        int v7 = v4;
        uint64_t v8 = (uint64_t)(v4 + 4);
        if (!sub_1006FE544(a3, (uint64_t)(v4 + 4))) {
          break;
        }
        int v4 = (void *)*v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (!sub_1006FE544(v8, a3)) {
        break;
      }
      uint64_t v5 = v7 + 1;
      int v4 = (void *)v7[1];
    }
    while (v4);
  }
  else
  {
    int v7 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

uint64_t sub_1006FE4D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = operator new(0x1D8uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_1006FE884((uint64_t)v6 + 32, *a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1006FE52C(_Unwind_Exception *a1)
{
  sub_1006FE9AC(v1, 0);
  _Unwind_Resume(a1);
}

BOOL sub_1006FE544(uint64_t a1, uint64_t a2)
{
  if (sub_1006FE620(a1, a2)) {
    return 0;
  }
  BOOL v5 = *(_DWORD *)a1 < *(_DWORD *)a2;
  if (*(_DWORD *)a1 != *(_DWORD *)a2) {
    return v5;
  }
  int v6 = *(_DWORD *)(a1 + 232);
  int v7 = *(_DWORD *)(a2 + 232);
  BOOL v5 = v6 < v7;
  if (v6 != v7) {
    return v5;
  }
  int v8 = *(_DWORD *)(a1 + 32);
  int v9 = *(_DWORD *)(a2 + 32);
  BOOL v5 = v8 < v9;
  if (v8 != v9) {
    return v5;
  }
  int v10 = *(_DWORD *)(a1 + 36);
  int v11 = *(_DWORD *)(a2 + 36);
  BOOL v5 = v10 < v11;
  if (v10 != v11) {
    return v5;
  }
  int v12 = *(_DWORD *)(a1 + 44);
  int v13 = *(_DWORD *)(a2 + 44);
  BOOL v5 = v12 < v13;
  if (v12 != v13) {
    return v5;
  }
  if (!sub_1006FE6DC((unsigned __int8 *)(a1 + 240), (unsigned __int8 *)(a2 + 240))) {
    return *(_DWORD *)(a1 + 40) < *(_DWORD *)(a2 + 40);
  }

  return sub_1006FE774((void *)(a1 + 240), (void *)(a2 + 240));
}

BOOL sub_1006FE620(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 != *(_DWORD *)a2
    || *(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32)
    || *(_DWORD *)(a1 + 36) != *(_DWORD *)(a2 + 36)
    || *(_DWORD *)(a1 + 40) != *(_DWORD *)(a2 + 40)
    || *(_DWORD *)(a1 + 44) != *(_DWORD *)(a2 + 44)
    || *(_DWORD *)(a1 + 48) != *(_DWORD *)(a2 + 48))
  {
    return 0;
  }
  BOOL result = sub_1006FE7E0((unsigned __int8 *)(a1 + 240), (unsigned __int8 *)(a2 + 240));
  if (!result) {
    return result;
  }
  return *(_DWORD *)(a1 + 52) == *(_DWORD *)(a2 + 52) && *(_DWORD *)(a1 + 56) == *(_DWORD *)(a2 + 56);
}

BOOL sub_1006FE6DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 1;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) != 0;
  }
  if (a1[23])
  {
    uint64_t v6 = v2 - 1;
    do
    {
      int v8 = *a1++;
      int v7 = v8;
      int v9 = *a2++;
      BOOL v10 = v7 == v9;
      uint64_t v2 = v7 != v9;
      BOOL v10 = !v10 || v6-- == 0;
    }
    while (!v10);
  }
  return v2;
}

BOOL sub_1006FE774(void *a1, void *a2)
{
  int v2 = *((char *)a2 + 23);
  int v3 = *((char *)a1 + 23);
  if (v3 >= 0) {
    size_t v4 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v4 = a1[1];
  }
  if (v3 < 0) {
    a1 = (void *)*a1;
  }
  if (v2 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = a2[1];
  }
  if (v2 < 0) {
    a2 = (void *)*a2;
  }
  if (v5 >= v4) {
    size_t v6 = v4;
  }
  else {
    size_t v6 = v5;
  }
  int v7 = memcmp(a1, a2, v6);
  if (v7) {
    return v7 < 0;
  }
  else {
    return v4 < v5;
  }
}

BOOL sub_1006FE7E0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) == 0;
  }
  if (!a1[23]) {
    return 1;
  }
  uint64_t v6 = v2 - 1;
  do
  {
    int v8 = *a1++;
    int v7 = v8;
    int v10 = *a2++;
    int v9 = v10;
    BOOL v12 = v6-- != 0;
    BOOL v13 = v7 == v9;
    BOOL v14 = v7 == v9;
  }
  while (v13 && v12);
  return v14;
}

uint64_t sub_1006FE884(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  sub_10010F834((void *)(a1 + 8), *(const void **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + ++*(_DWORD *)(result + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  long long v9 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  long long v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 220) = *(_OWORD *)(a2 + 220);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 176) = v10;
  BOOL v13 = (unsigned char *)(a1 + 240);
  if (*(char *)(a2 + 263) < 0)
  {
    sub_1000DC48C(v13, *(void **)(a2 + 240), *(void *)(a2 + 248));
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 240);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(_OWORD *)BOOL v13 = v14;
  }
  long long v15 = *(_OWORD *)(a2 + 264);
  long long v16 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v16;
  *(_OWORD *)(a1 + 264) = v15;
  long long v17 = *(_OWORD *)(a2 + 312);
  long long v18 = *(_OWORD *)(a2 + 328);
  long long v19 = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 360) = v19;
  *(_OWORD *)(a1 + 312) = v17;
  *(_OWORD *)(a1 + 328) = v18;
  long long v20 = *(_OWORD *)(a2 + 376);
  long long v21 = *(_OWORD *)(a2 + 392);
  long long v22 = *(_OWORD *)(a2 + 408);
  *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 392) = v21;
  *(_OWORD *)(a1 + 408) = v22;
  *(_OWORD *)(a1 + 376) = v20;
  *(void *)(a1 + 432) = 0;
  return a1;
}

void sub_1006FE990(_Unwind_Exception *exception_object)
{
  long long v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

void sub_1006FE9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1006FE150((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

_OWORD *sub_1006FEA04(uint64_t **a1, _DWORD *a2, uint64_t a3, _OWORD **a4)
{
  long long v6 = (void **)sub_1006FE298((uint64_t)a1, &v16, a2);
  long long v7 = *v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    long long v7 = operator new(0x80uLL);
    long long v9 = *a4;
    long long v10 = (*a4)[1];
    void v7[2] = **a4;
    v7[3] = v10;
    long long v11 = v9[2];
    long long v12 = v9[3];
    long long v13 = v9[4];
    uint64_t v14 = *((void *)v9 + 10);
    v7[5] = v12;
    void v7[6] = v13;
    void v7[4] = v11;
    *((void *)v7 + 14) = v14;
    *((void *)v7 + 15) = 0;
    sub_1000EDF90(a1, v16, v8, (uint64_t *)v7);
  }
  return v7;
}

_OWORD *sub_1006FEAA4(uint64_t **a1, uint64_t a2, uint64_t a3, _OWORD **a4)
{
  long long v6 = (void **)sub_1006FEB40((uint64_t)a1, &v15, a2);
  long long v7 = *v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    long long v7 = operator new(0x88uLL);
    long long v9 = *a4;
    long long v10 = (*a4)[1];
    void v7[2] = **a4;
    v7[3] = v10;
    long long v11 = v9[2];
    long long v12 = v9[3];
    long long v13 = v9[5];
    void v7[6] = v9[4];
    v7[7] = v13;
    void v7[4] = v11;
    v7[5] = v12;
    *((void *)v7 + 16) = 0;
    sub_1000EDF90(a1, v15, v8, (uint64_t *)v7);
  }
  return v7;
}

void *sub_1006FEB40(uint64_t a1, void *a2, uint64_t a3)
{
  long long v5 = (void *)(a1 + 8);
  long long v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        long long v7 = v4;
        uint64_t v8 = (uint64_t)(v4 + 4);
        if (!sub_1006FEBD4(a3, (uint64_t)(v4 + 4))) {
          break;
        }
        long long v4 = (void *)*v7;
        long long v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (!sub_1006FEBD4(v8, a3)) {
        break;
      }
      long long v5 = v7 + 1;
      long long v4 = (void *)v7[1];
    }
    while (v4);
  }
  else
  {
    long long v7 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

BOOL sub_1006FEBD4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(_DWORD *)a1 < *(_DWORD *)a2;
  if (*(_DWORD *)a1 == *(_DWORD *)a2)
  {
    int v3 = *(_DWORD *)(a1 + 4);
    int v4 = *(_DWORD *)(a2 + 4);
    BOOL v2 = v3 < v4;
    if (v3 == v4)
    {
      if (*(_DWORD *)(a1 + 8) == *(_DWORD *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)) {
        return 0;
      }
      int v6 = *(_DWORD *)(a1 + 8);
      int v7 = *(_DWORD *)(a2 + 8);
      BOOL v2 = v6 < v7;
      if (v6 == v7) {
        return *(void *)(a1 + 16) < *(void *)(a2 + 16);
      }
    }
  }
  return v2;
}

void *sub_1006FEC40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = (void *)(a1 + 8);
  int v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  long long v5 = (void *)(a1 + 8);
  do
  {
    BOOL v6 = sub_1006FE544((uint64_t)(v3 + 4), a2);
    int v7 = v3 + 1;
    if (!v6)
    {
      int v7 = v3;
      long long v5 = v3;
    }
    int v3 = (void *)*v7;
  }
  while (*v7);
  if (v5 == v2 || sub_1006FE544(a2, (uint64_t)(v5 + 4))) {
    return v2;
  }
  return v5;
}

uint64_t sub_1006FECBC(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = 0x84BDA12F684BDA13 * ((a1[1] - *a1) >> 4);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x97B425ED097B42) {
    sub_1001D7FD4();
  }
  if (0x97B425ED097B426 * ((a1[2] - *a1) >> 4) > v4) {
    unint64_t v4 = 0x97B425ED097B426 * ((a1[2] - *a1) >> 4);
  }
  if (0x84BDA12F684BDA13 * ((a1[2] - *a1) >> 4) >= 0x4BDA12F684BDA1) {
    unint64_t v6 = 0x97B425ED097B42;
  }
  else {
    unint64_t v6 = v4;
  }
  uint64_t v14 = a1 + 2;
  if (v6) {
    int v7 = (char *)sub_1006FEF78((uint64_t)(a1 + 2), v6);
  }
  else {
    int v7 = 0;
  }
  long long v10 = v7;
  long long v11 = &v7[432 * v3];
  long long v13 = &v7[432 * v6];
  sub_1006FEDE4((uint64_t)(a1 + 2), (uint64_t)v11, a2);
  long long v12 = v11 + 432;
  sub_1006FEF00(a1, &v10);
  uint64_t v8 = a1[1];
  sub_1006FF1B0(&v10);
  return v8;
}

void sub_1006FEDD0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1006FF1B0((void **)va);
  _Unwind_Resume(a1);
}

__n128 sub_1006FEDE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a2 = *(_DWORD *)a3;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  sub_10010F834((void *)(a2 + 8), *(const void **)(a3 + 8), *(void *)(a3 + 16), (uint64_t)(*(void *)(a3 + 16) - *(void *)(a3 + 8)) >> 2);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a3 + 32);
  long long v5 = *(_OWORD *)(a3 + 48);
  long long v6 = *(_OWORD *)(a3 + 64);
  long long v7 = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(a2 + 80) = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(a2 + 96) = v7;
  *(_OWORD *)(a2 + ++*(_DWORD *)(result + 48) = v5;
  *(_OWORD *)(a2 + 64) = v6;
  long long v8 = *(_OWORD *)(a3 + 112);
  long long v9 = *(_OWORD *)(a3 + 128);
  long long v10 = *(_OWORD *)(a3 + 160);
  *(_OWORD *)(a2 + 144) = *(_OWORD *)(a3 + 144);
  *(_OWORD *)(a2 + 160) = v10;
  *(_OWORD *)(a2 + 112) = v8;
  *(_OWORD *)(a2 + 128) = v9;
  long long v11 = *(_OWORD *)(a3 + 176);
  long long v12 = *(_OWORD *)(a3 + 192);
  long long v13 = *(_OWORD *)(a3 + 208);
  *(_OWORD *)(a2 + 220) = *(_OWORD *)(a3 + 220);
  *(_OWORD *)(a2 + 192) = v12;
  *(_OWORD *)(a2 + 208) = v13;
  *(_OWORD *)(a2 + 176) = v11;
  uint64_t v14 = (unsigned char *)(a2 + 240);
  if (*(char *)(a3 + 263) < 0)
  {
    sub_1000DC48C(v14, *(void **)(a3 + 240), *(void *)(a3 + 248));
  }
  else
  {
    long long v15 = *(_OWORD *)(a3 + 240);
    *(void *)(a2 + 256) = *(void *)(a3 + 256);
    *(_OWORD *)uint64_t v14 = v15;
  }
  long long v16 = *(_OWORD *)(a3 + 264);
  long long v17 = *(_OWORD *)(a3 + 296);
  *(_OWORD *)(a2 + 280) = *(_OWORD *)(a3 + 280);
  *(_OWORD *)(a2 + 296) = v17;
  *(_OWORD *)(a2 + 264) = v16;
  long long v18 = *(_OWORD *)(a3 + 312);
  long long v19 = *(_OWORD *)(a3 + 328);
  long long v20 = *(_OWORD *)(a3 + 360);
  *(_OWORD *)(a2 + 344) = *(_OWORD *)(a3 + 344);
  *(_OWORD *)(a2 + 360) = v20;
  *(_OWORD *)(a2 + 312) = v18;
  *(_OWORD *)(a2 + 328) = v19;
  __n128 result = *(__n128 *)(a3 + 376);
  long long v22 = *(_OWORD *)(a3 + 392);
  long long v23 = *(_OWORD *)(a3 + 408);
  *(_DWORD *)(a2 + 424) = *(_DWORD *)(a3 + 424);
  *(_OWORD *)(a2 + 392) = v22;
  *(_OWORD *)(a2 + 408) = v23;
  *(__n128 *)(a2 + 376) = result;
  return result;
}

void sub_1006FEEE4(_Unwind_Exception *exception_object)
{
  unint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 16) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1006FEF00(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1006FEFC4((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_1006FEF78(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x97B425ED097B43) {
    sub_1001D7FA0();
  }
  return operator new(432 * a2);
}

uint64_t sub_1006FEFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v34 = a6;
  *((void *)&v34 + 1) = a7;
  long long v33 = v34;
  v31[0] = a1;
  v31[1] = &v33;
  v31[2] = &v34;
  if (a3 == a5)
  {
    uint64_t v29 = a6;
  }
  else
  {
    uint64_t v8 = a3 - 432;
    do
    {
      uint64_t v9 = v7 - 432;
      *(_DWORD *)uint64_t v9 = *(_DWORD *)v8;
      *(void *)(v9 + 16) = 0;
      *(void *)(v9 + 24) = 0;
      *(void *)(v9 + 8) = 0;
      *(_OWORD *)(v9 + 8) = *(_OWORD *)(v8 + 8);
      *(void *)(v9 + 24) = *(void *)(v8 + 24);
      *(void *)(v8 + 16) = 0;
      *(void *)(v8 + 24) = 0;
      *(void *)(v8 + 8) = 0;
      long long v10 = *(_OWORD *)(v8 + 96);
      long long v12 = *(_OWORD *)(v8 + 48);
      long long v11 = *(_OWORD *)(v8 + 64);
      *(_OWORD *)(v9 + 80) = *(_OWORD *)(v8 + 80);
      *(_OWORD *)(v9 + 96) = v10;
      *(_OWORD *)(v9 + ++*(_DWORD *)(result + 48) = v12;
      *(_OWORD *)(v9 + 64) = v11;
      long long v13 = *(_OWORD *)(v8 + 160);
      long long v15 = *(_OWORD *)(v8 + 112);
      long long v14 = *(_OWORD *)(v8 + 128);
      *(_OWORD *)(v9 + 144) = *(_OWORD *)(v8 + 144);
      *(_OWORD *)(v9 + 160) = v13;
      *(_OWORD *)(v9 + 112) = v15;
      *(_OWORD *)(v9 + 128) = v14;
      long long v17 = *(_OWORD *)(v8 + 192);
      long long v16 = *(_OWORD *)(v8 + 208);
      long long v18 = *(_OWORD *)(v8 + 176);
      *(_OWORD *)(v7 - 212) = *(_OWORD *)(v8 + 220);
      *(_OWORD *)(v7 - 240) = v17;
      *(_OWORD *)(v7 - 224) = v16;
      *(_OWORD *)(v7 - 256) = v18;
      *(_OWORD *)(v9 + 32) = *(_OWORD *)(v8 + 32);
      long long v19 = *(_OWORD *)(v8 + 240);
      *(void *)(v7 - 176) = *(void *)(v8 + 256);
      *(_OWORD *)(v7 - 192) = v19;
      *(void *)(v8 + 2++*(_DWORD *)(result + 48) = 0;
      *(void *)(v8 + 256) = 0;
      *(void *)(v8 + 240) = 0;
      long long v20 = *(_OWORD *)(v8 + 344);
      long long v21 = *(_OWORD *)(v8 + 360);
      long long v22 = *(_OWORD *)(v8 + 328);
      *(_OWORD *)(v7 - 120) = *(_OWORD *)(v8 + 312);
      *(_OWORD *)(v7 - 72) = v21;
      *(_OWORD *)(v7 - 88) = v20;
      *(_OWORD *)(v7 - 104) = v22;
      long long v23 = *(_OWORD *)(v8 + 264);
      long long v24 = *(_OWORD *)(v8 + 280);
      *(_OWORD *)(v7 - 136) = *(_OWORD *)(v8 + 296);
      *(_OWORD *)(v7 - 152) = v24;
      *(_OWORD *)(v7 - 168) = v23;
      long long v26 = *(_OWORD *)(v8 + 392);
      long long v25 = *(_OWORD *)(v8 + 408);
      int v27 = *(_DWORD *)(v8 + 424);
      *(_OWORD *)(v7 - 56) = *(_OWORD *)(v8 + 376);
      *(_DWORD *)(v7 - 8) = v27;
      *(_OWORD *)(v7 - 24) = v25;
      *(_OWORD *)(v7 - 40) = v26;
      uint64_t v7 = *((void *)&v34 + 1) - 432;
      *((void *)&v34 + 1) -= 432;
      BOOL v28 = v8 == a5;
      v8 -= 432;
    }
    while (!v28);
    uint64_t v29 = v34;
  }
  char v32 = 1;
  sub_1006FF124((uint64_t)v31);
  return v29;
}

uint64_t sub_1006FF124(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1006FF15C((uint64_t *)a1);
  }
  return a1;
}

void sub_1006FF15C(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_10063A3D8(v3, v1);
      v1 += 432;
    }
    while (v1 != v2);
  }
}

void **sub_1006FF1B0(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_1006FF1E4(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 432;
    sub_10063A3D8(v4, i - 432);
  }
}

uint64_t sub_1006FF22C(uint64_t a1, _DWORD *a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 8;
  do
  {
    BOOL v6 = sub_1006FE32C((_DWORD *)(v3 + 32), a2);
    uint64_t v7 = (uint64_t *)(v3 + 8);
    if (!v6)
    {
      uint64_t v7 = (uint64_t *)v3;
      uint64_t v5 = v3;
    }
    uint64_t v3 = *v7;
  }
  while (*v7);
  if (v5 == v2 || sub_1006FE32C(a2, (_DWORD *)(v5 + 32))) {
    return v2;
  }
  return v5;
}

void *sub_1006FF2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = (void *)(a1 + 8);
  do
  {
    BOOL v6 = sub_1006FEBD4((uint64_t)(v3 + 4), a2);
    uint64_t v7 = v3 + 1;
    if (!v6)
    {
      uint64_t v7 = v3;
      uint64_t v5 = v3;
    }
    uint64_t v3 = (void *)*v7;
  }
  while (*v7);
  if (v5 == v2 || sub_1006FEBD4(a2, (uint64_t)(v5 + 4))) {
    return v2;
  }
  return v5;
}

uint64_t *sub_1006FF324(uint64_t **a1, void *a2, uint64_t a3, uint64_t **a4)
{
  BOOL v6 = (uint64_t **)sub_1005295E0((uint64_t)a1, &v10, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    uint64_t v8 = v6;
    uint64_t v7 = (uint64_t *)operator new(0x30uLL);
    void v7[4] = **a4;
    v7[5] = 0;
    sub_1000EDF90(a1, v10, v8, v7);
  }
  return v7;
}

uint64_t sub_1006FF3AC(uint64_t **a1, _DWORD *a2)
{
  uint64_t v3 = (uint64_t *)sub_1006FF22C((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  uint64_t v4 = v3;
  sub_1000F0A30(a1, v3);
  operator delete(v4);
  return 1;
}

uint64_t sub_1006FF400(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = sub_1006FEC40((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  uint64_t v4 = v3;
  sub_1000F0A30(a1, v3);
  sub_1006FE150((uint64_t)(v4 + 4));
  operator delete(v4);
  return 1;
}

uint64_t sub_1006FF45C(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = sub_1006FF2A8((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  uint64_t v4 = v3;
  sub_1000F0A30(a1, v3);
  operator delete(v4);
  return 1;
}

uint64_t *sub_1006FF4B0(uint64_t **a1, uint64_t *a2)
{
  uint64_t v3 = sub_1000F0A30(a1, a2);
  uint64_t v4 = (void *)a2[5];
  if (v4)
  {
    a2[6] = (uint64_t)v4;
    operator delete(v4);
  }
  operator delete(a2);
  return v3;
}

long long *sub_1006FF4F4(long long *a1, long long *a2, void **a3)
{
  uint64_t v3 = a1;
  BOOL v6 = a3;
  if (a1 == a2) {
    return a1;
  }
  uint64_t v4 = a2;
  do
  {
    sub_1006FF558(&v6, v3);
    uint64_t v3 = (long long *)((char *)v3 + 184);
  }
  while (v3 != v4);
  return v4;
}

void ***sub_1006FF558(void ***a1, long long *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = (char *)(*a1)[1];
  BOOL v6 = *a1;
  uint64_t v9 = (char *)v6[2];
  uint64_t v7 = (uint64_t)(v6 + 2);
  uint64_t v8 = v9;
  if (v5 >= v9)
  {
    unint64_t v20 = 0xD37A6F4DE9BD37A7 * ((v5 - (unsigned char *)*v4) >> 3);
    unint64_t v21 = v20 + 1;
    if (v20 + 1 > 0x1642C8590B21642) {
      sub_1001D7FD4();
    }
    unint64_t v22 = 0xD37A6F4DE9BD37A7 * ((v8 - (unsigned char *)*v4) >> 3);
    if (2 * v22 > v21) {
      unint64_t v21 = 2 * v22;
    }
    if (v22 >= 0xB21642C8590B21) {
      unint64_t v23 = 0x1642C8590B21642;
    }
    else {
      unint64_t v23 = v21;
    }
    if (v23) {
      long long v24 = (char *)sub_10050F820(v7, v23);
    }
    else {
      long long v24 = 0;
    }
    long long v25 = &v24[184 * v20];
    long long v26 = &v24[184 * v23];
    long long v27 = *a2;
    long long v28 = a2[1];
    long long v29 = a2[3];
    *((_OWORD *)v25 + 2) = a2[2];
    *((_OWORD *)v25 + 3) = v29;
    *(_OWORD *)long long v25 = v27;
    *((_OWORD *)v25 + 1) = v28;
    long long v30 = a2[4];
    long long v31 = a2[5];
    long long v32 = a2[7];
    *((_OWORD *)v25 + 6) = a2[6];
    *((_OWORD *)v25 + 7) = v32;
    *((_OWORD *)v25 + 4) = v30;
    *((_OWORD *)v25 + 5) = v31;
    long long v33 = a2[8];
    long long v34 = a2[9];
    long long v35 = a2[10];
    *((void *)v25 + 22) = *((void *)a2 + 22);
    *((_OWORD *)v25 + 9) = v34;
    *((_OWORD *)v25 + 10) = v35;
    *((_OWORD *)v25 + 8) = v33;
    long long v19 = v25 + 184;
    int v37 = (char *)*v4;
    char v36 = (char *)v4[1];
    if (v36 != *v4)
    {
      do
      {
        long long v38 = *(_OWORD *)(v36 - 184);
        long long v39 = *(_OWORD *)(v36 - 168);
        long long v40 = *(_OWORD *)(v36 - 152);
        *(_OWORD *)(v25 - 136) = *(_OWORD *)(v36 - 136);
        *(_OWORD *)(v25 - 152) = v40;
        *(_OWORD *)(v25 - 168) = v39;
        *(_OWORD *)(v25 - 184) = v38;
        long long v41 = *(_OWORD *)(v36 - 120);
        long long v42 = *(_OWORD *)(v36 - 104);
        long long v43 = *(_OWORD *)(v36 - 88);
        *(_OWORD *)(v25 - 72) = *(_OWORD *)(v36 - 72);
        *(_OWORD *)(v25 - 88) = v43;
        *(_OWORD *)(v25 - 104) = v42;
        *(_OWORD *)(v25 - 120) = v41;
        long long v44 = *(_OWORD *)(v36 - 56);
        long long v45 = *(_OWORD *)(v36 - 40);
        long long v46 = *(_OWORD *)(v36 - 24);
        *((void *)v25 - 1) = *((void *)v36 - 1);
        *(_OWORD *)(v25 - 24) = v46;
        *(_OWORD *)(v25 - 40) = v45;
        *(_OWORD *)(v25 - 56) = v44;
        v25 -= 184;
        v36 -= 184;
      }
      while (v36 != v37);
      char v36 = (char *)*v4;
    }
    *uint64_t v4 = v25;
    v4[1] = v19;
    _OWORD v4[2] = v26;
    if (v36) {
      operator delete(v36);
    }
  }
  else
  {
    long long v10 = *a2;
    long long v11 = a2[1];
    long long v12 = a2[3];
    *((_OWORD *)v5 + 2) = a2[2];
    *((_OWORD *)v5 + 3) = v12;
    *(_OWORD *)uint64_t v5 = v10;
    *((_OWORD *)v5 + 1) = v11;
    long long v13 = a2[4];
    long long v14 = a2[5];
    long long v15 = a2[7];
    *((_OWORD *)v5 + 6) = a2[6];
    *((_OWORD *)v5 + 7) = v15;
    *((_OWORD *)v5 + 4) = v13;
    *((_OWORD *)v5 + 5) = v14;
    long long v16 = a2[8];
    long long v17 = a2[9];
    long long v18 = a2[10];
    *((void *)v5 + 22) = *((void *)a2 + 22);
    *((_OWORD *)v5 + 9) = v17;
    *((_OWORD *)v5 + 10) = v18;
    *((_OWORD *)v5 + 8) = v16;
    long long v19 = v5 + 184;
  }
  v4[1] = v19;
  return a1;
}

uint64_t sub_1006FF744(uint64_t **a1, void *a2)
{
  uint64_t v3 = sub_100529674((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  uint64_t v4 = v3;
  sub_1000F0A30(a1, v3);
  operator delete(v4);
  return 1;
}

void sub_1006FF798()
{
}

void sub_1006FF844(void *a1, int *a2, void *a3)
{
  if (!*((unsigned char *)a1 + 108))
  {
    uint64_t v5 = a1 + 8;
    uint64_t v4 = a1[8];
    if (v4)
    {
      int v8 = *a2;
      uint64_t v9 = a1 + 8;
      do
      {
        int v10 = *(_DWORD *)(v4 + 32);
        BOOL v11 = v10 < v8;
        if (v10 >= v8) {
          long long v12 = (uint64_t *)v4;
        }
        else {
          long long v12 = (uint64_t *)(v4 + 8);
        }
        if (!v11) {
          uint64_t v9 = (void *)v4;
        }
        uint64_t v4 = *v12;
      }
      while (*v12);
      if (v9 != v5 && v8 >= *((_DWORD *)v9 + 8))
      {
        unint64_t v49 = v9;
        sub_1006FFDC8(a3);
        (*(void (**)(void *, int *, uint64_t, void *))(*a1 + 184))(a1, a2, v13, v9 + 10);
        long long v14 = (void *)v9[5];
        if (v14 != v9 + 6)
        {
          long long v15 = a1 + 11;
          long long v16 = a1 + 1;
          do
          {
            uint64_t v17 = *v15;
            if (!*v15) {
              goto LABEL_25;
            }
            int v18 = *((_DWORD *)v14 + 7);
            long long v19 = a1 + 11;
            do
            {
              int v20 = *(_DWORD *)(v17 + 32);
              BOOL v21 = v20 < v18;
              if (v20 >= v18) {
                unint64_t v22 = (uint64_t *)v17;
              }
              else {
                unint64_t v22 = (uint64_t *)(v17 + 8);
              }
              if (!v21) {
                long long v19 = (uint64_t *)v17;
              }
              uint64_t v17 = *v22;
            }
            while (*v22);
            if (v19 != v15 && (int v23 = *((_DWORD *)v19 + 8), v18 >= v23))
            {
              unint64_t v48 = v19;
              sub_1006FFC34(a1, (uint64_t)&v48, (uint64_t)&v49, a3);
              uint64_t v27 = a1[8];
              if (!v27) {
                return;
              }
              int v28 = *a2;
              long long v29 = v5;
              do
              {
                int v30 = *(_DWORD *)(v27 + 32);
                BOOL v31 = v30 < v28;
                if (v30 >= v28) {
                  long long v32 = (uint64_t *)v27;
                }
                else {
                  long long v32 = (uint64_t *)(v27 + 8);
                }
                if (!v31) {
                  long long v29 = (void *)v27;
                }
                uint64_t v27 = *v32;
              }
              while (*v32);
              if (v29 == v5 || v28 < *((_DWORD *)v29 + 8)) {
                return;
              }
              unint64_t v49 = v29;
              uint64_t v34 = v29[6];
              long long v14 = v29 + 6;
              uint64_t v33 = v34;
              if (v34)
              {
                long long v35 = v14;
                uint64_t v36 = v33;
                do
                {
                  int v37 = *(_DWORD *)(v36 + 28);
                  BOOL v38 = v37 < v23;
                  if (v37 >= v23) {
                    long long v39 = (uint64_t *)v36;
                  }
                  else {
                    long long v39 = (uint64_t *)(v36 + 8);
                  }
                  if (!v38) {
                    long long v35 = (void *)v36;
                  }
                  uint64_t v36 = *v39;
                }
                while (*v39);
                if (v35 == v14 || v23 < *((_DWORD *)v35 + 7))
                {
                  do
                  {
                    int v40 = *(_DWORD *)(v33 + 28);
                    BOOL v41 = v23 < v40;
                    if (v23 >= v40) {
                      long long v42 = (uint64_t *)(v33 + 8);
                    }
                    else {
                      long long v42 = (uint64_t *)v33;
                    }
                    if (v41) {
                      long long v14 = (void *)v33;
                    }
                    uint64_t v33 = *v42;
                  }
                  while (*v42);
                }
                else
                {
                  long long v43 = (void *)v35[1];
                  if (v43)
                  {
                    do
                    {
                      long long v14 = v43;
                      long long v43 = (void *)*v43;
                    }
                    while (v43);
                  }
                  else
                  {
                    do
                    {
                      long long v14 = (void *)v35[2];
                      BOOL v44 = *v14 == (void)v35;
                      long long v35 = v14;
                    }
                    while (!v44);
                  }
                }
              }
            }
            else
            {
LABEL_25:
              unint64_t v48 = a1 + 11;
              if (qword_102419580 != -1) {
                dispatch_once(&qword_102419580, &stru_1022C5130);
              }
              long long v24 = qword_102419588;
              if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_FAULT))
              {
                long long v25 = a1 + 1;
                if (*((char *)a1 + 31) < 0) {
                  long long v25 = (void *)*v16;
                }
                int v26 = *((_DWORD *)v14 + 7);
                *(_DWORD *)long long buf = 136446466;
                long long v55 = v25;
                __int16 v56 = 1026;
                int v57 = v26;
                _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_FAULT, "%{public}s; unknown client %{public}d",
                  buf,
                  0x12u);
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_102419580 != -1) {
                  dispatch_once(&qword_102419580, &stru_1022C5130);
                }
                long long v45 = a1 + 1;
                if (*((char *)a1 + 31) < 0) {
                  long long v45 = (void *)*v16;
                }
                int v46 = *((_DWORD *)v14 + 7);
                int v50 = 136446466;
                __int16 v51 = v45;
                __int16 v52 = 1026;
                int v53 = v46;
                unint64_t v47 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 0, "void CLNotifier<CLNetworkLocationProvider_Type::Notification, CLNetworkLocationProvider_Type::NotificationData>::invokeClientsWithData(const Notification_T &, CLCppContainer *) [Notification_T = CLNetworkLocationProvider_Type::Notification, NotificationData_T = CLNetworkLocationProvider_Type::NotificationData, NotificationInfo_T = char, RegistrationInfo_T = char]", "%s\n", v47);
                if (v47 != (char *)buf) {
                  free(v47);
                }
              }
            }
          }
          while (v14 != v49 + 6);
        }
      }
    }
  }
}

unsigned char *sub_1006FFC34(unsigned char *result, uint64_t a2, uint64_t a3, void *a4)
{
  if (!result[108])
  {
    uint64_t v7 = result;
    uint64_t v8 = *(unsigned int *)(*(void *)a2 + 32);
    LODWORD(v14) = *(_DWORD *)(*(void *)a3 + 32);
    sub_1006FFDC8(a4);
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)a3 + 80;
    long long v12 = (uint64_t **)(*(void *)a3 + 40);
    long long v15 = (int *)(*(void *)a2 + 32);
    uint64_t v13 = sub_1000EB1B8(v12, v15, (uint64_t)&unk_101D0B290, &v15);
    uint64_t result = (unsigned char *)(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t **))(*(void *)v7 + 192))(v7, v8, &v14, v10, v11, v13 + 4);
    if (result) {
      return [*(id *)(*(void *)a2 + 64) onNotification:*(unsigned int *)(*(void *)a3 + 32) withData:a4, v14];
    }
  }
  return result;
}

void sub_1006FFD2C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022C5300;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1006FFD4C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022C5300;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1006FFDA8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    operator delete();
  }
  return result;
}

void sub_1006FFDC8(void *a1)
{
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    sub_1006FFE64(a1);
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      sub_1007001F0(a1);
    }
  }
}

void sub_1006FFE64(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (!v2)
  {
    sub_1007005B0((uint64_t)&v6, a1);
    return;
  }
  if (getenv("_INTERSILO_UNIT_TEST"))
  {
    if (qword_102418F90 != -1) {
      dispatch_once(&qword_102418F90, &stru_1022C5340);
    }
    uint64_t v3 = qword_102418F98;
    if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 134218498;
      id v14 = v2;
      __int16 v15 = 2048;
      uint64_t v16 = 0;
      __int16 v17 = 2080;
      unint64_t v18 = 0x8000000101D2A9A4 & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418F90 == -1)
      {
LABEL_18:
        int v7 = 134218498;
        id v8 = v2;
        __int16 v9 = 2048;
        uint64_t v10 = 0;
        __int16 v11 = 2080;
        unint64_t v12 = 0x8000000101D2A9A4 & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v5 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLNetworkLocationProvider_Type::NotificationData, Callbacuint64_t k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:241:46)]", "%s\n", v5);
        if (v5 != (char *)buf) {
          free(v5);
        }
        return;
      }
LABEL_20:
      dispatch_once(&qword_102418F90, &stru_1022C5340);
      goto LABEL_18;
    }
  }
  else
  {
    if (qword_102418F90 != -1) {
      dispatch_once(&qword_102418F90, &stru_1022C5340);
    }
    uint64_t v4 = qword_102418F98;
    if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)long long buf = 134218498;
      id v14 = v2;
      __int16 v15 = 2048;
      uint64_t v16 = 0;
      __int16 v17 = 2080;
      unint64_t v18 = 0x8000000101D2A9A4 & 0x7FFFFFFFFFFFFFFFLL;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418F90 == -1) {
        goto LABEL_18;
      }
      goto LABEL_20;
    }
  }
}

id sub_1007001F0(void *a1)
{
  id v2 = [a1 binaryVersion];
  [a1 sizeOfType];
  if (v2)
  {
    if (getenv("_INTERSILO_UNIT_TEST"))
    {
      if (qword_102418F90 != -1) {
        dispatch_once(&qword_102418F90, &stru_1022C5340);
      }
      uint64_t v3 = qword_102418F98;
      if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 134218498;
        id v8 = v2;
        __int16 v9 = 2048;
        uint64_t v10 = 0;
        __int16 v11 = 2080;
        unint64_t v12 = 0x8000000101D2A9A4 & 0x7FFFFFFFFFFFFFFFLL;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
      }
      if (!sub_10013D1A0(115, 0)) {
        return 0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102418F90 == -1)
      {
LABEL_20:
        char v6 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "const Object_T *safeDecoder(CLCppContainer *, Callback) [Object_T = CLNetworkLocationProvider_Type::NotificationData, Callbacuint64_t k = (lambda at /Library/Caches/com.apple.xbs/Sources/CoreLocation/Shared/Intersilo/CLCppContainer.h:250:46)]", "%s\n", v6);
        if (v6 != (char *)buf) {
          free(v6);
        }
        return 0;
      }
    }
    else
    {
      if (qword_102418F90 != -1) {
        dispatch_once(&qword_102418F90, &stru_1022C5340);
      }
      uint64_t v5 = qword_102418F98;
      if (os_log_type_enabled((os_log_t)qword_102418F98, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)long long buf = 134218498;
        id v8 = v2;
        __int16 v9 = 2048;
        uint64_t v10 = 0;
        __int16 v11 = 2080;
        unint64_t v12 = 0x8000000101D2A9A4 & 0x7FFFFFFFFFFFFFFFLL;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Mismatch of versions between encoded (%llu) and decoded (%llu) objects! This is possibly because the version has changed on one side and possibly broken ABI compatibility. Please update your type for %s accordingly", buf, 0x20u);
      }
      if (!sub_10013D1A0(115, 0)) {
        return 0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102418F90 == -1) {
        goto LABEL_20;
      }
    }
    dispatch_once(&qword_102418F90, &stru_1022C5340);
    goto LABEL_20;
  }

  return [a1 cppObjectPtr];
}

void sub_1007005B0(uint64_t a1, void *a2)
{
  if (![a2 cppObjectPtr]
    && objc_msgSend(objc_msgSend(a2, "compatibilityInfo"), "isEqual:", &off_102392A20))
  {
    if (objc_msgSend(objc_msgSend(a2, "serialized"), "length") != (id)16)
    {
      uint64_t v3 = (void *)sub_101A6BD24();
      sub_100700638(v3);
      return;
    }
    [a2 setCppObjectPtr:[objc_msgSend(objc_msgSend(a2, "serialized"), "bytes") bytes]];
  }

  [a2 cppObjectPtr];
}

void sub_100700638(id a1)
{
  qword_102418F98 = (uint64_t)os_log_create("com.apple.locationd.Support", "Support");
}

uint64_t sub_100700668(uint64_t a1, int *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2) {
    return 0;
  }
  int v3 = *a2;
  uint64_t v4 = a1 + 8;
  do
  {
    int v5 = *(_DWORD *)(v2 + 32);
    BOOL v6 = v5 < v3;
    if (v5 >= v3) {
      int v7 = (uint64_t *)v2;
    }
    else {
      int v7 = (uint64_t *)(v2 + 8);
    }
    if (!v6) {
      uint64_t v4 = v2;
    }
    uint64_t v2 = *v7;
  }
  while (*v7);
  if (v4 == a1 + 8 || v3 < *(_DWORD *)(v4 + 32)) {
    return 0;
  }
  sub_1006FF4B0((uint64_t **)a1, (uint64_t *)v4);
  return 1;
}

void *sub_1007006D0(uint64_t a1, int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      __int16 v11 = *v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          __int16 v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  __int16 v11 = operator new(0x38uLL);
  *__int16 v11 = 0;
  v11[1] = v7;
  *((_DWORD *)v11 + 4) = **a4;
  *((unsigned char *)v11 + 20) = 0;
  *((unsigned char *)v11 + 32) = 0;
  _OWORD v11[3] = 0;
  *((_DWORD *)v11 + 9) = -2;
  *((_WORD *)v11 + 20) = 0;
  *((unsigned char *)v11 + 52) = 0;
  *(void *)((char *)v11 + 44) = 0;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_100100330(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(void *)a1;
  int v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    *__int16 v11 = *v20;
LABEL_38:
    *int v20 = v11;
    goto LABEL_39;
  }
  *__int16 v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*v11)
  {
    unint64_t v21 = *(void *)(*v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }
    else
    {
      v21 &= v8 - 1;
    }
    int v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_1007008FC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100700910(uint64_t a1, unint64_t *a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  if (!v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  do
  {
    unint64_t v5 = v2[4];
    BOOL v6 = v5 >= v3;
    if (v5 >= v3) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v2 + 1;
    }
    if (v6) {
      unint64_t v4 = v2;
    }
    uint64_t v2 = (void *)*v7;
  }
  while (*v7);
  if (v4 == (uint64_t *)(a1 + 8) || v3 < v4[4]) {
    return 0;
  }
  sub_1000F0A30((uint64_t **)a1, v4);
  operator delete(v4);
  return 1;
}

void sub_10070098C()
{
}

void sub_100700A4C(_Unwind_Exception *a1)
{
  void *v1 = 0;
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  _Unwind_Resume(a1);
}

void sub_100700AA4(uint64_t a1, uint64_t a2)
{
  ++*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  *(void *)&long long v2 = -1;
  *((void *)&v2 + 1) = -1;
  long long v3 = v2;
  long long v4 = v2;
  sub_1006BE28C(a2);
}

uint64_t sub_100700E2C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + ++*(_DWORD *)(result + 48) = 0;
  *(void *)(result + ++*(_DWORD *)(result + 48) = v2;
  return result;
}

uint64_t sub_100700E3C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  *(void *)(a1 + ++*(_DWORD *)(result + 48) = 0;
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void sub_100700E74()
{
}

void sub_100700F34(_Unwind_Exception *a1)
{
  void *v1 = 0;
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  _Unwind_Resume(a1);
}

void sub_100700F8C(uint64_t a1, uint64_t a2)
{
  ++*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  sub_10013FA84((uint64_t)v3);
  sub_1009B5840(a2);
}

void sub_100701390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1006302A8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1007013B4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + ++*(_DWORD *)(result + 48) = 0;
  *(void *)(result + ++*(_DWORD *)(result + 48) = v2;
  return result;
}

uint64_t sub_1007013C4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  *(void *)(a1 + ++*(_DWORD *)(result + 48) = 0;
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void sub_1007013FC()
{
}

void sub_1007014BC(_Unwind_Exception *a1)
{
  void *v1 = 0;
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  _Unwind_Resume(a1);
}

void sub_100701514(uint64_t a1, uint64_t a2)
{
  ++*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  int v5 = -1;
  uint64_t v3 = -1;
  uint64_t v4 = -1;
  uint64_t v2 = -1;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = -1;
  uint64_t v9 = -1;
  int v10 = -1;
  long long v11 = xmmword_101D23030;
  sub_100E07CAC(a2);
}

uint64_t sub_1007018BC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 48);
  *(void *)(a2 + ++*(_DWORD *)(result + 48) = 0;
  *(void *)(result + ++*(_DWORD *)(result + 48) = v2;
  return result;
}

uint64_t sub_1007018CC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 48);
  *(void *)(a1 + ++*(_DWORD *)(result + 48) = 0;
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void sub_100701904(uint64_t a1, uint64_t a2)
{
  ++*(_DWORD *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  uint64_t v2 = -1;
  int v3 = -1;
  uint64_t v4 = -1;
  uint64_t v5 = -1;
  int v6 = -1;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = -1;
  uint64_t v10 = -1;
  uint64_t v11 = -1;
  unint64_t v12 = 0xFFFFFFFF00000000;
  int v13 = -1;
  sub_10082F4E0(a2);
}

uint64_t sub_100701CC4(uint64_t a1)
{
  *(void *)a1 = off_1022C5398;
  uint64_t v2 = (id *)(a1 + 8);
  [*(id *)(a1 + 16) forget:*(void *)(a1 + 8)];

  [*v2 invalidate];
  *uint64_t v2 = 0;
  *(void *)(a1 + 16) = 0;
  return a1;
}

void sub_100701D34()
{
}

uint64_t sub_100701DE0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    operator delete();
  }
  return result;
}

void sub_100701E00()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241AD20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241AD20))
  {
    qword_10241AD08 = 0;
    qword_10241AD10 = 0;
    qword_10241AD18 = 0;
    __cxa_atexit((void (*)(void *))sub_1003BE920, &qword_10241AD08, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241AD20);
  }
}

void sub_100701E80()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241ADD0))
  {
    std::__shared_mutex_base::__shared_mutex_base(&stru_10241AD28);
    __cxa_atexit((void (*)(void *))sub_1003BE954, &stru_10241AD28, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241ADD0);
  }
}

void sub_100701F10(_Unwind_Exception *a1)
{
}

uint64_t sub_100701F28()
{
  qword_10248A270 = 0;
  *(void *)algn_10248A278 = 0;
  qword_10248A280 = 0;
  __cxa_atexit((void (*)(void *))sub_1006DA444, &qword_10248A270, (void *)&_mh_execute_header);
  qword_10248A290 = 0;
  unk_10248A298 = 0;
  qword_10248A288 = 0;
  __cxa_atexit((void (*)(void *))sub_1006DA478, &qword_10248A288, (void *)&_mh_execute_header);
  qword_10248A2A8 = 0;
  unk_10248A2B0 = 0;
  qword_10248A2A0 = 0;
  __cxa_atexit((void (*)(void *))sub_1006DA4B0, &qword_10248A2A0, (void *)&_mh_execute_header);
  qword_10248A2C0 = 0;
  unk_10248A2C8 = 0;
  qword_10248A2B8 = 0;
  __cxa_atexit((void (*)(void *))sub_1006DA4E4, &qword_10248A2B8, (void *)&_mh_execute_header);
  qword_10248A2D8 = 0;
  unk_10248A2E0 = 0;
  qword_10248A2D0 = 0;
  __cxa_atexit((void (*)(void *))sub_1006DA518, &qword_10248A2D0, (void *)&_mh_execute_header);
  qword_10248A2F0 = 0;
  unk_10248A2F8 = 0;
  qword_10248A2E8 = 0;

  return __cxa_atexit((void (*)(void *))sub_1006DA54C, &qword_10248A2E8, (void *)&_mh_execute_header);
}

uint64_t sub_100702CC8(uint64_t a1)
{
  *(void *)a1 = off_1022C53C0;
  id v2 = [[[*(id *)(a1 + 128) vendor] proxyForService:@"CLClientManager"];
  int v3 = (void **)(a1 + 72);
  if (*(char *)(a1 + 95) < 0)
  {
    sub_1000DC48C(__dst, *(void **)(a1 + 72), *(void *)(a1 + 80));
  }
  else
  {
    *(_OWORD *)__uuid_t dst = *(_OWORD *)v3;
    uint64_t v17 = *(void *)(a1 + 88);
  }
  uint64_t v4 = (void **)(a1 + 96);
  if (*(char *)(a1 + 119) < 0)
  {
    sub_1000DC48C(&__p, *(void **)(a1 + 96), *(void *)(a1 + 104));
  }
  else
  {
    long long __p = *(_OWORD *)v4;
    uint64_t v19 = *(void *)(a1 + 112);
  }
  uint64_t v20 = *(void *)(a1 + 120);
  [v2 checkWeakPersistentClientWithIdentifier:sub_100702F48((long long *)__dst)];
  if (SHIBYTE(v19) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v17) < 0) {
    operator delete(__dst[0]);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  uint64_t v5 = *(void **)(a1 + 240);
  id v6 = [v5 countByEnumeratingWithState:&v12 objects:v21 count:16];
  if (v6)
  {
    uint64_t v7 = *(void *)v13;
    do
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v13 != v7) {
          objc_enumerationMutation(v5);
        }
        [objc_msgSend(*(id *)(a1 + 240), "objectForKeyedSubscript:", *(void *)(*((void *)&v12 + 1) + 8 * i)) invalidate];
      }
      id v6 = [v5 countByEnumeratingWithState:&v12 objects:v21 count:16];
    }
    while (v6);
  }

  sub_1007031D8(a1 + 200);
  sub_1000D7D80(a1 + 160);
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*v4);
  }
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*v3);
  }
  uint64_t v9 = *(std::__shared_weak_count **)(a1 + 56);
  if (v9) {
    sub_1000DB0A0(v9);
  }
  sub_1000F5BB0(a1 + 24, *(void **)(a1 + 32));
  uint64_t v10 = *(std::__shared_weak_count **)(a1 + 16);
  if (v10) {
    std::__shared_weak_count::__release_weak(v10);
  }
  return a1;
}

void sub_100702F0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a2)
  {
    if (a22 < 0) {
      operator delete(__p);
    }
    sub_1001C7F8C(exception_object);
  }
  _Unwind_Resume(exception_object);
}

id sub_100702F48(long long *a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3321888768;
  _OWORD v4[2] = sub_1007032AC;
  void v4[3] = &unk_1022C5460;
  if (*((char *)a1 + 23) < 0)
  {
    sub_1000DC48C(&v5, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long v5 = *a1;
    uint64_t v6 = *((void *)a1 + 2);
  }
  if (*((char *)a1 + 47) < 0)
  {
    sub_1000DC48C(&__p, *((void **)a1 + 3), *((void *)a1 + 4));
  }
  else
  {
    long long __p = *(long long *)((char *)a1 + 24);
    uint64_t v8 = *((void *)a1 + 5);
  }
  uint64_t v9 = *((void *)a1 + 6);
  id v2 = [v4 copy];
  if (SHIBYTE(v8) < 0) {
    operator delete((void *)__p);
  }
  if (SHIBYTE(v6) < 0) {
    operator delete((void *)v5);
  }
  return v2;
}

void sub_10070304C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100703080(uint64_t result)
{
  if (*(unsigned char *)(result + 248))
  {
    uint64_t v1 = result;
    *(unsigned char *)(result + 2++*(_DWORD *)(result + 48) = 0;
    sub_1000E2F40((void *)(result + 160));
    sub_1000F5BB0(v1 + 24, *(void **)(v1 + 32));
    *(void *)(v1 + 24) = v1 + 32;
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    uint64_t v2 = *(void *)(v1 + 48);
    sub_10009AFB0(&v3, (void *)(v1 + 8));
    (*(void (**)(uint64_t, uint64_t *))(*(void *)v2 + 16))(v2, &v3);
    if (v4) {
      sub_1000DB0A0(v4);
    }
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 56))(v1);
  }
  return result;
}

void sub_100703144(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_10070315C(id a1)
{
  qword_102419528 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

void sub_10070318C()
{
  exception = __cxa_allocate_exception(8uLL);
}

uint64_t sub_1007031D8(uint64_t a1)
{
  sub_100703214(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_100703214(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      sub_100703258((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

void sub_100703258(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (v2) {
    sub_1000DB0A0(v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

unsigned char *sub_1007032AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(char *)(a1 + 55) < 0)
  {
    sub_1000DC48C((unsigned char *)a2, *(void **)(a1 + 32), *(void *)(a1 + 40));
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)(a1 + 32);
    *(void *)(a2 + 16) = *(void *)(a1 + 48);
  }
  uint64_t result = (unsigned char *)(a2 + 24);
  if (*(char *)(a1 + 79) < 0)
  {
    uint64_t result = sub_1000DC48C(result, *(void **)(a1 + 56), *(void *)(a1 + 64));
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)(a1 + 56);
    *(void *)(a2 + 40) = *(void *)(a1 + 72);
  }
  *(void *)(a2 + ++*(_DWORD *)(result + 48) = *(void *)(a1 + 80);
  return result;
}

void sub_100703330(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_10070334C(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 55) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 32), *(void **)(a2 + 32), *(void *)(a2 + 40));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + ++*(_DWORD *)(result + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v4;
  }
  uint64_t result = (unsigned char *)(a1 + 56);
  if (*(char *)(a2 + 79) < 0)
  {
    uint64_t result = sub_1000DC48C(result, *(void **)(a2 + 56), *(void *)(a2 + 64));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)uint64_t result = v6;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return result;
}

void sub_1007033DC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 55) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_1007033F8(uint64_t a1)
{
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  if (*(char *)(a1 + 55) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 32);
    operator delete(v2);
  }
}

uint64_t sub_100703450()
{
  uint64_t result = sub_1000EB1B0();
  if (result) {
    operator new();
  }
  return result;
}

void sub_1007034CC()
{
}

uint64_t sub_1007034F0()
{
  if (qword_10247D1E8 != -1) {
    dispatch_once(&qword_10247D1E8, &stru_1022C5490);
  }
  return qword_10248A308;
}

void sub_10070353C(void *a1)
{
  sub_1012F6FF8(a1);

  operator delete();
}

double sub_100703574(uint64_t a1, int a2, double *a3)
{
  if (a2)
  {
    if (qword_1024190E0 != -1) {
      dispatch_once(&qword_1024190E0, &stru_1022C5518);
    }
    long long v4 = qword_1024190E8;
    if (os_log_type_enabled((os_log_t)qword_1024190E8, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)long long buf = 67240192;
      LODWORD(v14) = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "[AccessoryProximity] Unrecognized interval notification %{public}d", buf, 8u);
    }
    double v5 = 0.0;
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024190E0 != -1) {
        dispatch_once(&qword_1024190E0, &stru_1022C5518);
      }
      long long v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual CFTimeInterval CLAccessoryProximity::minimumUpdateIntervalChanged(int, const CFTimeInterval &)", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
  }
  else
  {
    sub_1012F71A4(a1);
    if (qword_1024190E0 != -1) {
      dispatch_once(&qword_1024190E0, &stru_1022C5518);
    }
    uint64_t v9 = qword_1024190E8;
    if (os_log_type_enabled((os_log_t)qword_1024190E8, OS_LOG_TYPE_INFO))
    {
      double v10 = *a3;
      *(_DWORD *)long long buf = 134349056;
      double v14 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "[AccessoryProximity] Setting update interval to %{public}f", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024190E0 != -1) {
        dispatch_once(&qword_1024190E0, &stru_1022C5518);
      }
      long long v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual CFTimeInterval CLAccessoryProximity::minimumUpdateIntervalChanged(int, const CFTimeInterval &)", "%s\n", v12);
      if (v12 != (char *)buf) {
        free(v12);
      }
    }
    sub_100A29D64(*(void *)(a1 + 32), *a3);
    double v5 = *a3;
    if (*a3 > 0.0) {
      *(unsigned char *)(a1 + 30) = 0;
    }
  }
  return v5;
}

double sub_1007038AC(uint64_t a1, int a2, double *a3)
{
  if (a2)
  {
    if (qword_1024190E0 != -1) {
      dispatch_once(&qword_1024190E0, &stru_1022C5518);
    }
    long long v4 = qword_1024190E8;
    if (os_log_type_enabled((os_log_t)qword_1024190E8, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)long long buf = 67240192;
      LODWORD(v14) = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "[AccessoryProximity] Unrecognized batch notification %{public}d", buf, 8u);
    }
    double v5 = 0.0;
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024190E0 != -1) {
        dispatch_once(&qword_1024190E0, &stru_1022C5518);
      }
      long long v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual CFTimeInterval CLAccessoryProximity::minimumBatchIntervalChanged(int, const CFTimeInterval &)", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
  }
  else
  {
    sub_1012F71A4(a1);
    if (qword_1024190E0 != -1) {
      dispatch_once(&qword_1024190E0, &stru_1022C5518);
    }
    uint64_t v9 = qword_1024190E8;
    if (os_log_type_enabled((os_log_t)qword_1024190E8, OS_LOG_TYPE_INFO))
    {
      double v10 = *a3;
      *(_DWORD *)long long buf = 134349056;
      double v14 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "[AccessoryProximity] Setting batch interval to %{public}f", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024190E0 != -1) {
        dispatch_once(&qword_1024190E0, &stru_1022C5518);
      }
      long long v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual CFTimeInterval CLAccessoryProximity::minimumBatchIntervalChanged(int, const CFTimeInterval &)", "%s\n", v12);
      if (v12 != (char *)buf) {
        free(v12);
      }
    }
    sub_100A29E04(*(void *)(a1 + 32), *a3);
    return *a3;
  }
  return v5;
}

void sub_100703BD8(uint64_t a1, uint64_t a2)
{
  sub_1000E7BA0(a1, 0, a2, 32);
  if (!*(unsigned char *)(a1 + 30))
  {
    *(unsigned char *)(a1 + 30) = 1;
    int v15 = 0;
    sub_100134750(&v16, "N/A");
    sub_100134750(&v18, "N/A");
    memset(v20, 0, 122);
    if (sub_1012F72FC(a1, &v15))
    {
      *(_OWORD *)long long buf = 0u;
      memset(v14, 0, sizeof(v14));
      uint64_t v3 = (__IOHIDServiceClient *)sub_100A291D0(*(void *)(a1 + 32));
      if (sub_10149FE70(buf, v3, @"OSCL", (id)0x25))
      {
        uint64_t v4 = 0;
        double v5 = &v20[4];
        do
        {
          snprintf(v5, 0x25uLL, "%02x", buf[v4++]);
          v5 += 2;
        }
        while (v4 != 37);
      }
      uint64_t v11 = 0;
      v12[0] = 0;
      *(void *)((char *)v12 + 5) = 0;
      long long v6 = (__IOHIDServiceClient *)sub_100A291D0(*(void *)(a1 + 32));
      if (sub_10149FE70(&v11, v6, @"PDTC", (id)0x15))
      {
        uint64_t v7 = 0;
        uint64_t v8 = &v20[79];
        do
        {
          snprintf(v8, 0x15uLL, "%02x", *((unsigned __int8 *)&v12[-1] + v7++));
          v8 += 2;
        }
        while (v7 != 21);
      }
      sub_1000E7BA0(a1, 1, (uint64_t)&v15, 184);
    }
    else
    {
      if (qword_1024190E0 != -1) {
        dispatch_once(&qword_1024190E0, &stru_1022C5518);
      }
      uint64_t v9 = qword_1024190E8;
      if (os_log_type_enabled((os_log_t)qword_1024190E8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "[AccessoryProximity] Service not found!", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024190E0 != -1) {
          dispatch_once(&qword_1024190E0, &stru_1022C5518);
        }
        LOWORD(v11) = 0;
        double v10 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryProximity::onProximityData(const Sample &)", "%s\n", v10);
        if (v10 != (char *)buf) {
          free(v10);
        }
      }
    }
    if (v19 < 0) {
      operator delete(v18);
    }
    if (v17 < 0) {
      operator delete(v16);
    }
  }
}

void sub_100703F14(_Unwind_Exception *a1)
{
  sub_100703F54(v1 - 256);
  _Unwind_Resume(a1);
}

uint64_t sub_100703F54(uint64_t a1)
{
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_100703F98(uint64_t a1)
{
  DataValue = (unsigned __int8 *)IOHIDEventGetDataValue();
  uint64_t IntegerValue = IOHIDEventGetIntegerValue();
  if (DataValue) {
    BOOL v4 = IntegerValue == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    uint64_t v5 = IntegerValue;
    uint64_t v6 = IOHIDEventGetIntegerValue();
    uint64_t v7 = IOHIDEventGetIntegerValue();
    if (v7 == 65300 && v6 == 3)
    {
      unint64_t TimeStamp = IOHIDEventGetTimeStamp();
      double v9 = sub_1000D3D90(TimeStamp);
      uint64_t v10 = sub_10149F054();
      if (v5 == 10)
      {
        int v11 = *((unsigned __int16 *)DataValue + 4);
      }
      else
      {
        if (v5 != 8) {
          sub_101A6BEA4();
        }
        int v11 = 0;
      }
      int v14 = *DataValue;
      int v15 = DataValue[1];
      int v16 = *((__int16 *)DataValue + 2);
      int v17 = *((__int16 *)DataValue + 1);
      int v18 = *((__int16 *)DataValue + 3);
      if (qword_1024190E0 != -1) {
        dispatch_once(&qword_1024190E0, &stru_1022C5518);
      }
      char v19 = qword_1024190E8;
      if (os_log_type_enabled((os_log_t)qword_1024190E8, OS_LOG_TYPE_DEBUG))
      {
        int v20 = *DataValue;
        int v21 = DataValue[1];
        int v22 = DataValue[2];
        int v23 = DataValue[3];
        int v24 = DataValue[4];
        int v25 = DataValue[5];
        int v26 = DataValue[6];
        int v27 = DataValue[7];
        *(_DWORD *)long long buf = 67244032;
        *(_DWORD *)&uint8_t buf[4] = v14;
        *(_WORD *)&uint8_t buf[8] = 1026;
        *(_DWORD *)&buf[10] = v15;
        *(_WORD *)&buf[14] = 1026;
        *(_DWORD *)&uint8_t buf[16] = v16;
        *(_WORD *)&buf[20] = 1026;
        int v30 = v17;
        __int16 v31 = 1026;
        int v32 = v18;
        __int16 v33 = 1026;
        int v34 = v11;
        __int16 v35 = 2050;
        uint64_t v36 = v10;
        __int16 v37 = 2050;
        double v38 = v9;
        __int16 v39 = 1026;
        int v40 = v20;
        __int16 v41 = 1026;
        int v42 = v21;
        __int16 v43 = 1026;
        int v44 = v22;
        __int16 v45 = 1026;
        int v46 = v23;
        __int16 v47 = 1026;
        int v48 = v24;
        __int16 v49 = 1026;
        int v50 = v25;
        __int16 v51 = 1026;
        int v52 = v26;
        __int16 v53 = 1026;
        int v54 = v27;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "[AccessoryProximity] location_id,%{public}d,status,%{public}d,base,%{public}d,peak,%{public}d,temp,%{public}d,seq,%{public}d,sensorTime,%{public}llu,timestamp,%{public}20.20f,raw %{public}02x %{public}02x %{public}02x %{public}02x %{public}02x %{public}02x %{public}02x %{public}02x", buf, 0x6Au);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024190E0 != -1) {
          dispatch_once(&qword_1024190E0, &stru_1022C5518);
        }
        int v28 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLAccessoryProximity::onEventData(void *, void *, IOHIDEventRef)", "%s\n", v28);
        if (v28 != buf) {
          free(v28);
        }
      }
      *(double *)long long buf = v9;
      *(void *)&uint8_t buf[8] = v10;
      uint8_t buf[16] = v14;
      buf[17] = v15;
      *(_WORD *)&buf[20] = v16;
      *(_WORD *)&unsigned char buf[18] = v17;
      LOWORD(v30) = v18;
      HIWORD(v30) = v11;
      sub_100703BD8(a1, (uint64_t)buf);
    }
    else
    {
      if (qword_1024190E0 != -1) {
        dispatch_once(&qword_1024190E0, &stru_1022C5518);
      }
      long long v12 = qword_1024190E8;
      if (os_log_type_enabled((os_log_t)qword_1024190E8, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)long long buf = 134349312;
        *(void *)&uint8_t buf[4] = v7;
        *(_WORD *)&unsigned char buf[12] = 2050;
        *(void *)&buf[14] = v6;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_FAULT, "[AccessoryProximity] Invalid usage page/usage: {%{public}ld,%{public}ld}", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024190E0 != -1) {
          dispatch_once(&qword_1024190E0, &stru_1022C5518);
        }
        long long v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLAccessoryProximity::onEventData(void *, void *, IOHIDEventRef)", "%s\n", v13);
        if (v13 != buf) {
          free(v13);
        }
      }
    }
  }
}

void sub_10070450C(id a1)
{
  qword_1024190E8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Accessory");
}

float *sub_10070453C(float *result, float a2, float a3)
{
  *uint64_t result = a2;
  result[1] = a3;
  return result;
}

void sub_100704544(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>)
{
  int64x2_t v10 = vdupq_n_s64(0xFFF0000000000000);
  *((int64x2_t *)a4 + 1) = v10;
  int v11 = (float64x2_t *)(a4 + 2);
  *a4 = 0;
  a4[1] = 0;
  *((int64x2_t *)a4 + 2) = v10;
  *((_OWORD *)a4 + 3) = 0u;
  long long v12 = a4 + 6;
  *((_OWORD *)a4 + 4) = 0u;
  *((_OWORD *)a4 + 5) = 0u;
  *((_DWORD *)a4 + 24) = 0;
  *(int64x2_t *)(a4 + 13) = v10;
  long long v13 = a4 + 13;
  *(int64x2_t *)(a4 + 15) = v10;
  *(int64x2_t *)(a4 + 17) = v10;
  *(int64x2_t *)(a4 + 19) = v10;
  *(int64x2_t *)(a4 + 21) = v10;
  *(int64x2_t *)(a4 + 23) = v10;
  *(int64x2_t *)(a4 + 25) = v10;
  *(int64x2_t *)(a4 + 27) = v10;
  *(int64x2_t *)(a4 + 29) = v10;
  a4[31] = 0xFFF0000000000000;
  *((_DWORD *)a4 + 76) = 0;
  *((_OWORD *)a4 + 17) = 0u;
  *((_OWORD *)a4 + 18) = 0u;
  *((_OWORD *)a4 + 16) = 0u;
  a4[39] = 0xFFF0000000000000;
  *((int64x2_t *)a4 + 20) = v10;
  *((int64x2_t *)a4 + 21) = v10;
  *((int64x2_t *)a4 + 22) = v10;
  *((int64x2_t *)a4 + 23) = v10;
  a4[48] = 0xFFF0000000000000;
  int v14 = a4 + 49;
  *(_OWORD *)(a4 + 49) = 0u;
  *(_OWORD *)(a4 + 51) = 0u;
  *(_OWORD *)(a4 + 53) = 0u;
  *((_DWORD *)a4 + 110) = 0;
  *((int64x2_t *)a4 + 28) = v10;
  *((int64x2_t *)a4 + 29) = v10;
  *((_OWORD *)a4 + 30) = 0u;
  *((_OWORD *)a4 + 31) = 0u;
  *((_OWORD *)a4 + 32) = 0u;
  *((_DWORD *)a4 + 132) = 0;
  a4[67] = 0xFFF0000000000000;
  *((int64x2_t *)a4 + 34) = v10;
  *((int64x2_t *)a4 + 35) = v10;
  *((int64x2_t *)a4 + 36) = v10;
  *((int64x2_t *)a4 + 37) = v10;
  *((int64x2_t *)a4 + 38) = v10;
  *((int64x2_t *)a4 + 39) = v10;
  *((int64x2_t *)a4 + 40) = v10;
  *((int64x2_t *)a4 + 41) = v10;
  *((int64x2_t *)a4 + 42) = v10;
  *((int64x2_t *)a4 + 43) = v10;
  *((int64x2_t *)a4 + 44) = v10;
  *((int64x2_t *)a4 + 45) = v10;
  *((int64x2_t *)a4 + 46) = v10;
  *((int64x2_t *)a4 + 47) = v10;
  a4[96] = 0xFFF0000000000000;
  *((unsigned char *)a4 + 776) = 0;
  long long __p = 0;
  BOOL v96 = 0;
  uint64_t v15 = a1 + 1;
  unint64_t v97 = 0;
  sub_100EBAC1C(a2, a3, (uint64_t)buf, a5);
  long long v16 = v112;
  *((_OWORD *)v13 + 6) = v111;
  *((_OWORD *)v13 + 7) = v16;
  *((_OWORD *)v13 + 8) = v113;
  v13[18] = v114;
  long long v17 = v108;
  *((_OWORD *)v13 + 2) = v107;
  *((_OWORD *)v13 + 3) = v17;
  long long v18 = v110;
  *((_OWORD *)v13 + 4) = v109;
  *((_OWORD *)v13 + 5) = v18;
  long long v19 = *(_OWORD *)&buf[16];
  *(_OWORD *)long long v13 = *(_OWORD *)buf;
  *((_OWORD *)v13 + 1) = v19;
  sub_100EBA424(v15, (float64x2_t *)v13, a2, a3, (uint64_t)buf, a5);
  long long v20 = *(_OWORD *)&buf[16];
  *(_OWORD *)long long v12 = *(_OWORD *)buf;
  *((_OWORD *)v12 + 1) = v20;
  *((_OWORD *)v12 + 2) = v107;
  *((_DWORD *)v12 + 12) = v108;
  if (!*((_DWORD *)a4 + 24))
  {
    int v21 = a4 + 10;
    int v22 = v96;
    if ((unint64_t)v96 >= v97)
    {
      uint64_t v24 = (v96 - (unsigned char *)__p) >> 4;
      unint64_t v25 = v24 + 1;
      if ((unint64_t)(v24 + 1) >> 60) {
        goto LABEL_89;
      }
      uint64_t v26 = v97 - (void)__p;
      if ((uint64_t)(v97 - (void)__p) >> 3 > v25) {
        unint64_t v25 = v26 >> 3;
      }
      if ((unint64_t)v26 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v27 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v27 = v25;
      }
      if (v27) {
        int v28 = (char *)sub_1000C571C((uint64_t)&v97, v27);
      }
      else {
        int v28 = 0;
      }
      long long v29 = &v28[16 * v24];
      int v30 = &v28[16 * v27];
      *(_OWORD *)long long v29 = *v21;
      int v23 = v29 + 16;
      int v32 = (char *)__p;
      __int16 v31 = v96;
      if (v96 != __p)
      {
        do
        {
          *((_OWORD *)v29 - 1) = *((_OWORD *)v31 - 1);
          v29 -= 16;
          v31 -= 16;
        }
        while (v31 != v32);
        __int16 v31 = (char *)__p;
      }
      long long __p = v29;
      BOOL v96 = v23;
      unint64_t v97 = (unint64_t)v30;
      if (v31) {
        operator delete(v31);
      }
    }
    else
    {
      *(_OWORD *)BOOL v96 = *v21;
      int v23 = v22 + 16;
    }
    BOOL v96 = v23;
  }
  sub_100EF0E58(a2, (uint64_t)buf, a5);
  long long v33 = v108;
  *(_OWORD *)(a4 + 43) = v107;
  *(_OWORD *)(a4 + 45) = v33;
  *(_OWORD *)(a4 + 47) = v109;
  long long v34 = *(_OWORD *)&buf[16];
  *(_OWORD *)(a4 + 39) = *(_OWORD *)buf;
  *(_OWORD *)(a4 + 41) = v34;
  sub_100EF072C(a1 + 2, (float64x2_t *)(a4 + 39), a2, a3, (uint64_t)buf, a5);
  long long v35 = *(_OWORD *)&buf[16];
  *((_OWORD *)a4 + 16) = *(_OWORD *)buf;
  *((_OWORD *)a4 + 17) = v35;
  *((_OWORD *)a4 + 18) = v107;
  *((_DWORD *)a4 + 76) = v108;
  if (*((_DWORD *)a4 + 76)) {
    goto LABEL_37;
  }
  uint64_t v36 = a4 + 36;
  __int16 v37 = v96;
  if ((unint64_t)v96 >= v97)
  {
    uint64_t v39 = (v96 - (unsigned char *)__p) >> 4;
    unint64_t v40 = v39 + 1;
    if (!((unint64_t)(v39 + 1) >> 60))
    {
      uint64_t v41 = v97 - (void)__p;
      if ((uint64_t)(v97 - (void)__p) >> 3 > v40) {
        unint64_t v40 = v41 >> 3;
      }
      if ((unint64_t)v41 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v42 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v42 = v40;
      }
      if (v42) {
        __int16 v43 = (char *)sub_1000C571C((uint64_t)&v97, v42);
      }
      else {
        __int16 v43 = 0;
      }
      int v44 = &v43[16 * v39];
      __int16 v45 = &v43[16 * v42];
      *(_OWORD *)int v44 = *v36;
      double v38 = v44 + 16;
      __int16 v47 = (char *)__p;
      int v46 = v96;
      if (v96 != __p)
      {
        do
        {
          *((_OWORD *)v44 - 1) = *((_OWORD *)v46 - 1);
          v44 -= 16;
          v46 -= 16;
        }
        while (v46 != v47);
        int v46 = (char *)__p;
      }
      long long __p = v44;
      BOOL v96 = v38;
      unint64_t v97 = (unint64_t)v45;
      if (v46) {
        operator delete(v46);
      }
      goto LABEL_36;
    }
LABEL_89:
    sub_1001D7FD4();
  }
  *(_OWORD *)BOOL v96 = *v36;
  double v38 = v37 + 16;
LABEL_36:
  BOOL v96 = v38;
LABEL_37:
  *((double *)a4 + 2) = sub_100895838(a5, a1, a2);
  a4[3] = v48;
  a4[4] = v49;
  a4[5] = v50;
  sub_1008954E0(a1, v11);
  *((double *)a4 + 56) = sub_100EE58DC(a5, a1 + 3, a2, a3);
  a4[57] = v51;
  a4[58] = v52;
  a4[59] = v53;
  sub_100EE5348(a1 + 3, (float64x2_t *)a4 + 28, a2, a3, (uint64_t)buf, a5);
  long long v54 = *(_OWORD *)&buf[16];
  *(_OWORD *)int v14 = *(_OWORD *)buf;
  *((_OWORD *)v14 + 1) = v54;
  *((_OWORD *)v14 + 2) = v107;
  *((_DWORD *)v14 + 12) = v108;
  if (!*((_DWORD *)a4 + 110))
  {
    long long v55 = a4 + 53;
    __int16 v56 = v96;
    if ((unint64_t)v96 >= v97)
    {
      uint64_t v58 = (v96 - (unsigned char *)__p) >> 4;
      unint64_t v59 = v58 + 1;
      if ((unint64_t)(v58 + 1) >> 60) {
        goto LABEL_90;
      }
      uint64_t v60 = v97 - (void)__p;
      if ((uint64_t)(v97 - (void)__p) >> 3 > v59) {
        unint64_t v59 = v60 >> 3;
      }
      if ((unint64_t)v60 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v61 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v61 = v59;
      }
      if (v61) {
        long long v62 = (char *)sub_1000C571C((uint64_t)&v97, v61);
      }
      else {
        long long v62 = 0;
      }
      long long v63 = &v62[16 * v58];
      long long v64 = &v62[16 * v61];
      *(_OWORD *)long long v63 = *v55;
      int v57 = v63 + 16;
      long long v66 = (char *)__p;
      long long v65 = v96;
      if (v96 != __p)
      {
        do
        {
          *((_OWORD *)v63 - 1) = *((_OWORD *)v65 - 1);
          v63 -= 16;
          v65 -= 16;
        }
        while (v65 != v66);
        long long v65 = (char *)__p;
      }
      long long __p = v63;
      BOOL v96 = v57;
      unint64_t v97 = (unint64_t)v64;
      if (v65) {
        operator delete(v65);
      }
    }
    else
    {
      *(_OWORD *)BOOL v96 = *v55;
      int v57 = v56 + 16;
    }
    BOOL v96 = v57;
  }
  sub_1007081D0(a2, (uint64_t)buf, a5);
  long long v67 = v118;
  *(_OWORD *)(a4 + 91) = v117;
  *(_OWORD *)(a4 + 93) = v67;
  *(_OWORD *)(a4 + 95) = v119;
  long long v68 = v114;
  *(_OWORD *)(a4 + 83) = v113;
  *(_OWORD *)(a4 + 85) = v68;
  long long v69 = v116;
  *(_OWORD *)(a4 + 87) = v115;
  *(_OWORD *)(a4 + 89) = v69;
  long long v70 = v110;
  *(_OWORD *)(a4 + 75) = v109;
  *(_OWORD *)(a4 + 77) = v70;
  long long v71 = v112;
  *(_OWORD *)(a4 + 79) = v111;
  *(_OWORD *)(a4 + 81) = v71;
  long long v72 = *(_OWORD *)&buf[16];
  *(_OWORD *)(a4 + 67) = *(_OWORD *)buf;
  *(_OWORD *)(a4 + 69) = v72;
  long long v73 = v108;
  *(_OWORD *)(a4 + 71) = v107;
  *(_OWORD *)(a4 + 73) = v73;
  sub_100707764(a1 + 4, (float64x2_t *)(a4 + 67), a2, a3, (uint64_t)buf, a5);
  long long v75 = *(_OWORD *)&buf[16];
  *((_OWORD *)a4 + 30) = *(_OWORD *)buf;
  *((_OWORD *)a4 + 31) = v75;
  *((_OWORD *)a4 + 32) = v107;
  *((_DWORD *)a4 + 132) = v108;
  if (!*((_DWORD *)a4 + 132))
  {
    uint64_t v76 = a4 + 64;
    int v77 = v96;
    if ((unint64_t)v96 < v97)
    {
      *(_OWORD *)BOOL v96 = *v76;
      int v78 = v77 + 16;
LABEL_72:
      BOOL v96 = v78;
      goto LABEL_73;
    }
    uint64_t v79 = (v96 - (unsigned char *)__p) >> 4;
    unint64_t v80 = v79 + 1;
    if (!((unint64_t)(v79 + 1) >> 60))
    {
      uint64_t v81 = v97 - (void)__p;
      if ((uint64_t)(v97 - (void)__p) >> 3 > v80) {
        unint64_t v80 = v81 >> 3;
      }
      if ((unint64_t)v81 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v82 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v82 = v80;
      }
      if (v82) {
        uint64_t v83 = (char *)sub_1000C571C((uint64_t)&v97, v82);
      }
      else {
        uint64_t v83 = 0;
      }
      std::string::size_type v84 = &v83[16 * v79];
      int v85 = &v83[16 * v82];
      *(_OWORD *)std::string::size_type v84 = *v76;
      int v78 = v84 + 16;
      unint64_t v86 = (char *)__p;
      int v74 = v96;
      if (v96 != __p)
      {
        do
        {
          *((_OWORD *)v84 - 1) = *((_OWORD *)v74 - 1);
          v84 -= 16;
          v74 -= 16;
        }
        while (v74 != v86);
        int v74 = (char *)__p;
      }
      long long __p = v84;
      BOOL v96 = v78;
      unint64_t v97 = (unint64_t)v85;
      if (v74) {
        operator delete(v74);
      }
      goto LABEL_72;
    }
LABEL_90:
    sub_1001D7FD4();
  }
LABEL_73:
  if (!*((_DWORD *)a4 + 24) && !*((_DWORD *)a4 + 110) && !*((_DWORD *)a4 + 76))
  {
    double v87 = sub_100704DFC((uint64_t)v74, (double **)&__p);
    *(double *)a4 = v87;
    sub_100A1CFA4(a3, v87);
    a4[1] = v88;
    *((unsigned char *)a4 + 776) = 1;
  }
  if (qword_102418FA0 != -1) {
    dispatch_once(&qword_102418FA0, &stru_1022C5558);
  }
  __int16 v89 = qword_102418FA8;
  if (os_log_type_enabled((os_log_t)qword_102418FA8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v90 = *a4;
    uint64_t v91 = a4[1];
    *(_DWORD *)long long buf = 134349824;
    *(double *)&uint8_t buf[4] = a5;
    *(_WORD *)&unsigned char buf[12] = 2050;
    *(void *)&buf[14] = v90;
    *(_WORD *)&unsigned char buf[22] = 2050;
    *(void *)&unsigned char buf[24] = v91;
    LOWORD(v107) = 2050;
    *(void *)((char *)&v107 + 2) = (v96 - (unsigned char *)__p) >> 4;
    _os_log_impl((void *)&_mh_execute_header, v89, OS_LOG_TYPE_DEFAULT, "CLMobility::ModelFusion::Result,classificationEnd,%{public}.2f,rawSteadiness,%{public}.2f,walkingSteadiness,%{public}.2f,successfulModelCount,%{public}lu", buf, 0x2Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FA0 != -1) {
      dispatch_once(&qword_102418FA0, &stru_1022C5558);
    }
    uint64_t v92 = *a4;
    uint64_t v93 = a4[1];
    int v98 = 134349824;
    double v99 = a5;
    __int16 v100 = 2050;
    uint64_t v101 = v92;
    __int16 v102 = 2050;
    uint64_t v103 = v93;
    __int16 v104 = 2050;
    uint64_t v105 = (v96 - (unsigned char *)__p) >> 4;
    int v94 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "SteadinessModelFusion::Result CLMobility::SteadinessModelFusion::runSteadinessModel(CFAbsoluteTime, const std::vector<BoutMetrics> &, const CLBodyMetrics &) const", "%s\n", v94);
    if (v94 != buf) {
      free(v94);
    }
  }
  if (__p)
  {
    BOOL v96 = (char *)__p;
    operator delete(__p);
  }
}

void sub_100704DB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_100704DFC(uint64_t a1, double **a2)
{
  if (qword_102418FA0 != -1) {
    dispatch_once(&qword_102418FA0, &stru_1022C5558);
  }
  uint64_t v3 = qword_102418FA8;
  if (os_log_type_enabled((os_log_t)qword_102418FA8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v4 = ((char *)a2[1] - (char *)*a2) >> 4;
    *(_DWORD *)long long buf = 134349056;
    double v20 = *(double *)&v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "fuseLikelihoods using mean log odds fusion rule, modelLikelihoods count,%{public}lu", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FA0 != -1) {
      dispatch_once(&qword_102418FA0, &stru_1022C5558);
    }
    long long v18 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "double CLMobility::SteadinessModelFusion::fuseLikelihoods(const std::vector<FusionLikelihoods> &) const", "%s\n", v18);
    if (v18 != (char *)buf) {
      free(v18);
    }
  }
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  if (v6 == v5)
  {
    if (qword_102418FA0 != -1) {
      dispatch_once(&qword_102418FA0, &stru_1022C5558);
    }
    long long v16 = qword_102418FA8;
    if (os_log_type_enabled((os_log_t)qword_102418FA8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "No component models to fuse likelihoods", buf, 2u);
    }
    double v11 = -1.0;
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FA0 != -1) {
        dispatch_once(&qword_102418FA0, &stru_1022C5558);
      }
      uint64_t v15 = (uint8_t *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "double CLMobility::SteadinessModelFusion::fuseLikelihoods(const std::vector<FusionLikelihoods> &) const", "%s\n");
      goto LABEL_33;
    }
  }
  else
  {
    double v7 = 0.0;
    uint64_t v8 = v6;
    while (*v8 != 0.0)
    {
      double v9 = v8[1];
      if (v9 == 0.0) {
        break;
      }
      double v7 = v7 + log(*v8 / v9);
      v8 += 2;
      if (v8 == v5)
      {
        long double v10 = exp(v7 / (double)(unint64_t)(((char *)v5 - (char *)v6) >> 4));
        return v10 / (v10 + 1.0);
      }
    }
    if (qword_102418FA0 != -1) {
      dispatch_once(&qword_102418FA0, &stru_1022C5558);
    }
    long long v12 = qword_102418FA8;
    if (os_log_type_enabled((os_log_t)qword_102418FA8, OS_LOG_TYPE_FAULT))
    {
      double v13 = *v8;
      uint64_t v14 = *((void *)v8 + 1);
      *(_DWORD *)long long buf = 134349312;
      double v20 = v13;
      __int16 v21 = 2050;
      uint64_t v22 = v14;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_FAULT, "Unexpected model likelihood OK,%{public}.2f and/or NotOK,%{public}.2f", buf, 0x16u);
    }
    double v11 = -1.0;
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FA0 != -1) {
        dispatch_once(&qword_102418FA0, &stru_1022C5558);
      }
      uint64_t v15 = (uint8_t *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "double CLMobility::SteadinessModelFusion::fuseLikelihoods(const std::vector<FusionLikelihoods> &) const", "%s\n");
LABEL_33:
      if (v15 != buf) {
        free(v15);
      }
    }
  }
  return v11;
}

void sub_1007052B0(id a1)
{
  qword_102418FA8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Steadiness");
}

void sub_1007052E0(uint64_t a1, uint64_t a2)
{
  sub_100418AD4((uint64_t)v4, a2);
  *(void *)a1 = &off_1022C55E0;
  sub_100418A50(v4);
  *(void *)a1 = off_1022C5588;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0x3FF0000000000000;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0x404E000000000000;
  *(unsigned char *)(a1 + 136) = 0;
  sub_10070710C((void **)(a1 + 56));
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 72) = 0;
  memset(v5, 0, sizeof(v5));
  uint64_t v3 = (void **)v5;
  sub_10070704C(&v3);
  operator new();
}

void sub_1007056C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void **);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  sub_1007072F8((void **)va1);
  sub_10070704C((void ***)va);
  sub_1002CDF4C(v2);
  _Unwind_Resume(a1);
}

void sub_100705778()
{
}

void sub_100705784(void *a1, uint64_t a2, double a3)
{
  if (qword_102419260 != -1) {
    dispatch_once(&qword_102419260, &stru_1022C5600);
  }
  uint64_t v6 = qword_102419268;
  if (os_log_type_enabled((os_log_t)qword_102419268, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 134217984;
    double v17 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "CLExerciseMinuteIntensityEstimator::feedNatalie called, rawMets, %f", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419260 != -1) {
      dispatch_once(&qword_102419260, &stru_1022C5600);
    }
    uint64_t v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLExerciseMinuteIntensityEstimator::feedNatalie(double, const CLNatalieModelInput &)", "%s\n", v15);
    if (v15 != (char *)buf) {
      free(v15);
    }
  }
  sub_1007059DC(a1, a2);
  uint64_t v7 = (uint64_t *)a1[7];
  uint64_t v8 = (uint64_t *)a1[8];
  if (v7 != v8)
  {
    double v9 = 0.0;
    do
    {
      (*(void (**)(void))(*(void *)*v7 + 24))();
      uint64_t v10 = *v7++;
      double v11 = *(double *)(v10 + 40);
      if (v11 > v9) {
        double v9 = v11;
      }
    }
    while (v7 != v8);
    double v13 = (uint64_t *)a1[7];
    long long v12 = (uint64_t *)a1[8];
    while (v13 != v12)
    {
      uint64_t v14 = *v13++;
      (*(void (**)(uint64_t, double))(*(void *)v14 + 16))(v14, v9);
    }
  }
}

void sub_1007059DC(void *a1, uint64_t a2)
{
  int v30 = 1065353216;
  char v29 = 0;
  uint64_t v28 = 0;
  double v4 = *(double *)(a2 + 112);
  *(double *)&long long v26 = v4 - (*(double *)(a2 + 128) - *(double *)(a2 + 120));
  *((double *)&v26 + 1) = v4;
  sub_100706470((uint64_t)a1, a2, (float *)&v30, &v29);
  uint64_t v27 = v5;
  LODWORD(v28) = v30;
  BYTE4(v28) = *(unsigned char *)(a2 + 352);
  BYTE5(v28) = v29;
  if (v4 < v4 - *(double *)&v26)
  {
    if (qword_102419260 != -1) {
      dispatch_once(&qword_102419260, &stru_1022C5600);
    }
    uint64_t v6 = qword_102419268;
    if (os_log_type_enabled((os_log_t)qword_102419268, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 134218240;
      double v36 = v4;
      __int16 v37 = 2048;
      double v38 = v4 - *(double *)&v26;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Invalid timestamps, natalieModelInput computeTime is less than the duration, computeTime, %.3f, duration, %.3f", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419260 != -1) {
        dispatch_once(&qword_102419260, &stru_1022C5600);
      }
      int v31 = 134218240;
      double v32 = v4;
      __int16 v33 = 2048;
      double v34 = v4 - *(double *)&v26;
      uint64_t v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLExerciseMinuteIntensityEstimator::updateSampleBuffer(double, const CLNatalieModelInput &)", "%s\n", v7);
LABEL_31:
      if (v7 != (char *)buf) {
        free(v7);
      }
      return;
    }
    return;
  }
  if (*(double *)&v26 < v4)
  {
    uint64_t v8 = a1[6];
    if (!v8
      || *(double *)&v26 >= *(double *)(*(void *)(a1[2]
                                                  + (((unint64_t)(v8 + a1[5] - 1) >> 4) & 0xFFFFFFFFFFFFFF8))
                                      + 32 * ((v8 + a1[5] - 1) & 0x7F)
                                      + 8))
    {
      sub_100706594(a1 + 1, &v26);
      uint64_t v18 = a1[6];
      if (v18)
      {
        double v19 = *(double *)(*(void *)(a1[2] + (((unint64_t)(v18 + a1[5] - 1) >> 4) & 0xFFFFFFFFFFFFFF8))
                        + 32 * ((v18 + a1[5] - 1) & 0x7F)
                        + 8)
            + -310.0;
        do
        {
          unint64_t v20 = a1[5];
          if (*(double *)(*(void *)(a1[2] + ((v20 >> 4) & 0xFFFFFFFFFFFFFF8)) + 32 * (v20 & 0x7F) + 8) > v19) {
            break;
          }
          a1[6] = v18 - 1;
          a1[5] = v20 + 1;
          sub_1002D0514((uint64_t)(a1 + 1), 1);
          uint64_t v18 = a1[6];
        }
        while (v18);
      }
      return;
    }
    if (qword_102419260 != -1) {
      dispatch_once(&qword_102419260, &stru_1022C5600);
    }
    double v9 = qword_102419268;
    if (os_log_type_enabled((os_log_t)qword_102419268, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v10 = a1[6] + a1[5] - 1;
      double v11 = *(double *)(*(void *)(a1[2] + ((v10 >> 4) & 0xFFFFFFFFFFFFFF8)) + 32 * (v10 & 0x7F) + 8);
      *(_DWORD *)long long buf = 134218240;
      double v36 = v11;
      __int16 v37 = 2048;
      double v38 = *(double *)&v26;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Time rolled back, bufferEndTime, %.3f, newSampleStartTime, %.3f", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419260 != -1) {
        dispatch_once(&qword_102419260, &stru_1022C5600);
      }
      unint64_t v23 = a1[6] + a1[5] - 1;
      double v24 = *(double *)(*(void *)(a1[2] + ((v23 >> 4) & 0xFFFFFFFFFFFFFF8)) + 32 * (v23 & 0x7F) + 8);
      int v31 = 134218240;
      double v32 = v24;
      __int16 v33 = 2048;
      double v34 = *(double *)&v26;
      unint64_t v25 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLExerciseMinuteIntensityEstimator::updateSampleBuffer(double, const CLNatalieModelInput &)", "%s\n", v25);
      if (v25 != (char *)buf) {
        free(v25);
      }
    }
    long long v12 = (void **)a1[2];
    uint64_t v13 = a1[3];
    a1[6] = 0;
    unint64_t v14 = v13 - (void)v12;
    if (v14 >= 0x11)
    {
      do
      {
        operator delete(*v12);
        uint64_t v15 = a1[3];
        long long v12 = (void **)(a1[2] + 8);
        a1[2] = v12;
        unint64_t v14 = v15 - (void)v12;
      }
      while (v14 > 0x10);
    }
    if (v14 >> 3 == 1)
    {
      uint64_t v16 = 64;
    }
    else
    {
      if (v14 >> 3 != 2) {
        goto LABEL_40;
      }
      uint64_t v16 = 128;
    }
    a1[5] = v16;
LABEL_40:
    sub_100706594(a1 + 1, &v26);
    uint64_t v22 = a1[7];
    uint64_t v21 = a1[8];
    while (v22 != v21)
    {
      (*(void (**)(void))(**(void **)v22 + 32))();
      v22 += 8;
    }
    return;
  }
  if (qword_102419260 != -1) {
    dispatch_once(&qword_102419260, &stru_1022C5600);
  }
  double v17 = qword_102419268;
  if (os_log_type_enabled((os_log_t)qword_102419268, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)long long buf = 134218240;
    double v36 = *(double *)&v26;
    __int16 v37 = 2048;
    double v38 = v4;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "Sample start time is after sample end time, startTime, %.3f, endTime, %.3f", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419260 != -1) {
      dispatch_once(&qword_102419260, &stru_1022C5600);
    }
    int v31 = 134218240;
    double v32 = *(double *)&v26;
    __int16 v33 = 2048;
    double v34 = v4;
    uint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "void CLExerciseMinuteIntensityEstimator::updateSampleBuffer(double, const CLNatalieModelInput &)", "%s\n", v7);
    goto LABEL_31;
  }
}

void sub_100706094(uint64_t a1, float *a2)
{
  if (qword_102419260 != -1) {
    dispatch_once(&qword_102419260, &stru_1022C5600);
  }
  double v4 = qword_102419268;
  if (os_log_type_enabled((os_log_t)qword_102419268, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "CLExerciseMinuteIntensityEstimator::feedBodyMetrics called", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419260 != -1) {
      dispatch_once(&qword_102419260, &stru_1022C5600);
    }
    LOWORD(v16) = 0;
    double v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLExerciseMinuteIntensityEstimator::feedBodyMetrics(const CLBodyMetrics &)", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
  }
  sub_1007063F4(a2);
  double v14 = v5;
  uint64_t v15 = v6;
  double v7 = 1.0;
  if (v5 > 0.0) {
    double v7 = 4.40208912 / v5;
  }
  *(double *)(a1 + 80) = v7;
  uint64_t v8 = (dispatch_queue_t *)sub_10019F4CC();
  sub_100F2AEE0(v8, (uint64_t)&v14);
  if (qword_102419260 != -1) {
    dispatch_once(&qword_102419260, &stru_1022C5600);
  }
  double v9 = qword_102419268;
  if (os_log_type_enabled((os_log_t)qword_102419268, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 80);
    *(_DWORD *)long long buf = 134218496;
    double v23 = v14;
    __int16 v24 = 2048;
    uint64_t v25 = v10;
    __int16 v26 = 1024;
    int v27 = v15;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "CLExerciseMinuteIntensityEstimator::feedBodyMetrics, threshold, %f, scalingFactor, %f, thresholdSource, %d", buf, 0x1Cu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419260 != -1) {
      dispatch_once(&qword_102419260, &stru_1022C5600);
    }
    uint64_t v12 = *(void *)(a1 + 80);
    int v16 = 134218496;
    double v17 = v14;
    __int16 v18 = 2048;
    uint64_t v19 = v12;
    __int16 v20 = 1024;
    int v21 = v15;
    uint64_t v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLExerciseMinuteIntensityEstimator::feedBodyMetrics(const CLBodyMetrics &)", "%s\n", v13);
    if (v13 != (char *)buf) {
      free(v13);
    }
  }
}

double sub_1007063F4(float *a1)
{
  sub_100706EB0(a1);
  double result = v2;
  float v4 = a1[13];
  if (v4 != -1.0 && v2 > v4) {
    double result = v4;
  }
  if (result < 2.19999981) {
    double result = 2.19999981;
  }
  if (result > 4.40208912) {
    return 4.40208912;
  }
  return result;
}

uint64_t sub_100706470(uint64_t a1, uint64_t a2, float *a3, unsigned char *a4)
{
  if (((CLMotionActivity::isTypePedestrian() & 1) != 0
     || (CLMotionActivity::isTypeIndoorPedestrian() & 1) != 0
     || (*(_DWORD *)(a2 + 152) - 61) <= 1)
    && (sub_100EE45CC(a2) & 1) == 0)
  {
    goto LABEL_14;
  }
  if (*(unsigned char *)(a2 + 352))
  {
    int v8 = *(_DWORD *)(a2 + 152);
    if (v8 <= 2100)
    {
      if (v8 != 2022 && v8 != 2024)
      {
LABEL_14:
        float v9 = *(double *)(a1 + 80);
        *a3 = v9;
      }
    }
    else if (((v8 - 2101) > 0x31 || ((1 << (v8 - 53)) & 0x2000000000011) == 0) {
           && v8 != 15670)
    }
    {
      goto LABEL_14;
    }
  }
  uint64_t result = sub_10143A068(a1 + 88, a2, (uint64_t)v11);
  *a4 = v11[0];
  return result;
}

uint64_t sub_100706594(void *a1, _OWORD *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 16 * (v4 - v5) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_1007073A4(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  int v8 = (_OWORD *)(*(void *)(v5 + ((v7 >> 4) & 0xFFFFFFFFFFFFFF8)) + 32 * (v7 & 0x7F));
  long long v9 = a2[1];
  _OWORD *v8 = *a2;
  v8[1] = v9;
  uint64_t v10 = a1[4];
  uint64_t v11 = a1[5] + 1;
  a1[5] = v11;
  unint64_t v12 = v10 + v11;
  uint64_t v13 = a1[1];
  double v14 = (void *)(v13 + 8 * (v12 >> 7));
  uint64_t v15 = *v14 + 32 * (v12 & 0x7F);
  if (a1[2] == v13) {
    uint64_t v15 = 0;
  }
  if (v15 == *v14) {
    uint64_t v15 = *(v14 - 1) + 4096;
  }
  return v15 - 32;
}

void *sub_10070665C(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = off_1022B1D50;
  sub_100418AD4((uint64_t)(a1 + 1), a3);
  a1[5] = 0;
  a1[6] = a2;
  return a1;
}

uint64_t sub_1007066AC(uint64_t a1, double *a2, void *a3, uint64_t a4, double a5)
{
  uint64_t v5 = *(void **)(a1 + 48);
  uint64_t v6 = v5[5];
  if (!v6) {
    return 0;
  }
  double v12 = *a2;
  uint64_t v13 = v5[1];
  uint64_t v14 = v5[4] >> 7;
  if (*a2 == 0.0)
  {
    uint64_t v16 = *(void *)(v13 + 8 * v14);
    uint64_t v15 = v5[4] & 0x7FLL;
    double v12 = *(double *)(v16 + 32 * v15);
    *a2 = v12;
  }
  else
  {
    uint64_t v15 = v5[4] & 0x7FLL;
    uint64_t v16 = *(void *)(v13 + 8 * v14);
  }
  if (v12 >= *(double *)(v16 + 32 * v15))
  {
    unint64_t v20 = v5[4];
  }
  else
  {
    if (qword_102419260 != -1) {
      dispatch_once(&qword_102419260, &stru_1022C5600);
    }
    double v17 = qword_102419268;
    if (os_log_type_enabled((os_log_t)qword_102419268, OS_LOG_TYPE_ERROR))
    {
      double v18 = *a2;
      double v19 = *(double *)(*(void *)(*(void *)(*(void *)(a1 + 48) + 8)
                                  + ((*(void *)(*(void *)(a1 + 48) + 32) >> 4) & 0xFFFFFFFFFFFFFF8))
                      + 32 * (*(void *)(*(void *)(a1 + 48) + 32) & 0x7FLL));
      *(_DWORD *)long long buf = 134218240;
      double v52 = v18;
      __int16 v53 = 2048;
      double v54 = v19;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "operateOnWindow - windowStartTime is outside of our intensity buffer, windowStartTime, %.3f, bufferStartTime, %.3f", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419260 != -1) {
        dispatch_once(&qword_102419260, &stru_1022C5600);
      }
      uint64_t v50 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLExerciseMinuteIntensityEstimatorBase::operateOnWindow(CFTimeInterval, CFAbsoluteTime &, const CLExerciseMinuteIntensitySample *&, std::function<void (const CLExerciseMinuteIntensitySample &, CFTimeInterval)>) const", "%s\n", v50);
      if (v50 != (char *)buf) {
        free(v50);
      }
    }
    uint64_t v5 = *(void **)(a1 + 48);
    uint64_t v13 = v5[1];
    unint64_t v20 = v5[4];
    double v12 = *(double *)(*(void *)(v13 + ((v20 >> 4) & 0xFFFFFFFFFFFFFF8)) + 32 * (v20 & 0x7F));
    *a2 = v12;
    uint64_t v6 = v5[5];
  }
  unint64_t v21 = v20 + v6;
  if (*(double *)(*(void *)(v13 + (((v21 - 1) >> 4) & 0xFFFFFFFFFFFFFF8)) + 32 * ((v21 - 1) & 0x7F) + 8) - v12 < a5) {
    return 0;
  }
  uint64_t v22 = (void *)(v13 + 8 * (v21 >> 7));
  uint64_t v23 = v5[2];
  if (v23 == v13) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = *v22 + 32 * (v21 & 0x7F);
  }
  while (1)
  {
    uint64_t v26 = v5[1];
    uint64_t v27 = v23 == v26 ? 0 : *(void *)(v26 + ((v5[4] >> 4) & 0xFFFFFFFFFFFFFF8)) + 32 * (v5[4] & 0x7FLL);
    if (v24 == v27) {
      break;
    }
    uint64_t v28 = v24;
    if (v24 == *v22) {
      uint64_t v28 = *(v22 - 1) + 4096;
    }
    *a3 = v28 - 32;
    if (v24 == *v22)
    {
      uint64_t v32 = *(v22 - 1);
      double v29 = *(double *)(v32 + 4064);
      double v30 = *a2;
      uint64_t v31 = v32 + 4096;
      if (v29 <= *a2) {
        goto LABEL_31;
      }
    }
    else
    {
      double v29 = *(double *)(v24 - 32);
      double v30 = *a2;
      uint64_t v31 = v24;
      if (v29 <= *a2)
      {
        uint64_t v31 = v24;
LABEL_31:
        sub_100706D90(a4, v31 - 32, *(double *)(v31 - 24) - v30);
        uint64_t v5 = *(void **)(a1 + 48);
        uint64_t v26 = v5[1];
        uint64_t v23 = v5[2];
        break;
      }
    }
    sub_100706D90(a4, v31 - 32, *(double *)(v31 - 24) - v29);
    if (v24 == *v22)
    {
      uint64_t v33 = *--v22;
      uint64_t v24 = v33 + 4096;
    }
    v24 -= 32;
    uint64_t v5 = *(void **)(a1 + 48);
    uint64_t v23 = v5[2];
  }
  unint64_t v34 = v5[4] + v5[5];
  long long v35 = (void *)(v26 + 8 * (v34 >> 7));
  if (v23 == v26) {
    uint64_t v36 = 0;
  }
  else {
    uint64_t v36 = *v35 + 32 * (v34 & 0x7F);
  }
  double v37 = *a2 + a5;
  while (1)
  {
    uint64_t v38 = v23 == v26 ? 0 : *(void *)(v26 + ((v5[4] >> 4) & 0xFFFFFFFFFFFFFF8)) + 32 * (v5[4] & 0x7FLL);
    if (v36 == v38) {
      return 1;
    }
    if (v36 == *v35)
    {
      uint64_t v42 = *(v35 - 1);
      double v39 = *(double *)(v42 + 4064);
      if (v39 >= v37)
      {
        uint64_t v40 = v42 + 4096;
LABEL_58:
        sub_100706D90(a4, v40 - 32, -(*(double *)(v40 - 24) - v39));
        goto LABEL_59;
      }
      double v41 = *(double *)(v42 + 4072);
      if (v41 >= v37)
      {
        uint64_t v36 = v42 + 4096;
LABEL_63:
        sub_100706D90(a4, v36 - 32, v37 - v41);
        return 1;
      }
    }
    else
    {
      double v39 = *(double *)(v36 - 32);
      uint64_t v40 = v36;
      if (v39 >= v37) {
        goto LABEL_58;
      }
      double v41 = *(double *)(v36 - 24);
      if (v41 >= v37) {
        goto LABEL_63;
      }
    }
    if (qword_102419260 != -1) {
      dispatch_once(&qword_102419260, &stru_1022C5600);
    }
    __int16 v43 = qword_102419268;
    if (os_log_type_enabled((os_log_t)qword_102419268, OS_LOG_TYPE_ERROR))
    {
      uint64_t v44 = v36;
      if (v36 == *v35) {
        uint64_t v44 = *(v35 - 1) + 4096;
      }
      double v45 = *a2;
      uint64_t v47 = *(void *)(v44 - 32);
      uint64_t v46 = *(void *)(v44 - 24);
      *(_DWORD *)long long buf = 134219008;
      double v52 = v45;
      __int16 v53 = 2048;
      double v54 = v37;
      __int16 v55 = 2048;
      double v56 = a5;
      __int16 v57 = 2048;
      uint64_t v58 = v47;
      __int16 v59 = 2048;
      uint64_t v60 = v46;
      _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_ERROR, "operateOnWindow - our window is incomplete, this indicates there is a logic error, windowStartTime, %.3f, windowEndTime, %.3f, windowDuration, %.3f, sampleStartTime, %.3f, sampleEndTime, %.3f", buf, 0x34u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419260 != -1) {
        dispatch_once(&qword_102419260, &stru_1022C5600);
      }
      uint64_t v48 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLExerciseMinuteIntensityEstimatorBase::operateOnWindow(CFTimeInterval, CFAbsoluteTime &, const CLExerciseMinuteIntensitySample *&, std::function<void (const CLExerciseMinuteIntensitySample &, CFTimeInterval)>) const", "%s\n", v48);
      if (v48 != (char *)buf) {
        free(v48);
      }
    }
LABEL_59:
    if (v36 == *v35)
    {
      uint64_t v49 = *--v35;
      uint64_t v36 = v49 + 4096;
    }
    v36 -= 32;
    uint64_t v5 = *(void **)(a1 + 48);
    uint64_t v26 = v5[1];
    uint64_t v23 = v5[2];
  }
}

uint64_t sub_100706D90(uint64_t a1, uint64_t a2, double a3)
{
  double v5 = a3;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    sub_10015E48C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, double *))(*(void *)v3 + 48))(v3, a2, &v5);
}

uint64_t sub_100706DE4(uint64_t a1)
{
  uint64_t v3 = (void **)(a1 + 56);
  sub_10070704C(&v3);
  sub_1002CDF4C((void *)(a1 + 8));
  return a1;
}

void sub_100706E28(uint64_t a1)
{
  double v2 = (void **)(a1 + 56);
  sub_10070704C(&v2);
  sub_1002CDF4C((void *)(a1 + 8));
  operator delete();
}

void sub_100706E80(id a1)
{
  qword_102419268 = (uint64_t)os_log_create("com.apple.locationd.Motion", "ExerciseMinutes");
}

double sub_100706EB0(float *a1)
{
  double result = sub_100706F30(a1, (int *)&v3);
  *(float *)&double result = result;
  if (*(float *)&result >= 1.0)
  {
    float v2 = (float)((float)(*(float *)&result * -0.793) + (float)((float)(*(float *)&result * 0.3564) * *(float *)&result))
       + 3.142;
    if (v2 > 8.0) {
      return 8.0;
    }
    return v2;
  }
  return result;
}

double sub_100706F30(float *a1, int *a2)
{
  float v2 = a1[5];
  double v3 = a1[2];
  double v4 = dbl_101D2AB30[v2 <= 13.0];
  double v5 = v2 * -0.01 + 1.6;
  double v6 = fmin(v3 * 0.5 + 0.225, 1.0);
  if (v4 >= v6) {
    double v6 = v4;
  }
  double v7 = fmax(fmin(v5, 1.0), 0.7);
  double v8 = fmax(fmin(a1[3] / (v3 * v3) * -0.0125 + 1.425, 1.0), 0.9);
  if (v7 >= v6) {
    double v9 = v6;
  }
  else {
    double v9 = v7;
  }
  if (v8 < v9) {
    double v9 = v8;
  }
  if (v9 == 1.0)
  {
    *a2 = 0;
    return 3.2973001;
  }
  else
  {
    double v11 = fmax(v7 * v6 * v8, 0.9);
    if (v11 < v9) {
      double v9 = v11;
    }
    if (v9 == v11) {
      int v12 = 5;
    }
    else {
      int v12 = 1;
    }
    if (v9 == v8) {
      int v13 = 4;
    }
    else {
      int v13 = v12;
    }
    if (v9 == v6) {
      int v14 = 2;
    }
    else {
      int v14 = v13;
    }
    if (v9 == v7) {
      int v15 = 3;
    }
    else {
      int v15 = v14;
    }
    *a2 = v15;
    return v9 * 3.2973001;
  }
}

void sub_10070704C(void ***a1)
{
  float v2 = *a1;
  if (*v2)
  {
    sub_1007070A0(v2);
    double v3 = **a1;
    operator delete(v3);
  }
}

void *sub_1007070A0(void *result)
{
  uint64_t v1 = result;
  float v2 = (void *)*result;
  double v3 = (void *)result[1];
  while (v3 != v2)
  {
    double v4 = (void *)*--v3;
    double result = v4;
    *double v3 = 0;
    if (v4) {
      double result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
  }
  v1[1] = v2;
  return result;
}

void sub_10070710C(void **a1)
{
  if (*a1)
  {
    sub_1007070A0(a1);
    operator delete(*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t sub_100707148(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1007071C0((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1007071C0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    double v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_100707258((uint64_t)v13);
  return v11;
}

uint64_t sub_100707258(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100707290((void *)a1);
  }
  return a1;
}

void *sub_100707290(void *result)
{
  uint64_t v1 = *(void ***)(result[2] + 8);
  float v2 = *(void ***)(result[1] + 8);
  while (v1 != v2)
  {
    uint64_t result = *v1;
    void *v1 = 0;
    if (result) {
      uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
    ++v1;
  }
  return result;
}

void **sub_1007072F8(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void *sub_100707330(void *result, uint64_t a2)
{
  uint64_t v2 = result[2];
  if (v2 != a2)
  {
    double v4 = result;
    do
    {
      _OWORD v4[2] = v2 - 8;
      uint64_t result = *(void **)(v2 - 8);
      *(void *)(v2 - 8) = 0;
      if (result) {
        uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
      }
      uint64_t v2 = v4[2];
    }
    while (v2 != a2);
  }
  return result;
}

void sub_1007073A4(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x80;
  unint64_t v4 = v2 - 128;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    double v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)uint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      unint64_t v34 = (char *)sub_1000DA54C(v5, v33);
      long long v35 = &v34[8 * (v33 >> 2)];
      double v37 = &v34[8 * v36];
      uint64_t v38 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        uint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        double v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)double v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    double v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      double v9 = (char *)a1[1];
    }
    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      sub_10017F0B4(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    sub_1002D02D8((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    double v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      unint64_t v34 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v46);
      long long v35 = &v34[8 * (v46 >> 2)];
      double v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        uint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)uint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      __int16 v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        uint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  double v56 = a1 + 3;
  *(void *)&long long v54 = sub_1000DA54C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  __int16 v53 = operator new(0x1000uLL);
  sub_1000DA434(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1002D03F8((uint64_t)&v54, v27);
  }
  double v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_100707670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1007076BC()
{
  sub_100134750(qword_10247D1F0, "Acc800Fp");
  dword_10247D208 = 800;
  __cxa_atexit((void (*)(void *))sub_10058C198, qword_10247D1F0, (void *)&_mh_execute_header);
  sub_100134750(qword_10247D210, "DmFp");
  dword_10247D228 = 200;

  return __cxa_atexit((void (*)(void *))sub_10058C198, qword_10247D210, (void *)&_mh_execute_header);
}

void sub_100707764(uint64_t a1@<X0>, float64x2_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  *(_DWORD *)(a5 + ++*(_DWORD *)(result + 48) = 0;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)a5 = 0u;
  *(double *)(a5 + 16) = a6;
  if (sub_100707F24(a2->f64))
  {
    int v11 = 4;
  }
  else
  {
    if (qword_102418FA0 != -1) {
      dispatch_once(&qword_102418FA0, &stru_1022C5640);
    }
    uint64_t v12 = qword_102418FA8;
    if (os_log_type_enabled((os_log_t)qword_102418FA8, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Rejection: SteadinessModelHarmonic missing required feature inputs", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FA0 != -1) {
        dispatch_once(&qword_102418FA0, &stru_1022C5640);
      }
      double v41 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "SteadinessModel::Result CLMobility::SteadinessModelHarmonic::runSteadinessModel(CFAbsoluteTime, const Features &, const std::vector<BoutMetrics> &, const CLBodyMetrics &) const", "%s\n", v41);
      if (v41 != (char *)buf) {
        free(v41);
      }
    }
    *(_DWORD *)(a5 + ++*(_DWORD *)(result + 48) = 8;
    int v11 = 12;
  }
  if (!*(unsigned char *)(a4 + 57)) {
    *(_DWORD *)(a5 + ++*(_DWORD *)(result + 48) = v11;
  }
  sub_100708114(a1, a5, a3);
  double v13 = sub_100A1CE04(a2);
  *(double *)(a5 + 24) = v13;
  *(double *)(a5 + 32) = sub_100A1CF64(v13);
  *(void *)(a5 + 40) = v14;
  if (qword_102418FA0 != -1) {
    dispatch_once(&qword_102418FA0, &stru_1022C5640);
  }
  uint64_t v15 = qword_102418FA8;
  if (os_log_type_enabled((os_log_t)qword_102418FA8, OS_LOG_TYPE_DEFAULT))
  {
    float64_t v16 = *(double *)(a5 + 32);
    float64_t v17 = *(double *)(a5 + 40);
    float64_t v18 = *(double *)(a5 + 16);
    float64_t v19 = *(double *)(a5 + 24);
    int v20 = *(_DWORD *)(a5 + 48);
    int v21 = *(_DWORD *)(a5 + 8);
    int v22 = *(_DWORD *)(a5 + 12);
    *(_DWORD *)long long buf = 134350593;
    float64_t v43 = v18;
    __int16 v44 = 2050;
    float64_t v45 = v16;
    __int16 v46 = 2050;
    float64_t v47 = v17;
    __int16 v48 = 2049;
    float64_t v49 = v19;
    __int16 v50 = 1026;
    *(_DWORD *)uint64_t v51 = v20;
    *(_WORD *)&v51[4] = 1025;
    *(_DWORD *)&v51[6] = v21;
    LOWORD(v52) = 1025;
    *(_DWORD *)((char *)&v52 + 2) = v22;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "CLMobility::SteadinessModelHarmonic::Result,hkEndTime,%{public}.2f,likelihoodOK,%{public}.2f,likelihoodNotOK,%{public}.2f,rawSteadiness,%{private}.2f,rejectionStatus,%{public}d,numValidBouts7Days,%{private}d,numValidBouts28Days,%{private}d", buf, 0x3Cu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FA0 != -1) {
      dispatch_once(&qword_102418FA0, &stru_1022C5640);
    }
    uint64_t v39 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "SteadinessModel::Result CLMobility::SteadinessModelHarmonic::runSteadinessModel(CFAbsoluteTime, const Features &, const std::vector<BoutMetrics> &, const CLBodyMetrics &) const", "%s\n", v39);
    if (v39 != (char *)buf) {
      free(v39);
    }
  }
  if (qword_102418FA0 != -1) {
    dispatch_once(&qword_102418FA0, &stru_1022C5640);
  }
  uint64_t v23 = qword_102418FA8;
  if (os_log_type_enabled((os_log_t)qword_102418FA8, OS_LOG_TYPE_DEFAULT))
  {
    float64_t v24 = a2->f64[1];
    float64_t v43 = a2->f64[0];
    float64_t v45 = v24;
    float64_t v25 = a2[2].f64[0];
    float64_t v26 = a2[2].f64[1];
    float64_t v49 = a2[1].f64[1];
    *(float64_t *)uint64_t v51 = v25;
    float64_t v52 = v26;
    float64_t v27 = a2[4].f64[0];
    float64_t v28 = a2[4].f64[1];
    float64_t v56 = a2[3].f64[1];
    float64_t v58 = v27;
    float64_t v60 = v28;
    float64_t v29 = a2[6].f64[0];
    float64_t v30 = a2[6].f64[1];
    float64_t v64 = a2[5].f64[1];
    float64_t v66 = v29;
    float64_t v68 = v30;
    float64_t v31 = a2[8].f64[0];
    float64_t v32 = a2[8].f64[1];
    float64_t v72 = a2[7].f64[1];
    float64_t v74 = v31;
    float64_t v76 = v32;
    float64_t v33 = a2[10].f64[0];
    float64_t v34 = a2[10].f64[1];
    float64_t v80 = a2[9].f64[1];
    float64_t v82 = v33;
    float64_t v84 = v34;
    float64_t v35 = a2[12].f64[0];
    float64_t v88 = a2[11].f64[1];
    float64_t v90 = v35;
    float64_t v36 = a2[12].f64[1];
    float64_t v92 = a2[13].f64[0];
    float64_t v37 = a2[13].f64[1];
    float64_t v38 = a2[14].f64[1];
    float64_t v96 = a2[14].f64[0];
    float64_t v98 = v38;
    float64_t v100 = v36;
    float64_t v47 = a2[1].f64[0];
    float64_t v54 = a2[3].f64[0];
    float64_t v62 = a2[5].f64[0];
    float64_t v70 = a2[7].f64[0];
    float64_t v78 = a2[9].f64[0];
    float64_t v86 = a2[11].f64[0];
    float64_t v94 = v37;
    __int16 v44 = 2049;
    __int16 v46 = 2049;
    __int16 v48 = 2049;
    __int16 v50 = 2049;
    *(_WORD *)&v51[8] = 2049;
    __int16 v53 = 2049;
    __int16 v55 = 2049;
    __int16 v57 = 2049;
    __int16 v59 = 2049;
    __int16 v61 = 2049;
    __int16 v63 = 2049;
    __int16 v65 = 2049;
    __int16 v67 = 2049;
    __int16 v69 = 2049;
    __int16 v71 = 2049;
    __int16 v73 = 2049;
    __int16 v75 = 2049;
    __int16 v77 = 2049;
    __int16 v79 = 2049;
    __int16 v81 = 2049;
    __int16 v83 = 2049;
    __int16 v85 = 2049;
    __int16 v87 = 2049;
    __int16 v89 = 2049;
    __int16 v91 = 2049;
    __int16 v93 = 2049;
    __int16 v95 = 2049;
    __int16 v97 = 2049;
    __int16 v99 = 2049;
    *(_DWORD *)long long buf = 134290945;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "CLMobility::SteadinessModelHarmonic::Features, allBoutsStepIndexOfHarmonicityApCv,%{private}.2f,  allBoutsStepIndexOfHarmonicityApMean,%{private}.2f,allBoutsStepIndexOfHarmonicityApMedian,%{private}.2f, allBoutsStepIndexOfHarmonicityApQ5,%{private}.2f,allBoutsStepIndexOfHarmonicityApQ95,%{private}.2f, allBoutsStepIndexOfHarmonicityMlCv,%{private}.2f, allBoutsStepIndexOfHarmonicityMlMean,%{private}.2f, allBoutsStepIndexOfHarmonicityMlMedian,%{private}.2f, allBoutsStepIndexOfHarmonicityMlQ5,%{private}.2f, allBoutsStepIndexOfHarmonicityMlQ95,%{private}.2f, allBoutsStepIndexOfHarmonicityVtCv,%{private}.2f, allBoutsStepIndexOfHarmonicityVtMean,%{private}.2f, allBoutsStepIndexOfHarmonicityVtMedian,%{private}.2f,  allBoutsStepIndexOfHarmonicityVtQ5,%{private}.2f, allBoutsStepIndexOfHarmonicityVtQ95,%{private}.2f, allBoutsSwingIndexOfHarmonicityApCv,%{private}.2f, allBoutsSwingIndexOfHarmonicityApMean,%{private}.2f, allBoutsSwingIndexOfHarmonicityApMedian,%{private}.2f, allBoutsSwingIndexOfHarmonicityApQ5,%{private}.2f,allBoutsSwingIndexOfHarmonicityApQ95,%{private}.2f, allBoutsSwingIndexOfHarmonicityMlCv,%{private}.2f,allBoutsSwingIndexOfHarmonicityMlMean,%{private}.2f, allBoutsSwingIndexOfHarmonicityMlMedian,%{private}.2f,allBoutsSwingIndexOfHarmonicityMlQ5,%{private}.2f, allBoutsSwingIndexOfHarmonicityMlQ95,%{private}.2f,  allBoutsSwingIndexOfHarmonicityVtMean,%{private}.2f, allBoutsSwingIndexOfHarmonicityVtMedian,%{private}.2f, allBoutsSwingIndexOfHarmonicityVtQ5,%{private}.2f,allBoutsSwingIndexOfHarmonicityVtQ95,%{private}.2f,allBoutsSwingIndexOfHarmonicityVtCv,%{private}.2f", buf, 0x12Eu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FA0 != -1) {
      dispatch_once(&qword_102418FA0, &stru_1022C5640);
    }
    uint64_t v40 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "SteadinessModel::Result CLMobility::SteadinessModelHarmonic::runSteadinessModel(CFAbsoluteTime, const Features &, const std::vector<BoutMetrics> &, const CLBodyMetrics &) const", "%s\n", v40);
    if (v40 != (char *)buf) {
      free(v40);
    }
  }
}

BOOL sub_100707F24(double *a1)
{
  return *a1 != -INFINITY
      && a1[1] != -INFINITY
      && a1[2] != -INFINITY
      && a1[3] != -INFINITY
      && a1[4] != -INFINITY
      && a1[5] != -INFINITY
      && a1[6] != -INFINITY
      && a1[7] != -INFINITY
      && a1[8] != -INFINITY
      && a1[9] != -INFINITY
      && a1[10] != -INFINITY
      && a1[11] != -INFINITY
      && a1[12] != -INFINITY
      && a1[13] != -INFINITY
      && a1[14] != -INFINITY
      && a1[15] != -INFINITY
      && a1[16] != -INFINITY
      && a1[17] != -INFINITY
      && a1[18] != -INFINITY
      && a1[19] != -INFINITY
      && a1[20] != -INFINITY
      && a1[21] != -INFINITY
      && a1[22] != -INFINITY
      && a1[23] != -INFINITY
      && a1[24] != -INFINITY
      && a1[25] != -INFINITY
      && a1[26] != -INFINITY
      && a1[27] != -INFINITY
      && a1[28] != -INFINITY
      && a1[29] != -INFINITY;
}

void sub_100708114(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  *(void *)(a2 + 8) = 0;
  uint64_t v4 = *a3;
  uint64_t v3 = a3[1];
  if (v3 == *a3)
  {
    int v5 = 0;
LABEL_16:
    *(_DWORD *)(a2 + 48) |= 0x20u;
    goto LABEL_17;
  }
  int v5 = 0;
  int v6 = 0;
  double v7 = *(double *)(a2 + 16);
  do
  {
    double v8 = *(double *)(v4 + 8);
    if (v8 > v7) {
      break;
    }
    if (*(_DWORD *)(v4 + 52)) {
      int v9 = 42;
    }
    else {
      int v9 = -1;
    }
    if ((v9 & *(_DWORD *)(v4 + 192)) == 0)
    {
      if (v8 > v7 + -2419200.0) {
        *(_DWORD *)(a2 + 12) = ++v5;
      }
      if (v8 > v7 + -604800.0) {
        *(_DWORD *)(a2 + 8) = ++v6;
      }
    }
    v4 += 224;
  }
  while (v4 != v3);
  if (v6 <= 14) {
    goto LABEL_16;
  }
LABEL_17:
  if (v5 <= 67) {
    *(_DWORD *)(a2 + 48) |= 0x10u;
  }
}

void sub_1007081D0(uint64_t *a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  int64x2_t v5 = vdupq_n_s64(0xFFF0000000000000);
  *(int64x2_t *)a2 = v5;
  *(int64x2_t *)(a2 + 16) = v5;
  *(int64x2_t *)(a2 + 32) = v5;
  *(int64x2_t *)(a2 + ++*(_DWORD *)(result + 48) = v5;
  *(int64x2_t *)(a2 + 64) = v5;
  *(int64x2_t *)(a2 + 80) = v5;
  *(int64x2_t *)(a2 + 96) = v5;
  *(int64x2_t *)(a2 + 112) = v5;
  *(int64x2_t *)(a2 + 128) = v5;
  *(int64x2_t *)(a2 + 144) = v5;
  *(int64x2_t *)(a2 + 160) = v5;
  *(int64x2_t *)(a2 + 176) = v5;
  *(int64x2_t *)(a2 + 192) = v5;
  *(int64x2_t *)(a2 + 208) = v5;
  *(int64x2_t *)(a2 + 224) = v5;
  __int16 v99 = 0;
  float64_t v100 = 0;
  uint64_t v101 = 0;
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(void *)long long buf = &v99;
  if (v6 == v7)
  {
    int v11 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    do
    {
      double v8 = *(double *)(v6 + 8);
      if (v8 < a3 && v8 >= a3 + -2419200.0) {
        sub_100708E0C((void ***)buf, (_OWORD *)v6);
      }
      v6 += 224;
    }
    while (v6 != v7);
    uint64_t v10 = (float *)v99;
    int v11 = v100;
  }
  long long __p = 0;
  __int16 v97 = 0;
  float64_t v98 = 0;
  __int16 v93 = 0;
  float64_t v94 = 0;
  __int16 v95 = 0;
  float64_t v90 = 0;
  __int16 v91 = 0;
  float64_t v92 = 0;
  __int16 v87 = 0;
  float64_t v88 = 0;
  __int16 v89 = 0;
  float64_t v84 = 0;
  __int16 v85 = 0;
  float64_t v86 = 0;
  __int16 v81 = 0;
  float64_t v82 = 0;
  for (uint64_t i = 0; v10 != v11; v10 += 56)
  {
    if (sub_100708D24((uint64_t)v10))
    {
      double v12 = v10[36];
      double v13 = v97;
      if (v97 >= v98)
      {
        uint64_t v15 = (double *)__p;
        uint64_t v16 = ((char *)v97 - (unsigned char *)__p) >> 3;
        unint64_t v17 = v16 + 1;
        if ((unint64_t)(v16 + 1) >> 61) {
          sub_1001D7FD4();
        }
        uint64_t v18 = (char *)v98 - (unsigned char *)__p;
        if (((char *)v98 - (unsigned char *)__p) >> 2 > v17) {
          unint64_t v17 = v18 >> 2;
        }
        if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v19 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v19 = v17;
        }
        if (v19)
        {
          int v20 = (char *)sub_1000DA54C((uint64_t)&v98, v19);
          uint64_t v15 = (double *)__p;
          double v13 = v97;
        }
        else
        {
          int v20 = 0;
        }
        int v21 = (double *)&v20[8 * v16];
        *int v21 = v12;
        uint64_t v14 = v21 + 1;
        while (v13 != v15)
        {
          uint64_t v22 = *((void *)v13-- - 1);
          *((void *)v21-- - 1) = v22;
        }
        long long __p = v21;
        __int16 v97 = v14;
        float64_t v98 = (double *)&v20[8 * v19];
        if (v15) {
          operator delete(v15);
        }
      }
      else
      {
        *__int16 v97 = v12;
        uint64_t v14 = v13 + 1;
      }
      __int16 v97 = v14;
      double v23 = v10[37];
      float64_t v24 = v94;
      if (v94 >= v95)
      {
        float64_t v26 = (double *)v93;
        uint64_t v27 = ((char *)v94 - (unsigned char *)v93) >> 3;
        unint64_t v28 = v27 + 1;
        if ((unint64_t)(v27 + 1) >> 61) {
          sub_1001D7FD4();
        }
        uint64_t v29 = (char *)v95 - (unsigned char *)v93;
        if (((char *)v95 - (unsigned char *)v93) >> 2 > v28) {
          unint64_t v28 = v29 >> 2;
        }
        if ((unint64_t)v29 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v30 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v30 = v28;
        }
        if (v30)
        {
          float64_t v31 = (char *)sub_1000DA54C((uint64_t)&v95, v30);
          float64_t v26 = (double *)v93;
          float64_t v24 = v94;
        }
        else
        {
          float64_t v31 = 0;
        }
        float64_t v32 = (double *)&v31[8 * v27];
        double *v32 = v23;
        float64_t v25 = v32 + 1;
        while (v24 != v26)
        {
          uint64_t v33 = *((void *)v24-- - 1);
          *((void *)v32-- - 1) = v33;
        }
        __int16 v93 = v32;
        float64_t v94 = v25;
        __int16 v95 = (double *)&v31[8 * v30];
        if (v26) {
          operator delete(v26);
        }
      }
      else
      {
        *float64_t v94 = v23;
        float64_t v25 = v24 + 1;
      }
      float64_t v94 = v25;
      double v34 = v10[38];
      float64_t v35 = v91;
      if (v91 >= v92)
      {
        float64_t v37 = (double *)v90;
        uint64_t v38 = ((char *)v91 - (unsigned char *)v90) >> 3;
        unint64_t v39 = v38 + 1;
        if ((unint64_t)(v38 + 1) >> 61) {
          sub_1001D7FD4();
        }
        uint64_t v40 = (char *)v92 - (unsigned char *)v90;
        if (((char *)v92 - (unsigned char *)v90) >> 2 > v39) {
          unint64_t v39 = v40 >> 2;
        }
        if ((unint64_t)v40 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v41 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v41 = v39;
        }
        if (v41)
        {
          uint64_t v42 = (char *)sub_1000DA54C((uint64_t)&v92, v41);
          float64_t v37 = (double *)v90;
          float64_t v35 = v91;
        }
        else
        {
          uint64_t v42 = 0;
        }
        float64_t v43 = (double *)&v42[8 * v38];
        *float64_t v43 = v34;
        float64_t v36 = v43 + 1;
        while (v35 != v37)
        {
          uint64_t v44 = *((void *)v35-- - 1);
          *((void *)v43-- - 1) = v44;
        }
        float64_t v90 = v43;
        __int16 v91 = v36;
        float64_t v92 = (double *)&v42[8 * v41];
        if (v37) {
          operator delete(v37);
        }
      }
      else
      {
        *__int16 v91 = v34;
        float64_t v36 = v35 + 1;
      }
      __int16 v91 = v36;
      double v45 = v10[39];
      __int16 v46 = v88;
      if (v88 >= v89)
      {
        __int16 v48 = (double *)v87;
        uint64_t v49 = ((char *)v88 - (unsigned char *)v87) >> 3;
        unint64_t v50 = v49 + 1;
        if ((unint64_t)(v49 + 1) >> 61) {
          sub_1001D7FD4();
        }
        uint64_t v51 = (char *)v89 - (unsigned char *)v87;
        if (((char *)v89 - (unsigned char *)v87) >> 2 > v50) {
          unint64_t v50 = v51 >> 2;
        }
        if ((unint64_t)v51 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v52 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v52 = v50;
        }
        if (v52)
        {
          __int16 v53 = (char *)sub_1000DA54C((uint64_t)&v89, v52);
          __int16 v48 = (double *)v87;
          __int16 v46 = v88;
        }
        else
        {
          __int16 v53 = 0;
        }
        float64_t v54 = (double *)&v53[8 * v49];
        *float64_t v54 = v45;
        float64_t v47 = v54 + 1;
        while (v46 != v48)
        {
          uint64_t v55 = *((void *)v46-- - 1);
          *((void *)v54-- - 1) = v55;
        }
        __int16 v87 = v54;
        float64_t v88 = v47;
        __int16 v89 = (double *)&v53[8 * v52];
        if (v48) {
          operator delete(v48);
        }
      }
      else
      {
        *float64_t v88 = v45;
        float64_t v47 = v46 + 1;
      }
      float64_t v88 = v47;
      double v56 = v10[40];
      __int16 v57 = v85;
      if (v85 >= v86)
      {
        __int16 v59 = (double *)v84;
        uint64_t v60 = ((char *)v85 - (unsigned char *)v84) >> 3;
        unint64_t v61 = v60 + 1;
        if ((unint64_t)(v60 + 1) >> 61) {
          sub_1001D7FD4();
        }
        uint64_t v62 = (char *)v86 - (unsigned char *)v84;
        if (((char *)v86 - (unsigned char *)v84) >> 2 > v61) {
          unint64_t v61 = v62 >> 2;
        }
        if ((unint64_t)v62 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v63 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v63 = v61;
        }
        if (v63)
        {
          float64_t v64 = (char *)sub_1000DA54C((uint64_t)&v86, v63);
          __int16 v59 = (double *)v84;
          __int16 v57 = v85;
        }
        else
        {
          float64_t v64 = 0;
        }
        __int16 v65 = (double *)&v64[8 * v60];
        *__int16 v65 = v56;
        float64_t v58 = v65 + 1;
        while (v57 != v59)
        {
          uint64_t v66 = *((void *)v57-- - 1);
          *((void *)v65-- - 1) = v66;
        }
        float64_t v84 = v65;
        __int16 v85 = v58;
        float64_t v86 = (double *)&v64[8 * v63];
        if (v59) {
          operator delete(v59);
        }
      }
      else
      {
        *__int16 v85 = v56;
        float64_t v58 = v57 + 1;
      }
      __int16 v85 = v58;
      double v67 = v10[41];
      float64_t v68 = v82;
      if (v82 >= i)
      {
        float64_t v70 = (double *)v81;
        uint64_t v71 = ((char *)v82 - (unsigned char *)v81) >> 3;
        unint64_t v72 = v71 + 1;
        if ((unint64_t)(v71 + 1) >> 61) {
          sub_1001D7FD4();
        }
        uint64_t v73 = (char *)i - (unsigned char *)v81;
        if (((char *)i - (unsigned char *)v81) >> 2 > v72) {
          unint64_t v72 = v73 >> 2;
        }
        if ((unint64_t)v73 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v74 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v74 = v72;
        }
        if (v74)
        {
          __int16 v75 = (char *)sub_1000DA54C((uint64_t)&i, v74);
          float64_t v70 = (double *)v81;
          float64_t v68 = v82;
        }
        else
        {
          __int16 v75 = 0;
        }
        float64_t v76 = (double *)&v75[8 * v71];
        *float64_t v76 = v67;
        __int16 v69 = v76 + 1;
        while (v68 != v70)
        {
          uint64_t v77 = *((void *)v68-- - 1);
          *((void *)v76-- - 1) = v77;
        }
        __int16 v81 = v76;
        float64_t v82 = v69;
        uint64_t i = (double *)&v75[8 * v74];
        if (v70) {
          operator delete(v70);
        }
      }
      else
      {
        *float64_t v82 = v67;
        __int16 v69 = v68 + 1;
      }
      float64_t v82 = v69;
    }
  }
  if (qword_102418FA0 != -1) {
    dispatch_once(&qword_102418FA0, &stru_1022C5640);
  }
  float64_t v78 = qword_102418FA8;
  if (os_log_type_enabled((os_log_t)qword_102418FA8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 134350848;
    *(double *)&uint8_t buf[4] = a3;
    __int16 v119 = 2050;
    uint64_t v120 = 0x6DB6DB6DB6DB6DB7 * (((char *)v100 - (unsigned char *)v99) >> 5);
    __int16 v121 = 2050;
    uint64_t v122 = ((char *)v97 - (unsigned char *)__p) >> 3;
    __int16 v123 = 2050;
    uint64_t v124 = ((char *)v94 - (unsigned char *)v93) >> 3;
    __int16 v125 = 2050;
    uint64_t v126 = ((char *)v91 - (unsigned char *)v90) >> 3;
    __int16 v127 = 2050;
    uint64_t v128 = ((char *)v88 - (unsigned char *)v87) >> 3;
    __int16 v129 = 2050;
    uint64_t v130 = ((char *)v85 - (unsigned char *)v84) >> 3;
    __int16 v131 = 2050;
    uint64_t v132 = ((char *)v82 - (unsigned char *)v81) >> 3;
    _os_log_impl((void *)&_mh_execute_header, v78, OS_LOG_TYPE_DEBUG, "SteadinessModelHarmonic::extractFeatures,classificationTime,%{public}.2f,numBouts,%{public}lu,numStepBoutsStepIndexOfHarmonicityAP,%{public}lu, numStepBoutsStepIndexOfHarmonicityML,%{public}lu, numStepBoutsStepIndexOfHarmonicityVT,%{public}lu, numStepBoutsSwingIndexOfHarmonicityAP,%{public}lu, numStepBoutsSwingIndexOfHarmonicityML,%{public}lu, numStepBoutsSwingIndexOfHarmonicityVT,%{public}lu", buf, 0x52u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102418FA0 != -1) {
      dispatch_once(&qword_102418FA0, &stru_1022C5640);
    }
    int v102 = 134350848;
    double v103 = a3;
    __int16 v104 = 2050;
    uint64_t v105 = 0x6DB6DB6DB6DB6DB7 * (((char *)v100 - (unsigned char *)v99) >> 5);
    __int16 v106 = 2050;
    uint64_t v107 = ((char *)v97 - (unsigned char *)__p) >> 3;
    __int16 v108 = 2050;
    uint64_t v109 = ((char *)v94 - (unsigned char *)v93) >> 3;
    __int16 v110 = 2050;
    uint64_t v111 = ((char *)v91 - (unsigned char *)v90) >> 3;
    __int16 v112 = 2050;
    uint64_t v113 = ((char *)v88 - (unsigned char *)v87) >> 3;
    __int16 v114 = 2050;
    uint64_t v115 = ((char *)v85 - (unsigned char *)v84) >> 3;
    __int16 v116 = 2050;
    uint64_t v117 = ((char *)v82 - (unsigned char *)v81) >> 3;
    float64_t v80 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "Features CLMobility::SteadinessModelHarmonic::extractFeatures(CFAbsoluteTime, const std::vector<BoutMetrics> &) const", "%s\n", v80);
    if (v80 != buf) {
      free(v80);
    }
  }
  if (__p != v97)
  {
    *(double *)a2 = sub_101136EBC((double **)&__p);
    *(double *)(a2 + 8) = sub_101136E84((double **)&__p);
    *(double *)(a2 + 16) = sub_1011370E4((uint64_t *)&__p);
    *(double *)(a2 + 24) = sub_10126DBE0((uint64_t)&__p, 5);
    *(double *)(a2 + 32) = sub_10126DBE0((uint64_t)&__p, 95);
  }
  if (v93 != v94)
  {
    *(double *)(a2 + 40) = sub_101136EBC((double **)&v93);
    *(double *)(a2 + ++*(_DWORD *)(result + 48) = sub_101136E84((double **)&v93);
    *(double *)(a2 + 56) = sub_1011370E4((uint64_t *)&v93);
    *(double *)(a2 + 64) = sub_10126DBE0((uint64_t)&v93, 5);
    *(double *)(a2 + 72) = sub_10126DBE0((uint64_t)&v93, 95);
  }
  if (v90 != v91)
  {
    *(double *)(a2 + 80) = sub_101136EBC((double **)&v90);
    *(double *)(a2 + 88) = sub_101136E84((double **)&v90);
    *(double *)(a2 + 96) = sub_1011370E4((uint64_t *)&v90);
    *(double *)(a2 + 104) = sub_10126DBE0((uint64_t)&v90, 5);
    *(double *)(a2 + 112) = sub_10126DBE0((uint64_t)&v90, 95);
  }
  if (v87 != v88)
  {
    *(double *)(a2 + 120) = sub_101136EBC((double **)&v87);
    *(double *)(a2 + 128) = sub_101136E84((double **)&v87);
    *(double *)(a2 + 136) = sub_1011370E4((uint64_t *)&v87);
    *(double *)(a2 + 144) = sub_10126DBE0((uint64_t)&v87, 5);
    *(double *)(a2 + 152) = sub_10126DBE0((uint64_t)&v87, 95);
  }
  if (v84 != v85)
  {
    *(double *)(a2 + 160) = sub_101136EBC((double **)&v84);
    *(double *)(a2 + 168) = sub_101136E84((double **)&v84);
    *(double *)(a2 + 176) = sub_1011370E4((uint64_t *)&v84);
    *(double *)(a2 + 184) = sub_10126DBE0((uint64_t)&v84, 5);
    *(double *)(a2 + 192) = sub_10126DBE0((uint64_t)&v84, 95);
  }
  __int16 v79 = (double *)v81;
  if (v81 != v82)
  {
    *(double *)(a2 + 200) = sub_101136EBC((double **)&v81);
    *(double *)(a2 + 208) = sub_101136E84((double **)&v81);
    *(double *)(a2 + 216) = sub_1011370E4((uint64_t *)&v81);
    *(double *)(a2 + 224) = sub_10126DBE0((uint64_t)&v81, 5);
    *(double *)(a2 + 232) = sub_10126DBE0((uint64_t)&v81, 95);
    __int16 v79 = (double *)v81;
  }
  if (v79)
  {
    float64_t v82 = v79;
    operator delete(v79);
  }
  if (v84)
  {
    __int16 v85 = (double *)v84;
    operator delete(v84);
  }
  if (v87)
  {
    float64_t v88 = (double *)v87;
    operator delete(v87);
  }
  if (v90)
  {
    __int16 v91 = (double *)v90;
    operator delete(v90);
  }
  if (v93)
  {
    float64_t v94 = (double *)v93;
    operator delete(v93);
  }
  if (__p)
  {
    __int16 v97 = (double *)__p;
    operator delete(__p);
  }
  if (v99)
  {
    float64_t v100 = (float *)v99;
    operator delete(v99);
  }
}

void sub_100708C68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33)
{
  if (__p) {
    operator delete(__p);
  }
  if (a17) {
    operator delete(a17);
  }
  if (a20) {
    operator delete(a20);
  }
  if (a23) {
    operator delete(a23);
  }
  if (a26) {
    operator delete(a26);
  }
  if (a29) {
    operator delete(a29);
  }
  if (a32) {
    operator delete(a32);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100708D24(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 52)) {
    int v1 = 42;
  }
  else {
    int v1 = -1;
  }
  if ((v1 & *(_DWORD *)(a1 + 192)) != 0) {
    return 0;
  }
  float v2 = *(float *)(a1 + 152);
  if (v2 < 0.0 || v2 > 1.0) {
    return 0;
  }
  float v4 = *(float *)(a1 + 164);
  return v4 >= 0.0 && v4 <= 1.0 && !sub_100708DB8((float *)a1);
}

void sub_100708D88(id a1)
{
  qword_102418FA8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Steadiness");
}

BOOL sub_100708DB8(float *a1)
{
  return a1[36] == 0.0 && a1[37] == 0.0 && a1[38] == 0.0 && a1[39] == 0.0 && a1[40] == 0.0 && a1[41] == 0.0;
}

void ***sub_100708E0C(void ***a1, _OWORD *a2)
{
  float v4 = *a1;
  int64x2_t v5 = (*a1)[1];
  uint64_t v6 = *a1;
  unint64_t v9 = (unint64_t)v6[2];
  uint64_t v7 = (uint64_t)(v6 + 2);
  unint64_t v8 = v9;
  if ((unint64_t)v5 >= v9)
  {
    uint64_t v21 = 0x6DB6DB6DB6DB6DB7 * (((char *)v5 - (unsigned char *)*v4) >> 5);
    unint64_t v22 = v21 + 1;
    if ((unint64_t)(v21 + 1) > 0x124924924924924) {
      sub_1001D7FD4();
    }
    unint64_t v23 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(v8 - (void)*v4) >> 5);
    if (2 * v23 > v22) {
      unint64_t v22 = 2 * v23;
    }
    if (v23 >= 0x92492492492492) {
      unint64_t v24 = 0x124924924924924;
    }
    else {
      unint64_t v24 = v22;
    }
    if (v24) {
      float64_t v25 = (char *)sub_1001F0E60(v7, v24);
    }
    else {
      float64_t v25 = 0;
    }
    float64_t v26 = &v25[224 * v21];
    uint64_t v27 = &v25[224 * v24];
    long long v28 = a2[1];
    *(_OWORD *)float64_t v26 = *a2;
    *((_OWORD *)v26 + 1) = v28;
    long long v29 = a2[2];
    long long v30 = a2[3];
    long long v31 = a2[5];
    *((_OWORD *)v26 + 4) = a2[4];
    *((_OWORD *)v26 + 5) = v31;
    *((_OWORD *)v26 + 2) = v29;
    *((_OWORD *)v26 + 3) = v30;
    long long v32 = a2[6];
    long long v33 = a2[7];
    long long v34 = a2[9];
    *((_OWORD *)v26 + 8) = a2[8];
    *((_OWORD *)v26 + 9) = v34;
    *((_OWORD *)v26 + 6) = v32;
    *((_OWORD *)v26 + 7) = v33;
    long long v35 = a2[10];
    long long v36 = a2[11];
    long long v37 = a2[13];
    *((_OWORD *)v26 + 12) = a2[12];
    *((_OWORD *)v26 + 13) = v37;
    *((_OWORD *)v26 + 10) = v35;
    *((_OWORD *)v26 + 11) = v36;
    int v20 = v26 + 224;
    unint64_t v39 = (char *)*v4;
    uint64_t v38 = (char *)v4[1];
    if (v38 != *v4)
    {
      do
      {
        long long v40 = *((_OWORD *)v38 - 13);
        *((_OWORD *)v26 - 14) = *((_OWORD *)v38 - 14);
        *((_OWORD *)v26 - 13) = v40;
        long long v41 = *((_OWORD *)v38 - 12);
        long long v42 = *((_OWORD *)v38 - 11);
        long long v43 = *((_OWORD *)v38 - 9);
        *((_OWORD *)v26 - 10) = *((_OWORD *)v38 - 10);
        *((_OWORD *)v26 - 9) = v43;
        *((_OWORD *)v26 - 12) = v41;
        *((_OWORD *)v26 - 11) = v42;
        long long v44 = *((_OWORD *)v38 - 8);
        long long v45 = *((_OWORD *)v38 - 7);
        long long v46 = *((_OWORD *)v38 - 5);
        *((_OWORD *)v26 - 6) = *((_OWORD *)v38 - 6);
        *((_OWORD *)v26 - 5) = v46;
        *((_OWORD *)v26 - 8) = v44;
        *((_OWORD *)v26 - 7) = v45;
        long long v47 = *((_OWORD *)v38 - 4);
        long long v48 = *((_OWORD *)v38 - 3);
        long long v49 = *((_OWORD *)v38 - 2);
        *(_OWORD *)(v26 - 19) = *(_OWORD *)(v38 - 19);
        *((_OWORD *)v26 - 3) = v48;
        *((_OWORD *)v26 - 2) = v49;
        *((_OWORD *)v26 - 4) = v47;
        v26 -= 224;
        v38 -= 224;
      }
      while (v38 != v39);
      uint64_t v38 = (char *)*v4;
    }
    *float v4 = v26;
    v4[1] = v20;
    _OWORD v4[2] = v27;
    if (v38) {
      operator delete(v38);
    }
  }
  else
  {
    long long v10 = a2[1];
    *int64x2_t v5 = *a2;
    v5[1] = v10;
    long long v11 = a2[2];
    long long v12 = a2[3];
    long long v13 = a2[5];
    void v5[4] = a2[4];
    v5[5] = v13;
    void v5[2] = v11;
    void v5[3] = v12;
    long long v14 = a2[6];
    long long v15 = a2[7];
    long long v16 = a2[9];
    v5[8] = a2[8];
    v5[9] = v16;
    v5[6] = v14;
    v5[7] = v15;
    long long v17 = a2[10];
    long long v18 = a2[11];
    long long v19 = a2[13];
    v5[12] = a2[12];
    v5[13] = v19;
    v5[10] = v17;
    v5[11] = v18;
    int v20 = v5 + 14;
  }
  v4[1] = v20;
  return a1;
}

double sub_100708FD8(uint64_t a1, double *a2)
{
  if (!*(unsigned char *)(a1 + 568))
  {
    if (*(unsigned char *)a1 && !sub_100074400(a1, a2))
    {
      if (qword_102419510 != -1) {
        dispatch_once(&qword_102419510, &stru_1022C5660);
      }
      float v4 = qword_102419518;
      if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
      {
        int v5 = *(_DWORD *)(a1 + 564);
        double v6 = *a2;
        *(_DWORD *)long long buf = 67240448;
        int v10 = v5;
        __int16 v11 = 2050;
        double v12 = v6;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "KFCV:,ID,%{public}d,mct,%{public}.3f,failed to predict on go to sleep call", buf, 0x12u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419510 != -1) {
          dispatch_once(&qword_102419510, &stru_1022C5660);
        }
        unint64_t v8 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void cllcf::LCFusionKalmanFilterCV::deviceEnteringSleepMode(const CFTimeInterval &)", "%s\n", v8);
        if (v8 != (char *)buf) {
          free(v8);
        }
      }
    }
    *(unsigned char *)(a1 + 568) = 1;
    double result = *a2;
    *(double *)(a1 + 576) = *a2;
  }
  return result;
}

void sub_1007091E0(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

void sub_1007091EC(uint64_t a1, double *a2)
{
  if (*(unsigned char *)(a1 + 568))
  {
    double v4 = *a2;
    double v5 = *(double *)(a1 + 576);
    if (qword_102419510 != -1) {
      dispatch_once(&qword_102419510, &stru_1022C5660);
    }
    double v6 = v4 - v5;
    uint64_t v7 = qword_102419518;
    if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
    {
      int v8 = *(_DWORD *)(a1 + 564);
      double v9 = *a2;
      *(_DWORD *)long long buf = 67240704;
      int v15 = v8;
      __int16 v16 = 2050;
      double v17 = v9;
      __int16 v18 = 2050;
      double v19 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "KFCV:,ID,%{public}d,mct,%{public}.3f,sleep wakeup after [s],%{public}.2f", buf, 0x1Cu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419510 == -1)
      {
LABEL_16:
        long long v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void cllcf::LCFusionKalmanFilterCV::deviceSleepWakeup(const CFTimeInterval &)", "%s\n", v13);
        if (v13 != (char *)buf) {
          free(v13);
        }
        goto LABEL_14;
      }
LABEL_18:
      dispatch_once(&qword_102419510, &stru_1022C5660);
      goto LABEL_16;
    }
  }
  else
  {
    if (qword_102419510 != -1) {
      dispatch_once(&qword_102419510, &stru_1022C5660);
    }
    int v10 = qword_102419518;
    if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
    {
      int v11 = *(_DWORD *)(a1 + 564);
      double v12 = *a2;
      *(_DWORD *)long long buf = 67240448;
      int v15 = v11;
      __int16 v16 = 2050;
      double v17 = v12;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "KFCV:,ID,%{public}d,mct,%{public}.3f,sleep wakeup called while state is not in sleep mode, waking up", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419510 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    }
  }
LABEL_14:
  *(unsigned char *)(a1 + 568) = 0;
  *(void *)(a1 + 576) = 0xBFF0000000000000;
}

void sub_10070955C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

uint64_t sub_100709568(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(unsigned char *)a1)
  {
    *a3 = *(void *)(a1 + 352);
    return sub_1000741C4(a1, a2);
  }
  else
  {
    if (qword_102419510 != -1) {
      dispatch_once(&qword_102419510, &stru_1022C5660);
    }
    double v5 = qword_102419518;
    if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
    {
      int v6 = *(_DWORD *)(a1 + 564);
      *(_DWORD *)long long buf = 67240192;
      int v9 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "KFCV:,ID,%{public}d,filter is not initialized", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419510 != -1) {
        dispatch_once(&qword_102419510, &stru_1022C5660);
      }
      uint64_t v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL cllcf::LCFusionKalmanFilterCV::getFilterLatestEstimate(LCFusionProviderLocation &, CFTimeInterval &)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
    return 0;
  }
}

void sub_100709774(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

uint64_t sub_100709780(uint64_t a1, double *a2, uint64_t *a3, _DWORD *a4)
{
  sub_100709830(a1);
  *(_DWORD *)(a1 + 344) = *a4;
  int v8 = (std::__shared_weak_count *)a3[1];
  v11[0] = *a3;
  v11[1] = (uint64_t)v8;
  if (v8)
  {
    atomic_fetch_add_explicit(&v8->__shared_weak_owners_, 1uLL, memory_order_relaxed);
    int v9 = sub_100025538(a1, a2, v11);
    std::__shared_weak_count::__release_weak(v8);
    if (v9)
    {
LABEL_3:
      sub_100073DE4(a1, (uint64_t)"filter init");
      return 1;
    }
  }
  else if (sub_100025538(a1, a2, v11))
  {
    goto LABEL_3;
  }
  return 0;
}

void sub_100709830(uint64_t a1)
{
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 344) = 4;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 352) = _Q0;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = _Q0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  memset_pattern16((void *)(a1 + 168), &unk_101D2AC00, 0x80uLL);
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(unsigned char *)(a1 + 336) = 0;
  *(void *)(a1 + 296) = 0;
  *(_OWORD *)(a1 + 304) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 320) = xmmword_101D1C320;
  if (*(unsigned char *)(a1 + 424)) {
    *(unsigned char *)(a1 + 424) = 0;
  }
  if (*(unsigned char *)(a1 + 440)) {
    *(unsigned char *)(a1 + 440) = 0;
  }
  *(void *)(a1 + 520) = 0xBFF0000000000000;
  *(void *)(a1 + 528) = 0;
  *(void *)(a1 + 536) = 0;
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 544);
  *(void *)(a1 + 544) = 0;
  if (v7) {
    sub_1000DB0A0(v7);
  }
  *(void *)(a1 + 552) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 560) = 0;
  *(unsigned char *)(a1 + 568) = 0;
  *(void *)(a1 + 576) = 0xBFF0000000000000;
}

void sub_100709908(uint64_t a1)
{
  long double v3 = *(double *)(a1 + 24);
  long double v2 = *(double *)(a1 + 32);
  double v4 = hypot(v3, v2);
  if (v4 >= 0.001)
  {
    double v5 = *(double *)(a1 + 368);
    double v6 = 0.0;
    if (v5 > 5.0)
    {
      double v7 = 1.0;
      double v8 = 1.0 - (v5 + -5.0) * (v5 + -5.0) / ((v5 + 5.0) * (v5 + 5.0));
      if (v8 <= 1.0) {
        double v9 = 1.0 - (v5 + -5.0) * (v5 + -5.0) / ((v5 + 5.0) * (v5 + 5.0));
      }
      else {
        double v9 = 1.0;
      }
      if (v8 >= 0.0) {
        double v10 = v9;
      }
      else {
        double v10 = 0.0;
      }
      double v11 = *(double *)(a1 + 376);
      if (v11 > 0.0)
      {
        double v12 = 1.0 - (v11 + -5.0) * (v11 + -5.0) / ((v11 + 5.0) * (v11 + 5.0));
        if (v12 <= 1.0) {
          double v7 = 1.0 - (v11 + -5.0) * (v11 + -5.0) / ((v11 + 5.0) * (v11 + 5.0));
        }
        if (v12 < 0.0) {
          double v7 = 0.0;
        }
        if (v7 != 0.0) {
          double v10 = v10 / v7;
        }
      }
      double v13 = v10 * v10;
      *(double *)(a1 + 376) = v5;
      *(long double *)(a1 + 24) = v3 * v13;
      *(long double *)(a1 + 32) = v2 * v13;
      double v6 = *(double *)(a1 + 392) - v4 * v13;
    }
    if (qword_102419510 != -1) {
      dispatch_once(&qword_102419510, &stru_1022C5660);
    }
    long long v14 = qword_102419518;
    if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
    {
      int v15 = *(_DWORD *)(a1 + 564);
      double v16 = *(double *)(a1 + 392);
      *(_DWORD *)long long buf = 67240960;
      int v22 = v15;
      __int16 v23 = 2050;
      double v24 = v16;
      __int16 v25 = 2050;
      double v26 = v16 - v6;
      __int16 v27 = 2050;
      double v28 = v6;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "KFCV:,ID,%{public}d,starting speed,%{public}.2f,current speed,%{public}.2f,total speed decay,%{public}.2f", buf, 0x26u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419510 != -1) {
        dispatch_once(&qword_102419510, &stru_1022C5660);
      }
      int v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void cllcf::LCFusionKalmanFilterCV::decaySpeed()", "%s\n", v20);
      if (v20 != (char *)buf) {
        free(v20);
      }
    }
    uint64_t v17 = *(int *)(a1 + 344);
    double v18 = 0.0;
    if (v17 <= 0xA) {
      double v18 = dbl_101D2AD50[v17];
    }
    if (v4 * v4 > v18)
    {
      double v19 = v6 * v6 * 0.125;
      *(double *)(a1 + 288) = v19 + *(double *)(a1 + 288);
      *(double *)(a1 + 2++*(_DWORD *)(result + 48) = v19 + *(double *)(a1 + 248);
    }
  }
}

void sub_100709C30(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

void sub_100709C3C(uint64_t a1, double *a2, int *a3)
{
  if (*(unsigned char *)(a1 + 40))
  {
    double v4 = *(double *)(a1 + 16);
    if (fabs(v4) >= 0.001)
    {
      double v6 = 0.0;
      if (*a2 > 5.0)
      {
        double v7 = 1.0;
        double v8 = 1.0 - (*a2 + -5.0) / (*a2 + 5.0);
        if (v8 <= 1.0) {
          double v7 = 1.0 - (*a2 + -5.0) / (*a2 + 5.0);
        }
        BOOL v9 = v8 < 0.0;
        double v10 = 0.0;
        if (!v9) {
          double v10 = v7;
        }
        double v6 = *(double *)(a1 + 32) - v4 * v10;
        *(double *)(a1 + 16) = v10 * v4;
      }
      if (qword_102419510 != -1) {
        dispatch_once(&qword_102419510, &stru_1022C5660);
      }
      double v11 = qword_102419518;
      if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v12 = *(void *)(a1 + 32);
        uint64_t v13 = *(void *)(a1 + 16);
        *(_DWORD *)long long buf = 134349568;
        uint64_t v18 = v12;
        __int16 v19 = 2050;
        uint64_t v20 = v13;
        __int16 v21 = 2050;
        double v22 = v6;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "KFCV:,starting altitudeRate,%{public}.2f,current altitudeRate,%{public}.2f,total altitudeRate decay,%{public}.2f", buf, 0x20u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419510 != -1) {
          dispatch_once(&qword_102419510, &stru_1022C5660);
        }
        double v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void cllcf::LCFusionKalmanFilterCV::LCFusionAltitudePropagator::decayAltitudeRate(const double &, const LCFusionDynamicsMode &)", "%s\n", v16);
        if (v16 != (char *)buf) {
          free(v16);
        }
      }
      uint64_t v14 = *a3;
      double v15 = 0.0;
      if (v14 <= 0xA) {
        double v15 = dbl_101D2AD50[v14] * dbl_101D2ADA8[v14];
      }
      if (*(double *)(a1 + 16) * *(double *)(a1 + 16) > v15) {
        *(double *)(a1 + 24) = v6 * v6 * 0.25 + *(double *)(a1 + 24);
      }
    }
  }
}

void sub_100709EF0(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

uint64_t sub_100709EFC(uint64_t a1, double *a2, uint64_t *a3, uint64_t a4)
{
  int v8 = *(_DWORD *)(a1 + 344);
  double v4 = (std::__shared_weak_count *)a3[1];
  v7[0] = *a3;
  v7[1] = (uint64_t)v4;
  if (!v4) {
    return sub_100709F74(a1, a2, &v8, v7, a4);
  }
  atomic_fetch_add_explicit(&v4->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  uint64_t v5 = sub_100709F74(a1, a2, &v8, v7, a4);
  std::__shared_weak_count::__release_weak(v4);
  return v5;
}

uint64_t sub_100709F74(uint64_t a1, double *a2, int *a3, uint64_t *a4, uint64_t a5)
{
  sub_100071848(a1, a2);
  (*(void (**)(uint64_t))(*(void *)a5 + 72))(a5);
  double v10 = (std::__shared_weak_count *)a4[1];
  if (v10)
  {
    double v11 = std::__shared_weak_count::lock(v10);
    if (v11)
    {
      uint64_t v12 = *a4;
      if (*a4)
      {
        if (*(double *)(v12 + 40) > 0.0)
        {
          double v13 = *a2 - *(double *)(v12 + 16);
          if (v13 < 0.0)
          {
            if (qword_102419510 != -1) {
              dispatch_once(&qword_102419510, &stru_1022C5660);
            }
            uint64_t v14 = qword_102419518;
            if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
            {
              int v15 = *(_DWORD *)(a1 + 564);
              double v16 = *a2;
              *(_DWORD *)long long buf = 67240704;
              int v80 = v15;
              __int16 v81 = 2050;
              double v82 = v16;
              __int16 v83 = 2050;
              double v84 = v13;
              _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate location skipped,dT <= 0,dt,%{public}.7f", buf, 0x1Cu);
            }
            if (!sub_10013D1A0(115, 2)) {
              goto LABEL_28;
            }
            bzero(buf, 0x65CuLL);
            if (qword_102419510 == -1)
            {
LABEL_62:
              int v51 = *(_DWORD *)(a1 + 564);
              double v52 = *a2;
              __dst[0] = 67240704;
              __dst[1] = v51;
              LOWORD(__dst[2]) = 2050;
              *(double *)((char *)&__dst[2] + 2) = v52;
              HIWORD(__dst[4]) = 2050;
              *(double *)&__dst[5] = v13;
              __int16 v53 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "BOOL cllcf::LCFusionKalmanFilterCV::propagateLocation(const CFTimeInterval &, const LCFusionDynamicsMode, const std::weak_ptr<const LCFusionProviderLocation>, LCFusionProviderLocation &)", "%s\n", v53);
              if (v53 != (char *)buf) {
                free(v53);
              }
LABEL_28:
              long long v25 = *(_OWORD *)(v12 + 8);
              long long v26 = *(_OWORD *)(v12 + 24);
              long long v27 = *(_OWORD *)(v12 + 40);
              *(_OWORD *)(a5 + 56) = *(_OWORD *)(v12 + 56);
              *(_OWORD *)(a5 + 40) = v27;
              *(_OWORD *)(a5 + 24) = v26;
              *(_OWORD *)(a5 + 8) = v25;
              long long v28 = *(_OWORD *)(v12 + 72);
              long long v29 = *(_OWORD *)(v12 + 88);
              long long v30 = *(_OWORD *)(v12 + 104);
              *(_OWORD *)(a5 + 116) = *(_OWORD *)(v12 + 116);
              *(_OWORD *)(a5 + 104) = v30;
              *(_OWORD *)(a5 + 88) = v29;
              *(_OWORD *)(a5 + 72) = v28;
              uint64_t v20 = 1;
LABEL_20:
              sub_1000DB0A0(v11);
              return v20;
            }
LABEL_67:
            dispatch_once(&qword_102419510, &stru_1022C5660);
            goto LABEL_62;
          }
          if (v13 < 0.001)
          {
            if (qword_102419510 != -1) {
              dispatch_once(&qword_102419510, &stru_1022C5660);
            }
            double v22 = qword_102419518;
            if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
            {
              int v23 = *(_DWORD *)(a1 + 564);
              double v24 = *a2;
              *(_DWORD *)long long buf = 67240704;
              int v80 = v23;
              __int16 v81 = 2050;
              double v82 = v24;
              __int16 v83 = 2050;
              double v84 = v13;
              _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate state skipped,small dt,%{public}.7f", buf, 0x1Cu);
            }
            if (!sub_10013D1A0(115, 2)) {
              goto LABEL_28;
            }
            bzero(buf, 0x65CuLL);
            if (qword_102419510 == -1) {
              goto LABEL_62;
            }
            goto LABEL_67;
          }
          memcpy(__dst, (const void *)a1, 0x151uLL);
          __dst[86] = *(_DWORD *)(a1 + 344);
          long long v31 = *(_OWORD *)(a1 + 492);
          long long v72 = *(_OWORD *)(a1 + 476);
          long long v73 = v31;
          *(_OWORD *)unint64_t v74 = *(_OWORD *)(a1 + 508);
          *(_OWORD *)&v74[12] = *(_OWORD *)(a1 + 520);
          long long v32 = *(_OWORD *)(a1 + 428);
          long long v68 = *(_OWORD *)(a1 + 412);
          long long v69 = v32;
          long long v33 = *(_OWORD *)(a1 + 460);
          long long v70 = *(_OWORD *)(a1 + 444);
          long long v71 = v33;
          long long v34 = *(_OWORD *)(a1 + 364);
          long long v64 = *(_OWORD *)(a1 + 348);
          long long v65 = v34;
          long long v35 = *(_OWORD *)(a1 + 396);
          long long v66 = *(_OWORD *)(a1 + 380);
          long long v67 = v35;
          uint64_t v75 = *(void *)(a1 + 536);
          long long v36 = *(std::__shared_weak_count **)(a1 + 544);
          float64_t v76 = v36;
          if (v36) {
            atomic_fetch_add_explicit(&v36->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          long long v37 = *(_OWORD *)(a1 + 568);
          long long v77 = *(_OWORD *)(a1 + 552);
          long long v78 = v37;
          v58[0] = v12;
          v58[1] = (uint64_t)v11;
          atomic_fetch_add_explicit(&v11->__shared_weak_owners_, 1uLL, memory_order_relaxed);
          int v57 = *a3;
          char v38 = sub_100709780(a1, (double *)(v12 + 16), v58, &v57);
          std::__shared_weak_count::__release_weak(v11);
          if (v38)
          {
            *(_DWORD *)(a1 + 344) = *a3;
            if (sub_100074400(a1, a2))
            {
              if (sub_100709568(a1, a5, (void *)(a5 + 16)))
              {
                uint64_t v20 = 1;
                goto LABEL_55;
              }
              if (qword_102419510 != -1) {
                dispatch_once(&qword_102419510, &stru_1022C5660);
              }
              long long v45 = qword_102419518;
              if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
              {
                int v46 = *(_DWORD *)(a1 + 564);
                double v47 = *a2;
                *(_DWORD *)long long buf = 67240448;
                int v80 = v46;
                __int16 v81 = 2050;
                double v82 = v47;
                _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEBUG, "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate location failed,get predicted location", buf, 0x12u);
              }
              if (!sub_10013D1A0(115, 2))
              {
LABEL_54:
                uint64_t v20 = 0;
LABEL_55:
                sub_10000E5C4(a1, (uint64_t)__dst);
                if (v76) {
                  sub_1000DB0A0(v76);
                }
                goto LABEL_20;
              }
              bzero(buf, 0x65CuLL);
              if (qword_102419510 == -1)
              {
LABEL_65:
                int v54 = *(_DWORD *)(a1 + 564);
                double v55 = *a2;
                int v59 = 67240448;
                int v60 = v54;
                __int16 v61 = 2050;
                double v62 = v55;
                double v56 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 2, "BOOL cllcf::LCFusionKalmanFilterCV::propagateLocation(const CFTimeInterval &, const LCFusionDynamicsMode, const std::weak_ptr<const LCFusionProviderLocation>, LCFusionProviderLocation &)", "%s\n", v56);
                if (v56 != (char *)buf) {
                  free(v56);
                }
                goto LABEL_54;
              }
            }
            else
            {
              if (qword_102419510 != -1) {
                dispatch_once(&qword_102419510, &stru_1022C5660);
              }
              long long v42 = qword_102419518;
              if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
              {
                int v43 = *(_DWORD *)(a1 + 564);
                double v44 = *a2;
                *(_DWORD *)long long buf = 67240448;
                int v80 = v43;
                __int16 v81 = 2050;
                double v82 = v44;
                _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEBUG, "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate location failed,predict", buf, 0x12u);
              }
              if (!sub_10013D1A0(115, 2)) {
                goto LABEL_54;
              }
              bzero(buf, 0x65CuLL);
              if (qword_102419510 == -1) {
                goto LABEL_65;
              }
            }
          }
          else
          {
            if (qword_102419510 != -1) {
              dispatch_once(&qword_102419510, &stru_1022C5660);
            }
            unint64_t v39 = qword_102419518;
            if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
            {
              int v40 = *(_DWORD *)(a1 + 564);
              double v41 = *a2;
              *(_DWORD *)long long buf = 67240448;
              int v80 = v40;
              __int16 v81 = 2050;
              double v82 = v41;
              _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEBUG, "KFCV:,ID,%{public}d,mct,%{public}.3f,propagate location failed,init", buf, 0x12u);
            }
            if (!sub_10013D1A0(115, 2)) {
              goto LABEL_54;
            }
            bzero(buf, 0x65CuLL);
            if (qword_102419510 == -1) {
              goto LABEL_65;
            }
          }
          dispatch_once(&qword_102419510, &stru_1022C5660);
          goto LABEL_65;
        }
      }
    }
  }
  else
  {
    double v11 = 0;
  }
  if (qword_102419510 != -1) {
    dispatch_once(&qword_102419510, &stru_1022C5660);
  }
  uint64_t v17 = qword_102419518;
  if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_ERROR))
  {
    int v18 = *(_DWORD *)(a1 + 564);
    double v19 = *a2;
    *(_DWORD *)long long buf = 67240448;
    int v80 = v18;
    __int16 v81 = 2050;
    double v82 = v19;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_ERROR, "KFCV:,ID,%{public}d,mct,%{public}.3f,#Error,propagate location failed,null or hunc <= 0", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419510 != -1) {
      dispatch_once(&qword_102419510, &stru_1022C5660);
    }
    int v48 = *(_DWORD *)(a1 + 564);
    double v49 = *a2;
    __dst[0] = 67240448;
    __dst[1] = v48;
    LOWORD(__dst[2]) = 2050;
    *(double *)((char *)&__dst[2] + 2) = v49;
    unint64_t v50 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "BOOL cllcf::LCFusionKalmanFilterCV::propagateLocation(const CFTimeInterval &, const LCFusionDynamicsMode, const std::weak_ptr<const LCFusionProviderLocation>, LCFusionProviderLocation &)", "%s\n", v50);
    if (v50 != (char *)buf) {
      free(v50);
    }
  }
  uint64_t v20 = 0;
  if (v11) {
    goto LABEL_20;
  }
  return v20;
}

void sub_10070AA90(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

uint64_t sub_10070AA9C(uint64_t a1, double *a2, double *a3, double *a4, double *a5, int *a6)
{
  uint64_t v10 = *a6;
  if (v10 > 0xA) {
    double v11 = 18000.0;
  }
  else {
    double v11 = dbl_101D2AE50[v10];
  }
  double v12 = *a2;
  if (*a2 > v11 || v12 < -500.0)
  {
    if (qword_102419510 != -1) {
      dispatch_once(&qword_102419510, &stru_1022C5660);
    }
    uint64_t v20 = qword_102419518;
    if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_ERROR))
    {
      double v21 = *a2;
      double v22 = *a3;
      double v23 = *a4;
      double v24 = *a5;
      *(_DWORD *)long long buf = 134284289;
      double v35 = v21;
      __int16 v36 = 2050;
      double v37 = v22;
      __int16 v38 = 2050;
      double v39 = v23;
      __int16 v40 = 2050;
      double v41 = v24;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "KFCV:,#Error,invalid altitude,alt,%{private}.2f,altUnc,%{public}.2f,altRate,%{public}.2f,altRateUnc,%{public}.2f", buf, 0x2Au);
    }
    if (!sub_10013D1A0(115, 0)) {
      return 0;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419510 != -1) {
      dispatch_once(&qword_102419510, &stru_1022C5660);
    }
    double v19 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "BOOL cllcf::LCFusionKalmanFilterCV::LCFusionAltitudePropagator::initialize(const double &, const double &, const double &, const double &, const LCFusionDynamicsMode &)", "%s\n", v19);
    goto LABEL_41;
  }
  if (*a5 <= 0.0) {
    goto LABEL_10;
  }
  double v13 = 4.0;
  if ((v10 - 1) <= 9) {
    double v13 = dbl_101D2AEA8[(int)v10 - 1];
  }
  if (*a5 > v13)
  {
LABEL_10:
    if (qword_102419510 != -1) {
      dispatch_once(&qword_102419510, &stru_1022C5660);
    }
    uint64_t v14 = qword_102419518;
    if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
    {
      double v15 = *a2;
      double v16 = *a3;
      double v17 = *a4;
      double v18 = *a5;
      *(_DWORD *)long long buf = 134284289;
      double v35 = v15;
      __int16 v36 = 2050;
      double v37 = v16;
      __int16 v38 = 2050;
      double v39 = v17;
      __int16 v40 = 2050;
      double v41 = v18;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "KFCV:,invalid altRateUnc,alt,%{private}.2f,altUnc,%{public}.2f,altRate,%{public}.2f,altRateUnc,%{public}.2f", buf, 0x2Au);
    }
    if (!sub_10013D1A0(115, 2)) {
      return 0;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419510 == -1) {
      goto LABEL_16;
    }
LABEL_43:
    dispatch_once(&qword_102419510, &stru_1022C5660);
LABEL_16:
    double v19 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL cllcf::LCFusionKalmanFilterCV::LCFusionAltitudePropagator::initialize(const double &, const double &, const double &, const double &, const LCFusionDynamicsMode &)", "%s\n", v19);
LABEL_41:
    if (v19 != (char *)buf) {
      free(v19);
    }
    return 0;
  }
  unsigned int v27 = v10 - 1;
  if (v27 > 9) {
    double v28 = 1600.0;
  }
  else {
    double v28 = dbl_101D2AEF8[v27];
  }
  if (*a4 * *a4 > v28)
  {
    if (qword_102419510 != -1) {
      dispatch_once(&qword_102419510, &stru_1022C5660);
    }
    long long v29 = qword_102419518;
    if (os_log_type_enabled((os_log_t)qword_102419518, OS_LOG_TYPE_DEBUG))
    {
      double v30 = *a2;
      double v31 = *a3;
      double v32 = *a4;
      double v33 = *a5;
      *(_DWORD *)long long buf = 134284289;
      double v35 = v30;
      __int16 v36 = 2050;
      double v37 = v31;
      __int16 v38 = 2050;
      double v39 = v32;
      __int16 v40 = 2050;
      double v41 = v33;
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "KFCV:,invalid altRate,alt,%{private}.2f,altUnc,%{public}.2f,altRate,%{public}.2f,altRateUnc,%{public}.2f", buf, 0x2Au);
    }
    if (!sub_10013D1A0(115, 2)) {
      return 0;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419510 == -1) {
      goto LABEL_16;
    }
    goto LABEL_43;
  }
  *(double *)a1 = v12;
  *(double *)(a1 + 8) = *a3 * *a3;
  *(double *)(a1 + 16) = *a4;
  *(double *)(a1 + 24) = *a5 * *a5;
  *(double *)(a1 + 32) = *a4;
  if (*a3 < 1.0) {
    *(void *)(a1 + 8) = 0x3FF0000000000000;
  }
  uint64_t v25 = 1;
  *(unsigned char *)(a1 + 40) = 1;
  return v25;
}

void sub_10070B0D0(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

void sub_10070B0DC(id a1)
{
  qword_102419518 = (uint64_t)os_log_create("com.apple.locationd.Position", "LCFusion");
}

void sub_10070B1BC(id a1)
{
  qword_10247D248 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLAccessoryLocationProviderSilo"];
}

uint64_t sub_10070B27C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10070B954;
  block[3] = &unk_10229FED8;
  void block[4] = a1;
  if (qword_10247D270 != -1) {
    dispatch_once(&qword_10247D270, block);
  }
  return qword_10248A310;
}

uint64_t sub_10070B478(uint64_t a1, int a2)
{
  uint64_t v2 = *(unsigned int *)(a1 + 2552);
  if (a2)
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    long double v3 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)long long buf = 67240192;
      int v7 = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "CLAccessory,getAccessoryTypeBitSet,%{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      uint64_t v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "int32_t CLAccessoryLocationProvider::getAccessoryTypeBitSet(const BOOL) const", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
  }
  return v2;
}

uint64_t sub_10070B6E8(uint64_t a1, int a2)
{
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C58B8);
  }
  double v4 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)long long buf = 134349312;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    __int16 v9 = 1026;
    int v10 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "CLAccessoryAWD,%{public}.1lf,RouteListener,navstate,%{public}d", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    CFAbsoluteTimeGetCurrent();
    double v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onNavigationStateChange(const CLClientNavigationState)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  return sub_101226BB0(a1 + 2560, a2);
}

void sub_10070B918(id a1)
{
  if (objc_opt_class())
  {
    sub_100103240();
    if ((sub_1001073D0() & 0x10) != 0) {
      byte_10247D260 = 1;
    }
  }
}

void sub_10070B954()
{
}

void sub_10070B9A0()
{
}

void sub_10070B9C4(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_1006B766C(a1, "accessory", a2);
  *(_DWORD *)(v3 + 116) = 0xFFFF;
  *(void *)uint64_t v3 = off_1022C56D0;
  *(void *)(v3 + 120) = 0;
  *(void *)(v3 + 128) = 0;
  *(_OWORD *)(v3 + 136) = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v9 = _Q0;
  *(_OWORD *)(v3 + 152) = _Q0;
  *(_OWORD *)(v3 + 168) = _Q0;
  *(_OWORD *)(v3 + 184) = _Q0;
  *(_DWORD *)(v3 + 200) = 0;
  *(void *)(v3 + 204) = 0xBFF0000000000000;
  *(void *)(v3 + 220) = 0;
  *(void *)(v3 + 212) = 0;
  *(_DWORD *)(v3 + 228) = 0;
  *(void *)(v3 + 232) = 0xBFF0000000000000;
  *(_DWORD *)(v3 + 240) = 0x7FFFFFFF;
  *(void *)(v3 + 244) = 0;
  *(void *)(v3 + 252) = 0;
  *(unsigned char *)(v3 + 268) = 0;
  *(void *)(v3 + 260) = 0;
  sub_1000DBC34(v3 + 272);
  *(_OWORD *)(a1 + 960) = 0u;
  *(_OWORD *)(a1 + 976) = 0u;
  *(_OWORD *)(a1 + 928) = 0u;
  *(_OWORD *)(a1 + 944) = 0u;
  *(_OWORD *)(a1 + 912) = 0u;
  *(_DWORD *)(a1 + 992) = 85;
  *(void *)(a1 + 1000) = 0xBFF0000000000000;
  *(_OWORD *)(a1 + 1008) = v9;
  *(_OWORD *)(a1 + 1024) = v9;
  sub_1005C3A50(a1 + 1040, *(void **)(a1 + 32), (uint64_t)sub_10070D07C, a1);
}

void sub_10070CD24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char **a12, uint64_t a13, uint64_t a14, void **a15, uint64_t *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v48 = *(void *)(v42 + 6224);
  *(void *)(v42 + 6224) = 0;
  if (v48) {
    (*(void (**)(uint64_t))(*(void *)v48 + 8))(v48);
  }
  sub_1000DB264(v42 + 6160, *a12);
  sub_100628000(v46);
  sub_100628000(a13);
  sub_100628000(v44);
  sub_10070EA20(a19);
  sub_10070EA64(a17);
  if (*(char *)(v42 + 1943) < 0) {
    operator delete(*a15);
  }
  sub_1000D7D80(v42 + 1840);
  sub_100EBBCE8(v43);
  sub_100718968(a16, 0);
  uint64_t v49 = *(void *)(v42 + 1344);
  *(void *)(v42 + 1344) = 0;
  if (v49) {
    (*(void (**)(uint64_t))(*(void *)v49 + 8))(v49);
  }
  uint64_t v50 = *(void *)(v42 + 1336);
  *(void *)(v42 + 1336) = 0;
  if (v50) {
    (*(void (**)(uint64_t))(*(void *)v50 + 8))(v50);
  }
  uint64_t v51 = *(void *)(v42 + 1328);
  *(void *)(v42 + 1328) = 0;
  if (v51) {
    (*(void (**)(uint64_t))(*(void *)v51 + 8))(v51);
  }
  uint64_t v52 = *(void *)(v42 + 1320);
  *(void *)(v42 + 1320) = 0;
  if (v52) {
    (*(void (**)(uint64_t))(*(void *)v52 + 8))(v52);
  }
  uint64_t v53 = *(void *)(v42 + 1312);
  *(void *)(v42 + 1312) = 0;
  if (v53) {
    (*(void (**)(uint64_t))(*(void *)v53 + 8))(v53);
  }
  if (*(char *)(v42 + 1311) < 0) {
    operator delete(*v45);
  }
  sub_1005C3B7C(a14);
  if (*(char *)(v42 + 983) < 0) {
    operator delete(*(void **)(v42 + 960));
  }
  if (*(char *)(v42 + 959) < 0) {
    operator delete(*(void **)(v42 + 936));
  }
  if (*(char *)(v42 + 935) < 0) {
    operator delete(*(void **)(v42 + 912));
  }
  int v54 = *(std::__shared_weak_count **)(v42 + 800);
  if (v54) {
    sub_1000DB0A0(v54);
  }
  sub_1006B7BEC(v42);
  _Unwind_Resume(a1);
}

void sub_10070D07C(uint64_t a1, int a2, uint64_t a3)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a3 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5880);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v8 = 1;
    uint64_t v5 = _os_activity_create((void *)&_mh_execute_header, "CL: CLAccessoryLocationProvider::onEphemerisUpdated", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v5, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5880);
    }
    double v6 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)long long buf = 68289538;
      int v10 = 0;
      __int16 v11 = 2082;
      double v12 = "";
      __int16 v13 = 2082;
      uint64_t v14 = "activity";
      __int16 v15 = 2050;
      uint64_t v16 = a3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLAccessoryLocationProvider::onEphemerisUpdated\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v8 = 0;
  }
  if (a2 == 2) {
    sub_100715758(a3);
  }
  if (v8) {
    os_activity_scope_leave(&state);
  }
}

void sub_10070D234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10070D254(uint64_t a1, long long *a2, int a3)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a1 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5880);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v23 = 1;
    double v6 = _os_activity_create((void *)&_mh_execute_header, "CL: CLAccessoryLocationProvider::onAccessoryConnected", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5880);
    }
    int v7 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      uint64_t buf = 68289538;
      __int16 v25 = 2082;
      long long v26 = "";
      __int16 v27 = 2082;
      double v28 = "activity";
      __int16 v29 = 2050;
      uint64_t v30 = a1;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLAccessoryLocationProvider::onAccessoryConnected\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", (uint8_t *)&buf, 0x26u);
    }
  }
  else
  {
    char v23 = 0;
  }
  sub_100627DD8((char *)__dst, a2);
  sub_1007102E0(a1, (uint64_t)__dst, a3);
  if (v21 < 0) {
    operator delete(__p);
  }
  if (v19 < 0) {
    operator delete(v18);
  }
  if (v17 < 0) {
    operator delete(v16);
  }
  if (v15 < 0) {
    operator delete(v14);
  }
  if (v13 < 0) {
    operator delete(v12);
  }
  if (v11 < 0) {
    operator delete(v10);
  }
  if (v9 < 0) {
    operator delete(__dst[0]);
  }
  if (v23) {
    os_activity_scope_leave(&state);
  }
}

void sub_10070D498(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (*(unsigned char *)(v10 - 120)) {
    os_activity_scope_leave((os_activity_scope_state_t)(v10 - 136));
  }
  _Unwind_Resume(exception_object);
}

void sub_10070D4C8(uint64_t a1, long long *a2)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a1 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5880);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v21 = 1;
    double v4 = _os_activity_create((void *)&_mh_execute_header, "CL: CLAccessoryLocationProvider::onAccessoryDisconnected", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v4, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5880);
    }
    uint64_t v5 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      uint64_t buf = 68289538;
      __int16 v23 = 2082;
      double v24 = "";
      __int16 v25 = 2082;
      long long v26 = "activity";
      __int16 v27 = 2050;
      uint64_t v28 = a1;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLAccessoryLocationProvider::onAccessoryDisconnected\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", (uint8_t *)&buf, 0x26u);
    }
  }
  else
  {
    char v21 = 0;
  }
  sub_100627DD8((char *)__dst, a2);
  sub_1007115E4(a1, (uint64_t *)__dst);
  if (v19 < 0) {
    operator delete(__p);
  }
  if (v17 < 0) {
    operator delete(v16);
  }
  if (v15 < 0) {
    operator delete(v14);
  }
  if (v13 < 0) {
    operator delete(v12);
  }
  if (v11 < 0) {
    operator delete(v10);
  }
  if (v9 < 0) {
    operator delete(v8);
  }
  if (v7 < 0) {
    operator delete(__dst[0]);
  }
  if (v21) {
    os_activity_scope_leave(&state);
  }
}

void sub_10070D6FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (*(unsigned char *)(v10 - 104)) {
    os_activity_scope_leave((os_activity_scope_state_t)(v10 - 120));
  }
  _Unwind_Resume(exception_object);
}

void sub_10070D72C(uint64_t a1)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a1 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5880);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v5 = 1;
    uint64_t v2 = _os_activity_create((void *)&_mh_execute_header, "CL: CLAccessoryLocationProvider::onAccessoryNmeaReceived", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v2, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5880);
    }
    uint64_t v3 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v7 = 0;
      __int16 v8 = 2082;
      char v9 = "";
      __int16 v10 = 2082;
      char v11 = "activity";
      __int16 v12 = 2050;
      uint64_t v13 = a1;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLAccessoryLocationProvider::onAccessoryNmeaReceived\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v5 = 0;
  }
  sub_100711B20(a1);
  if (v5) {
    os_activity_scope_leave(&state);
  }
}

void sub_10070D8E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10070D900(uint64_t a1)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a1 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5880);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v5 = 1;
    uint64_t v2 = _os_activity_create((void *)&_mh_execute_header, "CL: CLAccessoryLocationProvider::onAccessoryReferenceTime", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v2, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5880);
    }
    uint64_t v3 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v7 = 0;
      __int16 v8 = 2082;
      char v9 = "";
      __int16 v10 = 2082;
      char v11 = "activity";
      __int16 v12 = 2050;
      uint64_t v13 = a1;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLAccessoryLocationProvider::onAccessoryReferenceTime\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v5 = 0;
  }
  *(unsigned char *)(a1 + 1361) = 1;
  [*(id *)(*(void *)(a1 + 1320) + 16) register:*(void *)(*(void *)(a1 + 1320) + 8) forNotification:0 registrationInfo:0];
  *(unsigned char *)(a1 + 1945) = 0;
  sub_100714A94(a1);
  if (v5) {
    os_activity_scope_leave(&state);
  }
}

void sub_10070DAC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10070DAE4(uint64_t a1)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a1 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5880);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v5 = 1;
    uint64_t v2 = _os_activity_create((void *)&_mh_execute_header, "CL: CLAccessoryLocationProvider::onAccessoryReferenceLocation", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v2, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5880);
    }
    uint64_t v3 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v7 = 0;
      __int16 v8 = 2082;
      char v9 = "";
      __int16 v10 = 2082;
      char v11 = "activity";
      __int16 v12 = 2050;
      uint64_t v13 = a1;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLAccessoryLocationProvider::onAccessoryReferenceLocation\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v5 = 0;
  }
  *(unsigned char *)(a1 + 1360) = 1;
  [*(id *)(*(void *)(a1 + 1312) + 16) register:*(void *)(*(void *)(a1 + 1312) + 8) forNotification:4 registrationInfo:0];
  *(unsigned char *)(a1 + 1946) = 0;
  sub_100714D58(a1);
  if (v5) {
    os_activity_scope_leave(&state);
  }
}

void sub_10070DCA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10070DCC8(uint64_t a1, const __CFURL *a2, double *a3, double *a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a1 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5880);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int16 v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLAccessoryLocationProvider::onAccessoryEphemerisURL", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5880);
    }
    char v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      char v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a1;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLAccessoryLocationProvider::onAccessoryEphemerisURL\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100714F60(a1, a2, a3, a4);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10070DE94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

id sub_10070DEB4(uint64_t a1)
{
  return sub_10070DEBC(*(id **)(a1 + 32));
}

id sub_10070DEBC(id *a1)
{
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C58B8);
  }
  uint64_t v2 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "CLNMEAScreener,screen,onLocationUnavailableTimer,accessory unavailable notification sent", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    double v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onLocationUnavailableTimer()", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  *(_DWORD *)uint64_t buf = 9;
  (*((void (**)(id *, uint8_t *, uint64_t, uint64_t))*a1 + 18))(a1, buf, 1, 0xFFFFFFFFLL);
  return [a1[123] setNextFireDelay:1.79769313e308];
}

void sub_10070E09C(uint64_t a1, unsigned int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5880);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int16 v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLAccessoryLocationProvider::onLocationNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5880);
    }
    char v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      char v15 = "";
      __int16 v16 = 2082;
      char v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLAccessoryLocationProvider::onLocationNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100716544(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10070E258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10070E278(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5880);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v9 = 1;
    double v6 = _os_activity_create((void *)&_mh_execute_header, "CL: CLAccessoryLocationProvider::onTimeNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v6, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5880);
    }
    uint64_t v7 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v11 = 0;
      __int16 v12 = 2082;
      int v13 = "";
      __int16 v14 = 2082;
      char v15 = "activity";
      __int16 v16 = 2050;
      uint64_t v17 = a4;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLAccessoryLocationProvider::onTimeNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v9 = 0;
  }
  if (!*a2 && !*(unsigned char *)(a4 + 1945)) {
    sub_100714A94(a4);
  }
  if (v9) {
    os_activity_scope_leave(&state);
  }
}

void sub_10070E438(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10070E458(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5880);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int16 v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLAccessoryLocationProvider::onClientManagerNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5880);
    }
    char v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      char v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLAccessoryLocationProvider::onClientManagerNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100716B38(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10070E614(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10070E634(uint64_t a1)
{
  uint64_t v1 = a1;
  int v2 = 0;
  sub_1007184A0((uint64_t)&v1, 7uLL);
}

void sub_10070E668(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5880);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int16 v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLAccessoryLocationProvider::onBatteryNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5880);
    }
    char v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      char v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLAccessoryLocationProvider::onBatteryNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100716EB8(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10070E824(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_10070E844(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C5880);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    __int16 v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLAccessoryLocationProvider::onMobileAssetNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C5880);
    }
    char v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      char v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLAccessoryLocationProvider::onMobileAssetNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_10071739C(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_10070EA00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10070EA20(uint64_t a1)
{
  int v2 = *(void **)(a1 + 3000);
  if (v2)
  {
    *(void *)(a1 + 3008) = v2;
    operator delete(v2);
  }
  sub_100628000(a1 + 2768);
  sub_100718550(a1 + 40);
  return a1;
}

uint64_t sub_10070EA64(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t sub_10070EAA8(uint64_t a1)
{
  *(void *)a1 = off_1022C56D0;
  if (*(void *)(a1 + 1336))
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    int v2 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "CLAccessory,unregistered for app client notifications", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      char v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual CLAccessoryLocationProvider::~CLAccessoryLocationProvider()", "%s\n", v15);
      if (v15 != (char *)buf) {
        free(v15);
      }
    }
    [*(id *)(*(void *)(a1 + 1336) + 16) unregister:*(void *)(*(void *)(a1 + 1336) + 8) forNotification:4];
    [*(id *)(*(void *)(a1 + 1336) + 16) unregister:*(void *)(*(void *)(a1 + 1336) + 8) forNotification:9];
    [*(id *)(*(void *)(a1 + 1336) + 16) unregister:*(void *)(*(void *)(a1 + 1336) + 8) forNotification:3];
    [*(id *)(*(void *)(a1 + 1336) + 16) unregister:*(void *)(*(void *)(a1 + 1336) + 8) forNotification:1];
  }
  uint64_t v3 = *(void *)(a1 + 1344);
  if (v3) {
    [*(id *)(v3 + 16) unregister:*(void *)(v3 + 8) forNotification:7];
  }
  double v4 = *(void **)(a1 + 1376);
  if (v4) {

  }
  uint64_t v5 = *(void *)(a1 + 6224);
  if (v5)
  {
    [*(id *)(v5 + 16) unregister:*(void *)(v5 + 8) forNotification:2];
    uint64_t v6 = *(void *)(a1 + 6224);
    *(void *)(a1 + 6224) = 0;
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
  }
  else
  {
    *(void *)(a1 + 6224) = 0;
  }
  sub_1000DB264(a1 + 6160, *(char **)(a1 + 6168));
  sub_100628000(a1 + 5960);
  sub_100628000(a1 + 5776);
  sub_100628000(a1 + 5592);
  uint64_t v7 = *(void **)(a1 + 5560);
  if (v7)
  {
    *(void *)(a1 + 5568) = v7;
    operator delete(v7);
  }
  sub_100628000(a1 + 5328);
  sub_100718550(a1 + 2600);
  sub_100EBBCE8(a1 + 2400);
  sub_1007188E4((void *)(a1 + 2344));
  if (*(char *)(a1 + 1983) < 0) {
    operator delete(*(void **)(a1 + 1960));
  }
  if (*(char *)(a1 + 1943) < 0) {
    operator delete(*(void **)(a1 + 1920));
  }
  sub_1000D7D80(a1 + 1840);
  sub_100EBBCE8(a1 + 1608);
  sub_100718968((uint64_t *)(a1 + 1384), 0);
  uint64_t v8 = *(void *)(a1 + 1344);
  *(void *)(a1 + 1344) = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  uint64_t v9 = *(void *)(a1 + 1336);
  *(void *)(a1 + 1336) = 0;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  uint64_t v10 = *(void *)(a1 + 1328);
  *(void *)(a1 + 1328) = 0;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  uint64_t v11 = *(void *)(a1 + 1320);
  *(void *)(a1 + 1320) = 0;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  uint64_t v12 = *(void *)(a1 + 1312);
  *(void *)(a1 + 1312) = 0;
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  if (*(char *)(a1 + 1311) < 0) {
    operator delete(*(void **)(a1 + 1288));
  }
  sub_1005C3B7C(a1 + 1040);
  if (*(char *)(a1 + 983) < 0) {
    operator delete(*(void **)(a1 + 960));
  }
  if (*(char *)(a1 + 959) < 0) {
    operator delete(*(void **)(a1 + 936));
  }
  if (*(char *)(a1 + 935) < 0) {
    operator delete(*(void **)(a1 + 912));
  }
  int v13 = *(std::__shared_weak_count **)(a1 + 800);
  if (v13) {
    sub_1000DB0A0(v13);
  }
  sub_1006B7BEC(a1);
  return a1;
}

void sub_10070EF04(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

void sub_10070EF14(uint64_t a1)
{
  sub_10070EAA8(a1);

  operator delete();
}

uint64_t sub_10070EF4C(unsigned char *a1, int *a2)
{
  sub_1000B015C();
  int v4 = *a2;
  if (*a2 == 40)
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    uint64_t v5 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "CLAccessory,PauseExternalLocation,1", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLAccessoryLocationProvider::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
    double v6 = sub_10016C458();
    sub_10070F548(a1, 1, v6);
  }
  else if (v4 == 29)
  {
    if (!a1[1363])
    {
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      uint64_t v7 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "CLAccessory,EnableAccessoryNMEAScreening,0,airborne,1", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022C58B8);
        }
        uint64_t v11 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLAccessoryLocationProvider::registerForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v11);
        if (v11 != (char *)buf) {
          free(v11);
        }
      }
      double v8 = sub_10016C458();
      sub_101221F34((uint64_t)(a1 + 2560), 0, v8);
      a1[1953] = 0;
      sub_100716D00((uint64_t)(a1 + 1952));
    }
  }
  else if (!v4)
  {
    sub_10070F278((uint64_t)a1);
  }
  return 1;
}

void sub_10070F278(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSAutoreleasePool);
  if (*(char *)(a1 + 935) < 0)
  {
    **(unsigned char **)(a1 + 912) = 0;
    *(void *)(a1 + 920) = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 912) = 0;
    *(unsigned char *)(a1 + 935) = 0;
  }
  if (*(char *)(a1 + 959) < 0)
  {
    **(unsigned char **)(a1 + 936) = 0;
    *(void *)(a1 + 944) = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 936) = 0;
    *(unsigned char *)(a1 + 959) = 0;
  }
  if (*(char *)(a1 + 983) < 0)
  {
    **(unsigned char **)(a1 + 960) = 0;
    *(void *)(a1 + 968) = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 960) = 0;
    *(unsigned char *)(a1 + 983) = 0;
  }
  sub_10070FA68(a1);
  double v3 = sub_10016C458();
  sub_101226248(a1 + 2560, v3);
  *(void *)(a1 + 2376) = 0;
  *(unsigned char *)(a1 + 2384) = 1;
  unsigned int v4 = [(id)qword_10247D258 startLocation];

  if (v4)
  {
    if (!*(unsigned char *)(a1 + 1945)) {
      sub_100714A94(a1);
    }
    if (!*(unsigned char *)(a1 + 1946)) {
      sub_100714D58(a1);
    }
    sub_100711418(a1);
  }
  else
  {
    *(_DWORD *)uint64_t buf = 9;
    (*(void (**)(uint64_t, uint8_t *, uint64_t, uint64_t))(*(void *)a1 + 144))(a1, buf, 1, 0xFFFFFFFFLL);
  }
  sub_100716004(a1);
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C58B8);
  }
  uint64_t v5 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *(unsigned __int8 *)(a1 + 1917);
    *(_DWORD *)uint64_t buf = 67240192;
    int v9 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Accessory,StartLocation,IgnoreAccessoryLocation,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    uint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::startLocation()", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
}

void sub_10070F548(unsigned char *a1, int a2, double a3)
{
  sub_100733CA0((uint64_t)(a1 + 1952), a2);
  if (a2)
  {
    sub_101221F34((uint64_t)(a1 + 2560), 0, a3);
    int v7 = 9;
    (*(void (**)(unsigned char *, int *, uint64_t, uint64_t))(*(void *)a1 + 144))(a1, &v7, 1, 0xFFFFFFFFLL);
  }
  else if (a1[1362])
  {
    int v6 = a1[1953];
    sub_101221F34((uint64_t)(a1 + 2560), v6, a3);
  }
}

uint64_t sub_10070F614(unsigned char *a1, int *a2)
{
  sub_1006B7E64((uint64_t)a1);
  int v4 = *a2;
  if (*a2 == 40)
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    uint64_t v5 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "CLAccessory,PauseExternalLocation,0", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLAccessoryLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
    double v6 = sub_10016C458();
    sub_10070F548(a1, 0, v6);
  }
  else if (v4 == 29)
  {
    if (!a1[1363])
    {
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      int v7 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "CLAccessory,EnableAccessoryNMEAScreening,1,airborne,0", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022C58B8);
        }
        uint64_t v11 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLAccessoryLocationProvider::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v11);
        if (v11 != (char *)buf) {
          free(v11);
        }
      }
      double v8 = sub_10016C458();
      sub_101221F34((uint64_t)(a1 + 2560), 1, v8);
      a1[1953] = 1;
      sub_100716D00((uint64_t)(a1 + 1952));
    }
  }
  else if (!v4)
  {
    sub_10070F944((uint64_t)a1);
  }
  return 1;
}

uint64_t sub_10070F944(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSAutoreleasePool);
  [(id)qword_10247D258 stopLocation];
  [*(id *)(a1 + 984) setNextFireDelay:1.79769313e308];
  double v3 = sub_10016C458();
  sub_101225FF8(a1 + 2560, v3);

  *(_DWORD *)(a1 + 116) = 0xFFFF;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 136) = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 152) = _Q0;
  *(_OWORD *)(a1 + 168) = _Q0;
  *(_OWORD *)(a1 + 184) = _Q0;
  *(_DWORD *)(a1 + 200) = 0;
  *(void *)(a1 + 204) = 0xBFF0000000000000;
  *(void *)(a1 + 220) = 0;
  *(void *)(a1 + 212) = 0;
  *(_DWORD *)(a1 + 228) = 0;
  *(void *)(a1 + 232) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 240) = 0x7FFFFFFF;
  *(void *)(a1 + 244) = 0;
  *(void *)(a1 + 252) = 0;
  *(unsigned char *)(a1 + 268) = 0;
  *(void *)(a1 + 260) = 0;
  [*(id *)(*(void *)(a1 + 1312) + 16) unregister:*(void *)(*(void *)(a1 + 1312) + 8) forNotification:4];
  *(unsigned char *)(a1 + 1360) = 0;
  [*(id *)(*(void *)(a1 + 1320) + 16) unregister:*(void *)(*(void *)(a1 + 1320) + 8) forNotification:0];
  *(unsigned char *)(a1 + 1361) = 0;
  sub_10070FE60(a1);
  *(_DWORD *)(a1 + 6136) = 0;
  *(_WORD *)(a1 + 1944) = 0;
  *(unsigned char *)(a1 + 1946) = 0;
  *(void *)(a1 + 2376) = 0;
  *(unsigned char *)(a1 + 2384) = 1;
  uint64_t result = *(unsigned int *)(a1 + 1912);
  if ((result & 0x80000000) == 0)
  {
    uint64_t result = close(result);
    *(_DWORD *)(a1 + 1912) = -1;
  }
  return result;
}

void sub_10070FA68(uint64_t a1)
{
  id v2 = (unsigned char *)(a1 + 6192);
  if (!*(unsigned char *)(a1 + 6193))
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    double v3 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "CLAccessory,registered for unfiltered location notifications", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      __int16 v11 = 0;
      int v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::registerForNotifications()", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
    [*(id *)(*(void *)(a1 + 1312) + 16) register:*(void *)(*(void *)(a1 + 1312) + 8) forNotification:10 registrationInfo:0];
    v2[1] = 1;
  }
  if (!*(unsigned char *)(a1 + 1880))
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    int v4 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "CLAccessory,registered for propagated location notifications", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      __int16 v11 = 0;
      double v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::registerForNotifications()", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
    [*(id *)(*(void *)(a1 + 1312) + 16) register:*(void *)(*(void *)(a1 + 1312) + 8) forNotification:27 registrationInfo:0];
    *(unsigned char *)(a1 + 1880) = 1;
  }
  if (!*v2)
  {
    uint64_t v5 = sub_1008B6998();
    if (byte_10247D247 < 0)
    {
      sub_1000DC48C(__p, (void *)xmmword_10247D230, *((unint64_t *)&xmmword_10247D230 + 1));
    }
    else
    {
      *(_OWORD *)long long __p = xmmword_10247D230;
      uint64_t v10 = unk_10247D240;
    }
    id v6 = [objc_msgSend(*(id *)(a1 + 32), "silo") queue];
    v12[0] = off_1022C59B8;
    v12[1] = a1;
    void v12[3] = v12;
    sub_1008B6CBC(v5, (uint64_t)__p, (uint64_t)v6, (uint64_t)v12);
    sub_1006821B0(v12);
    if (SHIBYTE(v10) < 0) {
      operator delete(__p[0]);
    }
    *id v2 = 1;
  }
}

void sub_10070FE2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10070FE60(uint64_t a1)
{
  id v2 = (unsigned char *)(a1 + 6192);
  if (*(unsigned char *)(a1 + 6193))
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    double v3 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "CLAccessory,unregistered for unfiltered location notifications", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      __int16 v10 = 0;
      id v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::unregisterForNotifications()", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    [*(id *)(*(void *)(a1 + 1312) + 16) unregister:*(void *)(*(void *)(a1 + 1312) + 8) forNotification:10];
    v2[1] = 0;
  }
  if (*(unsigned char *)(a1 + 1880))
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    int v4 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "CLAccessory,unregistered for propagated location notifications", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      __int16 v10 = 0;
      int v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::unregisterForNotifications()", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
    [*(id *)(*(void *)(a1 + 1312) + 16) unregister:*(void *)(*(void *)(a1 + 1312) + 8) forNotification:27];
    *(unsigned char *)(a1 + 1880) = 0;
  }
  if (*v2)
  {
    uint64_t v5 = sub_1008B6998();
    if (byte_10247D247 < 0)
    {
      sub_1000DC48C(__p, (void *)xmmword_10247D230, *((unint64_t *)&xmmword_10247D230 + 1));
    }
    else
    {
      *(_OWORD *)long long __p = xmmword_10247D230;
      uint64_t v9 = unk_10247D240;
    }
    sub_1008B7000(v5, (uint64_t *)__p);
    if (SHIBYTE(v9) < 0) {
      operator delete(__p[0]);
    }
    *id v2 = 0;
  }
}

void sub_1007101D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1007101F4(uint64_t a1)
{
  sub_1006B7C30(a1);
  sub_1005C70E0(a1 + 1040);
  [*(id *)(a1 + 984) invalidate];

  *(void *)(a1 + 984) = 0;
  uint64_t v2 = *(void *)(a1 + 1312);
  *(void *)(a1 + 1312) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 1328);
  *(void *)(a1 + 1328) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 1320);
  *(void *)(a1 + 1320) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }

  *(void *)(a1 + 1352) = 0;
  qword_10247D258 = 0;
}

void sub_1007102E0(uint64_t a1, uint64_t a2, int a3)
{
  sub_100134750(__p, "CLAccessory,onAccessoryConnected");
  sub_100625C10((uint64_t *)a2, (uint64_t *)__p);
  if ((v31 & 0x80000000) == 0)
  {
    if (!a3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  operator delete(__p[0]);
  if (a3)
  {
LABEL_3:
    sub_10070E634(a1 + 2552);
    *(unsigned char *)(a1 + 2547) = 0;
    *(_DWORD *)(a1 + 6136) = 0;
  }
LABEL_4:
  if (*(unsigned char *)(a2 + 168))
  {
    if (sub_100710BD4(a1 + 5592, a2)) {
      sub_1012264B8(a1 + 2560, (std::string *)a2);
    }
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    id v6 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "CLAccessory,onAccessoryConnected,accessory on deny list", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 == -1) {
        goto LABEL_13;
      }
      goto LABEL_88;
    }
    return;
  }
  int v8 = *(char *)(a2 + 23);
  if (v8 < 0)
  {
    if (*(void *)(a2 + 8) != 5) {
      goto LABEL_26;
    }
    uint64_t v9 = *(void *)a2;
  }
  else
  {
    uint64_t v9 = a2;
    if (v8 != 5) {
      goto LABEL_26;
    }
  }
  int v10 = *(_DWORD *)v9;
  int v11 = *(unsigned __int8 *)(v9 + 4);
  if (v10 == 1819308097 && v11 == 101)
  {
    uint64_t v16 = a2 + 48;
    int v17 = *(char *)(a2 + 71);
    if (v17 < 0)
    {
      if (*(void *)(a2 + 56) != 17) {
        goto LABEL_26;
      }
      uint64_t v16 = *(void *)v16;
    }
    else if (v17 != 17)
    {
      goto LABEL_26;
    }
    uint64_t v18 = *(void *)v16;
    uint64_t v19 = *(void *)(v16 + 8);
    int v20 = *(unsigned __int8 *)(v16 + 16);
    BOOL v22 = v18 == 0x2079616C50726143 && v19 == 0x6F74616C756D6953 && v20 == 114;
    if (v22 && *(unsigned char *)(a2 + 169) && *(unsigned char *)(a2 + 170))
    {
      *(unsigned char *)(a1 + 25++*(_DWORD *)(result + 48) = 1;
      if ((a3 & 1) == 0) {
        goto LABEL_28;
      }
LABEL_61:
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      __int16 v23 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "CLAccessory,onAccessoryConnected,newAccessory connected", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022C58B8);
        }
        __int16 v27 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryConnected(const CLAccessoryUtils::CLAccessoryInfo, const BOOL)", "%s\n", v27);
        if (v27 != (char *)buf) {
          free(v27);
        }
      }
      std::string::operator=((std::string *)(a1 + 5960), (const std::string *)a2);
      std::string::operator=((std::string *)(a1 + 5984), (const std::string *)(a2 + 24));
      std::string::operator=((std::string *)(a1 + 6008), (const std::string *)(a2 + 48));
      std::string::operator=((std::string *)(a1 + 6032), (const std::string *)(a2 + 72));
      std::string::operator=((std::string *)(a1 + 6056), (const std::string *)(a2 + 96));
      std::string::operator=((std::string *)(a1 + 6080), (const std::string *)(a2 + 120));
      std::string::operator=((std::string *)(a1 + 6104), (const std::string *)(a2 + 144));
      __int16 v24 = *(_WORD *)(a2 + 168);
      *(unsigned char *)(a1 + 6130) = *(unsigned char *)(a2 + 170);
      *(_WORD *)(a1 + 6128) = v24;
      sub_1012217EC(a1 + 2560, (std::string *)(a1 + 5960), *(unsigned __int8 *)(a1 + 1953));
      double v25 = sub_10016C458();
      sub_100711000(a1, 0, v25);
      *(unsigned char *)(a1 + 1362) = 1;
      if (a3)
      {
        *(_DWORD *)uint64_t buf = 0;
        if (sub_1001072EC(a1, (int *)buf, 1))
        {
          if (qword_102419360 != -1) {
            dispatch_once(&qword_102419360, &stru_1022C58B8);
          }
          long long v26 = qword_102419368;
          if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)uint64_t buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "CLAccessory,location already requested before device connection, starting location", buf, 2u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419360 != -1) {
              dispatch_once(&qword_102419360, &stru_1022C58B8);
            }
            uint64_t v28 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryConnected(const CLAccessoryUtils::CLAccessoryInfo, const BOOL)", "%s\n", v28);
            if (v28 != (char *)buf) {
              free(v28);
            }
          }
          sub_10070F278(a1);
        }
      }
      sub_100711418(a1);
      return;
    }
  }
LABEL_26:
  *(unsigned char *)(a1 + 25++*(_DWORD *)(result + 48) = 0;
  if (!*(unsigned char *)(a2 + 169))
  {
    if (*(unsigned char *)(a2 + 170) && sub_100710BD4(a1 + 5776, a2))
    {
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      __int16 v14 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "CLAccessory,onAccessoryConnected,noLocation accessory", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022C58B8);
        }
        __int16 v29 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryConnected(const CLAccessoryUtils::CLAccessoryInfo, const BOOL)", "%s\n", v29);
        if (v29 != (char *)buf) {
          free(v29);
        }
      }
      uint64_t v15 = *(void *)(a1 + 2552);
      *(void *)(a1 + 2552) = v15 | 0x20;
      sub_101226830(a1 + 2560, (std::string *)a2, v15 | 0x20);
    }
    return;
  }
  if (a3) {
    goto LABEL_61;
  }
LABEL_28:
  if (!*(unsigned char *)(a1 + 1362) || !sub_100710CB0((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 5960))) {
    goto LABEL_61;
  }
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C58B8);
  }
  int v13 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "CLAccessory,onAccessoryConnected,alreadyConnected", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 == -1)
    {
LABEL_13:
      int v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryConnected(const CLAccessoryUtils::CLAccessoryInfo, const BOOL)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
      return;
    }
LABEL_88:
    dispatch_once(&qword_102419360, &stru_1022C58B8);
    goto LABEL_13;
  }
}

void sub_100710BB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100710BD4(uint64_t a1, uint64_t a2)
{
  double v4 = sub_10016C458();
  if (sub_100710CB0((unsigned __int8 *)a1, (unsigned __int8 *)a2))
  {
    double v6 = *(double *)(a1 + 176);
    uint64_t v5 = (double *)(a1 + 176);
    double v7 = v6;
    if (v6 >= 0.0 && vabdd_f64(v4, v7) <= 28800.0) {
      return 0;
    }
  }
  else
  {
    std::string::operator=((std::string *)a1, (const std::string *)a2);
    std::string::operator=((std::string *)(a1 + 24), (const std::string *)(a2 + 24));
    std::string::operator=((std::string *)(a1 + 48), (const std::string *)(a2 + 48));
    std::string::operator=((std::string *)(a1 + 72), (const std::string *)(a2 + 72));
    std::string::operator=((std::string *)(a1 + 96), (const std::string *)(a2 + 96));
    std::string::operator=((std::string *)(a1 + 120), (const std::string *)(a2 + 120));
    std::string::operator=((std::string *)(a1 + 144), (const std::string *)(a2 + 144));
    char v9 = *(unsigned char *)(a2 + 170);
    *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
    *(unsigned char *)(a1 + 170) = v9;
    uint64_t v5 = (double *)(a1 + 176);
  }
  *uint64_t v5 = v4;
  return 1;
}

BOOL sub_100710CB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  double v6 = a2;
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0)
  {
    if (memcmp(*(const void **)a1, a2, *((void *)a1 + 1))) {
      return 0;
    }
  }
  else if (a1[23])
  {
    int v8 = a1;
    while (*v8 == *a2)
    {
      ++v8;
      ++a2;
      if (!--v2) {
        goto LABEL_16;
      }
    }
    return 0;
  }
LABEL_16:
  uint64_t v9 = a1[47];
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = a1[47];
  }
  else {
    uint64_t v10 = *((void *)a1 + 4);
  }
  uint64_t v11 = v6[47];
  int v12 = (char)v11;
  if ((v11 & 0x80u) != 0) {
    uint64_t v11 = *((void *)v6 + 4);
  }
  if (v10 != v11) {
    return 0;
  }
  int v13 = (const void **)(a1 + 24);
  if (v12 >= 0) {
    __int16 v14 = v6 + 24;
  }
  else {
    __int16 v14 = (unsigned __int8 *)*((void *)v6 + 3);
  }
  if ((v9 & 0x80) != 0)
  {
    if (memcmp(*v13, v14, *((void *)a1 + 4))) {
      return 0;
    }
  }
  else if (a1[47])
  {
    while (*(unsigned __int8 *)v13 == *v14)
    {
      int v13 = (const void **)((char *)v13 + 1);
      ++v14;
      if (!--v9) {
        goto LABEL_31;
      }
    }
    return 0;
  }
LABEL_31:
  uint64_t v15 = a1[71];
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = a1[71];
  }
  else {
    uint64_t v16 = *((void *)a1 + 7);
  }
  uint64_t v17 = v6[71];
  int v18 = (char)v17;
  if ((v17 & 0x80u) != 0) {
    uint64_t v17 = *((void *)v6 + 7);
  }
  if (v16 != v17) {
    return 0;
  }
  uint64_t v19 = (const void **)(a1 + 48);
  if (v18 >= 0) {
    int v20 = v6 + 48;
  }
  else {
    int v20 = (unsigned __int8 *)*((void *)v6 + 6);
  }
  if ((v15 & 0x80) != 0)
  {
    if (memcmp(*v19, v20, *((void *)a1 + 7))) {
      return 0;
    }
  }
  else if (a1[71])
  {
    while (*(unsigned __int8 *)v19 == *v20)
    {
      uint64_t v19 = (const void **)((char *)v19 + 1);
      ++v20;
      if (!--v15) {
        goto LABEL_46;
      }
    }
    return 0;
  }
LABEL_46:
  uint64_t v21 = a1[95];
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = a1[95];
  }
  else {
    uint64_t v22 = *((void *)a1 + 10);
  }
  uint64_t v23 = v6[95];
  int v24 = (char)v23;
  if ((v23 & 0x80u) != 0) {
    uint64_t v23 = *((void *)v6 + 10);
  }
  if (v22 != v23) {
    return 0;
  }
  double v25 = (const void **)(a1 + 72);
  if (v24 >= 0) {
    long long v26 = v6 + 72;
  }
  else {
    long long v26 = (unsigned __int8 *)*((void *)v6 + 9);
  }
  if ((v21 & 0x80) != 0)
  {
    if (memcmp(*v25, v26, *((void *)a1 + 10))) {
      return 0;
    }
  }
  else if (a1[95])
  {
    while (*(unsigned __int8 *)v25 == *v26)
    {
      double v25 = (const void **)((char *)v25 + 1);
      ++v26;
      if (!--v21) {
        goto LABEL_61;
      }
    }
    return 0;
  }
LABEL_61:
  uint64_t v27 = a1[119];
  if ((v27 & 0x80u) == 0) {
    uint64_t v28 = a1[119];
  }
  else {
    uint64_t v28 = *((void *)a1 + 13);
  }
  uint64_t v29 = v6[119];
  int v30 = (char)v29;
  if ((v29 & 0x80u) != 0) {
    uint64_t v29 = *((void *)v6 + 13);
  }
  if (v28 != v29) {
    return 0;
  }
  char v31 = (const void **)(a1 + 96);
  if (v30 >= 0) {
    double v32 = v6 + 96;
  }
  else {
    double v32 = (unsigned __int8 *)*((void *)v6 + 12);
  }
  if ((v27 & 0x80) != 0)
  {
    if (memcmp(*v31, v32, *((void *)a1 + 13))) {
      return 0;
    }
  }
  else if (a1[119])
  {
    while (*(unsigned __int8 *)v31 == *v32)
    {
      char v31 = (const void **)((char *)v31 + 1);
      ++v32;
      if (!--v27) {
        goto LABEL_76;
      }
    }
    return 0;
  }
LABEL_76:
  uint64_t v33 = a1[143];
  if ((v33 & 0x80u) == 0) {
    uint64_t v34 = a1[143];
  }
  else {
    uint64_t v34 = *((void *)a1 + 16);
  }
  uint64_t v35 = v6[143];
  int v36 = (char)v35;
  if ((v35 & 0x80u) != 0) {
    uint64_t v35 = *((void *)v6 + 16);
  }
  if (v34 != v35) {
    return 0;
  }
  double v37 = (const void **)(a1 + 120);
  if (v36 >= 0) {
    __int16 v38 = v6 + 120;
  }
  else {
    __int16 v38 = (unsigned __int8 *)*((void *)v6 + 15);
  }
  if ((v33 & 0x80) != 0)
  {
    if (memcmp(*v37, v38, *((void *)a1 + 16))) {
      return 0;
    }
  }
  else if (a1[143])
  {
    while (*(unsigned __int8 *)v37 == *v38)
    {
      double v37 = (const void **)((char *)v37 + 1);
      ++v38;
      if (!--v33) {
        goto LABEL_91;
      }
    }
    return 0;
  }
LABEL_91:
  BOOL result = sub_1006FE7E0(a1 + 144, v6 + 144);
  if (!result) {
    return result;
  }
  if (a1[168] == v6[168] && a1[170] == v6[170]) {
    return a1[169] == v6[169];
  }
  return 0;
}

void sub_100711000(uint64_t a1, unsigned int a2, double a3)
{
  uint64_t v4 = *(void **)(a1 + 1376);
  if (!v4) {
    return;
  }
  if ((a2 & 1) == 0 && [v4 currentSession])
  {
    sub_101225454(a1 + 2560, 1, a3);
    if (objc_msgSend(objc_msgSend(*(id *)(a1 + 1376), "currentSession"), "configuration"))
    {
      sub_101225490(a1 + 2560, [objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 1376), "currentSession"), "configuration"), "transportType") == (id)3], a3);
      id v7 = [[[*(id *)(a1 + 1376) currentSession] configuration] transportType];
      *(unsigned char *)(a1 + 2547) = v7 == (id)3;
      if (v7 == (id)3) {
        *(void *)(a1 + 2552) |= 0x40uLL;
      }
    }
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    int v8 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
    {
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      unsigned int v10 = [[[*(id *)(a1 + 1376) currentSession] configuration] transportType];
      *(_DWORD *)uint64_t buf = 134349312;
      CFAbsoluteTime v15 = Current;
      __int16 v16 = 1026;
      unsigned int v17 = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "CLAccessoryAWD,%{public}.1lf,updateCarSessionStatus,enable,transportType,%{public}d", buf, 0x12u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    CFAbsoluteTimeGetCurrent();
    [objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(a1 + 1376), "currentSession"), "configuration"), "transportType"]
    uint64_t v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::updateCarSessionStatus(const CFTimeInterval, const BOOL)", "%s\n", v11);
    if (v11 == (char *)buf) {
      return;
    }
LABEL_25:
    free(v11);
    return;
  }
  uint64_t v12 = a1 + 2560;
  sub_101225454(v12, 0, a3);
  sub_101225490(v12, 0, a3);
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C58B8);
  }
  int v13 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 134349312;
    CFAbsoluteTime v15 = CFAbsoluteTimeGetCurrent();
    __int16 v16 = 1026;
    unsigned int v17 = a2;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "CLAccessoryAWD,%{public}.1lf,updateCarSessionStatus,disable,force,%{public}d", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    CFAbsoluteTimeGetCurrent();
    uint64_t v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::updateCarSessionStatus(const CFTimeInterval, const BOOL)", "%s\n", v11);
    if (v11 != (char *)buf) {
      goto LABEL_25;
    }
  }
}

void sub_100711418(uint64_t a1)
{
  id v2 = sub_100DEF07C();
  *(unsigned char *)(a1 + 1372) = (_BYTE)v2;
  [(id)qword_10247D258 sendGPRMCDataStatusValues:v2];
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C58B8);
  }
  uint64_t v3 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *(unsigned __int8 *)(a1 + 1372);
    *(_DWORD *)uint64_t buf = 67174657;
    int v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "CLAccessory,sendGPRMCDataStatusValues,fIsShifting,%{private}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    int v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::sendGPRMCDataStatusValues()", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
}

void sub_1007115E4(uint64_t a1, uint64_t *a2)
{
  sub_100134750(__p, "CLAccessory,onAccessoryDisconnected");
  sub_100625C10(a2, (uint64_t *)__p);
  if (v32 < 0) {
    operator delete(__p[0]);
  }
  if (*(unsigned char *)(a1 + 1362) && sub_100710CB0((unsigned __int8 *)a2, (unsigned __int8 *)(a1 + 5960)))
  {
    *(unsigned char *)(a1 + 1362) = 0;
    *(_WORD *)(a1 + 2547) = 0;
    *(_DWORD *)uint64_t buf = 9;
    (*(void (**)(uint64_t, uint8_t *, uint64_t, uint64_t))(*(void *)a1 + 144))(a1, buf, 1, 0xFFFFFFFFLL);
    sub_10070E634(a1 + 2552);
    *(_DWORD *)(a1 + 6136) = 0;
    sub_1005C70E0(a1 + 1040);
    [*(id *)(a1 + 984) setNextFireDelay:1.79769313e308];
    double v4 = sub_10016C458();
    sub_100711000(a1, 1u, v4);
    sub_101221F34(a1 + 2560, 0, v4);
    sub_101226F8C(a1 + 2560, (void *)(a1 + 6160), v4);
    sub_101225FF8(a1 + 2560, v4);
    sub_101225410((uint64_t *)(a1 + 2560), *(_DWORD *)(a1 + 6152), v4, *(double *)(a1 + 6144));
    sub_101221F70(a1 + 2560, v4);
    *(void *)(a1 + 6184) = 0xBFF0000000000000;
    sub_1000DB264(a1 + 6160, *(char **)(a1 + 6168));
    *(void *)(a1 + 6160) = a1 + 6168;
    *(void *)(a1 + 6176) = 0;
    *(void *)(a1 + 6168) = 0;
    sub_10062288C(a1 + 5960);
    sub_1007356E8(a1 + 2440, 1, -1.0, 0.0, 0.0);
  }
  else
  {
    int v5 = (char *)(a1 + 5983);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    uint64_t v6 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = (unsigned __int8 *)(a1 + 5960);
      uint64_t v8 = a1 + 5960;
      if (*v5 < 0) {
        uint64_t v8 = *(void *)v7;
      }
      uint64_t v9 = (void *)(a1 + 6008);
      if (*(char *)(a1 + 6031) < 0) {
        uint64_t v9 = (void *)*v9;
      }
      unsigned int v10 = (void *)(a1 + 5984);
      if (*(char *)(a1 + 6007) < 0) {
        unsigned int v10 = (void *)*v10;
      }
      uint64_t v11 = (void *)(a1 + 6032);
      if (*(char *)(a1 + 6055) < 0) {
        uint64_t v11 = (void *)*v11;
      }
      uint64_t v12 = (void *)(a1 + 6056);
      if (*(char *)(a1 + 6079) < 0) {
        uint64_t v12 = (void *)*v12;
      }
      int v13 = (void *)(a1 + 6080);
      uint64_t v29 = v12;
      int v30 = v6;
      if (*(char *)(a1 + 6103) < 0) {
        int v13 = (void *)*v13;
      }
      int v14 = *(unsigned __int8 *)(a1 + 6130);
      int v15 = *(unsigned __int8 *)(a1 + 1362);
      BOOL v16 = sub_100710CB0((unsigned __int8 *)a2, v7);
      *(_DWORD *)uint64_t buf = 136382723;
      uint64_t v52 = v8;
      __int16 v53 = 2081;
      int v54 = v9;
      __int16 v55 = 2081;
      double v56 = v10;
      __int16 v57 = 2081;
      float64_t v58 = v11;
      __int16 v59 = 2081;
      int v60 = v29;
      __int16 v61 = 2081;
      double v62 = v13;
      __int16 v63 = 1025;
      int v64 = v14;
      __int16 v65 = 1026;
      int v66 = v15;
      __int16 v67 = 1026;
      BOOL v68 = v16;
      _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "CLAccessory,onAccessoryDisconnected,not doing anything,manufacturer,%{private}s,model,%{private}s,name,%{private}s,serial,%{private}s,fw,%{private}s,hw,%{private}s,supportsCarPlay,%{private}d,accessoryConnected,%{public}d,isSame,%{public}d", buf, 0x50u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      unsigned int v17 = (unsigned __int8 *)(a1 + 5960);
      uint64_t v18 = a1 + 5960;
      if (*v5 < 0) {
        uint64_t v18 = *(void *)v17;
      }
      uint64_t v19 = (void *)(a1 + 6008);
      if (*(char *)(a1 + 6031) < 0) {
        uint64_t v19 = (void *)*v19;
      }
      int v20 = (void *)(a1 + 5984);
      if (*(char *)(a1 + 6007) < 0) {
        int v20 = (void *)*v20;
      }
      uint64_t v21 = (void *)(a1 + 6032);
      if (*(char *)(a1 + 6055) < 0) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v22 = (void *)(a1 + 6056);
      if (*(char *)(a1 + 6079) < 0) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v23 = (void *)(a1 + 6080);
      int v24 = (unsigned __int8 *)a2;
      if (*(char *)(a1 + 6103) < 0) {
        uint64_t v23 = (void *)*v23;
      }
      int v25 = *(unsigned __int8 *)(a1 + 6130);
      int v26 = *(unsigned __int8 *)(a1 + 1362);
      BOOL v27 = sub_100710CB0(v24, v17);
      int v33 = 136382723;
      uint64_t v34 = v18;
      __int16 v35 = 2081;
      int v36 = v19;
      __int16 v37 = 2081;
      __int16 v38 = v20;
      __int16 v39 = 2081;
      __int16 v40 = v21;
      __int16 v41 = 2081;
      uint64_t v42 = v22;
      __int16 v43 = 2081;
      uint64_t v44 = v23;
      __int16 v45 = 1025;
      int v46 = v25;
      __int16 v47 = 1026;
      int v48 = v26;
      __int16 v49 = 1026;
      BOOL v50 = v27;
      uint64_t v28 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryDisconnected(const CLAccessoryUtils::CLAccessoryInfo)", "%s\n", v28);
      if (v28 != (char *)buf) {
        free(v28);
      }
    }
  }
}

void sub_100711AFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100711B20(uint64_t a1)
{
  __chkstk_darwin(a1);
  CFStringRef v2 = v1;
  uint64_t v4 = v3;
  double v5 = sub_10016C458();
  sub_100711000(v4, 0, v5);
  double v6 = sub_1000D3E50();
  sub_1000FECE0(v2, (uint64_t)&__p);
  __src = 0;
  unint64_t v231 = 0;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    int v8 = __p.__r_.__value_.__r.__words[1];
  }
  int v9 = sub_100621DF8((unint64_t *)&__src, &v231, (char *)p_p, v8);
  if (v9)
  {
    sub_1002E9328(v283, __src, v9);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = *(std::string *)v283;
    uint64_t v10 = *(unsigned __int8 *)(v4 + 935);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = *(unsigned __int8 *)(v4 + 935);
    }
    else {
      uint64_t v11 = *(void *)(v4 + 920);
    }
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (v11 == size)
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v13 = &__p;
      }
      else {
        int v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((v10 & 0x80) != 0)
      {
        if (!memcmp(*(const void **)(v4 + 912), v13, *(void *)(v4 + 920))) {
          goto LABEL_131;
        }
      }
      else
      {
        if (!*(unsigned char *)(v4 + 935)) {
          goto LABEL_131;
        }
        int v14 = (unsigned __int8 *)(v4 + 912);
        while (*v14 == v13->__r_.__value_.__s.__data_[0])
        {
          ++v14;
          int v13 = (std::string *)((char *)v13 + 1);
          if (!--v10) {
            goto LABEL_131;
          }
        }
      }
    }
    std::string::operator=((std::string *)(v4 + 912), &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v19 = &__p;
    }
    else {
      uint64_t v19 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v20 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      int v20 = __p.__r_.__value_.__r.__words[1];
    }
    if (sub_100621D58((uint64_t)v19, v20))
    {
      if (!*(unsigned char *)(v4 + 1916) || *(int *)(v4 + 1912) < 1) {
        goto LABEL_94;
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        sub_1000DC48C(v282, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      }
      else {
        v282[0] = __p;
      }
      std::string::append(v282, "\n");
      if ((v282[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        BOOL v27 = v282;
      }
      else {
        BOOL v27 = (std::string *)v282[0].__r_.__value_.__r.__words[0];
      }
      if ((v282[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v28 = HIBYTE(v282[0].__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v28 = v282[0].__r_.__value_.__l.__size_;
      }
      ssize_t v29 = write(*(_DWORD *)(v4 + 1912), v27, v28);
      std::string::size_type v30 = v29 & ~(v29 >> 63);
      if (SHIBYTE(v282[0].__r_.__value_.__r.__words[2]) < 0)
      {
        std::string::size_type v31 = v282[0].__r_.__value_.__l.__size_;
        if (v30 >= v282[0].__r_.__value_.__l.__size_) {
          goto LABEL_93;
        }
        char v32 = (std::string *)v282[0].__r_.__value_.__r.__words[0];
      }
      else
      {
        std::string::size_type v31 = HIBYTE(v282[0].__r_.__value_.__r.__words[2]);
        if (v30 >= HIBYTE(v282[0].__r_.__value_.__r.__words[2])) {
          goto LABEL_94;
        }
        char v32 = v282;
      }
      uint64_t v33 = write(*(_DWORD *)(v4 + 1912), (char *)v32 + v30, v31 - v30) + v30;
      if (v33 < 0) {
        goto LABEL_85;
      }
      std::string::size_type v34 = HIBYTE(v282[0].__r_.__value_.__r.__words[2]);
      if ((v282[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v34 = v282[0].__r_.__value_.__l.__size_;
      }
      if (v33 < v34)
      {
LABEL_85:
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022C58B8);
        }
        __int16 v35 = qword_102419368;
        if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_ERROR))
        {
          int v36 = SHIBYTE(v282[0].__r_.__value_.__r.__words[2]);
          std::string::size_type v37 = v282[0].__r_.__value_.__r.__words[0];
          __int16 v38 = __error();
          __int16 v39 = v282;
          int v40 = *v38;
          if (v36 < 0) {
            __int16 v39 = (std::string *)v37;
          }
          *(_DWORD *)v283 = 136380931;
          *(void *)&v283[4] = v39;
          *(_WORD *)&v283[12] = 1026;
          *(_DWORD *)&v283[14] = v40;
          _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_ERROR, "CLAccessory,Wrote partial,%{private}s,errno,%{public}d", v283, 0x12u);
        }
        if (sub_10013D1A0(115, 0))
        {
          bzero(v283, 0x65CuLL);
          if (qword_102419360 != -1) {
            dispatch_once(&qword_102419360, &stru_1022C58B8);
          }
          int v170 = SHIBYTE(v282[0].__r_.__value_.__r.__words[2]);
          std::string::size_type v171 = v282[0].__r_.__value_.__r.__words[0];
          __int16 v172 = __error();
          uint64_t v173 = v282;
          int v174 = *v172;
          if (v170 < 0) {
            uint64_t v173 = (std::string *)v171;
          }
          *(_DWORD *)__str = 136380931;
          *(void *)&__str[4] = v173;
          *(_WORD *)&__str[12] = 1026;
          *(_DWORD *)&__str[14] = v174;
          int v175 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v175);
          if (v175 != v283) {
            free(v175);
          }
        }
      }
      if ((SHIBYTE(v282[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_94:
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          __int16 v41 = &__p;
        }
        else {
          __int16 v41 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v42 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          uint64_t v42 = LODWORD(__p.__r_.__value_.__r.__words[1]);
        }
        int v43 = sub_1006224A4((uint64_t)v282, (const char *)v41, v42);
        int v44 = v43;
        if (*(unsigned char *)(v4 + 1917))
        {
          switch(v43)
          {
            case 0:
            case 3:
              sub_100D1EC64((unsigned __int8 *)&__p);
              break;
            case 4:
              goto LABEL_118;
            case 5:
              goto LABEL_125;
            case 7:
              goto LABEL_124;
            default:
              goto LABEL_117;
          }
          goto LABEL_131;
        }
        __int16 v45 = (unsigned char *)(v4 + 6130);
        int v46 = (_OWORD *)(v4 + 792);
        switch(v43)
        {
          case 0:
            *(void *)(v4 + 2552) |= 2uLL;
            if (sub_1006FE7E0((unsigned __int8 *)(v4 + 936), (unsigned __int8 *)&__p))
            {
              if (qword_102419360 != -1) {
                dispatch_once(&qword_102419360, &stru_1022C58B8);
              }
              __int16 v47 = qword_102419368;
              if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_ERROR))
              {
                int v48 = &__p;
                if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  int v48 = (std::string *)__p.__r_.__value_.__r.__words[0];
                }
                *(_DWORD *)v283 = 136380675;
                *(void *)&v283[4] = v48;
                _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_ERROR, "CLAccessory,Repeated GPGGA string, %{private}s", v283, 0xCu);
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(v283, 0x65CuLL);
                if (qword_102419360 != -1) {
                  dispatch_once(&qword_102419360, &stru_1022C58B8);
                }
                __int16 v49 = &__p;
                if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  __int16 v49 = (std::string *)__p.__r_.__value_.__r.__words[0];
                }
                goto LABEL_319;
              }
              goto LABEL_142;
            }
            sub_1012257CC(v4 + 2560, (uint64_t)v282);
            std::string::operator=((std::string *)(v4 + 936), &__p);
            sub_100D1EC64((unsigned __int8 *)&__p);
            if (*(unsigned char *)(v4 + 1368))
            {
              int v56 = 0;
              *(_DWORD *)(v4 + 1364) = 0;
              goto LABEL_166;
            }
            *(_OWORD *)&v227[4] = 0uLL;
            *(_OWORD *)&v227[20] = xmmword_101D1C320;
            __asm { FMOV            V0.2D, #-1.0 }
            *(_OWORD *)&v227[36] = _Q0;
            *(_OWORD *)&v227[52] = _Q0;
            *(_OWORD *)&v227[68] = _Q0;
            *(_DWORD *)double v227 = 0xFFFF;
            *(_DWORD *)&v227[84] = 0;
            *(void *)&v227[88] = 0xBFF0000000000000;
            long long v228 = 0uLL;
            *(void *)((char *)&v229 + 4) = 0xBFF0000000000000;
            LODWORD(v229) = 0;
            HIDWORD(v229) = 0x7FFFFFFF;
            memset(v230, 0, 25);
            sub_1000DBC34(v273);
            __int16 v63 = (_DWORD *)(v4 + 6136);
            *(_DWORD *)(v4 + 6136) = 0;
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              int v64 = &__p;
            }
            else {
              int v64 = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            if (!sub_100F686B4((uint64_t)v64, (uint64_t)v227, (uint64_t)v273, (_DWORD *)(v4 + 6136))) {
              goto LABEL_300;
            }
            if (sub_1018E874C(v4 + 1392, (double *)(v4 + 120), (double *)(v4 + 128)))
            {
              if (qword_102419360 != -1) {
                dispatch_once(&qword_102419360, &stru_1022C58B8);
              }
              __int16 v65 = qword_102419368;
              if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)v283 = 0;
                _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEFAULT, "CLAccessory,GPGGA discarded al", v283, 2u);
              }
              if (sub_10013D1A0(115, 2))
              {
                bzero(v283, 0x65CuLL);
                if (qword_102419360 != -1) {
                  dispatch_once(&qword_102419360, &stru_1022C58B8);
                }
                *(_WORD *)__str = 0;
                v217 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v217);
                if (v217 != v283) {
                  free(v217);
                }
              }
              int v66 = 1;
              goto LABEL_301;
            }
            if (*v63 == 6) {
              *(void *)(v4 + 2552) |= 8uLL;
            }
            int v151 = *(_DWORD *)(v4 + 1364);
            *(_DWORD *)(v4 + 1364) = v151 + 1;
            if (*v45 && !*(unsigned char *)(v4 + 6216))
            {
              int v66 = 0;
              if (v151 < 5 || (v151 + 1) % 0xAu)
              {
LABEL_301:
                if (v275) {
                  sub_1000DB0A0(v275);
                }
                if (!v66)
                {
                  int v56 = 0;
                  goto LABEL_166;
                }
                if (v66 == 20) {
                  goto LABEL_127;
                }
                goto LABEL_131;
              }
              if (qword_102419360 != -1) {
                dispatch_once(&qword_102419360, &stru_1022C58B8);
              }
              uint64_t v165 = qword_102419368;
              if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
              {
                int v166 = *(_DWORD *)(v4 + 1364);
                *(_DWORD *)v283 = 67240192;
                *(_DWORD *)&v283[4] = v166;
                _os_log_impl((void *)&_mh_execute_header, v165, OS_LOG_TYPE_DEBUG, "CLAccessory,GPGGA only accessory data ignored,numGGAWithoutRMC,%{public}d", v283, 8u);
              }
              if (sub_10013D1A0(115, 2))
              {
                bzero(v283, 0x65CuLL);
                if (qword_102419360 != -1) {
                  dispatch_once(&qword_102419360, &stru_1022C58B8);
                }
                int v221 = *(_DWORD *)(v4 + 1364);
                *(_DWORD *)__str = 67240192;
                *(_DWORD *)&__str[4] = v221;
                int v222 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v222);
                if (v222 != v283) {
                  free(v222);
                }
              }
            }
            else if (v151 >= 5)
            {
              int v152 = *(_DWORD *)(v4 + 2424);
              LODWORD(v228) = 3;
              *(_DWORD *)int v230 = v152;
              *(void *)&v227[88] = 0x4024000000000000;
              sub_1000DB3D4((uint64_t)__str);
              long long v260 = v228;
              long long v261 = v229;
              v262[0] = *(_OWORD *)v230;
              *(_OWORD *)((char *)v262 + 12) = *(_OWORD *)&v230[12];
              *(_OWORD *)&char __str[32] = *(_OWORD *)&v227[32];
              long long v257 = *(_OWORD *)&v227[48];
              long long v258 = *(_OWORD *)&v227[64];
              long long v259 = *(_OWORD *)&v227[80];
              *(_OWORD *)__str = *(_OWORD *)v227;
              *(_OWORD *)&__str[16] = *(_OWORD *)&v227[16];
              memcpy(v263, v273, sizeof(v263));
              uint64_t v153 = v274;
              uint64_t v154 = v275;
              if (v275) {
                atomic_fetch_add_explicit(&v275->__shared_owners_, 1uLL, memory_order_relaxed);
              }
              uint64_t v264 = v153;
              __int16 v155 = v265;
              double v265 = v154;
              if (v155) {
                sub_1000DB0A0(v155);
              }
              long long v270 = v280;
              v271[0] = *(_OWORD *)v281;
              *(void *)((char *)v271 + 13) = *(void *)&v281[13];
              long long v266 = v276;
              long long v267 = v277;
              long long v268 = v278;
              long long v269 = v279;
              if (qword_102419650 != -1) {
                dispatch_once(&qword_102419650, &stru_1022C58D8);
              }
              unint64_t v156 = qword_102419658;
              if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
              {
                uint64_t v157 = *(void *)(v4 + 2552);
                int v158 = *v45;
                *(_DWORD *)v283 = 136317698;
                *(void *)&v283[4] = "CL-Accessory";
                *(_WORD *)&v283[12] = 1024;
                *(_DWORD *)&v283[14] = 1;
                *(_WORD *)&v283[18] = 2048;
                *(void *)&v283[20] = *(void *)&v227[4];
                *(_WORD *)&v283[28] = 2048;
                *(void *)&v283[30] = *(void *)&v227[12];
                *(_WORD *)&v283[38] = 2048;
                *(void *)&v283[40] = *(void *)&v227[20];
                *(_WORD *)&v283[48] = 2050;
                *(void *)&v283[50] = *(void *)&v227[44];
                *(_WORD *)&v283[58] = 2050;
                *(void *)&v283[60] = *(void *)&v227[60];
                *(_WORD *)&v283[68] = 2050;
                *(void *)&v283[70] = *(void *)&v273[24];
                *(_WORD *)&v283[78] = 1026;
                *(_DWORD *)&v283[80] = *(_DWORD *)v230;
                *(_WORD *)&v283[84] = 1026;
                *(_DWORD *)&v283[86] = v157;
                *(_WORD *)&v283[90] = 1026;
                *(_DWORD *)&v283[92] = v158;
                _os_log_impl((void *)&_mh_execute_header, v156, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Speed,%{public}.2f,Course,%{public}.2f,timestampGps,%{public}.2lf,GgaOnly,integrity,%{public}d,accessoryTypeBitSet,%{public}d,supportsCarPlay,%{public}d", v283, 0x60u);
              }
              if (sub_10013D1A0(117, 2))
              {
                bzero(v283, 0x65CuLL);
                if (qword_102419650 != -1) {
                  dispatch_once(&qword_102419650, &stru_1022C58D8);
                }
                uint64_t v218 = *(void *)(v4 + 2552);
                int v219 = *v45;
                int v234 = 136317698;
                double v235 = "CL-Accessory";
                __int16 v236 = 1024;
                int v237 = 1;
                __int16 v238 = 2048;
                uint64_t v239 = *(void *)&v227[4];
                __int16 v240 = 2048;
                uint64_t v241 = *(void *)&v227[12];
                __int16 v242 = 2048;
                uint64_t v243 = *(void *)&v227[20];
                __int16 v244 = 2050;
                uint64_t v245 = *(void *)&v227[44];
                __int16 v246 = 2050;
                uint64_t v247 = *(void *)&v227[60];
                __int16 v248 = 2050;
                uint64_t v249 = *(void *)&v273[24];
                __int16 v250 = 1026;
                int v251 = *(_DWORD *)v230;
                __int16 v252 = 1026;
                int v253 = v218;
                __int16 v254 = 1026;
                int v255 = v219;
                v220 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("LOCATION", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v220);
                if (v220 != v283) {
                  free(v220);
                }
              }
              *(_DWORD *)v283 = 0;
              (*(void (**)(uint64_t, unsigned char *, unsigned char *, void, uint64_t, void))(*(void *)v4 + 152))(v4, v283, __str, 0, 0xFFFFFFFFLL, 0);
              [*(id *)(v4 + 984) setNextFireDelay:5.0];
              sub_1012223CC(v4 + 2560, (uint64_t)__str, *v63 == 6);
              sub_1000DBC34(v283);
              memcpy((void *)(v4 + 272), v283, 0x201uLL);
              long long v159 = v284;
              long long v284 = 0u;
              int v160 = *(std::__shared_weak_count **)(v4 + 800);
              _OWORD *v46 = v159;
              if (v160)
              {
                sub_1000DB0A0(v160);
                __int16 v161 = (std::__shared_weak_count *)*((void *)&v284 + 1);
                long long v162 = v290[0];
                *(_OWORD *)(v4 + 872) = v289;
                *(_OWORD *)(v4 + 888) = v162;
                *(void *)(v4 + 901) = *(void *)((char *)v290 + 13);
                long long v163 = v286;
                *(_OWORD *)(v4 + 808) = v285;
                *(_OWORD *)(v4 + 824) = v163;
                long long v164 = v288;
                *(_OWORD *)(v4 + 840) = v287;
                *(_OWORD *)(v4 + 856) = v164;
                if (v161) {
                  sub_1000DB0A0(v161);
                }
              }
              else
              {
                long long v167 = v290[0];
                *(_OWORD *)(v4 + 872) = v289;
                *(_OWORD *)(v4 + 888) = v167;
                *(void *)(v4 + 901) = *(void *)((char *)v290 + 13);
                long long v168 = v286;
                *(_OWORD *)(v4 + 808) = v285;
                *(_OWORD *)(v4 + 824) = v168;
                long long v169 = v288;
                *(_OWORD *)(v4 + 840) = v287;
                *(_OWORD *)(v4 + 856) = v169;
              }
              sub_100458658((uint64_t)__str);
              int v66 = 20;
              goto LABEL_301;
            }
LABEL_300:
            int v66 = 0;
            goto LABEL_301;
          case 3:
            *(void *)(v4 + 2552) |= 4uLL;
            if (sub_1006FE7E0((unsigned __int8 *)(v4 + 960), (unsigned __int8 *)&__p))
            {
              if (qword_102419360 != -1) {
                dispatch_once(&qword_102419360, &stru_1022C58B8);
              }
              int v54 = qword_102419368;
              if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_ERROR))
              {
                __int16 v55 = &__p;
                if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  __int16 v55 = (std::string *)__p.__r_.__value_.__r.__words[0];
                }
                *(_DWORD *)v283 = 136380675;
                *(void *)&v283[4] = v55;
                _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_ERROR, "CLAccessory,Repeated GPRMC string, %{private}s", v283, 0xCu);
              }
              if (sub_10013D1A0(115, 0))
              {
                bzero(v283, 0x65CuLL);
                if (qword_102419360 != -1) {
                  dispatch_once(&qword_102419360, &stru_1022C58B8);
                }
                __int16 v49 = &__p;
                if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  __int16 v49 = (std::string *)__p.__r_.__value_.__r.__words[0];
                }
LABEL_319:
                *(_DWORD *)__str = 136380675;
                *(void *)&__str[4] = v49;
                __int16 v176 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v176);
                if (v176 != v283) {
                  free(v176);
                }
              }
LABEL_142:
              sub_101225FC0((_DWORD *)(v4 + 2560), v44);
              goto LABEL_131;
            }
            int v57 = *(unsigned __int8 *)(v4 + 2545);
            if (*(unsigned char *)(v4 + 2545))
            {
              int v57 = *v45;
              if (*v45)
              {
                if (*(unsigned char *)(v4 + 2547)) {
                  int v57 = 0;
                }
                else {
                  int v57 = *(unsigned char *)(v4 + 6140) != 0;
                }
              }
            }
            if (*(unsigned char *)(v4 + 2546)) {
              int v57 = 1;
            }
            if (*(unsigned __int8 *)(v4 + 2408) != v57)
            {
              *(void *)(v4 + 2376) = 0;
              *(unsigned char *)(v4 + 2384) = 1;
            }
            *(unsigned char *)(v4 + 2408) = v57;
            std::string::operator=((std::string *)(v4 + 960), &__p);
            sub_100D1EC64((unsigned __int8 *)&__p);
            int v56 = 1;
            *(unsigned char *)(v4 + 1368) = 1;
LABEL_166:
            int v234 = 0;
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              __int16 v67 = &__p;
            }
            else {
              __int16 v67 = (std::string *)__p.__r_.__value_.__r.__words[0];
            }
            if (!sub_100F67270((const char *)v67, v4 + 116, v4 + 272, &v234, v4 + 1952))
            {
              if (v56)
              {
                ++*(_DWORD *)(v4 + 3616);
                if (qword_1024193A0 != -1) {
                  dispatch_once(&qword_1024193A0, &stru_1022C58F8);
                }
                long long v69 = qword_1024193A8;
                if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v70 = *(void *)(v4 + 2552);
                  *(_DWORD *)v283 = 67240192;
                  *(_DWORD *)&v283[4] = v70;
                  _os_log_impl((void *)&_mh_execute_header, v69, OS_LOG_TYPE_DEFAULT, "@ClxAccessory, Fix, 0, ll, N/A,accessoryType,%{public}d", v283, 8u);
                }
                if (sub_10013D1A0(115, 2))
                {
                  bzero(v283, 0x65CuLL);
                  if (qword_1024193A0 != -1) {
                    dispatch_once(&qword_1024193A0, &stru_1022C58F8);
                  }
                  uint64_t v71 = *(void *)(v4 + 2552);
                  *(_DWORD *)__str = 67240192;
                  *(_DWORD *)&__str[4] = v71;
                  long long v72 = (char *)_os_log_send_and_compose_impl();
                  sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v72);
                  if (v72 != v283) {
                    free(v72);
                  }
                }
              }
              goto LABEL_127;
            }
            if (sub_1018E874C(v4 + 1392, (double *)(v4 + 120), (double *)(v4 + 128)))
            {
              if (qword_102419360 != -1) {
                dispatch_once(&qword_102419360, &stru_1022C58B8);
              }
              BOOL v68 = qword_102419368;
              if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)v283 = 0;
                _os_log_impl((void *)&_mh_execute_header, v68, OS_LOG_TYPE_DEFAULT, "CLAccessory,GPRMC discarded al", v283, 2u);
              }
              if (!sub_10013D1A0(115, 2)) {
                goto LABEL_131;
              }
              bzero(v283, 0x65CuLL);
              if (qword_102419360 == -1) {
                goto LABEL_177;
              }
              goto LABEL_359;
            }
            if (v56) {
              sub_101225AFC(v4 + 2560, (uint64_t)v282);
            }
            id v73 = sub_100DEEE7C(*(double *)(v4 + 120), *(double *)(v4 + 128));
            if (*(unsigned __int8 *)(v4 + 1372) != v73)
            {
              [(id)qword_10247D258 sendGPRMCDataStatusValues:v73];
              *(unsigned char *)(v4 + 1372) = (_BYTE)v73;
              if (qword_102419360 != -1) {
                dispatch_once(&qword_102419360, &stru_1022C58B8);
              }
              unint64_t v74 = qword_102419368;
              if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
              {
                int v75 = *(unsigned __int8 *)(v4 + 1372);
                *(_DWORD *)v283 = 67174913;
                *(_DWORD *)&v283[4] = v73;
                *(_WORD *)&v283[8] = 1025;
                *(_DWORD *)&v283[10] = v75;
                _os_log_impl((void *)&_mh_execute_header, v74, OS_LOG_TYPE_DEBUG, "CLAccessory,onAccessoryNmeaReceived,sendGPRMCDataStatusValues,isShifting,%{private}d,fIsShifting,%{private}d", v283, 0xEu);
              }
              if (sub_10013D1A0(115, 2))
              {
                bzero(v283, 0x65CuLL);
                if (qword_102419360 != -1) {
                  dispatch_once(&qword_102419360, &stru_1022C58B8);
                }
                int v206 = *(unsigned __int8 *)(v4 + 1372);
                *(_DWORD *)__str = 67174913;
                *(_DWORD *)&__str[4] = v73;
                *(_WORD *)&__str[8] = 1025;
                *(_DWORD *)&__str[10] = v206;
                v207 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v207);
                if (v207 != v283) {
                  free(v207);
                }
              }
            }
            if ((v73 & 1) == 0 && *(_DWORD *)(v4 + 248) == 2)
            {
              if (qword_102419360 != -1) {
                dispatch_once(&qword_102419360, &stru_1022C58B8);
              }
              float64_t v76 = qword_102419368;
              if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
              {
                *(_WORD *)v283 = 0;
                _os_log_impl((void *)&_mh_execute_header, v76, OS_LOG_TYPE_DEBUG, "isShiftingSupported,0,discarding", v283, 2u);
              }
              if (!sub_10013D1A0(115, 2)) {
                goto LABEL_131;
              }
              bzero(v283, 0x65CuLL);
              if (qword_102419360 == -1)
              {
LABEL_177:
                *(_WORD *)__str = 0;
                uint64_t v18 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v18);
                goto LABEL_67;
              }
LABEL_359:
              dispatch_once(&qword_102419360, &stru_1022C58B8);
              goto LABEL_177;
            }
            if (qword_102419650 != -1) {
              dispatch_once(&qword_102419650, &stru_1022C58D8);
            }
            long long v77 = qword_102419658;
            if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v78 = *(void *)(v4 + 120);
              uint64_t v79 = *(void *)(v4 + 128);
              uint64_t v80 = *(void *)(v4 + 136);
              __int16 v81 = &__p;
              if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                __int16 v81 = (std::string *)__p.__r_.__value_.__r.__words[0];
              }
              *(_DWORD *)v283 = 136316418;
              *(void *)&v283[4] = "NMEA";
              *(_WORD *)&v283[12] = 1024;
              *(_DWORD *)&v283[14] = 0;
              *(_WORD *)&v283[18] = 2048;
              *(void *)&v283[20] = v78;
              *(_WORD *)&v283[28] = 2048;
              *(void *)&v283[30] = v79;
              *(_WORD *)&v283[38] = 2048;
              *(void *)&v283[40] = v80;
              *(_WORD *)&v283[48] = 2080;
              *(void *)&v283[50] = v81;
              _os_log_impl((void *)&_mh_execute_header, v77, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Sentence,\"%s\",", v283, 0x3Au);
            }
            if (sub_10013D1A0(117, 2))
            {
              bzero(v283, 0x65CuLL);
              if (qword_102419650 != -1) {
                dispatch_once(&qword_102419650, &stru_1022C58D8);
              }
              uint64_t v177 = *(void *)(v4 + 120);
              uint64_t v178 = *(void *)(v4 + 128);
              uint64_t v179 = *(void *)(v4 + 136);
              long long v180 = &__p;
              if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                long long v180 = (std::string *)__p.__r_.__value_.__r.__words[0];
              }
              *(_DWORD *)__str = 136316418;
              *(void *)&__str[4] = "NMEA";
              *(_WORD *)&__str[12] = 1024;
              *(_DWORD *)&__str[14] = 0;
              *(_WORD *)&__str[18] = 2048;
              *(void *)&__str[20] = v177;
              *(_WORD *)&__str[28] = 2048;
              *(void *)&__str[30] = v178;
              *(_WORD *)&__str[38] = 2048;
              *(void *)&__str[40] = v179;
              LOWORD(v257) = 2080;
              *(void *)((char *)&v257 + 2) = v180;
              long long v181 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("LOCATION", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v181);
              if (v181 != v283) {
                free(v181);
              }
            }
            if (*(unsigned char *)(v4 + 1360))
            {
              [*(id *)(*(void *)(v4 + 1312) + 16) unregister:*(void *)(*(void *)(v4 + 1312) + 8) forNotification:4];
              *(unsigned char *)(v4 + 1360) = 0;
            }
            if (*(unsigned char *)(v4 + 1361))
            {
              [*(id *)(*(void *)(v4 + 1320) + 16) unregister:*(void *)(*(void *)(v4 + 1320) + 8) forNotification:0];
              *(unsigned char *)(v4 + 1361) = 0;
            }
            sub_1000DB3D4((uint64_t)__str);
            *(_DWORD *)(v4 + 212) = 3;
            *(_DWORD *)(v4 + 244) = *(_DWORD *)(v4 + 2424);
            *(void *)(v4 + 204) = 0x4024000000000000;
            int v272 = HIDWORD(v282[3].__r_.__value_.__r.__words[2]);
            *(_DWORD *)(v4 + 904) = 1;
            if (!*v45) {
              goto LABEL_229;
            }
            int v82 = *(unsigned char *)(v4 + 2547) ? 3 : 2;
            *(_DWORD *)(v4 + 904) = v82;
            if (*(double *)(v4 + 176) < 0.0) {
              goto LABEL_229;
            }
            double v83 = *(double *)(v4 + 6200);
            if (*(double *)(v4 + 184) <= v83) {
              goto LABEL_229;
            }
            double v84 = *(double *)(v4 + 160);
            if (v84 < 0.0 || v84 > *(double *)(v4 + 6208)) {
              goto LABEL_229;
            }
            if (*(_DWORD *)(v4 + 6136) == 6) {
              goto LABEL_228;
            }
            if (sub_100622498((uint64_t)v282, 0x200u)
              && HIDWORD(v282[3].__r_.__value_.__r.__words[2]) == 69)
            {
              double v83 = *(double *)(v4 + 6200);
LABEL_228:
              *(double *)(v4 + 184) = v83;
            }
LABEL_229:
            if (*(unsigned char *)(v4 + 2544))
            {
              double v85 = *(double *)(v4 + 184);
              double v86 = *(double *)(v4 + 176);
              sub_100735708(v4 + 2440, (double *)(v4 + 176), (double *)(v4 + 184), *(double *)(v4 + 192), *(double *)(v4 + 120), *(double *)(v4 + 128), *(double *)(v4 + 160));
              if (v86 != *(double *)(v4 + 176) || v85 != *(double *)(v4 + 184))
              {
                if (qword_102419360 != -1) {
                  dispatch_once(&qword_102419360, &stru_1022C58B8);
                }
                __int16 v87 = qword_102419368;
                if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
                {
                  uint64_t v89 = *(void *)(v4 + 184);
                  uint64_t v88 = *(void *)(v4 + 192);
                  uint64_t v90 = *(void *)(v4 + 176);
                  uint64_t v91 = *(void *)(v4 + 120);
                  uint64_t v92 = *(void *)(v4 + 128);
                  uint64_t v93 = *(void *)(v4 + 160);
                  *(_DWORD *)v283 = 134350849;
                  *(void *)&v283[4] = v88;
                  *(_WORD *)&v283[12] = 2050;
                  *(double *)&v283[14] = v86;
                  *(_WORD *)&v283[22] = 2050;
                  *(void *)&v283[24] = v90;
                  *(_WORD *)&v283[32] = 2050;
                  *(double *)&v283[34] = v85;
                  *(_WORD *)&v283[42] = 2050;
                  *(void *)&v283[44] = v89;
                  *(_WORD *)&v283[52] = 2049;
                  *(void *)&v283[54] = v91;
                  *(_WORD *)&v283[62] = 2049;
                  *(void *)&v283[64] = v92;
                  *(_WORD *)&v283[72] = 2050;
                  *(void *)&v283[74] = v93;
                  _os_log_impl((void *)&_mh_execute_header, v87, OS_LOG_TYPE_INFO, "CLAccessory,courseScreener,%{public}.2lf,prevCourse,%{public}.2lf,newCourse,%{public}.2lf,prevCourseUnc,%{public}.2lf,newCourseUnc,%{public}.2lf,LL,%{private}.7lf,%{private}.7lf,speed,%{public}.2lf", v283, 0x52u);
                }
                if (sub_10013D1A0(115, 2))
                {
                  bzero(v283, 0x65CuLL);
                  if (qword_102419360 != -1) {
                    dispatch_once(&qword_102419360, &stru_1022C58B8);
                  }
                  uint64_t v209 = *(void *)(v4 + 184);
                  uint64_t v208 = *(void *)(v4 + 192);
                  uint64_t v210 = *(void *)(v4 + 176);
                  uint64_t v211 = *(void *)(v4 + 120);
                  uint64_t v212 = *(void *)(v4 + 128);
                  uint64_t v213 = *(void *)(v4 + 160);
                  *(_DWORD *)double v273 = 134350849;
                  *(void *)&v273[4] = v208;
                  *(_WORD *)&v273[12] = 2050;
                  *(double *)&v273[14] = v86;
                  *(_WORD *)&v273[22] = 2050;
                  *(void *)&v273[24] = v210;
                  *(_WORD *)&v273[32] = 2050;
                  *(double *)&v273[34] = v85;
                  *(_WORD *)&v273[42] = 2050;
                  *(void *)&v273[44] = v209;
                  *(_WORD *)&v273[52] = 2049;
                  *(void *)&v273[54] = v211;
                  *(_WORD *)&v273[62] = 2049;
                  *(void *)&v273[64] = v212;
                  *(_WORD *)&v273[72] = 2050;
                  *(void *)&v273[74] = v213;
                  v214 = (char *)_os_log_send_and_compose_impl();
                  sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v214);
                  if (v214 != v283) {
                    free(v214);
                  }
                }
              }
            }
            *(void *)double v227 = 0;
            double Current = CFAbsoluteTimeGetCurrent();
            *(double *)double v227 = Current;
            if (Current - *(double *)(v4 + 1888) > 5.0)
            {
              sub_100ABF2B8(v4 + 992, (double *)v227, *(double *)(v4 + 176), *(double *)(v4 + 160));
              sub_100714990((double *)v4, Current, v95);
            }
            if (*(void *)(v4 + 1384))
            {
              sub_100103240();
              float64_t v96 = (CLMotionActivity *)sub_10016CCBC();
              if (v96)
              {
                *(void *)&v283[80] = 0;
                memset(v283, 0, 48);
                *(_DWORD *)&v283[88] = 1;
                memset(&v283[128], 0, 17);
                *(void *)&v283[160] = 0xBFF0000000000000;
                v283[168] = 0;
                *(void *)&v283[184] = 0xBFF0000000000000;
                v283[192] = 0;
                __asm { FMOV            V1.2D, #-1.0 }
                *(_OWORD *)&v283[200] = _Q1;
                v283[216] = 0;
                memset(&v283[224], 0, 56);
                *(_DWORD *)&v283[280] = 1065353216;
                *(void *)&v283[288] = 0x100000005;
                *(void *)&v283[296] = 0;
                *(_OWORD *)&v283[56] = *(_OWORD *)(v4 + 120);
                double v98 = *(double *)(v4 + 136);
                *(void *)&v283[72] = *(void *)(v4 + 144);
                v283[48] = 1;
                *(double *)&v283[112] = v98 * 1.73241161;
                *(double *)&v283[120] = v98 * 1.73241161;
                *(void *)&_Q1 = *(void *)(v4 + 152);
                uint64_t v99 = *(void *)(v4 + 160);
                *(double *)&v283[96] = v98;
                *(void *)&v283[104] = _Q1;
                *(void *)&v283[152] = v99;
                *(void *)&v283[176] = *(void *)(v4 + 176);
                *(void *)&v283[16] = *(void *)(v4 + 296);
                memset(v273, 0, 136);
                CLMotionActivity::getInit((uint64_t *)v273, v96);
                sub_10099E240(*(void *)(v4 + 1384), (uint64_t)v283, (uint64_t)v273);
                if (v283[216])
                {
                  *(_OWORD *)(v4 + 272) = *(_OWORD *)&v283[224];
                  *(void *)(v4 + 288) = *(void *)&v283[240];
                }
                sub_10071874C((uint64_t)&v283[248]);
              }
            }
            if (*(_DWORD *)(v4 + 248) == 2)
            {
              *(void *)(v4 + 2552) |= 0x10uLL;
              ++*(_DWORD *)(v4 + 2812);
            }
            uint64_t v101 = *(void *)(v4 + 120);
            uint64_t v100 = *(void *)(v4 + 128);
            BOOL v102 = sub_100EEF6CC(v4 + 1608, v4 + 116);
            BOOL v103 = v102;
            char v104 = *(_DWORD *)(v4 + 248) != 2 || v102;
            if ((v104 & 1) == 0)
            {
              if (qword_102419360 != -1) {
                dispatch_once(&qword_102419360, &stru_1022C58B8);
              }
              uint64_t v105 = qword_102419368;
              if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
              {
                uint64_t v106 = *(void *)(v4 + 296);
                *(_DWORD *)v283 = 134349056;
                *(void *)&v283[4] = v106;
                _os_log_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_INFO, "CLAccessory,%{public}.1lf,CLAccessory,handleShiftedAccessoryData failed, shifted data sent to client", v283, 0xCu);
              }
              if (sub_10013D1A0(115, 2))
              {
                bzero(v283, 0x65CuLL);
                if (qword_102419360 != -1) {
                  dispatch_once(&qword_102419360, &stru_1022C58B8);
                }
                uint64_t v215 = *(void *)(v4 + 296);
                *(_DWORD *)double v273 = 134349056;
                *(void *)&v273[4] = v215;
                uint64_t v216 = (char *)_os_log_send_and_compose_impl();
                sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v216);
                if (v216 != v283) {
                  free(v216);
                }
              }
            }
            if (*(unsigned char *)(v4 + 2548)) {
              *(unsigned char *)(v4 + 784) = 1;
            }
            long long v107 = *(_OWORD *)(v4 + 228);
            long long v260 = *(_OWORD *)(v4 + 212);
            long long v261 = v107;
            v262[0] = *(_OWORD *)(v4 + 244);
            *(_OWORD *)((char *)v262 + 12) = *(_OWORD *)(v4 + 256);
            long long v108 = *(_OWORD *)(v4 + 164);
            *(_OWORD *)&char __str[32] = *(_OWORD *)(v4 + 148);
            long long v257 = v108;
            long long v109 = *(_OWORD *)(v4 + 196);
            long long v258 = *(_OWORD *)(v4 + 180);
            long long v259 = v109;
            long long v110 = *(_OWORD *)(v4 + 132);
            *(_OWORD *)__str = *(_OWORD *)(v4 + 116);
            *(_OWORD *)&__str[16] = v110;
            memcpy(v263, (const void *)(v4 + 272), sizeof(v263));
            uint64_t v111 = *(void *)(v4 + 792);
            __int16 v112 = *(std::__shared_weak_count **)(v4 + 800);
            if (v112) {
              atomic_fetch_add_explicit(&v112->__shared_owners_, 1uLL, memory_order_relaxed);
            }
            uint64_t v264 = v111;
            uint64_t v113 = v265;
            double v265 = v112;
            if (v113) {
              sub_1000DB0A0(v113);
            }
            __int16 v114 = (_OWORD *)(v4 + 808);
            long long v115 = *(_OWORD *)(v4 + 888);
            long long v270 = *(_OWORD *)(v4 + 872);
            v271[0] = v115;
            *(void *)((char *)v271 + 13) = *(void *)(v4 + 901);
            long long v116 = *(_OWORD *)(v4 + 824);
            long long v266 = *(_OWORD *)(v4 + 808);
            long long v267 = v116;
            long long v117 = *(_OWORD *)(v4 + 856);
            long long v268 = *(_OWORD *)(v4 + 840);
            long long v269 = v117;
            if (qword_102419650 != -1) {
              dispatch_once(&qword_102419650, &stru_1022C58D8);
            }
            long long v118 = qword_102419658;
            if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
            {
              uint64_t v119 = *(void *)(v4 + 120);
              uint64_t v120 = *(void *)(v4 + 128);
              uint64_t v121 = *(void *)(v4 + 136);
              uint64_t v122 = *(void *)(v4 + 160);
              uint64_t v123 = *(void *)(v4 + 176);
              uint64_t v124 = *(void *)(v4 + 272);
              uint64_t v125 = *(void *)(v4 + 280);
              uint64_t v127 = *(void *)(v4 + 288);
              uint64_t v126 = *(void *)(v4 + 296);
              uint64_t v128 = *(void *)(v4 + 2552);
              uint64_t v129 = *(void *)(v4 + 1888);
              int v130 = *(_DWORD *)(v4 + 244);
              int v131 = *(_DWORD *)(v4 + 248);
              int v132 = *(unsigned __int8 *)(v4 + 784);
              *(_DWORD *)v283 = 136319747;
              *(void *)&v283[4] = "CL-Accessory";
              *(_WORD *)&v283[12] = 1024;
              *(_DWORD *)&v283[14] = 1;
              *(_WORD *)&v283[18] = 2048;
              *(void *)&v283[20] = v119;
              *(_WORD *)&v283[28] = 2048;
              *(void *)&v283[30] = v120;
              *(_WORD *)&v283[38] = 2048;
              *(void *)&v283[40] = v121;
              *(_WORD *)&v283[48] = 2050;
              *(void *)&v283[50] = v122;
              *(_WORD *)&v283[58] = 2050;
              *(void *)&v283[60] = v123;
              *(_WORD *)&v283[68] = 2050;
              *(void *)&v283[70] = v126;
              *(_WORD *)&v283[78] = 1026;
              *(_DWORD *)&v283[80] = v130;
              *(_WORD *)&v283[84] = 2050;
              *(void *)&v283[86] = v124;
              *(_WORD *)&v283[94] = 2050;
              *(void *)&v283[96] = v125;
              *(_WORD *)&v283[104] = 2050;
              *(void *)&v283[106] = v127;
              *(_WORD *)&v283[114] = 1026;
              *(_DWORD *)&v283[116] = v103;
              *(_WORD *)&v283[120] = 2049;
              *(void *)&v283[122] = v101;
              *(_WORD *)&v283[130] = 2049;
              *(void *)&v283[132] = v100;
              *(_WORD *)&v283[140] = 1026;
              *(_DWORD *)&v283[142] = v128;
              *(_WORD *)&v283[146] = 2050;
              *(void *)&v283[148] = v129;
              *(_WORD *)&v283[156] = 1026;
              *(_DWORD *)&v283[158] = v131;
              *(_WORD *)&v283[162] = 1026;
              *(_DWORD *)&v283[164] = v132;
              _os_log_impl((void *)&_mh_execute_header, v118, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Speed,%{public}.2f,Course,%{public}.2f,timestampGps,%{public}.2lf,integrity,%{public}d,odometer,%{public}.2f,deltaDist,%{public}.2f,deltaDistUnc,%{public}.2f,modified,%{public}d,origLL,%{private}.7lf,%{private}.7lf,accessoryType,%{public}d,lastHdtTime,%{public}.1lf,refFrame,%{public}d,isSimulatedOrSpoofed,%{public}d", v283, 0xA8u);
            }
            if (sub_10013D1A0(117, 2))
            {
              bzero(v283, 0x65CuLL);
              if (qword_102419650 != -1) {
                dispatch_once(&qword_102419650, &stru_1022C58D8);
              }
              uint64_t v182 = *(void *)(v4 + 120);
              uint64_t v183 = *(void *)(v4 + 128);
              uint64_t v184 = *(void *)(v4 + 136);
              uint64_t v185 = *(void *)(v4 + 160);
              uint64_t v186 = *(void *)(v4 + 176);
              uint64_t v187 = *(void *)(v4 + 272);
              uint64_t v188 = *(void *)(v4 + 280);
              uint64_t v190 = *(void *)(v4 + 288);
              uint64_t v189 = *(void *)(v4 + 296);
              uint64_t v191 = *(void *)(v4 + 2552);
              uint64_t v192 = *(void *)(v4 + 1888);
              int v193 = *(_DWORD *)(v4 + 244);
              int v194 = *(_DWORD *)(v4 + 248);
              int v195 = *(unsigned __int8 *)(v4 + 784);
              *(_DWORD *)double v273 = 136319747;
              *(void *)&v273[4] = "CL-Accessory";
              *(_WORD *)&v273[12] = 1024;
              *(_DWORD *)&v273[14] = 1;
              *(_WORD *)&v273[18] = 2048;
              *(void *)&v273[20] = v182;
              *(_WORD *)&v273[28] = 2048;
              *(void *)&v273[30] = v183;
              *(_WORD *)&v273[38] = 2048;
              *(void *)&v273[40] = v184;
              *(_WORD *)&v273[48] = 2050;
              *(void *)&v273[50] = v185;
              *(_WORD *)&v273[58] = 2050;
              *(void *)&v273[60] = v186;
              *(_WORD *)&v273[68] = 2050;
              *(void *)&v273[70] = v189;
              *(_WORD *)&v273[78] = 1026;
              *(_DWORD *)&v273[80] = v193;
              *(_WORD *)&v273[84] = 2050;
              *(void *)&v273[86] = v187;
              *(_WORD *)&v273[94] = 2050;
              *(void *)&v273[96] = v188;
              *(_WORD *)&v273[104] = 2050;
              *(void *)&v273[106] = v190;
              *(_WORD *)&v273[114] = 1026;
              *(_DWORD *)&v273[116] = v103;
              *(_WORD *)&v273[120] = 2049;
              *(void *)&v273[122] = v101;
              *(_WORD *)&v273[130] = 2049;
              *(void *)&v273[132] = v100;
              *(_WORD *)&v273[140] = 1026;
              *(_DWORD *)&v273[142] = v191;
              *(_WORD *)&v273[146] = 2050;
              *(void *)&v273[148] = v192;
              *(_WORD *)&v273[156] = 1026;
              *(_DWORD *)&v273[158] = v194;
              *(_WORD *)&v273[162] = 1026;
              *(_DWORD *)&v273[164] = v195;
              long long v196 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("LOCATION", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v196);
              if (v196 != v283) {
                free(v196);
              }
            }
            *(_DWORD *)v283 = 0;
            (*(void (**)(uint64_t, unsigned char *, unsigned char *, void, uint64_t, void))(*(void *)v4 + 152))(v4, v283, __str, 0, 0xFFFFFFFFLL, 0);
            [*(id *)(v4 + 984) setNextFireDelay:5.0];
            sub_1012223CC(v4 + 2560, (uint64_t)__str, *(_DWORD *)(v4 + 6136) == 6);
            sub_1000DBC34(v283);
            memcpy((void *)(v4 + 272), v283, 0x201uLL);
            long long v133 = v284;
            long long v284 = 0u;
            long long v134 = *(std::__shared_weak_count **)(v4 + 800);
            _OWORD *v46 = v133;
            if (v134)
            {
              sub_1000DB0A0(v134);
              long long v135 = (std::__shared_weak_count *)*((void *)&v284 + 1);
              long long v136 = v290[0];
              *(_OWORD *)(v4 + 872) = v289;
              *(_OWORD *)(v4 + 888) = v136;
              *(void *)(v4 + 901) = *(void *)((char *)v290 + 13);
              long long v137 = v286;
              *__int16 v114 = v285;
              *(_OWORD *)(v4 + 824) = v137;
              long long v138 = v288;
              *(_OWORD *)(v4 + 840) = v287;
              *(_OWORD *)(v4 + 856) = v138;
              if (v135) {
                sub_1000DB0A0(v135);
              }
            }
            else
            {
              long long v139 = v290[0];
              *(_OWORD *)(v4 + 872) = v289;
              *(_OWORD *)(v4 + 888) = v139;
              *(void *)(v4 + 901) = *(void *)((char *)v290 + 13);
              long long v140 = v286;
              *__int16 v114 = v285;
              *(_OWORD *)(v4 + 824) = v140;
              long long v141 = v288;
              *(_OWORD *)(v4 + 840) = v287;
              *(_OWORD *)(v4 + 856) = v141;
            }
            if (qword_1024193A0 != -1) {
              dispatch_once(&qword_1024193A0, &stru_1022C58F8);
            }
            long long v142 = qword_1024193A8;
            if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v143 = *(void *)(v4 + 120);
              uint64_t v144 = *(void *)(v4 + 128);
              uint64_t v145 = *(void *)(v4 + 136);
              uint64_t v146 = *(void *)(v4 + 160);
              uint64_t v147 = *(void *)(v4 + 176);
              uint64_t v148 = *(void *)(v4 + 2552);
              int v149 = *(_DWORD *)(v4 + 248);
              uint64_t v150 = *(void *)(v4 + 192);
              *(_DWORD *)v283 = 134285313;
              *(void *)&v283[4] = v143;
              *(_WORD *)&v283[12] = 2049;
              *(void *)&v283[14] = v144;
              *(_WORD *)&v283[22] = 2050;
              *(void *)&v283[24] = v145;
              *(_WORD *)&v283[32] = 2049;
              *(void *)&v283[34] = v146;
              *(_WORD *)&v283[42] = 2049;
              *(void *)&v283[44] = v147;
              *(_WORD *)&v283[52] = 1026;
              *(_DWORD *)&v283[54] = v148;
              *(_WORD *)&v283[58] = 1026;
              *(_DWORD *)&v283[60] = v149;
              *(_WORD *)&v283[64] = 2050;
              *(void *)&v283[66] = v150;
              _os_log_impl((void *)&_mh_execute_header, v142, OS_LOG_TYPE_DEFAULT, "@ClxAccessory, Fix, 1, ll, %{private}.7f, %{private}.7f, acc, %{public}.2f, speed, %{private}.1f, course, %{private}.1f,accessoryType,%{public}d,refFrame,%{public}d,timestamp,%{public}.2lf", v283, 0x4Au);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(v283, 0x65CuLL);
              if (qword_1024193A0 != -1) {
                dispatch_once(&qword_1024193A0, &stru_1022C58F8);
              }
              uint64_t v197 = *(void *)(v4 + 120);
              uint64_t v198 = *(void *)(v4 + 128);
              uint64_t v199 = *(void *)(v4 + 136);
              uint64_t v200 = *(void *)(v4 + 160);
              uint64_t v201 = *(void *)(v4 + 176);
              uint64_t v202 = *(void *)(v4 + 2552);
              int v203 = *(_DWORD *)(v4 + 248);
              uint64_t v204 = *(void *)(v4 + 192);
              *(_DWORD *)double v273 = 134285313;
              *(void *)&v273[4] = v197;
              *(_WORD *)&v273[12] = 2049;
              *(void *)&v273[14] = v198;
              *(_WORD *)&v273[22] = 2050;
              *(void *)&v273[24] = v199;
              *(_WORD *)&v273[32] = 2049;
              *(void *)&v273[34] = v200;
              *(_WORD *)&v273[42] = 2049;
              *(void *)&v273[44] = v201;
              *(_WORD *)&v273[52] = 1026;
              *(_DWORD *)&v273[54] = v202;
              *(_WORD *)&v273[58] = 1026;
              *(_DWORD *)&v273[60] = v203;
              *(_WORD *)&v273[64] = 2050;
              *(void *)&v273[66] = v204;
              double v205 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v205);
              if (v205 != v283) {
                free(v205);
              }
            }
            sub_100458658((uint64_t)__str);
LABEL_127:
            *(_DWORD *)(v4 + 2784) = *(void *)(v4 + 2552);
            if (sub_10016C458() - *(double *)(v4 + 6184) > 30.0)
            {
              sub_100134750(v223, "");
              sub_100198934(v4, (unsigned __int8 *)v223, 0);
              if (v224 < 0) {
                operator delete(v223[0]);
              }
              *(double *)(v4 + 6184) = sub_10016C458();
            }
            goto LABEL_131;
          case 4:
LABEL_118:
            *(void *)(v4 + 2552) |= 1uLL;
            sub_100D1EC6C(&__p, HIDWORD(v282[1].__r_.__value_.__r.__words[2]));
            double v50 = sub_100ABEC68(v4 + 992, (double *)v282, SHIDWORD(v282[1].__r_.__value_.__r.__words[1]));
            if (SHIDWORD(v282[1].__r_.__value_.__r.__words[2]) >= 1)
            {
              id v51 = [[objc_msgSend(*(id *)(v4 + 32), "vendor", v50) proxyForService:@"CLGpsAssistant"];
              memcpy(__dst, v282, sizeof(__dst));
              [v51 setVehicleSpeedAssistance:__dst vehicleSpeed:v6];
            }
            if (vabdd_f64(*(double *)&v282[0].__r_.__value_.__l.__data_, *(double *)(v4 + 1896)) > 0.5)
            {
              unsigned int v52 = HIDWORD(v282[1].__r_.__value_.__r.__words[2]) - 1;
              if ((HIDWORD(v282[1].__r_.__value_.__r.__words[2]) - 1) <= 0x31)
              {
                sub_1000DB3D4((uint64_t)v283);
                std::string::size_type v291 = v282[18].__r_.__value_.__r.__words[v52 + 2];
                std::string v292 = v282[0];
                *(_DWORD *)__str = 20;
                (*(void (**)(uint64_t, unsigned char *, unsigned char *, void, uint64_t, void))(*(void *)v4 + 152))(v4, __str, v283, 0, 0xFFFFFFFFLL, 0);
                *(void *)(v4 + 1896) = v282[0].__r_.__value_.__r.__words[0];
                sub_100458658((uint64_t)v283);
              }
            }
            sub_101225DD4(v4 + 2560, (double *)v282);
            goto LABEL_127;
          case 5:
LABEL_125:
            sub_1012254CC(v4 + 2560, &__p);
            sub_100D1EC6C(&__p, LODWORD(v282[0].__r_.__value_.__r.__words[1]));
            if (SLODWORD(v282[0].__r_.__value_.__r.__words[1]) >= 1)
            {
              id v53 = [[[*(id *)(v4 + 32) vendor] proxyForService:@"CLGpsAssistant"];
              memcpy(v225, v282, sizeof(v225));
              [v53 setVehicleGyroAssistance:v225 vehicleGyro:v6];
            }
            goto LABEL_127;
          case 7:
LABEL_124:
            sub_1012254CC(v4 + 2560, &__p);
            sub_100D1EC6C(&__p, 1);
            sub_100714990((double *)v4, *(double *)&v282[0].__r_.__value_.__l.__data_, *(double *)&v282[0].__r_.__value_.__l.__size_);
            *(void *)(v4 + 1888) = v282[0].__r_.__value_.__r.__words[0];
            goto LABEL_127;
          default:
LABEL_117:
            sub_1012254CC(v4 + 2560, &__p);
            sub_100D1EC64((unsigned __int8 *)&__p);
            goto LABEL_127;
        }
      }
LABEL_93:
      operator delete(v282[0].__r_.__value_.__l.__data_);
      goto LABEL_94;
    }
    bzero(__str, 5uLL);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v21 = &__p;
    }
    else {
      uint64_t v21 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v22 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      int v22 = __p.__r_.__value_.__r.__words[1];
    }
    unsigned __int8 v23 = sub_100621D20((uint64_t)v21, v22);
    snprintf(__str, 5uLL, "%X%X", v23 >> 4, v23 & 0xF);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    int v24 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      int v25 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)v283 = 136380931;
      *(void *)&v283[4] = v25;
      *(_WORD *)&v283[12] = 2082;
      *(void *)&v283[14] = __str;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "CLAccessory,#Warning bad checksum for NMEA sentence '%{private}s' - expected %{public}s", v283, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(v283, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      int v26 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v26 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      LODWORD(v282[0].__r_.__value_.__l.__data_) = 136380931;
      *(std::string::size_type *)((char *)v282[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v26;
      WORD2(v282[0].__r_.__value_.__r.__words[1]) = 2082;
      *(std::string::size_type *)((char *)&v282[0].__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)__str;
      uint64_t v18 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v18);
LABEL_67:
      if (v18 != v283) {
        free(v18);
      }
    }
  }
  else
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    int v15 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v16 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        BOOL v16 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)v283 = 136380675;
      *(void *)&v283[4] = v16;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "CLAccessory,#Warning no NMEA sentence found in %{private}s", v283, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(v283, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      unsigned int v17 = &__p;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        unsigned int v17 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      LODWORD(v282[0].__r_.__value_.__l.__data_) = 136380675;
      *(std::string::size_type *)((char *)v282[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)v17;
      uint64_t v18 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryNmeaReceived(const CFStringRef)", "%s\n", v18);
      goto LABEL_67;
    }
  }
LABEL_131:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_100714814(_Unwind_Exception *a1)
{
  if (STACK[0x1310]) {
    sub_1000DB0A0((std::__shared_weak_count *)STACK[0x1310]);
  }
  if (SLOBYTE(STACK[0xA97]) < 0) {
    operator delete((void *)STACK[0xA80]);
  }
  _Unwind_Resume(a1);
}

void sub_100714990(double *a1, double a2, double a3)
{
  if (vabdd_f64(a2, a1[238]) > 0.5)
  {
    sub_1000DB3D4((uint64_t)v7);
    double v10 = a3;
    double v11 = a2;
    int v6 = 21;
    (*(void (**)(double *, int *, unsigned char *, void, uint64_t, void))(*(void *)a1 + 152))(a1, &v6, v7, 0, 0xFFFFFFFFLL, 0);
    a1[238] = a2;

    if (v14) {
      sub_1000DB0A0(v14);
    }
    if (v13 < 0) {
      operator delete(v12);
    }
    if (v9) {
      sub_1000DB0A0(v9);
    }
    if (v8) {
      sub_1000DB0A0(v8);
    }
  }
}

void sub_100714A80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100458658((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100714A94(uint64_t a1)
{
  double v6 = 0.0;
  if ([*(id *)(a1 + 1352) syncgetReferenceTime:&v6])
  {
    unsigned int v2 = [(id)qword_10247D258 sendReferenceTime:v6];
    *(unsigned char *)(a1 + 1945) = v2;
    if (v2)
    {
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      uint64_t v3 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)uint64_t buf = 134217984;
        double v10 = v6;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "sent reference time %.3f to accessory", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022C58B8);
        }
        int v7 = 134217984;
        double v8 = v6;
LABEL_20:
        double v5 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::sendReferenceTime()", "%s\n", v5);
        if (v5 != (char *)buf) {
          free(v5);
        }
      }
    }
  }
  else
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    uint64_t v4 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#Warning no reference time available, not sending reference time", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      LOWORD(v7) = 0;
      goto LABEL_20;
    }
  }
}

void sub_100714D58(uint64_t a1)
{
  if (sub_1001198CC() == 1)
  {
    id v2 = [[objc_msgSend(*(id *)(a1 + 32), "vendor") proxyForService:@"CLLocationController" forClient:@"CLAccessoryLocationProvider"];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    void v5[2] = sub_100716224;
    void v5[3] = &unk_1022C5808;
    void v5[4] = a1;
    [v2 fetchLocationWithReply:v5];
  }
  else
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    uint64_t v3 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#Warning location services is disabled, not sending reference location", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      __int16 v6 = 0;
      uint64_t v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::sendReferenceLocation()", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
}

void sub_100714F60(uint64_t a1, CFURLRef anURL, double *a3, double *a4)
{
  CFStringRef v7 = CFURLGetString(anURL);
  sub_1000FECE0(v7, (uint64_t)v34);
  sub_100715634((char *)v34, &v44);
  int v8 = *(char *)(a1 + 1311);
  if (v8 >= 0) {
    int v9 = (const std::string::value_type *)(a1 + 1288);
  }
  else {
    int v9 = *(const std::string::value_type **)(a1 + 1288);
  }
  if (v8 >= 0) {
    std::string::size_type v10 = *(unsigned __int8 *)(a1 + 1311);
  }
  else {
    std::string::size_type v10 = *(void *)(a1 + 1296);
  }
  double v11 = std::string::insert(&v44, 0, v9, v10);
  long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
  int64_t v33 = v11->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v12;
  v11->__r_.__value_.__l.__size_ = 0;
  v11->__r_.__value_.__r.__words[2] = 0;
  v11->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v44.__r_.__value_.__l.__data_);
  }
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C58B8);
  }
  char v13 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
  {
    int v14 = v34;
    if (v35 < 0) {
      int v14 = (void **)v34[0];
    }
    id v15 = __p;
    if (v33 < 0) {
      id v15 = (void **)__p[0];
    }
    double v16 = *a3;
    double v17 = *a4;
    LODWORD(v44.__r_.__value_.__l.__data_) = 136381443;
    *(std::string::size_type *)((char *)v44.__r_.__value_.__r.__words + 4) = (std::string::size_type)v14;
    WORD2(v44.__r_.__value_.__r.__words[1]) = 2081;
    *(std::string::size_type *)((char *)&v44.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v15;
    HIWORD(v44.__r_.__value_.__r.__words[2]) = 2050;
    double v45 = v16;
    __int16 v46 = 2050;
    double v47 = v17;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "CLAccessory,ephemeris download requested at %{private}s to %{private}s (refresh %{public}.3fs expire %{public}.3fs)", (uint8_t *)&v44, 0x2Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v44, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    unsigned __int8 v23 = v34;
    if (v35 < 0) {
      unsigned __int8 v23 = (void **)v34[0];
    }
    int v24 = __p;
    if (v33 < 0) {
      int v24 = (void **)__p[0];
    }
    uint64_t v25 = *(void *)a3;
    uint64_t v26 = *(void *)a4;
    int v36 = 136381443;
    std::string::size_type v37 = v23;
    __int16 v38 = 2081;
    double v39 = *(double *)&v24;
    __int16 v40 = 2050;
    uint64_t v41 = v25;
    __int16 v42 = 2050;
    uint64_t v43 = v26;
    BOOL v27 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryEphemerisURL(const CFURLRef, const CFTimeInterval &, const CFTimeInterval &)", "%s\n", (const char *)v27);
    if (v27 != &v44) {
      free(v27);
    }
  }
  sub_1005C70E0(a1 + 1040);
  if (v35 >= 0) {
    uint64_t v18 = v34;
  }
  else {
    uint64_t v18 = (void **)v34[0];
  }
  if (v33 >= 0) {
    uint64_t v19 = __p;
  }
  else {
    uint64_t v19 = (void **)__p[0];
  }
  v44.__r_.__value_.__r.__words[0] = 0x404E000000000000;
  if (!sub_1005C653C(a1 + 1040, (const std::string::value_type *)v18, (const std::string::value_type *)v19, (double *)&v44))
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    int v20 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_FAULT))
    {
      LOWORD(v44.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_FAULT, "CLAccessory,could not set up ephemeris updater", (uint8_t *)&v44, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(&v44, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      LOWORD(v36) = 0;
      std::string::size_type v30 = (std::string *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryLocationProvider::onAccessoryEphemerisURL(const CFURLRef, const CFTimeInterval &, const CFTimeInterval &)", "%s\n", (const char *)v30);
      if (v30 != &v44) {
        free(v30);
      }
    }
  }
  sub_1005C6BBC(a1 + 1040, a4, a3);
  double v31 = 0.0;
  if (*a4 >= 1.79769313e308)
  {
    v44.__r_.__value_.__r.__words[0] = CFAbsoluteTimeGetCurrent();
    sub_1005C6FFC((double *)(a1 + 1040), (double *)&v44);
  }
  else if (sub_1005C5270(a1 + 1040, &v31) && CFAbsoluteTimeGetCurrent() - v31 < *a4)
  {
    sub_100715758(a1);
    goto LABEL_42;
  }
  sub_1005C7764(a1 + 1040, &v31);
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C58B8);
  }
  uint64_t v21 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
  {
    int v22 = v34;
    if (v35 < 0) {
      int v22 = (void **)v34[0];
    }
    LODWORD(v44.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)v44.__r_.__value_.__r.__words + 4) = (std::string::size_type)v22;
    WORD2(v44.__r_.__value_.__r.__words[1]) = 2050;
    *(double *)((char *)&v44.__r_.__value_.__r.__words[1] + 6) = v31;
    _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "CLAccessory,waiting for %{private}s download at %{public}.3f", (uint8_t *)&v44, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v44, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    std::string::size_type v28 = v34;
    if (v35 < 0) {
      std::string::size_type v28 = (void **)v34[0];
    }
    int v36 = 136380931;
    std::string::size_type v37 = v28;
    __int16 v38 = 2050;
    double v39 = v31;
    ssize_t v29 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onAccessoryEphemerisURL(const CFURLRef, const CFTimeInterval &, const CFTimeInterval &)", "%s\n", (const char *)v29);
    if (v29 != &v44) {
      free(v29);
    }
  }
LABEL_42:
  if (SHIBYTE(v33) < 0) {
    operator delete(__p[0]);
  }
  if (v35 < 0) {
    operator delete(v34[0]);
  }
}

void sub_1007155CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

char *sub_100715634@<X0>(char *result@<X0>, std::string *a2@<X8>)
{
  if (result[23] < 0)
  {
    BOOL result = (char *)sub_1000DC48C(a2, *(void **)result, *((void *)result + 1));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)result;
    a2->__r_.__value_.__r.__words[2] = *((void *)result + 2);
  }
  int v3 = SHIBYTE(a2->__r_.__value_.__r.__words[2]);
  unint64_t size = a2->__r_.__value_.__l.__size_;
  if (v3 >= 0) {
    unint64_t size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  }
  if (size)
  {
    double v5 = 0;
    if (v3 >= 0) {
      uint64_t v6 = (uint64_t)a2;
    }
    else {
      uint64_t v6 = a2->__r_.__value_.__r.__words[0];
    }
    while (2)
    {
      CFStringRef v7 = &v5[v6];
      int v8 = (unsigned __int8 *)(v6 + size);
LABEL_11:
      uint64_t v9 = 0;
      while (*v7 != asc_101B928F6[v9])
      {
        if (++v9 == 31)
        {
          if (++v7 != v8) {
            goto LABEL_11;
          }
          return result;
        }
      }
      if (v7 != v8)
      {
        std::string::size_type v10 = &v7[-v6];
        if (&v7[-v6] != (unsigned __int8 *)-1)
        {
          BOOL result = (char *)std::string::replace(a2, (std::string::size_type)&v7[-v6], 1uLL, 1uLL, 95);
          double v5 = v10 + 1;
          unint64_t size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
          uint64_t v6 = (size & 0x80u) == 0 ? (uint64_t)a2 : a2->__r_.__value_.__r.__words[0];
          if ((size & 0x80u) != 0) {
            unint64_t size = a2->__r_.__value_.__l.__size_;
          }
          if (size > (unint64_t)v5) {
            continue;
          }
        }
      }
      break;
    }
  }
  return result;
}

void sub_10071573C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100715758(uint64_t a1)
{
  uint64_t v33 = 0;
  uint64_t v2 = a1 + 1040;
  if (sub_1005C5270(a1 + 1040, &v33))
  {
    sub_1005C768C(v2, (uint64_t)__p);
    if (v43 >= 0) {
      int v3 = __p;
    }
    else {
      int v3 = (void **)__p[0];
    }
    CFStringRef v4 = CFStringCreateWithCStringNoCopy(kCFAllocatorDefault, (const char *)v3, 0x8000100u, kCFAllocatorNull);
    if (v43 < 0) {
      operator delete(__p[0]);
    }
    CFURLRef v5 = CFURLCreateWithFileSystemPath(kCFAllocatorDefault, v4, kCFURLPOSIXPathStyle, 0);
    uint64_t v6 = +[NSInputStream inputStreamWithURL:v5];
    CFStringRef v7 = v6;
    if (v6)
    {
      [(NSInputStream *)v6 open];
      id v8 = +[NSMutableData data];
      if ([(NSInputStream *)v7 hasBytesAvailable])
      {
        do
        {
          uint64_t v9 = [(NSInputStream *)v7 read:__p maxLength:1024];
          if (v9 >= 1) {
            [v8 appendBytes:__p length:v9];
          }
          unsigned __int8 v10 = [(NSInputStream *)v7 hasBytesAvailable];
          if (v9 >= 0) {
            unsigned __int8 v11 = v10;
          }
          else {
            unsigned __int8 v11 = 0;
          }
        }
        while ((v11 & 1) != 0);
      }
      [(NSInputStream *)v7 close];
    }
    else
    {
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      double v16 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_FAULT))
      {
        sub_1000FECE0(v4, (uint64_t)__p);
        double v17 = v43 >= 0 ? __p : (void **)__p[0];
        *(_DWORD *)uint64_t buf = 136446210;
        *(void *)&uint8_t buf[4] = v17;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_FAULT, "could not create input stream for ephemeris file, %{public}s", buf, 0xCu);
        if (v43 < 0) {
          operator delete(__p[0]);
        }
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(__p, 0x65CuLL);
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022C58B8);
        }
        sub_1000FECE0(v4, (uint64_t)buf);
        if (v41 >= 0) {
          std::string::size_type v30 = buf;
        }
        else {
          std::string::size_type v30 = *(unsigned char **)buf;
        }
        int v34 = 136446210;
        char v35 = v30;
        double v31 = (char *)_os_log_send_and_compose_impl();
        if (v41 < 0) {
          operator delete(*(void **)buf);
        }
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryLocationProvider::sendReferenceEphemeris()", "%s\n", v31);
        if (v31 != (char *)__p) {
          free(v31);
        }
      }
      id v8 = 0;
    }
    CFRelease(v4);
    CFRelease(v5);
    if ([v8 length])
    {
      unsigned int v18 = [(id)qword_10247D258 sendEphemeris:v8];
      *(unsigned char *)(a1 + 1944) = v18;
      if (v18)
      {
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022C58B8);
        }
        uint64_t v19 = qword_102419368;
        if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
        {
          sub_1005C75B4(v2, (uint64_t)__p);
          int v20 = v43;
          uint64_t v21 = (void **)__p[0];
          id v22 = [v8 length];
          unsigned __int8 v23 = __p;
          if (v20 < 0) {
            unsigned __int8 v23 = v21;
          }
          *(_DWORD *)uint64_t buf = 136315394;
          *(void *)&uint8_t buf[4] = v23;
          __int16 v39 = 2048;
          id v40 = v22;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "sent ephemeris data %s (%lu bytes) to accessory", buf, 0x16u);
          if (v43 < 0) {
            operator delete(__p[0]);
          }
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(__p, 0x65CuLL);
          if (qword_102419360 != -1) {
            dispatch_once(&qword_102419360, &stru_1022C58B8);
          }
          sub_1005C75B4(v2, (uint64_t)buf);
          int v24 = v41;
          uint64_t v25 = *(unsigned char **)buf;
          id v26 = [v8 length];
          BOOL v27 = buf;
          if (v24 < 0) {
            BOOL v27 = v25;
          }
          int v34 = 136315394;
          char v35 = v27;
          __int16 v36 = 2048;
          id v37 = v26;
          id v15 = (char *)_os_log_send_and_compose_impl();
          if (v41 < 0) {
            operator delete(*(void **)buf);
          }
LABEL_32:
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::sendReferenceEphemeris()", "%s\n", v15);
LABEL_87:
          if (v15 != (char *)__p) {
            free(v15);
          }
        }
      }
    }
    else
    {
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      std::string::size_type v28 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_FAULT))
      {
        sub_1005C768C(v2, (uint64_t)__p);
        ssize_t v29 = v43 >= 0 ? __p : (void **)__p[0];
        *(_DWORD *)uint64_t buf = 136446210;
        *(void *)&uint8_t buf[4] = v29;
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_FAULT, "could not create data from file %{public}s", buf, 0xCu);
        if (v43 < 0) {
          operator delete(__p[0]);
        }
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(__p, 0x65CuLL);
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022C58B8);
        }
        sub_1005C768C(v2, (uint64_t)buf);
        if (v41 >= 0) {
          char v32 = buf;
        }
        else {
          char v32 = *(unsigned char **)buf;
        }
        int v34 = 136446210;
        char v35 = v32;
        id v15 = (char *)_os_log_send_and_compose_impl();
        if (v41 < 0) {
          operator delete(*(void **)buf);
        }
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryLocationProvider::sendReferenceEphemeris()", "%s\n", v15);
        goto LABEL_87;
      }
    }
  }
  else
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    long long v12 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      sub_1005C75B4(v2, (uint64_t)__p);
      char v13 = v43 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)uint64_t buf = 136315138;
      *(void *)&uint8_t buf[4] = v13;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#Warning ephemeris %s not available", buf, 0xCu);
      if (v43 < 0) {
        operator delete(__p[0]);
      }
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(__p, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      sub_1005C75B4(v2, (uint64_t)buf);
      if (v41 >= 0) {
        int v14 = buf;
      }
      else {
        int v14 = *(unsigned char **)buf;
      }
      int v34 = 136315138;
      char v35 = v14;
      id v15 = (char *)_os_log_send_and_compose_impl();
      if (v41 < 0) {
        operator delete(*(void **)buf);
      }
      goto LABEL_32;
    }
  }
}

void sub_100715FC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100716004(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 1916) && (*(_DWORD *)(a1 + 1912) & 0x80000000) != 0)
  {
    uint64_t v2 = (const char *)(a1 + 1920);
    if (*(char *)(a1 + 1943) < 0) {
      uint64_t v2 = *(const char **)v2;
    }
    int v3 = open(v2, 526, 420);
    *(_DWORD *)(a1 + 1912) = v3;
    if (v3 < 0)
    {
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      CFStringRef v4 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
      {
        int v5 = *(_DWORD *)(a1 + 1912);
        uint64_t v6 = __error();
        CFStringRef v7 = strerror(*v6);
        *(_DWORD *)uint64_t buf = 67109378;
        int v11 = v5;
        __int16 v12 = 2080;
        char v13 = v7;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Unable to open nmea fifo FD %d %s.", buf, 0x12u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022C58B8);
        }
        id v8 = __error();
        strerror(*v8);
        uint64_t v9 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::openNmeaPipe()", "%s\n", v9);
        if (v9 != (char *)buf) {
          free(v9);
        }
      }
    }
  }
}

void sub_100716224(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 32);
  (*(void (**)(char *__return_ptr, uint64_t))(a3 + 16))(v9, a3);
  if (a2 && v12 >= 0.0)
  {
    unsigned int v5 = [(id)qword_10247D258 sendReferenceTime:v13 locationLatitude:v10 longitude:v11 accuracy:v12];
    *(unsigned char *)(v4 + 1946) = v5;
    if (v5)
    {
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      uint64_t v6 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)uint64_t buf = 134284033;
        double v21 = v10;
        __int16 v22 = 2049;
        double v23 = v11;
        __int16 v24 = 2048;
        double v25 = v12;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "sent reference pos <%{private}.8f,%{private}.8f> accuracy %.2f to accessory", buf, 0x20u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022C58B8);
        }
        int v14 = 134284033;
        double v15 = v10;
        __int16 v16 = 2049;
        double v17 = v11;
        __int16 v18 = 2048;
        double v19 = v12;
LABEL_21:
        id v8 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::sendReferenceLocation()_block_invoke", "%s\n", v8);
        if (v8 != (char *)buf) {
          free(v8);
        }
      }
    }
  }
  else
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    CFStringRef v7 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#Warning no reference location available, not sending reference location", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      LOWORD(v14) = 0;
      goto LABEL_21;
    }
  }
}

void sub_100716544(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4)
{
  unsigned int v6 = *a3;
  if ((int)*a3 <= 3)
  {
    if (v6 < 3) {
      goto LABEL_3;
    }
LABEL_10:
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    id v8 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      unsigned int v9 = *a3;
      *(_DWORD *)uint64_t buf = 67109120;
      unsigned int v13 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#Warning received an unknown location notification %d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      double v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onLocationNotification(int, const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
    }
    return;
  }
  switch(v6)
  {
    case 0x1Bu:
      sub_100716844((id *)a1, a4);
      break;
    case 0xAu:
      *(void *)&double v10 = sub_100EEF5CC(a1 + 1608, a4).n128_u64[0];
      sub_1018E9A68(a1 + 1392, a4, *(unsigned char *)(a4 + 768), (uint64_t)[objc_msgSend(*(id *)(a1 + 32), "silo", v10) queue]);
      sub_100734E8C(a1 + 1952, a4);
      sub_101226C00((_OWORD *)(a1 + 2560), a4);
      break;
    case 4u:
LABEL_3:
      if (!*(unsigned char *)(a1 + 1946))
      {
        sub_100714D58(a1);
      }
      return;
    default:
      goto LABEL_10;
  }
}

id *sub_100716844(id *result, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 96) == 3 && *(unsigned char *)(a2 + 516) != 0)
  {
    uint64_t v4 = result;
    if (qword_102419650 != -1) {
      dispatch_once(&qword_102419650, &stru_1022C58D8);
    }
    unsigned int v5 = qword_102419658;
    if (os_log_type_enabled((os_log_t)qword_102419658, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v6 = *(void *)(a2 + 4);
      uint64_t v7 = *(void *)(a2 + 12);
      uint64_t v8 = *(void *)(a2 + 20);
      uint64_t v9 = *(void *)(a2 + 44);
      uint64_t v10 = *(void *)(a2 + 60);
      uint64_t v11 = *(void *)(a2 + 184);
      int v12 = *(_DWORD *)(a2 + 128);
      *(_DWORD *)uint64_t buf = 136317186;
      double v15 = "CL-AccessoryPropagated";
      __int16 v16 = 1024;
      int v17 = 1;
      __int16 v18 = 2048;
      uint64_t v19 = v6;
      __int16 v20 = 2048;
      uint64_t v21 = v7;
      __int16 v22 = 2048;
      uint64_t v23 = v8;
      __int16 v24 = 2048;
      uint64_t v25 = v9;
      __int16 v26 = 2048;
      uint64_t v27 = v10;
      __int16 v28 = 2048;
      uint64_t v29 = v11;
      __int16 v30 = 1024;
      int v31 = v12;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Type,%s,Pos,%d,%+.10f,%+.10f,Accuracy,%.3f,Speed,%.2f,Course,%.2f,timestampGps,%.2lf,GgaOnly,integrity,%d", buf, 0x54u);
    }
    if (sub_10013D1A0(117, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419650 != -1) {
        dispatch_once(&qword_102419650, &stru_1022C58D8);
      }
      unsigned int v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("LOCATION", 1, 0, 2, "void CLAccessoryLocationProvider::sendPropagatedLocation(const CLLocationProvider_Type::NotificationData &)", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
    *(_DWORD *)uint64_t buf = 0;
    (*((void (**)(id *, uint8_t *, uint64_t, void, uint64_t, void))*v4 + 19))(v4, buf, a2, 0, 0xFFFFFFFFLL, 0);
    return (id *)[v4[123] setNextFireDelay:5.0];
  }
  return result;
}

void sub_100716B38(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 4 && *(_DWORD *)(a4 + 188) != 1)
  {
    sub_100716D00(a1 + 1952);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    unsigned int v5 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 134349056;
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "CLAccessoryAWD,%{public}.1lf,NmeaScreener reset", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      CFAbsoluteTimeGetCurrent();
      uint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onClientManagerNotification(int, const CLClientManager_Type::Notification &, const CLClientManager_Type::NotificationData &)", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
  }
}

__n128 sub_100716D00(uint64_t a1)
{
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(__n128 *)(a1 + 88) = result;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(__n128 *)(a1 + 152) = result;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(__n128 *)(a1 + 216) = result;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = 0xBFF0000000000000;
  *(void *)(a1 + 288) = 0xBFF0000000000000;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0xBFF0000000000000;
  *(void *)(a1 + 352) = 0xBFF0000000000000;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 424) = 0;
  *(unsigned char *)(a1 + 432) = 1;
  *(_WORD *)(a1 + 456) = 0;
  *(void *)(a1 + 464) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 472) = 50;
  return result;
}

void sub_100716D68(uint64_t a1, int *a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10247D290, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10247D290))
  {
    sub_100134750(&xmmword_10247D278, "com.apple.Maps");
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10247D278, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10247D290);
  }
  sub_101226BE0(a1 + 2560, *a2);
  uint64_t v4 = (uint64_t **)(a1 + 6160);
  if (!sub_100040D3C((uint64_t)v4, (const void **)&xmmword_10247D278))
  {
    double v5 = sub_10016C458();
    if (byte_10247D28F < 0)
    {
      sub_1000DC48C(__p, (void *)xmmword_10247D278, *((unint64_t *)&xmmword_10247D278 + 1));
    }
    else
    {
      *(_OWORD *)std::string __p = xmmword_10247D278;
      uint64_t v7 = unk_10247D288;
    }
    double v8 = v5;
    sub_100718B1C(v4, (const void **)__p, (uint64_t)__p);
    if (SHIBYTE(v7) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_100716E88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

void sub_100716EB8(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 7)
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    uint64_t v6 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
    {
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      int v8 = *(unsigned __int8 *)(a4 + 9);
      int v9 = *(_DWORD *)(a4 + 12);
      *(_DWORD *)uint64_t buf = 134349568;
      CFAbsoluteTime v16 = Current;
      __int16 v17 = 1026;
      int v18 = v8;
      __int16 v19 = 1026;
      int v20 = v9;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "CLAccessoryAWD,%{public}.1lf,ReceivedBatteryNotification,connected,%{public}d,type,%{public}d", buf, 0x18u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      CFAbsoluteTimeGetCurrent();
      int v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onBatteryNotification(int, const CLDaemonStatus_Type::Notification &, const CLDaemonStatus_Type::NotificationData &)", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
    double v10 = *(double *)(a1 + 6144);
    if (!*(unsigned char *)(a4 + 9) || v10 >= 0.0)
    {
      if (v10 <= 0.0 || !*(unsigned char *)(a1 + 6140)) {
        goto LABEL_15;
      }
      if (*(_DWORD *)(a1 + 6152) == *(_DWORD *)(a4 + 12))
      {
        if (*(unsigned char *)(a4 + 9)) {
          goto LABEL_15;
        }
        double v13 = sub_10016C458();
        sub_101225410((uint64_t *)(a1 + 2560), *(_DWORD *)(a1 + 6152), v13, *(double *)(a1 + 6144));
        double v11 = -1.0;
LABEL_10:
        *(double *)(a1 + 6144) = v11;
LABEL_15:
        *(unsigned char *)(a1 + 6140) = *(unsigned char *)(a4 + 9);
        *(_DWORD *)(a1 + 6152) = *(_DWORD *)(a4 + 12);
        return;
      }
      double v12 = sub_10016C458();
      sub_101225410((uint64_t *)(a1 + 2560), *(_DWORD *)(a1 + 6152), v12, *(double *)(a1 + 6144));
    }
    double v11 = sub_10016C458();
    goto LABEL_10;
  }
}

uint64_t *sub_100717150(uint64_t a1, int a2, int a3)
{
  if (a3 == 1)
  {
    if (a2)
    {
      [*(id *)(a1 + 984) nextFireDelay];
      if (v6 > 0.02)
      {
        [*(id *)(a1 + 984) nextFireDelay];
        if (v7 <= 5.0)
        {
          if (qword_102419360 != -1) {
            dispatch_once(&qword_102419360, &stru_1022C58B8);
          }
          int v8 = qword_102419368;
          if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
          {
            [*(id *)(a1 + 984) nextFireDelay];
            *(_DWORD *)uint64_t buf = 67240448;
            int v13 = 1;
            __int16 v14 = 2050;
            uint64_t v15 = v9;
            _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "CLNMEAScreener,screen,nmea log rejected, notify location is unavailable from accessory,sending unavailable notification,locTypeUsedForScreening,%{public}d,nextFireDelay,%{public}.2lf", buf, 0x12u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419360 != -1) {
              dispatch_once(&qword_102419360, &stru_1022C58B8);
            }
            [*(id *)(a1 + 984) nextFireDelay];
            double v11 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onNMEAScreenerCallBack(BOOL, CLLocationType)", "%s\n", v11);
            if (v11 != (char *)buf) {
              free(v11);
            }
          }
          [*(id *)(a1 + 984) setNextFireDelay:0.02];
        }
      }
    }
  }
  return sub_101227654(a1 + 2560, a2, a3);
}

void sub_10071739C(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C58B8);
  }
  double v7 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
  {
    int v8 = *a3;
    uint64_t v9 = *(void *)(a1 + 6200);
    uint64_t v10 = *(void *)(a1 + 6208);
    *(_DWORD *)uint64_t buf = 67240704;
    *(_DWORD *)&uint8_t buf[4] = v8;
    *(_WORD *)&uint8_t buf[8] = 2050;
    *(void *)&buf[10] = v9;
    *(_WORD *)&unsigned char buf[18] = 2050;
    *(void *)&buf[20] = v10;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "CLAccessory,MA-OTA,notification,%{public}d,courseUnc,%{public}.1lf,speedThreshold,%{public}.1lf", buf, 0x1Cu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    int v44 = *a3;
    uint64_t v45 = *(void *)(a1 + 6200);
    uint64_t v46 = *(void *)(a1 + 6208);
    int v52 = 67240704;
    *(_DWORD *)id v53 = v44;
    *(_WORD *)&v53[4] = 2050;
    *(void *)&v53[6] = v45;
    *(_WORD *)&v53[14] = 2050;
    *(void *)&v53[16] = v46;
    double v47 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onMobileAssetNotification(int, const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v47);
    if (v47 != buf) {
      free(v47);
    }
  }
  if (*a3 == 2)
  {
    sub_1000E9354(v51);
    if (sub_100012960(a4, "GnssKnownACSettings", v51))
    {
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      double v11 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "CLAccessory,MA-OTA,GnssKnownAC config available", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419360 != -1) {
          dispatch_once(&qword_102419360, &stru_1022C58B8);
        }
        LOWORD(v52) = 0;
        int v48 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onMobileAssetNotification(int, const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v48);
        if (v48 != buf) {
          free(v48);
        }
      }
      sub_1018E924C(a1 + 1392, (uint64_t)v51);
    }
    if (sub_100012960(a4, "AccessoryConfig", v51))
    {
      double v12 = (void *)qword_10247D258;
      sub_1004CE794(v50);
      [v12 readMobileAssetConfiguration:v50];
      sub_10013F3C4(v50);
      *(unsigned char *)(a1 + 2545) = [(id)qword_10247D258 getEnableAggressiveLocationScreening];
      *(double *)(a1 + 2128) = (double)(int)[(id)qword_10247D258 getLocationDiffThresholdForAggressiveScreening];
      *(_DWORD *)(a1 + 2388) = [(id)qword_10247D258 getMinContinuousFailureCountForBlockingAccessory];
      *(_DWORD *)(a1 + 2392) = [(id)qword_10247D258 getMinContinuousSuccessCountForUnblockingAccessory];
      [(id)qword_10247D258 getMaxGPSUncertaintyForAggressiveBlockingAccessory];
      *(void *)(a1 + 2136) = v13;
      *(unsigned char *)(a1 + 2544) = [(id)qword_10247D258 getEnableCourseScreening];
      __int16 v14 = (unsigned __int8 *)(a1 + 6216);
      *(unsigned char *)(a1 + 6216) = [(id)qword_10247D258 getAllowGPGGAOnlyAccessory];
      [(id)qword_10247D258 getCourseUncertaintyForCarPlayDRModeAtLowSpeedsInDeg];
      *(void *)(a1 + 6200) = v15;
      [(id)qword_10247D258 getSpeedThresholdForCarPlayDRModeCourseUncSettingInMPS];
      *(void *)(a1 + 6208) = v16;
      sub_1000C7F88(buf);
      char v17 = *(unsigned char *)(a1 + 2544);
      LOBYTE(v52) = 0;
      int v18 = sub_1000D2988(*(uint64_t *)buf, "EnableAccessoryCourseScreening", (BOOL *)&v52);
      char v19 = v52;
      if (!v18) {
        char v19 = v17;
      }
      *(unsigned char *)(a1 + 2544) = v19;
      if (*(void *)&buf[8]) {
        sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
      }
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      int v20 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v21 = *(void *)(a1 + 6200);
        uint64_t v22 = *(void *)(a1 + 6208);
        int v23 = *(unsigned __int8 *)(a1 + 2544);
        int v24 = *v14;
        int v49 = *(unsigned __int8 *)(a1 + 2545);
        unsigned int v25 = [(id)qword_10247D258 getLocationDiffThresholdForAggressiveScreening];
        unsigned int v26 = [(id)qword_10247D258 getMinContinuousFailureCountForBlockingAccessory];
        unsigned int v27 = [(id)qword_10247D258 getMinContinuousSuccessCountForUnblockingAccessory];
        [(id)qword_10247D258 getMaxGPSUncertaintyForAggressiveBlockingAccessory];
        *(_DWORD *)uint64_t buf = 134351104;
        *(void *)&uint8_t buf[4] = v21;
        *(_WORD *)&unsigned char buf[12] = 2050;
        *(void *)&buf[14] = v22;
        *(_WORD *)&unsigned char buf[22] = 1026;
        *(_DWORD *)&unsigned char buf[24] = v23;
        __int16 v67 = 1026;
        int v68 = v24;
        __int16 v69 = 1026;
        int v70 = v49;
        __int16 v71 = 1026;
        unsigned int v72 = v25;
        __int16 v73 = 1026;
        unsigned int v74 = v26;
        __int16 v75 = 1026;
        unsigned int v76 = v27;
        __int16 v77 = 2050;
        uint64_t v78 = v28;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "CLAccessory,MA-OTA,Provider set courseUncertaintyAtLowSpeeds,courseUnc,%{public}.1lf,speedThreshold,%{public}.1lf,enableCourseScreening,%{public}d,allowGPGGAOnlyAccessory,%{public}d,enableAggressiveLocationScreening,%{public}d,aggressiveScreeningThreshold,%{public}d,minContFailCount,%{public}d,minContSuccessCount,%{public}d,maxGPSUncertaintyForBlockingAccessory,%{public}.1lf", buf, 0x44u);
        __int16 v14 = (unsigned __int8 *)(a1 + 6216);
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_42;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      uint64_t v29 = *(void *)(a1 + 6200);
      uint64_t v30 = *(void *)(a1 + 6208);
      int v31 = *(unsigned __int8 *)(a1 + 2544);
      int v32 = *v14;
      int v33 = *(unsigned __int8 *)(a1 + 2545);
      unsigned int v34 = [(id)qword_10247D258 getLocationDiffThresholdForAggressiveScreening];
      unsigned int v35 = [(id)qword_10247D258 getMinContinuousFailureCountForBlockingAccessory];
      unsigned int v36 = [(id)qword_10247D258 getMinContinuousSuccessCountForUnblockingAccessory];
      [(id)qword_10247D258 getMaxGPSUncertaintyForAggressiveBlockingAccessory];
      int v52 = 134351104;
      *(void *)id v53 = v29;
      *(_WORD *)&v53[8] = 2050;
      *(void *)&v53[10] = v30;
      *(_WORD *)&v53[18] = 1026;
      *(_DWORD *)&v53[20] = v31;
      __int16 v54 = 1026;
      int v55 = v32;
      __int16 v56 = 1026;
      int v57 = v33;
      __int16 v58 = 1026;
      unsigned int v59 = v34;
      __int16 v60 = 1026;
      unsigned int v61 = v35;
      __int16 v62 = 1026;
      unsigned int v63 = v36;
      __int16 v64 = 2050;
      uint64_t v65 = v37;
      __int16 v38 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onMobileAssetNotification(int, const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v38);
      if (v38 == buf) {
        goto LABEL_42;
      }
    }
    else
    {
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      char v43 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_INFO, "CLAccessory,MA-OTA,accessoryLocation config not available", buf, 2u);
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_42;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C58B8);
      }
      LOWORD(v52) = 0;
      __int16 v38 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLAccessoryLocationProvider::onMobileAssetNotification(int, const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v38);
      if (v38 == buf) {
        goto LABEL_42;
      }
    }
    free(v38);
LABEL_42:
    sub_10013F3C4(v51);
    return;
  }
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C58B8);
  }
  __int16 v39 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_ERROR))
  {
    int v40 = *a3;
    *(_DWORD *)uint64_t buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v40;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_ERROR, "CLAccessory,MA-OTA,invalid notification,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C58B8);
    }
    int v41 = *a3;
    int v52 = 67240192;
    *(_DWORD *)id v53 = v41;
    __int16 v42 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "void CLAccessoryLocationProvider::onMobileAssetNotification(int, const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v42);
    if (v42 != buf) {
      free(v42);
    }
  }
}

void sub_100717CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_10013F3C4(va);
  _Unwind_Resume(a1);
}

void sub_100717D40()
{
}

void sub_100717DF8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete();
}

void sub_100717E34()
{
}

void sub_100717EF4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete();
}

id sub_100717F30(uint64_t a1)
{
  id v2 = [+[CLServiceVendor sharedInstance] proxyForService:@"CLAccessoryLocationProvider"];

  return [v2 syncgetDoSync:a1];
}

void sub_100717F7C(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

double sub_100717FAC(uint64_t a1)
{
  sub_101171D90(a1);
  *(unsigned char *)(v1 + 40) = 0;
  double result = 0.0;
  *(_OWORD *)(v1 + 392) = 0u;
  *(_OWORD *)(v1 + 440) = 0u;
  *(_OWORD *)(v1 + 552) = 0u;
  *(_OWORD *)(v1 + 584) = 0u;
  *(_OWORD *)(v1 + 532) = 0u;
  *(_OWORD *)(v1 + 504) = 0u;
  *(_OWORD *)(v1 + 520) = 0u;
  *(_OWORD *)(v1 + 632) = 0u;
  *(_OWORD *)(v1 + 6++*(_DWORD *)(result + 48) = 0u;
  *(_OWORD *)(v1 + 728) = 0u;
  *(_OWORD *)(v1 + 792) = 0u;
  *(_OWORD *)(v1 + 824) = 0u;
  *(_OWORD *)(v1 + 872) = 0u;
  *(_OWORD *)(v1 + 888) = 0u;
  *(_OWORD *)(v1 + 952) = 0u;
  *(_OWORD *)(v1 + 1032) = 0u;
  *(_OWORD *)(v1 + 10++*(_DWORD *)(result + 48) = 0u;
  *(_OWORD *)(v1 + 1016) = 0u;
  *(_OWORD *)(v1 + 1140) = 0u;
  *(_OWORD *)(v1 + 1128) = 0u;
  *(_OWORD *)(v1 + 1112) = 0u;
  *(_OWORD *)(v1 + 1176) = 0u;
  *(_OWORD *)(v1 + 1160) = 0u;
  *(_OWORD *)(v1 + 1268) = 0u;
  *(_OWORD *)(v1 + 1256) = 0u;
  *(_OWORD *)(v1 + 1240) = 0u;
  *(_OWORD *)(v1 + 1304) = 0u;
  *(_OWORD *)(v1 + 1288) = 0u;
  *(_OWORD *)(v1 + 1396) = 0u;
  *(_OWORD *)(v1 + 1384) = 0u;
  *(_OWORD *)(v1 + 1368) = 0u;
  *(_OWORD *)(v1 + 1416) = 0u;
  *(_OWORD *)(v1 + 1480) = 0u;
  *(_OWORD *)(v1 + 1544) = 0u;
  *(_OWORD *)(v1 + 1608) = 0u;
  *(_OWORD *)(v1 + 264) = 0u;
  *(_OWORD *)(v1 + 316) = 0u;
  *(_OWORD *)(v1 + 304) = 0u;
  *(_OWORD *)(v1 + 364) = 0u;
  *(void *)(v1 + 384) = v1 + 392;
  *(void *)(v1 + 408) = v1 + 416;
  *(void *)(v1 + 432) = v1 + 440;
  *(void *)(v1 + 456) = v1 + 464;
  *(void *)(v1 + 576) = v1 + 584;
  *(void *)(v1 + 600) = v1 + 608;
  *(void *)(v1 + 624) = v1 + 632;
  *(_OWORD *)(v1 + 672) = 0u;
  *(void *)(v1 + 696) = v1 + 704;
  *(void *)(v1 + 720) = v1 + 728;
  *(void *)(v1 + 744) = v1 + 752;
  *(void *)(v1 + 816) = v1 + 824;
  *(void *)(v1 + 840) = v1 + 848;
  *(void *)(v1 + 864) = v1 + 872;
  *(_OWORD *)(v1 + 912) = 0u;
  *(void *)(v1 + 944) = v1 + 952;
  *(void *)(v1 + 968) = v1 + 976;
  *(void *)(v1 + 1064) = v1 + 1072;
  *(void *)(v1 + 1192) = v1 + 1200;
  *(void *)(v1 + 1320) = v1 + 1328;
  *(void *)(v1 + 14++*(_DWORD *)(result + 48) = v1 + 1456;
  *(void *)(v1 + ++*(_DWORD *)(result + 48) = 0xBFF0000000000000;
  *(_DWORD *)(v1 + 280) = 0;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_OWORD *)(v1 + 200) = 0u;
  *(_OWORD *)(v1 + 213) = 0u;
  *(void *)(v1 + 2++*(_DWORD *)(result + 48) = 0;
  *(_DWORD *)(v1 + 256) = 0;
  *(_OWORD *)(v1 + 232) = 0u;
  *(_OWORD *)(v1 + 288) = 0u;
  *(_OWORD *)(v1 + 336) = 0u;
  *(_OWORD *)(v1 + 352) = 0u;
  *(_OWORD *)(v1 + 416) = 0u;
  *(_OWORD *)(v1 + 464) = 0u;
  *(_OWORD *)(v1 + 480) = 0u;
  *(_DWORD *)(v1 + 496) = 0;
  *(void *)(v1 + 568) = 0;
  *(_OWORD *)(v1 + 608) = 0u;
  *(_DWORD *)(v1 + 664) = 0;
  *(void *)(v1 + 688) = 0;
  *(_OWORD *)(v1 + 704) = 0u;
  *(_DWORD *)(v1 + 784) = 0;
  *(_OWORD *)(v1 + 752) = 0u;
  *(_OWORD *)(v1 + 768) = 0u;
  *(void *)(v1 + 808) = 0;
  *(_OWORD *)(v1 + 8++*(_DWORD *)(result + 48) = 0u;
  *(_DWORD *)(v1 + 904) = 0;
  *(void *)(v1 + 928) = 0;
  *(_DWORD *)(v1 + 936) = 0;
  *(_DWORD *)(v1 + 1008) = 0;
  *(_OWORD *)(v1 + 976) = 0u;
  *(_OWORD *)(v1 + 992) = 0u;
  *(_OWORD *)(v1 + 1072) = 0u;
  *(_DWORD *)(v1 + 1104) = 0;
  *(_OWORD *)(v1 + 1088) = 0u;
  *(_OWORD *)(v1 + 1200) = 0u;
  *(_DWORD *)(v1 + 1232) = 0;
  *(_OWORD *)(v1 + 1216) = 0u;
  *(_OWORD *)(v1 + 1328) = 0u;
  *(_DWORD *)(v1 + 1360) = 0;
  *(_OWORD *)(v1 + 1344) = 0u;
  *(_OWORD *)(v1 + 1456) = 0u;
  *(_DWORD *)(v1 + 1440) = 0;
  *(void *)(v1 + 1432) = 0;
  *(void *)(v1 + 1472) = v1 + 1480;
  *(_OWORD *)(v1 + 1504) = 0u;
  *(void *)(v1 + 1496) = v1 + 1504;
  *(void *)(v1 + 1520) = 0;
  *(_DWORD *)(v1 + 1528) = 0;
  *(void *)(v1 + 1536) = v1 + 1544;
  *(void *)(v1 + 1560) = 0;
  *(_DWORD *)(v1 + 1568) = 0;
  *(_OWORD *)(v1 + 1584) = 0u;
  *(void *)(v1 + 1576) = v1 + 1584;
  *(void *)(v1 + 1600) = v1 + 1608;
  *(_OWORD *)(v1 + 1632) = 0u;
  *(void *)(v1 + 1624) = v1 + 1632;
  *(_OWORD *)(v1 + 1680) = 0u;
  *(_DWORD *)(v1 + 1664) = 0;
  *(_OWORD *)(v1 + 16++*(_DWORD *)(result + 48) = 0u;
  *(void *)(v1 + 1672) = v1 + 1680;
  *(_OWORD *)(v1 + 2921) = 0u;
  *(_OWORD *)(v1 + 2912) = 0u;
  *(_OWORD *)(v1 + 2896) = 0u;
  *(_OWORD *)(v1 + 2880) = 0u;
  *(_OWORD *)(v1 + 2864) = 0u;
  *(_OWORD *)(v1 + 28++*(_DWORD *)(result + 48) = 0u;
  *(_OWORD *)(v1 + 2832) = 0u;
  *(_OWORD *)(v1 + 2816) = 0u;
  *(_OWORD *)(v1 + 2800) = 0u;
  *(_OWORD *)(v1 + 2784) = 0u;
  *(_OWORD *)(v1 + 2768) = 0u;
  *(_OWORD *)(v1 + 1904) = 0u;
  *(_OWORD *)(v1 + 1888) = 0u;
  *(_OWORD *)(v1 + 1872) = 0u;
  *(_OWORD *)(v1 + 1856) = 0u;
  *(_OWORD *)(v1 + 1840) = 0u;
  *(_OWORD *)(v1 + 1824) = 0u;
  *(_OWORD *)(v1 + 1808) = 0u;
  *(_OWORD *)(v1 + 1792) = 0u;
  *(_OWORD *)(v1 + 1776) = 0u;
  *(_OWORD *)(v1 + 1760) = 0u;
  *(_OWORD *)(v1 + 1744) = 0u;
  *(_OWORD *)(v1 + 1728) = 0u;
  *(_OWORD *)(v1 + 1712) = 0u;
  *(_OWORD *)(v1 + 1696) = 0u;
  *(_WORD *)(v1 + 2937) = 257;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)(v1 + 2944) = _Q1;
  *(_OWORD *)(v1 + 2960) = _Q1;
  *(_OWORD *)(v1 + 2976) = _Q1;
  *(void *)(v1 + 2992) = 0xBFF0000000000000;
  *(_WORD *)(v1 + 3024) = 0;
  *(void *)(v1 + 3016) = 0;
  *(_OWORD *)(v1 + 3000) = 0u;
  return result;
}

Class sub_1007182D0(uint64_t a1)
{
  v3[0] = 0;
  if (!qword_10247D2A0)
  {
    v3[1] = _NSConcreteStackBlock;
    uint64_t v3[2] = (void *)3221225472;
    void v3[3] = sub_1007183FC;
    void v3[4] = &unk_1022A3020;
    void v3[5] = v3;
    long long v4 = off_1022C58A0;
    uint64_t v5 = 0;
    qword_10247D2A0 = _sl_dlopen();
  }
  if (!qword_10247D2A0) {
    sub_101A6C244(v3);
  }
  if (v3[0]) {
    free(v3[0]);
  }
  Class result = objc_getClass("CARSessionStatus");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40)) {
    sub_101A6C2AC();
  }
  qword_10247D298 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
  return result;
}

uint64_t sub_1007183FC()
{
  uint64_t result = _sl_dlopen();
  qword_10247D2A0 = result;
  return result;
}

void sub_100718470(id a1)
{
  qword_102419368 = (uint64_t)os_log_create("com.apple.locationd.Position", "GpsAccessory");
}

void sub_1007184A0(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  int v4 = *(_DWORD *)(a1 + 8);
  uint64_t v5 = *(void **)a1;
  if (v4)
  {
    if ((64 - v4) >= a2) {
      unint64_t v6 = a2;
    }
    else {
      unint64_t v6 = (64 - v4);
    }
    *v5++ &= ~((0xFFFFFFFFFFFFFFFFLL >> (64 - v4 - v6)) & (-1 << v4));
    unint64_t v2 = a2 - v6;
    *(void *)a1 = v5;
  }
  unint64_t v7 = v2 >> 6;
  if (v2 >= 0x40) {
    bzero(v5, 8 * v7);
  }
  if ((v2 & 0x3F) != 0)
  {
    int v8 = &v5[v7];
    *(void *)a1 = v8;
    *v8 &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v2 & 0x3F));
  }
}

uint64_t sub_100718550(uint64_t a1)
{
  if (*(char *)(a1 + 183) < 0) {
    operator delete(*(void **)(a1 + 160));
  }
  if (*(char *)(a1 + 159) < 0) {
    operator delete(*(void **)(a1 + 136));
  }
  if (*(char *)(a1 + 135) < 0) {
    operator delete(*(void **)(a1 + 112));
  }
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

void sub_10071871C(id a1)
{
  qword_102419658 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Location_deprecated");
}

uint64_t sub_10071874C(uint64_t a1)
{
  sub_100718788(a1, *(void **)(a1 + 16));
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_100718788(uint64_t a1, void *a2)
{
  if (a2)
  {
    unint64_t v2 = a2;
    do
    {
      int v3 = (void *)*v2;
      sub_1000D7D80((uint64_t)(v2 + 3));
      operator delete(v2);
      unint64_t v2 = v3;
    }
    while (v3);
  }
}

void sub_1007187CC(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_100718800()
{
}

void *sub_100718814(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C5928;
  result[1] = v3;
  return result;
}

uint64_t sub_10071885C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C5928;
  a2[1] = v2;
  return result;
}

uint64_t *sub_100718888(uint64_t a1, unsigned __int8 *a2, int *a3)
{
  return sub_100717150(*(void *)(a1 + 8), *a2, *a3);
}

uint64_t sub_100718898(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1007188D8()
{
}

void *sub_1007188E4(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_100718968(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_10099FA1C();
    operator delete();
  }
  return result;
}

void *sub_1007189B8(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100718A40()
{
}

void *sub_100718A54(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_1022C59B8;
  result[1] = v3;
  return result;
}

uint64_t sub_100718A9C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022C59B8;
  a2[1] = v2;
  return result;
}

void sub_100718AC8(uint64_t a1, int *a2)
{
}

uint64_t sub_100718AD0(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100718B10()
{
}

_OWORD *sub_100718B1C(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t v5 = (void **)sub_1001070AC((uint64_t)a1, &v9, a2);
  unint64_t v6 = *v5;
  if (!*v5)
  {
    unint64_t v7 = (uint64_t **)v5;
    unint64_t v6 = operator new(0x40uLL);
    v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    *((void *)v6 + 7) = *(void *)(a3 + 24);
    sub_1000EDF90(a1, v9, v7, (uint64_t *)v6);
  }
  return v6;
}

void sub_100718BB8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADF0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10241ADF0))
    {
      uint64_t v1 = 0x7FFFFFFF00000000;
      v0[2] = xmmword_101D2AFA0;
      v0[3] = unk_101D2AFB0;
      v0[4] = xmmword_101D2AFC0;
      v0[0] = xmmword_101D2AF80;
      v0[1] = unk_101D2AF90;
      sub_1003BFBA4((uint64_t)&unk_10241ADD8, (int *)v0, 11);
      __cxa_atexit((void (*)(void *))sub_1003BE998, &unk_10241ADD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ADF0);
    }
  }
}

void sub_100718C98(_Unwind_Exception *a1)
{
}

void sub_100718CB0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241AD20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241AD20))
  {
    qword_10241AD08 = 0;
    qword_10241AD10 = 0;
    qword_10241AD18 = 0;
    __cxa_atexit((void (*)(void *))sub_1003BE920, &qword_10241AD08, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241AD20);
  }
}

void sub_100718D30()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241ADD0))
  {
    std::__shared_mutex_base::__shared_mutex_base(&stru_10241AD28);
    __cxa_atexit((void (*)(void *))sub_1003BE954, &stru_10241AD28, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241ADD0);
  }
}

void sub_100718DC0(_Unwind_Exception *a1)
{
}

uint64_t sub_100718DD8()
{
  sub_100134750(&xmmword_10247D230, "CLAccessoryLocationProvider");

  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10247D230, (void *)&_mh_execute_header);
}

BOOL sub_100718E38(uint64_t a1, void *a2, int a3, uint64_t a4)
{
  *(void *)a1 = *(void *)(a4 + 8);
  if (!*a2)
  {
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022C5A28);
    }
    uint64_t v9 = qword_102419438;
    if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
    {
      double v10 = *(double *)a1;
      *(_DWORD *)uint64_t buf = 134349056;
      *(double *)&uint8_t buf[4] = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "CLMMLE,%{public}.1lf,road is nullptr", buf, 0xCu);
    }
    if (!sub_10013D1A0(115, 2)) {
      return 0;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419430 == -1) {
      goto LABEL_195;
    }
    goto LABEL_201;
  }
  if (!*(void *)(a1 + 144))
  {
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022C5A28);
    }
    double v11 = qword_102419438;
    if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
    {
      double v12 = *(double *)a1;
      *(_DWORD *)uint64_t buf = 134349056;
      *(double *)&uint8_t buf[4] = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "CLMMLE,%{public}.1lf,Flowline data not available", buf, 0xCu);
    }
    if (!sub_10013D1A0(115, 2)) {
      return 0;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419430 == -1) {
      goto LABEL_195;
    }
    goto LABEL_201;
  }
  if (*(unsigned char *)(a4 + 264)) {
    BOOL v6 = *(unsigned char *)(a4 + 265) == 0;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    if (!sub_1000EF68C(*(double *)(a4 + 56), *(double *)(a4 + 64))
      || sub_1000EF668(*(double *)(a4 + 56), *(double *)(a4 + 64)))
    {
      if (qword_102419430 != -1) {
        dispatch_once(&qword_102419430, &stru_1022C5A28);
      }
      uint64_t v15 = qword_102419438;
      if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
      {
        double v16 = *(double *)a1;
        *(_DWORD *)uint64_t buf = 134349056;
        *(double *)&uint8_t buf[4] = v16;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "CLMMLE,%{public}.1lf,raw coordinate is not valid", buf, 0xCu);
      }
      if (!sub_10013D1A0(115, 2)) {
        return 0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102419430 == -1) {
        goto LABEL_195;
      }
      goto LABEL_201;
    }
    if (!sub_1000EF68C(*(double *)(a4 + 288), *(double *)(a4 + 296))
      || sub_1000EF668(*(double *)(a4 + 288), *(double *)(a4 + 296)))
    {
      if (qword_102419430 != -1) {
        dispatch_once(&qword_102419430, &stru_1022C5A28);
      }
      char v17 = qword_102419438;
      if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
      {
        double v18 = *(double *)a1;
        *(_DWORD *)uint64_t buf = 134349056;
        *(double *)&uint8_t buf[4] = v18;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEBUG, "CLMMLE,%{public}.1lf,snapped coordinate is not valid", buf, 0xCu);
      }
      if (!sub_10013D1A0(115, 2)) {
        return 0;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102419430 == -1) {
        goto LABEL_195;
      }
      goto LABEL_201;
    }
    long long v140 = 0;
    long long v141 = 0;
    uint64_t v142 = 0;
    BOOL v19 = sub_10071A75C(a1, a2, a3, a4, (uint64_t *)&v140);
    if (v19)
    {
      *(void *)a1 = *(void *)(a4 + 8);
      if (qword_102419430 != -1) {
        dispatch_once(&qword_102419430, &stru_1022C5A28);
      }
      uint64_t v21 = qword_102419438;
      if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
      {
        double v22 = *(double *)a1;
        uint64_t v23 = *(void *)(a4 + 288);
        unint64_t v24 = *(void *)(a4 + 296);
        *(_DWORD *)uint64_t buf = 134349825;
        *(double *)&uint8_t buf[4] = v22;
        *(_WORD *)&unsigned char buf[12] = 2049;
        *(void *)&buf[14] = v23;
        __int16 v150 = 2049;
        unint64_t v151 = v24;
        LOWORD(v152) = 2050;
        *(void *)((char *)&v152 + 2) = (v141 - v140) >> 4;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "CLMMLE,%{public}.1lf,attempting lane estimation,LL,%{private}.7lf,%{private}.7lf,numFlowlines,%{public}lu", buf, 0x2Au);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419430 != -1) {
          dispatch_once(&qword_102419430, &stru_1022C5A28);
        }
        double v120 = *(double *)a1;
        uint64_t v121 = *(void *)(a4 + 288);
        uint64_t v122 = *(void *)(a4 + 296);
        *(_DWORD *)__y = 134349825;
        *(double *)&__y[4] = v120;
        *(_WORD *)&__y[12] = 2049;
        *(void *)&__y[14] = v121;
        __int16 v145 = 2049;
        uint64_t v146 = v122;
        __int16 v147 = 2050;
        uint64_t v148 = (v141 - v140) >> 4;
        uint64_t v123 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLLaneEstimator::estimateLane(const CLMapRoadPtr &, const BOOL, const CLMapCrumb &)", "%s\n", v123);
        if (v123 != buf) {
          free(v123);
        }
      }
      unsigned int v26 = v140;
      unsigned int v25 = v141;
      if (v140 != v141)
      {
        int v130 = 0;
        int v131 = 0;
        double v27 = *(double *)(a4 + 56);
        double v28 = *(double *)(a4 + 64);
        double v129 = -1.0;
        double v29 = 1.0;
        double v128 = -1.0;
        double v30 = -1.0;
        while (1)
        {
          int v31 = *(uint64_t **)v26;
          if (*(void *)v26) {
            break;
          }
LABEL_129:
          v26 += 16;
          if (v26 == v25)
          {
            if (v130)
            {
              if (v131) {
                atomic_fetch_add_explicit(&v131->__shared_owners_, 1uLL, memory_order_relaxed);
              }
              *(_DWORD *)(a1 + 24) = *((_DWORD *)v130 + 4);
              uint64_t v116 = *v130;
              *(void *)(a1 + 32) = 0x3FF0000000000000;
              *(void *)(a1 + 40) = v116;
              *(double *)(a1 + ++*(_DWORD *)(result + 48) = v127;
              *(double *)(a1 + 56) = v126;
              *(double *)(a1 + 64) = v129;
              *(double *)(a1 + 72) = v30;
              *(double *)(a1 + 80) = v128;
              if (v131) {
                sub_1000DB0A0(v131);
              }
              double v117 = *(double *)a1;
              sub_100134750(&v136, "estimatedLane");
              sub_10071B2E0(a1 + 8, v117);
              if (v137 < 0) {
                operator delete(v136);
              }
            }
            if (v131) {
              sub_1000DB0A0(v131);
            }
            goto LABEL_193;
          }
        }
        int v32 = (double *)v31[17];
        unint64_t v33 = v31[18] - (void)v32;
        double v132 = v30;
        if ((int)(v33 >> 4) > 1)
        {
          double v34 = *v32;
          double v35 = v32[1];
          *(void *)uint64_t buf = 0;
          *(void *)&uint8_t buf[8] = 0;
          *(void *)__y = 0;
          sub_1000F17A8((double *)(a1 + 152), (double *)buf, (double *)&buf[8], (double *)__y, v27, v28, 0.0, v34, v35, 0.0);
          uint64_t v36 = 0;
          uint64_t v37 = (v33 >> 4) - 1;
          double v38 = 0.0;
          double v39 = -1.0;
          double v40 = 0.0;
          while (1)
          {
            uint64_t v41 = v31[17] + v36;
            double v42 = *(double *)(v41 + 16);
            double v43 = *(double *)(v41 + 24);
            *(void *)__y = 0;
            *(void *)&__y[8] = 0;
            uint64_t v143 = 0;
            sub_1000F17A8((double *)(a1 + 152), (double *)__y, (double *)&__y[8], (double *)&v143, v27, v28, 0.0, v42, v43, 0.0);
            double v44 = (*(double *)buf - *(double *)__y) * (*(double *)buf - *(double *)__y)
                + (*(double *)&buf[8] - *(double *)&__y[8]) * (*(double *)&buf[8] - *(double *)&__y[8]);
            double v45 = 0.0 - *(double *)buf;
            if (v44 >= 0.001)
            {
              double v47 = ((0.0 - *(double *)&buf[8]) * (*(double *)&__y[8] - *(double *)&buf[8])
                   + v45 * (*(double *)__y - *(double *)buf))
                  / v44;
              if (v47 < 0.0)
              {
                double v49 = v45 * v45 + (0.0 - *(double *)&buf[8]) * (0.0 - *(double *)&buf[8]);
                double v47 = 0.0;
                goto LABEL_64;
              }
              if (v47 > v29)
              {
                double v49 = (0.0 - *(double *)__y) * (0.0 - *(double *)__y)
                    + (0.0 - *(double *)&__y[8]) * (0.0 - *(double *)&__y[8]);
                double v47 = 1.0;
                goto LABEL_64;
              }
              double v46 = (0.0 - (*(double *)buf + (*(double *)__y - *(double *)buf) * v47))
                  * (0.0 - (*(double *)buf + (*(double *)__y - *(double *)buf) * v47));
              double v48 = 0.0 - (*(double *)&buf[8] + (*(double *)&__y[8] - *(double *)&buf[8]) * v47);
            }
            else
            {
              double v46 = v45 * v45;
              double v47 = 0.0;
              double v48 = 0.0 - *(double *)&buf[8];
            }
            double v49 = v46 + v48 * v48;
LABEL_64:
            double v50 = sqrt(v44);
            double v51 = sqrt(v49);
            BOOL v52 = v39 < 0.0;
            if (v51 < v39) {
              BOOL v52 = 1;
            }
            double v53 = v40 + v50 * v47;
            if (v52)
            {
              double v39 = v51;
              double v38 = v53;
            }
            double v40 = v40 + v50;
            *(void *)uint64_t buf = *(void *)__y;
            *(void *)&uint8_t buf[8] = *(void *)&__y[8];
            v36 += 16;
            if (!--v37)
            {
              if (v40 >= 0.001) {
                double v55 = v38 / v40;
              }
              else {
                double v55 = 0.0;
              }
              goto LABEL_80;
            }
          }
        }
        if (qword_102419430 != -1) {
          dispatch_once(&qword_102419430, &stru_1022C5A28);
        }
        __int16 v54 = qword_102419438;
        if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEBUG, "CLMM,findClosestPointOnRoad,CoordinateCount is <= 1", buf, 2u);
        }
        double v39 = -1.0;
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419430 != -1) {
            dispatch_once(&qword_102419430, &stru_1022C5A28);
          }
          *(_WORD *)__y = 0;
          long long v107 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLGeoAccessCommon::findClosestPointOnRoad(CLDistanceCalc &, const int, const std::vector<Coordinate> &, const Coordinate &, double &, double &) [Coordinate = CLClientLocationCoordinate]", "%s\n", v107);
          if (v107 != buf) {
            free(v107);
          }
        }
        double v55 = -1.0;
LABEL_80:
        int v57 = *(uint64_t **)v26;
        __int16 v56 = (std::__shared_weak_count *)*((void *)v26 + 1);
        if (v56) {
          atomic_fetch_add_explicit(&v56->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        double v133 = v55;
        if (!v57)
        {
          if (qword_102419430 != -1) {
            dispatch_once(&qword_102419430, &stru_1022C5A28);
          }
          __int16 v69 = qword_102419438;
          if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_ERROR))
          {
            *(_WORD *)uint64_t buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v69, OS_LOG_TYPE_ERROR, "CLMM, NULL road", buf, 2u);
          }
          double v134 = 0.0;
          if (sub_10013D1A0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419430 == -1)
            {
LABEL_98:
              *(_WORD *)__y = 0;
              int v70 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLGeoAccessCommon::interpolateProjections(CLDistanceCalc &, const RoadPtr, double, Coordinate &, double &) [Coordinate = CLClientLocationCoordinate, RoadPtr = std::shared_ptr<CLMapFlowLine>]", "%s\n", v70);
              goto LABEL_169;
            }
LABEL_171:
            dispatch_once(&qword_102419430, &stru_1022C5A28);
            goto LABEL_98;
          }
LABEL_111:
          double v64 = 0.0;
          double v68 = 0.0;
          if (!v56) {
            goto LABEL_113;
          }
          goto LABEL_112;
        }
        __int16 v58 = (double *)v57[17];
        unint64_t v59 = (unint64_t)(v57[18] - (void)v58) >> 4;
        if ((int)v59 <= 0)
        {
          if (qword_102419430 != -1) {
            dispatch_once(&qword_102419430, &stru_1022C5A28);
          }
          __int16 v71 = qword_102419438;
          if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
          {
            *(_WORD *)uint64_t buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v71, OS_LOG_TYPE_DEBUG, "CLMM,interpolateProjections,CoordinateCount is 0", buf, 2u);
          }
          double v134 = 0.0;
          if (!sub_10013D1A0(115, 2)) {
            goto LABEL_111;
          }
          bzero(buf, 0x65CuLL);
          if (qword_102419430 == -1) {
            goto LABEL_168;
          }
        }
        else
        {
          double v134 = 0.0;
          if (v59 == 1) {
            goto LABEL_111;
          }
          unsigned int v61 = (double *)v57[20];
          __int16 v60 = (double *)v57[21];
          uint64_t v62 = v60 - v61;
          if (v62 == v59 - 1)
          {
            if (v55 < 0.000001)
            {
              double v63 = *v58;
              double v64 = v58[1];
              double v65 = v58[2];
              double v66 = v58[3];
              *(void *)uint64_t buf = 0;
              uint64_t v143 = 0;
              *(void *)__y = 0;
              double v134 = v63;
              sub_1000F17A8((double *)(a1 + 152), (double *)buf, (double *)__y, (double *)&v143, v63, v64, 0.0, v65, v66, 0.0);
LABEL_88:
              double v67 = atan2(*(long double *)__y, *(long double *)buf);
              if (v67 < 0.0) {
                double v67 = v67 + 6.28318531;
              }
              double v68 = v67 * 57.2957795;
              if (!v56)
              {
LABEL_113:
                double v30 = v132;
                if (v132 < 0.0 || v39 < v132)
                {
                  __int16 v73 = (std::__shared_weak_count *)*((void *)v26 + 1);
                  int v130 = *(uint64_t **)v26;
                  if (v73) {
                    atomic_fetch_add_explicit(&v73->__shared_owners_, 1uLL, memory_order_relaxed);
                  }
                  if (v131) {
                    sub_1000DB0A0(v131);
                  }
                  double v126 = v64;
                  double v127 = v134;
                  int v131 = v73;
                  double v30 = v39;
                  double v128 = v133;
                  double v129 = v68;
                }
                unsigned int v74 = *(uint64_t **)v26;
                __int16 v75 = (std::__shared_weak_count *)*((void *)v26 + 1);
                if (v75)
                {
                  atomic_fetch_add_explicit(&v75->__shared_owners_, 1uLL, memory_order_relaxed);
                  *(void *)uint64_t buf = 0;
                  *(void *)&uint8_t buf[8] = 0;
                  *(_DWORD *)&uint8_t buf[16] = -1;
                  unint64_t v151 = 0xBFF0000000000000;
                  *(void *)&long long v152 = -1;
                  unint64_t v154 = 0xBFF0000000000000;
                  double v155 = 0.0;
                  double v156 = 0.0;
                  atomic_fetch_add_explicit(&v75->__shared_owners_, 1uLL, memory_order_relaxed);
                  if (!v74)
                  {
LABEL_123:
                    if (v75)
                    {
                      sub_1000DB0A0(v75);
                      sub_1000DB0A0(v75);
                    }
                    double v77 = *(double *)a1;
                    sub_100134750(&__p, "candidateLane");
                    double v29 = 1.0;
                    sub_10071B2E0((uint64_t)buf, v77);
                    if (v139 < 0) {
                      operator delete(__p);
                    }
                    if (*(void *)&buf[8]) {
                      sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
                    }
                    goto LABEL_129;
                  }
                }
                else
                {
                  *(void *)uint64_t buf = 0;
                  *(void *)&uint8_t buf[8] = 0;
                  *(_DWORD *)&uint8_t buf[16] = -1;
                  unint64_t v151 = 0xBFF0000000000000;
                  *(void *)&long long v152 = -1;
                  unint64_t v154 = 0xBFF0000000000000;
                  double v155 = 0.0;
                  double v156 = 0.0;
                  if (!v74) {
                    goto LABEL_123;
                  }
                }
                *(_DWORD *)&uint8_t buf[16] = *((_DWORD *)v74 + 4);
                uint64_t v76 = *v74;
                unint64_t v151 = 0x3FF0000000000000;
                *(void *)&long long v152 = v76;
                *((double *)&v152 + 1) = v134;
                double v153 = v64;
                unint64_t v154 = *(void *)&v68;
                double v155 = v39;
                double v156 = v133;
                goto LABEL_123;
              }
LABEL_112:
              sub_1000DB0A0(v56);
              goto LABEL_113;
            }
            if (v55 >= 0.999999)
            {
              double v83 = &v58[2 * v62];
              double v64 = v83[1];
              double v134 = *v83;
              double v84 = sub_10071B58C((double *)(a1 + 152), *(v83 - 2), *(v83 - 1), *v83, v64);
              goto LABEL_147;
            }
            if (v61 != v60)
            {
              double v78 = 0.0;
              int v79 = 2;
              uint64_t v80 = 3;
              while (1)
              {
                double v81 = *v61 / *((double *)v57 + 16);
                if (vabdd_f64(v55, v78 + v81) < 0.000001) {
                  break;
                }
                if (v78 + v81 > v55)
                {
                  float64_t v96 = &v58[v80];
                  double v97 = *(v96 - 2);
                  double v135 = *(v96 - 3);
                  double v125 = *(v96 - 1);
                  double v98 = sub_1011717B4(v97, *v96);
                  double v99 = (v133 - v78) / v81;
                  sub_10005B720(v97 + v98 * v99);
                  double v64 = v100;
                  uint64_t v101 = (double *)(v57[17] + v80 * 8);
                  double v102 = *(v101 - 3);
                  double v103 = *(v101 - 2);
                  double v104 = *(v101 - 1);
                  double v105 = *v101;
                  *(void *)uint64_t buf = 0;
                  uint64_t v143 = 0;
                  *(void *)__y = 0;
                  sub_1000F17A8((double *)(a1 + 152), (double *)buf, (double *)__y, (double *)&v143, v102, v103, 0.0, v104, v105, 0.0);
                  double v134 = v135 + (v125 - v135) * v99;
                  goto LABEL_88;
                }
                ++v61;
                v80 += 2;
                ++v79;
                double v78 = v78 + v81;
                if (v61 == v60) {
                  goto LABEL_139;
                }
              }
              if (v79 < (int)v59)
              {
                double v85 = &v58[v80];
                double v86 = *(v85 - 1);
                double v64 = *v85;
                double v87 = *(v85 - 3);
                double v88 = *(v85 - 2);
                *(void *)uint64_t buf = 0;
                uint64_t v143 = 0;
                *(void *)__y = 0;
                double v134 = v86;
                sub_1000F17A8((double *)(a1 + 152), (double *)buf, (double *)__y, (double *)&v143, v87, v88, 0.0, v86, v64, 0.0);
                long double v89 = *(double *)__y;
                long double v90 = *(double *)buf;
                uint64_t v91 = v57[17] + v80 * 8;
                double v92 = *(double *)(v91 + 8);
                double v93 = *(double *)(v91 + 16);
                *(void *)uint64_t buf = 0;
                uint64_t v143 = 0;
                *(void *)__y = 0;
                sub_1000F17A8((double *)(a1 + 152), (double *)buf, (double *)__y, (double *)&v143, v134, v64, 0.0, v92, v93, 0.0);
                double v94 = atan2(v89, v90);
                if (v94 < 0.0) {
                  double v94 = v94 + 6.28318531;
                }
                double v124 = v94 * 57.2957795;
                double v95 = atan2(*(long double *)__y, *(long double *)buf);
                if (v95 < 0.0) {
                  double v95 = v95 + 6.28318531;
                }
                sub_1004BAC08(v124, v95 * 57.2957795);
LABEL_147:
                double v68 = v84;
                if (!v56) {
                  goto LABEL_113;
                }
                goto LABEL_112;
              }
              if (qword_102419430 != -1) {
                dispatch_once(&qword_102419430, &stru_1022C5A28);
              }
              uint64_t v106 = qword_102419438;
              if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_ERROR))
              {
                *(_WORD *)uint64_t buf = 0;
                _os_log_impl((void *)&_mh_execute_header, v106, OS_LOG_TYPE_ERROR, "CLMM,interpolateProjections,Could not interpolate, incorrect coordinateCount", buf, 2u);
              }
              double v134 = 0.0;
              if (sub_10013D1A0(115, 0))
              {
                bzero(buf, 0x65CuLL);
                if (qword_102419430 == -1) {
                  goto LABEL_98;
                }
                goto LABEL_171;
              }
              goto LABEL_111;
            }
LABEL_139:
            if (qword_102419430 != -1) {
              dispatch_once(&qword_102419430, &stru_1022C5A28);
            }
            int v82 = qword_102419438;
            if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
            {
              *(_WORD *)uint64_t buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v82, OS_LOG_TYPE_DEBUG, "CLMM,interpolateProjections,Could not interpolate to intended projection", buf, 2u);
            }
            if (!sub_10013D1A0(115, 2)) {
              goto LABEL_111;
            }
            bzero(buf, 0x65CuLL);
            if (qword_102419430 == -1)
            {
LABEL_168:
              *(_WORD *)__y = 0;
              int v70 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLGeoAccessCommon::interpolateProjections(CLDistanceCalc &, const RoadPtr, double, Coordinate &, double &) [Coordinate = CLClientLocationCoordinate, RoadPtr = std::shared_ptr<CLMapFlowLine>]", "%s\n", v70);
LABEL_169:
              if (v70 != buf) {
                free(v70);
              }
              goto LABEL_111;
            }
          }
          else
          {
            if (qword_102419430 != -1) {
              dispatch_once(&qword_102419430, &stru_1022C5A28);
            }
            unsigned int v72 = qword_102419438;
            if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
            {
              *(_WORD *)uint64_t buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v72, OS_LOG_TYPE_DEBUG, "CLMM,interpolateProjections,inconsistent array size", buf, 2u);
            }
            if (!sub_10013D1A0(115, 2)) {
              goto LABEL_111;
            }
            bzero(buf, 0x65CuLL);
            if (qword_102419430 == -1) {
              goto LABEL_168;
            }
          }
        }
        dispatch_once(&qword_102419430, &stru_1022C5A28);
        goto LABEL_168;
      }
    }
    else
    {
      if (qword_102419430 != -1) {
        dispatch_once(&qword_102419430, &stru_1022C5A28);
      }
      long long v108 = qword_102419438;
      if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
      {
        double v109 = *(double *)a1;
        uint64_t v110 = *(void *)(a4 + 288);
        unint64_t v111 = *(void *)(a4 + 296);
        *(_DWORD *)uint64_t buf = 134349569;
        *(double *)&uint8_t buf[4] = v109;
        *(_WORD *)&unsigned char buf[12] = 2049;
        *(void *)&buf[14] = v110;
        __int16 v150 = 2049;
        unint64_t v151 = v111;
        _os_log_impl((void *)&_mh_execute_header, v108, OS_LOG_TYPE_DEBUG, "CLMMLE,%{public}.1lf,could not find flowline data,LL,%{private}.7lf,%{private}.7lf", buf, 0x20u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419430 != -1) {
          dispatch_once(&qword_102419430, &stru_1022C5A28);
        }
        double v112 = *(double *)a1;
        uint64_t v113 = *(void *)(a4 + 288);
        uint64_t v114 = *(void *)(a4 + 296);
        *(_DWORD *)__y = 134349569;
        *(double *)&__y[4] = v112;
        *(_WORD *)&__y[12] = 2049;
        *(void *)&__y[14] = v113;
        __int16 v145 = 2049;
        uint64_t v146 = v114;
        long long v115 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLLaneEstimator::estimateLane(const CLMapRoadPtr &, const BOOL, const CLMapCrumb &)", "%s\n", v115);
        if (v115 != buf) {
          free(v115);
        }
      }
    }
LABEL_193:
    *(void *)uint64_t buf = &v140;
    sub_1000C5954((void ***)buf);
    return v19;
  }
  if (qword_102419430 != -1) {
    dispatch_once(&qword_102419430, &stru_1022C5A28);
  }
  unint64_t v7 = qword_102419438;
  if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
  {
    double v8 = *(double *)a1;
    *(_DWORD *)uint64_t buf = 134349056;
    *(double *)&uint8_t buf[4] = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "CLMMLE,%{public}.1lf,Solution is not matched", buf, 0xCu);
  }
  if (!sub_10013D1A0(115, 2)) {
    return 0;
  }
  bzero(buf, 0x65CuLL);
  if (qword_102419430 != -1) {
LABEL_201:
  }
    dispatch_once(&qword_102419430, &stru_1022C5A28);
LABEL_195:
  double v118 = *(double *)a1;
  *(_DWORD *)__y = 134349056;
  *(double *)&__y[4] = v118;
  uint64_t v119 = (char *)_os_log_send_and_compose_impl();
  sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLLaneEstimator::estimateLane(const CLMapRoadPtr &, const BOOL, const CLMapCrumb &)", "%s\n", v119);
  if (v119 != buf) {
    free(v119);
  }
  return 0;
}

void sub_10071A6BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,char a34,uint64_t a35,uint64_t a36,char *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  a37 = &a34;
  sub_1000C5954((void ***)&a37);
  _Unwind_Resume(a1);
}

BOOL sub_10071A75C(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = *(void *)(a4 + 8);
  uint64_t v6 = *a2;
  if (*a2)
  {
    if (*(void *)(a1 + 144))
    {
      double v12 = *(double *)(v6 + 96);
      double v13 = 0.02;
      if (a3) {
        double v13 = -0.02;
      }
      double v14 = v13 + *(double *)(a4 + 272);
      double v15 = 1.0;
      if (v14 <= 1.0) {
        double v15 = v14;
      }
      if (v14 >= 0.0) {
        double v16 = v15;
      }
      else {
        double v16 = 0.0;
      }
      char v17 = (std::__shared_weak_count *)a2[1];
      if (v17) {
        atomic_fetch_add_explicit(&v17->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      uint64_t v18 = (*(void *)(v6 + 144) - *(void *)(v6 + 136)) >> 4;
      if ((int)v18 <= 0)
      {
        if (qword_102419430 != -1) {
          dispatch_once(&qword_102419430, &stru_1022C5A28);
        }
        double v29 = qword_102419438;
        if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
        {
          LOWORD(buf[0]) = 0;
          _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "CLMM,interpolateProjections,CoordinateCount is 0", (uint8_t *)buf, 2u);
        }
        double v19 = 0.0;
        if (!sub_10013D1A0(115, 2)) {
          goto LABEL_45;
        }
        bzero(buf, 0x65CuLL);
        if (qword_102419430 == -1) {
          goto LABEL_87;
        }
      }
      else
      {
        double v19 = 0.0;
        if (v18 == 1) {
          goto LABEL_45;
        }
        sub_10039C4B4((void *)v6);
        uint64_t v20 = (uint64_t)(*(void *)(v6 + 168) - *(void *)(v6 + 160)) >> 3;
        if (v20 == v18 - 1)
        {
          sub_10039C4B4((void *)v6);
          if (v16 < 0.000001)
          {
            uint64_t v21 = *(double **)(v6 + 136);
            double v19 = *v21;
            double v22 = v21[1];
            double v23 = v21[2];
            double v24 = v21[3];
            *(void *)&buf[0] = 0;
            uint64_t v71 = 0;
            *(void *)&long long __y = 0;
            sub_1000F17A8((double *)(a1 + 152), (double *)buf, (double *)&__y, (double *)&v71, v19, v22, 0.0, v23, v24, 0.0);
            goto LABEL_46;
          }
          if (v16 >= 0.999999)
          {
            uint64_t v45 = *(void *)(v6 + 136) + 16 * v20;
            double v19 = *(double *)v45;
            double v22 = *(double *)(v45 + 8);
            sub_10071B58C((double *)(a1 + 152), *(double *)(v45 - 16), *(double *)(v45 - 8), *(double *)v45, v22);
            goto LABEL_46;
          }
          double v38 = *(double **)(v6 + 160);
          double v39 = *(double **)(v6 + 168);
          if (v38 != v39)
          {
            double v40 = 0.0;
            int v41 = 2;
            uint64_t v42 = 24;
            while (1)
            {
              double v43 = *v38 / *(double *)(v6 + 40);
              if (vabdd_f64(v16, v40 + v43) < 0.000001) {
                break;
              }
              if (v40 + v43 > v16)
              {
                int v57 = (double *)(*(void *)(v6 + 136) + v42);
                double v59 = *(v57 - 3);
                double v58 = *(v57 - 2);
                double v60 = *(v57 - 1);
                double v61 = sub_1011717B4(v58, *v57);
                double v62 = (v16 - v40) / v43;
                sub_10005B720(v58 + v61 * v62);
                double v22 = v63;
                double v64 = (double *)(*(void *)(v6 + 136) + v42);
                double v65 = *(v64 - 3);
                double v66 = *(v64 - 2);
                double v67 = *(v64 - 1);
                double v68 = *v64;
                *(void *)&buf[0] = 0;
                uint64_t v71 = 0;
                *(void *)&long long __y = 0;
                sub_1000F17A8((double *)(a1 + 152), (double *)buf, (double *)&__y, (double *)&v71, v65, v66, 0.0, v67, v68, 0.0);
                double v19 = v59 + (v60 - v59) * v62;
                goto LABEL_46;
              }
              ++v38;
              v42 += 16;
              ++v41;
              double v40 = v40 + v43;
              if (v38 == v39) {
                goto LABEL_63;
              }
            }
            if (v41 < (int)v18)
            {
              double v46 = (double *)(*(void *)(v6 + 136) + v42);
              double v19 = *(v46 - 1);
              double v22 = *v46;
              double v47 = *(v46 - 3);
              double v48 = *(v46 - 2);
              *(void *)&buf[0] = 0;
              uint64_t v71 = 0;
              *(void *)&long long __y = 0;
              sub_1000F17A8((double *)(a1 + 152), (double *)buf, (double *)&__y, (double *)&v71, v47, v48, 0.0, v19, v22, 0.0);
              long double v49 = *(double *)&__y;
              long double v50 = *(double *)buf;
              uint64_t v51 = *(void *)(v6 + 136) + v42;
              double v52 = *(double *)(v51 + 8);
              double v53 = *(double *)(v51 + 16);
              *(void *)&buf[0] = 0;
              uint64_t v71 = 0;
              *(void *)&long long __y = 0;
              sub_1000F17A8((double *)(a1 + 152), (double *)buf, (double *)&__y, (double *)&v71, v19, v22, 0.0, v52, v53, 0.0);
              double v54 = atan2(v49, v50);
              if (v54 < 0.0) {
                double v54 = v54 + 6.28318531;
              }
              double v55 = v54 * 57.2957795;
              double v56 = atan2(*(long double *)&__y, *(long double *)buf);
              if (v56 < 0.0) {
                double v56 = v56 + 6.28318531;
              }
              sub_1004BAC08(v55, v56 * 57.2957795);
LABEL_46:
              if (v17) {
                sub_1000DB0A0(v17);
              }
              sub_10005B780((double *)(a1 + 152), (double *)buf, (double *)buf + 1, v19, v22, *(double *)(a4 + 72), *(double *)(a4 + 168), v12 * 0.5 + 3.70000005);
              uint64_t v31 = *(void *)(*a2 + 136);
              uint64_t v32 = *(void *)(*a2 + 144);
              if (a3)
              {
                uint64_t v33 = v32 - v31;
                if (v33)
                {
                  uint64_t v34 = (v33 >> 4) - 1;
                  double v35 = (double *)(v31 + 16 * v34);
LABEL_53:
                  double v36 = *v35;
                  double v37 = *(double *)(v31 + 16 * v34 + 8);
LABEL_55:
                  sub_10005B780((double *)(a1 + 152), (double *)&__y, (double *)&__y + 1, v36, v37, *(double *)(a4 + 72), *(double *)(a4 + 168), -(v12 * 0.5 + 3.70000005));
                  sub_1014CB01C(a1 + 88, a5, *(double *)&__y, *((long double *)&__y + 1), *(double *)buf, *((long double *)buf + 1));
                  return a5[1] != *a5;
                }
              }
              else if (v32 != v31)
              {
                uint64_t v34 = 0;
                double v35 = *(double **)(*a2 + 136);
                goto LABEL_53;
              }
              double v36 = 0.0;
              double v37 = 0.0;
              goto LABEL_55;
            }
            if (qword_102419430 != -1) {
              dispatch_once(&qword_102419430, &stru_1022C5A28);
            }
            __int16 v69 = qword_102419438;
            if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_ERROR))
            {
              LOWORD(buf[0]) = 0;
              _os_log_impl((void *)&_mh_execute_header, v69, OS_LOG_TYPE_ERROR, "CLMM,interpolateProjections,Could not interpolate, incorrect coordinateCount", (uint8_t *)buf, 2u);
            }
            double v19 = 0.0;
            if (sub_10013D1A0(115, 0))
            {
              bzero(buf, 0x65CuLL);
              if (qword_102419430 != -1) {
                dispatch_once(&qword_102419430, &stru_1022C5A28);
              }
              LOWORD(__y) = 0;
              int v70 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLGeoAccessCommon::interpolateProjections(CLDistanceCalc &, const RoadPtr, double, Coordinate &, double &) [Coordinate = GEOLocationCoordinate2D, RoadPtr = std::shared_ptr<CLMapRoad>]", "%s\n", v70);
              goto LABEL_88;
            }
LABEL_45:
            double v22 = 0.0;
            goto LABEL_46;
          }
LABEL_63:
          if (qword_102419430 != -1) {
            dispatch_once(&qword_102419430, &stru_1022C5A28);
          }
          double v44 = qword_102419438;
          if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
          {
            LOWORD(buf[0]) = 0;
            _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEBUG, "CLMM,interpolateProjections,Could not interpolate to intended projection", (uint8_t *)buf, 2u);
          }
          if (!sub_10013D1A0(115, 2)) {
            goto LABEL_45;
          }
          bzero(buf, 0x65CuLL);
          if (qword_102419430 == -1)
          {
LABEL_87:
            LOWORD(__y) = 0;
            int v70 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLGeoAccessCommon::interpolateProjections(CLDistanceCalc &, const RoadPtr, double, Coordinate &, double &) [Coordinate = GEOLocationCoordinate2D, RoadPtr = std::shared_ptr<CLMapRoad>]", "%s\n", v70);
LABEL_88:
            if (v70 != (char *)buf) {
              free(v70);
            }
            goto LABEL_45;
          }
        }
        else
        {
          if (qword_102419430 != -1) {
            dispatch_once(&qword_102419430, &stru_1022C5A28);
          }
          double v30 = qword_102419438;
          if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
          {
            LOWORD(buf[0]) = 0;
            _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "CLMM,interpolateProjections,inconsistent array size", (uint8_t *)buf, 2u);
          }
          if (!sub_10013D1A0(115, 2)) {
            goto LABEL_45;
          }
          bzero(buf, 0x65CuLL);
          if (qword_102419430 == -1) {
            goto LABEL_87;
          }
        }
      }
      dispatch_once(&qword_102419430, &stru_1022C5A28);
      goto LABEL_87;
    }
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022C5A28);
    }
    double v27 = qword_102419438;
    if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(buf[0]) = 134349056;
      *(void *)((char *)buf + 4) = v5;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "CLMMLE,%{public}.1lf,Flowline data not available", (uint8_t *)buf, 0xCu);
    }
    BOOL result = sub_10013D1A0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419430 == -1)
      {
LABEL_30:
        LODWORD(__y) = 134349056;
        *(void *)((char *)&__y + 4) = v5;
        double v28 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLLaneEstimator::getFlowlines(const CLMapRoadPtr &, const BOOL, const CLMapCrumb &, std::vector<CLMapFlowLinePtr> &)", "%s\n", v28);
        if (v28 != (char *)buf) {
          free(v28);
        }
        return 0;
      }
LABEL_90:
      dispatch_once(&qword_102419430, &stru_1022C5A28);
      goto LABEL_30;
    }
  }
  else
  {
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022C5A28);
    }
    unsigned int v25 = qword_102419438;
    if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(buf[0]) = 134349056;
      *(void *)((char *)buf + 4) = v5;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "CLMMLE,%{public}.1lf,road is nullptr", (uint8_t *)buf, 0xCu);
    }
    BOOL result = sub_10013D1A0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419430 == -1) {
        goto LABEL_30;
      }
      goto LABEL_90;
    }
  }
  return result;
}

void sub_10071B2C0(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1000DB0A0(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10071B2E0(uint64_t a1, double a2)
{
  if (qword_102419430 != -1) {
    dispatch_once(&qword_102419430, &stru_1022C5A28);
  }
  int v4 = qword_102419438;
  if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    int v7 = *(_DWORD *)(a1 + 16);
    uint64_t v9 = *(void *)(a1 + 24);
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 56);
    uint64_t v11 = *(void *)(a1 + 64);
    uint64_t v12 = *(void *)(a1 + 72);
    *(_DWORD *)uint64_t buf = 134351105;
    double v15 = a2;
    __int16 v16 = 2049;
    uint64_t v17 = v5;
    __int16 v18 = 2049;
    uint64_t v19 = v6;
    __int16 v20 = 2049;
    uint64_t v21 = v10;
    __int16 v22 = 1026;
    int v23 = v7;
    __int16 v24 = 2049;
    uint64_t v25 = v8;
    __int16 v26 = 2050;
    uint64_t v27 = v9;
    __int16 v28 = 2050;
    uint64_t v29 = v11;
    __int16 v30 = 2050;
    uint64_t v31 = v12;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "CLMMLE,%{public}.1lf,laneData,LL,%{private}.7lf,%{private}.7lf,course,%{private}.1lf,laneIndex,%{public}d,id,%{private}lld,probability,%{public}.2lf,shortestDist,%{public}.2lf,proj,%{public}.2lf", buf, 0x58u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022C5A28);
    }
    double v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLLaneData::debugOutput(const CFAbsoluteTime, std::string) const", "%s\n", v13);
    if (v13 != (char *)buf) {
      free(v13);
    }
  }
}

void sub_10071B55C(id a1)
{
  qword_102419438 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

double sub_10071B58C(double *a1, double a2, double a3, double a4, double a5)
{
  long double v9 = 0.0;
  uint64_t v7 = 0;
  long double __y = 0.0;
  sub_1000F17A8(a1, &v9, &__y, (double *)&v7, a2, a3, 0.0, a4, a5, 0.0);
  double v5 = atan2(__y, v9);
  if (v5 < 0.0) {
    double v5 = v5 + 6.28318531;
  }
  return v5 * 57.2957795;
}

uint64_t sub_10071B604()
{
  if (qword_10247D2D8 != -1) {
    dispatch_once(&qword_10247D2D8, &stru_1022C5A48);
  }
  return qword_10248A318;
}

void sub_10071B648(id a1)
{
}

void sub_10071B6F8()
{
}

void sub_10071B71C()
{
  if (qword_10248A318)
  {
    *(void *)uint64_t buf = 0;
    (*(void (**)(uint64_t, uint8_t *))(*(void *)qword_10248A318 + 976))(qword_10248A318, buf);
    if (((*(uint64_t (**)(void))(*(void *)qword_10248A318 + 944))() & 1) == 0)
    {
      if (qword_102419620 != -1) {
        dispatch_once(&qword_102419620, &stru_1022C5F80);
      }
      uint64_t v0 = qword_102419628;
      if (os_log_type_enabled((os_log_t)qword_102419628, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "could not store stats data ", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419620 != -1) {
          dispatch_once(&qword_102419620, &stru_1022C5F80);
        }
        uint64_t v1 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "static void CLDaemonStats::shutdownInstance()", "%s\n", v1);
        if (v1 != (char *)buf) {
          free(v1);
        }
      }
    }
  }
}

uint64_t sub_10071B924(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)sub_10053C0A8(a1, a2, "stats", 1, 0, 2);
  *uint64_t v3 = off_1022C5A78;
  sub_100513074(v3 + 16, "CLDaemonStats", 1, 1);
  *(unsigned char *)(a1 + 144) = 0;
  sub_100103240();
  if (!sub_10073AAE4())
  {
    BOOL v8 = 0;
    sub_1000C7F88(&v6);
    int v4 = sub_1000D2988(v6, "EnableLocationAccessorySessionDebugLog", &v8);
    if (v7) {
      sub_1000DB0A0(v7);
    }
    if (v4) {
      *(unsigned char *)(a1 + 144) = v8;
    }
  }
  return a1;
}

void sub_10071B9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    sub_1000DB0A0(a11);
  }
  sub_10051310C(v12);
  sub_10053C884(v11);
  _Unwind_Resume(a1);
}

void *sub_10071BA34(void *a1)
{
  *a1 = off_1022C5A78;
  sub_10051310C(a1 + 16);

  return sub_10053C884((uint64_t)a1);
}

void sub_10071BA88(void *a1)
{
  *a1 = off_1022C5A78;
  sub_10051310C(a1 + 16);
  sub_10053C884((uint64_t)a1);

  operator delete();
}

uint64_t sub_10071BAF0(uint64_t a1, std::string *a2)
{
  uint64_t v4 = a1 + 128;
  (*(void (**)(uint64_t))(*(void *)(a1 + 128) + 16))(a1 + 128);
  sub_1004D6B10(a1, a2);
  return (*(uint64_t (**)(uint64_t))(*(void *)v4 + 24))(v4);
}

void sub_10071BB94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10071BBA8(uint64_t a1, double *a2)
{
  uint64_t v5 = a1 + 128;
  uint64_t v4 = *(void *)(a1 + 128);
  v7[5] = a1 + 128;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 128);
  __int16 v8 = 256;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  uint64_t v7[2] = sub_10071BCAC;
  v7[3] = &unk_1022A3020;
  void v7[4] = a1;
  sub_10053D348(a1, a2, (uint64_t)v7);
  return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 24))(v5);
}

void sub_10071BC98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10071BCAC(uint64_t a1)
{
  return sub_10071BCB4(*(void *)(a1 + 32));
}

uint64_t sub_10071BCB4(uint64_t a1)
{
  uint64_t v2 = a1 + 128;
  (*(void (**)(uint64_t))(*(void *)(a1 + 128) + 16))(a1 + 128);
  sub_10053D700((double *)a1);
  return (*(uint64_t (**)(uint64_t))(*(void *)v2 + 24))(v2);
}

void sub_10071BD48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10071BD5C(uint64_t a1)
{
  uint64_t v2 = a1 + 128;
  (*(void (**)(uint64_t))(*(void *)(a1 + 128) + 16))(a1 + 128);
  uint64_t v3 = sub_10053C9B0(a1);
  (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  return v3;
}

void sub_10071BDF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10071BE0C(uint64_t a1)
{
  uint64_t v2 = a1 + 128;
  (*(void (**)(uint64_t))(*(void *)(a1 + 128) + 16))(a1 + 128);
  uint64_t v3 = sub_10053CD58(a1);
  (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  return v3;
}

void sub_10071BEA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10071BEBC(uint64_t result, uint64_t a2)
{
  *(void *)(result + ++*(_DWORD *)(result + 48) = *(void *)(a2 + 48);
  *(void *)(a2 + ++*(_DWORD *)(result + 48) = 0;
  return result;
}

void sub_10071BECC(uint64_t a1)
{
  uint64_t v1 = *(NSObject **)(a1 + 48);
  if (v1) {
    dispatch_group_leave(v1);
  }
}

void sub_10071BEDC(uint64_t a1)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v4 = 0;
  (*(void (**)(uint64_t, void **))(*(void *)a1 + 968))(a1, __p);
  if (v4 >= 0) {
    uint64_t v1 = (char *)__p;
  }
  else {
    uint64_t v1 = (char *)__p[0];
  }
  CFStringRef v2 = sub_1000B73E0(v1);
  CFUserNotificationDisplayNotice(0.0, 0, 0, 0, 0, @"Location Stats", v2, 0);
  CFRelease(v2);
  if (SHIBYTE(v4) < 0) {
    operator delete(__p[0]);
  }
}

void sub_10071BF94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10071BFB4(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t v6 = a1 + 128;
  (*(void (**)(uint64_t))(*(void *)(a1 + 128) + 16))(a1 + 128);
  sub_1000EA7C8((CFMutableDictionaryRef *)a1, a2, a3);
  return (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24))(v6);
}

void sub_10071C060(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10071C074(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v104 = 0;
  long long v102 = 0u;
  long long v103 = 0u;
  long long v101 = 0u;
  int v3 = *((_DWORD *)a2 + 31);
  if (v3 < 1)
  {
    unsigned int v96 = 1;
    float v9 = 0.0;
  }
  else
  {
    uint64_t v4 = 0;
    int v5 = 0;
    float v6 = (float)v3;
    do
    {
      int v7 = *(_DWORD *)&a2[v4 + 128];
      *(float *)((char *)&v101 + v4) = (float)v7 / v6;
      v5 += v7;
      v4 += 4;
    }
    while (v4 != 56);
    int v8 = *((_DWORD *)a2 + 46);
    float v9 = (float)v8 / v6;
    int v10 = v8 + v5;
    if (v8 + v5 == v3)
    {
      unsigned int v96 = 1;
    }
    else
    {
      if (qword_102419520 != -1) {
        dispatch_once(&qword_102419520, &stru_1022C5FA0);
      }
      uint64_t v11 = qword_102419528;
      if (os_log_type_enabled((os_log_t)qword_102419528, OS_LOG_TYPE_ERROR))
      {
        int v12 = *((_DWORD *)a2 + 31);
        *(_DWORD *)uint64_t buf = 67109376;
        int v165 = v10;
        __int16 v166 = 1024;
        LODWORD(v167) = v12;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "The sum of the delivered locations by type (%d) does not equal the delivered locations counter (%d).", buf, 0xEu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419520 != -1) {
          dispatch_once(&qword_102419520, &stru_1022C5FA0);
        }
        int v55 = *((_DWORD *)a2 + 31);
        LODWORD(v107) = 67109376;
        HIDWORD(v107) = v10;
        __int16 v108 = 1024;
        LODWORD(v109) = v55;
        double v56 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLDaemonStats::submitMetric(const CLDaemonStats_Type::LocationUpdateSession &)", "%s\n", v56);
        if (v56 != (char *)buf) {
          free(v56);
        }
      }
      unsigned int v96 = 0;
    }
  }
  double v13 = *((double *)a2 + 8);
  double v14 = *((double *)a2 + 1);
  if (qword_102419520 != -1) {
    dispatch_once(&qword_102419520, &stru_1022C5FA0);
  }
  double v15 = v13 - v14;
  __int16 v16 = qword_102419528;
  if (os_log_type_enabled((os_log_t)qword_102419528, OS_LOG_TYPE_DEBUG))
  {
    int v17 = *a2;
    uint64_t v57 = *((void *)a2 + 1);
    __int16 v18 = (unsigned __int8 *)*((void *)a2 + 2);
    int v19 = (char)a2[39];
    int v20 = a2[40];
    int v59 = a2[41];
    int v61 = a2[42];
    int v63 = a2[43];
    int v65 = *((_DWORD *)a2 + 12);
    int v67 = a2[44];
    int v69 = a2[52];
    int v71 = *((_DWORD *)a2 + 14);
    int v75 = *((_DWORD *)a2 + 15);
    uint64_t v73 = *((void *)a2 + 8);
    uint64_t v77 = *((void *)a2 + 24);
    uint64_t v79 = *((void *)a2 + 9);
    uint64_t v81 = *((void *)a2 + 11);
    uint64_t v83 = *((void *)a2 + 10);
    uint64_t v85 = *((void *)a2 + 12);
    uint64_t v87 = *((void *)a2 + 13);
    uint64_t v89 = *((void *)a2 + 14);
    int v91 = a2[120];
    int v93 = *((_DWORD *)a2 + 31);
    int v95 = *((_DWORD *)a2 + 47);
    sub_10071D074();
    int v21 = SBYTE3(v111);
    __int16 v22 = (void **)v107;
    sub_10071D330();
    int v165 = v17;
    int v23 = &v107;
    if (v21 < 0) {
      int v23 = v22;
    }
    if (v19 >= 0) {
      __int16 v24 = a2 + 16;
    }
    else {
      __int16 v24 = v18;
    }
    uint64_t v25 = (void **)__p[0];
    if (v100 >= 0) {
      uint64_t v25 = __p;
    }
    uint64_t v167 = v57;
    long long v169 = v24;
    int v171 = v20;
    int v173 = v59;
    int v175 = v61;
    int v177 = v63;
    int v179 = v65;
    int v181 = v67;
    int v183 = v69;
    int v185 = v71;
    int v187 = v75;
    uint64_t v189 = v73;
    uint64_t v193 = v77;
    uint64_t v195 = v79;
    uint64_t v197 = v81;
    uint64_t v199 = v83;
    uint64_t v201 = v85;
    uint64_t v203 = v87;
    uint64_t v205 = v89;
    int v207 = v91;
    int v209 = v93;
    int v211 = v95;
    uint64_t v213 = v23;
    __int16 v168 = 2080;
    __int16 v212 = 2080;
    __int16 v214 = 2080;
    uint64_t v215 = v25;
    int v217 = *((_DWORD *)a2 + 46);
    __int16 v166 = 2048;
    __int16 v188 = 2048;
    __int16 v190 = 2048;
    __int16 v192 = 2048;
    __int16 v194 = 2048;
    __int16 v196 = 2048;
    __int16 v198 = 2048;
    __int16 v200 = 2048;
    __int16 v202 = 2048;
    __int16 v204 = 2048;
    __int16 v218 = 2048;
    double v191 = v15;
    double v219 = v9;
    __int16 v170 = 1024;
    __int16 v172 = 1024;
    __int16 v174 = 1024;
    __int16 v176 = 1024;
    __int16 v178 = 1024;
    __int16 v180 = 1024;
    __int16 v182 = 1024;
    __int16 v184 = 1024;
    __int16 v186 = 1024;
    __int16 v206 = 1024;
    __int16 v208 = 1024;
    __int16 v210 = 1024;
    __int16 v216 = 1024;
    __int16 v220 = 1024;
    *(_DWORD *)uint64_t buf = 67116290;
    unsigned int v221 = v96;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "metric.valid,%d,metric.timestamp,%.3f,metric.bundleId,%s,cellAvailable,%d,wifiAvailable,%d,passcodeLocked,%d,airplaneMode,%d,reachability,%d,accessoryConnected,%d,powered,%d,gpsCoexWifi,%d,gpsCoexBt,%d,timestampEnd,%.3f,duration,%.3f,cblsPowerSaverBkgRuntimeLoss,%.3f,desiredAccuracy,%.2f,achievedAccuracy,%.2f,distanceFilter,%.2f,ttff,%.3f,ttffGps,%.3f,achievedSpeed,%.2f,autoStopped,%d,deferredLocations,0,deliveredLocations,%d,cblsPowerSaverLocationLoss,%d,deliveredLocationsByType,%s,deliveredLocationsByTypeFraction,%s,sdeliveredLocationsUndefined,%d,deliveredLocationsUndefinedFraction,%.4f,validDeliveredLocationsByType,%d", buf, 0xE8u);
    if (v100 < 0) {
      operator delete(__p[0]);
    }
    if (SBYTE3(v111) < 0) {
      operator delete(v107);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419520 != -1) {
      dispatch_once(&qword_102419520, &stru_1022C5FA0);
    }
    int v43 = *a2;
    uint64_t v44 = *((void *)a2 + 1);
    uint64_t v45 = (unsigned __int8 *)*((void *)a2 + 2);
    int v46 = (char)a2[39];
    int v47 = a2[40];
    int v58 = a2[41];
    int v60 = a2[42];
    int v62 = a2[43];
    int v64 = *((_DWORD *)a2 + 12);
    int v66 = a2[44];
    int v68 = a2[52];
    int v70 = *((_DWORD *)a2 + 14);
    int v74 = *((_DWORD *)a2 + 15);
    uint64_t v72 = *((void *)a2 + 8);
    uint64_t v76 = *((void *)a2 + 24);
    uint64_t v78 = *((void *)a2 + 9);
    uint64_t v80 = *((void *)a2 + 11);
    uint64_t v82 = *((void *)a2 + 10);
    uint64_t v84 = *((void *)a2 + 12);
    uint64_t v86 = *((void *)a2 + 13);
    uint64_t v88 = *((void *)a2 + 14);
    int v90 = a2[120];
    int v92 = *((_DWORD *)a2 + 31);
    int v94 = *((_DWORD *)a2 + 47);
    sub_10071D074();
    int v48 = v100;
    long double v49 = (void **)__p[0];
    sub_10071D330();
    long double v50 = __p;
    if (v48 < 0) {
      long double v50 = v49;
    }
    if (v46 >= 0) {
      uint64_t v51 = a2 + 16;
    }
    else {
      uint64_t v51 = v45;
    }
    int v52 = *((_DWORD *)a2 + 46);
    if (v98 >= 0) {
      double v53 = &v97;
    }
    else {
      double v53 = v97;
    }
    LODWORD(v107) = 67116290;
    HIDWORD(v107) = v43;
    __int16 v108 = 2048;
    uint64_t v109 = v44;
    __int16 v110 = 2080;
    unint64_t v111 = v51;
    __int16 v112 = 1024;
    int v113 = v47;
    __int16 v114 = 1024;
    int v115 = v58;
    __int16 v116 = 1024;
    int v117 = v60;
    __int16 v118 = 1024;
    int v119 = v62;
    __int16 v120 = 1024;
    int v121 = v64;
    __int16 v122 = 1024;
    int v123 = v66;
    __int16 v124 = 1024;
    int v125 = v68;
    __int16 v126 = 1024;
    int v127 = v70;
    __int16 v128 = 1024;
    int v129 = v74;
    __int16 v130 = 2048;
    uint64_t v131 = v72;
    __int16 v132 = 2048;
    double v133 = v15;
    __int16 v134 = 2048;
    uint64_t v135 = v76;
    __int16 v136 = 2048;
    uint64_t v137 = v78;
    __int16 v138 = 2048;
    uint64_t v139 = v80;
    __int16 v140 = 2048;
    uint64_t v141 = v82;
    __int16 v142 = 2048;
    uint64_t v143 = v84;
    __int16 v144 = 2048;
    uint64_t v145 = v86;
    __int16 v146 = 2048;
    uint64_t v147 = v88;
    __int16 v148 = 1024;
    int v149 = v90;
    __int16 v150 = 1024;
    int v151 = v92;
    __int16 v152 = 1024;
    int v153 = v94;
    __int16 v154 = 2080;
    double v155 = v50;
    __int16 v156 = 2080;
    uint64_t v157 = v53;
    __int16 v158 = 1024;
    int v159 = v52;
    __int16 v160 = 2048;
    double v161 = v9;
    __int16 v162 = 1024;
    unsigned int v163 = v96;
    double v54 = (char *)_os_log_send_and_compose_impl();
    if (v98 < 0) {
      operator delete(v97);
    }
    if (v100 < 0) {
      operator delete(__p[0]);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLDaemonStats::submitMetric(const CLDaemonStats_Type::LocationUpdateSession &)", "%s\n", v54);
    if (v54 != (char *)buf) {
      free(v54);
    }
  }
  v105[0] = @"valid";
  v106[0] = +[NSNumber numberWithBool:*a2];
  v105[1] = @"bundleId";
  if ((a2[39] & 0x80u) == 0) {
    __int16 v26 = a2 + 16;
  }
  else {
    __int16 v26 = (unsigned __int8 *)*((void *)a2 + 2);
  }
  v106[1] = +[NSString stringWithUTF8String:v26];
  v105[2] = @"cellAvailable";
  v106[2] = +[NSNumber numberWithBool:a2[40]];
  v105[3] = @"wifiAvailable";
  v106[3] = +[NSNumber numberWithBool:a2[41]];
  v105[4] = @"passcodeLocked";
  v106[4] = +[NSNumber numberWithBool:a2[42]];
  v105[5] = @"airplaneMode";
  v106[5] = +[NSNumber numberWithBool:a2[43]];
  v105[6] = @"reachability";
  v106[6] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)a2 + 12)];
  v105[7] = @"accessoryConnected";
  v106[7] = +[NSNumber numberWithBool:a2[44]];
  v105[8] = @"powered";
  v106[8] = +[NSNumber numberWithBool:a2[52]];
  v105[9] = @"gpsCoexWifi";
  v106[9] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 14)];
  v105[10] = @"gpsCoexBt";
  v106[10] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 15)];
  v105[11] = @"duration";
  v106[11] = +[NSNumber numberWithDouble:v15];
  v105[12] = @"cblsPowerSaverBkgRuntimeLoss";
  v106[12] = +[NSNumber numberWithDouble:*((double *)a2 + 24)];
  v105[13] = @"desiredAccuracy";
  v106[13] = +[NSNumber numberWithDouble:*((double *)a2 + 9)];
  v105[14] = @"achievedAccuracy";
  v106[14] = +[NSNumber numberWithDouble:*((double *)a2 + 11)];
  v105[15] = @"distanceFilter";
  v106[15] = +[NSNumber numberWithDouble:*((double *)a2 + 10)];
  v105[16] = @"ttff";
  v106[16] = +[NSNumber numberWithDouble:*((double *)a2 + 12)];
  v105[17] = @"ttffGps";
  v106[17] = +[NSNumber numberWithDouble:*((double *)a2 + 13)];
  v105[18] = @"achievedSpeed";
  v106[18] = +[NSNumber numberWithDouble:*((double *)a2 + 14)];
  v105[19] = @"autoStopped";
  v106[19] = +[NSNumber numberWithBool:a2[120]];
  v105[20] = @"deliveredLocations";
  v106[20] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 31)];
  v105[21] = @"cblsPowerSaverLocationLoss";
  v106[21] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 47)];
  v105[22] = @"deliveredLocationsUnknown";
  v106[22] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 32)];
  v105[23] = @"deliveredLocationsUnknownFraction";
  LODWORD(v27) = v101;
  v106[23] = +[NSNumber numberWithFloat:v27];
  v105[24] = @"deliveredLocationsGps";
  v106[24] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 33)];
  v105[25] = @"deliveredLocationsGpsFraction";
  LODWORD(v28) = DWORD1(v101);
  v106[25] = +[NSNumber numberWithFloat:v28];
  v105[26] = @"deliveredLocationsNmea";
  v106[26] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 34)];
  v105[27] = @"deliveredLocationsNmeaFraction";
  LODWORD(v29) = DWORD2(v101);
  v106[27] = +[NSNumber numberWithFloat:v29];
  v105[28] = @"deliveredLocationsAccessory";
  v106[28] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 35)];
  v105[29] = @"deliveredLocationsAccessoryFraction";
  LODWORD(v30) = HIDWORD(v101);
  v106[29] = +[NSNumber numberWithFloat:v30];
  v105[30] = @"deliveredLocationsWifi1";
  v106[30] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 36)];
  v105[31] = @"deliveredLocationsWifi1Fraction";
  LODWORD(v31) = v102;
  v106[31] = +[NSNumber numberWithFloat:v31];
  v105[32] = @"deliveredLocationsSkyhook";
  v106[32] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 37)];
  v105[33] = @"deliveredLocationsSkyhookFraction";
  LODWORD(v32) = DWORD1(v102);
  v106[33] = +[NSNumber numberWithFloat:v32];
  v105[34] = @"deliveredLocationsCell";
  v106[34] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 38)];
  v105[35] = @"deliveredLocationsCellFraction";
  LODWORD(v33) = DWORD2(v102);
  v106[35] = +[NSNumber numberWithFloat:v33];
  v105[36] = @"deliveredLocationsLac";
  v106[36] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 39)];
  v105[37] = @"deliveredLocationsLacFraction";
  LODWORD(v34) = HIDWORD(v102);
  v106[37] = +[NSNumber numberWithFloat:v34];
  v105[38] = @"deliveredLocationsMcc";
  v106[38] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 40)];
  v105[39] = @"deliveredLocationsMccFraction";
  LODWORD(v35) = v103;
  v106[39] = +[NSNumber numberWithFloat:v35];
  v105[40] = @"deliveredLocationsGpsCoarse";
  v106[40] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 41)];
  v105[41] = @"deliveredLocationsGpsCoarseFraction";
  LODWORD(v36) = DWORD1(v103);
  v106[41] = +[NSNumber numberWithFloat:v36];
  v105[42] = @"deliveredLocationsIndoor";
  v106[42] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 42)];
  v105[43] = @"deliveredLocationsIndoorFraction";
  LODWORD(v37) = DWORD2(v103);
  v106[43] = +[NSNumber numberWithFloat:v37];
  v105[44] = @"deliveredLocationsWifi2";
  v106[44] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 43)];
  v105[45] = @"deliveredLocationsWifi2Fraction";
  LODWORD(v38) = HIDWORD(v103);
  v106[45] = +[NSNumber numberWithFloat:v38];
  v105[46] = @"deliveredLocationsCompensated";
  v106[46] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 44)];
  v105[47] = @"deliveredLocationsCompensatedFraction";
  LODWORD(v39) = v104;
  v106[47] = +[NSNumber numberWithFloat:v39];
  v105[48] = @"deliveredLocationsLoiOverride";
  v106[48] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 45)];
  v105[49] = @"deliveredLocationsLoiOverrideFraction";
  LODWORD(v40) = HIDWORD(v104);
  v106[49] = +[NSNumber numberWithFloat:v40];
  v105[50] = @"deliveredLocationsUndefined";
  v106[50] = +[NSNumber numberWithInt:*((unsigned int *)a2 + 46)];
  v105[51] = @"deliveredLocationsUndefinedFraction";
  *(float *)&double v41 = v9;
  v106[51] = +[NSNumber numberWithFloat:v41];
  v106[52] = &off_102392A38;
  v105[52] = @"sessionCount";
  v105[53] = @"validDeliveredLocationsByType";
  v106[53] = +[NSNumber numberWithBool:v96];
  +[NSDictionary dictionaryWithObjects:v106 forKeys:v105 count:54];
  return AnalyticsSendEvent();
}

void sub_10071D03C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a37 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10071D074()
{
  sub_10048B72C((uint64_t)v19);
  sub_100134750(&v16, "[");
  if ((v18 & 0x80u) == 0) {
    uint64_t v0 = &v16;
  }
  else {
    uint64_t v0 = v16;
  }
  if ((v18 & 0x80u) == 0) {
    uint64_t v1 = v18;
  }
  else {
    uint64_t v1 = v17;
  }
  sub_100132EFC(v19, (uint64_t)v0, v1);
  for (uint64_t i = 0; i != 14; ++i)
  {
    std::stringbuf::str();
    if ((v15 & 0x80u) == 0) {
      size_t v3 = v15;
    }
    else {
      size_t v3 = __n;
    }
    uint64_t v4 = v18;
    if ((v18 & 0x80u) != 0) {
      uint64_t v4 = v17;
    }
    if (v3 != v4)
    {
      if ((v15 & 0x80) != 0) {
        operator delete(__p);
      }
LABEL_30:
      sub_100132EFC(v19, (uint64_t)", ", 2);
      goto LABEL_31;
    }
    if ((v18 & 0x80u) == 0) {
      int v5 = (unsigned __int8 *)&v16;
    }
    else {
      int v5 = (unsigned __int8 *)v16;
    }
    if ((v15 & 0x80) != 0)
    {
      int v10 = __p;
      int v11 = memcmp(__p, v5, __n);
      operator delete(v10);
      if (!v11) {
        goto LABEL_31;
      }
      goto LABEL_30;
    }
    if (v15)
    {
      uint64_t v6 = 0;
      do
      {
        int v7 = *((unsigned __int8 *)&__p + v6);
        int v8 = v5[v6];
      }
      while (v7 == v8 && v15 - 1 != v6++);
      if (v7 != v8) {
        goto LABEL_30;
      }
    }
LABEL_31:
    std::ostream::operator<<();
  }
  sub_100132EFC(v19, (uint64_t)"]", 1);
  std::stringbuf::str();
  if ((char)v18 < 0) {
    operator delete(v16);
  }
  if (v20 < 0) {
    operator delete((void *)v19[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_10071D2FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
}

uint64_t sub_10071D330()
{
  sub_10048B72C((uint64_t)v19);
  sub_100134750(&v16, "[");
  if ((v18 & 0x80u) == 0) {
    uint64_t v0 = &v16;
  }
  else {
    uint64_t v0 = v16;
  }
  if ((v18 & 0x80u) == 0) {
    uint64_t v1 = v18;
  }
  else {
    uint64_t v1 = v17;
  }
  sub_100132EFC(v19, (uint64_t)v0, v1);
  for (uint64_t i = 0; i != 14; ++i)
  {
    std::stringbuf::str();
    if ((v15 & 0x80u) == 0) {
      size_t v3 = v15;
    }
    else {
      size_t v3 = __n;
    }
    uint64_t v4 = v18;
    if ((v18 & 0x80u) != 0) {
      uint64_t v4 = v17;
    }
    if (v3 != v4)
    {
      if ((v15 & 0x80) != 0) {
        operator delete(__p);
      }
LABEL_30:
      sub_100132EFC(v19, (uint64_t)", ", 2);
      goto LABEL_31;
    }
    if ((v18 & 0x80u) == 0) {
      int v5 = (unsigned __int8 *)&v16;
    }
    else {
      int v5 = (unsigned __int8 *)v16;
    }
    if ((v15 & 0x80) != 0)
    {
      int v10 = __p;
      int v11 = memcmp(__p, v5, __n);
      operator delete(v10);
      if (!v11) {
        goto LABEL_31;
      }
      goto LABEL_30;
    }
    if (v15)
    {
      uint64_t v6 = 0;
      do
      {
        int v7 = *((unsigned __int8 *)&__p + v6);
        int v8 = v5[v6];
      }
      while (v7 == v8 && v15 - 1 != v6++);
      if (v7 != v8) {
        goto LABEL_30;
      }
    }
LABEL_31:
    std::ostream::operator<<();
  }
  sub_100132EFC(v19, (uint64_t)"]", 1);
  std::stringbuf::str();
  if ((char)v18 < 0) {
    operator delete(v16);
  }
  if (v20 < 0) {
    operator delete((void *)v19[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_10071D5B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
}

uint64_t sub_10071D5EC(uint64_t a1, unsigned __int8 *a2)
{
  if (qword_102419530 != -1) {
    dispatch_once(&qword_102419530, &stru_1022C5FC0);
  }
  size_t v3 = qword_102419538;
  if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    uint64_t v5 = *((void *)a2 + 1);
    if ((a2[39] & 0x80u) == 0) {
      uint64_t v6 = a2 + 16;
    }
    else {
      uint64_t v6 = (unsigned __int8 *)*((void *)a2 + 2);
    }
    if ((a2[63] & 0x80u) == 0) {
      int v7 = a2 + 40;
    }
    else {
      int v7 = (unsigned __int8 *)*((void *)a2 + 5);
    }
    int v8 = a2[112];
    int v9 = a2[113];
    int v10 = *((unsigned __int16 *)a2 + 58);
    int v11 = a2[114];
    *(_DWORD *)uint64_t buf = 68291075;
    int v14 = 0;
    __int16 v15 = 2082;
    __int16 v16 = "";
    __int16 v17 = 1026;
    int v18 = v4;
    __int16 v19 = 2050;
    uint64_t v20 = v5;
    __int16 v21 = 2081;
    __int16 v22 = v6;
    __int16 v23 = 2081;
    __int16 v24 = v7;
    __int16 v25 = 1026;
    int v26 = v8;
    __int16 v27 = 1026;
    int v28 = v9;
    __int16 v29 = 1026;
    int v30 = v10;
    __int16 v31 = 1026;
    int v32 = v11;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"iB: submit monitor session\", \"metric.valid\":%{public}d, \"metric.timestamp\":\"%{public}f\", \"metric.bundleId\":%{private, location:escape_only}s, \"onbehalfbundleid\":%{private, location:escape_only}s, \"clientSpecifiesMajor\":%{public}d, \"clientSpecifiesMinor\":%{public}d, \"totalMonitoredRegions\":%{public}d, \"foreground\":%{public}d}", buf, 0x4Eu);
  }
  AnalyticsSendEventLazy();
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_10071D800(uint64_t a1)
{
  v3[0] = @"clientSpecifiesMajor";
  v4[0] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 112)];
  v3[1] = @"clientSpecifiesMinor";
  v4[1] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 113)];
  uint64_t v3[2] = @"totalMonitoredRegions";
  _OWORD v4[2] = +[NSNumber numberWithUnsignedShort:*(unsigned __int16 *)(*(void *)(a1 + 32) + 116)];
  void v3[3] = @"appIsInForeground";
  void v4[3] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 114)];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:4];
}

NSDictionary *sub_10071D8F0(uint64_t a1)
{
  v9[0] = @"bundleId";
  uint64_t v2 = *(void *)(a1 + 32);
  size_t v3 = (void *)(v2 + 16);
  if (*(char *)(v2 + 39) < 0) {
    size_t v3 = (void *)*v3;
  }
  v10[0] = +[NSString stringWithUTF8String:v3];
  v9[1] = @"regionIdentifier";
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = (void *)(v4 + 88);
  if (*(char *)(v4 + 111) < 0) {
    uint64_t v5 = (void *)*v5;
  }
  v10[1] = +[NSString stringWithUTF8String:v5];
  int v9[2] = @"proximityUUID";
  uint64_t v6 = *(void *)(a1 + 32);
  int v7 = (void *)(v6 + 64);
  if (*(char *)(v6 + 87) < 0) {
    int v7 = (void *)*v7;
  }
  _DWORD v10[2] = +[NSString stringWithUTF8String:v7];
  unsigned __int8 v9[3] = @"clientSpecifiesMajor";
  int v10[3] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 112)];
  char v9[4] = @"clientSpecifiesMinor";
  void v10[4] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 113)];
  return +[NSDictionary dictionaryWithObjects:v10 forKeys:v9 count:5];
}

uint64_t sub_10071DA28(uint64_t a1, unsigned __int8 *a2)
{
  if (qword_102419530 != -1) {
    dispatch_once(&qword_102419530, &stru_1022C5FC0);
  }
  size_t v3 = qword_102419538;
  if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    uint64_t v5 = *((void *)a2 + 1);
    if ((a2[39] & 0x80u) == 0) {
      uint64_t v6 = a2 + 16;
    }
    else {
      uint64_t v6 = (unsigned __int8 *)*((void *)a2 + 2);
    }
    if ((a2[63] & 0x80u) == 0) {
      int v7 = a2 + 40;
    }
    else {
      int v7 = (unsigned __int8 *)*((void *)a2 + 5);
    }
    int v8 = *((unsigned __int16 *)a2 + 56);
    *(_DWORD *)uint64_t buf = 68290307;
    int v11 = 0;
    __int16 v12 = 2082;
    double v13 = "";
    __int16 v14 = 1026;
    int v15 = v4;
    __int16 v16 = 2050;
    uint64_t v17 = v5;
    __int16 v18 = 2081;
    __int16 v19 = v6;
    __int16 v20 = 2081;
    __int16 v21 = v7;
    __int16 v22 = 1026;
    int v23 = v8;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"iB: submit monitor session\", \"metric.valid\":%{public}d, \"metric.timestamp\":\"%{public}f\", \"metric.bundleId\":%{private, location:escape_only}s, \"onbehalfbundleid\":%{private, location:escape_only}s, \"totalMonitoredRegions\":%{public}d}", buf, 0x3Cu);
  }
  AnalyticsSendEventLazy();
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_10071DC14(uint64_t a1)
{
  CFStringRef v2 = @"totalMonitoredRegions";
  size_t v3 = +[NSNumber numberWithUnsignedShort:*(unsigned __int16 *)(*(void *)(a1 + 32) + 112)];
  return +[NSDictionary dictionaryWithObjects:&v3 forKeys:&v2 count:1];
}

NSDictionary *sub_10071DC9C(uint64_t a1)
{
  v9[0] = @"bundleId";
  uint64_t v2 = *(void *)(a1 + 32);
  size_t v3 = (void *)(v2 + 16);
  if (*(char *)(v2 + 39) < 0) {
    size_t v3 = (void *)*v3;
  }
  v10[0] = +[NSString stringWithUTF8String:v3];
  v9[1] = @"regionIdentifier";
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = (void *)(v4 + 88);
  if (*(char *)(v4 + 111) < 0) {
    uint64_t v5 = (void *)*v5;
  }
  v10[1] = +[NSString stringWithUTF8String:v5];
  int v9[2] = @"proximityUUID";
  uint64_t v6 = *(void *)(a1 + 32);
  int v7 = (void *)(v6 + 64);
  if (*(char *)(v6 + 87) < 0) {
    int v7 = (void *)*v7;
  }
  _DWORD v10[2] = +[NSString stringWithUTF8String:v7];
  unsigned __int8 v9[3] = @"totalMonitoredRegions";
  int v10[3] = +[NSNumber numberWithUnsignedShort:*(unsigned __int16 *)(*(void *)(a1 + 32) + 112)];
  return +[NSDictionary dictionaryWithObjects:v10 forKeys:v9 count:4];
}

uint64_t sub_10071DDB4(uint64_t a1, unsigned __int8 *a2)
{
  if (qword_102419530 != -1) {
    dispatch_once(&qword_102419530, &stru_1022C5FC0);
  }
  size_t v3 = qword_102419538;
  if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    uint64_t v5 = *((void *)a2 + 1);
    if ((a2[39] & 0x80u) == 0) {
      uint64_t v6 = a2 + 16;
    }
    else {
      uint64_t v6 = (unsigned __int8 *)*((void *)a2 + 2);
    }
    if ((a2[63] & 0x80u) == 0) {
      int v7 = a2 + 40;
    }
    else {
      int v7 = (unsigned __int8 *)*((void *)a2 + 5);
    }
    int v8 = a2[116];
    *(_DWORD *)uint64_t buf = 68290307;
    int v11 = 0;
    __int16 v12 = 2082;
    double v13 = "";
    __int16 v14 = 1026;
    int v15 = v4;
    __int16 v16 = 2050;
    uint64_t v17 = v5;
    __int16 v18 = 2081;
    __int16 v19 = v6;
    __int16 v20 = 2081;
    __int16 v21 = v7;
    __int16 v22 = 1026;
    int v23 = v8;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"iB: submit monitor session\", \"metric.valid\":%{public}d, \"metric.timestamp\":\"%{public}f\", \"metric.bundleId\":%{private, location:escape_only}s, \"onbehalfbundleid\":%{private, location:escape_only}s, \"foreground\":%{public}d}", buf, 0x3Cu);
  }
  AnalyticsSendEventLazy();
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_10071DFA0(uint64_t a1)
{
  v4[0] = @"appIsInForeground";
  uint64_t v2 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 116)];
  v4[1] = @"beaconState";
  v5[0] = v2;
  v5[1] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 124)];
  return +[NSDictionary dictionaryWithObjects:v5 forKeys:v4 count:2];
}

NSDictionary *sub_10071E04C(uint64_t a1)
{
  v9[0] = @"bundleId";
  uint64_t v2 = *(void *)(a1 + 32);
  size_t v3 = (void *)(v2 + 16);
  if (*(char *)(v2 + 39) < 0) {
    size_t v3 = (void *)*v3;
  }
  v10[0] = +[NSString stringWithUTF8String:v3];
  v9[1] = @"regionIdentifier";
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = (void *)(v4 + 88);
  if (*(char *)(v4 + 111) < 0) {
    uint64_t v5 = (void *)*v5;
  }
  v10[1] = +[NSString stringWithUTF8String:v5];
  int v9[2] = @"proximityUUID";
  uint64_t v6 = *(void *)(a1 + 32);
  int v7 = (void *)(v6 + 64);
  if (*(char *)(v6 + 87) < 0) {
    int v7 = (void *)*v7;
  }
  _DWORD v10[2] = +[NSString stringWithUTF8String:v7];
  unsigned __int8 v9[3] = @"beaconState";
  int v10[3] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 124)];
  return +[NSDictionary dictionaryWithObjects:v10 forKeys:v9 count:4];
}

uint64_t sub_10071E164(uint64_t a1, unsigned __int8 *a2)
{
  if (qword_102419530 != -1) {
    dispatch_once(&qword_102419530, &stru_1022C5FC0);
  }
  size_t v3 = qword_102419538;
  if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    uint64_t v5 = *((void *)a2 + 1);
    if ((a2[39] & 0x80u) == 0) {
      uint64_t v6 = a2 + 16;
    }
    else {
      uint64_t v6 = (unsigned __int8 *)*((void *)a2 + 2);
    }
    int v7 = a2[80];
    unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)a2 + 13) - *((void *)a2 + 12)) >> 3);
    int v9 = *((_DWORD *)a2 + 16);
    int v10 = (int)*((double *)a2 + 9);
    *(_DWORD *)uint64_t buf = 68290819;
    int v13 = 0;
    __int16 v14 = 2082;
    int v15 = "";
    __int16 v16 = 1026;
    int v17 = v4;
    __int16 v18 = 2050;
    uint64_t v19 = v5;
    __int16 v20 = 2081;
    __int16 v21 = v6;
    __int16 v22 = 1026;
    int v23 = v7;
    __int16 v24 = 2050;
    unint64_t v25 = v8;
    __int16 v26 = 1026;
    int v27 = v9;
    __int16 v28 = 1026;
    int v29 = v10;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"iB: submit ranging session\", \"metric.valid\":%{public}d, \"metric.timstamp\":\"%{public}f\", \"metric.bundleId\":%{private, location:escape_only}s, \"regions\":%{public}d, \"beacons\":%{public}lu, \"measurements\":%{public}d, \"duration\":%{public}d}", buf, 0x48u);
  }
  AnalyticsSendEventLazy();
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_10071E374(uint64_t a1)
{
  v3[0] = @"appIsInForeground";
  v4[0] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 81)];
  v3[1] = @"rangingMeasurements";
  v4[1] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 64)];
  uint64_t v3[2] = @"rangingBeacons";
  void v4[2] = +[NSNumber numberWithUnsignedLong:0xCCCCCCCCCCCCCCCDLL* ((uint64_t)(*(void *)(*(void *)(a1 + 32) + 104) - *(void *)(*(void *)(a1 + 32) + 96)) >> 3)];
  void v3[3] = @"rangingDuration";
  void v4[3] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 72)];
  void v3[4] = @"rangedRegions";
  void v4[4] = +[NSNumber numberWithUnsignedChar:*(unsigned __int8 *)(*(void *)(a1 + 32) + 80)];
  void v3[5] = @"proximityChanges";
  void v4[5] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 84)];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:6];
}

NSDictionary *sub_10071E4B8(uint64_t a1)
{
  v7[0] = @"bundleId";
  uint64_t v2 = *(void *)(a1 + 32);
  size_t v3 = (void *)(v2 + 16);
  if (*(char *)(v2 + 39) < 0) {
    size_t v3 = (void *)*v3;
  }
  v8[0] = +[NSString stringWithUTF8String:v3];
  v7[1] = @"proximityUUID";
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = (void *)(v4 + 40);
  if (*(char *)(v4 + 63) < 0) {
    uint64_t v5 = (void *)*v5;
  }
  v8[1] = +[NSString stringWithUTF8String:v5];
  uint64_t v7[2] = @"rangingDuration";
  v8[2] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 72)];
  v7[3] = @"rangedRegions";
  v8[3] = +[NSNumber numberWithUnsignedChar:*(unsigned __int8 *)(*(void *)(a1 + 32) + 80)];
  return +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:4];
}

uint64_t sub_10071E5C4(uint64_t a1, unsigned __int8 *a2)
{
  if (qword_102419530 != -1) {
    dispatch_once(&qword_102419530, &stru_1022C5FC0);
  }
  size_t v3 = qword_102419538;
  if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    uint64_t v5 = *((void *)a2 + 1);
    uint64_t v6 = a2 + 16;
    if ((a2[39] & 0x80u) != 0) {
      uint64_t v6 = (unsigned __int8 *)*((void *)a2 + 2);
    }
    int v7 = *((_DWORD *)a2 + 16);
    *(_DWORD *)uint64_t buf = 68290051;
    int v10 = 0;
    __int16 v11 = 2082;
    __int16 v12 = "";
    __int16 v13 = 1026;
    int v14 = v4;
    __int16 v15 = 2050;
    uint64_t v16 = v5;
    __int16 v17 = 2081;
    __int16 v18 = v6;
    __int16 v19 = 1026;
    int v20 = v7;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"iB: submit error event\", \"metric.valid\":%{public}d, \"metric.timstamp\":\"%{public}f\", \"metric.bundleId\":%{private, location:escape_only}s, \"errorType\":%{public}d}", buf, 0x32u);
  }
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_10071E744(uint64_t a1)
{
  CFStringRef v2 = @"ErrorType";
  size_t v3 = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 64)];
  return +[NSDictionary dictionaryWithObjects:&v3 forKeys:&v2 count:1];
}

uint64_t sub_10071E7CC(uint64_t a1, unsigned __int8 *a2)
{
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C5FE0);
  }
  size_t v3 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    uint64_t v5 = *((void *)a2 + 1);
    if ((a2[39] & 0x80u) == 0) {
      uint64_t v6 = a2 + 16;
    }
    else {
      uint64_t v6 = (unsigned __int8 *)*((void *)a2 + 2);
    }
    *(_DWORD *)uint64_t buf = 67109634;
    int v14 = v4;
    __int16 v15 = 2048;
    uint64_t v16 = v5;
    __int16 v17 = 2080;
    __int16 v18 = v6;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "#GpsAccessoryCA Submit Gps Accessory metric to CA,metric.valid,%d,metric.timestamp,%.3f,metric.bundleId,%s", buf, 0x1Cu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C5FE0);
    }
    __int16 v12 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLDaemonStats::submitMetrictoCA(const CLDaemonStats_Type::LocationAccessory &)", "%s\n", v12);
    if (v12 != (char *)buf) {
      free(v12);
    }
  }
  uint64_t result = AnalyticsSendEventLazy();
  unint64_t v8 = (unsigned __int8 *)*((void *)a2 + 204);
  if (v8 != a2 + 1640)
  {
    do
    {
      uint64_t result = AnalyticsSendEventLazy();
      int v9 = (unsigned __int8 *)*((void *)v8 + 1);
      if (v9)
      {
        do
        {
          int v10 = v9;
          int v9 = *(unsigned __int8 **)v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          int v10 = (unsigned __int8 *)*((void *)v8 + 2);
          BOOL v11 = *(void *)v10 == (void)v8;
          unint64_t v8 = v10;
        }
        while (!v11);
      }
      unint64_t v8 = v10;
    }
    while (v10 != a2 + 1640);
  }
  return result;
}

NSDictionary *sub_10071EB80(uint64_t a1)
{
  uint64_t v2 = a1 + 40;
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 32);
  v148[0] = @"AccessoryManufacturer";
  uint64_t v5 = (void *)(v3 + 40);
  if (*(char *)(v3 + 63) < 0) {
    uint64_t v5 = (void *)*v5;
  }
  v149[0] = +[NSString stringWithUTF8String:v5];
  v148[1] = @"AccessoryModel";
  uint64_t v6 = (void *)(*(void *)v2 + 88);
  if (*(char *)(*(void *)v2 + 111) < 0) {
    uint64_t v6 = (void *)*v6;
  }
  v149[1] = +[NSString stringWithUTF8String:v6];
  v148[2] = @"AccessoryName";
  int v7 = (void *)(*(void *)v2 + 64);
  if (*(char *)(*(void *)v2 + 87) < 0) {
    int v7 = (void *)*v7;
  }
  v149[2] = +[NSString stringWithUTF8String:v7];
  v148[3] = @"AccessoryFirmwareVersion";
  unint64_t v8 = (void *)(*(void *)v2 + 112);
  if (*(char *)(*(void *)v2 + 135) < 0) {
    unint64_t v8 = (void *)*v8;
  }
  v149[3] = +[NSString stringWithUTF8String:v8];
  v148[4] = @"AccessoryHardwareVersion";
  int v9 = (void *)(*(void *)v2 + 136);
  if (*(char *)(*(void *)v2 + 159) < 0) {
    int v9 = (void *)*v9;
  }
  v149[4] = +[NSString stringWithUTF8String:v9];
  v148[5] = @"BundleId";
  sub_100720634(*(void *)v2 + 16, (void *)(*(void *)v2 + 1456), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  v149[5] = +[NSString stringWithUTF8String:p_p];
  v148[6] = @"PPID";
  BOOL v11 = (void *)(*(void *)v2 + 160);
  if (*(char *)(*(void *)v2 + 183) < 0) {
    BOOL v11 = (void *)*v11;
  }
  v149[6] = +[NSString stringWithUTF8String:v11];
  v148[7] = @"IsOnDenyList";
  v149[7] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)v2 + 188)];
  v148[8] = @"IsCarPlaySessionWireless";
  v149[8] = +[NSNumber numberWithBool:*(_DWORD *)(*(void *)v2 + 208) != 0];
  v148[9] = @"IsDeviceCharging";
  v149[9] = +[NSNumber numberWithBool:*(_DWORD *)(*(void *)v2 + 336) != 0];
  v148[10] = @"IsAppleMapsRerouted";
  __int16 v12 = +[NSNumber numberWithBool:*(_DWORD *)(*(void *)v2 + 1484) != 0];
  uint64_t v13 = 0;
  v149[10] = v12;
  v148[11] = @"AccessoryType";
  memset(v147, 0, sizeof(v147));
  unsigned int v14 = *(_DWORD *)(v3 + 184);
  do
  {
    if ((v14 >> v13)) {
      *((_DWORD *)v147 + v13) = 1;
    }
    ++v13;
  }
  while (v13 != 6);
  if (HIDWORD(v147[0])) {
    BOOL v15 = LODWORD(v147[1]) == 0;
  }
  else {
    BOOL v15 = 1;
  }
  char v19 = !v15 && HIDWORD(v147[1]) == 0 && LODWORD(v147[2]) == 0 && HIDWORD(v147[2]) == 0;
  if (LODWORD(v147[0]))
  {
    if (v19)
    {
      uint64_t v20 = 1;
      goto LABEL_60;
    }
    if (!*(void *)((char *)v147 + 4) && __PAIR64__(HIDWORD(v147[1]), 0) == LODWORD(v147[2]) && !HIDWORD(v147[2]))
    {
      uint64_t v20 = 3;
      goto LABEL_60;
    }
  }
  else
  {
    if (v19)
    {
      uint64_t v20 = 2;
      goto LABEL_60;
    }
    if (HIDWORD(v147[0])
      && !LODWORD(v147[1])
      && __PAIR64__(HIDWORD(v147[1]), 0) == LODWORD(v147[2])
      && !HIDWORD(v147[2]))
    {
      uint64_t v20 = 4;
      goto LABEL_60;
    }
    if (!HIDWORD(v147[0]) && LODWORD(v147[1]) && !*(void *)((char *)&v147[1] + 4) && !HIDWORD(v147[2]))
    {
      uint64_t v20 = 5;
      goto LABEL_60;
    }
    if (!*(void *)((char *)v147 + 4) && !HIDWORD(v147[1]) && LODWORD(v147[2]) && !HIDWORD(v147[2]))
    {
      uint64_t v20 = 6;
      goto LABEL_60;
    }
  }
  uint64_t v20 = 0;
LABEL_60:
  v149[11] = +[NSNumber numberWithInt:v20];
  v148[12] = @"NumberOfLocationSession";
  v149[12] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 196)];
  v148[13] = @"AccessoryConnectedDuration";
  v149[13] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 192)];
  v148[14] = @"CarPlaySessionDuration";
  v149[14] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 204)];
  v148[15] = @"TotalLocationSessionDuration";
  v149[15] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 200)];
  v148[16] = @"DeviceLocationUnavailableEpochsCount";
  v149[16] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 1004)];
  v148[17] = @"DeadReckonedCount";
  v149[17] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 1008)];
  v148[18] = @"BadGPRMCCount";
  v149[18] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 1016)];
  v148[19] = @"AppleMapsRoutingEpochCount";
  v149[19] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 1480)];
  v148[20] = @"AppleMapsRerouteCount";
  v149[20] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 1484)];
  v148[21] = @"AppleMapsProceedToRouteCount";
  v149[21] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 1488)];
  v148[22] = @"NMEAScreeningEnabledDuration";
  v149[22] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 1520)];
  v148[23] = @"NMEAScreenedEpochCount";
  v149[23] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 1524)];
  v148[24] = @"NMEAScreenedRejectedEpochCount";
  v149[24] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 1528)];
  v148[25] = @"WirelessCarPlayDuration";
  v149[25] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 208)];
  v148[26] = @"NumberOfPublishedLocations";
  v149[26] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 216)];
  v148[27] = @"ShiftedLocationEpochCount";
  v149[27] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)v2 + 212)];
  v148[28] = @"LocationSessionPercentage";
  unsigned int v23 = *(_DWORD *)(*(void *)v2 + 192);
  if (v23)
  {
    LODWORD(v22) = *(_DWORD *)(*(void *)v2 + 200);
    LODWORD(v21) = llround((double)v22 * 100.0 / (double)v23);
  }
  else
  {
    uint64_t v21 = 0xFFFFFFFFLL;
  }
  v149[28] = +[NSNumber numberWithInt:v21];
  v148[29] = @"AppleMapsRoutingPercentage";
  unsigned int v26 = *(_DWORD *)(*(void *)v2 + 192);
  if (v26)
  {
    LODWORD(v25) = *(_DWORD *)(*(void *)v2 + 1480);
    LODWORD(v24) = llround((double)v25 * 100.0 / (double)v26);
  }
  else
  {
    uint64_t v24 = 0xFFFFFFFFLL;
  }
  v149[29] = +[NSNumber numberWithInt:v24];
  v148[30] = @"DeviceChargingPercentage";
  unsigned int v29 = *(_DWORD *)(*(void *)v2 + 192);
  if (v29)
  {
    LODWORD(v28) = *(_DWORD *)(*(void *)v2 + 336);
    LODWORD(v27) = llround((double)v28 * 100.0 / (double)v29);
  }
  else
  {
    uint64_t v27 = 0xFFFFFFFFLL;
  }
  v149[30] = +[NSNumber numberWithInt:v27];
  v148[31] = @"DeviceLocationAvailablePercentage";
  unsigned int v31 = *(_DWORD *)(*(void *)v2 + 200);
  if (v31) {
    LODWORD(v30) = llround((double)(v31 - *(_DWORD *)(*(void *)v2 + 1004)) * 100.0 / (double)v31);
  }
  else {
    uint64_t v30 = 0xFFFFFFFFLL;
  }
  v149[31] = +[NSNumber numberWithInt:v30];
  v148[32] = @"LocationPublishedPercentage";
  unsigned int v34 = *(_DWORD *)(*(void *)v2 + 200);
  if (v34)
  {
    LODWORD(v33) = *(_DWORD *)(*(void *)v2 + 216);
    LODWORD(v32) = llround((double)v33 * 100.0 / (double)v34);
  }
  else
  {
    uint64_t v32 = 0xFFFFFFFFLL;
  }
  v149[32] = +[NSNumber numberWithInt:v32];
  v148[33] = @"ShiftedLocationPercentage";
  unsigned int v37 = *(_DWORD *)(*(void *)v2 + 200);
  if (v37)
  {
    LODWORD(v36) = *(_DWORD *)(*(void *)v2 + 212);
    LODWORD(v35) = llround((double)v36 * 100.0 / (double)v37);
  }
  else
  {
    uint64_t v35 = 0xFFFFFFFFLL;
  }
  v149[33] = +[NSNumber numberWithInt:v35];
  v148[34] = @"BadGPRMCPercentage";
  unsigned int v40 = *(_DWORD *)(*(void *)v2 + 200);
  if (v40)
  {
    LODWORD(v39) = *(_DWORD *)(*(void *)v2 + 1016);
    LODWORD(v38) = llround((double)v39 * 100.0 / (double)v40);
  }
  else
  {
    uint64_t v38 = 0xFFFFFFFFLL;
  }
  v149[34] = +[NSNumber numberWithInt:v38];
  v148[35] = @"DeadReckonedPercentage";
  unsigned int v43 = *(_DWORD *)(*(void *)v2 + 200);
  if (v43)
  {
    LODWORD(v42) = *(_DWORD *)(*(void *)v2 + 1008);
    LODWORD(v41) = llround((double)v42 * 100.0 / (double)v43);
  }
  else
  {
    uint64_t v41 = 0xFFFFFFFFLL;
  }
  v149[35] = +[NSNumber numberWithInt:v41];
  v148[36] = @"NMEAScreenedPercentage";
  unsigned int v46 = *(_DWORD *)(*(void *)v2 + 200);
  if (v46)
  {
    LODWORD(v45) = *(_DWORD *)(*(void *)v2 + 1524);
    LODWORD(v44) = llround((double)v45 * 100.0 / (double)v46);
  }
  else
  {
    uint64_t v44 = 0xFFFFFFFFLL;
  }
  v149[36] = +[NSNumber numberWithInt:v44];
  v148[37] = @"NMEAScreenedRejectedPercentage";
  unsigned int v49 = *(_DWORD *)(*(void *)v2 + 200);
  if (v49)
  {
    LODWORD(v++*(_DWORD *)(result + 48) = *(_DWORD *)(*(void *)v2 + 1528);
    LODWORD(v47) = llround((double)v48 * 100.0 / (double)v49);
  }
  else
  {
    uint64_t v47 = 0xFFFFFFFFLL;
  }
  v149[37] = +[NSNumber numberWithInt:v47];
  v148[38] = @"AppleMapsReroutesPerHour";
  v149[38] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 48)];
  v148[39] = @"AppleMapsProceedToRoutesPerHour";
  v149[39] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 52)];
  v148[40] = @"AppleMapsReroutesOrPTRPerHour";
  v149[40] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 56)];
  v148[41] = @"TTFFAllAvg";
  if (*(_DWORD *)(*(void *)v2 + 240)) {
    double v50 = *(double *)(*(void *)v2 + 248);
  }
  else {
    double v50 = 0.0;
  }
  v149[41] = +[NSNumber numberWithDouble:v50];
  v148[42] = @"TTFFAllMax";
  v149[42] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 224)];
  v148[43] = @"TTFFAllMin";
  v149[43] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 232)];
  v148[44] = @"TTFFAllRMS";
  if (*(_DWORD *)(*(void *)v2 + 240)) {
    double v51 = sqrt(*(double *)(*(void *)v2 + 264));
  }
  else {
    double v51 = 0.0;
  }
  v149[44] = +[NSNumber numberWithDouble:v51];
  v148[45] = @"TTFFAllSTD";
  unsigned int v52 = *(_DWORD *)(*(void *)v2 + 240);
  double v53 = -1.0;
  if (v52 >= 2) {
    double v53 = sqrt(*(double *)(*(void *)v2 + 256) / (double)(v52 - 1));
  }
  v149[45] = +[NSNumber numberWithDouble:v53];
  v148[46] = @"TTFFNonDRAvg";
  if (*(_DWORD *)(*(void *)v2 + 288)) {
    double v54 = *(double *)(*(void *)v2 + 296);
  }
  else {
    double v54 = 0.0;
  }
  v149[46] = +[NSNumber numberWithDouble:v54];
  v148[47] = @"TTFFNonDRMax";
  v149[47] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 272)];
  v148[48] = @"TTFFNonDRMin";
  v149[48] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 280)];
  v148[49] = @"TTFFNonDRRMS";
  if (*(_DWORD *)(*(void *)v2 + 288)) {
    double v55 = sqrt(*(double *)(*(void *)v2 + 312));
  }
  else {
    double v55 = 0.0;
  }
  v149[49] = +[NSNumber numberWithDouble:v55];
  v148[50] = @"TTFFNonDRSTD";
  unsigned int v56 = *(_DWORD *)(*(void *)v2 + 288);
  double v57 = -1.0;
  if (v56 >= 2) {
    double v57 = sqrt(*(double *)(*(void *)v2 + 304) / (double)(v56 - 1));
  }
  v149[50] = +[NSNumber numberWithDouble:v57];
  v148[51] = @"HorzPosSolnDiffAvg";
  double v58 = 0.0;
  if (*(_DWORD *)(*(void *)v2 + 456) >= 0x5Bu) {
    double v58 = *(double *)(*(void *)v2 + 464);
  }
  v149[51] = +[NSNumber numberWithDouble:v58];
  v148[52] = @"HorzPosSolnDiffMax";
  v149[52] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 440)];
  v148[53] = @"HorzPosSolnDiffMin";
  v149[53] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 448)];
  v148[54] = @"HorzPosSolnDiffRMS";
  double v59 = 0.0;
  if (*(_DWORD *)(*(void *)v2 + 456) >= 0x5Bu) {
    double v59 = sqrt(*(double *)(*(void *)v2 + 480));
  }
  v149[54] = +[NSNumber numberWithDouble:v59];
  v148[55] = @"HorzPosSolnDiffSTD";
  unsigned int v60 = *(_DWORD *)(*(void *)v2 + 456);
  double v61 = -1.0;
  if (v60 >= 0x5B) {
    double v61 = sqrt(*(double *)(*(void *)v2 + 472) / (double)(v60 - 1));
  }
  v149[55] = +[NSNumber numberWithDouble:v61];
  v148[56] = @"HorzDRPosSolnDiffAvg";
  double v62 = 0.0;
  if (*(_DWORD *)(*(void *)v2 + 624) >= 0x5Bu) {
    double v62 = *(double *)(*(void *)v2 + 632);
  }
  v149[56] = +[NSNumber numberWithDouble:v62];
  v148[57] = @"HorzDRPosSolnDiffMax";
  v149[57] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 608)];
  v148[58] = @"HorzDRPosSolnDiffMin";
  v149[58] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 616)];
  v148[59] = @"HorzDRPosSolnDiffRMS";
  double v63 = 0.0;
  if (*(_DWORD *)(*(void *)v2 + 624) >= 0x5Bu) {
    double v63 = sqrt(*(double *)(*(void *)v2 + 648));
  }
  v149[59] = +[NSNumber numberWithDouble:v63];
  v148[60] = @"HorzDRPosSolnDiffSTD";
  unsigned int v64 = *(_DWORD *)(*(void *)v2 + 624);
  double v65 = -1.0;
  if (v64 >= 0x5B) {
    double v65 = sqrt(*(double *)(*(void *)v2 + 640) / (double)(v64 - 1));
  }
  v149[60] = +[NSNumber numberWithDouble:v65];
  v148[61] = @"AltitudeSolnDiffAvg";
  double v66 = 0.0;
  if (*(_DWORD *)(*(void *)v2 + 744) >= 0x5Bu) {
    double v66 = *(double *)(*(void *)v2 + 752);
  }
  v149[61] = +[NSNumber numberWithDouble:v66];
  v148[62] = @"AltitudeSolnDiffMax";
  v149[62] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 728)];
  v148[63] = @"AltitudeSolnDiffMin";
  v149[63] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 736)];
  v148[64] = @"AltitudeSolnDiffRMS";
  double v67 = 0.0;
  if (*(_DWORD *)(*(void *)v2 + 744) >= 0x5Bu) {
    double v67 = sqrt(*(double *)(*(void *)v2 + 768));
  }
  v149[64] = +[NSNumber numberWithDouble:v67];
  v148[65] = @"AltitudeSolnDiffSTD";
  unsigned int v68 = *(_DWORD *)(*(void *)v2 + 744);
  double v69 = -1.0;
  if (v68 >= 0x5B) {
    double v69 = sqrt(*(double *)(*(void *)v2 + 760) / (double)(v68 - 1));
  }
  v149[65] = +[NSNumber numberWithDouble:v69];
  v148[66] = @"CourseSolnDiffAvg";
  double v70 = 0.0;
  if (*(_DWORD *)(*(void *)v2 + 864) >= 0x5Bu) {
    double v70 = *(double *)(*(void *)v2 + 872);
  }
  v149[66] = +[NSNumber numberWithDouble:v70];
  v148[67] = @"CourseSolnDiffMax";
  v149[67] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 848)];
  v148[68] = @"CourseSolnDiffMin";
  v149[68] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 856)];
  v148[69] = @"CourseSolnDiffRMS";
  double v71 = 0.0;
  if (*(_DWORD *)(*(void *)v2 + 864) >= 0x5Bu) {
    double v71 = sqrt(*(double *)(*(void *)v2 + 888));
  }
  v149[69] = +[NSNumber numberWithDouble:v71];
  v148[70] = @"CourseSolnDiffSTD";
  unsigned int v72 = *(_DWORD *)(*(void *)v2 + 864);
  double v73 = -1.0;
  if (v72 >= 0x5B) {
    double v73 = sqrt(*(double *)(*(void *)v2 + 880) / (double)(v72 - 1));
  }
  v149[70] = +[NSNumber numberWithDouble:v73];
  v148[71] = @"SpeedSolnDiffAvg";
  double v74 = 0.0;
  if (*(_DWORD *)(*(void *)v2 + 968) >= 0x5Bu) {
    double v74 = *(double *)(*(void *)v2 + 976);
  }
  v149[71] = +[NSNumber numberWithDouble:v74];
  v148[72] = @"SpeedSolnDiffMax";
  v149[72] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 952)];
  v148[73] = @"SpeedSolnDiffMin";
  v149[73] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 960)];
  v148[74] = @"SpeedSolnDiffRMS";
  double v75 = 0.0;
  if (*(_DWORD *)(*(void *)v2 + 968) >= 0x5Bu) {
    double v75 = sqrt(*(double *)(*(void *)v2 + 992));
  }
  v149[74] = +[NSNumber numberWithDouble:v75];
  v148[75] = @"SpeedSolnDiffSTD";
  unsigned int v76 = *(_DWORD *)(*(void *)v2 + 968);
  double v77 = -1.0;
  if (v76 >= 0x5B) {
    double v77 = sqrt(*(double *)(*(void *)v2 + 984) / (double)(v76 - 1));
  }
  v149[75] = +[NSNumber numberWithDouble:v77];
  v148[76] = @"GPRMCLatencyAvg";
  double v78 = -1.0;
  if (*(_DWORD *)(*(void *)v2 + 1064) >= 0x5Bu) {
    double v78 = *(double *)(*(void *)v2 + 1072);
  }
  v149[76] = +[NSNumber numberWithDouble:v78];
  v148[77] = @"GPRMCLatencyMax";
  v149[77] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 1048)];
  v148[78] = @"GPRMCLatencyMin";
  v149[78] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 1056)];
  v148[79] = @"GPRMCLatencyRMS";
  double v79 = -1.0;
  if (*(_DWORD *)(*(void *)v2 + 1064) >= 0x5Bu) {
    double v79 = sqrt(*(double *)(*(void *)v2 + 1088));
  }
  v149[79] = +[NSNumber numberWithDouble:v79];
  v148[80] = @"GPRMCLatencySTD";
  unsigned int v80 = *(_DWORD *)(*(void *)v2 + 1064);
  double v81 = -1.0;
  if (v80 >= 0x5B) {
    double v81 = sqrt(*(double *)(*(void *)v2 + 1080) / (double)(v80 - 1));
  }
  v149[80] = +[NSNumber numberWithDouble:v81];
  v148[81] = @"GPRMCSpacingAvg";
  double v82 = -1.0;
  if (*(_DWORD *)(*(void *)v2 + 1112) >= 0x5Bu) {
    double v82 = *(double *)(*(void *)v2 + 1120);
  }
  v149[81] = +[NSNumber numberWithDouble:v82];
  v148[82] = @"GPRMCSpacingMax";
  v149[82] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 1096)];
  v148[83] = @"GPRMCSpacingMin";
  v149[83] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 1104)];
  v148[84] = @"GPRMCSpacingRMS";
  double v83 = -1.0;
  if (*(_DWORD *)(*(void *)v2 + 1112) >= 0x5Bu) {
    double v83 = sqrt(*(double *)(*(void *)v2 + 1136));
  }
  v149[84] = +[NSNumber numberWithDouble:v83];
  v148[85] = @"GPRMCSpacingSTD";
  unsigned int v84 = *(_DWORD *)(*(void *)v2 + 1112);
  double v85 = -1.0;
  if (v84 >= 0x5B) {
    double v85 = sqrt(*(double *)(*(void *)v2 + 1128) / (double)(v84 - 1));
  }
  v149[85] = +[NSNumber numberWithDouble:v85];
  v148[86] = @"GPGGALatencyAvg";
  double v86 = -1.0;
  if (*(_DWORD *)(*(void *)v2 + 1192) >= 0x5Bu) {
    double v86 = *(double *)(*(void *)v2 + 1200);
  }
  v149[86] = +[NSNumber numberWithDouble:v86];
  v148[87] = @"GPGGALatencyMax";
  v149[87] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 1176)];
  v148[88] = @"GPGGALatencyMin";
  v149[88] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 1184)];
  v148[89] = @"GPGGALatencyRMS";
  double v87 = -1.0;
  if (*(_DWORD *)(*(void *)v2 + 1192) >= 0x5Bu) {
    double v87 = sqrt(*(double *)(*(void *)v2 + 1216));
  }
  v149[89] = +[NSNumber numberWithDouble:v87];
  v148[90] = @"GPGGALatencySTD";
  unsigned int v88 = *(_DWORD *)(*(void *)v2 + 1192);
  double v89 = -1.0;
  if (v88 >= 0x5B) {
    double v89 = sqrt(*(double *)(*(void *)v2 + 1208) / (double)(v88 - 1));
  }
  v149[90] = +[NSNumber numberWithDouble:v89];
  v148[91] = @"GPGGASpacingAvg";
  double v90 = -1.0;
  if (*(_DWORD *)(*(void *)v2 + 1240) >= 0x5Bu) {
    double v90 = *(double *)(*(void *)v2 + 1248);
  }
  v149[91] = +[NSNumber numberWithDouble:v90];
  v148[92] = @"GPGGASpacingMax";
  v149[92] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 1224)];
  v148[93] = @"GPGGASpacingMin";
  v149[93] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 1232)];
  v148[94] = @"GPGGASpacingRMS";
  double v91 = -1.0;
  if (*(_DWORD *)(*(void *)v2 + 1240) >= 0x5Bu) {
    double v91 = sqrt(*(double *)(*(void *)v2 + 1264));
  }
  v149[94] = +[NSNumber numberWithDouble:v91];
  v148[95] = @"GPGGASpacingSTD";
  unsigned int v92 = *(_DWORD *)(*(void *)v2 + 1240);
  double v93 = -1.0;
  if (v92 >= 0x5B) {
    double v93 = sqrt(*(double *)(*(void *)v2 + 1256) / (double)(v92 - 1));
  }
  v149[95] = +[NSNumber numberWithDouble:v93];
  v148[96] = @"PASCDLatencyAvg";
  double v94 = -1.0;
  if (*(_DWORD *)(*(void *)v2 + 1320) >= 0x5Bu) {
    double v94 = *(double *)(*(void *)v2 + 1328);
  }
  v149[96] = +[NSNumber numberWithDouble:v94];
  v148[97] = @"PASCDLatencyMax";
  v149[97] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 1304)];
  v148[98] = @"PASCDLatencyMin";
  v149[98] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 1312)];
  v148[99] = @"PASCDLatencyRMS";
  double v95 = -1.0;
  if (*(_DWORD *)(*(void *)v2 + 1320) >= 0x5Bu) {
    double v95 = sqrt(*(double *)(*(void *)v2 + 1344));
  }
  v149[99] = +[NSNumber numberWithDouble:v95];
  v148[100] = @"PASCDLatencySTD";
  unsigned int v96 = *(_DWORD *)(*(void *)v2 + 1320);
  double v97 = -1.0;
  if (v96 >= 0x5B) {
    double v97 = sqrt(*(double *)(*(void *)v2 + 1336) / (double)(v96 - 1));
  }
  v149[100] = +[NSNumber numberWithDouble:v97];
  v148[101] = @"PASCDSpacingAvg";
  double v98 = -1.0;
  if (*(_DWORD *)(*(void *)v2 + 1368) >= 0x5Bu) {
    double v98 = *(double *)(*(void *)v2 + 1376);
  }
  v149[101] = +[NSNumber numberWithDouble:v98];
  v148[102] = @"PASCDSpacingMax";
  v149[102] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 1352)];
  v148[103] = @"PASCDSpacingMin";
  v149[103] = +[NSNumber numberWithDouble:*(double *)(*(void *)v2 + 1360)];
  v148[104] = @"PASCDSpacingRMS";
  double v99 = -1.0;
  if (*(_DWORD *)(*(void *)v2 + 1368) >= 0x5Bu) {
    double v99 = sqrt(*(double *)(*(void *)v2 + 1392));
  }
  v149[104] = +[NSNumber numberWithDouble:v99];
  v148[105] = @"PASCDSpacingSTD";
  unsigned int v100 = *(_DWORD *)(*(void *)v2 + 1368);
  double v101 = -1.0;
  if (v100 >= 0x5B) {
    double v101 = sqrt(*(double *)(*(void *)v2 + 1384) / (double)(v100 - 1));
  }
  v149[105] = +[NSNumber numberWithDouble:v101];
  v148[106] = @"ChargingTypeMode";
  LODWORD(v147[0]) = 0;
  v149[106] = +[NSNumber numberWithInt:sub_100720758(v4, (unsigned int *)v147, (void *)(*(void *)v2 + 344))];
  v148[107] = @"AppleMapsRoutingType";
  unsigned int v145 = 6;
  v149[107] = +[NSNumber numberWithInt:sub_100720758(v4, &v145, (void *)(*(void *)v2 + 1496))];
  v148[108] = @"NMEAScreeningLocationType";
  unsigned int v144 = 0;
  v149[108] = +[NSNumber numberWithInt:sub_100720758(v4, &v144, (void *)(*(void *)v2 + 1536))];
  v148[109] = @"PASCDRavenUsedSpeedMode";
  unsigned int v143 = 0;
  v149[109] = +[NSNumber numberWithInt:sub_100720758(v4, &v143, (void *)(*(void *)v2 + 1560))];
  v148[110] = @"PASCDRavenRejectedSpeedMode";
  unsigned int v142 = 0;
  v149[110] = +[NSNumber numberWithInt:sub_100720758(v4, &v142, (void *)(*(void *)v2 + 1584))];
  v148[111] = @"GPSUnc0To5Percentage";
  unsigned int v102 = sub_1007207C0(*(void *)v2 + 416, 1, 0);
  unsigned int v104 = *(_DWORD *)(*(void *)v2 + 504);
  if (v104) {
    LODWORD(v103) = llround((double)v102 * 100.0 / (double)v104);
  }
  else {
    uint64_t v103 = 0xFFFFFFFFLL;
  }
  v149[111] = +[NSNumber numberWithInt:v103];
  v148[112] = @"GPSUnc5To10Percentage";
  unsigned int v105 = sub_1007207C0(*(void *)v2 + 416, 2, 0);
  unsigned int v107 = *(_DWORD *)(*(void *)v2 + 504);
  if (v107) {
    LODWORD(v106) = llround((double)v105 * 100.0 / (double)v107);
  }
  else {
    uint64_t v106 = 0xFFFFFFFFLL;
  }
  v149[112] = +[NSNumber numberWithInt:v106];
  v148[113] = @"GPSUnc10To15Percentage";
  unsigned int v108 = sub_1007207C0(*(void *)v2 + 416, 3, 0);
  unsigned int v110 = *(_DWORD *)(*(void *)v2 + 504);
  if (v110) {
    LODWORD(v109) = llround((double)v108 * 100.0 / (double)v110);
  }
  else {
    uint64_t v109 = 0xFFFFFFFFLL;
  }
  v149[113] = +[NSNumber numberWithInt:v109];
  v148[114] = @"GPSUnc15To20Percentage";
  unsigned int v111 = sub_1007207C0(*(void *)v2 + 416, 4, 0);
  unsigned int v113 = *(_DWORD *)(*(void *)v2 + 504);
  if (v113) {
    LODWORD(v112) = llround((double)v111 * 100.0 / (double)v113);
  }
  else {
    uint64_t v112 = 0xFFFFFFFFLL;
  }
  v149[114] = +[NSNumber numberWithInt:v112];
  v148[115] = @"GPSUnc20To30Percentage";
  unsigned int v114 = sub_1007207C0(*(void *)v2 + 416, 5, 0);
  unsigned int v116 = *(_DWORD *)(*(void *)v2 + 504);
  if (v116) {
    LODWORD(v115) = llround((double)v114 * 100.0 / (double)v116);
  }
  else {
    uint64_t v115 = 0xFFFFFFFFLL;
  }
  v149[115] = +[NSNumber numberWithInt:v115];
  v148[116] = @"GPSUnc30To40Percentage";
  unsigned int v117 = sub_1007207C0(*(void *)v2 + 416, 6, 0);
  unsigned int v119 = *(_DWORD *)(*(void *)v2 + 504);
  if (v119) {
    LODWORD(v118) = llround((double)v117 * 100.0 / (double)v119);
  }
  else {
    uint64_t v118 = 0xFFFFFFFFLL;
  }
  v149[116] = +[NSNumber numberWithInt:v118];
  v148[117] = @"GPSUnc40To50Percentage";
  unsigned int v120 = sub_1007207C0(*(void *)v2 + 416, 7, 0);
  unsigned int v122 = *(_DWORD *)(*(void *)v2 + 504);
  if (v122) {
    LODWORD(v121) = llround((double)v120 * 100.0 / (double)v122);
  }
  else {
    uint64_t v121 = 0xFFFFFFFFLL;
  }
  v149[117] = +[NSNumber numberWithInt:v121];
  v148[118] = @"GPSUnc50To70Percentage";
  unsigned int v123 = sub_1007207C0(*(void *)v2 + 416, 8, 0);
  unsigned int v125 = *(_DWORD *)(*(void *)v2 + 504);
  if (v125) {
    LODWORD(v124) = llround((double)v123 * 100.0 / (double)v125);
  }
  else {
    uint64_t v124 = 0xFFFFFFFFLL;
  }
  v149[118] = +[NSNumber numberWithInt:v124];
  v148[119] = @"GPSUnc70To100Percentage";
  unsigned int v126 = sub_1007207C0(*(void *)v2 + 416, 9, 0);
  unsigned int v128 = *(_DWORD *)(*(void *)v2 + 504);
  if (v128) {
    LODWORD(v127) = llround((double)v126 * 100.0 / (double)v128);
  }
  else {
    uint64_t v127 = 0xFFFFFFFFLL;
  }
  v149[119] = +[NSNumber numberWithInt:v127];
  v148[120] = @"GPSUncOver100To200Percentage";
  unsigned int v129 = sub_1007207C0(*(void *)v2 + 416, 10, 0);
  unsigned int v131 = *(_DWORD *)(*(void *)v2 + 504);
  if (v131) {
    LODWORD(v130) = llround((double)v129 * 100.0 / (double)v131);
  }
  else {
    uint64_t v130 = 0xFFFFFFFFLL;
  }
  v149[120] = +[NSNumber numberWithInt:v130];
  v148[121] = @"GPSUncOver200To300Percentage";
  unsigned int v132 = sub_1007207C0(*(void *)v2 + 416, 11, 0);
  unsigned int v134 = *(_DWORD *)(*(void *)v2 + 504);
  if (v134) {
    LODWORD(v133) = llround((double)v132 * 100.0 / (double)v134);
  }
  else {
    uint64_t v133 = 0xFFFFFFFFLL;
  }
  v149[121] = +[NSNumber numberWithInt:v133];
  v148[122] = @"GPSUncOver300Percentage";
  unsigned int v135 = sub_1007207C0(*(void *)v2 + 416, 12, 0);
  unsigned int v137 = *(_DWORD *)(*(void *)v2 + 504);
  if (v137) {
    LODWORD(v136) = llround((double)v135 * 100.0 / (double)v137);
  }
  else {
    uint64_t v136 = 0xFFFFFFFFLL;
  }
  v149[122] = +[NSNumber numberWithInt:v136];
  v148[123] = @"GPSUncAverage";
  double v138 = 0.0;
  if (*(_DWORD *)(*(void *)v2 + 504) >= 0x5Bu) {
    double v138 = *(double *)(*(void *)v2 + 512);
  }
  v149[123] = +[NSNumber numberWithDouble:round(v138)];
  v148[124] = @"GPSUncRMS";
  double v139 = 0.0;
  if (*(_DWORD *)(*(void *)v2 + 504) >= 0x5Bu) {
    double v139 = sqrt(*(double *)(*(void *)v2 + 528));
  }
  v149[124] = +[NSNumber numberWithDouble:round(v139)];
  __int16 v140 = +[NSDictionary dictionaryWithObjects:v149 forKeys:v148 count:125];
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v140;
}

void sub_1007205FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
}

void sub_100720634(uint64_t a1@<X1>, void *a2@<X2>, std::string *a3@<X8>)
{
  int v4 = *(char *)(a1 + 23);
  if (a2[2])
  {
    if (v4 < 0)
    {
      sub_1000DC48C(a3, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
      a3->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
    }
    unint64_t v8 = (void *)*a2;
    uint64_t v6 = a2 + 1;
    int v7 = v8;
    if (v8 != v6)
    {
      unint64_t v9 = 0;
      do
      {
        if (v9 < *((unsigned int *)v7 + 14))
        {
          std::string::operator=(a3, (const std::string *)(v7 + 4));
          unint64_t v9 = *((unsigned int *)v7 + 14);
        }
        int v10 = (void *)v7[1];
        if (v10)
        {
          do
          {
            BOOL v11 = v10;
            int v10 = (void *)*v10;
          }
          while (v10);
        }
        else
        {
          do
          {
            BOOL v11 = (void *)v7[2];
            BOOL v12 = *v11 == (void)v7;
            int v7 = v11;
          }
          while (!v12);
        }
        int v7 = v11;
      }
      while (v11 != v6);
    }
  }
  else if (v4 < 0)
  {
    unint64_t v13 = *(void *)(a1 + 8);
    unsigned int v14 = *(void **)a1;
    sub_1000DC48C(a3, v14, v13);
  }
  else
  {
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a3->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
}

void sub_10072073C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100720758(uint64_t a1, unsigned int *a2, void *a3)
{
  uint64_t result = *a2;
  if (a3[2])
  {
    uint64_t v6 = (void *)*a3;
    int v4 = a3 + 1;
    uint64_t v5 = v6;
    if (v6 != v4)
    {
      unint64_t v7 = 0;
      do
      {
        unint64_t v8 = *((unsigned int *)v5 + 8);
        BOOL v9 = v7 >= v8;
        if (v7 <= v8) {
          unint64_t v7 = *((unsigned int *)v5 + 8);
        }
        if (v9) {
          uint64_t result = result;
        }
        else {
          uint64_t result = *((unsigned int *)v5 + 7);
        }
        int v10 = (void *)v5[1];
        if (v10)
        {
          do
          {
            BOOL v11 = v10;
            int v10 = (void *)*v10;
          }
          while (v10);
        }
        else
        {
          do
          {
            BOOL v11 = (void *)v5[2];
            BOOL v12 = *v11 == (void)v5;
            uint64_t v5 = v11;
          }
          while (!v12);
        }
        uint64_t v5 = v11;
      }
      while (v11 != v4);
    }
  }
  return result;
}

uint64_t sub_1007207C0(uint64_t a1, int a2, uint64_t a3)
{
  int v6 = a2;
  for (uint64_t i = *(uint64_t **)(a1 + 8); i; uint64_t i = (uint64_t *)*i)
  {
    int v4 = *((_DWORD *)i + 7);
    if (v4 <= a2)
    {
      if (v4 >= a2) {
        return *(unsigned int *)sub_100022F78(a1, &v6);
      }
      ++i;
    }
  }
  return a3;
}

NSDictionary *sub_100720818(uint64_t a1)
{
  v23[0] = @"UnsupportedMessage";
  uint64_t v2 = *(uint64_t **)(a1 + 40);
  if (*((char *)v2 + 23) < 0) {
    uint64_t v2 = (uint64_t *)*v2;
  }
  v24[0] = +[NSString stringWithUTF8String:v2];
  v23[1] = @"AccessoryManufacturer";
  uint64_t v3 = *(void *)(a1 + 48);
  int v4 = (void *)(v3 + 40);
  if (*(char *)(v3 + 63) < 0) {
    int v4 = (void *)*v4;
  }
  v24[1] = +[NSString stringWithUTF8String:v4];
  v23[2] = @"AccessoryModel";
  uint64_t v5 = *(void *)(a1 + 48);
  int v6 = (void *)(v5 + 88);
  if (*(char *)(v5 + 111) < 0) {
    int v6 = (void *)*v6;
  }
  v24[2] = +[NSString stringWithUTF8String:v6];
  v23[3] = @"AccessoryName";
  uint64_t v7 = *(void *)(a1 + 48);
  unint64_t v8 = (void *)(v7 + 64);
  if (*(char *)(v7 + 87) < 0) {
    unint64_t v8 = (void *)*v8;
  }
  v24[3] = +[NSString stringWithUTF8String:v8];
  _DWORD v23[4] = @"AccessoryFirmwareVersion";
  uint64_t v9 = *(void *)(a1 + 48);
  int v10 = (void *)(v9 + 112);
  if (*(char *)(v9 + 135) < 0) {
    int v10 = (void *)*v10;
  }
  v24[4] = +[NSString stringWithUTF8String:v10];
  v23[5] = @"AccessoryHardwareVersion";
  uint64_t v11 = *(void *)(a1 + 48);
  BOOL v12 = (void *)(v11 + 136);
  if (*(char *)(v11 + 159) < 0) {
    BOOL v12 = (void *)*v12;
  }
  v24[5] = +[NSString stringWithUTF8String:v12];
  v23[6] = @"BundleId";
  sub_100720634(*(void *)(a1 + 48) + 16, (void *)(*(void *)(a1 + 48) + 1456), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  v24[6] = +[NSString stringWithUTF8String:p_p];
  v23[7] = @"PPID";
  uint64_t v14 = *(void *)(a1 + 48);
  BOOL v15 = (void *)(v14 + 160);
  if (*(char *)(v14 + 183) < 0) {
    BOOL v15 = (void *)*v15;
  }
  v24[7] = +[NSString stringWithUTF8String:v15];
  v23[8] = @"IsOnDenyList";
  v24[8] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 48) + 188)];
  v23[9] = @"IsCarPlaySessionWireless";
  v24[9] = +[NSNumber numberWithBool:*(_DWORD *)(*(void *)(a1 + 48) + 208) != 0];
  _DWORD v23[10] = @"IsDeviceCharging";
  v24[10] = +[NSNumber numberWithBool:*(_DWORD *)(*(void *)(a1 + 48) + 336) != 0];
  v23[11] = @"DeviceChargingPercentage";
  uint64_t v18 = *(void *)(a1 + 48);
  unsigned int v19 = *(_DWORD *)(v18 + 192);
  if (v19)
  {
    LODWORD(v17) = *(_DWORD *)(v18 + 336);
    LODWORD(v16) = llround((double)v17 * 100.0 / (double)v19);
  }
  else
  {
    uint64_t v16 = 0xFFFFFFFFLL;
  }
  v24[11] = +[NSNumber numberWithInt:v16];
  v23[12] = @"IsAppleMapsRerouted";
  v24[12] = +[NSNumber numberWithBool:*(_DWORD *)(*(void *)(a1 + 48) + 1484) != 0];
  v23[13] = @"AppleMapsReroutesPerHour";
  v24[13] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 56)];
  void v23[14] = @"AppleMapsProceedToRoutesPerHour";
  v24[14] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 60)];
  v23[15] = @"AppleMapsReroutesOrPTRPerHour";
  v24[15] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 64)];
  uint64_t v20 = +[NSDictionary dictionaryWithObjects:v24 forKeys:v23 count:16];
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v20;
}

void sub_100720B64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

uint64_t sub_100720B88(uint64_t a1, int *a2)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022C6000);
  }
  uint64_t v3 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_INFO))
  {
    int v4 = *a2;
    int v5 = a2[1];
    int v6 = a2[2];
    int v7 = a2[3];
    int v8 = a2[4];
    int v9 = a2[5];
    int v10 = a2[6];
    int v11 = a2[7];
    *(_DWORD *)uint64_t buf = 67176449;
    int v15 = v4;
    __int16 v16 = 1025;
    int v17 = v5;
    __int16 v18 = 1025;
    int v19 = v6;
    __int16 v20 = 1025;
    int v21 = v7;
    __int16 v22 = 1025;
    int v23 = v8;
    __int16 v24 = 1025;
    int v25 = v9;
    __int16 v26 = 1025;
    int v27 = v10;
    __int16 v28 = 1025;
    int v29 = v11;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "#gnssca,AssistanceFileCountMetrics,Submit to CA,shortTermOrbitAssistanceDailyDownloadCount,%{private}d,longTermOrbitAssistanceDailyDownloadCount,%{private}d,rtiDailyDownloadCount,%{private}d,ravenGnssAssistanceDailyDownloadCount,%{private}d,shortTermOrbitAssistanceDailyDownloadLargeCount,%{private}d,longTermOrbitAssistanceDailyDownloadLargeCount,%{private}d,rtiDailyDownloadLargeCount,%{private}d,ravenGnssAssistanceDailyDownloadLargeCount,%{private}d", buf, 0x32u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022C6000);
    }
    unint64_t v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLDaemonStats::submitMetric(const CLDaemonStats_Type::AssistanceFileDownloadCount &)", "%s\n", v13);
    if (v13 != (char *)buf) {
      free(v13);
    }
  }
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_100720E28(uint64_t a1)
{
  v3[0] = @"shortTermOrbitAssistanceDailyDownloadCount";
  v4[0] = +[NSNumber numberWithUnsignedInt:**(unsigned int **)(a1 + 32)];
  v3[1] = @"longTermOrbitAssistanceDailyDownloadCount";
  v4[1] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 4)];
  uint64_t v3[2] = @"rtiDailyDownloadCount";
  void v4[2] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 8)];
  void v3[3] = @"ravenGnssAssistanceDailyDownloadCount";
  void v4[3] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 12)];
  void v3[4] = @"shortTermOrbitAssistanceDailyDownloadLargeCount";
  void v4[4] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 16)];
  void v3[5] = @"longTermOrbitAssistanceDailyDownloadLargeCount";
  void v4[5] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 20)];
  void v3[6] = @"rtiDailyDownloadLargeCount";
  void v4[6] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 24)];
  v3[7] = @"ravenGnssAssistanceDailyDownloadLargeCount";
  v4[7] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 28)];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:8];
}

uint64_t sub_100720F98(uint64_t a1, int *a2)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022C6000);
  }
  uint64_t v3 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_INFO))
  {
    int v4 = *a2;
    int v5 = a2[1];
    int v6 = a2[2];
    int v7 = a2[3];
    int v8 = a2[4];
    int v9 = a2[14];
    *(_DWORD *)uint64_t buf = 67175937;
    int v24 = v4;
    __int16 v25 = 1025;
    int v26 = v5;
    __int16 v27 = 1025;
    int v28 = v6;
    __int16 v29 = 1025;
    int v30 = v7;
    __int16 v31 = 1025;
    int v32 = v8;
    __int16 v33 = 1025;
    int v34 = v9;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "#gnssca,GnssPowerAnalyticMetrics,Submit to CA,totalDailyGnssUsageSeconds,%{private}d,totalDailyClientGnssUsageSeconds,%{private}d,totalDailyProactiveGnssUsageSeconds,%{private}d,totalDailyGnssDebounceSeconds,%{private}d,totalDailyExclusiveProactiveGnssSeconds,%{private}d,totalDailyGnssSecondsProactiveLocationNetBalance,%{private}d", buf, 0x26u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022C6000);
    }
    int v21 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLDaemonStats::submitMetric(const CLDaemonStats_Type::GnssPowerAnalyticsData &)", "%s\n", v21);
    if (v21 != (char *)buf) {
      free(v21);
    }
  }
  AnalyticsSendEventLazy();
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022C6000);
  }
  int v10 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_INFO))
  {
    int v11 = a2[5];
    int v12 = a2[6];
    int v13 = a2[7];
    int v14 = a2[8];
    int v15 = a2[9];
    int v16 = a2[10];
    int v17 = a2[11];
    int v18 = a2[12];
    int v19 = a2[13];
    *(_DWORD *)uint64_t buf = 67176705;
    int v24 = v11;
    __int16 v25 = 1025;
    int v26 = v12;
    __int16 v27 = 1025;
    int v28 = v13;
    __int16 v29 = 1025;
    int v30 = v14;
    __int16 v31 = 1025;
    int v32 = v15;
    __int16 v33 = 1025;
    int v34 = v16;
    __int16 v35 = 1025;
    int v36 = v17;
    __int16 v37 = 1025;
    int v38 = v18;
    __int16 v39 = 1025;
    int v40 = v19;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "#gnssca,GnssDailyPowerAnalyticsWithContext,Submit to CA,dailyClientGnssDisplayOnOutsideVisitSeconds,%{private}d,dailyDebouncePeriodDisplayOnOutsideVisitSeconds,%{private}d,dailyClientGnssDisplayOnInsideVisitSeconds,%{private}d,dailyDebouncePeriodDisplayOnInsideVisitSeconds,%{private}d,dailyClientGnssDisplayOffOutsideVisitSeconds,%{private}d,dailyDebouncePeriodDisplayOffOutsideVisitSeconds,%{private}d,dailyClientGnssDisplayOffInsideVisitSeconds,%{private}d,dailyDebouncePeriodDisplayOffInsideVisitSeconds,%{private}d,dailyGnssUsageWithShortOrWiFiAssociatedSessionsSeconds,%{private}d", buf, 0x38u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022C6000);
    }
    __int16 v22 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLDaemonStats::submitMetric(const CLDaemonStats_Type::GnssPowerAnalyticsData &)", "%s\n", v22);
    if (v22 != (char *)buf) {
      free(v22);
    }
  }
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_100721460(uint64_t a1)
{
  v3[0] = @"totalDailyGnssUsageSeconds";
  v4[0] = +[NSNumber numberWithUnsignedInt:**(unsigned int **)(a1 + 32)];
  v3[1] = @"totalDailyClientGnssUsageSeconds";
  v4[1] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 4)];
  uint64_t v3[2] = @"totalDailyProactiveGnssUsageSeconds";
  void v4[2] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 8)];
  void v3[3] = @"totalDailyGnssDebounceSeconds";
  void v4[3] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 12)];
  void v3[4] = @"totalDailyExclusiveProactiveGnssSeconds";
  void v4[4] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 16)];
  void v3[5] = @"totalDailyProactiveLocationMinusGnssSavings";
  void v4[5] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 56)];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:6];
}

NSDictionary *sub_100721590(uint64_t a1)
{
  v3[0] = @"dailyClientGnssDisplayOnOutsideVisitSeconds";
  v4[0] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 20)];
  v3[1] = @"dailyDebouncePeriodDisplayOnOutsideVisitSeconds";
  v4[1] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 24)];
  uint64_t v3[2] = @"dailyClientGnssDisplayOnInsideVisitSeconds";
  void v4[2] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 28)];
  void v3[3] = @"dailyDebouncePeriodDisplayOnInsideVisitSeconds";
  void v4[3] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 32)];
  void v3[4] = @"dailyClientGnssDisplayOffOutsideVisitSeconds";
  void v4[4] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 36)];
  void v3[5] = @"dailyDebouncePeriodDisplayOffOutsideVisitSeconds";
  void v4[5] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 40)];
  void v3[6] = @"dailyClientGnssDisplayOffInsideVisitSeconds";
  void v4[6] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 44)];
  v3[7] = @"dailyDebouncePeriodDisplayOffInsideVisitSeconds";
  v4[7] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 48)];
  void v3[8] = @"dailyGnssUsageWithShortOrWiFiAssociatedSessionsSeconds";
  void v4[8] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 52)];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:9];
}

uint64_t sub_100721720(uint64_t a1, int *a2, uint64_t a3)
{
  if (qword_1024193D0 != -1) {
    dispatch_once(&qword_1024193D0, &stru_1022C6000);
  }
  int v4 = qword_1024193D8;
  if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#gnssca Submit gnss session metric to CA", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022C6000);
    }
    LOWORD(v275[0]) = 0;
    double v219 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLDaemonStats::submitMetric(const CLDaemonStats_Type::LocationGnssSessionStatsForCA &, const CLDaemonStats_Type::LocationGnssSessionFiltersForCA &)", "%s\n", v219);
    if (v219 != (char *)buf) {
      free(v219);
    }
  }
  sub_1000C7F88(buf);
  LOBYTE(v275[0]) = 0;
  int v5 = sub_1000D2988(*(uint64_t *)buf, "EnableVerboseGnssAnalyticsSubmissionLogging", (BOOL *)v275);
  if (LOBYTE(v275[0])) {
    int v6 = v5;
  }
  else {
    int v6 = 0;
  }
  if (*(void *)v277) {
    sub_1000DB0A0(*(std::__shared_weak_count **)v277);
  }
  if (v6)
  {
    if (qword_1024193D0 != -1) {
      dispatch_once(&qword_1024193D0, &stru_1022C6000);
    }
    int v7 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v8 = *(char *)(a3 + 23) >= 0 ? a3 : *(void *)a3;
      int v9 = *(_DWORD *)(a3 + 24);
      int v10 = *(unsigned __int8 *)(a3 + 212);
      int v11 = *(unsigned __int8 *)(a3 + 213);
      int v12 = *(unsigned __int8 *)(a3 + 28);
      int v13 = *(unsigned __int8 *)(a3 + 214);
      int v14 = *(unsigned __int8 *)(a3 + 29);
      int v15 = *(unsigned __int8 *)(a3 + 30);
      int v16 = *(unsigned __int8 *)(a3 + 31);
      int v17 = *(unsigned __int8 *)(a3 + 32);
      *(_DWORD *)uint64_t buf = 68291587;
      *(_WORD *)long long v277 = 2082;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(void *)&v277[2] = "";
      __int16 v278 = 2081;
      *(void *)long long v279 = v8;
      *(_WORD *)&v279[8] = 1025;
      *(_DWORD *)long long v280 = v9;
      *(_WORD *)&v280[4] = 1025;
      *(_DWORD *)v281 = v10;
      *(_WORD *)&v281[4] = 1025;
      *(_DWORD *)int v282 = v11;
      *(_WORD *)&v282[4] = 1025;
      *(_DWORD *)v283 = v12;
      *(_WORD *)&v283[4] = 1025;
      *(_DWORD *)long long v284 = v13;
      *(_WORD *)&v284[4] = 1025;
      *(_DWORD *)long long v285 = v14;
      *(_WORD *)&v285[4] = 1025;
      *(_DWORD *)long long v286 = v15;
      *(_WORD *)&v286[4] = 1025;
      *(_DWORD *)long long v287 = v16;
      *(_WORD *)&v287[4] = 1025;
      *(_DWORD *)&v287[6] = v17;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gnssca LocationGnssSessionStatsForCA Submission\", \"bundleId\":%{private, location:escape_only}s, \"ratType\":%{private}d, \"isShortTermOrbitAssistanceFileAvailable\":%{private}d, \"isLongTermOrbitAssistanceFileAvailable\":%{private}d, \"isRtiFileAvailable\":%{private}d, \"isRavenGnssAssistanceFileAvailable\":%{private}d, \"isExtendedEphemerisFileInjected\":%{private}d, \"isTimeAssistanceProvided\":%{private}d, \"isDEMAssistanceProvided\":%{private}d, \"isCPIAssistanceProvided\":%{private}d}", buf, 0x52u);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022C6000);
      }
    }
    int v18 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
    {
      int v19 = *(_DWORD *)(a3 + 36);
      int v20 = *(_DWORD *)(a3 + 40);
      int v21 = *(_DWORD *)(a3 + 44);
      int v22 = *(_DWORD *)(a3 + 48);
      int v23 = *(_DWORD *)(a3 + 52);
      int v24 = *(_DWORD *)(a3 + 56);
      int v25 = *(_DWORD *)(a3 + 60);
      int v26 = *(_DWORD *)(a3 + 64);
      int v27 = *(_DWORD *)(a3 + 68);
      int v29 = *(_DWORD *)(a3 + 116);
      int v28 = *(_DWORD *)(a3 + 120);
      int v30 = *(_DWORD *)(a3 + 124);
      int v31 = *(_DWORD *)(a3 + 128);
      int v32 = *(_DWORD *)(a3 + 132);
      int v33 = *(_DWORD *)(a3 + 136);
      int v34 = *(_DWORD *)(a3 + 140);
      int v35 = *(_DWORD *)(a3 + 144);
      int v36 = *(_DWORD *)(a3 + 148);
      int v37 = *(_DWORD *)(a3 + 232);
      int v38 = *(_DWORD *)(a3 + 236);
      int v39 = *(_DWORD *)(a3 + 156);
      int v40 = *(_DWORD *)(a3 + 160);
      *(_DWORD *)uint64_t buf = 68294659;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)long long v277 = 2082;
      *(void *)&v277[2] = "";
      __int16 v278 = 1025;
      *(_DWORD *)long long v279 = v19;
      *(_WORD *)&v279[4] = 1025;
      *(_DWORD *)&v279[6] = v20;
      *(_WORD *)long long v280 = 1025;
      *(_DWORD *)&v280[2] = v21;
      *(_WORD *)v281 = 1025;
      *(_DWORD *)&v281[2] = v22;
      *(_WORD *)int v282 = 1025;
      *(_DWORD *)&v282[2] = v23;
      *(_WORD *)v283 = 1025;
      *(_DWORD *)&v283[2] = v24;
      *(_WORD *)long long v284 = 1025;
      *(_DWORD *)&v284[2] = v25;
      *(_WORD *)long long v285 = 1025;
      *(_DWORD *)&v285[2] = v26;
      *(_WORD *)long long v286 = 1025;
      *(_DWORD *)&v286[2] = v27;
      *(_WORD *)long long v287 = 1025;
      *(_DWORD *)&v287[2] = v29;
      *(_WORD *)&v287[6] = 1025;
      *(_DWORD *)&v287[8] = v28;
      *(_WORD *)&v287[12] = 1025;
      *(_DWORD *)&v287[14] = v30;
      *(_WORD *)long long v288 = 1025;
      *(_DWORD *)&v288[2] = v31;
      *(_WORD *)&v288[6] = 1025;
      *(_DWORD *)&v288[8] = v32;
      *(_WORD *)&v288[12] = 1025;
      *(_DWORD *)&v288[14] = v33;
      *(_WORD *)&v288[18] = 1025;
      *(_DWORD *)&v288[20] = v34;
      *(_WORD *)&v288[24] = 1025;
      *(_DWORD *)&v288[26] = v35;
      *(_WORD *)&v288[30] = 1025;
      *(_DWORD *)long long v289 = v36;
      *(_WORD *)&v289[4] = 1025;
      *(_DWORD *)int v290 = v39;
      *(_WORD *)&v290[4] = 1025;
      *(_DWORD *)std::string::size_type v291 = v37;
      *(_WORD *)&v291[4] = 1025;
      *(_DWORD *)std::string v292 = v38;
      *(_WORD *)&v292[4] = 1025;
      *(_DWORD *)double v293 = v40;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gnssca LocationGnssSessionStatsForCA Submission\", \"gpsL1Cn0Avg\":%{private}d, \"qzssL1Cn0Avg\":%{private}d, \"galileoL1Cn0Avg\":%{private}d, \"beidouL1Cn0Avg\":%{private}d, \"glonassL1Cn0Avg\":%{private}d, \"gpsL5Cn0Avg\":%{private}d, \"qzssL5Cn0Avg\":%{private}d, \"galileoL5Cn0Avg\":%{private}d, \"beidouL5Cn0Avg\":%{private}d, \"gpsL1SignalCountAvg\":%{private}d, \"qzssL1SignalCountAvg\":%{private}d, \"galileoL1SignalCountAvg\":%{private}d, \"beidouL1SignalCountAvg\":%{private}d, \"glonassL1SignalCountAvg\":%{private}d, \"gpsL5SignalCountAvg\":%{private}d, \"qzssL5SignalCountAvg\":%{private}d, \"galileoL5SignalCountAvg\":%{private}d, \"beidouL5SignalCountAvg\":%{private}d, \"signalEnvironmentMode\":%{private}d, \"powerMeasurementMode\":%{private}d, \"powerStateMode\":%{private}d, \"horizontalUncertaintyAvg\":%{private}d}", buf, 0x96u);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022C6000);
      }
    }
    uint64_t v41 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
    {
      int v42 = *(_DWORD *)(a3 + 164);
      int v43 = *(_DWORD *)(a3 + 168);
      int v44 = *(_DWORD *)(a3 + 172);
      int v45 = *(_DWORD *)(a3 + 176);
      int v46 = *(_DWORD *)(a3 + 180);
      int v47 = *(unsigned __int8 *)(a3 + 184);
      int v48 = *(unsigned __int8 *)(a3 + 185);
      int v49 = *(unsigned __int8 *)(a3 + 186);
      int v50 = *(_DWORD *)(a3 + 188);
      int v51 = *(_DWORD *)(a3 + 192);
      int v52 = *(unsigned __int8 *)(a3 + 196);
      int v53 = *(_DWORD *)(a3 + 200);
      int v54 = *(_DWORD *)(a3 + 204);
      int v55 = *(_DWORD *)(a3 + 208);
      int v56 = *(_DWORD *)(a3 + 216);
      int v57 = *(_DWORD *)(a3 + 220);
      int v58 = *(_DWORD *)(a3 + 224);
      int v59 = *(unsigned __int8 *)(a3 + 228);
      *(_DWORD *)uint64_t buf = 68293635;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)long long v277 = 2082;
      *(void *)&v277[2] = "";
      __int16 v278 = 1025;
      *(_DWORD *)long long v279 = v42;
      *(_WORD *)&v279[4] = 1025;
      *(_DWORD *)&v279[6] = v43;
      *(_WORD *)long long v280 = 1025;
      *(_DWORD *)&v280[2] = v44;
      *(_WORD *)v281 = 1025;
      *(_DWORD *)&v281[2] = v45;
      *(_WORD *)int v282 = 1025;
      *(_DWORD *)&v282[2] = v46;
      *(_WORD *)v283 = 1025;
      *(_DWORD *)&v283[2] = v47;
      *(_WORD *)long long v284 = 1025;
      *(_DWORD *)&v284[2] = v48;
      *(_WORD *)long long v285 = 1025;
      *(_DWORD *)&v285[2] = v49;
      *(_WORD *)long long v286 = 1025;
      *(_DWORD *)&v286[2] = v50;
      *(_WORD *)long long v287 = 1025;
      *(_DWORD *)&v287[2] = v51;
      *(_WORD *)&v287[6] = 1025;
      *(_DWORD *)&v287[8] = v52;
      *(_WORD *)&v287[12] = 1025;
      *(_DWORD *)&v287[14] = v53;
      *(_WORD *)long long v288 = 1025;
      *(_DWORD *)&v288[2] = v54;
      *(_WORD *)&v288[6] = 1025;
      *(_DWORD *)&v288[8] = v55;
      *(_WORD *)&v288[12] = 1025;
      *(_DWORD *)&v288[14] = v56;
      *(_WORD *)&v288[18] = 1025;
      *(_DWORD *)&v288[20] = v57;
      *(_WORD *)&v288[24] = 1025;
      *(_DWORD *)&v288[26] = v58;
      *(_WORD *)&v288[30] = 1025;
      *(_DWORD *)long long v289 = v59;
      _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gnssca LocationGnssSessionStatsForCA Submission\", \"mountStateMode\":%{private}d, \"motionActivityMode\":%{private}d, \"movingStateMode\":%{private}d, \"sessionDuration\":%{private}d, \"deviceOrientationMode\":%{private}d, \"isDisplayOn\":%{private}d, \"isReachable\":%{private}d, \"isBatterySaverModeOn\":%{private}d, \"chargerTypeHistMode\":%{private}d, \"thermalLevelAvg\":%{private}d, \"isAccessoryYieldingLocations\":%{private}d, \"l5OnOffStateMode\":%{private}d, \"positionContextStateMode\":%{private}d, \"xoCalibrationState\":%{private}d, \"sessionStartPositionAssistHorzReliability\":%{private}d, \"sessionStartPositionAssistHorzAcc\":%{private}d, \"sessionStartPositionAssistType\":%{private}d, \"wasWiFiPositioningAvailable\":%{private}d}", buf, 0x7Eu);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022C6000);
      }
    }
    unsigned int v60 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
    {
      int v61 = *((unsigned __int8 *)a2 + 384);
      int v62 = *((unsigned __int8 *)a2 + 385);
      int v63 = *((unsigned __int8 *)a2 + 386);
      int v64 = *((unsigned __int8 *)a2 + 387);
      int v65 = *((unsigned __int8 *)a2 + 388);
      int v66 = *((unsigned __int8 *)a2 + 389);
      int v67 = *((unsigned __int8 *)a2 + 390);
      int v68 = *((unsigned __int8 *)a2 + 391);
      int v69 = *((unsigned __int8 *)a2 + 392);
      int v70 = *((unsigned __int8 *)a2 + 393);
      int v71 = *((unsigned __int8 *)a2 + 394);
      *(_DWORD *)uint64_t buf = 68291843;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)long long v277 = 2082;
      *(void *)&v277[2] = "";
      __int16 v278 = 1025;
      *(_DWORD *)long long v279 = v61;
      *(_WORD *)&v279[4] = 1025;
      *(_DWORD *)&v279[6] = v62;
      *(_WORD *)long long v280 = 1025;
      *(_DWORD *)&v280[2] = v63;
      *(_WORD *)v281 = 1025;
      *(_DWORD *)&v281[2] = v64;
      *(_WORD *)int v282 = 1025;
      *(_DWORD *)&v282[2] = v65;
      *(_WORD *)v283 = 1025;
      *(_DWORD *)&v283[2] = v66;
      *(_WORD *)long long v284 = 1025;
      *(_DWORD *)&v284[2] = v67;
      *(_WORD *)long long v285 = 1025;
      *(_DWORD *)&v285[2] = v68;
      *(_WORD *)long long v286 = 1025;
      *(_DWORD *)&v286[2] = v69;
      *(_WORD *)long long v287 = 1025;
      *(_DWORD *)&v287[2] = v70;
      *(_WORD *)&v287[6] = 1025;
      *(_DWORD *)&v287[8] = v71;
      _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gnssca LocationGnssSessionStatsForCA Submission\", \"isTimePreceedsBuildTime\":%{private}d, \"isTimePreceedsExtendedEphemerisTime\":%{private}d, \"isTimeJumpForward100Seconds\":%{private}d, \"isTimeJumpBackward100Seconds\":%{private}d, \"isLnavAntiSpoofBitZeroOnMultipleSvs\":%{private}d, \"isOtaLeapSecondInconsistentWithExtendedEphemeris\":%{private}d, \"isExcessiveSignalStrength\":%{private}d, \"isHigherOrderOtaEphemerisAllZeroOnMultipleSvs\":%{private}d, \"isOtaUtcModelInconsistentWithExtendedEphemeris\":%{private}d, \"isOtaParameterOutOfBoundsOnMultipleSvs\":%{private}d, \"isSessionSpoofed\":%{private}d}", buf, 0x54u);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022C6000);
      }
    }
    unsigned int v72 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
    {
      int v73 = *(_DWORD *)(a3 + 76);
      int v74 = *(_DWORD *)(a3 + 80);
      int v75 = *(_DWORD *)(a3 + 84);
      int v76 = *(_DWORD *)(a3 + 88);
      int v77 = *(_DWORD *)(a3 + 92);
      int v78 = *(_DWORD *)(a3 + 96);
      int v79 = *(_DWORD *)(a3 + 100);
      int v80 = *(_DWORD *)(a3 + 104);
      int v81 = *(_DWORD *)(a3 + 108);
      *(_DWORD *)uint64_t buf = 68291331;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)long long v277 = 2082;
      *(void *)&v277[2] = "";
      __int16 v278 = 1025;
      *(_DWORD *)long long v279 = v73;
      *(_WORD *)&v279[4] = 1025;
      *(_DWORD *)&v279[6] = v74;
      *(_WORD *)long long v280 = 1025;
      *(_DWORD *)&v280[2] = v75;
      *(_WORD *)v281 = 1025;
      *(_DWORD *)&v281[2] = v76;
      *(_WORD *)int v282 = 1025;
      *(_DWORD *)&v282[2] = v77;
      *(_WORD *)v283 = 1025;
      *(_DWORD *)&v283[2] = v78;
      *(_WORD *)long long v284 = 1025;
      *(_DWORD *)&v284[2] = v79;
      *(_WORD *)long long v285 = 1025;
      *(_DWORD *)&v285[2] = v80;
      *(_WORD *)long long v286 = 1025;
      *(_DWORD *)&v286[2] = v81;
      _os_log_impl((void *)&_mh_execute_header, v72, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gnssca LocationGnssSessionStatsForCA Submission\", \"gpsL1Cn0AvgFineRes\":%{private}d, \"qzssL1Cn0AvgFineRes\":%{private}d, \"galileoL1Cn0AvgFineRes\":%{private}d, \"beidouL1Cn0AvgFineRes\":%{private}d, \"glonassL1Cn0AvgFineRes\":%{private}d, \"gpsL5Cn0AvgFineRes\":%{private}d, \"qzssL5Cn0AvgFineRes\":%{private}d, \"galileoL5Cn0AvgFineRes\":%{private}d, \"beidouL5Cn0AvgFineRes\":%{private}d}", buf, 0x48u);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022C6000);
      }
    }
    double v82 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
    {
      int v84 = *a2;
      int v83 = a2[1];
      int v85 = a2[2];
      int v86 = a2[3];
      int v87 = a2[4];
      int v88 = a2[5];
      int v89 = a2[6];
      int v90 = a2[7];
      int v91 = a2[8];
      uint64_t v92 = *((void *)a2 + 5);
      int v93 = a2[12];
      uint64_t v94 = *((void *)a2 + 7);
      int v95 = a2[16];
      int v96 = a2[17];
      int v97 = a2[18];
      int v98 = a2[19];
      int v99 = a2[20];
      int v100 = a2[21];
      int v101 = a2[22];
      int v102 = a2[23];
      int v103 = a2[24];
      int v104 = a2[25];
      *(_DWORD *)uint64_t buf = 68294659;
      *(_WORD *)long long v277 = 2082;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(void *)&v277[2] = "";
      __int16 v278 = 1025;
      *(_DWORD *)long long v279 = v83;
      *(_WORD *)&v279[4] = 1025;
      *(_DWORD *)&v279[6] = v85;
      *(_WORD *)long long v280 = 1025;
      *(_DWORD *)&v280[2] = v84;
      *(_WORD *)v281 = 1025;
      *(_DWORD *)&v281[2] = v86;
      *(_WORD *)int v282 = 1025;
      *(_DWORD *)&v282[2] = v87;
      *(_WORD *)v283 = 1025;
      *(_DWORD *)&v283[2] = v88;
      *(_WORD *)long long v284 = 1025;
      *(_DWORD *)&v284[2] = v89;
      *(_WORD *)long long v285 = 1025;
      *(_DWORD *)&v285[2] = v90;
      *(_WORD *)long long v286 = 1025;
      *(_DWORD *)&v286[2] = v91;
      *(_WORD *)long long v287 = 2049;
      *(void *)&v287[2] = v92;
      *(_WORD *)&v287[10] = 1025;
      *(_DWORD *)&v287[12] = v93;
      *(_WORD *)&v287[16] = 2049;
      *(void *)long long v288 = v94;
      *(_WORD *)&v288[8] = 1025;
      *(_DWORD *)&v288[10] = v95;
      *(_WORD *)&v288[14] = 1025;
      *(_DWORD *)&v288[16] = v96;
      *(_WORD *)&v288[20] = 1025;
      *(_DWORD *)&v288[22] = v97;
      *(_WORD *)&v288[26] = 1025;
      *(_DWORD *)&v288[28] = v98;
      *(_WORD *)long long v289 = 1025;
      *(_DWORD *)&v289[2] = v99;
      *(_WORD *)int v290 = 1025;
      *(_DWORD *)&v290[2] = v100;
      *(_WORD *)std::string::size_type v291 = 1025;
      *(_DWORD *)&v291[2] = v101;
      *(_WORD *)std::string v292 = 1025;
      *(_DWORD *)&v292[2] = v102;
      *(_WORD *)double v293 = 1025;
      *(_DWORD *)&v293[2] = v103;
      __int16 v294 = 1025;
      int v295 = v104;
      _os_log_impl((void *)&_mh_execute_header, v82, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gnssca LocationGnssSessionStatsForCA Submission\", \"shortTermOrbitAssistanceFileAgeSeconds\":%{private}d, \"longTermOrbitAssistanceFileAgeSeconds\":%{private}d, \"rtiFileAgeSeconds\":%{private}d, \"ravenGnssAssistanceFileAgeSeconds\":%{private}d, \"pctYield\":%{private}d, \"pctYieldPostFirstFix\":%{private}d, \"yieldCount\":%{private}d, \"ttff\":%{private}d, \"epochCount\":%{private}d, \"cellularUplinkTxBandwidth\":\"%{private}f\", \"cellularBand\":%{private}d, \"cellularUplinkTxFrequency\":\"%{private}f\", \"cellularRSRP\":%{private}d, \"cellularSNR\":%{private}d, \"cellularBandEpochCount\":%{private}d, \"mmPAssisProvPct\":%{private}d, \"demAssisProvPct\":%{private}d, \"taAssisProvPct\":%{private}d, \"timeAssisProvPct\":%{private}d, \"cpiPositionAssisProvPct\":%{private}d, \"cpiTlyCpldPosAssisProvPct\":%{private}d, \"rtiProvPct\":%{private}d}", buf, 0x9Eu);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022C6000);
      }
    }
    unsigned int v105 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
    {
      int v106 = a2[26];
      int v107 = a2[27];
      int v108 = a2[28];
      int v109 = a2[29];
      int v110 = a2[30];
      int v111 = a2[31];
      int v112 = a2[32];
      int v113 = a2[33];
      int v114 = a2[34];
      *(_DWORD *)uint64_t buf = 68291331;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)long long v277 = 2082;
      *(void *)&v277[2] = "";
      __int16 v278 = 1025;
      *(_DWORD *)long long v279 = v106;
      *(_WORD *)&v279[4] = 1025;
      *(_DWORD *)&v279[6] = v107;
      *(_WORD *)long long v280 = 1025;
      *(_DWORD *)&v280[2] = v108;
      *(_WORD *)v281 = 1025;
      *(_DWORD *)&v281[2] = v109;
      *(_WORD *)int v282 = 1025;
      *(_DWORD *)&v282[2] = v110;
      *(_WORD *)v283 = 1025;
      *(_DWORD *)&v283[2] = v111;
      *(_WORD *)long long v284 = 1025;
      *(_DWORD *)&v284[2] = v112;
      *(_WORD *)long long v285 = 1025;
      *(_DWORD *)&v285[2] = v113;
      *(_WORD *)long long v286 = 1025;
      *(_DWORD *)&v286[2] = v114;
      _os_log_impl((void *)&_mh_execute_header, v105, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gnssca LocationGnssSessionStatsForCA Submission\", \"accelDataProvPct\":%{private}d, \"gyroDataProvPct\":%{private}d, \"pressureDataProvPct\":%{private}d, \"pedSpeedDataProvPct\":%{private}d, \"pedSpeedConDataProvPct\":%{private}d, \"motionDataProvPct\":%{private}d, \"ephemerisProvPct\":%{private}d, \"mountStateProvPct\":%{private}d, \"signalEnvirDataProvPct\":%{private}d}", buf, 0x48u);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022C6000);
      }
    }
    uint64_t v115 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
    {
      int v116 = a2[35];
      int v117 = a2[36];
      int v118 = a2[37];
      int v119 = a2[38];
      int v120 = a2[39];
      int v121 = a2[40];
      int v122 = a2[41];
      int v123 = a2[42];
      int v124 = a2[43];
      int v125 = a2[44];
      int v126 = a2[45];
      int v127 = a2[46];
      int v128 = a2[47];
      int v129 = a2[48];
      int v130 = a2[49];
      *(_DWORD *)uint64_t buf = 68292867;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)long long v277 = 2082;
      *(void *)&v277[2] = "";
      __int16 v278 = 1025;
      *(_DWORD *)long long v279 = v116;
      *(_WORD *)&v279[4] = 1025;
      *(_DWORD *)&v279[6] = v117;
      *(_WORD *)long long v280 = 1025;
      *(_DWORD *)&v280[2] = v118;
      *(_WORD *)v281 = 1025;
      *(_DWORD *)&v281[2] = v119;
      *(_WORD *)int v282 = 1025;
      *(_DWORD *)&v282[2] = v120;
      *(_WORD *)v283 = 1025;
      *(_DWORD *)&v283[2] = v121;
      *(_WORD *)long long v284 = 1025;
      *(_DWORD *)&v284[2] = v122;
      *(_WORD *)long long v285 = 1025;
      *(_DWORD *)&v285[2] = v123;
      *(_WORD *)long long v286 = 1025;
      *(_DWORD *)&v286[2] = v124;
      *(_WORD *)long long v287 = 1025;
      *(_DWORD *)&v287[2] = v125;
      *(_WORD *)&v287[6] = 1025;
      *(_DWORD *)&v287[8] = v126;
      *(_WORD *)&v287[12] = 1025;
      *(_DWORD *)&v287[14] = v127;
      *(_WORD *)long long v288 = 1025;
      *(_DWORD *)&v288[2] = v128;
      *(_WORD *)&v288[6] = 1025;
      *(_DWORD *)&v288[8] = v129;
      *(_WORD *)&v288[12] = 1025;
      *(_DWORD *)&v288[14] = v130;
      _os_log_impl((void *)&_mh_execute_header, v115, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gnssca LocationGnssSessionStatsForCA Submission\", \"motionActivContextProvPct\":%{private}d, \"mmPAssisUsedPct\":%{private}d, \"demAssisUsedPct\":%{private}d, \"taAssisUsedPct\":%{private}d, \"timeAssisUsedPct\":%{private}d, \"cpiPositionAssisUsedPct\":%{private}d, \"cpiTlyCpldPosAssisUsedPct\":%{private}d, \"rtiUsedPct\":%{private}d, \"accelDataUsedPct\":%{private}d, \"gyroDataUsedPct\":%{private}d, \"pressureDataUsedPct\":%{private}d, \"pedSpeedDataUsedPct\":%{private}d, \"pedSpeedConDataUsedPct\":%{private}d, \"motionDataUsedPct\":%{private}d, \"ephemerisUsedPct\":%{private}d}", buf, 0x6Cu);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022C6000);
      }
    }
    unsigned int v131 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
    {
      int v132 = a2[50];
      int v133 = a2[51];
      int v134 = a2[52];
      int v135 = a2[53];
      int v136 = a2[54];
      int v137 = a2[55];
      int v138 = a2[56];
      int v139 = a2[57];
      int v140 = a2[58];
      int v141 = a2[59];
      uint64_t v142 = *((void *)a2 + 30);
      int v143 = a2[62];
      int v144 = a2[63];
      int v145 = a2[64];
      int v146 = a2[65];
      uint64_t v147 = *((void *)a2 + 47);
      *(_DWORD *)uint64_t buf = 68293123;
      *(_WORD *)long long v277 = 2082;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(void *)&v277[2] = "";
      __int16 v278 = 1025;
      *(_DWORD *)long long v279 = v132;
      *(_WORD *)&v279[4] = 1025;
      *(_DWORD *)&v279[6] = v133;
      *(_WORD *)long long v280 = 1025;
      *(_DWORD *)&v280[2] = v134;
      *(_WORD *)v281 = 1025;
      *(_DWORD *)&v281[2] = v135;
      *(_WORD *)int v282 = 1025;
      *(_DWORD *)&v282[2] = v136;
      *(_WORD *)v283 = 1025;
      *(_DWORD *)&v283[2] = v137;
      *(_WORD *)long long v284 = 1025;
      *(_DWORD *)&v284[2] = v138;
      *(_WORD *)long long v285 = 1025;
      *(_DWORD *)&v285[2] = v139;
      *(_WORD *)long long v286 = 1025;
      *(_DWORD *)&v286[2] = v140;
      *(_WORD *)long long v287 = 1025;
      *(_DWORD *)&v287[2] = v141;
      *(_WORD *)&v287[6] = 2049;
      *(void *)&v287[8] = v142;
      *(_WORD *)&v287[16] = 1025;
      *(_DWORD *)long long v288 = v143;
      *(_WORD *)&v288[4] = 1025;
      *(_DWORD *)&v288[6] = v144;
      *(_WORD *)&v288[10] = 1025;
      *(_DWORD *)&v288[12] = v145;
      *(_WORD *)&v288[16] = 1025;
      *(_DWORD *)&v288[18] = v146;
      *(_WORD *)&v288[22] = 2049;
      *(void *)&v288[24] = v147;
      _os_log_impl((void *)&_mh_execute_header, v131, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gnssca LocationGnssSessionStatsForCA Submission\", \"mountStateUsedPct\":%{private}d, \"signalEnvirDataUsedPct\":%{private}d, \"motionActivContextUsedPct\":%{private}d, \"displayOnPct\":%{private}d, \"reachablePct\":%{private}d, \"batterySaverModeOnPct\":%{private}d, \"anomalyStatusUnknownPct\":%{private}d, \"anomalyStatusSimulatedPct\":%{private}d, \"anomalyStatusAuthenticPct\":%{private}d, \"anomalyStatusMaybeSimulatedPct\":%{private}d, \"deresFinalAltitude\":\"%{private}f\", \"antL5BestDurationPct\":%{private}d, \"antL5OtherDurationPct\":%{private}d, \"antL5WorstDurationPct\":%{private}d, \"gnssL5BlankingDurationPct\":%{private}d, \"deltaFirstFixAndPositionAssistMeters\":\"%{private}f\"}", buf, 0x7Au);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022C6000);
      }
    }
    __int16 v148 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
    {
      int v149 = a2[110];
      int v150 = a2[111];
      int v151 = a2[112];
      int v152 = a2[113];
      int v153 = a2[114];
      int v154 = a2[115];
      int v155 = a2[116];
      int v156 = a2[117];
      int v157 = a2[118];
      int v158 = a2[119];
      int v159 = a2[120];
      int v160 = a2[121];
      int v161 = a2[122];
      int v162 = a2[140];
      int v163 = a2[142];
      int v164 = a2[144];
      int v165 = a2[139];
      int v166 = a2[141];
      int v167 = a2[143];
      *(_DWORD *)uint64_t buf = 68293891;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)long long v277 = 2082;
      *(void *)&v277[2] = "";
      __int16 v278 = 1025;
      *(_DWORD *)long long v279 = v149;
      *(_WORD *)&v279[4] = 1025;
      *(_DWORD *)&v279[6] = v150;
      *(_WORD *)long long v280 = 1025;
      *(_DWORD *)&v280[2] = v151;
      *(_WORD *)v281 = 1025;
      *(_DWORD *)&v281[2] = v152;
      *(_WORD *)int v282 = 1025;
      *(_DWORD *)&v282[2] = v153;
      *(_WORD *)v283 = 1025;
      *(_DWORD *)&v283[2] = v154;
      *(_WORD *)long long v284 = 1025;
      *(_DWORD *)&v284[2] = v155;
      *(_WORD *)long long v285 = 1025;
      *(_DWORD *)&v285[2] = v156;
      *(_WORD *)long long v286 = 1025;
      *(_DWORD *)&v286[2] = v157;
      *(_WORD *)long long v287 = 1025;
      *(_DWORD *)&v287[2] = v158;
      *(_WORD *)&v287[6] = 1025;
      *(_DWORD *)&v287[8] = v159;
      *(_WORD *)&v287[12] = 1025;
      *(_DWORD *)&v287[14] = v160;
      *(_WORD *)long long v288 = 1025;
      *(_DWORD *)&v288[2] = v161;
      *(_WORD *)&v288[6] = 1025;
      *(_DWORD *)&v288[8] = v162;
      *(_WORD *)&v288[12] = 1025;
      *(_DWORD *)&v288[14] = v163;
      *(_WORD *)&v288[18] = 1025;
      *(_DWORD *)&v288[20] = v164;
      *(_WORD *)&v288[24] = 1025;
      *(_DWORD *)&v288[26] = v165;
      *(_WORD *)&v288[30] = 1025;
      *(_DWORD *)long long v289 = v166;
      *(_WORD *)&v289[4] = 1025;
      *(_DWORD *)int v290 = v167;
      _os_log_impl((void *)&_mh_execute_header, v148, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gnssca LocationGnssSessionStatsForCA Submission\", \"ms_to_first_gps_code_lock\":%{private}d, \"ms_to_first_glo_code_lock\":%{private}d, \"ms_to_first_gal_code_lock\":%{private}d, \"ms_to_first_bds_code_lock\":%{private}d, \"ms_to_first_gps_tow_decoded\":%{private}d, \"ms_to_first_glo_tod_decoded\":%{private}d, \"ms_to_first_gal_tow_decoded\":%{private}d, \"ms_to_first_bds_tow_decoded\":%{private}d, \"ms_to_first_gps_full_sync\":%{private}d, \"ms_to_first_glo_full_sync\":%{private}d, \"ms_to_first_gal_full_sync\":%{private}d, \"ms_to_first_bds_full_sync\":%{private}d, \"me_clock_event_counter\":%{private}d, \"phase_lock_rate_20_25dBHz\":%{private}d, \"phase_lock_rate_25_30dBHz\":%{private}d, \"phase_lock_rate_30plusdBHz\":%{private}d, \"phase_available_rate_20_25dBHz\":%{private}d, \"phase_available_rate_25_30dBHz\":%{private}d, \"phase_available_rate_30plusdBHz\":%{private}d}", buf, 0x84u);
      if (qword_1024193D0 != -1) {
        dispatch_once(&qword_1024193D0, &stru_1022C6000);
      }
    }
    __int16 v168 = qword_1024193D8;
    if (os_log_type_enabled((os_log_t)qword_1024193D8, OS_LOG_TYPE_DEBUG))
    {
      int v169 = a2[145];
      int v170 = a2[146];
      int v171 = a2[147];
      int v172 = a2[148];
      int v173 = a2[149];
      int v174 = a2[150];
      *(_DWORD *)uint64_t buf = 68290563;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)long long v277 = 2082;
      *(void *)&v277[2] = "";
      __int16 v278 = 1025;
      *(_DWORD *)long long v279 = v169;
      *(_WORD *)&v279[4] = 1025;
      *(_DWORD *)&v279[6] = v170;
      *(_WORD *)long long v280 = 1025;
      *(_DWORD *)&v280[2] = v171;
      *(_WORD *)v281 = 1025;
      *(_DWORD *)&v281[2] = v172;
      *(_WORD *)int v282 = 1025;
      *(_DWORD *)&v282[2] = v173;
      *(_WORD *)v283 = 1025;
      *(_DWORD *)&v283[2] = v174;
      _os_log_impl((void *)&_mh_execute_header, v168, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"#gnssca LocationGnssSessionStatsForCA Submission\", \"iono_model_percent_global_prediction\":%{private}d, \"iono_model_percent_klob\":%{private}d, \"sv_pos_percentage_brdc_file\":%{private}d, \"sv_pos_percentage_long_term_file\":%{private}d, \"sv_pos_percentage_ota\":%{private}d, \"sv_pos_percentage_short_term_file\":%{private}d}", buf, 0x36u);
    }
  }
  v275[106] = _NSConcreteStackBlock;
  v275[107] = 3221225472;
  v275[108] = sub_100722C18;
  v275[109] = &unk_1022AE8E0;
  v275[110] = a3;
  v275[111] = a2;
  AnalyticsSendEventLazy();
  v275[100] = _NSConcreteStackBlock;
  v275[101] = 3221225472;
  v275[102] = sub_10072403C;
  v275[103] = &unk_1022AE8E0;
  v275[104] = a2;
  v275[105] = a3;
  AnalyticsSendExplodingEventLazy();
  bzero(v275, 0x318uLL);
  uint64_t v274 = 0;
  long long v273 = 0u;
  long long v272 = 0u;
  long long v271 = 0u;
  long long v270 = 0u;
  bzero(v269, 0x240uLL);
  uint64_t v268 = 0;
  long long v266 = 0u;
  long long v267 = 0u;
  int v175 = (char *)&dword_101D2B318;
  long long v264 = 0u;
  long long v265 = 0u;
  do
  {
    id v176 = (id)objc_opt_new();
    int v177 = *(_DWORD *)v175;
    *((void *)&v270 + v177) = v176;
    *(_DWORD *)uint64_t buf = v177;
    for (uint64_t i = (uint64_t *)*((void *)a2 + 37); i; uint64_t i = (uint64_t *)*i)
    {
      int v179 = *((_DWORD *)i + 8);
      if (v179 <= v177)
      {
        if (v179 >= v177)
        {
          __int16 v180 = sub_1000A43BC((uint64_t)(a2 + 72), (int *)buf);
          uint64_t v183 = *v180;
          int v181 = v180 + 1;
          __int16 v182 = (void *)v183;
          if ((uint64_t *)v183 != v181)
          {
            do
            {
              v275[11 * v177 + *((int *)v182 + 8)] = v182[5];
              __int16 v184 = (uint64_t *)v182[1];
              if (v184)
              {
                do
                {
                  int v185 = v184;
                  __int16 v184 = (uint64_t *)*v184;
                }
                while (v184);
              }
              else
              {
                do
                {
                  int v185 = (uint64_t *)v182[2];
                  BOOL v186 = *v185 == (void)v182;
                  __int16 v182 = v185;
                }
                while (!v186);
              }
              __int16 v182 = v185;
            }
            while (v185 != v181);
          }
          *((void *)&v270 + v177) = sub_1007245B4(a1, (uint64_t)&v275[11 * v177]);
          break;
        }
        ++i;
      }
    }
    *((void *)&v264 + v177) = (id)objc_opt_new();
    *(_DWORD *)uint64_t buf = v177;
    int v187 = (uint64_t *)*((void *)a2 + 34);
    if (!v187) {
      goto LABEL_80;
    }
    while (1)
    {
      int v188 = *((_DWORD *)v187 + 8);
      if (v188 <= v177) {
        break;
      }
LABEL_70:
      int v187 = (uint64_t *)*v187;
      if (!v187) {
        goto LABEL_80;
      }
    }
    if (v188 < v177)
    {
      ++v187;
      goto LABEL_70;
    }
    uint64_t v189 = sub_1000A43BC((uint64_t)(a2 + 66), (int *)buf);
    uint64_t v192 = *v189;
    __int16 v190 = v189 + 1;
    double v191 = (void *)v192;
    if ((uint64_t *)v192 != v190)
    {
      do
      {
        *(void *)&v269[64 * (uint64_t)v177 + 8 * *((int *)v191 + 8)] = v191[5];
        uint64_t v193 = (uint64_t *)v191[1];
        if (v193)
        {
          do
          {
            __int16 v194 = v193;
            uint64_t v193 = (uint64_t *)*v193;
          }
          while (v193);
        }
        else
        {
          do
          {
            __int16 v194 = (uint64_t *)v191[2];
            BOOL v186 = *v194 == (void)v191;
            double v191 = v194;
          }
          while (!v186);
        }
        double v191 = v194;
      }
      while (v194 != v190);
    }
    *((void *)&v264 + v177) = sub_100724628(a1, (uint64_t)&v269[64 * (uint64_t)v177]);
LABEL_80:
    v175 += 4;
  }
  while (v175 != "13CLDaemonStats");
  int v253 = _NSConcreteStackBlock;
  uint64_t v254 = 3221225472;
  int v255 = sub_10072469C;
  v256 = &unk_1022C5F10;
  uint64_t v257 = a3;
  long long v258 = a2;
  long long v261 = v272;
  long long v262 = v273;
  uint64_t v263 = v274;
  long long v259 = v270;
  long long v260 = v271;
  AnalyticsSendExplodingEventLazy();
  __int16 v242 = _NSConcreteStackBlock;
  uint64_t v243 = 3221225472;
  __int16 v244 = sub_100724D70;
  uint64_t v245 = &unk_1022C5F10;
  uint64_t v246 = a3;
  uint64_t v247 = a2;
  long long v250 = v266;
  long long v251 = v267;
  uint64_t v252 = v268;
  long long v248 = v264;
  long long v249 = v265;
  AnalyticsSendExplodingEventLazy();
  bzero(buf, 0x360uLL);
  uint64_t v241 = 0;
  long long v239 = 0u;
  long long v240 = 0u;
  long long v237 = 0u;
  long long v238 = 0u;
  uint64_t v195 = (char *)&dword_101D2B318;
  do
  {
    id v196 = (id)objc_opt_new();
    uint64_t v197 = *(int *)v195;
    *((void *)&v237 + v197) = v196;
    LODWORD(v222[0]) = v197;
    if (sub_10011853C((void *)a2 + 39, (int *)v222))
    {
      __int16 v198 = sub_10011853C((void *)a2 + 39, (int *)v222);
      if (!v198) {
        sub_10000EDDC("unordered_map::at: key not found");
      }
      uint64_t v199 = &buf[96 * (int)v197];
      for (uint64_t j = v198[5]; j; uint64_t j = *(void *)j)
      {
        int v201 = *(_DWORD *)(j + 16);
        int v202 = v201 - 35;
        if ((v201 - 35) > 0x31)
        {
          if (v201 < 85) {
            *(void *)uint64_t v199 = 1;
          }
          else {
            *((void *)v199 + 11) = 1;
          }
        }
        else
        {
          uint64_t v203 = *(unsigned int *)(j + 20);
          if ((int)v203 >= 1)
          {
            int v204 = (int)((double)v202 * 0.2 + 1.0);
            if (v204 >= 1 && v204 <= 9) {
              *(void *)&v199[8 * v204] = v203;
            }
          }
        }
      }
      *((void *)&v237 + v197) = sub_100725444(a1, (uint64_t)v199);
    }
    v195 += 4;
  }
  while (v195 != "13CLDaemonStats");
  v226 = _NSConcreteStackBlock;
  uint64_t v227 = 3221225472;
  long long v228 = sub_1007254B8;
  long long v229 = &unk_1022C5F10;
  uint64_t v230 = a3;
  unint64_t v231 = a2;
  long long v234 = v239;
  long long v235 = v240;
  uint64_t v236 = v241;
  long long v232 = v237;
  long long v233 = v238;
  AnalyticsSendExplodingEventLazy();
  id v206 = (id)objc_opt_new();
  uint64_t v224 = 0;
  uint64_t v225 = 0;
  uint64_t v207 = *((void *)a2 + 44);
  uint64_t v208 = *((void *)a2 + 45);
  if (v207 == v208)
  {
    uint64_t v210 = 0;
  }
  else
  {
    uint64_t v209 = 0;
    uint64_t v210 = 0;
    do
    {
      uint64_t v211 = *(void *)(v207 + 8);
      if (v211)
      {
        if ((*(_DWORD *)v207 - 2) >= 2)
        {
          if (*(_DWORD *)v207 == 1) {
            uint64_t v225 = *(void *)(v207 + 8);
          }
          else {
            uint64_t v210 = *(void *)(v207 + 8);
          }
        }
        else
        {
          v209 += v211;
          uint64_t v224 = v209;
        }
      }
      v207 += 16;
    }
    while (v207 != v208);
  }
  uint64_t v223 = v210;
  sub_100725BCC(a1, (uint64_t)&v223);
  id v212 = (id)objc_opt_new();
  memset(v222, 0, sizeof(v222));
  uint64_t v213 = (int *)*((void *)a2 + 62);
  if (v213 != a2 + 126)
  {
    do
    {
      uint64_t v214 = v213[8];
      if (v214 <= 5)
      {
        uint64_t v215 = *((void *)v213 + 5);
        if (v215) {
          *((void *)v222 + v214) = v215;
        }
      }
      __int16 v216 = (int *)*((void *)v213 + 1);
      if (v216)
      {
        do
        {
          int v217 = v216;
          __int16 v216 = *(int **)v216;
        }
        while (v216);
      }
      else
      {
        do
        {
          int v217 = (int *)*((void *)v213 + 2);
          BOOL v186 = *(void *)v217 == (void)v213;
          uint64_t v213 = v217;
        }
        while (!v186);
      }
      uint64_t v213 = v217;
    }
    while (v217 != a2 + 126);
  }
  sub_100725C40(a1, (uint64_t)v222);
  return AnalyticsSendExplodingEventLazy();
}

void sub_100722BF8(_Unwind_Exception *a1)
{
  if (STACK[0x8D8]) {
    sub_1000DB0A0((std::__shared_weak_count *)STACK[0x8D8]);
  }
  _Unwind_Resume(a1);
}

NSDictionary *sub_100722C18(uint64_t a1)
{
  v4[0] = @"bundleId";
  uint64_t v2 = *(uint64_t **)(a1 + 32);
  if (*((char *)v2 + 23) < 0) {
    uint64_t v2 = (uint64_t *)*v2;
  }
  v5[0] = +[NSString stringWithUTF8String:v2];
  v4[1] = @"ratType";
  v5[1] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 24)];
  void v4[2] = @"isShortTermOrbitAssistanceFileAvailable";
  void v5[2] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 212)];
  void v4[3] = @"isLongTermOrbitAssistanceFileAvailable";
  void v5[3] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 213)];
  void v4[4] = @"isRtiFileAvailable";
  void v5[4] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 28)];
  void v4[5] = @"isRavenGnssAssistanceFileAvailable";
  void v5[5] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 214)];
  void v4[6] = @"isExtendedEphemerisFileInjected";
  v5[6] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 29)];
  v4[7] = @"isTimeAssistanceProvided";
  v5[7] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 30)];
  void v4[8] = @"isDEMAssistanceProvided";
  v5[8] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 31)];
  void v4[9] = @"isCPIAssistanceProvided";
  v5[9] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 32)];
  v4[10] = @"gpsL1Cn0Avg";
  v5[10] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 36)];
  v4[11] = @"qzssL1Cn0Avg";
  v5[11] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 40)];
  v4[12] = @"galileoL1Cn0Avg";
  v5[12] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 44)];
  v4[13] = @"beidouL1Cn0Avg";
  v5[13] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 48)];
  v4[14] = @"glonassL1Cn0Avg";
  v5[14] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 52)];
  v4[15] = @"gpsL5Cn0Avg";
  v5[15] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 56)];
  v4[16] = @"qzssL5Cn0Avg";
  v5[16] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 60)];
  v4[17] = @"galileoL5Cn0Avg";
  v5[17] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 64)];
  v4[18] = @"beidouL5Cn0Avg";
  v5[18] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 68)];
  void v4[19] = @"gpsL1SignalCountAvg";
  void v5[19] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 116)];
  v4[20] = @"qzssL1SignalCountAvg";
  _OWORD v5[20] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 120)];
  v4[21] = @"galileoL1SignalCountAvg";
  v5[21] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 124)];
  v4[22] = @"beidouL1SignalCountAvg";
  v5[22] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 128)];
  v4[23] = @"glonassL1SignalCountAvg";
  v5[23] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 132)];
  v4[24] = @"gpsL5SignalCountAvg";
  v5[24] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 136)];
  v4[25] = @"qzssL5SignalCountAvg";
  v5[25] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 140)];
  v4[26] = @"galileoL5SignalCountAvg";
  v5[26] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 144)];
  v4[27] = @"beidouL5SignalCountAvg";
  v5[27] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 148)];
  v4[28] = @"signalEnvironmentMode";
  v5[28] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 156)];
  v4[29] = @"horizontalUncertaintyAvg";
  v5[29] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 160)];
  v4[30] = @"mountStateMode";
  v5[30] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 164)];
  v4[31] = @"motionActivityMode";
  v5[31] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 168)];
  v4[32] = @"movingStateMode";
  v5[32] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 172)];
  v4[33] = @"sessionDuration";
  v5[33] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 176)];
  v4[34] = @"deviceOrientationMode";
  v5[34] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 180)];
  v4[35] = @"isDisplayOn";
  v5[35] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 184)];
  v4[36] = @"isReachable";
  v5[36] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 185)];
  v4[37] = @"isBatterySaverModeOn";
  v5[37] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 186)];
  v4[38] = @"chargerTypeHistMode";
  v5[38] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 188)];
  v4[39] = @"thermalLevelAvg";
  v5[39] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 192)];
  v4[40] = @"isAccessoryYieldingLocations";
  v5[40] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 196)];
  v4[41] = @"l5OnOffStateMode";
  v5[41] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 200)];
  v4[42] = @"positionContextStateMode";
  v5[42] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 204)];
  v4[43] = @"xoCalibrationState";
  v5[43] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 208)];
  v4[44] = @"sessionStartPositionAssistHorzReliability";
  v5[44] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 216)];
  v4[45] = @"sessionStartPositionAssistHorzAcc";
  v5[45] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 220)];
  v4[46] = @"sessionStartPositionAssistType";
  v5[46] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 224)];
  v4[47] = @"wasWiFiPositioningAvailable";
  v5[47] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 228)];
  v4[48] = @"powerMeasurementMode";
  v5[48] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 232)];
  v4[49] = @"powerStateMode";
  v5[49] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 236)];
  v4[50] = @"isTimePreceedsBuildTime";
  v5[50] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 384)];
  v4[51] = @"isTimePreceedsExtendedEphemerisTime";
  v5[51] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 385)];
  v4[52] = @"isTimeJumpForward100Seconds";
  v5[52] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 386)];
  v4[53] = @"isTimeJumpBackward100Seconds";
  v5[53] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 387)];
  v4[54] = @"isLnavAntiSpoofBitZeroOnMultipleSvs";
  v5[54] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 388)];
  v4[55] = @"isOtaLeapSecondInconsistentWithExtendedEphemeris";
  v5[55] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 389)];
  v4[56] = @"isExcessiveSignalStrength";
  v5[56] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 390)];
  v4[57] = @"isHigherOrderOtaEphemerisAllZeroOnMultipleSvs";
  v5[57] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 391)];
  v4[58] = @"isOtaUtcModelInconsistentWithExtendedEphemeris";
  v5[58] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 392)];
  v4[59] = @"isOtaParameterOutOfBoundsOnMultipleSvs";
  v5[59] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 393)];
  v4[60] = @"isSessionSpoofed";
  v5[60] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 394)];
  v4[61] = @"gpsL1Cn0AvgFineRes";
  v5[61] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 76)];
  v4[62] = @"qzssL1Cn0AvgFineRes";
  v5[62] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 80)];
  v4[63] = @"galileoL1Cn0AvgFineRes";
  v5[63] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 84)];
  v4[64] = @"beidouL1Cn0AvgFineRes";
  v5[64] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 88)];
  v4[65] = @"glonassL1Cn0AvgFineRes";
  v5[65] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 92)];
  v4[66] = @"gpsL5Cn0AvgFineRes";
  v5[66] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 96)];
  v4[67] = @"qzssL5Cn0AvgFineRes";
  v5[67] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 100)];
  v4[68] = @"galileoL5Cn0AvgFineRes";
  v5[68] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 104)];
  v4[69] = @"beidouL5Cn0AvgFineRes";
  v5[69] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 108)];
  v4[70] = @"shortTermOrbitAssistanceFileAgeSeconds";
  v5[70] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 4)];
  v4[71] = @"longTermOrbitAssistanceFileAgeSeconds";
  v5[71] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 8)];
  v4[72] = @"rtiFileAgeSeconds";
  v5[72] = +[NSNumber numberWithUnsignedInt:**(unsigned int **)(a1 + 40)];
  v4[73] = @"ravenGnssAssistanceFileAgeSeconds";
  v5[73] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 12)];
  v4[74] = @"pctYield";
  v5[74] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 16)];
  v4[75] = @"pctYieldPostFirstFix";
  v5[75] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 20)];
  v4[76] = @"yieldCount";
  v5[76] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 24)];
  v4[77] = @"ttff";
  v5[77] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 28)];
  v4[78] = @"epochCount";
  v5[78] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 32)];
  v4[79] = @"cellularUplinkTxBandwidth";
  v5[79] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 40)];
  v4[80] = @"cellularBand";
  v5[80] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 48)];
  v4[81] = @"cellularUplinkTxFrequency";
  v5[81] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 56)];
  v4[82] = @"cellularRSRP";
  v5[82] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 64)];
  v4[83] = @"cellularSNR";
  v5[83] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 68)];
  v4[84] = @"cellularBandEpochCount";
  v5[84] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 72)];
  v4[85] = @"mmPAssisProvPct";
  v5[85] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 76)];
  v4[86] = @"demAssisProvPct";
  v5[86] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 80)];
  v4[87] = @"taAssisProvPct";
  v5[87] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 84)];
  v4[88] = @"timeAssisProvPct";
  v5[88] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 88)];
  v4[89] = @"cpiPositionAssisProvPct";
  v5[89] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 92)];
  v4[90] = @"cpiTlyCpldPosAssisProvPct";
  v5[90] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 96)];
  v4[91] = @"rtiProvPct";
  v5[91] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 100)];
  v4[92] = @"accelDataProvPct";
  v5[92] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 104)];
  v4[93] = @"gyroDataProvPct";
  v5[93] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 108)];
  v4[94] = @"pressureDataProvPct";
  v5[94] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 112)];
  v4[95] = @"pedSpeedDataProvPct";
  v5[95] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 116)];
  unsigned char v4[96] = @"pedSpeedConDataProvPct";
  v5[96] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 120)];
  v4[97] = @"motionDataProvPct";
  v5[97] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 124)];
  v4[98] = @"ephemerisProvPct";
  v5[98] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 128)];
  v4[99] = @"mountStateProvPct";
  v5[99] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 132)];
  v4[100] = @"signalEnvirDataProvPct";
  v5[100] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 136)];
  v4[101] = @"motionActivContextProvPct";
  v5[101] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 140)];
  v4[102] = @"mmPAssisUsedPct";
  v5[102] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 144)];
  v4[103] = @"demAssisUsedPct";
  v5[103] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 148)];
  v4[104] = @"taAssisUsedPct";
  v5[104] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 152)];
  v4[105] = @"timeAssisUsedPct";
  v5[105] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 156)];
  v4[106] = @"cpiPositionAssisUsedPct";
  v5[106] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 160)];
  v4[107] = @"cpiTlyCpldPosAssisUsedPct";
  v5[107] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 164)];
  v4[108] = @"rtiUsedPct";
  v5[108] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 168)];
  v4[109] = @"accelDataUsedPct";
  v5[109] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 172)];
  v4[110] = @"gyroDataUsedPct";
  v5[110] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 176)];
  v4[111] = @"pressureDataUsedPct";
  v5[111] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 180)];
  v4[112] = @"pedSpeedDataUsedPct";
  v5[112] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 184)];
  v4[113] = @"pedSpeedConDataUsedPct";
  v5[113] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 188)];
  v4[114] = @"motionDataUsedPct";
  v5[114] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 192)];
  v4[115] = @"ephemerisUsedPct";
  v5[115] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 196)];
  v4[116] = @"mountStateUsedPct";
  v5[116] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 200)];
  v4[117] = @"signalEnvirDataUsedPct";
  v5[117] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 204)];
  v4[118] = @"motionActivContextUsedPct";
  v5[118] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 208)];
  v4[119] = @"displayOnPct";
  v5[119] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 212)];
  v4[120] = @"reachablePct";
  v5[120] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 216)];
  v4[121] = @"batterySaverModeOnPct";
  v5[121] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 220)];
  v4[122] = @"anomalyStatusUnknownPct";
  v5[122] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 224)];
  v4[123] = @"anomalyStatusSimulatedPct";
  v5[123] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 228)];
  v4[124] = @"anomalyStatusAuthenticPct";
  v5[124] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 232)];
  v4[125] = @"anomalyStatusMaybeSimulatedPct";
  v5[125] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 236)];
  v4[126] = @"deresFinalAltitude";
  v5[126] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 240)];
  v4[127] = @"antL5BestDurationPct";
  v5[127] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 248)];
  v4[128] = @"antL5OtherDurationPct";
  v5[128] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 252)];
  v4[129] = @"antL5WorstDurationPct";
  v5[129] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 256)];
  v4[130] = @"gnssL5BlankingDurationPct";
  v5[130] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 260)];
  v4[131] = @"deltaFirstFixAndPositionAssistMeters";
  v5[131] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 40) + 376)];
  v4[132] = @"ms_to_first_gps_code_lock";
  v5[132] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 440)];
  v4[133] = @"ms_to_first_glo_code_lock";
  v5[133] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 444)];
  v4[134] = @"ms_to_first_gal_code_lock";
  v5[134] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 448)];
  v4[135] = @"ms_to_first_bds_code_lock";
  v5[135] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 452)];
  v4[136] = @"ms_to_first_gps_tow_decoded";
  v5[136] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 456)];
  v4[137] = @"ms_to_first_glo_tod_decoded";
  v5[137] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 460)];
  v4[138] = @"ms_to_first_gal_tow_decoded";
  v5[138] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 464)];
  v4[139] = @"ms_to_first_bds_tow_decoded";
  v5[139] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 468)];
  v4[140] = @"ms_to_first_gps_full_sync";
  v5[140] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 472)];
  v4[141] = @"ms_to_first_glo_full_sync";
  v5[141] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 476)];
  v4[142] = @"ms_to_first_gal_full_sync";
  v5[142] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 480)];
  v4[143] = @"ms_to_first_bds_full_sync";
  v5[143] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 484)];
  v4[144] = @"me_clock_event_counter";
  v5[144] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 40) + 488)];
  v4[145] = @"phase_lock_rate_20_25dBHz";
  v5[145] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 560)];
  v4[146] = @"phase_lock_rate_25_30dBHz";
  v5[146] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 568)];
  v4[147] = @"phase_lock_rate_30plusdBHz";
  v5[147] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 576)];
  v4[148] = @"phase_available_rate_20_25dBHz";
  v5[148] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 556)];
  v4[149] = @"phase_available_rate_25_30dBHz";
  v5[149] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 564)];
  v4[150] = @"phase_available_rate_30plusdBHz";
  v5[150] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 572)];
  v4[151] = @"iono_model_percent_global_prediction";
  v5[151] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 580)];
  v4[152] = @"iono_model_percent_klob";
  v5[152] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 584)];
  v4[153] = @"sv_pos_percentage_brdc_file";
  v5[153] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 588)];
  v4[154] = @"sv_pos_percentage_long_term_file";
  v5[154] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 592)];
  v4[155] = @"sv_pos_percentage_ota";
  v5[155] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 596)];
  v4[156] = @"sv_pos_percentage_short_term_file";
  v5[156] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 600)];
  return +[NSDictionary dictionaryWithObjects:v5 forKeys:v4 count:157];
}

NSDictionary *sub_10072403C(uint64_t a1)
{
  id v2 = [objc_alloc((Class)NSMutableArray) initWithCapacity:11];
  for (uint64_t i = 396; i != 440; i += 4)
    [v2 addObject:[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + i)]];
  v6[0] = @"ratType";
  v7[0] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 24)];
  v6[1] = @"isRtiFileAvailable";
  v7[1] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 28)];
  v6[2] = @"isExtendedEphemerisFileInjected";
  uint64_t v7[2] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 29)];
  void v6[3] = @"isTimeAssistanceProvided";
  v7[3] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 30)];
  void v6[4] = @"isDEMAssistanceProvided";
  void v7[4] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 31)];
  v6[5] = @"isCPIAssistanceProvided";
  v7[5] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 32)];
  v6[6] = @"gpsL1Cn0Avg";
  void v7[6] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 36)];
  v6[7] = @"qzssL1Cn0Avg";
  void v7[7] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 40)];
  unsigned char v6[8] = @"galileoL1Cn0Avg";
  v7[8] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 44)];
  v6[9] = @"beidouL1Cn0Avg";
  v7[9] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 48)];
  v6[10] = @"glonassL1Cn0Avg";
  v7[10] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 52)];
  v6[11] = @"gpsL5Cn0Avg";
  v7[11] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 56)];
  v6[12] = @"qzssL5Cn0Avg";
  v7[12] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 60)];
  v6[13] = @"galileoL5Cn0Avg";
  v7[13] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 64)];
  v6[14] = @"beidouL5Cn0Avg";
  v7[14] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 68)];
  v6[15] = @"gpsL1SignalCountAvg";
  v7[15] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 116)];
  v6[16] = @"qzssL1SignalCountAvg";
  BOOL v7[16] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 120)];
  v6[17] = @"galileoL1SignalCountAvg";
  v7[17] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 124)];
  v6[18] = @"beidouL1SignalCountAvg";
  v7[18] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 128)];
  v6[19] = @"glonassL1SignalCountAvg";
  v7[19] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 132)];
  v6[20] = @"gpsL5SignalCountAvg";
  v7[20] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 136)];
  v6[21] = @"qzssL5SignalCountAvg";
  v7[21] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 140)];
  v6[22] = @"galileoL5SignalCountAvg";
  v7[22] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 144)];
  v6[23] = @"beidouL5SignalCountAvg";
  v7[23] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 148)];
  v6[24] = @"signalEnvironmentMode";
  v7[24] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 156)];
  v6[25] = @"powerMeasurementMode";
  v7[25] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 232)];
  v6[26] = @"powerStateMode";
  v7[26] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 236)];
  v6[27] = @"horizontalUncertaintyAvg";
  v7[27] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 160)];
  v6[28] = @"mountStateMode";
  v7[28] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 164)];
  v6[29] = @"motionActivityMode";
  v7[29] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 168)];
  v6[30] = @"movingStateMode";
  v7[30] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 172)];
  v6[31] = @"sessionDuration";
  v7[31] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 176)];
  v6[32] = @"deviceOrientationMode";
  v7[32] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 180)];
  v6[33] = @"isDisplayOn";
  v7[33] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 184)];
  v6[34] = @"isReachable";
  v7[34] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 185)];
  v6[35] = @"positionContextStateMode";
  v7[35] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 40) + 204)];
  v6[36] = @"isSessionSpoofed";
  int v4 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 394)];
  v6[37] = @"anomalyStatusType";
  v7[36] = v4;
  v7[37] = v2;
  return +[NSDictionary dictionaryWithObjects:v7 forKeys:v6 count:38];
}

id sub_1007245B4(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_alloc((Class)NSMutableArray) initWithCapacity:11];
  for (uint64_t i = 0; i != 88; i += 8)
    [v3 addObject:[NSNumber numberWithUnsignedLongLong:*(void *)(a2 + i)]];
  return v3;
}

id sub_100724628(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_alloc((Class)NSMutableArray) initWithCapacity:8];
  for (uint64_t i = 0; i != 64; i += 8)
    [v3 addObject:[+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", *(void *)(a2 + i))]];
  return v3;
}

NSDictionary *sub_10072469C(uint64_t a1)
{
  v7[0] = @"ratType";
  v8[0] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 24)];
  v7[1] = @"isShortTermOrbitAssistanceFileAvailable";
  v8[1] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 212)];
  uint64_t v7[2] = @"isLongTermOrbitAssistanceFileAvailable";
  v8[2] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 213)];
  v7[3] = @"isRtiFileAvailable";
  v8[3] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 28)];
  void v7[4] = @"isExtendedEphemerisFileInjected";
  void v8[4] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 29)];
  v7[5] = @"isTimeAssistanceProvided";
  v8[5] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 30)];
  void v7[6] = @"isDEMAssistanceProvided";
  void v8[6] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 31)];
  void v7[7] = @"isCPIAssistanceProvided";
  v8[7] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 32)];
  v7[8] = @"gpsL1Cn0Avg";
  v8[8] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 76)];
  v7[9] = @"qzssL1Cn0Avg";
  v8[9] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 80)];
  v7[10] = @"galileoL1Cn0Avg";
  v8[10] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 84)];
  v7[11] = @"beidouL1Cn0Avg";
  void v8[11] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 88)];
  v7[12] = @"glonassL1Cn0Avg";
  v8[12] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 92)];
  v7[13] = @"gpsL5Cn0Avg";
  v8[13] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 96)];
  v7[14] = @"qzssL5Cn0Avg";
  v8[14] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 100)];
  v7[15] = @"galileoL5Cn0Avg";
  v8[15] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 104)];
  BOOL v7[16] = @"beidouL5Cn0Avg";
  v8[16] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 108)];
  v7[17] = @"gpsL1SignalCountAvg";
  v8[17] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 116)];
  v7[18] = @"qzssL1SignalCountAvg";
  v8[18] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 120)];
  v7[19] = @"galileoL1SignalCountAvg";
  v8[19] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 124)];
  v7[20] = @"beidouL1SignalCountAvg";
  v8[20] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 128)];
  v7[21] = @"glonassL1SignalCountAvg";
  v8[21] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 132)];
  v7[22] = @"gpsL5SignalCountAvg";
  v8[22] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 136)];
  v7[23] = @"qzssL5SignalCountAvg";
  v8[23] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 140)];
  v7[24] = @"galileoL5SignalCountAvg";
  v8[24] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 144)];
  v7[25] = @"beidouL5SignalCountAvg";
  v8[25] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 148)];
  v7[26] = @"signalEnvironmentMode";
  v8[26] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 156)];
  v7[27] = @"horizontalUncertaintyAvg";
  v8[27] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 160)];
  v7[28] = @"mountStateMode";
  v8[28] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 164)];
  v7[29] = @"motionActivityMode";
  v8[29] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 168)];
  v7[30] = @"movingStateMode";
  v8[30] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 172)];
  v7[31] = @"sessionDuration";
  v8[31] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 176)];
  v7[32] = @"deviceOrientationMode";
  v8[32] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 180)];
  v7[33] = @"isDisplayOn";
  v8[33] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 184)];
  v7[34] = @"isReachable";
  v8[34] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 185)];
  v7[35] = @"isBatterySaverModeOn";
  v8[35] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 186)];
  v7[36] = @"chargerTypeHistMode";
  v8[36] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 188)];
  v7[37] = @"thermalLevelAvg";
  v8[37] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 192)];
  void v7[38] = @"isAccessoryYieldingLocations";
  v8[38] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 196)];
  v7[39] = @"l5OnOffStateMode";
  v8[39] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 200)];
  v7[40] = @"positionContextStateMode";
  v8[40] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 204)];
  v7[41] = @"xoCalibrationState";
  v8[41] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 208)];
  v7[42] = @"sessionStartPositionAssistHorzReliability";
  v8[42] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 216)];
  v7[43] = @"sessionStartPositionAssistHorzAcc";
  v8[43] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 220)];
  v7[44] = @"sessionStartPositionAssistType";
  v8[44] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 224)];
  v7[45] = @"wasWiFiPositioningAvailable";
  v8[45] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 228)];
  v7[46] = @"isSessionSpoofed";
  id v2 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 394)];
  v7[47] = @"signalStrengthArrayGpsL1";
  v7[48] = @"signalStrengthArrayQzssL1";
  v7[49] = @"signalStrengthArrayGalileoL1";
  v7[50] = @"signalStrengthArrayBeiDouL1";
  v7[51] = @"signalStrengthArrayGlonassL1";
  v7[52] = @"signalStrengthArrayGpsL5";
  v7[53] = @"signalStrengthArrayQzssL5";
  v7[54] = @"signalStrengthArrayGalileoL5";
  long long v3 = *(_OWORD *)(a1 + 64);
  long long v9 = *(_OWORD *)(a1 + 48);
  long long v10 = v3;
  long long v4 = *(_OWORD *)(a1 + 96);
  long long v11 = *(_OWORD *)(a1 + 80);
  long long v12 = v4;
  v7[55] = @"signalStrengthArrayBeiDouL5";
  uint64_t v5 = *(void *)(a1 + 112);
  v8[46] = v2;
  uint64_t v13 = v5;
  return +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:56];
}

NSDictionary *sub_100724D70(uint64_t a1)
{
  v7[0] = @"ratType";
  v8[0] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 24)];
  v7[1] = @"isShortTermOrbitAssistanceFileAvailable";
  v8[1] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 212)];
  uint64_t v7[2] = @"isLongTermOrbitAssistanceFileAvailable";
  v8[2] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 213)];
  v7[3] = @"isRtiFileAvailable";
  v8[3] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 28)];
  void v7[4] = @"isExtendedEphemerisFileInjected";
  void v8[4] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 29)];
  v7[5] = @"isTimeAssistanceProvided";
  v8[5] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 30)];
  void v7[6] = @"isDEMAssistanceProvided";
  void v8[6] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 31)];
  void v7[7] = @"isCPIAssistanceProvided";
  v8[7] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 32)];
  v7[8] = @"gpsL1Cn0Avg";
  v8[8] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 76)];
  v7[9] = @"qzssL1Cn0Avg";
  v8[9] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 80)];
  v7[10] = @"galileoL1Cn0Avg";
  v8[10] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 84)];
  v7[11] = @"beidouL1Cn0Avg";
  void v8[11] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 88)];
  v7[12] = @"glonassL1Cn0Avg";
  v8[12] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 92)];
  v7[13] = @"gpsL5Cn0Avg";
  v8[13] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 96)];
  v7[14] = @"qzssL5Cn0Avg";
  v8[14] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 100)];
  v7[15] = @"galileoL5Cn0Avg";
  v8[15] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 104)];
  BOOL v7[16] = @"beidouL5Cn0Avg";
  v8[16] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 108)];
  v7[17] = @"gpsL1SignalCountAvg";
  v8[17] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 116)];
  v7[18] = @"qzssL1SignalCountAvg";
  v8[18] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 120)];
  v7[19] = @"galileoL1SignalCountAvg";
  v8[19] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 124)];
  v7[20] = @"beidouL1SignalCountAvg";
  v8[20] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 128)];
  v7[21] = @"glonassL1SignalCountAvg";
  v8[21] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 132)];
  v7[22] = @"gpsL5SignalCountAvg";
  v8[22] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 136)];
  v7[23] = @"qzssL5SignalCountAvg";
  v8[23] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 140)];
  v7[24] = @"galileoL5SignalCountAvg";
  v8[24] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 144)];
  v7[25] = @"beidouL5SignalCountAvg";
  v8[25] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 148)];
  v7[26] = @"signalEnvironmentMode";
  v8[26] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 156)];
  v7[27] = @"horizontalUncertaintyAvg";
  v8[27] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 160)];
  v7[28] = @"mountStateMode";
  v8[28] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 164)];
  v7[29] = @"motionActivityMode";
  v8[29] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 168)];
  v7[30] = @"movingStateMode";
  v8[30] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 172)];
  v7[31] = @"sessionDuration";
  v8[31] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 176)];
  v7[32] = @"deviceOrientationMode";
  v8[32] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 180)];
  v7[33] = @"isDisplayOn";
  v8[33] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 184)];
  v7[34] = @"isReachable";
  v8[34] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 185)];
  v7[35] = @"isBatterySaverModeOn";
  v8[35] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 186)];
  v7[36] = @"chargerTypeHistMode";
  v8[36] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 188)];
  v7[37] = @"thermalLevelAvg";
  v8[37] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 192)];
  void v7[38] = @"isAccessoryYieldingLocations";
  v8[38] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 196)];
  v7[39] = @"l5OnOffStateMode";
  v8[39] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 200)];
  v7[40] = @"positionContextStateMode";
  v8[40] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 204)];
  v7[41] = @"xoCalibrationState";
  v8[41] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 208)];
  v7[42] = @"sessionStartPositionAssistHorzReliability";
  v8[42] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 216)];
  v7[43] = @"sessionStartPositionAssistHorzAcc";
  v8[43] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 220)];
  v7[44] = @"sessionStartPositionAssistType";
  v8[44] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 224)];
  v7[45] = @"wasWiFiPositioningAvailable";
  v8[45] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 228)];
  v7[46] = @"isSessionSpoofed";
  id v2 = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 394)];
  v7[47] = @"signalCountArrayGpsL1";
  v7[48] = @"signalCountArrayQzssL1";
  v7[49] = @"signalCountArrayGalileoL1";
  v7[50] = @"signalCountArrayBeiDouL1";
  v7[51] = @"signalCountArrayGlonassL1";
  v7[52] = @"signalCountArrayGpsL5";
  v7[53] = @"signalCountArrayQzssL5";
  v7[54] = @"signalCountArrayGalileoL5";
  long long v3 = *(_OWORD *)(a1 + 64);
  long long v9 = *(_OWORD *)(a1 + 48);
  long long v10 = v3;
  long long v4 = *(_OWORD *)(a1 + 96);
  long long v11 = *(_OWORD *)(a1 + 80);
  long long v12 = v4;
  v7[55] = @"signalCountArrayBeiDouL5";
  uint64_t v5 = *(void *)(a1 + 112);
  v8[46] = v2;
  uint64_t v13 = v5;
  return +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:56];
}

id sub_100725444(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_alloc((Class)NSMutableArray) initWithCapacity:12];
  for (uint64_t i = 0; i != 96; i += 8)
    [v3 addObject:[+[NSNumber numberWithUnsignedLongLong:](NSNumber, "numberWithUnsignedLongLong:", *(void *)(a2 + i))]];
  return v3;
}

NSDictionary *sub_1007254B8(uint64_t a1)
{
  v7[0] = @"ratType";
  v8[0] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 24)];
  v7[1] = @"isShortTermOrbitAssistanceFileAvailable";
  v8[1] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 212)];
  uint64_t v7[2] = @"isLongTermOrbitAssistanceFileAvailable";
  v8[2] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 213)];
  v7[3] = @"isRtiFileAvailable";
  v8[3] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 28)];
  void v7[4] = @"isExtendedEphemerisFileInjected";
  void v8[4] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 29)];
  v7[5] = @"isTimeAssistanceProvided";
  v8[5] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 30)];
  void v7[6] = @"isDEMAssistanceProvided";
  void v8[6] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 31)];
  void v7[7] = @"isCPIAssistanceProvided";
  v8[7] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 32)];
  v7[8] = @"gpsL1Cn0Avg";
  v8[8] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 76)];
  v7[9] = @"qzssL1Cn0Avg";
  v8[9] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 80)];
  v7[10] = @"galileoL1Cn0Avg";
  v8[10] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 84)];
  v7[11] = @"beidouL1Cn0Avg";
  void v8[11] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 88)];
  v7[12] = @"glonassL1Cn0Avg";
  v8[12] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 92)];
  v7[13] = @"gpsL5Cn0Avg";
  v8[13] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 96)];
  v7[14] = @"qzssL5Cn0Avg";
  v8[14] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 100)];
  v7[15] = @"galileoL5Cn0Avg";
  v8[15] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 104)];
  BOOL v7[16] = @"beidouL5Cn0Avg";
  v8[16] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 108)];
  v7[17] = @"gpsL1SignalCountAvg";
  v8[17] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 116)];
  v7[18] = @"qzssL1SignalCountAvg";
  v8[18] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 120)];
  v7[19] = @"galileoL1SignalCountAvg";
  v8[19] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 124)];
  v7[20] = @"beidouL1SignalCountAvg";
  v8[20] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 128)];
  v7[21] = @"glonassL1SignalCountAvg";
  v8[21] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 132)];
  v7[22] = @"gpsL5SignalCountAvg";
  v8[22] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 136)];
  v7[23] = @"qzssL5SignalCountAvg";
  v8[23] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 140)];
  v7[24] = @"galileoL5SignalCountAvg";
  v8[24] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 144)];
  v7[25] = @"beidouL5SignalCountAvg";
  v8[25] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 148)];
  v7[26] = @"signalEnvironmentMode";
  v8[26] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 156)];
  v7[27] = @"horizontalUncertaintyAvg";
  v8[27] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 160)];
  v7[28] = @"mountStateMode";
  v8[28] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 164)];
  v7[29] = @"motionActivityMode";
  v8[29] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 168)];
  v7[30] = @"movingStateMode";
  v8[30] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 172)];
  v7[31] = @"sessionDuration";
  v8[31] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 176)];
  v7[32] = @"deviceOrientationMode";
  v8[32] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 180)];
  v7[33] = @"isDisplayOn";
  v8[33] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 184)];
  v7[34] = @"isReachable";
  v8[34] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 185)];
  v7[35] = @"isBatterySaverModeOn";
  v8[35] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 186)];
  v7[36] = @"chargerTypeHistMode";
  v8[36] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 188)];
  v7[37] = @"thermalLevelAvg";
  v8[37] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 192)];
  void v7[38] = @"isAccessoryYieldingLocations";
  v8[38] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 196)];
  v7[39] = @"l5OnOffStateMode";
  v8[39] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 200)];
  v7[40] = @"positionContextStateMode";
  v8[40] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 204)];
  v7[41] = @"xoCalibrationState";
  v8[41] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 208)];
  v7[42] = @"sessionStartPositionAssistHorzReliability";
  v8[42] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 216)];
  v7[43] = @"sessionStartPositionAssistHorzAcc";
  v8[43] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 220)];
  v7[44] = @"sessionStartPositionAssistType";
  v8[44] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 224)];
  v7[45] = @"wasWiFiPositioningAvailable";
  v8[45] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 228)];
  v7[46] = @"isSessionSpoofed";
  v8[46] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 40) + 394)];
  v7[47] = @"powerMeasurementMode";
  void v8[47] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 232)];
  v7[48] = @"powerStateMode";
  id v2 = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 236)];
  v7[49] = @"jammingMetricArrayGpsL1";
  v7[50] = @"jammingMetricArrayQzssL1";
  v7[51] = @"jammingMetricArrayGalileoL1";
  v7[52] = @"jammingMetricArrayBeiDouL1";
  v7[53] = @"jammingMetricArrayGlonassL1";
  v7[54] = @"jammingMetricArrayGpsL5";
  v7[55] = @"jammingMetricArrayQzssL5";
  void v7[56] = @"jammingMetricArrayGalileoL5";
  long long v3 = *(_OWORD *)(a1 + 64);
  long long v9 = *(_OWORD *)(a1 + 48);
  long long v10 = v3;
  long long v4 = *(_OWORD *)(a1 + 96);
  long long v11 = *(_OWORD *)(a1 + 80);
  long long v12 = v4;
  v7[57] = @"jammingMetricArrayBeiDouL5";
  uint64_t v5 = *(void *)(a1 + 112);
  v8[48] = v2;
  uint64_t v13 = v5;
  return +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:58];
}

id sub_100725BCC(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_alloc((Class)NSMutableArray) initWithCapacity:3];
  for (uint64_t i = 0; i != 24; i += 8)
    [v3 addObject:[NSNumber numberWithUnsignedLongLong:*(void *)(a2 + i)]];
  return v3;
}

id sub_100725C40(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_alloc((Class)NSMutableArray) initWithCapacity:6];
  for (uint64_t i = 0; i != 48; i += 8)
    [v3 addObject:[NSNumber numberWithUnsignedLongLong:*(void *)(a2 + i)]];
  return v3;
}

NSDictionary *sub_100725CB4(uint64_t a1)
{
  v3[0] = @"ratType";
  v4[0] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 24)];
  v3[1] = @"isShortTermOrbitAssistanceFileAvailable";
  v4[1] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 48) + 212)];
  uint64_t v3[2] = @"isLongTermOrbitAssistanceFileAvailable";
  void v4[2] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 48) + 213)];
  void v3[3] = @"isRtiFileAvailable";
  void v4[3] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 48) + 28)];
  void v3[4] = @"isExtendedEphemerisFileInjected";
  void v4[4] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 48) + 29)];
  void v3[5] = @"isTimeAssistanceProvided";
  void v4[5] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 48) + 30)];
  void v3[6] = @"isDEMAssistanceProvided";
  void v4[6] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 48) + 31)];
  v3[7] = @"isCPIAssistanceProvided";
  v4[7] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 48) + 32)];
  void v3[8] = @"gpsL1Cn0Avg";
  void v4[8] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 76)];
  void v3[9] = @"qzssL1Cn0Avg";
  void v4[9] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 80)];
  v3[10] = @"galileoL1Cn0Avg";
  v4[10] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 84)];
  v3[11] = @"beidouL1Cn0Avg";
  v4[11] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 88)];
  v3[12] = @"glonassL1Cn0Avg";
  v4[12] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 92)];
  v3[13] = @"gpsL5Cn0Avg";
  v4[13] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 96)];
  v3[14] = @"qzssL5Cn0Avg";
  v4[14] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 100)];
  v3[15] = @"galileoL5Cn0Avg";
  v4[15] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 104)];
  v3[16] = @"beidouL5Cn0Avg";
  v4[16] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 108)];
  v3[17] = @"gpsL1SignalCountAvg";
  v4[17] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 116)];
  v3[18] = @"qzssL1SignalCountAvg";
  v4[18] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 120)];
  v3[19] = @"galileoL1SignalCountAvg";
  void v4[19] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 124)];
  v3[20] = @"beidouL1SignalCountAvg";
  v4[20] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 128)];
  v3[21] = @"glonassL1SignalCountAvg";
  v4[21] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 132)];
  v3[22] = @"gpsL5SignalCountAvg";
  v4[22] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 136)];
  v3[23] = @"qzssL5SignalCountAvg";
  v4[23] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 140)];
  v3[24] = @"galileoL5SignalCountAvg";
  v4[24] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 144)];
  v3[25] = @"beidouL5SignalCountAvg";
  v4[25] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 148)];
  v3[26] = @"signalEnvironmentMode";
  v4[26] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 156)];
  v3[27] = @"horizontalUncertaintyAvg";
  v4[27] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 160)];
  v3[28] = @"mountStateMode";
  v4[28] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 164)];
  v3[29] = @"motionActivityMode";
  v4[29] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 168)];
  v3[30] = @"movingStateMode";
  v4[30] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 172)];
  v3[31] = @"sessionDuration";
  v4[31] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 176)];
  v3[32] = @"deviceOrientationMode";
  v4[32] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 180)];
  v3[33] = @"isDisplayOn";
  v4[33] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 48) + 184)];
  v3[34] = @"isReachable";
  v4[34] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 48) + 185)];
  v3[35] = @"isBatterySaverModeOn";
  v4[35] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 48) + 186)];
  v3[36] = @"chargerTypeHistMode";
  v4[36] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 188)];
  v3[37] = @"thermalLevelAvg";
  v4[37] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 192)];
  v3[38] = @"isAccessoryYieldingLocations";
  v4[38] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 48) + 196)];
  v3[39] = @"l5OnOffStateMode";
  v4[39] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 200)];
  v3[40] = @"positionContextStateMode";
  v4[40] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 204)];
  v3[41] = @"xoCalibrationState";
  v4[41] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 48) + 208)];
  v3[42] = @"sessionStartPositionAssistHorzReliability";
  v4[42] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 216)];
  v3[43] = @"sessionStartPositionAssistHorzAcc";
  v4[43] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 220)];
  v3[44] = @"sessionStartPositionAssistType";
  v4[44] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 224)];
  v3[45] = @"wasWiFiPositioningAvailable";
  v4[45] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 48) + 228)];
  v3[46] = @"isSessionSpoofed";
  v4[46] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 56) + 394)];
  v3[47] = @"powerMeasurementMode";
  v4[47] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 232)];
  v3[48] = @"powerStateMode";
  v4[48] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 48) + 236)];
  v3[49] = @"l5ForceOffReasonHist";
  v3[50] = @"l5BandUsageHist";
  long long v5 = *(_OWORD *)(a1 + 32);
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:51];
}

uint64_t sub_100726370(uint64_t a1, int *a2)
{
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022C6020);
  }
  id v3 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    int v5 = a2[1];
    int v7 = a2[2];
    int v6 = a2[3];
    *(_DWORD *)uint64_t buf = 67175425;
    int v11 = v4;
    __int16 v12 = 1025;
    int v13 = v5;
    __int16 v14 = 1025;
    int v15 = v6;
    __int16 v16 = 1025;
    int v17 = v7;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "#gnssca Submit,BaroAlt,DriftRate Core Analytics Data,closeLoopError,%{private}d,durationSinceLastCalibEv,%{private}d,distanceFromLastCalibEv,%{private}d,estAltUnc,%{private}d", buf, 0x1Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022C6020);
    }
    long long v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLDaemonStats::submitMetric(const CLDaemonStats_Type::BarometricAltitudeDriftRateInfo &)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_1007265BC(uint64_t a1)
{
  v3[0] = @"BaroAltCloseLoopErr";
  v4[0] = +[NSNumber numberWithInt:**(unsigned int **)(a1 + 32)];
  v3[1] = @"BaroAltDistFromLastCalibEv";
  v4[1] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 12)];
  uint64_t v3[2] = @"BaroAltDurationSinceLastCalibEv";
  void v4[2] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 4)];
  void v3[3] = @"BaroAltEstAltUncAtCalibEv";
  void v4[3] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 8)];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:4];
}

uint64_t sub_1007266AC(uint64_t a1, int *a2)
{
  if (qword_102419530 != -1) {
    dispatch_once(&qword_102419530, &stru_1022C5FC0);
  }
  id v3 = qword_102419538;
  if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    int v5 = a2[1];
    int v6 = *((unsigned __int8 *)a2 + 8);
    uint64_t v7 = *((void *)a2 + 2);
    uint64_t v8 = *((void *)a2 + 3);
    int v9 = a2[8];
    int v10 = a2[9];
    int v11 = a2[10];
    int v12 = a2[11];
    uint64_t v13 = *((void *)a2 + 6);
    uint64_t v14 = *((void *)a2 + 7);
    uint64_t v15 = *((void *)a2 + 8);
    *(_DWORD *)uint64_t buf = 68292098;
    int v18 = 0;
    __int16 v19 = 2082;
    int v20 = "";
    __int16 v21 = 2050;
    uint64_t v22 = v13;
    __int16 v23 = 1026;
    int v24 = v4;
    __int16 v25 = 1026;
    int v26 = v5;
    __int16 v27 = 1026;
    int v28 = v6;
    __int16 v29 = 2050;
    uint64_t v30 = v7;
    __int16 v31 = 2050;
    uint64_t v32 = v8;
    __int16 v33 = 1026;
    int v34 = v9;
    __int16 v35 = 1026;
    int v36 = v10;
    __int16 v37 = 1026;
    int v38 = v11;
    __int16 v39 = 1026;
    int v40 = v12;
    __int16 v41 = 2050;
    uint64_t v42 = v14;
    __int16 v43 = 2050;
    uint64_t v44 = v15;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLRG: submit CLRGSessionMetric session\", \"sessionDuration\":\"%{public}f\", \"activityType\":%{public}d, \"CLRPowerMode\":%{public}d, \"sessionLeeched\":%{public}d, \"ttff_s\":\"%{public}f\", \"horizontalUncFF_m\":\"%{public}f\", \"hUnc5SecAfterFF_m\":%{public}d, \"hUnc10SecAfterFF_m\":%{public}d, \"hUnc15SecAfterFF_m\":%{public}d, \"hUnc20SecAfterFF_m\":%{public}d, \"intendedInterSessionDuration_s\":\"%{public}f\", \"realInterSessionDuration_s\":\"%{public}f\"}", buf, 0x6Eu);
  }
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_100726868(uint64_t a1)
{
  v3[0] = @"sessionDuration";
  v4[0] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 48)];
  v3[1] = @"activityType";
  v4[1] = +[NSNumber numberWithInt:**(unsigned int **)(a1 + 32)];
  uint64_t v3[2] = @"CLRPowerMode";
  void v4[2] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 4)];
  void v3[3] = @"sessionLeeched";
  void v4[3] = +[NSNumber numberWithBool:*(unsigned __int8 *)(*(void *)(a1 + 32) + 8)];
  void v3[4] = @"ttff_s";
  void v4[4] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 16)];
  void v3[5] = @"horizontalUncFF_m";
  void v4[5] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 24)];
  void v3[6] = @"hUnc5SecAfterFF_m";
  void v4[6] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 32)];
  v3[7] = @"hUnc10SecAfterFF_m";
  v4[7] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 36)];
  void v3[8] = @"hUnc15SecAfterFF_m";
  void v4[8] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 40)];
  void v3[9] = @"hUnc20SecAfterFF_m";
  void v4[9] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 44)];
  v3[10] = @"intendedInterSessionDuration_s";
  v4[10] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 56)];
  v3[11] = @"realInterSessionDuration_s";
  v4[11] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 64)];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:12];
}

uint64_t sub_100726A58(uint64_t a1, int *a2)
{
  if (qword_102419530 != -1) {
    dispatch_once(&qword_102419530, &stru_1022C5FC0);
  }
  id v3 = qword_102419538;
  if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    uint64_t v5 = *((void *)a2 + 1);
    int v6 = a2[4];
    uint64_t v7 = *((void *)a2 + 3);
    *(_DWORD *)uint64_t buf = 68290050;
    __int16 v11 = 2082;
    int v10 = 0;
    int v12 = "";
    __int16 v13 = 1026;
    int v14 = v4;
    __int16 v15 = 2050;
    uint64_t v16 = v5;
    __int16 v17 = 1026;
    int v18 = v6;
    __int16 v19 = 2050;
    uint64_t v20 = v7;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLRG: submit CLRGClientMetric session\", \"CLRPowerMode\":%{public}d, \"CLRActiveLifeDuration\":\"%{public}f\", \"CLRGnssSessionCount\":%{public}d, \"CLRGnssSessionDuration\":\"%{public}f\"}", buf, 0x32u);
  }
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_100726BC4(uint64_t a1)
{
  v3[0] = @"CLRPowerMode";
  v4[0] = +[NSNumber numberWithInt:**(unsigned int **)(a1 + 32)];
  v3[1] = @"CLRActiveLifeDuration";
  v4[1] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 8)];
  uint64_t v3[2] = @"CLRGnssSessionCount";
  void v4[2] = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(*(void *)(a1 + 32) + 16)];
  void v3[3] = @"CLRGnssSessionDuration";
  void v4[3] = +[NSNumber numberWithDouble:*(double *)(*(void *)(a1 + 32) + 24)];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:4];
}

uint64_t sub_100726CB4(uint64_t a1, int *a2)
{
  if (qword_102419530 != -1) {
    dispatch_once(&qword_102419530, &stru_1022C5FC0);
  }
  id v3 = qword_102419538;
  if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *a2;
    int v5 = a2[1];
    int v6 = a2[2];
    *(_DWORD *)uint64_t buf = 68289794;
    int v9 = 0;
    __int16 v10 = 2082;
    __int16 v11 = "";
    __int16 v12 = 1026;
    int v13 = v4;
    __int16 v14 = 1026;
    int v15 = v5;
    __int16 v16 = 1026;
    int v17 = v6;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLRG: submit DailyGnss usage detail\", \"totalGnssInADay_s\":%{public}d, \"totalLeechedGnssInADay_s\":%{public}d, \"totalProactiveGnssInADay_s\":%{public}d}", buf, 0x24u);
  }
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_100726E0C(uint64_t a1)
{
  v3[0] = @"totalGnssInADay_s";
  v4[0] = +[NSNumber numberWithInt:**(unsigned int **)(a1 + 32)];
  v3[1] = @"totalLeechedGnssInADay_s";
  v4[1] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 4)];
  uint64_t v3[2] = @"totalProactiveGnssInADay_s";
  void v4[2] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 8)];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:3];
}

void sub_100726EDC(id a1)
{
  qword_102419628 = (uint64_t)os_log_create("com.apple.locationd.Utility", "LocationMetrics");
}

void sub_100726F0C(id a1)
{
  qword_102419528 = (uint64_t)os_log_create("com.apple.locationd.Core", "Client");
}

void sub_100726F3C(id a1)
{
  qword_102419538 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void sub_100726F6C(id a1)
{
  qword_102419368 = (uint64_t)os_log_create("com.apple.locationd.Position", "GpsAccessory");
}

void sub_100726F9C(id a1)
{
  qword_1024193D8 = (uint64_t)os_log_create("com.apple.locationd.Position", "Gnss");
}

void sub_100726FCC(id a1)
{
  qword_102419388 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

void sub_100726FFC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADF0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10241ADF0))
    {
      uint64_t v1 = 0x7FFFFFFF00000000;
      v0[2] = xmmword_101D2B2D8;
      v0[3] = unk_101D2B2E8;
      v0[4] = xmmword_101D2B2F8;
      v0[0] = xmmword_101D2B2B8;
      v0[1] = unk_101D2B2C8;
      sub_1003BFBA4((uint64_t)&unk_10241ADD8, (int *)v0, 11);
      __cxa_atexit((void (*)(void *))sub_1003BE998, &unk_10241ADD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ADF0);
    }
  }
}

void sub_1007270DC(_Unwind_Exception *a1)
{
}

void sub_1007270F4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241AD20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241AD20))
  {
    qword_10241AD08 = 0;
    qword_10241AD10 = 0;
    qword_10241AD18 = 0;
    __cxa_atexit((void (*)(void *))sub_1003BE920, &qword_10241AD08, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241AD20);
  }
}

void sub_100727174()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241ADD0))
  {
    std::__shared_mutex_base::__shared_mutex_base(&stru_10241AD28);
    __cxa_atexit((void (*)(void *))sub_1003BE954, &stru_10241AD28, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241ADD0);
  }
}

void sub_100727204(_Unwind_Exception *a1)
{
}

void sub_10072721C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419688, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419688))
  {
    qword_102419670 = 0;
    qword_102419678 = 0;
    qword_102419680 = 0;
    uint64_t v0 = operator new(6uLL);
    qword_102419678 = (uint64_t)(v0 + 3);
    qword_102419680 = (uint64_t)(v0 + 3);
    *(_DWORD *)uint64_t v0 = 151521030;
    v0[2] = 3082;
    qword_102419670 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_1001C6FD8, &qword_102419670, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419688);
  }
}

void sub_1007272D4(_Unwind_Exception *a1)
{
}

void sub_1007272EC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1024196A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1024196A8))
  {
    qword_102419690 = 0;
    qword_102419698 = 0;
    qword_1024196A0 = 0;
    uint64_t v0 = operator new(2uLL);
    qword_102419690 = (uint64_t)v0;
    _WORD *v0 = 256;
    qword_102419698 = (uint64_t)(v0 + 1);
    qword_1024196A0 = (uint64_t)(v0 + 1);
    __cxa_atexit((void (*)(void *))sub_1001C700C, &qword_102419690, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1024196A8);
  }
}

void sub_100727394(_Unwind_Exception *a1)
{
}

uint64_t sub_1007273AC()
{
  sub_100134750(qword_10247D2A8, "t");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247D2A8, (void *)&_mh_execute_header);
  sub_100134750(qword_10247D2C0, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");

  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247D2C0, (void *)&_mh_execute_header);
}

uint64_t sub_1007286F4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    int v5 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v8 = a2;
      __int16 v9 = 2048;
      uint64_t v10 = 2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Assertion failed: i < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMVector.h, line 277,invalid index %zu >= %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      int v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T &CMVector<float, 2>::operator[](const size_t) [T = float, N = 2]", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
  }
  return a1 + 4 * a2;
}

uint64_t sub_1007288D0(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a2 >= 2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    uint64_t v7 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v12 = a2;
      __int16 v13 = 2048;
      uint64_t v14 = 2;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Assertion failed: row < M, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMatrix.h, line 77,invalid row %zu > %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      unint64_t v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T &CMMatrix<float, 2>::operator()(size_t, size_t) [T = float, M = 2, N = 2]", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
  }
  if (a3 >= 2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    __int16 v9 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v12 = a3;
      __int16 v13 = 2048;
      uint64_t v14 = 2;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMatrix.h, line 78,invalid col %zu > %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T &CMMatrix<float, 2>::operator()(size_t, size_t) [T = float, M = 2, N = 2]", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
  return a1 + 4 * (a2 + 2 * a3);
}

void sub_100728CCC(uint64_t a1, xpc_activity_t activity)
{
  if (!xpc_activity_get_state(activity))
  {
    [*(id *)(a1 + 32) _setXPCCriteriaForActivity:activity withDescription:*(void *)(a1 + 40)];
    if (qword_1024191E0 != -1) {
      dispatch_once(&qword_1024191E0, &stru_1022C6180);
    }
    int v4 = qword_1024191E8;
    if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 40);
      *(_DWORD *)uint64_t buf = 138412290;
      uint64_t v10 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Register %@ on DAS", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191E0 != -1) {
        dispatch_once(&qword_1024191E0, &stru_1022C6180);
      }
      uint64_t v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "-[CLElevationProfileEstimator registerAndRunXPCActivity:withActivityIdentifier:andDescription:]_block_invoke", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
  }
  if (xpc_activity_get_state(activity) == 2)
  {
    if (xpc_activity_set_state(activity, 4))
    {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
    else
    {
      if (qword_1024191E0 != -1) {
        dispatch_once(&qword_1024191E0, &stru_1022C6180);
      }
      int v6 = qword_1024191E8;
      if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Error: cannot set xpc activity state to CONTINUE", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024191E0 != -1) {
          dispatch_once(&qword_1024191E0, &stru_1022C6180);
        }
        unint64_t v8 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLElevationProfileEstimator registerAndRunXPCActivity:withActivityIdentifier:andDescription:]_block_invoke", "%s\n", v8);
        if (v8 != (char *)buf) {
          free(v8);
        }
      }
    }
  }
}

NSDictionary *sub_100729208(uint64_t a1)
{
  CFStringRef v2 = @"xpcTaskWaitingTime";
  id v3 = +[NSNumber numberWithDouble:*(double *)(a1 + 32)];
  return +[NSDictionary dictionaryWithObjects:&v3 forKeys:&v2 count:1];
}

id sub_100729354(uint64_t a1)
{
  if (qword_1024191E0 != -1) {
    dispatch_once(&qword_1024191E0, &stru_1022C6180);
  }
  CFStringRef v2 = qword_1024191E8;
  if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 48);
    uint64_t v4 = *(void *)(a1 + 56);
    *(_DWORD *)uint64_t buf = 134218240;
    uint64_t v9 = v3;
    __int16 v10 = 2048;
    uint64_t v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "start to compute MSLP,startTime,%f,endTime,%f", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191E0 != -1) {
      dispatch_once(&qword_1024191E0, &stru_1022C6180);
    }
    uint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "-[CLElevationProfileEstimator computeHistoricalMeanSeaLevelPressureWithStartTime:andEndTime:andCompletionBlock:]_block_invoke", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  id v5 = objc_alloc_init((Class)NSMutableArray);
  objc_alloc_init((Class)NSMutableArray);
  return [*(id *)(a1 + 32) _elevationBatchProcessingWithStartTime:v5 andEndTime:*(double *)(a1 + 48) andLocationBuffer:*(double *)(a1 + 56) andKSEstimatesBuffer:*(double *)(a1 + 64) andTaskType:*(int *)(a1 + 72) andCompletionBlock:*(void (^)(void))(a1 + 80)];
}

id sub_1007295AC(uint64_t a1)
{
  [*(id *)(a1 + 32) sendAnalyticsEventWithXpcTaskWaitingTime:(CFAbsoluteTimeGetCurrent() - *(double *)(*(void *)(a1 + 32) + 24)) / 60.0];
  [*(id *)(a1 + 32) _sendHistoricalMeanSeaLevelPressureWithKSEstimatesBuffer:*(void *)(a1 + 40) andCompletionBlock:*(void *)(a1 + 64)];

  if (xpc_activity_set_state(*(xpc_activity_t *)(a1 + 56), 5))
  {
    if (qword_1024191E0 != -1) {
      dispatch_once(&qword_1024191E0, &stru_1022C6180);
    }
    CFStringRef v2 = qword_1024191E8;
    if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Finish MSLP estimation scheduled by DAS", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191E0 == -1)
      {
LABEL_16:
        id v5 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLElevationProfileEstimator computeHistoricalMeanSeaLevelPressureWithStartTime:andEndTime:andCompletionBlock:]_block_invoke", "%s\n", v5);
        if (v5 != (char *)buf) {
          free(v5);
        }
        return [*(id *)(*(void *)(a1 + 32) + 88) setRegisteredXPCTaskMSLP:0];
      }
LABEL_18:
      dispatch_once(&qword_1024191E0, &stru_1022C6180);
      goto LABEL_16;
    }
  }
  else
  {
    if (qword_1024191E0 != -1) {
      dispatch_once(&qword_1024191E0, &stru_1022C6180);
    }
    uint64_t v3 = qword_1024191E8;
    if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Error: cannot set xpc activity state to Done", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191E0 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    }
  }
  return [*(id *)(*(void *)(a1 + 32) + 88) setRegisteredXPCTaskMSLP:0];
}

void sub_100729C44(uint64_t a1, void *a2)
{
  if (!a2)
  {
    id v4 = objc_alloc_init((Class)NSMutableArray);
    double v5 = *(double *)(a1 + 80) + 29.72;
    double v6 = *(double *)(a1 + 88) + -29.72;
    LODWORD(v7) = vcvtad_u64_f64((v5 - v6 + v5 - v6) / 2.56);
    [*(id *)(*(void *)(a1 + 40) + 88) fetchElevationsWithStartTime:+[NSNumber numberWithUnsignedInt:](NSNumber, "numberWithUnsignedInt:", v7) andEndTime:v4 andBatchSize:v6 andElevationArray:v5];
    int v100 = v4;
    if (*(unsigned char *)(*(void *)(a1 + 40) + 40))
    {
      long long v107 = 0u;
      long long v108 = 0u;
      long long v105 = 0u;
      long long v106 = 0u;
      unint64_t v8 = *(void **)(a1 + 32);
      id v9 = [v8 countByEnumeratingWithState:&v105 objects:v138 count:16];
      if (v9)
      {
        id v10 = v9;
        uint64_t v11 = *(void *)v106;
        do
        {
          unint64_t v12 = 0;
          do
          {
            if (*(void *)v106 != v11) {
              objc_enumerationMutation(v8);
            }
            __int16 v13 = *(void **)(*((void *)&v105 + 1) + 8 * (void)v12);
            if (qword_1024191E0 != -1) {
              dispatch_once(&qword_1024191E0, &stru_1022C6180);
            }
            uint64_t v14 = qword_1024191E8;
            if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEBUG))
            {
              int v15 = *(void **)(a1 + 96);
              [v13 timestamp];
              uint64_t v17 = v16;
              [v13 elevation];
              uint64_t v19 = v18;
              [v13 verticalAccuracy];
              uint64_t v21 = v20;
              [v13 latitude];
              uint64_t v23 = v22;
              [v13 longitude];
              uint64_t v25 = v24;
              [v13 horizontalAccuracy];
              *(_DWORD *)uint64_t buf = 134219520;
              id v125 = v15;
              __int16 v126 = 2048;
              uint64_t v127 = v17;
              __int16 v128 = 2048;
              uint64_t v129 = v19;
              __int16 v130 = 2048;
              uint64_t v131 = v21;
              __int16 v132 = 2048;
              uint64_t v133 = v23;
              __int16 v134 = 2048;
              uint64_t v135 = v25;
              __int16 v136 = 2048;
              uint64_t v137 = v26;
              _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "enumerate locations fetched from DB,taskType,%lu,timestamp,%f,elevation,%f,verticalAccuracy,%f,lat,%f,lon,%f,horizontalAccuracy,%f", buf, 0x48u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_1024191E0 != -1) {
                dispatch_once(&qword_1024191E0, &stru_1022C6180);
              }
              __int16 v27 = *(void **)(a1 + 96);
              [v13 timestamp];
              uint64_t v29 = v28;
              [v13 elevation];
              uint64_t v31 = v30;
              [v13 verticalAccuracy];
              uint64_t v33 = v32;
              [v13 latitude];
              uint64_t v35 = v34;
              [v13 longitude];
              uint64_t v37 = v36;
              [v13 horizontalAccuracy];
              int v110 = 134219520;
              id v111 = v27;
              __int16 v112 = 2048;
              uint64_t v113 = v29;
              __int16 v114 = 2048;
              uint64_t v115 = v31;
              __int16 v116 = 2048;
              uint64_t v117 = v33;
              __int16 v118 = 2048;
              uint64_t v119 = v35;
              __int16 v120 = 2048;
              uint64_t v121 = v37;
              __int16 v122 = 2048;
              uint64_t v123 = v38;
              LODWORD(v99) = 72;
              __int16 v39 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "-[CLElevationProfileEstimator _gatherLocationArray:andElevationArray:andTaskType:withStartTime:andEndTime:andVisitArray:andVisitSearchStartIndex:andCompletionBlock:]_block_invoke", "%s\n", v39);
              if (v39 != (char *)buf) {
                free(v39);
              }
            }
            unint64_t v12 = (char *)v12 + 1;
          }
          while (v10 != v12);
          id v40 = [v8 countByEnumeratingWithState:&v105 objects:v138 count:16];
          id v10 = v40;
        }
        while (v40);
      }
      long long v103 = 0u;
      long long v104 = 0u;
      long long v101 = 0u;
      long long v102 = 0u;
      id v4 = v100;
      id v41 = [v100 countByEnumeratingWithState:&v101 objects:v109 count:16];
      if (v41)
      {
        id v42 = v41;
        uint64_t v43 = *(void *)v102;
        do
        {
          uint64_t v44 = 0;
          do
          {
            if (*(void *)v102 != v43) {
              objc_enumerationMutation(v4);
            }
            int v45 = *(void **)(*((void *)&v101 + 1) + 8 * (void)v44);
            double v46 = *(double *)(a1 + 88);
            [v45 timestamp];
            if (v46 < v47)
            {
              [v45 timestamp];
              if (v48 < *(double *)(a1 + 80))
              {
                if (qword_1024191E0 != -1) {
                  dispatch_once(&qword_1024191E0, &stru_1022C6180);
                }
                int v49 = qword_1024191E8;
                if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEBUG))
                {
                  int v50 = *(void **)(a1 + 96);
                  [v45 timestamp];
                  uint64_t v52 = v51;
                  [v45 pressure];
                  *(_DWORD *)uint64_t buf = 134218496;
                  id v125 = v50;
                  id v4 = v100;
                  __int16 v126 = 2048;
                  uint64_t v127 = v52;
                  __int16 v128 = 2048;
                  uint64_t v129 = v53;
                  _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEBUG, "enumerate elevations fetched from DB,taskType,%lu,timestamp,%f,pressure,%f", buf, 0x20u);
                }
                if (sub_10013D1A0(115, 2))
                {
                  bzero(buf, 0x65CuLL);
                  if (qword_1024191E0 != -1) {
                    dispatch_once(&qword_1024191E0, &stru_1022C6180);
                  }
                  int v54 = *(void **)(a1 + 96);
                  [v45 timestamp];
                  uint64_t v56 = v55;
                  [v45 pressure];
                  int v110 = 134218496;
                  id v111 = v54;
                  __int16 v112 = 2048;
                  uint64_t v113 = v56;
                  __int16 v114 = 2048;
                  uint64_t v115 = v57;
                  LODWORD(v99) = 32;
                  int v58 = (char *)_os_log_send_and_compose_impl();
                  sub_1004BA5E4("Generic", 1, 0, 2, "-[CLElevationProfileEstimator _gatherLocationArray:andElevationArray:andTaskType:withStartTime:andEndTime:andVisitArray:andVisitSearchStartIndex:andCompletionBlock:]_block_invoke", "%s\n", v58);
                  if (v58 != (char *)buf) {
                    free(v58);
                  }
                  id v4 = v100;
                }
              }
            }
            uint64_t v44 = (char *)v44 + 1;
          }
          while (v42 != v44);
          id v59 = [v4 countByEnumeratingWithState:&v101 objects:v109 count:16];
          id v42 = v59;
        }
        while (v59);
      }
    }
    id v60 = [*(id *)(a1 + 32) count];
    if (v60)
    {
      id v61 = v60;
      if (qword_1024191E0 != -1) {
        dispatch_once(&qword_1024191E0, &stru_1022C6180);
      }
      int v62 = qword_1024191E8;
      if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEFAULT))
      {
        [objc_msgSend(*(id *)(a1 + 32), "firstObject") timestamp];
        uint64_t v64 = v63;
        [objc_msgSend(*(id *)(a1 + 32), "firstObject") elevation];
        uint64_t v66 = v65;
        [objc_msgSend(*(id *)(a1 + 32), "lastObject") timestamp];
        uint64_t v68 = v67;
        [objc_msgSend(*(id *)(a1 + 32), "lastObject") elevation];
        *(_DWORD *)uint64_t buf = 134350080;
        id v125 = v61;
        __int16 v126 = 2050;
        uint64_t v127 = v64;
        __int16 v128 = 2048;
        uint64_t v129 = v66;
        __int16 v130 = 2050;
        uint64_t v131 = v68;
        __int16 v132 = 2048;
        uint64_t v133 = v69;
        _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEFAULT, "total locations,%{public}lu,first timestamp,%{public}f,first elevation,%f,last timestamp,%{public}f,last elevation,%f", buf, 0x34u);
      }
      id v4 = v100;
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024191E0 != -1) {
          dispatch_once(&qword_1024191E0, &stru_1022C6180);
        }
        [objc_msgSend(*(id *)(a1 + 32), "firstObject") timestamp];
        uint64_t v71 = v70;
        [objc_msgSend(*(id *)(a1 + 32), "firstObject") elevation];
        uint64_t v73 = v72;
        [objc_msgSend(*(id *)(a1 + 32), "lastObject") timestamp];
        uint64_t v75 = v74;
        [objc_msgSend(*(id *)(a1 + 32), "lastObject") elevation];
        int v110 = 134350080;
        id v111 = v61;
        __int16 v112 = 2050;
        uint64_t v113 = v71;
        __int16 v114 = 2048;
        uint64_t v115 = v73;
        __int16 v116 = 2050;
        uint64_t v117 = v75;
        __int16 v118 = 2048;
        uint64_t v119 = v76;
        LODWORD(v99) = 52;
        int v77 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLElevationProfileEstimator _gatherLocationArray:andElevationArray:andTaskType:withStartTime:andEndTime:andVisitArray:andVisitSearchStartIndex:andCompletionBlock:]_block_invoke", "%s\n", v77);
        if (v77 == (char *)buf) {
          goto LABEL_53;
        }
        goto LABEL_52;
      }
    }
    else
    {
      if (qword_1024191E0 != -1) {
        dispatch_once(&qword_1024191E0, &stru_1022C6180);
      }
      int v78 = qword_1024191E8;
      if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v78, OS_LOG_TYPE_DEFAULT, "total locations,0", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024191E0 != -1) {
          dispatch_once(&qword_1024191E0, &stru_1022C6180);
        }
        LOWORD(v110) = 0;
        LODWORD(v99) = 2;
        int v77 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLElevationProfileEstimator _gatherLocationArray:andElevationArray:andTaskType:withStartTime:andEndTime:andVisitArray:andVisitSearchStartIndex:andCompletionBlock:]_block_invoke", "%s\n", v77);
        if (v77 == (char *)buf) {
          goto LABEL_53;
        }
LABEL_52:
        free(v77);
LABEL_53:
        id v4 = v100;
      }
    }
    id v79 = [v4 count];
    if (v79)
    {
      id v80 = v79;
      if (qword_1024191E0 != -1) {
        dispatch_once(&qword_1024191E0, &stru_1022C6180);
      }
      int v81 = qword_1024191E8;
      if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEFAULT))
      {
        [objc_msgSend(v100, "firstObject") timestamp];
        uint64_t v83 = v82;
        [objc_msgSend(v100, "firstObject") pressure];
        uint64_t v85 = v84;
        [objc_msgSend(v100, "lastObject") timestamp];
        uint64_t v87 = v86;
        [objc_msgSend(v100, "lastObject") pressure];
        *(_DWORD *)uint64_t buf = 134350080;
        id v125 = v80;
        __int16 v126 = 2050;
        uint64_t v127 = v83;
        __int16 v128 = 2048;
        uint64_t v129 = v85;
        __int16 v130 = 2050;
        uint64_t v131 = v87;
        __int16 v132 = 2048;
        uint64_t v133 = v88;
        _os_log_impl((void *)&_mh_execute_header, v81, OS_LOG_TYPE_DEFAULT, "total elevations,%{public}lu,first timestamp,%{public}f,first pressure,%f,last timestamp,%{public}f,last pressure,%f", buf, 0x34u);
      }
      id v4 = v100;
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_73;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1024191E0 != -1) {
        dispatch_once(&qword_1024191E0, &stru_1022C6180);
      }
      [objc_msgSend(v100, "firstObject") timestamp];
      uint64_t v90 = v89;
      [objc_msgSend(v100, "firstObject") pressure];
      uint64_t v92 = v91;
      [objc_msgSend(v100, "lastObject") timestamp];
      uint64_t v94 = v93;
      [objc_msgSend(v100, "lastObject") pressure];
      int v110 = 134350080;
      id v111 = v80;
      __int16 v112 = 2050;
      uint64_t v113 = v90;
      __int16 v114 = 2048;
      uint64_t v115 = v92;
      __int16 v116 = 2050;
      uint64_t v117 = v94;
      __int16 v118 = 2048;
      uint64_t v119 = v95;
      LODWORD(v99) = 52;
    }
    else
    {
      if (qword_1024191E0 != -1) {
        dispatch_once(&qword_1024191E0, &stru_1022C6180);
      }
      int v96 = qword_1024191E8;
      if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v96, OS_LOG_TYPE_DEFAULT, "total elevations,0", buf, 2u);
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_73;
      }
      bzero(buf, 0x65CuLL);
      if (qword_1024191E0 != -1) {
        dispatch_once(&qword_1024191E0, &stru_1022C6180);
      }
      LOWORD(v110) = 0;
      LODWORD(v99) = 2;
    }
    int v97 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "-[CLElevationProfileEstimator _gatherLocationArray:andElevationArray:andTaskType:withStartTime:andEndTime:andVisitArray:andVisitSearchStartIndex:andCompletionBlock:]_block_invoke", "%s\n", v97);
    if (v97 != (char *)buf) {
      free(v97);
    }
    id v4 = v100;
LABEL_73:
    LODWORD(v98) = *(_DWORD *)(a1 + 112);
    [*(id *)(a1 + 40) _decimateLocationsWithStartTime:*(void *)(a1 + 48) andEndTime:*(void *)(a1 + 56) andLocationArray:*(void *)(a1 + 32) andElevationArray:v4 andRawLocationArray:*(void *)(a1 + 96) andRawElevationArray:*(void *)(a1 + 64) andTaskType:*(double *)(a1 + 88) andVisitArray:*(double *)(a1 + 80) andVisitSearchStartIndex:v98];

    [*(id *)(a1 + 40) _gatherLocationArray:*(void *)(a1 + 48) andElevationArray:*(void *)(a1 + 56) andTaskType:*(void *)(a1 + 96) withStartTime:*(void *)(a1 + 64) andEndTime:*(unsigned int *)(a1 + 112) andVisitArray:*(void *)(a1 + 72) andVisitSearchStartIndex:*(double *)(a1 + 80) andCompletionBlock:*(double *)(a1 + 104)];
    return;
  }
  NSLog(@"%@", [a2 userInfo]);
  uint64_t v3 = *(void **)(a1 + 32);
}

BOOL sub_10072B6A0(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a2 + 8) - *(float *)(a2 + 4);
  if (v2 < 0.0) {
    float v2 = -v2;
  }
  if (v2 > 1.0e-16) {
    return 0;
  }
  uint64_t v5 = a1 + 8;
  unint64_t v6 = 1;
  while (1)
  {
    float v7 = sub_10072F798(a2, v6, v6);
    if (!v6)
    {
      float v8 = *(float *)sub_10072FAF4(v5, 0, 1uLL);
      float v9 = *(float *)sub_10072FAF4(v5, 0, 1uLL);
      float v7 = v7 + (float)((float)-(float)(v8 * v9) * *(float *)sub_10072FE50(a1, 1uLL));
    }
    *(float *)sub_10072FE50(a1, v6) = v7;
    if (*(float *)sub_10072FE50(a1, v6) <= 0.0) {
      break;
    }
    if (v6)
    {
      float v10 = sub_10072F798(a2, v6 - 1, v6);
      float v11 = v10 / *(float *)sub_10072FE50(a1, v6);
      *(float *)sub_10072FAF4(v5, v6 - 1, v6) = v11;
    }
    if (--v6 == -1) {
      return 1;
    }
  }
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C61C0);
  }
  __int16 v13 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 134217984;
    unint64_t v16 = v6;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "D(%zu) <= 0 non-positive definite matrix!", buf, 0xCu);
  }
  BOOL result = sub_10013D1A0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    uint64_t v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CMFactoredMatrix<float, 2>::factor(const CMMatrix<T, N, N> &) [T = float, N = 2]", "%s\n", v14);
    if (v14 != (char *)buf) {
      free(v14);
    }
    return 0;
  }
  return result;
}

void sub_10072BE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = 0;
  uint64_t v7 = a1 + 8;
  char v8 = 1;
  do
  {
    char v9 = v8;
    float v10 = *(float *)sub_1007288D0(a2, v6, 0);
    float v11 = *(float *)sub_10072FAF4(v7, 0, 1uLL);
    unint64_t v12 = (float *)sub_1007288D0(a2, v6, 1uLL);
    *unint64_t v12 = *v12 + (float)(v10 * v11);
    *(_DWORD *)sub_1007288D0((uint64_t)v49, v6, 1uLL) = 0;
    *(_DWORD *)sub_1007288D0((uint64_t)v49, v6, 0) = 0;
    __int16 v13 = (_DWORD *)sub_1007288D0((uint64_t)v49, v6, v6);
    char v8 = 0;
    *__int16 v13 = 1065353216;
    unint64_t v6 = 1;
  }
  while ((v9 & 1) != 0);
  for (uint64_t i = 1; ; uint64_t i = v16 - 1)
  {
    unint64_t v15 = 0;
    unint64_t v16 = i;
    v54[i] = 0;
    char v17 = 1;
    float v18 = 0.0;
    do
    {
      char v19 = v17;
      float v20 = *(float *)sub_1007288D0(a2, v16, v15);
      float v21 = v20 * *(float *)sub_1007288D0(a2, v16, v15);
      float v22 = v18 + (float)(v21 * *(float *)sub_10072FE50(a1, v15));
      float v23 = *(float *)sub_1007288D0((uint64_t)v49, v16, v15);
      float v24 = v23 * *(float *)sub_1007288D0((uint64_t)v49, v16, v15);
      float v25 = sub_10073002C(a3, v15);
      char v17 = 0;
      float v18 = v22 + (float)(v24 * v25);
      *(float *)&v54[v16] = v18;
      unint64_t v15 = 1;
    }
    while ((v19 & 1) != 0);
    if (v18 <= 0.0) {
      break;
    }
    if (!v16)
    {
      int v45 = v54[0];
      *(_DWORD *)sub_10072FE50(a1, 0) = v45;
      int v46 = v54[1];
      *(_DWORD *)sub_10072FE50(a1, 1uLL) = v46;
      return;
    }
    unint64_t v26 = 0;
    float v27 = 0.0;
    char v28 = 1;
    do
    {
      char v29 = v28;
      float v30 = *(float *)sub_1007288D0(a2, 0, v26);
      float v31 = v30 * *(float *)sub_10072FE50(a1, v26);
      float v32 = v27 + (float)(v31 * *(float *)sub_1007288D0(a2, v16, v26));
      float v33 = *(float *)sub_1007288D0((uint64_t)v49, 0, v26);
      float v34 = v33 * sub_10073002C(a3, v26);
      uint64_t v35 = (float *)sub_1007288D0((uint64_t)v49, v16, v26);
      char v28 = 0;
      float v27 = v32 + (float)(v34 * *v35);
      unint64_t v26 = 1;
    }
    while ((v29 & 1) != 0);
    unint64_t v36 = 0;
    *(float *)sub_10072FAF4(v7, 0, v16) = v27 / v18;
    char v37 = 1;
    do
    {
      char v38 = v37;
      float v39 = *(float *)sub_10072FAF4(v7, 0, v16);
      float v40 = *(float *)sub_1007288D0(a2, v16, v36);
      id v41 = (float *)sub_1007288D0(a2, 0, v36);
      *id v41 = *v41 - (float)(v39 * v40);
      float v42 = *(float *)sub_10072FAF4(v7, 0, v16);
      float v43 = *(float *)sub_1007288D0((uint64_t)v49, v16, v36);
      uint64_t v44 = (float *)sub_1007288D0((uint64_t)v49, 0, v36);
      char v37 = 0;
      *uint64_t v44 = *v44 - (float)(v42 * v43);
      unint64_t v36 = 1;
    }
    while ((v38 & 1) != 0);
  }
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C61C0);
  }
  double v47 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 134217984;
    unint64_t v53 = v16;
    _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEBUG, "D[%zu] <= 0, matrix ! positive definite", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    int v50 = 134217984;
    unint64_t v51 = v16;
    double v48 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CMFactoredMatrix<float, 2>::thorntonTemporalUpdate(CMMatrix<T, N, N> &, const CMVector<T, N> &) [T = float, N = 2]", "%s\n", v48);
    if (v48 != (char *)buf) {
      free(v48);
    }
  }
}

void sub_10072C434(float *a1, uint64_t a2, float *a3, float *a4)
{
  uint64_t v27 = 0;
  uint64_t v8 = (uint64_t)(a1 + 2);
  float v9 = sub_100730208(a2, 0, 0);
  float v10 = v9 * *(float *)sub_10072FE50((uint64_t)a1, 0);
  float v11 = sub_100730208(a2, 0, 1uLL);
  float v12 = sub_100730208(a2, 0, 0);
  float v13 = *(float *)sub_10072FAF4(v8, 0, 1uLL);
  uint64_t v14 = (float *)sub_10072FE50((uint64_t)a1, 1uLL);
  float v15 = *a3 + (float)(v9 * v10);
  if (v15 <= 0.0)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    float v24 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 134217984;
      uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "%zu: alpha <= 0, matrix ! positive definite", buf, 0xCu);
    }
    if (!sub_10013D1A0(115, 2)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    int v28 = 134217984;
    uint64_t v29 = 0;
LABEL_21:
    unint64_t v26 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CMVector<T, N> CMFactoredMatrix<float, 2>::biermanObservationalUpdate(const CMMatrix<T, P, N> &, const CMVector<T, P> &, const CMVector<T, P> &) [T = float, N = 2, P = 1UL]", "%s\n", v26);
    if (v26 != (char *)buf) {
      free(v26);
    }
    return;
  }
  float v16 = v11 + (float)(v12 * v13);
  float v17 = v16 * *v14;
  *a1 = (float)(*a3 * (float)(1.0 / v15)) * *a1;
  float v18 = v15 + (float)(v16 * v17);
  if (v18 > 0.0)
  {
    float v19 = a1[2];
    a1[1] = (float)(v15 * (float)(1.0 / v18)) * a1[1];
    a1[2] = v19 + (float)(v10 * (float)-(float)(v16 * (float)(1.0 / v15)));
    float v20 = v10 + (float)(v17 * v19);
    float v21 = (float)(1.0 / v18) * *a4;
    float v22 = (float *)sub_1007286F4((uint64_t)&v27, 0);
    float *v22 = *v22 + (float)(v21 * v20);
    float v23 = (float *)sub_1007286F4((uint64_t)&v27, 1uLL);
    float *v23 = *v23 + (float)(v21 * v17);
    return;
  }
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C61C0);
  }
  float v25 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 134217984;
    uint64_t v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "%zu: alpha <= 0, matrix ! positive definite", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    int v28 = 134217984;
    uint64_t v29 = 0;
    goto LABEL_21;
  }
}

float sub_10072D7DC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0;
  char v5 = 1;
  do
  {
    unint64_t v6 = 0;
    char v7 = v5;
    char v8 = 1;
    do
    {
      char v9 = v8;
      float v10 = sub_10072F798(a1, v4, 0);
      float v11 = v10 * sub_10072F798(a2, 0, v6);
      *(float *)sub_1007288D0((uint64_t)&v16, v4, v6) = v11;
      float v12 = sub_10072F798(a1, v4, 1uLL);
      float v13 = sub_10072F798(a2, 1uLL, v6);
      uint64_t v14 = (float *)sub_1007288D0((uint64_t)&v16, v4, v6);
      char v8 = 0;
      *uint64_t v14 = *v14 + (float)(v12 * v13);
      unint64_t v6 = 1;
    }
    while ((v9 & 1) != 0);
    char v5 = 0;
    unint64_t v4 = 1;
  }
  while ((v7 & 1) != 0);
  return v16;
}

float *sub_10072D8D8(uint64_t a1, float a2, float a3, float a4, float a5)
{
  *(float *)float v11 = a2;
  *(float *)&v11[1] = a3;
  *(float *)&uint64_t v11[2] = a4;
  *(float *)&_OWORD v11[3] = a5;
  float v6 = sub_10072F798((uint64_t)v11, 0, 0);
  *(float *)sub_1007288D0(a1, 0, 0) = v6;
  float v7 = sub_10072F798((uint64_t)v11, 0, 1uLL);
  *(float *)sub_1007288D0(a1, 1uLL, 0) = v7;
  float v8 = sub_10072F798((uint64_t)v11, 1uLL, 0);
  *(float *)sub_1007288D0(a1, 0, 1uLL) = v8;
  float v9 = sub_10072F798((uint64_t)v11, 1uLL, 1uLL);
  BOOL result = (float *)sub_1007288D0(a1, 1uLL, 1uLL);
  *BOOL result = v9;
  return result;
}

BOOL sub_10072D9B0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = 0;
  for (char i = 1; ; char i = 0)
  {
    char v6 = i;
    float v7 = sub_100730BF4(a1, v4);
    if (v7 == 0.0) {
      break;
    }
    unint64_t v4 = 1;
    if ((v6 & 1) == 0)
    {
      float v8 = *(float *)sub_1007286F4(a2, 1uLL);
      float v9 = sub_100730898(a1 + 8, 0, 1uLL);
      float v10 = (float *)sub_1007286F4(a2, 0);
      float *v10 = *v10 - (float)(v8 * v9);
      float v11 = sub_100730BF4(a1, 0);
      float v12 = (float *)sub_1007286F4(a2, 0);
      *float v12 = *v12 / v11;
      float v13 = sub_100730BF4(a1, 1uLL);
      uint64_t v14 = (float *)sub_1007286F4(a2, 1uLL);
      *uint64_t v14 = *v14 / v13;
      float v15 = *(float *)sub_1007286F4(a2, 0);
      *(float *)(a2 + 4) = *(float *)(a2 + 4) - (float)(v15 * sub_100730898(a1 + 8, 0, 1uLL));
      return v7 != 0.0;
    }
  }
  if (qword_102419630 != -1) {
    dispatch_once(&qword_102419630, &stru_1022C61C0);
  }
  float v16 = qword_102419638;
  if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)uint64_t buf = 134217984;
    unint64_t v20 = v4;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "D[%zu] == 0, semidefinite matrix!", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    float v18 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CMFactoredMatrix<float, 2>::solve(CMVector<T, N> &) const [T = float, N = 2]", "%s\n", v18);
    if (v18 != (char *)buf) {
      free(v18);
    }
  }
  return v7 != 0.0;
}

float sub_10072DC68(uint64_t a1, float *a2)
{
  unint64_t v4 = 0;
  char v5 = 1;
  do
  {
    char v6 = v5;
    float v7 = sub_10072F798(a1, v4, 0) * *a2;
    *(float *)sub_1007286F4((uint64_t)&v12, v4) = v7;
    float v8 = sub_10072F798(a1, v4, 1uLL);
    float v9 = a2[1];
    float v10 = (float *)sub_1007286F4((uint64_t)&v12, v4);
    char v5 = 0;
    float *v10 = *v10 + (float)(v8 * v9);
    unint64_t v4 = 1;
  }
  while ((v6 & 1) != 0);
  return v12;
}

float sub_10072DD18(uint64_t a1, float a2, float a3, float a4, float a5)
{
  unint64_t v6 = 0;
  *(float *)float v8 = a2;
  *(float *)&v8[1] = a3;
  *(float *)&v8[2] = a4;
  *(float *)&v8[3] = a5;
  do
  {
    *(float *)&v8[v6] = sub_100730DD0(a1, v6) + *(float *)&v8[v6];
    ++v6;
  }
  while (v6 != 4);
  return *(float *)v8;
}

float sub_10072DD84(uint64_t a1, float a2, float a3, float a4, float a5)
{
  unint64_t v6 = 0;
  *(float *)float v8 = a2;
  *(float *)&v8[1] = a3;
  *(float *)&v8[2] = a4;
  *(float *)&v8[3] = a5;
  do
  {
    *(float *)&v8[v6] = *(float *)&v8[v6] - sub_100730DD0(a1, v6);
    ++v6;
  }
  while (v6 != 4);
  return *(float *)v8;
}

void sub_10072E1D4(uint64_t a1, int a2)
{
  if (a2 == 0x7FFFFFFF)
  {
    if (qword_1024191E0 != -1) {
      dispatch_once(&qword_1024191E0, &stru_1022C6180);
    }
    uint64_t v3 = qword_1024191E8;
    if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v4 = *(void *)(a1 + 72);
      uint64_t v5 = *(void *)(a1 + 80);
      *(_DWORD *)uint64_t buf = 134218240;
      uint64_t v12 = v4;
      __int16 v13 = 2048;
      uint64_t v14 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "elevation batch processing returns early due to an error in querying visit with startTime,%f,endTime,%f", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191E0 != -1) {
        dispatch_once(&qword_1024191E0, &stru_1022C6180);
      }
      float v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "-[CLElevationProfileEstimator _elevationBatchProcessingWithStartTime:andEndTime:andLocationBuffer:andKSEstimatesBuffer:andTaskType:andCompletionBlock:]_block_invoke", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }

    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  }
  else
  {
    id v6 = objc_alloc_init((Class)NSMutableArray);
    if (qword_1024191E0 != -1) {
      dispatch_once(&qword_1024191E0, &stru_1022C6180);
    }
    float v7 = qword_1024191E8;
    if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEBUG))
    {
      unsigned int v8 = [*(id *)(a1 + 32) count];
      *(_DWORD *)uint64_t buf = 67109120;
      LODWORD(v12) = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "historicalVisits array count,count,%d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191E0 != -1) {
        dispatch_once(&qword_1024191E0, &stru_1022C6180);
      }
      [*(id *)(a1 + 32) count];
      float v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "-[CLElevationProfileEstimator _elevationBatchProcessingWithStartTime:andEndTime:andLocationBuffer:andKSEstimatesBuffer:andTaskType:andCompletionBlock:]_block_invoke", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
    [*(id *)(a1 + 40) _gatherLocationArray:*(void *)(a1 + 48) andElevationArray:v6 andTaskType:*(void *)(a1 + 40) withStartTime:*(void *)(a1 + 48) andEndTime:*(void *)(a1 + 48) andVisitArray:*(void *)(a1 + 48) andVisitSearchStartIndex:*(void *)(a1 + 48) andCompletionBlock:*(void *)(a1 + 48)];
  }
}

uint64_t sub_10072E5C8(uint64_t a1)
{
  [*(id *)(a1 + 40) _alignElevationArray:*(void *)(a1 + 48) andLocationArray:*(void *)(a1 + 56)];
  [*(id *)(a1 + 40) _logValuesOfLocationArray:*(void *)(a1 + 56) andElevationArray:*(void *)(a1 + 48) andTaskType:*(void *)(a1 + 80)];
  if ([*(id *)(a1 + 56) count] && objc_msgSend(*(id *)(a1 + 48), "count"))
  {
    id v2 = objc_alloc_init((Class)NSMutableArray);
    char v3 = 0;
    char v4 = 1;
    do
    {
      char v5 = v4;
      if (![*(id *)(a1 + 40) _forwardProcessingWithLocationArray:*(void *)(a1 + 56) andElevationArray:*(void *)(a1 + 48) andKFEstimatesBuffer:v2 andKeepAllLocations:v3 & 1 andTaskType:*(void *)(a1 + 80)])break; {
      [v2 removeAllObjects];
      }
      char v4 = 0;
      char v3 = 1;
    }
    while ((v5 & 1) != 0);
    [*(id *)(a1 + 56) removeAllObjects];
    [*(id *)(a1 + 48) removeAllObjects];
    [*(id *)(a1 + 40) _backwardProcessingWithKFEstimatesBuffer:v2 andKSEstimatesBuffer:*(void *)(a1 + 64)];
  }
  else
  {
    if (qword_1024191E0 != -1) {
      dispatch_once(&qword_1024191E0, &stru_1022C6180);
    }
    id v6 = qword_1024191E8;
    if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = *(void *)(a1 + 80);
      uint64_t v8 = *(void *)(a1 + 88);
      uint64_t v9 = *(void *)(a1 + 96);
      id v10 = [*(id *)(a1 + 56) count];
      id v11 = [*(id *)(a1 + 48) count];
      *(_DWORD *)uint64_t buf = 134219008;
      uint64_t v15 = v7;
      __int16 v16 = 2048;
      uint64_t v17 = v8;
      __int16 v18 = 2048;
      uint64_t v19 = v9;
      __int16 v20 = 2048;
      id v21 = v10;
      __int16 v22 = 2048;
      id v23 = v11;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "No data available,taskType,%lu,startTime,%f,endTime,%f,locationCount,%lu,elevationCount,%lu", buf, 0x34u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191E0 != -1) {
        dispatch_once(&qword_1024191E0, &stru_1022C6180);
      }
      [*(id *)(a1 + 56) count];
      [*(id *)(a1 + 48) count];
      __int16 v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "-[CLElevationProfileEstimator _elevationBatchProcessingWithStartTime:andEndTime:andLocationBuffer:andKSEstimatesBuffer:andTaskType:andCompletionBlock:]_block_invoke", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 72) + 16))();
}

id sub_10072E974(uint64_t a1)
{
  if (qword_1024191E0 != -1) {
    dispatch_once(&qword_1024191E0, &stru_1022C6180);
  }
  id v2 = qword_1024191E8;
  if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void *)(a1 + 48);
    *(_DWORD *)uint64_t buf = 134218240;
    uint64_t v9 = v3;
    __int16 v10 = 2048;
    uint64_t v11 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "start to compute elevation profile,startTime,%f,endTime,%f", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024191E0 != -1) {
      dispatch_once(&qword_1024191E0, &stru_1022C6180);
    }
    uint64_t v7 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "-[CLElevationProfileEstimator computeElevationProfileWithStartTime:andEndTime:]_block_invoke", "%s\n", v7);
    if (v7 != (char *)buf) {
      free(v7);
    }
  }
  id v5 = objc_alloc_init((Class)NSMutableArray);
  objc_alloc_init((Class)NSMutableArray);
  return [*(id *)(a1 + 32) _elevationBatchProcessingWithStartTime:v5 andEndTime:*(double *)(a1 + 40) andLocationBuffer:*(double *)(a1 + 48) andKSEstimatesBuffer:*(double *)(a1 + 56) andTaskType:*(int *)(a1 + 64) andCompletionBlock:*(void (^)(void))(a1 + 72)];
}

void sub_10072EBC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 88);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  void v4[2] = sub_10072EC58;
  void v4[3] = &unk_10229FF28;
  long long v5 = *(_OWORD *)(a1 + 40);
  uint64_t v6 = v2;
  [v3 sendElevationsFromEstimates:(void)v5 withCompletionBlock:v4];
}

id sub_10072EC58(uint64_t a1)
{
  if (xpc_activity_set_state(*(xpc_activity_t *)(a1 + 40), 5))
  {
    if (qword_1024191E0 != -1) {
      dispatch_once(&qword_1024191E0, &stru_1022C6180);
    }
    uint64_t v2 = qword_1024191E8;
    if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Finish elevation profile calculation scheduled by DAS", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191E0 == -1)
      {
LABEL_16:
        long long v5 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLElevationProfileEstimator computeElevationProfileWithStartTime:andEndTime:]_block_invoke", "%s\n", v5);
        if (v5 != (char *)buf) {
          free(v5);
        }
        return [*(id *)(*(void *)(a1 + 48) + 88) setRegisteredXPCTaskElevationProfile:0];
      }
LABEL_18:
      dispatch_once(&qword_1024191E0, &stru_1022C6180);
      goto LABEL_16;
    }
  }
  else
  {
    if (qword_1024191E0 != -1) {
      dispatch_once(&qword_1024191E0, &stru_1022C6180);
    }
    uint64_t v3 = qword_1024191E8;
    if (os_log_type_enabled((os_log_t)qword_1024191E8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Error: cannot set xpc activity state to Done", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191E0 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    }
  }
  return [*(id *)(*(void *)(a1 + 48) + 88) setRegisteredXPCTaskElevationProfile:0];
}

void sub_10072F708(id a1)
{
  qword_1024191E8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Altimeter");
}

void sub_10072F738(id a1)
{
  qword_1024190D8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pressure");
}

void sub_10072F768(id a1)
{
  qword_102419638 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

float sub_10072F798(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a2 >= 2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    uint64_t v7 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v12 = a2;
      __int16 v13 = 2048;
      uint64_t v14 = 2;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Assertion failed: row < M, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMatrix.h, line 70,invalid row %zu > %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      uint64_t v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T CMMatrix<float, 2>::operator()(size_t, size_t) const [T = float, M = 2, N = 2]", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
  }
  if (a3 >= 2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    uint64_t v9 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v12 = a3;
      __int16 v13 = 2048;
      uint64_t v14 = 2;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMatrix.h, line 71,invalid col %zu > %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      __int16 v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T CMMatrix<float, 2>::operator()(size_t, size_t) const [T = float, M = 2, N = 2]", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
  return *(float *)(a1 + 4 * (a2 + 2 * a3));
}

uint64_t sub_10072FAF4(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a3 >= 2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    uint64_t v7 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v12 = a3;
      __int16 v13 = 2048;
      uint64_t v14 = 2;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h, line 237,invalid col %zu > %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      uint64_t v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T &CMFactoredMatrix<float, 2>::UnitaryUpperTriangularMatrix::operator()(size_t, size_t) [T = float, N = 2]", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
  }
  if (a3 <= a2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    uint64_t v9 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v12 = a3;
      __int16 v13 = 2048;
      uint64_t v14 = a2;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "Assertion failed: col > row, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h, line 238,invalid element %zu <= %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      __int16 v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T &CMFactoredMatrix<float, 2>::UnitaryUpperTriangularMatrix::operator()(size_t, size_t) [T = float, N = 2]", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
  return a1 + 4 * (a2 + (((a3 - 1) * a3) >> 1));
}

uint64_t sub_10072FE50(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    long long v5 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v8 = a2;
      __int16 v9 = 2048;
      uint64_t v10 = 2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Assertion failed: row < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h, line 191,invalid row %zu > %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      uint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T &CMFactoredMatrix<float, 2>::DiagonalMatrix::operator()(size_t) [T = float, N = 2]", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
  }
  return a1 + 4 * a2;
}

float sub_10073002C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    long long v5 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v8 = a2;
      __int16 v9 = 2048;
      uint64_t v10 = 2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Assertion failed: i < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMVector.h, line 271,invalid index %zu >= %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      uint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T CMVector<float, 2>::operator[](const size_t) const [T = float, N = 2]", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
  }
  return *(float *)(a1 + 4 * a2);
}

float sub_100730208(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    uint64_t v7 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v12 = a2;
      __int16 v13 = 2048;
      uint64_t v14 = 1;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Assertion failed: row < M, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMatrix.h, line 70,invalid row %zu > %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      unint64_t v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T CMMatrix<float, 1, 2>::operator()(size_t, size_t) const [T = float, M = 1, N = 2]", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
  }
  if (a3 >= 2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    __int16 v9 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v12 = a3;
      __int16 v13 = 2048;
      uint64_t v14 = 2;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMatrix.h, line 71,invalid col %zu > %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T CMMatrix<float, 1, 2>::operator()(size_t, size_t) const [T = float, M = 1, N = 2]", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
  return *(float *)(a1 + 4 * (a3 + a2));
}

float *sub_100730560(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a3 | a2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    unint64_t v12 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_FAULT, "Assertion failed: i0 < N-Ni+1 && j0 < N-Nj+1, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h, line 302,indices exceed factored matrix size.", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      __int16 v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "CMMatrix<T, Ni, Nj> CMFactoredMatrix<float, 2>::submatrix(size_t, size_t) const [T = float, N = 2, Nchar i = 2UL, Nj = 2UL]", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
  }
  float v6 = sub_1007307C4(a1, a2, a3);
  *(float *)sub_1007288D0((uint64_t)&v14, 0, 0) = v6;
  float v7 = sub_1007307C4(a1, a2, a3 + 1);
  *(float *)sub_1007288D0((uint64_t)&v14, 0, 1uLL) = v7;
  unint64_t v8 = a2 + 1;
  float v9 = sub_1007307C4(a1, v8, a3);
  *(float *)sub_1007288D0((uint64_t)&v14, 1uLL, 0) = v9;
  float v10 = sub_1007307C4(a1, v8, a3 + 1);
  BOOL result = (float *)sub_1007288D0((uint64_t)&v14, 1uLL, 1uLL);
  *BOOL result = v10;
  return result;
}

float sub_1007307C4(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a2 <= a3) {
    unint64_t v3 = a3;
  }
  else {
    unint64_t v3 = a2;
  }
  float v4 = 0.0;
  if (v3 <= 1)
  {
    uint64_t v8 = a1 + 8;
    do
    {
      unint64_t v9 = v3;
      float v10 = 1.0;
      float v11 = 1.0;
      if (v3 != a3)
      {
        float v11 = 0.0;
        if (v3 > a3) {
          float v11 = sub_100730898(v8, 0, v3);
        }
      }
      if (v9 != a2)
      {
        float v10 = 0.0;
        if (v9 > a2) {
          float v10 = sub_100730898(v8, 0, v9);
        }
      }
      float v4 = v4 + (float)((float)(v10 * sub_100730BF4(a1, v9)) * v11);
      unint64_t v3 = 1;
    }
    while (!v9);
  }
  return v4;
}

float sub_100730898(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (a3 >= 2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    float v7 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v12 = a3;
      __int16 v13 = 2048;
      uint64_t v14 = 2;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Assertion failed: col < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h, line 231,invalid col %zu > %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      uint64_t v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T CMFactoredMatrix<float, 2>::UnitaryUpperTriangularMatrix::operator()(size_t, size_t) const [T = float, N = 2]", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
  }
  if (a3 <= a2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    unint64_t v9 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v12 = a3;
      __int16 v13 = 2048;
      uint64_t v14 = a2;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "Assertion failed: col > row, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h, line 232,invalid element %zu <= %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      float v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T CMFactoredMatrix<float, 2>::UnitaryUpperTriangularMatrix::operator()(size_t, size_t) const [T = float, N = 2]", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
  return *(float *)(a1 + 4 * (a2 + (((a3 - 1) * a3) >> 1)));
}

float sub_100730BF4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    long long v5 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v8 = a2;
      __int16 v9 = 2048;
      uint64_t v10 = 2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Assertion failed: row < N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMFactoredMatrix.h, line 186,invalid row %zu > %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      float v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T CMFactoredMatrix<float, 2>::DiagonalMatrix::operator()(size_t) const [T = float, N = 2]", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
  }
  return *(float *)(a1 + 4 * a2);
}

float sub_100730DD0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022C61C0);
    }
    long long v5 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)uint64_t buf = 134218240;
      unint64_t v8 = a2;
      __int16 v9 = 2048;
      uint64_t v10 = 4;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_FAULT, "Assertion failed: ldx < M*N, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/Math/CMMatrix.h, line 84,invalid element %zu >= %zu.", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022C61C0);
      }
      float v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "T CMMatrix<float, 2>::operator[](size_t) const [T = float, M = 2, N = 2]", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
  }
  return *(float *)(a1 + 4 * a2);
}

uint64_t sub_100730FAC()
{
  sub_100134750(qword_10247D2E0, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");

  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247D2E0, (void *)&_mh_execute_header);
}

void sub_1007310BC(id a1)
{
  qword_10247D310 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLFilteredLocationControllerSilo"];
}

uint64_t sub_10073117C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10073139C;
  block[3] = &unk_10229FED8;
  void block[4] = a1;
  if (qword_10247D320 != -1) {
    dispatch_once(&qword_10247D320, block);
  }
  return qword_10248A320;
}

void sub_10073139C()
{
}

void sub_1007313E8()
{
}

void sub_10073140C(uint64_t a1, void *a2)
{
  unint64_t v3 = (void *)sub_1006B766C(a1, "filtered", a2);
  float v4 = v3 + 15;
  *unint64_t v3 = off_1022C6210;
  v3[15] = off_1022C6360;
  double v5 = sub_101171D90((uint64_t)(v3 + 16));
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  sub_1012F969C(a1 + 184, *(void *)(a1 + 32), v4, v5);
  *(void *)(a1 + 1016) = [objc_msgSend(*(id *)(a1 + 32), "silo") newTimer];
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 1024) = _Q0;
  *(_OWORD *)&v11.__r_.__value_.__l.__data_ = xmmword_101D2B410;
  v11.__r_.__value_.__r.__words[2] = 2;
  sub_100732978(a1 + 1040, (int *)&v11, 3);
  *(void *)(a1 + 1080) = 0;
  *(void *)(a1 + 1072) = 0;
  *(void *)(a1 + 1064) = a1 + 1072;
  *(void *)(a1 + 1088) = 0xBFF0000000000000;
  *(void *)(a1 + 1096) = 0;
  sub_100EC93A0();
}

void sub_100731708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  sub_1000F5BB0(v20 + 1064, *(void **)(v20 + 1072));
  sub_1000F5BB0(v22, *(void **)(v20 + 1048));
  sub_1012F971C(v21);
  uint64_t v25 = *(void *)(v20 + 176);
  *(void *)(v20 + 176) = 0;
  if (v25) {
    (*(void (**)(uint64_t))(*(void *)v25 + 8))(v25);
  }
  uint64_t v26 = *v23;
  uint64_t *v23 = 0;
  if (v26) {
    (*(void (**)(uint64_t))(*(void *)v26 + 8))(v26);
  }
  sub_1006B7BEC(v20);
  _Unwind_Resume(a1);
}

void sub_1007317DC(uint64_t a1, _DWORD *a2, uint64_t a3, id *a4)
{
  CLProfilingIdentify();
  [objc_msgSend(a4[4], "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C6418);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    unint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLFilteredLocationController::onManagerNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C6418);
    }
    __int16 v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLFilteredLocationController::onManagerNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100731DC0(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_100731998(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1007319B8(uint64_t a1)
{
  *(void *)(a1 + 1016) = 0;
}

uint64_t sub_1007319EC(uint64_t a1, unsigned int *a2)
{
  sub_1006B7E64(a1);
  if (qword_102419530 != -1) {
    dispatch_once(&qword_102419530, &stru_1022C6438);
  }
  float v4 = qword_102419538;
  if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEBUG))
  {
    unsigned int v5 = *a2;
    buf[0] = 67109120;
    buf[1] = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "CLIENT: Clearing cached notification for %d", (uint8_t *)buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419530 != -1) {
      dispatch_once(&qword_102419530, &stru_1022C6438);
    }
    unint64_t v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual BOOL CLFilteredLocationController::unregisterForNotificationInternal(const CLLocationProvider_Type::Notification &)", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  (*(void (**)(uint64_t, unsigned int *))(*(void *)a1 + 120))(a1, a2);
  unsigned int v6 = *a2;
  [*(id *)(*(void *)(a1 + 168) + 16) unregister:*(void *)(*(void *)(a1 + 168) + 8) forNotification:*a2];
  if (v6 <= 2)
  {
    *(void *)uint64_t buf = a2;
    *((unsigned char *)sub_1000EB1B8((uint64_t **)(a1 + 1040), (int *)a2, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 32) = 0;
    buf[0] = 0;
    if (!sub_1001072EC(a1, buf, 1))
    {
      buf[0] = 2;
      if (!sub_1001072EC(a1, buf, 1))
      {
        buf[0] = 1;
        if (!sub_1001072EC(a1, buf, 1))
        {
          [*(id *)(a1 + 1016) setNextFireDelay:1.79769313e308];
          (*(void (**)(uint64_t))(*(void *)a1 + 304))(a1);
        }
      }
    }
  }
  return 1;
}

uint64_t sub_100731CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v10 = 0;
  int v11 = 0;
  int v12 = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  long long v9 = _Q0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, long long *))(*(void *)a1 + 96))(a1, a2, a3, &v9);
}

void sub_100731CFC(uint64_t a1)
{
  if (&_CPScheduleWakeAtDateWithIdentifier)
  {
    sub_100731D68(a1);
    if (*(double *)(a1 + 1088) > 0.0)
    {
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      *(void *)(a1 + 1096) = CFDateCreate(kCFAllocatorDefault, Current + *(double *)(a1 + 1088));
      CPScheduleWakeAtDateWithIdentifier();
    }
  }
}

void sub_100731D68(uint64_t a1)
{
  if (&_CPCancelWakeAtDateWithIdentifier)
  {
    if (*(void *)(a1 + 1096))
    {
      CPCancelWakeAtDateWithIdentifier();
      CFRelease(*(CFTypeRef *)(a1 + 1096));
      *(void *)(a1 + 1096) = 0;
    }
  }
}

double sub_100731DC0(id *a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 4)
  {
    if (qword_102419530 != -1) {
      dispatch_once(&qword_102419530, &stru_1022C6438);
    }
    __int16 v10 = qword_102419538;
    if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 68289026;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Warning Location Services state changed, clearing local cache\"}", (uint8_t *)&v12, 0x12u);
    }
    (*((void (**)(id *))*a1 + 38))(a1);
    uint64_t v11 = (uint64_t)(a1 + 23);
    if (*(_DWORD *)(a4 + 188) == 1) {
      sub_1012F9720(v11);
    }
    else {
      return sub_1012F99C4(v11);
    }
  }
  else if (!*a3)
  {
    if (qword_102419530 != -1) {
      dispatch_once(&qword_102419530, &stru_1022C6438);
    }
    unsigned int v5 = qword_102419538;
    if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEFAULT))
    {
      int v12 = 68289026;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Warning Location Services reset, clearing local cache\"}", (uint8_t *)&v12, 0x12u);
    }
    (*((void (**)(id *))*a1 + 38))(a1);
    id v6 = [objc_msgSend(a1[4], "vendor", sub_1012F9A14((uint64_t)(a1 + 23)).n128_f64[0]) proxyForService:@"CLClientManager"];
    if (byte_10247D30F >= 0) {
      uint64_t v7 = &qword_10247D2F8;
    }
    else {
      uint64_t v7 = (uint64_t *)qword_10247D2F8;
    }
    [v6 resetNotificationConsumedForIdentifier:[NSString stringWithUTF8String:v7]];
  }
  return result;
}

void sub_100732014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(double *)(a2 + 20) <= 0.0)
  {
    if (qword_102419530 != -1) {
      dispatch_once(&qword_102419530, &stru_1022C6438);
    }
    uint64_t v27 = qword_102419538;
    if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"No valid last confident location\"}", buf, 0x12u);
    }
  }
  else
  {
    if (qword_102419530 != -1) {
      dispatch_once(&qword_102419530, &stru_1022C6438);
    }
    id v6 = qword_102419538;
    if (os_log_type_enabled((os_log_t)qword_102419538, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v7 = *(void *)(a2 + 4);
      uint64_t v8 = *(void *)(a2 + 12);
      uint64_t v9 = *(void *)(a2 + 20);
      __int16 v10 = sub_10003E9A4(*(_DWORD *)(a2 + 96));
      uint64_t v11 = a3;
      uint64_t v12 = a1;
      int v13 = *(_DWORD *)(a2 + 84);
      double v14 = *(double *)(a2 + 76);
      uint64_t v38 = *(void *)(a2 + 88);
      CFAbsoluteTime v15 = CFAbsoluteTimeGetCurrent() - v14;
      int v16 = *(_DWORD *)(a2 + 128);
      *(_DWORD *)uint64_t buf = 134220034;
      *(void *)&uint8_t buf[4] = v7;
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = v8;
      *(_WORD *)&unsigned char buf[22] = 2048;
      *(void *)&unsigned char buf[24] = v9;
      LOWORD(v58) = 2080;
      *(void *)((char *)&v58 + 2) = v10;
      WORD5(v58) = 1024;
      HIDWORD(v58) = v13;
      a1 = v12;
      a3 = v11;
      *(_WORD *)id v59 = 2048;
      *(double *)&v59[2] = v14;
      *(_WORD *)&_OWORD v59[10] = 2048;
      *(void *)&v59[12] = v38;
      *(_WORD *)&v59[20] = 2048;
      *(CFAbsoluteTime *)&v59[22] = v15;
      *(_WORD *)&v59[30] = 1024;
      LODWORD(v60) = v16;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Cached location,%.8lf,%.8lf,HorAcc,%.1lf,Type,%s,Confidence,%d,Timestamp,%.3f,Lifespan,%.3f,Age,%.3f,integrity,%d", buf, 0x54u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419530 != -1) {
        dispatch_once(&qword_102419530, &stru_1022C6438);
      }
      uint64_t v28 = *(void *)(a2 + 4);
      uint64_t v36 = *(void *)(a2 + 12);
      uint64_t v37 = *(void *)(a2 + 20);
      uint64_t v29 = sub_10003E9A4(*(_DWORD *)(a2 + 96));
      double v30 = *(double *)(a2 + 76);
      int v31 = *(_DWORD *)(a2 + 84);
      uint64_t v32 = *(void *)(a2 + 88);
      CFAbsoluteTime v33 = CFAbsoluteTimeGetCurrent() - v30;
      int v34 = *(_DWORD *)(a2 + 128);
      int v39 = 134220034;
      uint64_t v40 = v28;
      __int16 v41 = 2048;
      uint64_t v42 = v36;
      __int16 v43 = 2048;
      uint64_t v44 = v37;
      __int16 v45 = 2080;
      int v46 = v29;
      __int16 v47 = 1024;
      int v48 = v31;
      __int16 v49 = 2048;
      double v50 = v30;
      __int16 v51 = 2048;
      uint64_t v52 = v32;
      __int16 v53 = 2048;
      CFAbsoluteTime v54 = v33;
      __int16 v55 = 1024;
      int v56 = v34;
      uint64_t v35 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLFilteredLocationController::lastConfidentLocationNotification(const CLDaemonLocation &, const CLDaemonLocationPrivate &)", "%s\n", v35);
      if (v35 != buf) {
        free(v35);
      }
    }
    sub_1000DB3D4((uint64_t)buf);
    long long v17 = *(_OWORD *)(a2 + 112);
    long long v61 = *(_OWORD *)(a2 + 96);
    long long v62 = v17;
    v63[0] = *(_OWORD *)(a2 + 128);
    *(_OWORD *)((char *)v63 + 12) = *(_OWORD *)(a2 + 140);
    long long v18 = *(_OWORD *)(a2 + 48);
    long long v58 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)id v59 = v18;
    long long v19 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)&v59[16] = *(_OWORD *)(a2 + 64);
    long long v60 = v19;
    long long v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)uint64_t buf = *(_OWORD *)a2;
    *(_OWORD *)&uint8_t buf[16] = v20;
    memcpy(v64, (const void *)a3, sizeof(v64));
    uint64_t v21 = *(void *)(a3 + 520);
    uint64_t v22 = *(std::__shared_weak_count **)(a3 + 528);
    if (v22) {
      atomic_fetch_add_explicit(&v22->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    uint64_t v65 = v21;
    id v23 = v66;
    uint64_t v66 = v22;
    if (v23) {
      sub_1000DB0A0(v23);
    }
    long long v24 = *(_OWORD *)(a3 + 616);
    long long v71 = *(_OWORD *)(a3 + 600);
    v72[0] = v24;
    *(void *)((char *)v72 + 13) = *(void *)(a3 + 629);
    long long v25 = *(_OWORD *)(a3 + 552);
    long long v67 = *(_OWORD *)(a3 + 536);
    long long v68 = v25;
    long long v26 = *(_OWORD *)(a3 + 584);
    long long v69 = *(_OWORD *)(a3 + 568);
    long long v70 = v26;
    int v39 = 0;
    (*(void (**)(uint64_t, int *, unsigned char *, uint64_t, uint64_t, void))(*(void *)a1 + 152))(a1, &v39, buf, 1, 0xFFFFFFFFLL, 0);

    if (v76) {
      sub_1000DB0A0(v76);
    }
    if (v75 < 0) {
      operator delete(__p);
    }
    if (v73) {
      sub_1000DB0A0(v73);
    }
    if (v66) {
      sub_1000DB0A0(v66);
    }
  }
}

void sub_1007324CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1007324F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100732500(uint64_t a1)
{
  *(void *)a1 = off_1022C6210;
  *(void *)(a1 + 120) = off_1022C6360;
  sub_1000F5BB0(a1 + 1064, *(void **)(a1 + 1072));
  sub_1000F5BB0(a1 + 1040, *(void **)(a1 + 1048));
  sub_1012F971C(a1 + 184);
  uint64_t v2 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  return sub_1006B7BEC(a1);
}

void sub_1007325F0(uint64_t a1)
{
  *(void *)a1 = off_1022C6210;
  *(void *)(a1 + 120) = off_1022C6360;
  sub_1000F5BB0(a1 + 1064, *(void **)(a1 + 1072));
  sub_1000F5BB0(a1 + 1040, *(void **)(a1 + 1048));
  sub_1012F971C(a1 + 184);
  uint64_t v2 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  sub_1006B7BEC(a1);

  operator delete();
}

uint64_t sub_1007326F4(uint64_t a1)
{
  uint64_t v2 = a1 - 120;
  *(void *)(a1 - 120) = off_1022C6210;
  *(void *)a1 = off_1022C6360;
  sub_1000F5BB0(a1 + 944, *(void **)(a1 + 952));
  sub_1000F5BB0(a1 + 920, *(void **)(a1 + 928));
  sub_1012F971C(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 48);
  *(void *)(a1 + ++*(_DWORD *)(result + 48) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }

  return sub_1006B7BEC(v2);
}

void sub_1007327E4(uint64_t a1)
{
  uint64_t v2 = a1 - 120;
  *(void *)(a1 - 120) = off_1022C6210;
  *(void *)a1 = off_1022C6360;
  sub_1000F5BB0(a1 + 944, *(void **)(a1 + 952));
  sub_1000F5BB0(a1 + 920, *(void **)(a1 + 928));
  sub_1012F971C(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 48);
  *(void *)(a1 + ++*(_DWORD *)(result + 48) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  sub_1006B7BEC(v2);

  operator delete();
}

void sub_1007328E8(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_100732918(id a1)
{
  qword_102419538 = (uint64_t)os_log_create("com.apple.locationd.Core", "Core");
}

void sub_100732948(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

uint64_t sub_100732978(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 8 * a3;
    do
    {
      sub_1007329F8((uint64_t **)a1, v4, a2, (uint64_t *)a2);
      a2 += 2;
      v6 -= 8;
    }
    while (v6);
  }
  return a1;
}

void sub_1007329E0(_Unwind_Exception *a1)
{
  sub_1000F5BB0(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1007329F8(uint64_t **a1, uint64_t *a2, int *a3, uint64_t *a4)
{
  uint64_t v6 = sub_1005C139C(a1, a2, &v11, &v10, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    uint64_t v7 = (uint64_t *)operator new(0x28uLL);
    *(uint64_t *)((char *)v7 + 28) = *a4;
    sub_1000EDF90(a1, (uint64_t)v11, v8, v7);
  }
  return v7;
}

void sub_100732A80()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADF0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10241ADF0))
    {
      uint64_t v1 = 0x7FFFFFFF00000000;
      v0[2] = xmmword_101D2B3D8;
      v0[3] = unk_101D2B3E8;
      v0[4] = xmmword_101D2B3F8;
      v0[0] = xmmword_101D2B3B8;
      v0[1] = unk_101D2B3C8;
      sub_1003BFBA4((uint64_t)&unk_10241ADD8, (int *)v0, 11);
      __cxa_atexit((void (*)(void *))sub_1003BE998, &unk_10241ADD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ADF0);
    }
  }
}

void sub_100732B60(_Unwind_Exception *a1)
{
}

uint64_t sub_100732B78()
{
  sub_100134750(&qword_10247D2F8, "FilteredLocationController");

  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10247D2F8, (void *)&_mh_execute_header);
}

void *sub_100732BD8(void *result, uint64_t a2, uint64_t a3)
{
  *double result = a2;
  result[1] = a3;
  result[2] = 0;
  return result;
}

uint64_t sub_100732BE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

id *sub_100732C38(id *result, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  if (*a3 == 3)
  {
    unsigned int v5 = result;
    if (qword_102419390 != -1) {
      dispatch_once(&qword_102419390, &stru_1022C6478);
    }
    uint64_t v6 = qword_102419398;
    if (os_log_type_enabled((os_log_t)qword_102419398, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 138477827;
      uint64_t v9 = sub_1000E9358(a4);
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "CLXOTASubscription Mobile asset notification data: %{private}@", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419390 != -1) {
        dispatch_once(&qword_102419390, &stru_1022C6478);
      }
      sub_1000E9358(a4);
      uint64_t v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLXOTASubscription::onMobileAssetNotification(int, const CLMobileAssetManager_Type::Notification &, const CLMobileAssetManager_Type::NotificationData &)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
    return (id *)[v5[1] onUpdatedSettings:sub_1000E9358(a4)];
  }
  return result;
}

id sub_100732E20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    sub_1014CC69C();
  }
  return [*(id *)(v1 + 16) register:*(void *)(v1 + 8) forNotification:3 registrationInfo:0];
}

void sub_100732EEC(uint64_t a1, _DWORD *a2, uint64_t a3, id *a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*a4, "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022C6498);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLXOTASubscription::onMobileAssetNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022C6498);
    }
    uint64_t v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)uint64_t buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      CFAbsoluteTime v15 = "";
      __int16 v16 = 2082;
      long long v17 = "activity";
      __int16 v18 = 2050;
      long long v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLXOTASubscription::onMobileAssetNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100732C38(a4, v7, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1007330A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1007330C8(void *result)
{
  uint64_t v1 = result[2];
  if (v1)
  {
    uint64_t v2 = result;
    [*(id *)(v1 + 16) unregister:*(void *)(v1 + 8) forNotification:3];
    double result = (void *)v2[2];
    v2[2] = 0;
    if (result)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_100733144(id a1)
{
  qword_102419398 = (uint64_t)os_log_create("com.apple.locationd.Position", "Proximity");
}

void sub_100733174(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1007331A4(uint64_t *a1, uint64_t a2)
{
  *((_DWORD *)a1 + 8) = *(_DWORD *)(a2 + 96);
  *(_OWORD *)a1 = *(_OWORD *)(a2 + 4);
  double v4 = *(double *)(a2 + 184);
  *((double *)a1 + 2) = v4;
  if (v4 <= 0.0) {
    a1[2] = *(void *)(a2 + 76);
  }
  *((double *)a1 + 3) = fmax(*(double *)(a2 + 20), 0.0);
  *((_DWORD *)a1 + 9) = *(_DWORD *)(a2 + 132);
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C64B8);
  }
  unsigned int v5 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
  {
    int v6 = *(_DWORD *)(a2 + 96);
    uint64_t v7 = *a1;
    uint64_t v8 = a1[1];
    uint64_t v9 = a1[2];
    uint64_t v10 = a1[3];
    int v11 = *((_DWORD *)a1 + 9);
    uint64_t v12 = *(void *)(a2 + 184);
    *(_DWORD *)uint64_t buf = 67241729;
    int v15 = v6;
    __int16 v16 = 2049;
    uint64_t v17 = v7;
    __int16 v18 = 2049;
    uint64_t v19 = v8;
    __int16 v20 = 2050;
    uint64_t v21 = v9;
    __int16 v22 = 2050;
    uint64_t v23 = v10;
    __int16 v24 = 1026;
    int v25 = v11;
    __int16 v26 = 2050;
    uint64_t v27 = v12;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "CLNmeaScreener,store,type,%{public}d,lat,%{private}.8lf,lon,%{private}.8lf,timestampGPS,%{public}.1lf,fHorizontalUncertainty,%{public}.1lf,refFrame,%{public}d,timestampGps,%{public}.1lf", buf, 0x40u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C64B8);
    }
    int v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNmeaScreener::ExternalLocationData::fillData(const CLLocationProvider_Type::NotificationData &)", "%s\n", v13);
    if (v13 != (char *)buf) {
      free(v13);
    }
  }
}

uint64_t sub_100733434(uint64_t a1, double a2, double a3, double a4)
{
  double v4 = fabs(a4 * 15.0) + *(double *)(a1 + 24) + *(double *)(a1 + 56);
  if (v4 >= a2 && a2 <= a3) {
    uint64_t v6 = 50;
  }
  else {
    uint64_t v6 = 25;
  }
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C64B8);
  }
  uint64_t v7 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)uint64_t buf = 134349312;
    double v11 = v4;
    __int16 v12 = 1026;
    int v13 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "CLNmeaScreener,integrity,positionDiffBoundMediumIntegrity,%{public}.2lf,locIntegrity,%{public}d", buf, 0x12u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C64B8);
    }
    uint64_t v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLLocationIntegrity CLNmeaScreener::ExternalLocationData::determineLocationIntegrity(const double, const double, const double) const", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  return v6;
}

BOOL sub_100733630(uint64_t a1, double *a2, _DWORD *a3, double a4, double a5, double a6, double a7)
{
  double v12 = vabdd_f64(a7, *(double *)(a1 + 16));
  double v13 = sub_1000F1648(a2, a5, a6, *(double *)a1, *(double *)(a1 + 8), 0.0);
  double v14 = fabs(v12 * a4) + *(double *)(a1 + 24);
  if (v14 >= *(double *)(a1 + 40)) {
    double v15 = v14;
  }
  else {
    double v15 = *(double *)(a1 + 40);
  }
  *a3 = sub_100733434(a1, v13, v15, v12);
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C64B8);
  }
  __int16 v16 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
  {
    double v17 = *(double *)a1;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = *(void *)(a1 + 16);
    uint64_t v20 = *(void *)(a1 + 24);
    int v21 = *(_DWORD *)(a1 + 32);
    int v22 = *(_DWORD *)(a1 + 36);
    *(_DWORD *)uint64_t buf = 134351873;
    uint64_t v26 = v19;
    __int16 v27 = 2050;
    double v28 = v13;
    __int16 v29 = 2050;
    double v30 = v15;
    __int16 v31 = 2049;
    double v32 = a5;
    __int16 v33 = 2049;
    double v34 = a6;
    __int16 v35 = 2049;
    double v36 = v17;
    __int16 v37 = 2049;
    uint64_t v38 = v18;
    __int16 v39 = 1026;
    int v40 = v21;
    __int16 v41 = 2050;
    uint64_t v42 = v20;
    __int16 v43 = 1026;
    int v44 = v22;
    __int16 v45 = 2050;
    double v46 = v12;
    __int16 v47 = 2050;
    double v48 = a4;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "CLNmeaScreener,screen,time,%{public}.1lf,posDiff,%{public}.2lf,positionDiffBound,%{public}.2lf,accessoryLL,%{private}.7lf,%{private}.7lf,referenceLL,%{private}.7lf,%{private}.7lf,type,%{public}d,hunc,%{public}.2lf,refFrame,%{public}d,timeDiff,%{public}.2lf,maxSpeed,%{public}.2lf", buf, 0x72u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C64B8);
    }
    __int16 v24 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLNmeaScreener::ExternalLocationData::isLocationWithinBoundsAndSetLocIntegrity(CLDistanceCalc &, double, double, double, CFAbsoluteTime, CLLocationIntegrity &) const", "%s\n", v24);
    if (v24 != (char *)buf) {
      free(v24);
    }
  }
  return v13 <= v15;
}

uint64_t sub_100733948(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = 256;
  *(unsigned char *)(a1 + 2) = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  sub_101171D90(a1 + 32);
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 88) = _Q0;
  *(void *)(a1 + 104) = 0;
  *(_OWORD *)(a1 + 112) = xmmword_101D2B500;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 128) = 0x4069000000000000;
  *(_OWORD *)(a1 + 152) = _Q0;
  *(void *)(a1 + 168) = 0;
  *(_OWORD *)(a1 + 176) = xmmword_101D2B510;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 192) = 0x4069000000000000;
  *(_OWORD *)(a1 + 216) = _Q0;
  *(void *)(a1 + 232) = 0;
  *(_OWORD *)(a1 + 240) = xmmword_101D2B520;
  *(void *)(a1 + 256) = 0x40B3880000000000;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = 0xBFF0000000000000;
  *(void *)(a1 + 288) = 0xBFF0000000000000;
  *(void *)(a1 + 296) = 0;
  *(_OWORD *)(a1 + 304) = xmmword_101D2B530;
  *(void *)(a1 + 320) = 0x40E86A0000000000;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0xBFF0000000000000;
  *(void *)(a1 + 352) = 0xBFF0000000000000;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 384) = 0x410E848000000000;
  *(_OWORD *)(a1 + 368) = xmmword_101D2B540;
  sub_100735F04(a1 + 392, a2);
  *(void *)(a1 + 424) = 0;
  *(unsigned char *)(a1 + 432) = 1;
  *(void *)(a1 + 436) = 0xB40000000ALL;
  *(void *)(a1 + 4++*(_DWORD *)(result + 48) = 0;
  *(_WORD *)(a1 + 456) = 0;
  *(void *)(a1 + 464) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 472) = 50;
  *(void *)(a1 + 480) = 0xBFF0000000000000;
  int v14 = 0;
  sub_1000C7F88(buf);
  int v9 = sub_10006EF84(*(uint64_t *)buf, "GpsSimulatorTestMode", &v14);
  if (v14) {
    int v10 = v9;
  }
  else {
    int v10 = 0;
  }
  if (v16) {
    sub_1000DB0A0(v16);
  }
  if (v10)
  {
    *(unsigned char *)a1 = 1;
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C64B8);
    }
    double v11 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "CLNmeaScreener,fSimulatorMode,1", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C64B8);
      }
      double v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLNmeaScreener::CLNmeaScreener(NMEAScreenerCallback)", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
  }
  return a1;
}

void sub_100733C4C(_Unwind_Exception *a1)
{
  sub_100EBBCE8(v1 + 448);
  sub_1007188E4(v2);
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v3);
  }
  _Unwind_Resume(a1);
}

void sub_100733CA0(uint64_t a1, char a2)
{
  sub_100103240();
  if (sub_100743FCC())
  {
    *(unsigned char *)(a1 + 2) = a2;
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C64B8);
    }
    double v4 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
    {
      int v5 = *(unsigned __int8 *)(a1 + 2);
      *(_DWORD *)uint64_t buf = 67240192;
      int v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "CLNMEAScreener,isExternalLocationDisablementAllowed,1,PauseExternalLocation,%{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 == -1)
      {
LABEL_16:
        uint64_t v7 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLNmeaScreener::pauseExternalLocation(const BOOL)", "%s\n", v7);
        if (v7 != (char *)buf) {
          free(v7);
        }
        return;
      }
LABEL_18:
      dispatch_once(&qword_102419360, &stru_1022C64B8);
      goto LABEL_16;
    }
  }
  else
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C64B8);
    }
    uint64_t v6 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "CLNMEAScreener,isExternalLocationDisablementAllowed,0", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    }
  }
}

BOOL sub_100733F54(uint64_t a1, int a2, int a3, int a4, double a5, double a6, double a7)
{
  if (*(unsigned char *)(a1 + 2))
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C64B8);
    }
    uint64_t v7 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "CLNMEAScreener,screen,external location update paused", buf, 2u);
    }
    BOOL result = sub_10013D1A0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C64B8);
      }
      LOWORD(v43) = 0;
LABEL_10:
      int v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLNmeaScreener::screenData(CLNmeaSentenceType, double, double, CLClientLocationReferenceFrame, BOOL, double)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
      return 0;
    }
    return result;
  }
  if (!*(unsigned char *)(a1 + 1) || a2 != 3 && a2) {
    return 1;
  }
  if (a2) {
    __int16 v16 = "GPRMC";
  }
  else {
    __int16 v16 = "GPGGA";
  }
  std::string::assign((std::string *)(a1 + 8), v16);
  int v42 = 0;
  if (!sub_1000EF68C(a5, a6))
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C64B8);
    }
    uint64_t v20 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "CLNMEAScreener,screen,rejected,invalid accessory coordinate", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_29;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C64B8);
    }
    LOWORD(v43) = 0;
    goto LABEL_74;
  }
  if (*(unsigned char *)a1)
  {
LABEL_20:
    uint64_t v18 = a1 + 392;
    int v19 = 0;
LABEL_21:
    sub_100734914(v18, 0, v19);
    return 1;
  }
  if (a4)
  {
    LODWORD(v17) = dword_10247D328;
    if ((double)v17 > a7)
    {
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C64B8);
      }
      int v21 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)uint64_t buf = 134349312;
        double v54 = a7;
        __int16 v55 = 1026;
        *(_DWORD *)int v56 = dword_10247D328;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "CLNmeaScreener,screen,data time less,%{public}.2lf,than build time,,%{public}d", buf, 0x12u);
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_29;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C64B8);
      }
      int v43 = 134349312;
      double v44 = a7;
      __int16 v45 = 1026;
      *(_DWORD *)double v46 = dword_10247D328;
LABEL_74:
      __int16 v37 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLNmeaScreener::screenData(CLNmeaSentenceType, double, double, CLClientLocationReferenceFrame, BOOL, double)", "%s\n", v37);
      if (v37 != (char *)buf) {
        free(v37);
      }
LABEL_29:
      sub_100734914(a1 + 392, 1, 0);
      return 0;
    }
  }
  if (a7 < 0.0) {
    goto LABEL_20;
  }
  unsigned int v22 = sub_100734970(a1, a3, &v42, a5, a6);
  int v23 = v42;
  if ((sub_100734DB4(a1 + 424, v22, v42) & 1) == 0)
  {
    sub_100734914(a1 + 392, 1, v23);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C64B8);
    }
    double v28 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
    {
      int v29 = *(_DWORD *)(a1 + 424);
      int v30 = *(_DWORD *)(a1 + 428);
      *(_DWORD *)uint64_t buf = 134350337;
      double v54 = a7;
      __int16 v55 = 1026;
      *(_DWORD *)int v56 = v29;
      *(_WORD *)&v56[4] = 1026;
      *(_DWORD *)&v56[6] = v30;
      *(_WORD *)uint64_t v57 = 2049;
      *(double *)&v57[2] = a5;
      *(_WORD *)long long v58 = 2049;
      *(double *)&uint64_t v58[2] = a6;
      __int16 v59 = 1026;
      LODWORD(v60) = v23;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEBUG, "CLNMEAScreener,screen,%{public}.2lf,accessory location screening failed,continuousFailCount,%{public}d,continuousSuccessCount,%{public}d,LL,%{private}.7lf,%{private}.7lf,locTypeUsedForScreening,%{public}d", buf, 0x32u);
    }
    BOOL result = sub_10013D1A0(115, 2);
    if (result)
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C64B8);
      }
      int v31 = *(_DWORD *)(a1 + 424);
      int v32 = *(_DWORD *)(a1 + 428);
      int v43 = 134350337;
      double v44 = a7;
      __int16 v45 = 1026;
      *(_DWORD *)double v46 = v31;
      *(_WORD *)&v46[4] = 1026;
      *(_DWORD *)&v46[6] = v32;
      *(_WORD *)__int16 v47 = 2049;
      *(double *)&v47[2] = a5;
      *(_WORD *)double v48 = 2049;
      *(double *)&_OWORD v48[2] = a6;
      __int16 v49 = 1026;
      LODWORD(v50) = v23;
      goto LABEL_10;
    }
    return result;
  }
  if (a7 <= 0.0 || !a4 || (double v24 = *(double *)(a1 + 480), v24 <= 0.0) || vabdd_f64(a7, v24) >= 0.8)
  {
    *(double *)(a1 + 480) = a7;
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C64B8);
    }
    __int16 v33 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
    {
      int v34 = *(_DWORD *)(a1 + 424);
      __int16 v35 = "success";
      int v36 = *(_DWORD *)(a1 + 428);
      if (!v23) {
        __int16 v35 = "not screened";
      }
      *(_DWORD *)uint64_t buf = 134350595;
      double v54 = a7;
      __int16 v55 = 2082;
      *(void *)int v56 = v35;
      *(_WORD *)&v56[8] = 1026;
      *(_DWORD *)uint64_t v57 = v34;
      *(_WORD *)&v57[4] = 1026;
      *(_DWORD *)&v57[6] = v36;
      *(_WORD *)long long v58 = 2049;
      *(double *)&uint64_t v58[2] = a5;
      __int16 v59 = 2049;
      double v60 = a6;
      __int16 v61 = 1026;
      int v62 = v23;
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "CLNMEAScreener,screen,%{public}.2lf,accessory location %{public}s,continuousFailCount,%{public}d,continuousSuccessCount,%{public}d,LL,%{private}.7lf,%{private}.7lf,locTypeUsedForScreening,%{public}d", buf, 0x3Cu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C64B8);
      }
      uint64_t v38 = "success";
      int v39 = *(_DWORD *)(a1 + 424);
      int v40 = *(_DWORD *)(a1 + 428);
      if (!v23) {
        uint64_t v38 = "not screened";
      }
      int v43 = 134350595;
      double v44 = a7;
      __int16 v45 = 2082;
      *(void *)double v46 = v38;
      *(_WORD *)&v46[8] = 1026;
      *(_DWORD *)__int16 v47 = v39;
      *(_WORD *)&v47[4] = 1026;
      *(_DWORD *)&v47[6] = v40;
      *(_WORD *)double v48 = 2049;
      *(double *)&_OWORD v48[2] = a5;
      __int16 v49 = 2049;
      double v50 = a6;
      __int16 v51 = 1026;
      int v52 = v23;
      __int16 v41 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLNmeaScreener::screenData(CLNmeaSentenceType, double, double, CLClientLocationReferenceFrame, BOOL, double)", "%s\n", v41);
      if (v41 != (char *)buf) {
        free(v41);
      }
    }
    uint64_t v18 = a1 + 392;
    int v19 = v23;
    goto LABEL_21;
  }
  sub_100734914(a1 + 392, 1, 0);
  if (qword_102419360 != -1) {
    dispatch_once(&qword_102419360, &stru_1022C64B8);
  }
  int v25 = qword_102419368;
  if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
  {
    double v26 = vabdd_f64(a7, *(double *)(a1 + 480));
    *(_DWORD *)uint64_t buf = 134349825;
    double v54 = a7;
    __int16 v55 = 2049;
    *(double *)int v56 = a5;
    *(_WORD *)&v56[8] = 2049;
    *(double *)uint64_t v57 = a6;
    *(_WORD *)&v57[8] = 2050;
    *(double *)long long v58 = v26;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "CLNMEAScreener,screen,%{public}.2lf,accessory location screening failed,input frequency too high,LL,%{private}.7lf,%{private}.7lf,time since last fix,%{public}.3lf", buf, 0x2Au);
  }
  BOOL result = sub_10013D1A0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C64B8);
    }
    double v27 = vabdd_f64(a7, *(double *)(a1 + 480));
    int v43 = 134349825;
    double v44 = a7;
    __int16 v45 = 2049;
    *(double *)double v46 = a5;
    *(_WORD *)&v46[8] = 2049;
    *(double *)__int16 v47 = a6;
    *(_WORD *)&v47[8] = 2050;
    *(double *)double v48 = v27;
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_100734914(uint64_t a1, char a2, int a3)
{
  char v6 = a2;
  int v5 = a3;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    sub_10015E48C();
  }
  return (*(uint64_t (**)(uint64_t, char *, int *))(*(void *)v3 + 48))(v3, &v6, &v5);
}

BOOL sub_100734970(uint64_t a1, int a2, int *a3, double a4, double a5)
{
  *a3 = 0;
  if (!*(unsigned char *)(a1 + 1)) {
    return 1;
  }
  double Current = CFAbsoluteTimeGetCurrent();
  *(_DWORD *)(a1 + 472) = 50;
  if (*(unsigned char *)(a1 + 456)
    && vabdd_f64(sub_10016C458(), *(double *)(a1 + 464)) < 20.0
    && *(unsigned char *)(a1 + 457)
    && *(double *)(a1 + 160) < *(double *)(a1 + 184)
    && vabdd_f64(Current, *(double *)(a1 + 152)) < 3.0)
  {
    uint64_t v11 = a1 + 136;
LABEL_10:
    int v12 = 1;
    goto LABEL_15;
  }
  if (vabdd_f64(Current, *(double *)(a1 + 88)) < 3.0)
  {
    uint64_t v11 = a1 + 72;
    goto LABEL_10;
  }
  if (vabdd_f64(Current, *(double *)(a1 + 216)) < 1800.0)
  {
    uint64_t v11 = a1 + 200;
    int v12 = 4;
    goto LABEL_15;
  }
  if (vabdd_f64(Current, *(double *)(a1 + 280)) >= 1800.0)
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C64B8);
    }
    int v19 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v20 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v21 = *(void *)(a1 + 88);
      uint64_t v22 = *(void *)(a1 + 216);
      uint64_t v23 = *(void *)(a1 + 280);
      uint64_t v24 = *(void *)(a1 + 344);
      *(_DWORD *)uint64_t buf = 136381699;
      *(void *)&uint8_t buf[4] = v20;
      *(_WORD *)&unsigned char buf[12] = 2050;
      *(void *)&buf[14] = v21;
      *(_WORD *)&unsigned char buf[22] = 2050;
      *(void *)&unsigned char buf[24] = v22;
      *(_WORD *)int v43 = 2048;
      *(void *)&v43[2] = v23;
      *(_WORD *)&v43[10] = 2050;
      *(void *)&v43[12] = v24;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "CLNMEAScreener,%{private}s,external location unavailable,gps,%{public}.1lf,wifi,%{public}.1lf,cell{public},%.1lf,LAC,%{public}.1lf", buf, 0x34u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C64B8);
      }
      int v25 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        int v25 = (void *)*v25;
      }
      uint64_t v26 = *(void *)(a1 + 88);
      uint64_t v27 = *(void *)(a1 + 216);
      uint64_t v28 = *(void *)(a1 + 280);
      uint64_t v29 = *(void *)(a1 + 344);
      *(_DWORD *)__int16 v33 = 136381699;
      *(void *)&v33[4] = v25;
      __int16 v34 = 2050;
      uint64_t v35 = v26;
      __int16 v36 = 2050;
      uint64_t v37 = v27;
      __int16 v38 = 2048;
      uint64_t v39 = v28;
      __int16 v40 = 2050;
      uint64_t v41 = v29;
      int v30 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLNmeaScreener::verifyWithExternalLocation(const double, const double, CLClientLocationReferenceFrame, const double, CLLocationType &)", "%s\n", v30);
      if (v30 != buf) {
        free(v30);
      }
    }
    return 1;
  }
  uint64_t v11 = a1 + 264;
  int v12 = 6;
LABEL_15:
  *a3 = v12;
  if (*(unsigned char *)(a1 + 456)) {
    double v13 = 50.0;
  }
  else {
    double v13 = 100.0;
  }
  int v14 = *(_DWORD *)(v11 + 36);
  if (v14 != a2)
  {
    if (a2 == 2)
    {
      double v16 = *(double *)v11;
      double v32 = *(double *)(v11 + 8);
      *(double *)__int16 v33 = v16;
      double v31 = *(double *)(v11 + 24);
      if (sub_100EBBCEC((id *)(a1 + 448), v14, (double *)v33, &v32, &v31, 5, v16, v32, v31) == 2)
      {
        long long v17 = *(_OWORD *)(v11 + 16);
        *(_OWORD *)uint64_t buf = *(_OWORD *)v11;
        *(_OWORD *)&uint8_t buf[16] = v17;
        long long v18 = *(_OWORD *)(v11 + 48);
        *(_OWORD *)int v43 = *(_OWORD *)(v11 + 32);
        *(_OWORD *)&v43[16] = v18;
        *(void *)uint64_t buf = *(void *)v33;
        *(double *)&uint8_t buf[8] = v32;
        *(double *)&unsigned char buf[24] = v31;
        *(_DWORD *)&v43[4] = 2;
        return sub_100733630((uint64_t)buf, (double *)(a1 + 32), (_DWORD *)(a1 + 472), v13, a4, a5, Current);
      }
    }
    return 1;
  }

  return sub_100733630(v11, (double *)(a1 + 32), (_DWORD *)(a1 + 472), v13, a4, a5, Current);
}

uint64_t sub_100734DB4(uint64_t a1, unsigned int a2, int a3)
{
  char v6 = (unsigned char *)sub_10067B400();
  if (v6)
  {
    int v7 = v6[1];
    if (v6[1]) {
      int v7 = *v6 != 0;
    }
  }
  else
  {
    int v7 = 0;
  }
  if ((a3 & 0xFFFFFFF7) == 1)
  {
    if (a2)
    {
      int v8 = *(_DWORD *)(a1 + 4);
      *(_DWORD *)a1 = 0;
      *(_DWORD *)(a1 + 4) = v8 + 1;
      if (!*(unsigned char *)(a1 + 8) && v8 >= *(_DWORD *)(a1 + 16)) {
        *(unsigned char *)(a1 + 8) = 1;
      }
    }
    else
    {
      int v10 = (*(_DWORD *)a1)++;
      *(_DWORD *)(a1 + 4) = 0;
      if (v10 >= *(_DWORD *)(a1 + 12)) {
        *(unsigned char *)(a1 + 8) = 0;
      }
    }
    if (v7) {
      return 1;
    }
  }
  else if ((v7 | a2 ^ 1))
  {
    return v7 & a2;
  }
  return *(unsigned char *)(a1 + 8) != 0;
}

void sub_100734E8C(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a1 + 1)) {
    return;
  }
  if (*(double *)(a2 + 76) < 0.0
    || *(double *)(a2 + 504) < 0.0
    || sub_1000EF668(*(double *)(a2 + 4), *(double *)(a2 + 12)))
  {
    if (qword_102419360 != -1) {
      dispatch_once(&qword_102419360, &stru_1022C64B8);
    }
    double v4 = qword_102419368;
    if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        int v5 = (void *)*v5;
      }
      int v6 = *(_DWORD *)(a2 + 96);
      *(_DWORD *)uint64_t buf = 136380931;
      int v25 = v5;
      __int16 v26 = 1026;
      LODWORD(v27) = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "CLNMEAScreener,store,%{private}s,invalid location input,type,%{public}d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C64B8);
      }
      long long v17 = (void *)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        long long v17 = (void *)*v17;
      }
      int v18 = *(_DWORD *)(a2 + 96);
      *(_DWORD *)uint64_t v21 = 136380931;
      *(void *)&v21[4] = v17;
      *(_WORD *)&v21[12] = 1026;
      *(_DWORD *)&v21[14] = v18;
      int v19 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLNmeaScreener::updateExternalLocation(const CLLocationProvider_Type::NotificationData &)", "%s\n", v19);
      if (v19 != (char *)buf) {
        free(v19);
      }
    }
    return;
  }
  int v7 = *(_DWORD *)(a2 + 96);
  if ((v7 & 0xFFFFFFF7) == 1 && !*(unsigned char *)(a2 + 516))
  {
    if (!*(void *)(a2 + 680))
    {
LABEL_32:
      sub_1007331A4((uint64_t *)(a1 + 72), a2);
      sub_1007331A4((uint64_t *)(a1 + 136), a2);
      return;
    }
    *(void *)uint64_t v21 = 0xBFF0000000000000;
    *(_OWORD *)&v21[8] = 0u;
    long long v22 = 0u;
    int v23 = 0;
    double v8 = sub_10016C458();
    sub_100735520((uint64_t)v21, *(uint64_t **)(a2 + 680), v8);
    if (*(int *)&v21[8] <= 19 && *(_DWORD *)&v21[12] == *(_DWORD *)&v21[8])
    {
      *(unsigned char *)(a1 + 457) = 0;
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C64B8);
      }
      int v9 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v10 = *(void *)(a2 + 4);
        uint64_t v11 = *(void *)(a2 + 12);
        *(_DWORD *)uint64_t buf = 134349825;
        int v25 = *(void **)v21;
        __int16 v26 = 2049;
        uint64_t v27 = v10;
        __int16 v28 = 2049;
        uint64_t v29 = v11;
        __int16 v30 = 1026;
        int v31 = -1;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "CLNmeaScreener,store,validityTimeMCT,%{public}.1lf,lat,%{private}.3f,lon,%{private}.3f,goodGNSSTracking,%{public}d", buf, 0x26u);
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_32;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102419360 == -1) {
        goto LABEL_45;
      }
    }
    else
    {
      *(void *)(a1 + 464) = *(void *)v21;
      *(unsigned char *)(a1 + 457) = sub_100735634((uint64_t)v21);
      if (qword_102419360 != -1) {
        dispatch_once(&qword_102419360, &stru_1022C64B8);
      }
      double v13 = qword_102419368;
      if (os_log_type_enabled((os_log_t)qword_102419368, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v14 = *(void *)(a2 + 4);
        uint64_t v15 = *(void *)(a2 + 12);
        int v16 = *(unsigned __int8 *)(a1 + 457);
        *(_DWORD *)uint64_t buf = 134349825;
        int v25 = *(void **)v21;
        __int16 v26 = 2049;
        uint64_t v27 = v14;
        __int16 v28 = 2049;
        uint64_t v29 = v15;
        __int16 v30 = 1026;
        int v31 = v16;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "CLNmeaScreener,store,validityTimeMCT,%{public}.1lf,lat,%{private}.3f,lon,%{private}.3f,goodGNSSTracking,%{public}d", buf, 0x26u);
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_32;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102419360 == -1) {
        goto LABEL_45;
      }
    }
    dispatch_once(&qword_102419360, &stru_1022C64B8);
LABEL_45:
    uint64_t v20 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLNmeaScreener::updateExternalLocation(const CLLocationProvider_Type::NotificationData &)", "%s\n", v20);
    if (v20 != (char *)buf) {
      free(v20);
    }
    goto LABEL_32;
  }
  switch(v7)
  {
    case 4:
    case 11:
    case 13:
      int v12 = (uint64_t *)(a1 + 200);
      goto LABEL_35;
    case 6:
      int v12 = (uint64_t *)(a1 + 264);
      goto LABEL_35;
    case 7:
      int v12 = (uint64_t *)(a1 + 328);
LABEL_35:
      sub_1007331A4(v12, a2);
      break;
    default:
      return;
  }
}