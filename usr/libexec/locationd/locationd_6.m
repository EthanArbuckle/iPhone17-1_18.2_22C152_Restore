uint64_t sub_10039F3E0(uint64_t a1)
{
  void *v2;

  *(void *)a1 = &off_1022ACF60;

  *(void *)(a1 + 32) = 0;
  v2 = *(void **)(a1 + 8);
  if (v2)
  {

    *(void *)(a1 + 8) = 0;
  }
  return a1;
}

uint64_t sub_10039F444(uint64_t a1)
{
  *(void *)a1 = off_1022ACEC0;

  sub_10051310C(a1 + 56);

  return sub_10039F3E0(a1);
}

void sub_10039F4AC(uint64_t a1)
{
  sub_10039F444(a1);

  operator delete();
}

void *sub_10039F4E4(uint64_t a1, double *a2)
{
  if (qword_102419030 != -1) {
    dispatch_once(&qword_102419030, &stru_1022ACF30);
  }
  v4 = qword_102419038;
  if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Attempt to lookup bin.", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    __int16 v22 = 0;
    v17 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual GPSCalCoreAnalyticsBin *CMMobilityCal::GPSRawSpeedToKValueTable::lookupOutputGivenInput(const double &)", "%s\n", v17);
    if (v17 != (char *)buf) {
      free(v17);
    }
  }
  uint64_t v6 = a1 + 56;
  uint64_t v5 = *(void *)(a1 + 56);
  *(void *)buf = a1 + 56;
  (*(void (**)(uint64_t))(v5 + 16))(a1 + 56);
  __int16 v25 = 256;
  double v7 = *a2;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  v8 = *(void **)(a1 + 8);
  id v9 = [v8 countByEnumeratingWithState:&v18 objects:v23 count:16];
  if (v9)
  {
    double v10 = v7 + 0.00001;
    uint64_t v11 = *(void *)v19;
LABEL_8:
    uint64_t v12 = 0;
    while (1)
    {
      if (*(void *)v19 != v11) {
        objc_enumerationMutation(v8);
      }
      v13 = *(void **)(*((void *)&v18 + 1) + 8 * v12);
      if (v13)
      {
        [*(id *)(*((void *)&v18 + 1) + 8 * v12) speedLB];
        if (v10 >= v14)
        {
          [v13 speedUB];
          if (v10 < v15) {
            break;
          }
        }
      }
      if (v9 == (id)++v12)
      {
        id v9 = [v8 countByEnumeratingWithState:&v18 objects:v23 count:16];
        if (v9) {
          goto LABEL_8;
        }
        break;
      }
    }
  }
  else
  {
    v13 = 0;
  }
  (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  return v13;
}

void sub_10039F7AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  if (a2) {
    sub_1001C7F8C(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10039F7E0(uint64_t a1, double *a2, void *a3)
{
  uint64_t v6 = a1 + 56;
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v21 = a1 + 56;
  (*(void (**)(uint64_t))(v5 + 16))(a1 + 56);
  __int16 v22 = 256;
  double v7 = *a2;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  v8 = *(void **)(v6 - 48);
  id v9 = [v8 countByEnumeratingWithState:&v17 objects:v23 count:16];
  if (v9)
  {
    double v10 = v7 + 0.00001;
    uint64_t v11 = *(void *)v18;
    while (2)
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(void *)v18 != v11) {
          objc_enumerationMutation(v8);
        }
        v13 = *(void **)(*((void *)&v17 + 1) + 8 * i);
        if (v13)
        {
          [*(id *)(*((void *)&v17 + 1) + 8 * i) speedLB];
          if (v10 >= v14)
          {
            [v13 speedUB];
            if (v10 < v15)
            {
              [a3 mean];
              [v13 setMean:];
              [a3 variance];
              [v13 setMean:];
              [v13 setMean:(double)(int)[a3 updateCount]];
              [a3 lastUpdateTime];
              [v13 setMean:];
              goto LABEL_13;
            }
          }
        }
      }
      id v9 = [v8 countByEnumeratingWithState:&v17 objects:v23 count:16];
      if (v9) {
        continue;
      }
      break;
    }
  }
LABEL_13:
  (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  return 100;
}

void sub_10039F9B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  if (a2) {
    sub_1001C7F8C(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10039F9E4(uint64_t a1, void *a2)
{
  [a2 distanceRawPed];
  if (v4 != 0.0)
  {
    [objc_msgSend(a2, "stop") timeIntervalSinceReferenceDate];
    double v6 = v5;
    [objc_msgSend(a2, "start") timeIntervalSinceReferenceDate];
    if (v6 - v7 != 0.0)
    {
      [a2 distanceGps];
      double v9 = v8;
      [a2 distanceRawPed];
      double v26 = v9 / v10;
      [a2 distanceRawPed];
      double v12 = v11;
      [objc_msgSend(a2, "stop") timeIntervalSinceReferenceDate];
      double v14 = v13;
      [objc_msgSend(a2, "start") timeIntervalSinceReferenceDate];
      double v25 = v12 / (v14 - v15);
      [a2 distanceGps];
      double v17 = v16 / 400.0;
      if (v17 <= 1.0) {
        double v18 = v17 * 0.4;
      }
      else {
        double v18 = 0.4;
      }
      double v24 = v18;
      if (qword_102419030 != -1) {
        dispatch_once(&qword_102419030, &stru_1022ACF30);
      }
      long long v19 = qword_102419038;
      if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Attempt to update GPS calibration table.", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419030 != -1) {
          dispatch_once(&qword_102419030, &stru_1022ACF30);
        }
        __int16 v22 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "CMError CMMobilityCal::GPSRawSpeedToKValueTable::receiveSingleCalTrack(const CalibrationTrack *)", "%s\n", v22);
        if (v22 != (char *)buf) {
          free(v22);
        }
      }
      sub_10039FD84(a1, &v26, &v25, &v24);
      if (qword_102419030 != -1) {
        dispatch_once(&qword_102419030, &stru_1022ACF30);
      }
      long long v20 = qword_102419038;
      if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Attempt to persist GPS calibration table.", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419030 != -1) {
          dispatch_once(&qword_102419030, &stru_1022ACF30);
        }
        v23 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "CMError CMMobilityCal::GPSRawSpeedToKValueTable::receiveSingleCalTrack(const CalibrationTrack *)", "%s\n", v23);
        if (v23 != (char *)buf) {
          free(v23);
        }
      }
      sub_10039FFF4(a1);
    }
  }
  return 100;
}

uint64_t sub_10039FD84(uint64_t a1, double *a2, double *a3, double *a4)
{
  uint64_t v8 = a1 + 56;
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v33 = a1 + 56;
  (*(void (**)(uint64_t))(v7 + 16))(a1 + 56);
  __int16 v34 = 256;
  double v9 = *a3;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v32 = 0u;
  double v10 = *(void **)(v8 - 48);
  id v11 = [v10 countByEnumeratingWithState:&v29 objects:v35 count:16];
  if (v11)
  {
    double v12 = v9 + 0.00001;
    uint64_t v13 = *(void *)v30;
    while (2)
    {
      for (i = 0; i != v11; i = (char *)i + 1)
      {
        if (*(void *)v30 != v13) {
          objc_enumerationMutation(v10);
        }
        double v15 = *(void **)(*((void *)&v29 + 1) + 8 * i);
        if (v15)
        {
          [*(id *)(*((void *)&v29 + 1) + 8 * i) speedLB];
          if (v12 >= v16)
          {
            [v15 speedUB];
            if (v12 < v17)
            {
              [v15 mean];
              double v19 = v18;
              double v20 = *a4;
              double v21 = *a2;
              [v15 variance];
              double v23 = v22;
              double v24 = *a4;
              double v25 = *a2;
              [v15 mean];
              double v27 = v26;
              [v15 setMean:v20 * v21 + v19 * (1.0 - v20)];
              [v15 setVariance:(1.0 - v20) * (v23 + v24 * ((v25 - v27) * (v25 - v27)))];
              [v15 setUpdateCount:[v15 updateCount] + 1];
              [v15 setLastUpdateTime:CFAbsoluteTimeGetCurrent()];
              goto LABEL_13;
            }
          }
        }
      }
      id v11 = [v10 countByEnumeratingWithState:&v29 objects:v35 count:16];
      if (v11) {
        continue;
      }
      break;
    }
  }
LABEL_13:
  (*(void (**)(uint64_t))(*(void *)v8 + 24))(v8);
  return 100;
}

void sub_10039FFC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10039FFF4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 41)) {
    return 100;
  }
  if ((objc_opt_respondsToSelector() & 1) != 0
    && (v17[0] = @"version",
        v2 = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 16)],
        v17[1] = @"bins",
        v18[0] = v2,
        v18[1] = +[NSArray arrayWithArray:*(void *)(a1 + 8)],
        +[NSKeyedArchiver archivedDataWithRootObject:requiringSecureCoding:error:](NSKeyedArchiver, "archivedDataWithRootObject:requiringSecureCoding:error:", +[NSDictionary dictionaryWithObjects:v18 forKeys:v17 count:2], 1, 0)))
  {
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    v3 = qword_102419038;
    if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v16 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Attempt to store %@.", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419030 != -1) {
        dispatch_once(&qword_102419030, &stru_1022ACF30);
      }
      double v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CMError CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::store() [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v12);
      if (v12 != (char *)buf) {
        free(v12);
      }
    }
    sub_1004D258C(*(void *)(a1 + 24));
    if ((*(uint64_t (**)(void))(**(void **)(a1 + 24) + 944))())
    {
      if (qword_102419030 != -1) {
        dispatch_once(&qword_102419030, &stru_1022ACF30);
      }
      double v5 = qword_102419038;
      if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v6 = *(void *)(a1 + 32);
        *(_DWORD *)buf = 138412290;
        uint64_t v16 = v6;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Table %@ stored successfully.", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419030 != -1) {
          dispatch_once(&qword_102419030, &stru_1022ACF30);
        }
        uint64_t v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "CMError CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::store() [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v13);
        if (v13 != (char *)buf) {
          free(v13);
        }
      }
      return 100;
    }
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    double v9 = qword_102419038;
    if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_ERROR))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      uint64_t v16 = v10;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to store %@.", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419030 != -1) {
        dispatch_once(&qword_102419030, &stru_1022ACF30);
      }
      double v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "CMError CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::store() [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
    return 103;
  }
  else
  {
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    uint64_t v8 = qword_102419038;
    if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to serialize calibration table for storage.", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419030 != -1) {
        dispatch_once(&qword_102419030, &stru_1022ACF30);
      }
      id v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "CMError CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::store() [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
    }
    return 112;
  }
}

uint64_t sub_1003A0650(uint64_t a1, _OWORD *a2)
{
  uint64_t v5 = a1 + 56;
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v74 = a1 + 56;
  (*(void (**)(uint64_t))(v4 + 16))(a1 + 56);
  __int16 v75 = 256;
  long long v6 = a2[1];
  v72[0] = *a2;
  v72[1] = v6;
  v73[0] = a2[2];
  *(_OWORD *)((char *)v73 + 12) = *(_OWORD *)((char *)a2 + 44);
  int v44 = sub_10146C6F8((uint64_t)v72);
  long long v7 = a2[1];
  v70[0] = *a2;
  v70[1] = v7;
  v71[0] = a2[2];
  *(_OWORD *)((char *)v71 + 12) = *(_OWORD *)((char *)a2 + 44);
  int v8 = sub_1006D40B0((unsigned int *)v70);
  long long v9 = a2[1];
  v68[0] = *a2;
  v68[1] = v9;
  v69[0] = a2[2];
  *(_OWORD *)((char *)v69 + 12) = *(_OWORD *)((char *)a2 + 44);
  int v10 = sub_10146C7A4((uint64_t)v68);
  long long v11 = a2[1];
  v66[0] = *a2;
  v66[1] = v11;
  v67[0] = a2[2];
  *(_OWORD *)((char *)v67 + 12) = *(_OWORD *)((char *)a2 + 44);
  int v12 = sub_10146C868((uint64_t)v66);
  uint64_t v42 = v5;
  long long v64 = 0u;
  long long v65 = 0u;
  long long v63 = 0u;
  long long v62 = 0u;
  id obj = *(id *)(a1 + 8);
  id v13 = [obj countByEnumeratingWithState:&v62 objects:v116 count:16];
  if (v13)
  {
    uint64_t v14 = *(void *)v63;
    do
    {
      double v15 = 0;
      do
      {
        if (*(void *)v63 != v14) {
          objc_enumerationMutation(obj);
        }
        uint64_t v16 = *(void **)(*((void *)&v62 + 1) + 8 * (void)v15);
        if (v16)
        {
          if ((int)[*(id *)(*((void *)&v62 + 1) + 8 * (void)v15) updateCount] < 1)
          {
            double v18 = 0.0;
          }
          else
          {
            [v16 variance];
            double v18 = sqrt(v17 / (double)(int)[v16 updateCount]) * 1.98;
          }
          v51 = _NSConcreteStackBlock;
          uint64_t v52 = 3221225472;
          if (v18 <= 0.0) {
            double v19 = 0.0;
          }
          else {
            double v19 = 1.0 - v18;
          }
          v53 = sub_1003A0D08;
          v54 = &unk_1022ACEE8;
          int v58 = v44;
          int v59 = v8;
          v55 = v16;
          int v60 = v10;
          int v61 = v12;
          double v56 = v19;
          double v57 = v18;
          AnalyticsSendEventLazy();
          if (qword_102419030 != -1) {
            dispatch_once(&qword_102419030, &stru_1022ACF30);
          }
          double v20 = qword_102419038;
          if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_INFO))
          {
            [v16 speedLB];
            double v22 = v21;
            __p = 0;
            v49 = 0;
            uint64_t v50 = 0;
            sub_1001DD364(&__p, (const void *)qword_10247A870, qword_10247A878, (qword_10247A878 - qword_10247A870) >> 3);
            if (v49 == __p)
            {
              LODWORD(v23) = 0;
            }
            else
            {
              uint64_t v23 = 0;
              unint64_t v24 = (v49 - (unsigned char *)__p) >> 3;
              if (v24 <= 1) {
                unint64_t v24 = 1;
              }
              while (*((double *)__p + v23) < v22)
              {
                if (v24 == ++v23)
                {
                  LODWORD(v23) = v24;
                  break;
                }
              }
            }
            [v16 mean];
            uint64_t v26 = v25;
            [v16 variance];
            uint64_t v28 = v27;
            [v16 lastUpdateTime];
            *(_DWORD *)buf = 67111424;
            int v97 = v44;
            __int16 v98 = 1024;
            int v99 = v8;
            __int16 v100 = 1024;
            int v101 = v23;
            __int16 v102 = 1024;
            int v103 = v10;
            __int16 v104 = 1024;
            int v105 = v12;
            __int16 v106 = 2048;
            uint64_t v107 = v26;
            __int16 v108 = 2048;
            uint64_t v109 = v28;
            __int16 v110 = 2048;
            double v111 = v19;
            __int16 v112 = 2048;
            double v113 = v18;
            __int16 v114 = 2048;
            uint64_t v115 = v29;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "GPS Calibration, sent Core Analytics event. ageGroup %d | gender: %d | speedBin: %d | userBmiBin: %d | userHeightBin: %d | kvalueMovingMean: %f | kvalueMovingVar: %f | kvalueConfidenceMetric: %f | kvalueStandardError: %f | timeFromLastUpdate: %f", buf, 0x52u);
            if (__p)
            {
              v49 = __p;
              operator delete(__p);
            }
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419030 != -1) {
              dispatch_once(&qword_102419030, &stru_1022ACF30);
            }
            [v16 speedLB];
            double v31 = v30;
            v45 = 0;
            v46 = 0;
            uint64_t v47 = 0;
            sub_1001DD364(&v45, (const void *)qword_10247A870, qword_10247A878, (qword_10247A878 - qword_10247A870) >> 3);
            if (v46 == v45)
            {
              LODWORD(v32) = 0;
            }
            else
            {
              uint64_t v32 = 0;
              unint64_t v33 = (v46 - (unsigned char *)v45) >> 3;
              if (v33 <= 1) {
                unint64_t v33 = 1;
              }
              while (*((double *)v45 + v32) < v31)
              {
                if (v33 == ++v32)
                {
                  LODWORD(v32) = v33;
                  break;
                }
              }
            }
            [v16 mean];
            uint64_t v35 = v34;
            [v16 variance];
            uint64_t v37 = v36;
            [v16 lastUpdateTime];
            int v76 = 67111424;
            int v77 = v44;
            __int16 v78 = 1024;
            int v79 = v8;
            __int16 v80 = 1024;
            int v81 = v32;
            __int16 v82 = 1024;
            int v83 = v10;
            __int16 v84 = 1024;
            int v85 = v12;
            __int16 v86 = 2048;
            uint64_t v87 = v35;
            __int16 v88 = 2048;
            uint64_t v89 = v37;
            __int16 v90 = 2048;
            double v91 = v19;
            __int16 v92 = 2048;
            double v93 = v18;
            __int16 v94 = 2048;
            uint64_t v95 = v38;
            v39 = (char *)_os_log_send_and_compose_impl();
            if (v45)
            {
              v46 = v45;
              operator delete(v45);
            }
            sub_1004BA5E4("Generic", 1, 0, 2, "CMError CMMobilityCal::GPSRawSpeedToKValueTable::sendCoreAnalytics(const CLBodyMetrics &)", "%s\n", v39);
            if (v39 != (char *)buf) {
              free(v39);
            }
          }
        }
        double v15 = (char *)v15 + 1;
      }
      while (v15 != v13);
      id v40 = [obj countByEnumeratingWithState:&v62 objects:v116 count:16];
      id v13 = v40;
    }
    while (v40);
  }
  (*(void (**)(uint64_t))(*(void *)v42 + 24))(v42);
  return 100;
}

void sub_1003A0C8C(_Unwind_Exception *a1)
{
}

NSDictionary *sub_1003A0D08(uint64_t a1)
{
  v11[0] = @"ageGroup";
  v12[0] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 56)];
  v11[1] = @"gender";
  v12[1] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 60)];
  v11[2] = @"speedBin";
  [*(id *)(a1 + 32) speedLB];
  double v3 = v2;
  long long v9 = 0;
  uint64_t v10 = 0;
  __p = 0;
  sub_1001DD364(&__p, (const void *)qword_10247A870, qword_10247A878, (qword_10247A878 - qword_10247A870) >> 3);
  if (v9 == __p)
  {
    unint64_t v4 = 0;
  }
  else
  {
    unint64_t v4 = 0;
    unint64_t v5 = (v9 - (unsigned char *)__p) >> 3;
    if (v5 <= 1) {
      unint64_t v5 = 1;
    }
    while (*((double *)__p + v4) < v3)
    {
      if (v5 == ++v4)
      {
        unint64_t v4 = v5;
        break;
      }
    }
  }
  v12[2] = +[NSNumber numberWithInt:v4];
  v11[3] = @"userBmiBin";
  v12[3] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 64)];
  v11[4] = @"userHeightBin";
  v12[4] = +[NSNumber numberWithInt:*(unsigned int *)(a1 + 68)];
  v11[5] = @"kvalueMovingMean";
  [*(id *)(a1 + 32) mean];
  v12[5] = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  v11[6] = @"kvalueMovingVar";
  [*(id *)(a1 + 32) variance];
  v12[6] = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  v11[7] = @"kvalueConfidenceMetric";
  v12[7] = +[NSNumber numberWithDouble:*(double *)(a1 + 40)];
  v11[8] = @"kvalueStandardError";
  v12[8] = +[NSNumber numberWithDouble:*(double *)(a1 + 48)];
  v11[9] = @"timeFromLastUpdate";
  [*(id *)(a1 + 32) lastUpdateTime];
  v12[9] = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
  long long v6 = +[NSDictionary dictionaryWithObjects:v12 forKeys:v11 count:10];
  if (__p)
  {
    long long v9 = __p;
    operator delete(__p);
  }
  return v6;
}

void sub_1003A0F40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
}

void sub_1003A0F64(id a1)
{
  qword_102419038 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

uint64_t sub_1003A0F94(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 40)) {
    return 0xFFFFFFFFLL;
  }
  if (qword_102419030 != -1) {
    dispatch_once(&qword_102419030, &stru_1022ACF30);
  }
  double v2 = qword_102419038;
  if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    *(void *)uint64_t v32 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Attempt to restore %@ from cache.", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    uint64_t v20 = *(void *)(a1 + 32);
    int v28 = 138412290;
    *(void *)uint64_t v29 = v20;
    double v21 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "TableVersion CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::restore() [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v21);
    if (v21 != (char *)buf) {
      free(v21);
    }
  }
  CFTypeRef v27 = 0;
  if (!sub_1004D01D8(*(void *)(a1 + 24), *(void *)(a1 + 32), &v27)) {
    goto LABEL_28;
  }
  CFTypeRef v4 = v27;
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = objc_opt_class();
  uint64_t v8 = objc_opt_class();
  uint64_t v26 = 0;
  id v9 = +[NSKeyedUnarchiver unarchivedObjectOfClasses:fromData:error:](NSKeyedUnarchiver, "unarchivedObjectOfClasses:fromData:error:", +[NSSet setWithObjects:](NSSet, "setWithObjects:", v5, v6, v7, v8, objc_opt_class(), 0), v4, &v26);
  if (v26)
  {
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    uint64_t v10 = qword_102419038;
    if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138412546;
      *(void *)uint64_t v32 = v11;
      *(_WORD *)&v32[8] = 2112;
      uint64_t v33 = v26;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Failed to decode %@, %@", buf, 0x16u);
    }
    if (!sub_10013D1A0(115, 0)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    uint64_t v12 = *(void *)(a1 + 32);
    int v28 = 138412546;
    *(void *)uint64_t v29 = v12;
    *(_WORD *)&v29[8] = 2112;
    uint64_t v30 = v26;
    goto LABEL_42;
  }
  id v13 = v9;
  if (!v9) {
    goto LABEL_28;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_28;
  }
  uint64_t v14 = *(void **)(a1 + 8);
  if (v14)
  {

    *(void *)(a1 + 8) = 0;
  }
  *(_DWORD *)(a1 + 20) = [objc_msgSend(objc_msgSend(v13, "objectForKeyedSubscript:", @"version"), "shortValue");
  *(void *)(a1 + 8) = [[objc_msgSend(v13, "objectForKeyedSubscript:", @"bins") mutableCopy];
  if (qword_102419030 != -1) {
    dispatch_once(&qword_102419030, &stru_1022ACF30);
  }
  double v15 = qword_102419038;
  if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEFAULT))
  {
    unsigned int v16 = [*(id *)(a1 + 8) count];
    int v17 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)buf = 67109376;
    *(_DWORD *)uint64_t v32 = v16;
    *(_WORD *)&v32[4] = 1024;
    *(_DWORD *)&v32[6] = v17;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Restored %d bins of version %d.", buf, 0xEu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    unsigned int v23 = [*(id *)(a1 + 8) count];
    int v24 = *(_DWORD *)(a1 + 20);
    int v28 = 67109376;
    *(_DWORD *)uint64_t v29 = v23;
    *(_WORD *)&v29[4] = 1024;
    *(_DWORD *)&v29[6] = v24;
    uint64_t v25 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "TableVersion CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::restore() [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v25);
    if (v25 != (char *)buf) {
      free(v25);
    }
  }
  if (![*(id *)(a1 + 8) count] || (uint64_t result = *(unsigned int *)(a1 + 20), (int)result <= 0))
  {
LABEL_28:
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    double v19 = qword_102419038;
    if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Failed to restore bins.", buf, 2u);
    }
    if (!sub_10013D1A0(115, 0)) {
      return 0xFFFFFFFFLL;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    LOWORD(v28) = 0;
LABEL_42:
    double v22 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "TableVersion CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::restore() [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v22);
    if (v22 != (char *)buf) {
      free(v22);
    }
    return 0xFFFFFFFFLL;
  }
  return result;
}

uint64_t sub_1003A1630()
{
  qword_10247A870 = 0;
  qword_10247A878 = 0;
  qword_10247A880 = 0;
  v0 = operator new(0x38uLL);
  qword_10247A878 = (uint64_t)v0 + 56;
  qword_10247A880 = (uint64_t)v0 + 56;
  _OWORD *v0 = xmmword_101D1C490;
  v0[1] = unk_101D1C4A0;
  v0[2] = xmmword_101D1C4B0;
  *((void *)v0 + 6) = 0x4003333333333333;
  qword_10247A870 = (uint64_t)v0;

  return __cxa_atexit((void (*)(void *))sub_10039DF6C, &qword_10247A870, (void *)&_mh_execute_header);
}

void sub_1003A16BC()
{
}

void sub_1003A1700()
{
}

uint64_t sub_1003A1724()
{
  if (qword_10247A888 != -1) {
    dispatch_once(&qword_10247A888, &stru_1022ACF80);
  }
  return qword_102489C00;
}

void sub_1003A176C(uint64_t a1)
{
}

void sub_1003A1E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10051F740(va);
  uint64_t v8 = (std::__shared_weak_count *)v5[45];
  if (v8) {
    sub_1000DB0A0(v8);
  }
  sub_1003A73E8(v6);
  sub_1009D1DE4(v5);
  _Unwind_Resume(a1);
}

void sub_1003A2230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1000D3E78();
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1003A60EC;
  v11[3] = &unk_1022ACFE0;
  v11[4] = a2;
  v11[5] = a1;
  v11[6] = a3;
  v11[7] = a4;
  v11[8] = a5;
  sub_1009E8E94(v10, (uint64_t)v11);
}

void *sub_1003A22D8(void *a1)
{
  *a1 = off_1022ACFB0;
  sub_1003A2344(a1);
  double v2 = (std::__shared_weak_count *)a1[45];
  if (v2) {
    sub_1000DB0A0(v2);
  }
  sub_1003A73E8(a1 + 13);

  return sub_1009D1DE4(a1);
}

void sub_1003A2344(void *a1)
{
  double v2 = (void *)a1[5];
  if (v2)
  {
    sub_1003A73E8(v2 + 90);
    sub_1003A73E8(v2 + 61);
    sub_1003A73E8(v2 + 32);
    sub_1003A73E8(v2 + 3);
    operator delete();
  }
  if (a1[6])
  {
    uint64_t v3 = sub_1009EC0A8();
    sub_1009D26C4(v3, 0, a1[6]);
    uint64_t v4 = a1[6];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    a1[6] = 0;
  }
  if (a1[8])
  {
    uint64_t v5 = sub_100A08A84();
    sub_1009D26C4(v5, 0, a1[8]);
    uint64_t v6 = a1[8];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    a1[8] = 0;
  }
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD040);
  }
  uint64_t v7 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Stopping orientation detection.", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    uint64_t v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationNotifier::stopDetection()", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
}

void sub_1003A25A8(void *a1)
{
  sub_1003A22D8(a1);

  operator delete();
}

void sub_1003A25E0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (a2 >= 3)
  {
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    uint64_t v3 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "Unrecognized notification", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      LOWORD(v18) = 0;
      uint64_t v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLOrientationNotifier::numberOfSpectatorsChanged(int, size_t)", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
    return;
  }
  if (!*(void *)(a1 + 352))
  {
    uint64_t v8 = (uint64_t *)sub_1014CB834();
    uint64_t v16 = 0x8A00000020;
    char v17 = 0;
    sub_101A46D60(v8, (uint64_t)&v16, (uint64_t *)buf);
    long long v9 = *(_OWORD *)buf;
    memset(buf, 0, sizeof(buf));
    uint64_t v10 = *(std::__shared_weak_count **)(a1 + 360);
    *(_OWORD *)(a1 + 352) = v9;
    if (v10)
    {
      sub_1000DB0A0(v10);
      if (*(void *)&buf[8]) {
        sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
      }
    }
    sub_100A29EB0(*(void *)(a1 + 352), &off_102397068);
  }
  if (a3 != 1)
  {
    if (!a3)
    {
      *(unsigned char *)(a1 + 33) = 0;
      if (*(void *)(a1 + 392))
      {
        uint64_t v11 = sub_100D559B0();
        sub_1009D26C4(v11, 0, *(void *)(a1 + 392));
        uint64_t v12 = *(void *)(a1 + 392);
        if (v12) {
          (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
        }
        *(void *)(a1 + 392) = 0;
      }
      if ((sub_1000A16E8() & 0x40) != 0)
      {
        sub_100A29D84(*(void *)(a1 + 352), 0);
        sub_1003A2C7C(a1);
        sub_100A2941C(*(void **)(a1 + 352), 0, 0);
        sub_100A293C8(*(void *)(a1 + 352), 0, 0);
        sub_100A2932C(*(uint64_t **)(a1 + 352), 0, 0);
      }
      if (*(void *)(a1 + 48)) {
        sub_1003A2344((void *)a1);
      }
    }
    return;
  }
  if ((sub_1000A16E8() & 0x40) != 0)
  {
    sub_100A2932C(*(uint64_t **)(a1 + 352), (uint64_t)sub_1003A2CE8, a1);
    sub_100A293C8(*(void *)(a1 + 352), (uint64_t)sub_1003A2CF0, a1);
    sub_100A2941C(*(void **)(a1 + 352), (uint64_t)nullsub_176, a1);
    sub_1003A2D30(a1);
    if (a2 <= 1)
    {
      sub_100A29D84(*(void *)(a1 + 352), 1);
      goto LABEL_46;
    }
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    id v13 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = a2;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_FAULT, "Unrecognized notification request %{public}u", buf, 8u);
    }
    if (!sub_10013D1A0(115, 0)) {
      goto LABEL_46;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    int v18 = 67240192;
    unsigned int v19 = a2;
    uint64_t v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLOrientationNotifier::numberOfSpectatorsChanged(int, size_t)", "%s\n", v14);
LABEL_53:
    if (v14 != (char *)buf) {
      free(v14);
    }
    goto LABEL_46;
  }
  if (a2 == 1)
  {
    sub_1003A2DB0(a1, 1);
    goto LABEL_46;
  }
  if (a2)
  {
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    double v15 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_FAULT, "Unrecognized notification", buf, 2u);
    }
    if (!sub_10013D1A0(115, 0)) {
      goto LABEL_46;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    LOWORD(v18) = 0;
    uint64_t v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLOrientationNotifier::numberOfSpectatorsChanged(int, size_t)", "%s\n", v14);
    goto LABEL_53;
  }
  sub_1003A2DB0(a1, 0);
LABEL_46:
  if (!*(void *)(a1 + 392)) {
    operator new();
  }
  *(unsigned char *)(a1 + 33) = 1;
}

void sub_1003A2C48()
{
}

void sub_1003A2C7C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 368) - 1;
  *(_DWORD *)(a1 + 368) = v1;
  if (!v1)
  {
    sub_100A29A24(*(void *)(a1 + 352), 0, 0);
    if (sub_100A291D0(*(void *)(a1 + 352)))
    {
      sub_1003A4018((void *)a1);
    }
  }
}

void sub_1003A2CE8(uint64_t a1)
{
}

uint64_t sub_1003A2CF0(uint64_t a1)
{
  sub_1003A5200(a1);

  return sub_1003A60FC(a1, 1);
}

void sub_1003A2D30(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 368);
  *(_DWORD *)(a1 + 368) = v1 + 1;
  if (!v1)
  {
    sub_100A29A24(*(void *)(a1 + 352), (uint64_t)sub_1003A3FE0, a1);
    if (sub_100A291D0(*(void *)(a1 + 352))) {
      sub_1003A4018((void *)a1);
    }
    sub_1003A4268((void *)a1);
  }
}

void sub_1003A2DB0(uint64_t a1, int a2)
{
  uint64_t v3 = *(void **)(a1 + 40);
  if (v3)
  {
    sub_1003A73E8(v3 + 90);
    sub_1003A73E8(v3 + 61);
    sub_1003A73E8(v3 + 32);
    sub_1003A73E8(v3 + 3);
    operator delete();
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 < 2) {
    int v5 = 1;
  }
  else {
    int v5 = a2;
  }
  if (v5 == 1)
  {
    if (v4 >= 2 && a2 != 0)
    {
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      uint64_t v7 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEFAULT))
      {
        int v8 = *(unsigned __int8 *)(a1 + 32);
        *(_DWORD *)buf = 67240192;
        *(_DWORD *)&uint8_t buf[4] = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "forceAccelOnly for device %{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD040);
        }
        uint64_t v25 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationNotifier::startDetection(BOOL)", "%s\n", v25);
        if (v25 != buf) {
          free(v25);
        }
      }
      *(unsigned char *)(a1 + 32) = 0;
    }
    *(_DWORD *)(a1 + 56) = 1092616192;
    *(_DWORD *)(a1 + 76) = 1;
    *(void *)(a1 + 88) = 0;
  }
  else
  {
    *(void *)(a1 + 56) = 0x41A0000041C80000;
    uint64_t v9 = sub_1000D3E78();
    sub_10006B564(v9, buf);
    sub_1000A699C(*(uint64_t *)buf, "OrientationGyroTimeout", (void *)(a1 + 88));
    if (*(void *)&buf[8]) {
      sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
    }
    double v10 = *(double *)(a1 + 88);
    *(unsigned char *)(a1 + 80) = v10 > 0.0;
    if (v10 > 0.0)
    {
      *(void *)(a1 + 112) = 8;
      *(void *)(a1 + 128) = 8;
      sub_1003A7544((void *)(a1 + 120));
      *(void *)(a1 + 200) = 8;
      sub_1003A7544((void *)(a1 + 192));
      *(void *)(a1 + 272) = 8;
      sub_1003A7544((void *)(a1 + 264));
      *(_DWORD *)(a1 + 76) = 2;
    }
    uint64_t v11 = sub_1000D3E78();
    sub_10006B564(v11, buf);
    char v12 = sub_1004D11B0(*(uint64_t *)buf, "OrientationStableVariance", (float *)(a1 + 84));
    if (*(void *)&buf[8]) {
      sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
    }
    if ((v12 & 1) == 0) {
      *(_DWORD *)(a1 + 84) = 961656599;
    }
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    id v13 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_INFO))
    {
      uint64_t v14 = *(void *)(a1 + 88);
      int v15 = *(unsigned __int8 *)(a1 + 80);
      double v16 = *(float *)(a1 + 84);
      *(_DWORD *)buf = 134349568;
      *(void *)&uint8_t buf[4] = v14;
      *(_WORD *)&buf[12] = 1026;
      *(_DWORD *)&buf[14] = v15;
      __int16 v28 = 2050;
      double v29 = v16;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "fOrientationGyroTimeout,%{public}f,fEnableGyroTimeout,%{public}d,fMaxAccelerationVarianceForStability,%{public}f", buf, 0x1Cu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      unsigned int v23 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationNotifier::startDetection(BOOL)", "%s\n", v23);
      if (v23 != buf) {
        free(v23);
      }
    }
  }
  uint64_t v17 = sub_1000D3E78();
  sub_10006B564(v17, buf);
  sub_10006EF84(*(uint64_t *)buf, "OrientationAccelDecimation", (_DWORD *)(a1 + 76));
  if (*(void *)&buf[8]) {
    sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
  }
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a1 + 76);
  if (*(float *)(a1 + 56) <= 0.0)
  {
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    uint64_t v20 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_FAULT, "Not starting orientation detection since requested accelerometer frequency < 0", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 == -1) {
        goto LABEL_76;
      }
      goto LABEL_78;
    }
  }
  else
  {
    if (sub_1009EC0A8())
    {
      if ((v5 & 1) != 0 || sub_100A08A84())
      {
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD040);
        }
        int v18 = qword_102419048;
        if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEFAULT))
        {
          int v19 = *(unsigned __int8 *)(a1 + 34);
          *(_DWORD *)buf = 67240192;
          *(_DWORD *)&uint8_t buf[4] = v19;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "fHasSeenACaseLatchCoverOnce, %{public}d", buf, 8u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419040 != -1) {
            dispatch_once(&qword_102419040, &stru_1022AD040);
          }
          int v24 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationNotifier::startDetection(BOOL)", "%s\n", v24);
          if (v24 != buf) {
            free(v24);
          }
        }
        operator new();
      }
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      double v22 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_FAULT, "No gyro; not detecting orientation!",
          buf,
          2u);
      }
      if (!sub_10013D1A0(115, 0)) {
        return;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102419040 == -1)
      {
LABEL_76:
        uint64_t v26 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLOrientationNotifier::startDetection(BOOL)", "%s\n", v26);
        if (v26 != buf) {
          free(v26);
        }
        return;
      }
LABEL_78:
      dispatch_once(&qword_102419040, &stru_1022AD040);
      goto LABEL_76;
    }
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    double v21 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_FAULT, "No accelerometer; not detecting orientation!",
        buf,
        2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 == -1) {
        goto LABEL_76;
      }
      goto LABEL_78;
    }
  }
}

void sub_1003A3AA4()
{
}

void sub_1003A3B0C(char *a1, uint64_t a2)
{
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD040);
  }
  unsigned int v4 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_INFO))
  {
    int v5 = *a1;
    *(_DWORD *)buf = 67240192;
    LODWORD(v27) = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Received keyboard state %{public}u", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    int v13 = *a1;
    int v22 = 67240192;
    LODWORD(v23) = v13;
    uint64_t v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "static void CLOrientationNotifier::onKeyboardState(const BOOL *, void *)", "%s\n", v14);
    if (v14 != (char *)buf) {
      free(v14);
    }
  }
  uint64_t v6 = *(void *)(a2 + 40);
  if (v6) {
    sub_1003B4FCC(v6, *a1);
  }
  if (*(void *)(a2 + 384))
  {
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    uint64_t v7 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_INFO))
    {
      int v8 = *a1;
      *(_DWORD *)buf = 67109120;
      LODWORD(v27) = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Sending keyboard state %u to AOP", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      int v15 = *a1;
      int v22 = 67109120;
      LODWORD(v23) = v15;
      double v16 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "static void CLOrientationNotifier::onKeyboardState(const BOOL *, void *)", "%s\n", v16);
      if (v16 != (char *)buf) {
        free(v16);
      }
    }
    __int16 v21 = 5;
    HIBYTE(v21) = *a1;
    char v20 = 0;
    uint64_t v19 = 1;
    mach_error_t v9 = (*(uint64_t (**)(void, uint64_t, __int16 *, uint64_t, char *, uint64_t *))(**(void **)(a2 + 384)
                                                                                           + 160))(*(void *)(a2 + 384), 32, &v21, 2, &v20, &v19);
    if (v9)
    {
      mach_error_t v10 = v9;
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      uint64_t v11 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
      {
        char v12 = mach_error_string(v10);
        *(_DWORD *)buf = 136315394;
        CFTypeRef v27 = v12;
        __int16 v28 = 1026;
        mach_error_t v29 = v10;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_FAULT, "SendCommand() = %s (0x%{public}x)", buf, 0x12u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD040);
        }
        uint64_t v17 = mach_error_string(v10);
        int v22 = 136315394;
        unsigned int v23 = v17;
        __int16 v24 = 1026;
        mach_error_t v25 = v10;
        int v18 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "static void CLOrientationNotifier::onKeyboardState(const BOOL *, void *)", "%s\n", v18);
        if (v18 != (char *)buf) {
          free(v18);
        }
      }
    }
  }
}

void sub_1003A3FE0(void *a1)
{
  sub_1003A4018(a1);

  sub_1003A4268(a1);
}

void sub_1003A4018(void *a1)
{
  CFRunLoopRef Current = CFRunLoopGetCurrent();
  sub_1000D3E78();
  if (Current == (CFRunLoopRef)sub_1001BEA14())
  {
    if (a1[44])
    {
      uint64_t v5 = a1[48];
      if (v5) {
        (*(void (**)(uint64_t, void))(*(void *)v5 + 72))(v5, 0);
      }
      uint64_t v6 = (IOCFPlugInInterface ***)(a1 + 47);
      uint64_t v7 = a1[47];
      if (v7)
      {
        (*(void (**)(uint64_t))(*(void *)v7 + 24))(v7);
        IODestroyPlugInInterface(*v6);
      }
      *(void *)(a1[44] + 8) = 0;
      *uint64_t v6 = 0;
      a1[48] = 0;
    }
  }
  else
  {
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    uint64_t v3 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "closeHidDriverInterface should be called from motion thread", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      __int16 v10 = 0;
      int v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLOrientationNotifier::closeHidDriverInterface()", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
    uint64_t v4 = sub_1000D3E78();
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_1003A55A0;
    v9[3] = &unk_1022A3020;
    v9[4] = a1;
    sub_1009E8E94(v4, (uint64_t)v9);
  }
}

void sub_1003A4268(void *a1)
{
  kern_return_t ParentEntry;
  mach_error_t v13;
  NSObject *v14;
  char *v15;
  io_object_t v16;
  NSObject *v17;
  uint8_t *v18;
  NSObject *v19;
  kern_return_t v20;
  mach_error_t v21;
  NSObject *v22;
  char *v23;
  io_service_t v24;
  CFUUIDRef v25;
  CFUUIDRef v26;
  kern_return_t v27;
  mach_error_t v28;
  NSObject *v29;
  char *v30;
  char *v31;
  IOCFPlugInInterface **v32;
  HRESULT (__cdecl *QueryInterface)(void *, REFIID, LPVOID *);
  CFUUIDRef v34;
  CFUUIDBytes v35;
  mach_error_t v36;
  mach_error_t v37;
  NSObject *v38;
  char *v39;
  mach_error_t v40;
  mach_error_t v41;
  NSObject *v42;
  char *v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  io_registry_entry_t v60;
  io_registry_entry_t parent;
  SInt32 theScore;
  uint64_t v63;
  IOCFPlugInInterface **theInterface;
  uint64_t valuePtr;
  void v66[5];
  int v67;
  unsigned char v68[28];
  __int16 v69;
  IOCFPlugInInterface **v70;
  __int16 v71;
  uint64_t v72;
  uint8_t buf[4];
  unsigned char v74[28];
  __int16 v75;
  IOCFPlugInInterface **v76;
  __int16 v77;
  uint64_t v78;

  CFRunLoopRef Current = CFRunLoopGetCurrent();
  sub_1000D3E78();
  if (Current != (CFRunLoopRef)sub_1001BEA14())
  {
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    uint64_t v3 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "openHidDriverInterface should be called from motion thread", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      LOWORD(v67) = 0;
      v48 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n", v48);
      if (v48 != (char *)buf) {
        free(v48);
      }
    }
    uint64_t v4 = sub_1000D3E78();
    v66[0] = _NSConcreteStackBlock;
    v66[1] = 3221225472;
    _OWORD v66[2] = sub_1003A51F8;
    v66[3] = &unk_1022A3020;
    v66[4] = a1;
    sub_1009E8E94(v4, (uint64_t)v66);
    return;
  }
  uint64_t v5 = a1[44];
  if (!v5) {
    return;
  }
  theInterface = 0;
  valuePtr = 0;
  long long v63 = 0;
  uint64_t v6 = (__IOHIDServiceClient *)sub_100A291D0(v5);
  if (v6)
  {
    uint64_t v7 = v6;
    CFNumberRef RegistryID = (const __CFNumber *)IOHIDServiceClientGetRegistryID(v6);
    CFNumberGetValue(RegistryID, kCFNumberSInt64Type, &valuePtr);
    theScore = 0;
    CFDictionaryRef v9 = IORegistryEntryIDMatching(valuePtr);
    io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v9);
    if (MatchingService)
    {
      io_object_t v11 = MatchingService;
      int v60 = 0;
      parent = 0;
      ParentEntry = IORegistryEntryGetParentEntry(MatchingService, "IOService", &parent);
      if (ParentEntry)
      {
        int v13 = ParentEntry;
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD040);
        }
        uint64_t v14 = qword_102419048;
        if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
        {
          int v15 = mach_error_string(v13);
          *(_DWORD *)buf = 67240450;
          *(_DWORD *)uint64_t v74 = v13;
          *(_WORD *)&v74[4] = 2082;
          *(void *)&v74[6] = v15;
          _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_FAULT, "Unable to get parent of orientation service,retCode,0x%{public}x,retStr,%{public}s", buf, 0x12u);
        }
        if (sub_10013D1A0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419040 != -1) {
            dispatch_once(&qword_102419040, &stru_1022AD040);
          }
          v49 = mach_error_string(v13);
          v67 = 67240450;
          *(_DWORD *)v68 = v13;
          *(_WORD *)&v68[4] = 2082;
          *(void *)&v68[6] = v49;
          uint64_t v50 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n", v50);
          if (v50 != (char *)buf) {
            free(v50);
          }
        }
        double v16 = v11;
LABEL_45:
        IOObjectRelease(v16);
        return;
      }
      IOObjectRelease(v11);
      char v20 = IORegistryEntryGetParentEntry(parent, "IOService", &v60);
      if (v20)
      {
        __int16 v21 = v20;
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD040);
        }
        int v22 = qword_102419048;
        if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
        {
          unsigned int v23 = mach_error_string(v21);
          *(_DWORD *)buf = 67240450;
          *(_DWORD *)uint64_t v74 = v21;
          *(_WORD *)&v74[4] = 2082;
          *(void *)&v74[6] = v23;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_FAULT, "Unable to get grand parent of orientation service,retCode,0x%{public}x,retStr,%{public}s", buf, 0x12u);
        }
        if (sub_10013D1A0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419040 != -1) {
            dispatch_once(&qword_102419040, &stru_1022AD040);
          }
          v51 = mach_error_string(v21);
          v67 = 67240450;
          *(_DWORD *)v68 = v21;
          *(_WORD *)&v68[4] = 2082;
          *(void *)&v68[6] = v51;
          uint64_t v52 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n", v52);
          if (v52 != (char *)buf) {
            free(v52);
          }
        }
        double v16 = parent;
        goto LABEL_45;
      }
      IOObjectRelease(parent);
      __int16 v24 = v60;
      mach_error_t v25 = CFUUIDGetConstantUUIDWithBytes(kCFAllocatorSystemDefault, 0x7Au, 0xCFu, 0x53u, 0x32u, 0x1Au, 0x35u, 0x48u, 0x93u, 0x87u, 0xCBu, 0xBAu, 0x64u, 0xE1u, 0x88u, 0x7Fu, 0xAEu);
      uint64_t v26 = CFUUIDGetConstantUUIDWithBytes(0, 0xC2u, 0x44u, 0xE8u, 0x58u, 0x10u, 0x9Cu, 0x11u, 0xD4u, 0x91u, 0xD4u, 0, 0x50u, 0xE4u, 0xC6u, 0x42u, 0x6Fu);
      CFTypeRef v27 = IOCreatePlugInInterfaceForService(v24, v25, v26, &theInterface, &theScore);
      if (!v27)
      {
        uint64_t v32 = theInterface;
        QueryInterface = (*theInterface)->QueryInterface;
        uint64_t v34 = CFUUIDGetConstantUUIDWithBytes(kCFAllocatorSystemDefault, 1u, 0x64u, 0x69u, 0xD8u, 0x77u, 0x3Bu, 0x46u, 0xACu, 0x90u, 0x9Eu, 0xF9u, 0xCu, 0x4Au, 0x6Eu, 0x75u, 0x77u);
        uint64_t v35 = CFUUIDGetUUIDBytes(v34);
        uint64_t v36 = ((uint64_t (*)(IOCFPlugInInterface **, void, void, uint64_t *))QueryInterface)(v32, *(void *)&v35.byte0, *(void *)&v35.byte8, &v63);
        if (v36)
        {
          uint64_t v37 = v36;
          if (qword_102419040 != -1) {
            dispatch_once(&qword_102419040, &stru_1022AD040);
          }
          uint64_t v38 = qword_102419048;
          if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
          {
            v39 = mach_error_string(v37);
            *(_DWORD *)buf = 67240706;
            *(_DWORD *)uint64_t v74 = v37;
            *(_WORD *)&v74[4] = 2082;
            *(void *)&v74[6] = v39;
            *(_WORD *)&v74[14] = 2114;
            *(void *)&v74[16] = v7;
            _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_FAULT, "Unable to set up query interface,retCode,0x%{public}x,retStr,%{public}s,service,%{public}@", buf, 0x1Cu);
          }
          if (sub_10013D1A0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419040 != -1) {
              dispatch_once(&qword_102419040, &stru_1022AD040);
            }
            v53 = mach_error_string(v37);
            v67 = 67240706;
            *(_DWORD *)v68 = v37;
            *(_WORD *)&v68[4] = 2082;
            *(void *)&v68[6] = v53;
            *(_WORD *)&v68[14] = 2114;
            *(void *)&v68[16] = v7;
            v54 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 0, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n", v54);
            if (v54 != (char *)buf) {
              free(v54);
            }
          }
        }
        else
        {
          id v40 = (*(uint64_t (**)(uint64_t, void))(*(void *)v63 + 64))(v63, 0);
          if (!v40)
          {
            if (qword_102419040 != -1) {
              dispatch_once(&qword_102419040, &stru_1022AD040);
            }
            int v44 = qword_102419048;
            if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEFAULT))
            {
              v45 = a1[47];
              v46 = a1[48];
              *(_DWORD *)buf = 134219008;
              *(void *)uint64_t v74 = valuePtr;
              *(_WORD *)&v74[8] = 2048;
              *(void *)&v74[10] = v45;
              *(_WORD *)&v74[18] = 2048;
              *(void *)&v74[20] = v46;
              __int16 v75 = 2048;
              int v76 = theInterface;
              int v77 = 2048;
              __int16 v78 = v63;
              _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "Opened hid driver interface, registryID %llx, {cfPlugInInterface, hidDriverInterface} was then {%p,%p}, is now {%p,%p}", buf, 0x34u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_102419040 != -1) {
                dispatch_once(&qword_102419040, &stru_1022AD040);
              }
              double v57 = a1[47];
              int v58 = a1[48];
              v67 = 134219008;
              *(void *)v68 = valuePtr;
              *(_WORD *)&v68[8] = 2048;
              *(void *)&v68[10] = v57;
              *(_WORD *)&v68[18] = 2048;
              *(void *)&v68[20] = v58;
              v69 = 2048;
              v70 = theInterface;
              v71 = 2048;
              v72 = v63;
              int v59 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n", v59);
              if (v59 != (char *)buf) {
                free(v59);
              }
            }
            *(void *)(a1[44] + 8) = valuePtr;
            uint64_t v47 = v63;
            a1[47] = theInterface;
            a1[48] = v47;
            sub_1003A5200((uint64_t)a1);
            return;
          }
          v41 = v40;
          if (qword_102419040 != -1) {
            dispatch_once(&qword_102419040, &stru_1022AD040);
          }
          uint64_t v42 = qword_102419048;
          if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
          {
            v43 = mach_error_string(v41);
            *(_DWORD *)buf = 67240706;
            *(_DWORD *)uint64_t v74 = v41;
            *(_WORD *)&v74[4] = 2082;
            *(void *)&v74[6] = v43;
            *(_WORD *)&v74[14] = 2114;
            *(void *)&v74[16] = v7;
            _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_FAULT, "Unable to open hid device interface,retCode,0x%{public}x,retStr,%{public}s,service,%{public}@", buf, 0x1Cu);
          }
          if (sub_10013D1A0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419040 != -1) {
              dispatch_once(&qword_102419040, &stru_1022AD040);
            }
            v55 = mach_error_string(v41);
            v67 = 67240706;
            *(_DWORD *)v68 = v41;
            *(_WORD *)&v68[4] = 2082;
            *(void *)&v68[6] = v55;
            *(_WORD *)&v68[14] = 2114;
            *(void *)&v68[16] = v7;
            double v56 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 0, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n", v56);
            if (v56 != (char *)buf) {
              free(v56);
            }
          }
          if (v63) {
            (*(void (**)(uint64_t, void))(*(void *)v63 + 72))(v63, 0);
          }
        }
        if (theInterface)
        {
          ((void (*)(IOCFPlugInInterface **))(*theInterface)->Release)(theInterface);
          IODestroyPlugInInterface(theInterface);
        }
        return;
      }
      __int16 v28 = v27;
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      mach_error_t v29 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
      {
        uint64_t v30 = mach_error_string(v28);
        *(_DWORD *)buf = 67240706;
        *(_DWORD *)uint64_t v74 = v28;
        *(_WORD *)&v74[4] = 2082;
        *(void *)&v74[6] = v30;
        *(_WORD *)&v74[14] = 2114;
        *(void *)&v74[16] = v7;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_FAULT, "Unable to create plugin interface,retCode,0x%{public}x,retStr,%{public}s,service,%{public}@", buf, 0x1Cu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD040);
        }
        double v31 = mach_error_string(v28);
        v67 = 67240706;
        *(_DWORD *)v68 = v28;
        *(_WORD *)&v68[4] = 2082;
        *(void *)&v68[6] = v31;
        *(_WORD *)&v68[14] = 2114;
        *(void *)&v68[16] = v7;
LABEL_35:
        int v18 = (uint8_t *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n");
LABEL_36:
        if (v18 != buf) {
          free(v18);
        }
      }
    }
    else
    {
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      uint64_t v19 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_FAULT, "AOP service doesn't exist", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD040);
        }
        LOWORD(v67) = 0;
        goto LABEL_35;
      }
    }
  }
  else
  {
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    uint64_t v17 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_INFO, "IoHidDevice is not ready!", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      LOWORD(v67) = 0;
      int v18 = (uint8_t *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationNotifier::openHidDriverInterface()", "%s\n");
      goto LABEL_36;
    }
  }
}

uint64_t sub_1003A51F8(uint64_t a1)
{
  return sub_1003A4268(*(void *)(a1 + 32));
}

void sub_1003A5200(uint64_t a1)
{
  CFRunLoopRef Current = CFRunLoopGetCurrent();
  sub_1000D3E78();
  if (Current != (CFRunLoopRef)sub_1001BEA14()) {
    sub_101A5D91C();
  }
  v14[0] = 4;
  int v3 = *(unsigned __int8 *)(a1 + 32);
  v14[1] = *(unsigned char *)(a1 + 32);
  int v4 = *(unsigned __int8 *)(a1 + 34);
  v14[2] = *(unsigned char *)(a1 + 34);
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD040);
  }
  uint64_t v5 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 67240448;
    *(_DWORD *)uint64_t v19 = v3;
    *(_WORD *)&v19[4] = 1026;
    *(_DWORD *)&v19[6] = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Sending config,formFactor,%{public}d,handleCover,%{public}d", buf, 0xEu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    int v15 = 67240448;
    *(_DWORD *)double v16 = v3;
    *(_WORD *)&v16[4] = 1026;
    *(_DWORD *)&v16[6] = v4;
    __int16 v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationNotifier::sendConfiguration()", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
  uint64_t v13 = 3;
  mach_error_t v6 = (*(uint64_t (**)(void, uint64_t, unsigned char *, uint64_t, unsigned char *, uint64_t *))(**(void **)(a1 + 384) + 160))(*(void *)(a1 + 384), 32, v14, 3, v14, &v13);
  if (v6)
  {
    mach_error_t v7 = v6;
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    int v8 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
    {
      CFDictionaryRef v9 = mach_error_string(v7);
      *(_DWORD *)buf = 136446466;
      *(void *)uint64_t v19 = v9;
      *(_WORD *)&v19[8] = 1026;
      mach_error_t v20 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "SendCommand(Config) = %{public}s (0x%{public}x)", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      io_object_t v11 = mach_error_string(v7);
      int v15 = 136446466;
      *(void *)double v16 = v11;
      *(_WORD *)&v16[8] = 1026;
      mach_error_t v17 = v7;
      char v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLOrientationNotifier::sendConfiguration()", "%s\n", v12);
      if (v12 != (char *)buf) {
        free(v12);
      }
    }
  }
}

uint64_t sub_1003A55A0(uint64_t a1)
{
  return sub_1003A4018(*(void *)(a1 + 32));
}

void sub_1003A55A8(uint64_t a1, uint64_t a2)
{
  if (*(double *)(a2 + 336) == -1.79769313e308)
  {
    CFAbsoluteTimeGetCurrent();
    kdebug_trace();
    *(CFAbsoluteTime *)(a2 + 336) = CFAbsoluteTimeGetCurrent();
    if (*(void *)(a2 + 48))
    {
      uint64_t v4 = sub_1009EC0A8();
      uint64_t v5 = *(void *)(a2 + 48);
      *(double *)buf = (float)(1.0 / (float)(*(float *)(a2 + 56) * (float)*(int *)(a2 + 76)));
      sub_1009D29E8(v4, 0, v5, (uint64_t)buf);
    }
  }
  int v6 = *(_DWORD *)(a2 + 72);
  BOOL v7 = __OFSUB__(v6--, 1);
  *(_DWORD *)(a2 + 72) = v6;
  if ((v6 < 0) ^ v7 | (v6 == 0))
  {
    *(_DWORD *)(a2 + 72) = *(_DWORD *)(a2 + 76);
    sub_1003B36DC(*(void *)(a2 + 40), (float *)(a1 + 8), (void *)a1);
    if (sub_1003B86E0(*(void *)(a2 + 40), &v17, &v16))
    {
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      int v8 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Sending orientation changed notification", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD040);
        }
        uint64_t v13 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "static void CLOrientationNotifier::onAccelerometerData(const CLAccelerometer::Sample *, void *)", "%s\n", v13);
        if (v13 != (char *)buf) {
          free(v13);
        }
      }
      sub_1000E01AC(a2, 0, (uint64_t)&v16, 16);
      sub_1000E01AC(a2, 1, (uint64_t)&v16, 16);
    }
  }
  if (*(unsigned char *)(a2 + 80))
  {
    sub_1001A44F4(a2 + 120, (float *)(a1 + 8));
    sub_1001A44F4(a2 + 192, (float *)(a1 + 12));
    sub_1001A44F4(a2 + 264, (float *)(a1 + 16));
    if (*(void *)(a2 + 184) < *(void *)(a2 + 128) || sub_1003A5E24(a2))
    {
      *(void *)(a2 + 96) = *(void *)a1;
      if (!*(void *)(a2 + 64))
      {
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD040);
        }
        CFDictionaryRef v9 = qword_102419048;
        if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Device is in motion, re-enabling Gyro.", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419040 != -1) {
            dispatch_once(&qword_102419040, &stru_1022AD040);
          }
          LOWORD(v16) = 0;
          uint64_t v14 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "static void CLOrientationNotifier::onAccelerometerData(const CLAccelerometer::Sample *, void *)", "%s\n", v14);
          if (v14 != (char *)buf) {
            free(v14);
          }
        }
        operator new();
      }
    }
    else if (*(void *)(a2 + 64) && *(double *)a1 > *(double *)(a2 + 96) + *(double *)(a2 + 88))
    {
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      __int16 v10 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Device is stationary and OrientationGyroTimeout exceeded, disabling Gyro.", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD040);
        }
        LOWORD(v16) = 0;
        int v15 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "static void CLOrientationNotifier::onAccelerometerData(const CLAccelerometer::Sample *, void *)", "%s\n", v15);
        if (v15 != (char *)buf) {
          free(v15);
        }
      }
      uint64_t v11 = sub_100A08A84();
      sub_1009D26C4(v11, 0, *(void *)(a2 + 64));
      uint64_t v12 = *(void *)(a2 + 64);
      if (v12) {
        (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
      }
      *(void *)(a2 + 64) = 0;
      sub_1003B89C4(*(void *)(a2 + 40));
    }
  }
}

void sub_1003A5BE0()
{
}

void sub_1003A5C0C(uint64_t a1, uint64_t a2)
{
  if (*(double *)(a2 + 344) == -1.79769313e308)
  {
    CFAbsoluteTimeGetCurrent();
    kdebug_trace();
    *(CFAbsoluteTime *)(a2 + 344) = CFAbsoluteTimeGetCurrent();
  }
  sub_1003B3AFC(*(void *)(a2 + 40), (float *)(a1 + 8), (double *)a1);
  if (!*(void *)(a2 + 48) && sub_1003B86E0(*(void *)(a2 + 40), &v7, &v6))
  {
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    uint64_t v4 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "GYRO: Sending orientation changed notification", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      uint64_t v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "static void CLOrientationNotifier::onGyroData(const CLGyro::Sample *, void *)", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
    sub_1000E01AC(a2, 0, (uint64_t)&v6, 16);
  }
}

BOOL sub_1003A5E24(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 184);
  if (v1 < *(void *)(a1 + 128)) {
    return 0;
  }
  float v3 = 0.0;
  float v4 = 0.0;
  if (v1 >= 2)
  {
    float v5 = (float)((float)v1 * *(float *)(a1 + 140)) - (float)(*(float *)(a1 + 136) * *(float *)(a1 + 136));
    float v4 = 0.0;
    if (v5 >= 0.0) {
      float v4 = v5 / (float)((v1 - 1) * v1);
    }
  }
  unint64_t v6 = *(void *)(a1 + 256);
  if (v6 >= 2)
  {
    float v7 = (float)((float)v6 * *(float *)(a1 + 212)) - (float)(*(float *)(a1 + 208) * *(float *)(a1 + 208));
    if (v7 >= 0.0) {
      float v3 = v7 / (float)((v6 - 1) * v6);
    }
  }
  unint64_t v8 = *(void *)(a1 + 328);
  float v9 = 0.0;
  if (v8 >= 2)
  {
    float v10 = (float)((float)v8 * *(float *)(a1 + 284)) - (float)(*(float *)(a1 + 280) * *(float *)(a1 + 280));
    if (v10 >= 0.0) {
      float v9 = v10 / (float)((v8 - 1) * v8);
    }
  }
  if (v4 >= v3) {
    float v3 = v4;
  }
  if (v3 < v9) {
    float v3 = v9;
  }
  return v3 > *(float *)(a1 + 84);
}

void sub_1003A5F08(uint64_t a1, int a2, CFStringRef theString1)
{
  if (CFEqual(theString1, @"com.apple.springboard.HasSeenACaseLatchCoverNotification"))
  {
    *(unsigned char *)(a1 + 34) = 1;
    if (*(void *)(a1 + 384)) {
      sub_1003A5200(a1);
    }
  }
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD040);
  }
  float v4 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *(unsigned __int8 *)(a1 + 34);
    *(_DWORD *)buf = 67240192;
    int v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "fHasSeenACaseLatchCoverOnce, %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    unint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationNotifier::onCoverNotification(CFNotificationCenterRef, CFStringRef, const void *, CFDictionaryRef)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
}

void sub_1003A60EC(uint64_t a1, int a2)
{
}

uint64_t sub_1003A60FC(uint64_t a1, int a2)
{
  if ((sub_1000A16E8() & 0x40) != 0)
  {
    uint64_t v37 = 0;
    uint64_t v38 = &v37;
    uint64_t v39 = 0x4012000000;
    id v40 = sub_1001778A0;
    v41 = nullsub_50;
    uint64_t v42 = "";
    __int16 v44 = 0;
    int v5 = 3;
    uint64_t v43 = 2;
    uint64_t v33 = 0;
    uint64_t v34 = &v33;
    uint64_t v35 = 0x2020000000;
    uint64_t v36 = 10;
    while (1)
    {
      uint64_t v29 = 0;
      uint64_t v30 = &v29;
      uint64_t v31 = 0x2020000000;
      int v32 = 0;
      uint64_t v6 = sub_1000D3E78();
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472;
      v28[2] = sub_1003A7050;
      v28[3] = &unk_1022AD008;
      v28[4] = &v29;
      v28[5] = &v37;
      v28[6] = &v33;
      v28[7] = a1;
      sub_1009E8E94(v6, (uint64_t)v28);
      if (!*((_DWORD *)v30 + 6)) {
        break;
      }
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      float v7 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_INFO))
      {
        int v8 = mach_error_string(*((_DWORD *)v30 + 6));
        int v9 = *((_DWORD *)v30 + 6);
        *(_DWORD *)buf = 136315394;
        uint64_t v50 = v8;
        __int16 v51 = 1026;
        int v52 = v9;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "SendCommand() = %s (0x%{public}x)", buf, 0x12u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD040);
        }
        float v10 = mach_error_string(*((_DWORD *)v30 + 6));
        int v11 = *((_DWORD *)v30 + 6);
        int v45 = 136315394;
        v46 = v10;
        __int16 v47 = 1026;
        int v48 = v11;
        uint64_t v12 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "CLOrientationNotifier::Sample CLOrientationNotifier::orientationBlocking(const BOOL)", "%s\n", v12);
        if (v12 != (char *)buf) {
          free(v12);
        }
      }
      usleep(0x3E8u);
      _Block_object_dispose(&v29, 8);
      if (!--v5)
      {
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD040);
        }
        uint64_t v19 = qword_102419048;
        if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_FAULT, "No reply for LastOrientation", buf, 2u);
        }
        double v4 = -1.0;
        if (sub_10013D1A0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419040 != -1) {
            dispatch_once(&qword_102419040, &stru_1022AD040);
          }
          LOWORD(v29) = 0;
          unsigned int v23 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "CLOrientationNotifier::Sample CLOrientationNotifier::orientationBlocking(const BOOL)", "%s\n", v23);
          if (v23 != (char *)buf) {
            free(v23);
          }
        }
        goto LABEL_38;
      }
    }
    if (v34[3] == 10)
    {
      uint64_t v13 = v38;
      if (*(void *)(a1 + 402) > *(unint64_t *)((char *)v38 + 50))
      {
        uint64_t v14 = *(void *)(a1 + 400);
        *((_WORD *)v38 + 28) = *(_WORD *)(a1 + 408);
        v13[6] = v14;
      }
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      int v15 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEFAULT))
      {
        int v16 = *((unsigned __int8 *)v38 + 49);
        *(_DWORD *)buf = 67240192;
        LODWORD(v50) = v16;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Got cached orientation %{public}u", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD040);
        }
        int v24 = *((unsigned __int8 *)v38 + 49);
        int v45 = 67240192;
        LODWORD(v46) = v24;
        mach_error_t v25 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "CLOrientationNotifier::Sample CLOrientationNotifier::orientationBlocking(const BOOL)", "%s\n", v25);
        if (v25 != (char *)buf) {
          free(v25);
        }
      }
      _Block_object_dispose(&v29, 8);
      unint64_t v17 = *(uint64_t *)((char *)v38 + 50);
      double v18 = sub_1000D3D90(v17);
      double v4 = v18;
      if (a2) {
        sub_1003A6CEC(a1, v17, *((unsigned __int8 *)v38 + 49), v18);
      }
    }
    else
    {
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      mach_error_t v20 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
      {
        __int16 v21 = (char *)v34[3];
        *(_DWORD *)buf = 134349056;
        uint64_t v50 = v21;
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_FAULT, "SendCommand() got unexpected response size %{public}zd", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD040);
        }
        uint64_t v26 = (char *)v34[3];
        int v45 = 134349056;
        v46 = v26;
        CFTypeRef v27 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "CLOrientationNotifier::Sample CLOrientationNotifier::orientationBlocking(const BOOL)", "%s\n", v27);
        if (v27 != (char *)buf) {
          free(v27);
        }
      }
      _Block_object_dispose(&v29, 8);
      double v4 = -1.0;
    }
LABEL_38:
    _Block_object_dispose(&v33, 8);
    _Block_object_dispose(&v37, 8);
  }
  else
  {
    double v4 = -1.0;
  }
  return *(void *)&v4;
}

void sub_1003A68EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_1003A6948(uint64_t a1)
{
  if (*(void *)(a1 + 48)) {
    return;
  }
  if (IOHIDEventGetType() == 10)
  {
    uint64_t IntegerValue = IOHIDEventGetIntegerValue();
    if ((unint64_t)(IntegerValue - 107) <= 0xFFFFFFFFFFFFFFF8)
    {
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      float v3 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 134349056;
        uint64_t v10 = IntegerValue;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Received invalid orientation %{public}ld", buf, 0xCu);
      }
      if (!sub_10013D1A0(115, 0)) {
        return;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      double v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLOrientationNotifier::onIohidEvent(void *, void *, void *, IOHIDEventRef)", "%s\n", v4);
      if (v4 == (char *)buf) {
        return;
      }
LABEL_25:
      free(v4);
      return;
    }
    unint64_t v6 = sub_10149F054();
    unint64_t TimeStamp = IOHIDEventGetTimeStamp();
    double v8 = sub_1000D3D90(TimeStamp);
    sub_1003A6CEC(a1, v6, (IntegerValue - 100), v8);
  }
  else
  {
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    int v5 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67240192;
      LODWORD(v10) = IOHIDEventGetType();
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Received wrong event type %{public}u", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      IOHIDEventGetType();
      double v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationNotifier::onIohidEvent(void *, void *, void *, IOHIDEventRef)", "%s\n", v4);
      if (v4 != (char *)buf) {
        goto LABEL_25;
      }
    }
  }
}

void sub_1003A6CEC(uint64_t a1, unint64_t a2, unsigned int a3, double a4)
{
  if (*(void *)(a1 + 402) >= a2)
  {
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    double v8 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67240448;
      unsigned int v14 = a3;
      __int16 v15 = 2050;
      unint64_t v16 = a2;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Skipping stale orientation (%{public}u @ %{public}llu)", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      LODWORD(v11) = 67240448;
      HIDWORD(v11) = a3;
      LOWORD(v12[0]) = 2050;
      *(void *)((char *)v12 + 2) = a2;
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationNotifier::notifyAOO(const uint64_t, const uint8_t, const CLMotionTypeTimestamp)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
  else
  {
    *(unsigned char *)(a1 + 401) = a3;
    *(void *)(a1 + 402) = a2;
    double v11 = a4;
    v12[0] = a3;
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    float v7 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 67109120;
      unsigned int v14 = a3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "AOO update: %u", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      int v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationNotifier::notifyAOO(const uint64_t, const uint8_t, const CLMotionTypeTimestamp)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
    sub_1000E01AC(a1, 0, (uint64_t)&v11, 16);
    sub_1000E01AC(a1, 1, (uint64_t)&v11, 16);
  }
}

uint64_t sub_1003A7050(void *a1)
{
  uint64_t v2 = *(void *)(a1[7] + 384);
  if (v2)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v2 + 160))(v2, 32, *(void *)(a1[5] + 8) + 48, 1, *(void *)(a1[5] + 8) + 48, *(void *)(a1[6] + 8) + 24);
  }
  else
  {
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD040);
    }
    double v4 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "fHidDeviceInterface NULL", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD040);
      }
      int v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "CLOrientationNotifier::Sample CLOrientationNotifier::orientationBlocking(const BOOL)_block_invoke", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
    uint64_t result = 4160749568;
  }
  *(_DWORD *)(*(void *)(a1[4] + 8) + 24) = result;
  return result;
}

void sub_1003A7230(id a1)
{
  qword_102419048 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Orientation");
}

void *sub_1003A7260(void *a1)
{
  *a1 = off_1022AD0A0;
  sub_1003A7340(a1 + 3);
  return a1;
}

void sub_1003A72A4(void *a1)
{
  sub_1003A73E8(a1);

  operator delete();
}

void sub_1003A72DC(void *a1)
{
  *a1 = off_1022AD0A0;
  sub_1003A7340(a1 + 3);

  operator delete();
}

uint64_t sub_1003A7340(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  float v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      float v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 512;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 1024;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    float v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000D7EB4((uint64_t)a1);
}

void *sub_1003A73E8(void *a1)
{
  *a1 = off_1022AD070;
  a1[20] = off_1022AD0A0;
  sub_1003A7340(a1 + 23);
  a1[11] = off_1022AD0A0;
  sub_1003A7340(a1 + 14);
  a1[2] = off_1022AD0A0;
  sub_1003A7340(a1 + 5);
  return a1;
}

void *sub_1003A74A0@<X0>(int *a1@<X1>, int *a2@<X2>, char *a3@<X3>, uint64_t *a4@<X4>, void *a5@<X8>)
{
  uint64_t v10 = operator new(0xC0uLL);
  uint64_t result = sub_101A4AD8C(v10, a1, a2, a3, a4);
  *a5 = v10 + 3;
  a5[1] = v10;
  return result;
}

void sub_1003A7508(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1003A751C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1003A7544(void *a1)
{
  uint64_t v2 = (void **)a1[4];
  uint64_t v3 = a1[5];
  a1[8] = 0;
  unint64_t v4 = v3 - (void)v2;
  if (v4 >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v5 = a1[5];
      uint64_t v2 = (void **)(a1[4] + 8);
      a1[4] = v2;
      unint64_t v4 = v5 - (void)v2;
    }
    while (v4 > 0x10);
  }
  if (v4 >> 3 == 1)
  {
    uint64_t v6 = 512;
    goto LABEL_7;
  }
  if (v4 >> 3 == 2)
  {
    uint64_t v6 = 1024;
LABEL_7:
    a1[7] = v6;
  }
  a1[2] = 0;
}

void sub_1003A75C4(uint64_t a1)
{
  sub_1019D78CC(a1);

  operator delete();
}

void sub_1003A75FC(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x400;
  unint64_t v4 = v2 - 1024;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    float v7 = (void *)a1[1];
    double v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    int v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)double v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000DA54C(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      uint64_t v37 = &v34[8 * v36];
      uint64_t v38 = (uint64_t *)a1[1];
      double v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        double v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      int v9 = (char *)a1[1];
    }
    double v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      sub_10017F0B4(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    sub_1002D02D8((uint64_t)a1, &v54);
    __int16 v44 = (void *)a1[1];
    double v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    int v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1000DA54C((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      uint64_t v37 = &v34[8 * v47];
      int v48 = (uint64_t *)a1[1];
      double v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        double v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        __int16 v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)__int16 v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      uint64_t v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        double v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  double v56 = a1 + 3;
  *(void *)&long long v54 = sub_1000DA54C((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  v53 = operator new(0x1000uLL);
  sub_1000DA434(&v54, &v53);
  CFTypeRef v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1002D03F8((uint64_t)&v54, v27);
  }
  uint64_t v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1003A78C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1003A79C4(id a1)
{
  qword_10247A8A8 = (uint64_t)[objc_alloc((Class)CLDispatchSilo) initWithIdentifier:@"CLPredictedWalkDistanceServiceCompanionSilo"];
}

void sub_1003A7A84(id a1)
{
  if (sub_10016CCBC()) {
    byte_10247A8B8 = 1;
  }
}

void sub_1003A8044(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, char a15, uint64_t a16)
{
  if (a14) {
    sub_1000DB0A0(a14);
  }
  _Unwind_Resume(exception_object);
}

id sub_1003A80E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return _[a4 onUserInfoUpdate:a2 data:a3];
}

void sub_1003A85B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  if (a20) {
    sub_1000DB0A0(a20);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003A85E4(uint64_t a1, xpc_activity_t activity)
{
  if (xpc_activity_get_state(activity))
  {
    [*(id *)(a1 + 32) onP6MWDActivity:activity];
    if (xpc_activity_get_state(activity) == 2 && !xpc_activity_set_state(activity, 4))
    {
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      unint64_t v4 = qword_102419208;
      if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)buf = 136446466;
        BOOL v14 = "com.apple.locationd.P6MWD";
        __int16 v15 = 2050;
        xpc_activity_state_t state = xpc_activity_get_state(activity);
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Failed to mark %{public}s activity as Continue. Current state is %{public}ld", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        xpc_activity_get_state(activity);
        uint64_t v5 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "-[CLPredictedWalkDistanceServiceCompanion scheduleEstimate]_block_invoke", "%s\n", v5);
        if (v5 != (char *)buf) {
          free(v5);
        }
      }
    }
  }
  else
  {
    xpc_object_t v6 = xpc_activity_copy_criteria(activity);
    if (!v6) {
      xpc_object_t v6 = xpc_dictionary_create(0, 0, 0);
    }
    if (xpc_dictionary_get_int64(v6, XPC_ACTIVITY_DELAY) == *(void *)(a1 + 40))
    {
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      float v7 = qword_102419208;
      if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEFAULT))
      {
        xpc_activity_state_t v8 = *(void *)(a1 + 40);
        *(_DWORD *)buf = 136446466;
        BOOL v14 = "com.apple.locationd.P6MWD";
        __int16 v15 = 2050;
        xpc_activity_state_t state = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "XPC_CHECK_IN: %{public}s activity already scheduled with a delay of %{public}lld seconds", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        int v9 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion scheduleEstimate]_block_invoke", "%s\n", v9);
        if (v9 != (char *)buf) {
          free(v9);
        }
      }
    }
    else
    {
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      uint64_t v10 = qword_102419208;
      if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEFAULT))
      {
        xpc_activity_state_t v11 = *(void *)(a1 + 40);
        *(_DWORD *)buf = 136446466;
        BOOL v14 = "com.apple.locationd.P6MWD";
        __int16 v15 = 2050;
        xpc_activity_state_t state = v11;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "XPC_CHECK_IN: Setting up %{public}s activity with a delay of %{public}lld seconds", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        uint64_t v12 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion scheduleEstimate]_block_invoke", "%s\n", v12);
        if (v12 != (char *)buf) {
          free(v12);
        }
      }
      xpc_dictionary_set_int64(v6, XPC_ACTIVITY_DELAY, *(void *)(a1 + 40));
      xpc_dictionary_set_int64(v6, XPC_ACTIVITY_GRACE_PERIOD, XPC_ACTIVITY_INTERVAL_1_HOUR);
      xpc_dictionary_set_string(v6, XPC_ACTIVITY_PRIORITY, XPC_ACTIVITY_PRIORITY_UTILITY);
      xpc_dictionary_set_BOOL(v6, XPC_ACTIVITY_REQUIRES_CLASS_B, 1);
      xpc_dictionary_set_BOOL(v6, XPC_ACTIVITY_ALLOW_BATTERY, 1);
      xpc_dictionary_set_BOOL(v6, XPC_ACTIVITY_REPEATING, 1);
      xpc_activity_set_criteria(activity, v6);
    }
    xpc_release(v6);
  }
}

void sub_1003A8D24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15)
{
  if (a15) {
    sub_1000DB0A0(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003A8D3C(void **a1, double a2)
{
  if (a2 >= 0.0)
  {
    xpc_activity_state_t v8 = a1[2];
    uint64_t v6 = (uint64_t)(a1 + 2);
    float v7 = v8;
    unint64_t v9 = *(void *)(v6 - 8);
    if (v9 >= (unint64_t)v8)
    {
      unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - (void)*a1) >> 3);
      unint64_t v12 = v11 + 1;
      if (v11 + 1 > 0xAAAAAAAAAAAAAAALL) {
        sub_1001D7FD4();
      }
      unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((v7 - (unsigned char *)*a1) >> 3);
      if (2 * v13 > v12) {
        unint64_t v12 = 2 * v13;
      }
      if (v13 >= 0x555555555555555) {
        unint64_t v14 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v14 = v12;
      }
      if (v14) {
        __int16 v15 = (char *)sub_1000DA5D8(v6, v14);
      }
      else {
        __int16 v15 = 0;
      }
      uint64_t v16 = &v15[24 * v11];
      uint64_t v17 = &v15[24 * v14];
      *(double *)uint64_t v16 = a2;
      *((void *)v16 + 1) = 0x7FEFFFFFFFFFFFFFLL;
      v16[16] = 0;
      uint64_t v10 = v16 + 24;
      uint64_t v19 = (char *)*a1;
      uint64_t v18 = (char *)a1[1];
      if (v18 != *a1)
      {
        do
        {
          long long v20 = *(_OWORD *)(v18 - 24);
          *(v16 - 8) = *(v18 - 8);
          *(_OWORD *)(v16 - 24) = v20;
          v16 -= 24;
          v18 -= 24;
        }
        while (v18 != v19);
        uint64_t v18 = (char *)*a1;
      }
      *a1 = v16;
      a1[1] = v10;
      a1[2] = v17;
      if (v18) {
        operator delete(v18);
      }
    }
    else
    {
      *(double *)unint64_t v9 = a2;
      *(void *)(v9 + 8) = 0x7FEFFFFFFFFFFFFFLL;
      *(unsigned char *)(v9 + 16) = 0;
      uint64_t v10 = (char *)(v9 + 24);
    }
    a1[1] = v10;
  }
  else
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022AD560);
    }
    BOOL v3 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 134349056;
      double v22 = a2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "Programmer error, this expiration rule with time %{public}fis not valid.", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022AD560);
      }
      unint64_t v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLActivityAggregator<CLPredictedWalkDistanceBoutEntry, CLActivityDB::ClassBDataProtectionPolicy>::setExpirationRule(CFTimeInterval) [T = CLPredictedWalkDistanceBoutEntry, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
}

uint64_t sub_1003A8FF4(uint64_t a1)
{
  if (qword_102419200 != -1) {
    dispatch_once(&qword_102419200, &stru_1022AD450);
  }
  unint64_t v2 = qword_102419208;
  if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Aggregating bout records", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    unint64_t v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion setUpAggregationOnTimer]_block_invoke", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  return sub_1003A919C(*(void *)(*(void *)(a1 + 32) + 24));
}

uint64_t sub_1003A919C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022AD560);
    }
    unint64_t v2 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      double v3 = sub_1000D3E50();
      int v4 = *(_DWORD *)(*(void *)(a1 + 24) + 132);
      *(_DWORD *)buf = 134218240;
      *(double *)uint64_t v21 = v3;
      *(_WORD *)&v21[8] = 1024;
      int v22 = v4;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Aggregating records start %f, count ~%d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022AD560);
      }
      sub_1000D3E50();
      uint64_t v17 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "long CLActivityAggregator<CLPredictedWalkDistanceBoutEntry, CLActivityDB::ClassBDataProtectionPolicy>::aggregateRecords() [T = CLPredictedWalkDistanceBoutEntry, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v17);
      if (v17 != (char *)buf) {
        free(v17);
      }
    }
    uint64_t v5 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 32))(*(void *)(a1 + 24), a1);
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022AD560);
    }
    uint64_t v6 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEBUG))
    {
      double v7 = sub_1000D3E50();
      int v8 = *(_DWORD *)(*(void *)(a1 + 24) + 132);
      *(_DWORD *)buf = 134218240;
      *(double *)uint64_t v21 = v7;
      *(_WORD *)&v21[8] = 1024;
      int v22 = v8;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Aggregating records stop %f, count ~%d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022AD560);
      }
      sub_1000D3E50();
      uint64_t v18 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "long CLActivityAggregator<CLPredictedWalkDistanceBoutEntry, CLActivityDB::ClassBDataProtectionPolicy>::aggregateRecords() [T = CLPredictedWalkDistanceBoutEntry, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v18);
      if (v18 != (char *)buf) {
        free(v18);
      }
    }
    uint64_t v9 = *(void *)(a1 + 24);
    double v10 = (double)*(int *)(v9 + 132);
    if ((double)(int)sub_1003B2B38(v9, (double **)a1) * 1.2 < v10)
    {
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022AD560);
      }
      unint64_t v11 = qword_102419638;
      if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v12 = *(void *)(a1 + 24);
        int v13 = *(_DWORD *)(v12 + 132);
        int v14 = sub_1003B2B38(v12, (double **)a1);
        *(_DWORD *)buf = 67109376;
        *(_DWORD *)uint64_t v21 = v13;
        *(_WORD *)&v21[4] = 1024;
        *(_DWORD *)&v21[6] = v14;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#Warning Number of records after aggregation is %d and it greatly exceeds the number of records estimated to be needed %d", buf, 0xEu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419630 != -1) {
          dispatch_once(&qword_102419630, &stru_1022AD560);
        }
        sub_1003B2B38(*(void *)(a1 + 24), (double **)a1);
        uint64_t v19 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "long CLActivityAggregator<CLPredictedWalkDistanceBoutEntry, CLActivityDB::ClassBDataProtectionPolicy>::aggregateRecords() [T = CLPredictedWalkDistanceBoutEntry, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v19);
        if (v19 != (char *)buf) {
          free(v19);
        }
      }
    }
    return v5;
  }
  else
  {
    uint64_t v16 = *(uint64_t (**)(void))(**(void **)(a1 + 24) + 32);
    return v16();
  }
}

void sub_1003AAE2C(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x6F0], 8);
  _Block_object_dispose(&STACK[0x2F0], 8);
  _Block_object_dispose(&STACK[0x348], 8);
  _Block_object_dispose(&STACK[0x3A0], 8);
  unint64_t v2 = (void *)STACK[0x3D0];
  if (STACK[0x3D0])
  {
    STACK[0x3D8] = (unint64_t)v2;
    operator delete(v2);
  }
  _Block_object_dispose(&STACK[0x3E8], 8);
  double v3 = (void *)STACK[0x418];
  if (STACK[0x418])
  {
    STACK[0x420] = (unint64_t)v3;
    operator delete(v3);
  }
  _Block_object_dispose(&STACK[0x430], 8);
  int v4 = (void *)STACK[0x460];
  if (STACK[0x460])
  {
    STACK[0x468] = (unint64_t)v4;
    operator delete(v4);
  }
  _Block_object_dispose(&STACK[0x478], 8);
  uint64_t v5 = (void *)STACK[0x4A8];
  if (STACK[0x4A8])
  {
    STACK[0x4B0] = (unint64_t)v5;
    operator delete(v5);
  }
  _Block_object_dispose(&STACK[0x4C0], 8);
  uint64_t v6 = (void *)STACK[0x4F0];
  if (STACK[0x4F0])
  {
    STACK[0x4F8] = (unint64_t)v6;
    operator delete(v6);
  }
  _Block_object_dispose(&STACK[0x508], 8);
  double v7 = (void *)STACK[0x538];
  if (STACK[0x538])
  {
    STACK[0x540] = (unint64_t)v7;
    operator delete(v7);
  }
  _Block_object_dispose(&STACK[0x550], 8);
  int v8 = (void *)STACK[0x580];
  if (STACK[0x580])
  {
    STACK[0x588] = (unint64_t)v8;
    operator delete(v8);
  }
  _Block_object_dispose(&STACK[0x598], 8);
  uint64_t v9 = (void *)STACK[0x5C8];
  if (STACK[0x5C8])
  {
    STACK[0x5D0] = (unint64_t)v9;
    operator delete(v9);
  }
  _Block_object_dispose(&STACK[0x5E0], 8);
  double v10 = (void *)STACK[0x610];
  if (STACK[0x610])
  {
    STACK[0x618] = (unint64_t)v10;
    operator delete(v10);
  }
  _Block_object_dispose(&STACK[0x628], 8);
  unint64_t v11 = (void *)STACK[0x658];
  if (STACK[0x658])
  {
    STACK[0x660] = (unint64_t)v11;
    operator delete(v11);
  }
  _Block_object_dispose(&STACK[0x670], 8);
  _Block_object_dispose(&STACK[0x690], 8);
  _Unwind_Resume(a1);
}

void sub_1003AAFF0()
{
}

__n128 sub_1003AAFF8(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void sub_1003AB01C(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

__n128 sub_1003AB034(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void sub_1003AB058(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

__n128 sub_1003AB070(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void sub_1003AB094(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

__n128 sub_1003AB0AC(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void sub_1003AB0D0(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

__n128 sub_1003AB0E8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a2 + 48);
  long long v3 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v3;
  return result;
}

void sub_1003AB100(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 8);
  [*(id *)(a1 + 40) timeIntervalSinceReferenceDate];
  double v4 = v3;
  [*(id *)(a1 + 48) timeIntervalSinceReferenceDate];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void, uint64_t, void, double, double))(*(void *)v2 + 168))(v2, *(void *)(*(void *)(a1 + 64) + 8) + 48, 0, 0xFFFFFFFFLL, 0, v4, v5) == 109)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = 1;
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    uint64_t v6 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Bout query failed due to device lock", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 == -1)
      {
LABEL_16:
        uint64_t v9 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v9);
        if (v9 != (char *)buf) {
          free(v9);
        }
        goto LABEL_14;
      }
LABEL_18:
      dispatch_once(&qword_102419200, &stru_1022AD450);
      goto LABEL_16;
    }
  }
  else
  {
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    double v7 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v8 = 0xEEEEEEEEEEEEEEEFLL
         * ((uint64_t)(*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 56)
                    - *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 48)) >> 3);
      *(_DWORD *)buf = 134349056;
      unint64_t v11 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Retrieved %{public}lu bout records", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    }
  }
LABEL_14:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 56));
}

__n128 sub_1003AB468(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a2 + 48);
  long long v3 = *(_OWORD *)(a2 + 64);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 92) = *(_OWORD *)(a2 + 92);
  *(_OWORD *)(a1 + 64) = v3;
  *(_OWORD *)(a1 + 80) = v4;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

void sub_1003AB488(uint64_t a1, void *a2, void *a3, void *a4)
{
  if (!a2 || a4)
  {
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    unint64_t v33 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315138;
      id v44 = [[objc_msgSend(a4, "localizedDescription") UTF8String];
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_ERROR, "No remote StepCadenceToStrideLength table, error:%s\n", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      int v41 = 136315138;
      id v42 = [[objc_msgSend(a4, "localizedDescription") UTF8String];
      uint64_t v34 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v34);
      if (v34 != (char *)buf) {
        free(v34);
      }
    }
  }
  else
  {
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    unint64_t v8 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Parsing remote StepCadenceToStrideLength table", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      LOWORD(v41) = 0;
      uint64_t v35 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v35);
      if (v35 != (char *)buf) {
        free(v35);
      }
    }
    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    id v9 = [a2 countByEnumeratingWithState:&v36 objects:v40 count:16];
    if (v9)
    {
      uint64_t v10 = *(void *)v37;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v37 != v10) {
            objc_enumerationMutation(a2);
          }
          uint64_t v12 = *(void **)(*((void *)&v36 + 1) + 8 * i);
          int v13 = *(void **)(*(void *)(a1 + 40) + 8);
          [a3 timeIntervalSinceReferenceDate];
          uint64_t v15 = v14;
          [v12 center];
          uint64_t v17 = v16;
          unsigned int v18 = [v12 state];
          [v12 valueOut];
          uint64_t v20 = v19;
          unint64_t v21 = v13[8];
          int v22 = (char *)v13[7];
          if ((unint64_t)v22 >= v21)
          {
            uint64_t v24 = (char *)v13[6];
            uint64_t v25 = (v22 - v24) >> 5;
            unint64_t v26 = v25 + 1;
            if ((unint64_t)(v25 + 1) >> 59) {
              sub_1001D7FD4();
            }
            uint64_t v27 = v21 - (void)v24;
            if (v27 >> 4 > v26) {
              unint64_t v26 = v27 >> 4;
            }
            if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFE0) {
              unint64_t v28 = 0x7FFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v28 = v26;
            }
            if (v28)
            {
              uint64_t v29 = (char *)sub_1001D9EDC((uint64_t)(v13 + 8), v28);
              uint64_t v24 = (char *)v13[6];
              int v22 = (char *)v13[7];
            }
            else
            {
              uint64_t v29 = 0;
            }
            long long v30 = &v29[32 * v25];
            *(void *)long long v30 = v15;
            *((void *)v30 + 1) = v17;
            *((_DWORD *)v30 + 4) = v18;
            *((void *)v30 + 3) = v20;
            long long v31 = v30;
            if (v22 != v24)
            {
              do
              {
                long long v32 = *((_OWORD *)v22 - 1);
                *((_OWORD *)v31 - 2) = *((_OWORD *)v22 - 2);
                *((_OWORD *)v31 - 1) = v32;
                v31 -= 32;
                v22 -= 32;
              }
              while (v22 != v24);
              uint64_t v24 = (char *)v13[6];
            }
            uint64_t v23 = v30 + 32;
            v13[6] = v31;
            v13[7] = v30 + 32;
            v13[8] = &v29[32 * v28];
            if (v24) {
              operator delete(v24);
            }
          }
          else
          {
            *(void *)int v22 = v15;
            *((void *)v22 + 1) = v17;
            *((_DWORD *)v22 + 4) = v18;
            uint64_t v23 = v22 + 32;
            *((void *)v22 + 3) = v19;
          }
          v13[7] = v23;
        }
        id v9 = [a2 countByEnumeratingWithState:&v36 objects:v40 count:16];
      }
      while (v9);
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1003AB954(uint64_t a1, void *a2, void *a3, void *a4)
{
  if (!a2 || a4)
  {
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    unint64_t v33 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136446210;
      id v44 = [[objc_msgSend(a4, "localizedDescription") UTF8String];
      _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_ERROR, "No StepCadenceToStrideLength table, error:%{public}s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      int v41 = 136446210;
      id v42 = [[objc_msgSend(a4, "localizedDescription") UTF8String];
      uint64_t v34 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v34);
      if (v34 != (char *)buf) {
        free(v34);
      }
    }
  }
  else
  {
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    unint64_t v8 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Parsing StepCadenceToStrideLength table", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      LOWORD(v41) = 0;
      uint64_t v35 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v35);
      if (v35 != (char *)buf) {
        free(v35);
      }
    }
    long long v38 = 0u;
    long long v39 = 0u;
    long long v36 = 0u;
    long long v37 = 0u;
    id v9 = [a2 countByEnumeratingWithState:&v36 objects:v40 count:16];
    if (v9)
    {
      uint64_t v10 = *(void *)v37;
      do
      {
        for (i = 0; i != v9; i = (char *)i + 1)
        {
          if (*(void *)v37 != v10) {
            objc_enumerationMutation(a2);
          }
          uint64_t v12 = *(void **)(*((void *)&v36 + 1) + 8 * i);
          int v13 = *(void **)(*(void *)(a1 + 40) + 8);
          [a3 timeIntervalSinceReferenceDate];
          uint64_t v15 = v14;
          [v12 center];
          uint64_t v17 = v16;
          unsigned int v18 = [v12 state];
          [v12 valueOut];
          uint64_t v20 = v19;
          unint64_t v21 = v13[8];
          int v22 = (char *)v13[7];
          if ((unint64_t)v22 >= v21)
          {
            uint64_t v24 = (char *)v13[6];
            uint64_t v25 = (v22 - v24) >> 5;
            unint64_t v26 = v25 + 1;
            if ((unint64_t)(v25 + 1) >> 59) {
              sub_1001D7FD4();
            }
            uint64_t v27 = v21 - (void)v24;
            if (v27 >> 4 > v26) {
              unint64_t v26 = v27 >> 4;
            }
            if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFE0) {
              unint64_t v28 = 0x7FFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v28 = v26;
            }
            if (v28)
            {
              uint64_t v29 = (char *)sub_1001D9EDC((uint64_t)(v13 + 8), v28);
              uint64_t v24 = (char *)v13[6];
              int v22 = (char *)v13[7];
            }
            else
            {
              uint64_t v29 = 0;
            }
            long long v30 = &v29[32 * v25];
            *(void *)long long v30 = v15;
            *((void *)v30 + 1) = v17;
            *((_DWORD *)v30 + 4) = v18;
            *((void *)v30 + 3) = v20;
            long long v31 = v30;
            if (v22 != v24)
            {
              do
              {
                long long v32 = *((_OWORD *)v22 - 1);
                *((_OWORD *)v31 - 2) = *((_OWORD *)v22 - 2);
                *((_OWORD *)v31 - 1) = v32;
                v31 -= 32;
                v22 -= 32;
              }
              while (v22 != v24);
              uint64_t v24 = (char *)v13[6];
            }
            uint64_t v23 = v30 + 32;
            v13[6] = v31;
            v13[7] = v30 + 32;
            v13[8] = &v29[32 * v28];
            if (v24) {
              operator delete(v24);
            }
          }
          else
          {
            *(void *)int v22 = v15;
            *((void *)v22 + 1) = v17;
            *((_DWORD *)v22 + 4) = v18;
            uint64_t v23 = v22 + 32;
            *((void *)v22 + 3) = v19;
          }
          v13[7] = v23;
        }
        id v9 = [a2 countByEnumeratingWithState:&v36 objects:v40 count:16];
      }
      while (v9);
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1003ABE20(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 88);
  [*(id *)(a1 + 40) timeIntervalSinceReferenceDate];
  if ((*(unsigned int (**)(uint64_t, uint64_t, double, double))(*(void *)v2 + 168))(v2, *(void *)(*(void *)(a1 + 56) + 8) + 48, 1.0, v3) == 109)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    long long v4 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "WalkingSpeedCal query failed due to device lock", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 == -1)
      {
LABEL_16:
        double v7 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v7);
        if (v7 != (char *)buf) {
          free(v7);
        }
        goto LABEL_14;
      }
LABEL_18:
      dispatch_once(&qword_102419200, &stru_1022AD450);
      goto LABEL_16;
    }
  }
  else
  {
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    double v5 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v6 = 0xAAAAAAAAAAAAAAABLL
         * ((uint64_t)(*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 56)
                    - *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 48)) >> 4);
      *(_DWORD *)buf = 134349056;
      unint64_t v9 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Retrieved %{public}lu walkingSpeedCal records", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 == -1) {
        goto LABEL_16;
      }
      goto LABEL_18;
    }
  }
LABEL_14:
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

id sub_1003AC168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = [objc_msgSend(*(id *)(a1 + 32), "universe") silo];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1003AC214;
  v11[3] = &unk_1022AD288;
  v11[4] = a4;
  v11[5] = a3;
  long long v8 = *(_OWORD *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 72);
  long long v9 = *(_OWORD *)(a1 + 40);
  long long v13 = v8;
  long long v12 = v9;
  return [v7 async:v11];
}

void sub_1003AC214(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2)
  {
    if ([v2 code] == (id)6)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      double v3 = qword_102419208;
      if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "HealthKit Activity Summary query failed due to device lock", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        LOWORD(v81) = 0;
        long long v4 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v4);
LABEL_86:
        if (v4 != (char *)buf) {
          free(v4);
        }
      }
    }
    else
    {
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      v71 = qword_102419208;
      if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_ERROR))
      {
        id v72 = [*(id *)(a1 + 32) code];
        *(_DWORD *)buf = 134349056;
        id v93 = v72;
        _os_log_impl((void *)&_mh_execute_header, v71, OS_LOG_TYPE_ERROR, "HealthKit Activity Summary query encountered error,%{public}ld", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        id v73 = [*(id *)(a1 + 32) code];
        int v81 = 134349056;
        id v82 = v73;
        long long v4 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v4);
        goto LABEL_86;
      }
    }
  }
  else
  {
    long long v79 = 0u;
    long long v80 = 0u;
    long long v77 = 0u;
    long long v78 = 0u;
    id obj = *(id *)(a1 + 40);
    id v76 = [obj countByEnumeratingWithState:&v77 objects:v91 count:16];
    if (v76)
    {
      uint64_t v75 = *(void *)v78;
      do
      {
        double v5 = 0;
        do
        {
          if (*(void *)v78 != v75) {
            objc_enumerationMutation(obj);
          }
          unint64_t v6 = *(void **)(*((void *)&v77 + 1) + 8 * (void)v5);
          [objc_msgSend(v6, "_flightsClimbed") doubleValueForUnit:+[HKUnit countUnit](HKUnit, "countUnit")];
          uint64_t v8 = v7;
          [objc_msgSend(v6, "stepCount") doubleValueForUnit:+[HKUnit countUnit](HKUnit, "countUnit")];
          uint64_t v10 = v9;
          [objc_msgSend(v6, "appleExerciseTime") doubleValueForUnit:+[HKUnit minuteUnit](HKUnit, "minuteUnit")];
          uint64_t v12 = v11;
          if (qword_102419200 != -1) {
            dispatch_once(&qword_102419200, &stru_1022AD450);
          }
          long long v13 = qword_102419208;
          if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEBUG))
          {
            id v14 = [[objc_msgSend(v6, "_startDate") description];
            id v15 = [[objc_msgSend(v6, "_endDate") description];
            *(_DWORD *)buf = 138478851;
            id v93 = v14;
            __int16 v94 = 2113;
            id v95 = v15;
            __int16 v96 = 2049;
            uint64_t v97 = v8;
            __int16 v98 = 2049;
            uint64_t v99 = v10;
            __int16 v100 = 2049;
            uint64_t v101 = v12;
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Retrieved activity summary... startDate: %{private}@, endDate: %{private}@, Flights climbed: %{private}f, Step count: %{private}f, Exercise minutes: %{private}f", buf, 0x34u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419200 != -1) {
              dispatch_once(&qword_102419200, &stru_1022AD450);
            }
            id v67 = [[objc_msgSend(v6, "_startDate") description];
            id v68 = [[objc_msgSend(v6, "_endDate") description];
            int v81 = 138478851;
            id v82 = v67;
            __int16 v83 = 2113;
            id v84 = v68;
            __int16 v85 = 2049;
            uint64_t v86 = v8;
            __int16 v87 = 2049;
            uint64_t v88 = v10;
            __int16 v89 = 2049;
            uint64_t v90 = v12;
            v69 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v69);
            if (v69 != (char *)buf) {
              free(v69);
            }
          }
          uint64_t v16 = *(void **)(*(void *)(a1 + 64) + 8);
          [objc_msgSend(v6, "_startDate") timeIntervalSinceReferenceDate];
          uint64_t v18 = v17;
          [objc_msgSend(v6, "_endDate") timeIntervalSinceReferenceDate];
          uint64_t v20 = v19;
          unint64_t v21 = v16[8];
          int v22 = (char *)v16[7];
          if ((unint64_t)v22 >= v21)
          {
            uint64_t v24 = (char *)v16[6];
            unint64_t v25 = 0xAAAAAAAAAAAAAAABLL * ((v22 - v24) >> 3);
            unint64_t v26 = v25 + 1;
            if (v25 + 1 > 0xAAAAAAAAAAAAAAALL) {
              sub_1001D7FD4();
            }
            unint64_t v27 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v21 - (void)v24) >> 3);
            if (2 * v27 > v26) {
              unint64_t v26 = 2 * v27;
            }
            if (v27 >= 0x555555555555555) {
              unint64_t v28 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v28 = v26;
            }
            if (v28)
            {
              uint64_t v29 = (char *)sub_1000DA5D8((uint64_t)(v16 + 8), v28);
              uint64_t v24 = (char *)v16[6];
              int v22 = (char *)v16[7];
            }
            else
            {
              uint64_t v29 = 0;
            }
            long long v30 = &v29[24 * v25];
            *(void *)long long v30 = v18;
            *((void *)v30 + 1) = v20;
            *((void *)v30 + 2) = v8;
            long long v31 = v30;
            if (v22 != v24)
            {
              do
              {
                long long v32 = *(_OWORD *)(v22 - 24);
                *((void *)v31 - 1) = *((void *)v22 - 1);
                *(_OWORD *)(v31 - 24) = v32;
                v31 -= 24;
                v22 -= 24;
              }
              while (v22 != v24);
              uint64_t v24 = (char *)v16[6];
            }
            uint64_t v23 = v30 + 24;
            v16[6] = v31;
            v16[7] = v30 + 24;
            v16[8] = &v29[24 * v28];
            if (v24) {
              operator delete(v24);
            }
          }
          else
          {
            *(void *)int v22 = v18;
            *((void *)v22 + 1) = v19;
            uint64_t v23 = v22 + 24;
            *((void *)v22 + 2) = v8;
          }
          v16[7] = v23;
          unint64_t v33 = *(void **)(*(void *)(a1 + 72) + 8);
          [objc_msgSend(v6, "_startDate") timeIntervalSinceReferenceDate];
          uint64_t v35 = v34;
          [objc_msgSend(v6, "_endDate") timeIntervalSinceReferenceDate];
          uint64_t v37 = v36;
          unint64_t v38 = v33[8];
          long long v39 = (char *)v33[7];
          if ((unint64_t)v39 >= v38)
          {
            int v41 = (char *)v33[6];
            unint64_t v42 = 0xAAAAAAAAAAAAAAABLL * ((v39 - v41) >> 3);
            unint64_t v43 = v42 + 1;
            if (v42 + 1 > 0xAAAAAAAAAAAAAAALL) {
              sub_1001D7FD4();
            }
            unint64_t v44 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v38 - (void)v41) >> 3);
            if (2 * v44 > v43) {
              unint64_t v43 = 2 * v44;
            }
            if (v44 >= 0x555555555555555) {
              unint64_t v45 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v45 = v43;
            }
            if (v45)
            {
              unint64_t v46 = (char *)sub_1000DA5D8((uint64_t)(v33 + 8), v45);
              int v41 = (char *)v33[6];
              long long v39 = (char *)v33[7];
            }
            else
            {
              unint64_t v46 = 0;
            }
            uint64_t v47 = &v46[24 * v42];
            *(void *)uint64_t v47 = v35;
            *((void *)v47 + 1) = v37;
            *((void *)v47 + 2) = v12;
            int v48 = v47;
            if (v39 != v41)
            {
              do
              {
                long long v49 = *(_OWORD *)(v39 - 24);
                *((void *)v48 - 1) = *((void *)v39 - 1);
                *(_OWORD *)(v48 - 24) = v49;
                v48 -= 24;
                v39 -= 24;
              }
              while (v39 != v41);
              int v41 = (char *)v33[6];
            }
            uint64_t v40 = v47 + 24;
            v33[6] = v48;
            v33[7] = v47 + 24;
            v33[8] = &v46[24 * v45];
            if (v41) {
              operator delete(v41);
            }
          }
          else
          {
            *(void *)long long v39 = v35;
            *((void *)v39 + 1) = v36;
            uint64_t v40 = v39 + 24;
            *((void *)v39 + 2) = v12;
          }
          v33[7] = v40;
          uint64_t v50 = *(void **)(*(void *)(a1 + 80) + 8);
          [objc_msgSend(v6, "_startDate") timeIntervalSinceReferenceDate];
          uint64_t v52 = v51;
          [objc_msgSend(v6, "_endDate") timeIntervalSinceReferenceDate];
          uint64_t v54 = v53;
          unint64_t v55 = v50[8];
          double v56 = (char *)v50[7];
          if ((unint64_t)v56 >= v55)
          {
            int v58 = (char *)v50[6];
            unint64_t v59 = 0xAAAAAAAAAAAAAAABLL * ((v56 - v58) >> 3);
            unint64_t v60 = v59 + 1;
            if (v59 + 1 > 0xAAAAAAAAAAAAAAALL) {
              sub_1001D7FD4();
            }
            unint64_t v61 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v55 - (void)v58) >> 3);
            if (2 * v61 > v60) {
              unint64_t v60 = 2 * v61;
            }
            if (v61 >= 0x555555555555555) {
              unint64_t v62 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v62 = v60;
            }
            if (v62)
            {
              long long v63 = (char *)sub_1000DA5D8((uint64_t)(v50 + 8), v62);
              int v58 = (char *)v50[6];
              double v56 = (char *)v50[7];
            }
            else
            {
              long long v63 = 0;
            }
            long long v64 = &v63[24 * v59];
            *(void *)long long v64 = v52;
            *((void *)v64 + 1) = v54;
            *((void *)v64 + 2) = v10;
            long long v65 = v64;
            if (v56 != v58)
            {
              do
              {
                long long v66 = *(_OWORD *)(v56 - 24);
                *((void *)v65 - 1) = *((void *)v56 - 1);
                *(_OWORD *)(v65 - 24) = v66;
                v65 -= 24;
                v56 -= 24;
              }
              while (v56 != v58);
              int v58 = (char *)v50[6];
            }
            double v57 = v64 + 24;
            v50[6] = v65;
            v50[7] = v64 + 24;
            v50[8] = &v63[24 * v62];
            if (v58) {
              operator delete(v58);
            }
          }
          else
          {
            *(void *)double v56 = v52;
            *((void *)v56 + 1) = v53;
            double v57 = v56 + 24;
            *((void *)v56 + 2) = v10;
          }
          v50[7] = v57;
          double v5 = (char *)v5 + 1;
        }
        while (v5 != v76);
        id v70 = [obj countByEnumeratingWithState:&v77 objects:v91 count:16];
        id v76 = v70;
      }
      while (v70);
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

id sub_1003ACB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = [objc_msgSend(*(id *)(a1 + 32), "universe") silo];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1003ACC48;
  v11[3] = &unk_1022AD288;
  v11[4] = a4;
  v11[5] = a3;
  long long v8 = *(_OWORD *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 72);
  long long v9 = *(_OWORD *)(a1 + 40);
  long long v13 = v8;
  long long v12 = v9;
  return [v7 async:v11];
}

void sub_1003ACC48(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v63 = a1;
  if (!v2)
  {
    long long v70 = 0u;
    long long v71 = 0u;
    long long v68 = 0u;
    long long v69 = 0u;
    id obj = *(id *)(a1 + 40);
    id v62 = [obj countByEnumeratingWithState:&v68 objects:v81 count:16];
    if (!v62) {
      goto LABEL_75;
    }
    uint64_t v61 = *(void *)v69;
    while (1)
    {
      double v5 = 0;
      do
      {
        if (*(void *)v69 != v61) {
          objc_enumerationMutation(obj);
        }
        unint64_t v6 = *(void **)(*((void *)&v68 + 1) + 8 * (void)v5);
        unsigned int v7 = [[[v6 metadata] objectForKeyedSubscript:HKMetadataKeyIndoorWorkout] boolValue];
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        long long v8 = qword_102419208;
        if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEBUG))
        {
          id v9 = [v6 workoutActivityType];
          [objc_msgSend(v6, "startDate") timeIntervalSinceReferenceDate];
          uint64_t v11 = v10;
          [objc_msgSend(v6, "endDate") timeIntervalSinceReferenceDate];
          *(_DWORD *)buf = 134284289;
          id v83 = v9;
          __int16 v84 = 1025;
          unsigned int v85 = v7;
          __int16 v86 = 2049;
          uint64_t v87 = v11;
          __int16 v88 = 2049;
          uint64_t v89 = v12;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Found workout... Type: %{private}lu, indoor: %{private}d, startTime: %{private}f, endTime: %{private}f", buf, 0x26u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419200 != -1) {
            dispatch_once(&qword_102419200, &stru_1022AD450);
          }
          id v51 = [v6 workoutActivityType];
          [objc_msgSend(v6, "startDate") timeIntervalSinceReferenceDate];
          uint64_t v53 = v52;
          [objc_msgSend(v6, "endDate") timeIntervalSinceReferenceDate];
          int v73 = 134284289;
          id v74 = v51;
          __int16 v75 = 1025;
          unsigned int v76 = v7;
          __int16 v77 = 2049;
          uint64_t v78 = v53;
          __int16 v79 = 2049;
          uint64_t v80 = v54;
          unint64_t v55 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v55);
          if (v55 != (char *)buf) {
            free(v55);
          }
        }
        long long v13 = *(void **)(*(void *)(v63 + 64) + 8);
        [objc_msgSend(v6, "startDate") timeIntervalSinceReferenceDate];
        uint64_t v15 = v14;
        [objc_msgSend(v6, "endDate") timeIntervalSinceReferenceDate];
        uint64_t v17 = v16;
        unsigned int v18 = [v6 workoutActivityType];
        unint64_t v19 = v13[8];
        unint64_t v20 = v13[7];
        if (v20 >= v19)
        {
          uint64_t v22 = v13[6];
          unint64_t v23 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v20 - v22) >> 3);
          unint64_t v24 = v23 + 1;
          if (v23 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_1001D7FD4();
          }
          unint64_t v25 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v19 - v22) >> 3);
          if (2 * v25 > v24) {
            unint64_t v24 = 2 * v25;
          }
          if (v25 >= 0x555555555555555) {
            unint64_t v26 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v26 = v24;
          }
          if (v26) {
            unint64_t v27 = (char *)sub_1000DA5D8((uint64_t)(v13 + 8), v26);
          }
          else {
            unint64_t v27 = 0;
          }
          unint64_t v28 = &v27[24 * v23];
          *(void *)unint64_t v28 = v15;
          *((void *)v28 + 1) = v17;
          *((_DWORD *)v28 + 4) = v18;
          v28[20] = v7;
          long long v30 = (char *)v13[6];
          uint64_t v29 = (char *)v13[7];
          long long v31 = v28;
          if (v29 != v30)
          {
            do
            {
              long long v32 = *(_OWORD *)(v29 - 24);
              *(void *)(v31 - 11) = *(void *)(v29 - 11);
              *(_OWORD *)(v31 - 24) = v32;
              v31 -= 24;
              v29 -= 24;
            }
            while (v29 != v30);
            uint64_t v29 = (char *)v13[6];
          }
          unint64_t v21 = v28 + 24;
          v13[6] = v31;
          v13[7] = v28 + 24;
          v13[8] = &v27[24 * v26];
          if (v29) {
            operator delete(v29);
          }
        }
        else
        {
          *(void *)unint64_t v20 = v15;
          *(void *)(v20 + 8) = v17;
          *(_DWORD *)(v20 + 16) = v18;
          unint64_t v21 = (char *)(v20 + 24);
          *(unsigned char *)(v20 + 20) = v7;
        }
        v13[7] = v21;
        [objc_msgSend(v6, "totalDistance") _value];
        if (v33 > 0.0
          && ([v6 workoutActivityType] == (id)52 || objc_msgSend(v6, "workoutActivityType") == (id)37))
        {
          [objc_msgSend(v6, "startDate") timeIntervalSinceReferenceDate];
          double v35 = v34;
          long long v66 = 0u;
          long long v67 = 0u;
          long long v64 = 0u;
          long long v65 = 0u;
          id v36 = [v6 workoutEvents];
          id v37 = [v36 countByEnumeratingWithState:&v64 objects:v72 count:16];
          if (v37)
          {
            uint64_t v38 = *(void *)v65;
            int v39 = 1;
            double v40 = 0.0;
            do
            {
              for (i = 0; i != v37; i = (char *)i + 1)
              {
                if (*(void *)v65 != v38) {
                  objc_enumerationMutation(v36);
                }
                unint64_t v42 = *(void **)(*((void *)&v64 + 1) + 8 * i);
                if (v39)
                {
                  [objc_msgSend(objc_msgSend(objc_msgSend(*(id *)(*((void *)&v64 + 1) + 8 * i), "dateInterval"), "startDate"), "timeIntervalSinceReferenceDate"]
                  double v40 = v40 + v43 - v35;
                }
                [objc_msgSend(objc_msgSend(objc_msgSend(v42, "dateInterval"), "startDate"), "timeIntervalSinceReferenceDate"]
                double v35 = v44;
                unint64_t v45 = (char *)[v42 type];
                if ((0x33u >> ((_BYTE)v45 - 1))) {
                  unsigned int v46 = (0x22u >> ((_BYTE)v45 - 1)) & 1;
                }
                else {
                  unsigned int v46 = v39;
                }
                if ((unint64_t)(v45 - 1) <= 5) {
                  int v39 = v46;
                }
              }
              id v37 = [v36 countByEnumeratingWithState:&v64 objects:v72 count:16];
            }
            while (v37);
            if ((v39 & 1) == 0) {
              goto LABEL_58;
            }
          }
          else
          {
            double v40 = 0.0;
          }
          [objc_msgSend(v6, "endDate") timeIntervalSinceReferenceDate];
          double v40 = v40 + v47 - v35;
LABEL_58:
          if ([v6 workoutActivityType] == (id)52) {
            uint64_t v48 = *(void *)(v63 + 72);
          }
          else {
            uint64_t v48 = *(void *)(v63 + 80);
          }
          long long v49 = (double *)(*(void *)(v48 + 8) + 48);
          [objc_msgSend(v6, "totalDistance") _value];
          sub_1003AD508(v49, v40 / v50);
        }
        double v5 = (char *)v5 + 1;
      }
      while (v5 != v62);
      id v56 = [obj countByEnumeratingWithState:&v68 objects:v81 count:16];
      id v62 = v56;
      if (!v56) {
        goto LABEL_75;
      }
    }
  }
  if ([v2 code] == (id)6)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    double v3 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "HealthKit Workout query failed due to device lock", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      LOWORD(v73) = 0;
      long long v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v4);
LABEL_79:
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
  else
  {
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    double v57 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_ERROR))
    {
      id v58 = [*(id *)(a1 + 32) code];
      *(_DWORD *)buf = 134349056;
      id v83 = v58;
      _os_log_impl((void *)&_mh_execute_header, v57, OS_LOG_TYPE_ERROR, "HealthKit Workout query encountered error,%{public}ld", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      id v59 = [*(id *)(a1 + 32) code];
      int v73 = 134349056;
      id v74 = v59;
      long long v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v4);
      goto LABEL_79;
    }
  }
LABEL_75:
  dispatch_group_leave(*(dispatch_group_t *)(v63 + 48));
}

double *sub_1003AD508(double *result, double a2)
{
  int v2 = *(_DWORD *)result;
  int v3 = *(_DWORD *)result + 1;
  *(_DWORD *)__n128 result = v3;
  if (v2)
  {
    double v4 = result[1];
    double v5 = a2 - v4;
    double v6 = v4 + (a2 - v4) / (double)v3;
    double v7 = result[3];
    result[1] = v6;
    result[2] = v6;
    double v8 = v7 + v5 * (a2 - v6);
    result[3] = v8;
    result[4] = v8;
  }
  else
  {
    result[1] = a2;
    result[2] = a2;
    result[3] = 0.0;
  }
  return result;
}

id sub_1003AD550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = [objc_msgSend(*(id *)(a1 + 32), "universe") silo];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1003AD5F4;
  v9[3] = &unk_1022AD300;
  v9[4] = a4;
  void v9[5] = a3;
  uint64_t v11 = *(void *)(a1 + 56);
  long long v10 = *(_OWORD *)(a1 + 40);
  return [v7 async:v9];
}

void sub_1003AD5F4(uint64_t a1)
{
  int v2 = *(void **)(a1 + 32);
  if (v2)
  {
    if ([v2 code] == (id)6)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      int v3 = qword_102419208;
      if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "HealthKit Stand Hour query failed due to device lock", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        LOWORD(v43) = 0;
        double v4 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v4);
LABEL_54:
        if (v4 != (char *)buf) {
          free(v4);
        }
      }
    }
    else
    {
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      id v36 = qword_102419208;
      if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_ERROR))
      {
        id v37 = [*(id *)(a1 + 32) code];
        *(_DWORD *)buf = 134349056;
        double v51 = *(double *)&v37;
        _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_ERROR, "HealthKit Stand Hour query encountered error,%{public}ld", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        id v38 = [*(id *)(a1 + 32) code];
        int v43 = 134349056;
        double v44 = *(double *)&v38;
        double v4 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v4);
        goto LABEL_54;
      }
    }
  }
  else
  {
    long long v41 = 0u;
    long long v42 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    double v5 = *(void **)(a1 + 40);
    id v6 = [v5 countByEnumeratingWithState:&v39 objects:v49 count:16];
    if (v6)
    {
      uint64_t v7 = *(void *)v40;
      do
      {
        double v8 = 0;
        do
        {
          if (*(void *)v40 != v7) {
            objc_enumerationMutation(v5);
          }
          id v9 = *(void **)(*((void *)&v39 + 1) + 8 * (void)v8);
          id v10 = [v9 value];
          if (qword_102419200 != -1) {
            dispatch_once(&qword_102419200, &stru_1022AD450);
          }
          double v11 = 1.0 - (double)(uint64_t)v10;
          uint64_t v12 = qword_102419208;
          if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEBUG))
          {
            id v13 = [[objc_msgSend(v9, "startDate") description];
            id v14 = [[objc_msgSend(v9, "endDate") description];
            *(_DWORD *)buf = 134284035;
            double v51 = v11;
            __int16 v52 = 2113;
            id v53 = v13;
            __int16 v54 = 2113;
            id v55 = v14;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Retrieved sample... Stand hour: %{private}f, startTime: %{private}@, endTime: %{private}@", buf, 0x20u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419200 != -1) {
              dispatch_once(&qword_102419200, &stru_1022AD450);
            }
            id v32 = [[[v9 startDate] description];
            id v33 = [[objc_msgSend(v9, "endDate") description];
            int v43 = 134284035;
            double v44 = v11;
            __int16 v45 = 2113;
            id v46 = v32;
            __int16 v47 = 2113;
            id v48 = v33;
            double v34 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v34);
            if (v34 != (char *)buf) {
              free(v34);
            }
          }
          uint64_t v15 = *(void **)(*(void *)(a1 + 64) + 8);
          [objc_msgSend(v9, "startDate") timeIntervalSinceReferenceDate];
          uint64_t v17 = v16;
          [objc_msgSend(v9, "endDate") timeIntervalSinceReferenceDate];
          uint64_t v19 = v18;
          unint64_t v20 = v15[8];
          unint64_t v21 = (char *)v15[7];
          if ((unint64_t)v21 >= v20)
          {
            unint64_t v23 = (char *)v15[6];
            unint64_t v24 = 0xAAAAAAAAAAAAAAABLL * ((v21 - v23) >> 3);
            unint64_t v25 = v24 + 1;
            if (v24 + 1 > 0xAAAAAAAAAAAAAAALL) {
              sub_1001D7FD4();
            }
            unint64_t v26 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v20 - (void)v23) >> 3);
            if (2 * v26 > v25) {
              unint64_t v25 = 2 * v26;
            }
            if (v26 >= 0x555555555555555) {
              unint64_t v27 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v27 = v25;
            }
            if (v27)
            {
              unint64_t v28 = (char *)sub_1000DA5D8((uint64_t)(v15 + 8), v27);
              unint64_t v23 = (char *)v15[6];
              unint64_t v21 = (char *)v15[7];
            }
            else
            {
              unint64_t v28 = 0;
            }
            uint64_t v29 = &v28[24 * v24];
            *(void *)uint64_t v29 = v17;
            *((void *)v29 + 1) = v19;
            *((double *)v29 + 2) = v11;
            long long v30 = v29;
            if (v21 != v23)
            {
              do
              {
                long long v31 = *(_OWORD *)(v21 - 24);
                *((void *)v30 - 1) = *((void *)v21 - 1);
                *(_OWORD *)(v30 - 24) = v31;
                v30 -= 24;
                v21 -= 24;
              }
              while (v21 != v23);
              unint64_t v23 = (char *)v15[6];
            }
            uint64_t v22 = v29 + 24;
            v15[6] = v30;
            v15[7] = v29 + 24;
            v15[8] = &v28[24 * v27];
            if (v23) {
              operator delete(v23);
            }
          }
          else
          {
            *(void *)unint64_t v21 = v17;
            *((void *)v21 + 1) = v18;
            uint64_t v22 = v21 + 24;
            *((double *)v21 + 2) = v11;
          }
          v15[7] = v22;
          double v8 = (char *)v8 + 1;
        }
        while (v8 != v6);
        id v35 = [v5 countByEnumeratingWithState:&v39 objects:v49 count:16];
        id v6 = v35;
      }
      while (v35);
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

id sub_1003ADCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = [objc_msgSend(*(id *)(a1 + 32), "universe") silo];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1003ADD50;
  v10[3] = &unk_1022AD350;
  v10[4] = a4;
  v10[5] = a3;
  long long v8 = *(_OWORD *)(a1 + 56);
  long long v11 = *(_OWORD *)(a1 + 40);
  long long v12 = v8;
  return [v7 async:v10];
}

void sub_1003ADD50(uint64_t a1)
{
  int v2 = *(void **)(a1 + 32);
  if (v2)
  {
    if ([v2 code] == (id)6)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      int v3 = qword_102419208;
      if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "HealthKit Flights query failed due to device lock", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        LOWORD(v47) = 0;
        double v4 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v4);
LABEL_67:
        if (v4 != (char *)buf) {
          free(v4);
        }
      }
    }
    else
    {
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      long long v39 = qword_102419208;
      if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_ERROR))
      {
        id v40 = [*(id *)(a1 + 32) code];
        *(_DWORD *)buf = 134349056;
        id v57 = v40;
        _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_ERROR, "HealthKit Flights query encountered error,%{public}ld", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        id v41 = [*(id *)(a1 + 32) code];
        int v47 = 134349056;
        id v48 = v41;
        double v4 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v4);
        goto LABEL_67;
      }
    }
  }
  else
  {
    long long v45 = 0u;
    long long v46 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    id obj = *(id *)(a1 + 40);
    id v5 = [obj countByEnumeratingWithState:&v43 objects:v55 count:16];
    if (v5)
    {
      uint64_t v6 = *(void *)v44;
      do
      {
        id v7 = 0;
        do
        {
          if (*(void *)v44 != v6) {
            objc_enumerationMutation(obj);
          }
          long long v8 = *(void **)(*((void *)&v43 + 1) + 8 * (void)v7);
          [objc_msgSend(v8, "quantity") doubleValueForUnit:[HKUnit countUnit]];
          id v10 = v9;
          if (qword_102419200 != -1) {
            dispatch_once(&qword_102419200, &stru_1022AD450);
          }
          long long v11 = qword_102419208;
          if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEBUG))
          {
            id v12 = [[objc_msgSend(v8, "startDate") description];
            id v13 = [[objc_msgSend(v8, "endDate") description];
            id v14 = [[objc_msgSend(v8, "sourceRevision") productType];
            *(_DWORD *)buf = 134284291;
            id v57 = v10;
            __int16 v58 = 2113;
            id v59 = v12;
            __int16 v60 = 2113;
            id v61 = v13;
            __int16 v62 = 2113;
            id v63 = v14;
            _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Retrieved sample... Flights climbed: %{private}f, startDate: %{private}@, endDate: %{private}@ from %{private}@", buf, 0x2Au);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419200 != -1) {
              dispatch_once(&qword_102419200, &stru_1022AD450);
            }
            id v34 = [[objc_msgSend(v8, "startDate") description];
            id v35 = [objc_msgSend(v8, "endDate") description];
            id v36 = [objc_msgSend(v8, "sourceRevision") productType];
            int v47 = 134284291;
            id v48 = v10;
            __int16 v49 = 2113;
            id v50 = v34;
            __int16 v51 = 2113;
            id v52 = v35;
            __int16 v53 = 2113;
            id v54 = v36;
            id v37 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v37);
            if (v37 != (char *)buf) {
              free(v37);
            }
          }
          if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24)
            || !objc_msgSend(objc_msgSend(objc_msgSend(v8, "sourceRevision"), "productType"), "hasPrefix:", @"Watch4"))
          {
            if (objc_msgSend(objc_msgSend(objc_msgSend(v8, "sourceRevision"), "productType"), "hasPrefix:", @"iPhone"))
            {
              uint64_t v17 = *(void **)(*(void *)(a1 + 72) + 8);
              [objc_msgSend(v8, "startDate") timeIntervalSinceReferenceDate];
              uint64_t v19 = v18;
              [objc_msgSend(v8, "endDate") timeIntervalSinceReferenceDate];
              uint64_t v21 = v20;
              unint64_t v22 = v17[8];
              unint64_t v23 = (char *)v17[7];
              if ((unint64_t)v23 >= v22)
              {
                unint64_t v25 = (char *)v17[6];
                unint64_t v26 = 0xAAAAAAAAAAAAAAABLL * ((v23 - v25) >> 3);
                unint64_t v27 = v26 + 1;
                if (v26 + 1 > 0xAAAAAAAAAAAAAAALL) {
                  sub_1001D7FD4();
                }
                unint64_t v28 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v22 - (void)v25) >> 3);
                if (2 * v28 > v27) {
                  unint64_t v27 = 2 * v28;
                }
                if (v28 >= 0x555555555555555) {
                  unint64_t v29 = 0xAAAAAAAAAAAAAAALL;
                }
                else {
                  unint64_t v29 = v27;
                }
                if (v29)
                {
                  long long v30 = (char *)sub_1000DA5D8((uint64_t)(v17 + 8), v29);
                  unint64_t v25 = (char *)v17[6];
                  unint64_t v23 = (char *)v17[7];
                }
                else
                {
                  long long v30 = 0;
                }
                long long v31 = &v30[24 * v26];
                *(void *)long long v31 = v19;
                *((void *)v31 + 1) = v21;
                *((void *)v31 + 2) = v10;
                id v32 = v31;
                if (v23 != v25)
                {
                  do
                  {
                    long long v33 = *(_OWORD *)(v23 - 24);
                    *((void *)v32 - 1) = *((void *)v23 - 1);
                    *(_OWORD *)(v32 - 24) = v33;
                    v32 -= 24;
                    v23 -= 24;
                  }
                  while (v23 != v25);
                  unint64_t v25 = (char *)v17[6];
                }
                unint64_t v24 = v31 + 24;
                v17[6] = v32;
                v17[7] = v31 + 24;
                v17[8] = &v30[24 * v29];
                if (v25) {
                  operator delete(v25);
                }
              }
              else
              {
                *(void *)unint64_t v23 = v19;
                *((void *)v23 + 1) = v20;
                unint64_t v24 = v23 + 24;
                *((void *)v23 + 2) = v10;
              }
              v17[7] = v24;
            }
          }
          else
          {
            *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
            if (qword_102419200 != -1) {
              dispatch_once(&qword_102419200, &stru_1022AD450);
            }
            uint64_t v15 = qword_102419208;
            if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEBUG))
            {
              *(_WORD *)buf = 0;
              _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "Flights from series 4 watch observed, consider only phone flights", buf, 2u);
            }
            if (sub_10013D1A0(115, 2))
            {
              bzero(buf, 0x65CuLL);
              if (qword_102419200 != -1) {
                dispatch_once(&qword_102419200, &stru_1022AD450);
              }
              LOWORD(v47) = 0;
              uint64_t v16 = (char *)_os_log_send_and_compose_impl();
              sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v16);
              if (v16 != (char *)buf) {
                free(v16);
              }
            }
          }
          id v7 = (char *)v7 + 1;
        }
        while (v7 != v5);
        id v38 = [obj countByEnumeratingWithState:&v43 objects:v55 count:16];
        id v5 = v38;
      }
      while (v38);
    }
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_1003AE5D8(uint64_t a1)
{
  dispatch_release(*(dispatch_object_t *)(a1 + 32));
  if (!xpc_activity_should_defer(*(xpc_activity_t *)(a1 + 40))) {
    goto LABEL_13;
  }
  if (qword_102419200 != -1) {
    dispatch_once(&qword_102419200, &stru_1022AD450);
  }
  int v3 = qword_102419208;
  if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Attempting to defer activity", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    *(_WORD *)v147 = 0;
    __int16 v92 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v92);
    if (v92 != buf) {
      free(v92);
    }
  }
  if (!xpc_activity_set_state(*(xpc_activity_t *)(a1 + 40), 3))
  {
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    double v4 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_FAULT))
    {
      xpc_activity_state_t state = xpc_activity_get_state(*(xpc_activity_t *)(a1 + 40));
      *(_DWORD *)buf = 134349056;
      *(void *)&uint8_t buf[4] = state;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Failed to mark activity as deferred. Current state is %{public}ld", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      xpc_activity_state_t v96 = xpc_activity_get_state(*(xpc_activity_t *)(a1 + 40));
      *(_DWORD *)v147 = 134349056;
      *(void *)&v147[4] = v96;
      uint64_t v97 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v97);
      if (v97 != buf) {
        free(v97);
      }
    }
LABEL_13:
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
    {
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      uint64_t v6 = qword_102419208;
      if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "At least one required query failed due to device lock. Rescheduling the activity to try again soon.", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        *(_WORD *)v147 = 0;
        id v93 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v93);
        if (v93 != buf) {
          free(v93);
        }
      }
      id v9 = *(void **)(a1 + 48);
      uint64_t v7 = a1 + 48;
      long long v8 = v9;
      uint64_t v10 = *(void *)(v7 - 8);
      double Current = CFAbsoluteTimeGetCurrent();
      int64_t v12 = *(void *)(*(void *)v7 + 176);
      if (v12 >= XPC_ACTIVITY_INTERVAL_1_HOUR) {
        int64_t v12 = XPC_ACTIVITY_INTERVAL_1_HOUR;
      }
      [v8 completeActivity:v10 withNextEstimateTime:Current + (double)v12];
      return;
    }
    uint64_t v13 = *(void *)(*(void *)(a1 + 72) + 8);
    uint64_t v14 = *(void *)(v13 + 48);
    uint64_t v15 = *(void *)(v13 + 56);
    if (v14 == v15)
    {
      double v16 = 1.79769313e308;
    }
    else
    {
      double v16 = 1.79769313e308;
      double v2 = 0.0;
      do
      {
        double v17 = *(double *)(v14 + 8);
        if (v17 < v16 && v17 > 0.0) {
          double v16 = *(double *)(v14 + 8);
        }
        v14 += 120;
      }
      while (v14 != v15);
    }
    [*(id *)(a1 + 56) timeIntervalSinceReferenceDate:v2];
    double v20 = v19;
    v144 = 0;
    v143 = 0;
    __p = 0;
    uint64_t v21 = *(void *)(*(void *)(a1 + 80) + 8);
    unint64_t v22 = *(double **)(v21 + 48);
    for (i = *(double **)(v21 + 56); v22 != i; v22 += 3)
    {
      double v25 = *v22;
      double v24 = v22[1];
      uint64_t v26 = *(void *)(*(void *)(a1 + 88) + 8);
      unint64_t v27 = *(double **)(v26 + 48);
      unint64_t v28 = *(double **)(v26 + 56);
      double v29 = 0.0;
      while (v27 != v28)
      {
        double v30 = *v27;
        double v31 = v27[1];
        v27 += 3;
        if (v31 <= v24 && v30 >= v25) {
          double v29 = v29 + 1.0;
        }
      }
      if (v16 >= v24) {
        double v33 = 0.0;
      }
      else {
        double v33 = v29;
      }
      id v34 = v143;
      if (v143 >= v144)
      {
        id v36 = (double *)__p;
        uint64_t v37 = ((char *)v143 - (unsigned char *)__p) >> 5;
        unint64_t v38 = v37 + 1;
        if ((unint64_t)(v37 + 1) >> 59) {
          sub_1001D7FD4();
        }
        uint64_t v39 = (char *)v144 - (unsigned char *)__p;
        if (((char *)v144 - (unsigned char *)__p) >> 4 > v38) {
          unint64_t v38 = v39 >> 4;
        }
        if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFE0) {
          unint64_t v40 = 0x7FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v40 = v38;
        }
        if (v40)
        {
          id v41 = (char *)sub_1001D9EDC((uint64_t)&v144, v40);
          id v34 = v143;
          id v36 = (double *)__p;
        }
        else
        {
          id v41 = 0;
        }
        long long v42 = (double *)&v41[32 * v37];
        *long long v42 = v25;
        v42[1] = v24;
        v42[2] = v33;
        v42[3] = v29;
        if (v34 == v36)
        {
          long long v45 = &v41[32 * v37];
        }
        else
        {
          long long v43 = &v41[32 * v37];
          do
          {
            long long v44 = *((_OWORD *)v34 - 1);
            long long v45 = v43 - 32;
            *((_OWORD *)v43 - 2) = *((_OWORD *)v34 - 2);
            *((_OWORD *)v43 - 1) = v44;
            v34 -= 4;
            v43 -= 32;
          }
          while (v34 != v36);
        }
        id v35 = v42 + 4;
        __p = v45;
        v143 = v42 + 4;
        v144 = (double *)&v41[32 * v40];
        if (v36) {
          operator delete(v36);
        }
      }
      else
      {
        double *v143 = v25;
        v34[1] = v24;
        id v35 = v34 + 4;
        v34[2] = v33;
        v34[3] = v29;
      }
      v143 = v35;
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      long long v46 = qword_102419208;
      if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_INFO))
      {
        uint64_t v47 = *((void *)v143 - 2);
        *(_DWORD *)buf = 134284289;
        *(double *)&uint8_t buf[4] = v25;
        *(_WORD *)&buf[12] = 2049;
        *(double *)&buf[14] = v24;
        *(_WORD *)&buf[22] = 2048;
        *(double *)&buf[24] = v29;
        *(_WORD *)&buf[32] = 2048;
        *(void *)&buf[34] = v47;
        _os_log_impl((void *)&_mh_execute_header, v46, OS_LOG_TYPE_INFO, "Hours for day %{private}f - %{private}f, %f (%f)\n", buf, 0x2Au);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        uint64_t v48 = *((void *)v143 - 2);
        *(_DWORD *)v147 = 134284289;
        *(double *)&v147[4] = v25;
        *(_WORD *)&v147[12] = 2049;
        *(double *)&v147[14] = v24;
        *(_WORD *)&v147[22] = 2048;
        *(double *)&v147[24] = v29;
        LOWORD(v148) = 2048;
        *(void *)((char *)&v148 + 2) = v48;
        __int16 v49 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v49);
        if (v49 != buf) {
          free(v49);
        }
      }
    }
    DWORD2(v137) = 0;
    *(void *)&long long v139 = 0;
    long long v138 = 0uLL;
    DWORD2(v139) = 0;
    uint64_t v141 = 0;
    long long v140 = 0uLL;
    id v50 = (uint64_t *)(*(void *)(*(void *)(a1 + 96) + 8) + 48);
    __int16 v51 = *(float **)(*(void *)(a1 + 104) + 8);
    float v52 = v51[14];
    float v53 = v51[15];
    float v54 = v51[17];
    id v55 = (uint64_t *)(*(void *)(*(void *)(a1 + 112) + 8) + 48);
    id v56 = (uint64_t *)(*(void *)(*(void *)(a1 + 120) + 8) + 48);
    *(void *)&long long v137 = 0;
    double v57 = sub_1006190E0(v50, v55, v56, (uint64_t)&v137, v52, v53, v54);
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    __int16 v58 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134283521;
      *(double *)&uint8_t buf[4] = v57;
      _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_DEBUG, "Using cadenceStrideLengthOffset of %{private}.3f", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      *(_DWORD *)v147 = 134283521;
      *(double *)&v147[4] = v57;
      __int16 v94 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v94);
      if (v94 != buf) {
        free(v94);
      }
    }
    double v136 = 0.0;
    uint64_t v59 = sub_1000A6958();
    sub_1000A6A10(v59, @"PredictedWalkDistanceResetDate", &v136);
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    __int16 v60 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 134217984;
      *(double *)&uint8_t buf[4] = v136;
      _os_log_impl((void *)&_mh_execute_header, v60, OS_LOG_TYPE_INFO, "p6MWD lastResetTime, %f", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      *(_DWORD *)v147 = 134217984;
      *(double *)&v147[4] = v136;
      id v95 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v95);
      if (v95 != buf) {
        free(v95);
      }
    }
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 128) + 8) + 24))
    {
      uint64_t v61 = *(void *)(*(void *)(a1 + 48) + 40);
      double v62 = v136;
      uint64_t v63 = *(void *)(*(void *)(a1 + 72) + 8);
      uint64_t v135 = 0;
      v133 = 0;
      unint64_t v134 = 0;
      sub_1003B2D68(&v133, *(const void **)(v63 + 48), *(void *)(v63 + 56), 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(*(void *)(v63 + 56) - *(void *)(v63 + 48)) >> 3));
      uint64_t v64 = *(void *)(*(void *)(a1 + 136) + 8);
      uint64_t v65 = *(void *)(*(void *)(a1 + 144) + 8);
      uint64_t v66 = *(void *)(*(void *)(a1 + 152) + 8);
      uint64_t v67 = *(void *)(*(void *)(a1 + 160) + 8);
      uint64_t v132 = 0;
      v130 = 0;
      v131 = 0;
      sub_1003B2E38(&v130, *(const void **)(v67 + 48), *(void *)(v67 + 56), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v67 + 56) - *(void *)(v67 + 48)) >> 3));
      sub_101100B58(v61, (unint64_t *)&v133, (double **)(v64 + 48), (double **)(v65 + 48), (double **)(v66 + 48), (double **)&__p, (uint64_t)&v130, (float *)(*(void *)(*(void *)(a1 + 104) + 8) + 48), (uint64_t)buf, v62, v20, v57);
      double v68 = *(double *)buf;
      double v69 = *(double *)&buf[8];
      int v70 = *(_DWORD *)&buf[16];
      long long v158 = *(_OWORD *)&buf[20];
      v159[0] = *(_OWORD *)&buf[36];
      *(_OWORD *)((char *)v159 + 12) = *(_OWORD *)&buf[48];
      double v71 = v161;
      long long v154 = v170;
      long long v155 = v171;
      long long v156 = v172;
      uint64_t v157 = v173;
      long long v150 = v166;
      long long v151 = v167;
      long long v152 = v168;
      long long v153 = v169;
      *(_OWORD *)v147 = v162;
      *(_OWORD *)&v147[16] = v163;
      long long v148 = v164;
      long long v149 = v165;
      if (v130)
      {
        v131 = v130;
        operator delete(v130);
      }
      id v72 = v133;
      if (!v133) {
        goto LABEL_93;
      }
      unint64_t v134 = (unint64_t)v133;
    }
    else
    {
      uint64_t v73 = *(void *)(*(void *)(a1 + 48) + 40);
      double v74 = v136;
      uint64_t v75 = *(void *)(*(void *)(a1 + 72) + 8);
      uint64_t v129 = 0;
      v127 = 0;
      v128 = 0;
      sub_1003B2D68(&v127, *(const void **)(v75 + 48), *(void *)(v75 + 56), 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(*(void *)(v75 + 56) - *(void *)(v75 + 48)) >> 3));
      uint64_t v76 = *(void *)(*(void *)(a1 + 80) + 8);
      uint64_t v77 = *(void *)(*(void *)(a1 + 144) + 8);
      uint64_t v78 = *(void *)(*(void *)(a1 + 152) + 8);
      uint64_t v79 = *(void *)(*(void *)(a1 + 160) + 8);
      uint64_t v126 = 0;
      v124 = 0;
      v125 = 0;
      sub_1003B2E38(&v124, *(const void **)(v79 + 48), *(void *)(v79 + 56), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v79 + 56) - *(void *)(v79 + 48)) >> 3));
      sub_101100B58(v73, (unint64_t *)&v127, (double **)(v76 + 48), (double **)(v77 + 48), (double **)(v78 + 48), (double **)&__p, (uint64_t)&v124, (float *)(*(void *)(*(void *)(a1 + 104) + 8) + 48), (uint64_t)buf, v74, v20, v57);
      double v68 = *(double *)buf;
      double v69 = *(double *)&buf[8];
      int v70 = *(_DWORD *)&buf[16];
      long long v158 = *(_OWORD *)&buf[20];
      v159[0] = *(_OWORD *)&buf[36];
      *(_OWORD *)((char *)v159 + 12) = *(_OWORD *)&buf[48];
      double v71 = v161;
      long long v154 = v170;
      long long v155 = v171;
      long long v156 = v172;
      uint64_t v157 = v173;
      long long v150 = v166;
      long long v151 = v167;
      long long v152 = v168;
      long long v153 = v169;
      *(_OWORD *)v147 = v162;
      *(_OWORD *)&v147[16] = v163;
      long long v148 = v164;
      long long v149 = v165;
      if (v124)
      {
        v125 = v124;
        operator delete(v124);
      }
      id v72 = v127;
      if (!v127) {
        goto LABEL_93;
      }
      v128 = v127;
    }
    operator delete(v72);
LABEL_93:
    if (v70 == 1)
    {
      [*(id *)(a1 + 48) writeToHealthKitPrediction:SDWORD2(v139) > 12 estimateTime:v71 earliestTimeUsed:v68 calibrationStatus:v69];
    }
    else
    {
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      uint64_t v80 = qword_102419208;
      if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 67240192;
        *(_DWORD *)&uint8_t buf[4] = v70;
        _os_log_impl((void *)&_mh_execute_header, v80, OS_LOG_TYPE_INFO, "Weekly p6MWD estimate unavailable, status %{public}d\n", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        int v145 = 67240192;
        int v146 = v70;
        __int16 v98 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion getSixMinuteWalkDistancePrediction:]_block_invoke", "%s\n", v98);
        if (v98 != buf) {
          free(v98);
        }
      }
    }
    int v81 = *(void **)(a1 + 48);
    *(double *)uint64_t v107 = v68;
    *(double *)&v107[1] = v69;
    int v108 = v70;
    long long v109 = v158;
    *(_OWORD *)__int16 v110 = v159[0];
    *(_OWORD *)&v110[12] = *(_OWORD *)((char *)v159 + 12);
    double v111 = v71;
    long long v119 = v153;
    long long v118 = v152;
    long long v117 = v151;
    long long v116 = v150;
    uint64_t v123 = v157;
    long long v122 = v156;
    long long v121 = v155;
    long long v120 = v154;
    long long v112 = *(_OWORD *)v147;
    long long v113 = *(_OWORD *)&v147[16];
    long long v114 = v148;
    long long v115 = v149;
    v105[0] = v137;
    v105[1] = v138;
    uint64_t v106 = v141;
    v105[2] = v139;
    v105[3] = v140;
    uint64_t v82 = *(void *)(a1 + 176);
    uint64_t v83 = *(void *)(*(void *)(a1 + 168) + 8);
    long long v84 = *(_OWORD *)(v83 + 64);
    v103[0] = *(_OWORD *)(v83 + 48);
    v103[1] = v84;
    uint64_t v104 = *(void *)(v83 + 80);
    uint64_t v85 = *(void *)(v82 + 8);
    long long v86 = *(_OWORD *)(v85 + 48);
    long long v87 = *(_OWORD *)(v85 + 64);
    uint64_t v102 = *(void *)(v85 + 80);
    v101[0] = v86;
    v101[1] = v87;
    __int16 v88 = *(_OWORD **)(*(void *)(a1 + 104) + 8);
    long long v89 = v88[3];
    long long v90 = v88[4];
    long long v91 = v88[5];
    *(_OWORD *)&v100[12] = *(_OWORD *)((char *)v88 + 92);
    v99[1] = v90;
    *(_OWORD *)__int16 v100 = v91;
    v99[0] = v89;
    [v81 sendAnalyticsWeeklyEstimate:v107 strideCalInfo:v105 walkingWorkoutPaceStats:v103 runningWorkoutPaceStats:v101 userInfo:v99];
    [*(id *)(a1 + 48) completeActivity:*(void *)(a1 + 40) withNextEstimateTime:CFAbsoluteTimeGetCurrent() + (double)*(uint64_t *)(*(void *)(a1 + 48) + 176)];
    if (__p)
    {
      v143 = (double *)__p;
      operator delete(__p);
    }
  }
}

void sub_1003AF684(_Unwind_Exception *a1)
{
  double v2 = (void *)STACK[0x2B8];
  if (STACK[0x2B8])
  {
    STACK[0x2C0] = (unint64_t)v2;
    operator delete(v2);
  }
  _Unwind_Resume(a1);
}

void sub_1003AF968(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18)
{
  if (a18) {
    sub_1000DB0A0(a18);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003AFCF4(id a1, BOOL a2, NSError *a3)
{
  if (a2)
  {
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    int v3 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "saveObjects successfully pushed 6MWD update", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      double v4 = (uint8_t *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion writeToHealthKitPrediction:estimateTime:earliestTimeUsed:calibrationStatus:]_block_invoke", "%s\n");
LABEL_19:
      if (v4 != buf) {
        free(v4);
      }
    }
  }
  else
  {
    if (qword_102419200 != -1) {
      dispatch_once(&qword_102419200, &stru_1022AD450);
    }
    uint64_t v6 = qword_102419208;
    if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138543362;
      long long v8 = a3;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "saveObjects failed to insert a 6MWD sample, error, %{public}@", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      double v4 = (uint8_t *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "-[CLPredictedWalkDistanceServiceCompanion writeToHealthKitPrediction:estimateTime:earliestTimeUsed:calibrationStatus:]_block_invoke", "%s\n");
      goto LABEL_19;
    }
  }
}

uint64_t sub_1003B0548(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1 + 14;
  (*(void (**)(void *))(a1[14] + 16))(a1 + 14);
  (*(void (**)(void *, uint64_t, uint64_t))(*a1 + 120))(a1, a2, a3);
  return (*(uint64_t (**)(void *))(*v6 + 24))(v6);
}

void sub_1003B0614(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

id sub_1003B0CF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = [objc_msgSend(*(id *)(a1 + 32), "universe") silo];
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3221225472;
  v19[2] = sub_1003B0E7C;
  v19[3] = &unk_1022AD408;
  v19[4] = a4;
  v19[5] = a3;
  long long v8 = *(_OWORD *)(a1 + 264);
  long long v9 = *(_OWORD *)(a1 + 280);
  long long v33 = *(_OWORD *)(a1 + 248);
  long long v34 = v8;
  long long v35 = v9;
  long long v32 = *(_OWORD *)(a1 + 232);
  long long v28 = *(_OWORD *)(a1 + 168);
  long long v29 = *(_OWORD *)(a1 + 184);
  long long v30 = *(_OWORD *)(a1 + 200);
  long long v31 = *(_OWORD *)(a1 + 216);
  long long v24 = *(_OWORD *)(a1 + 104);
  long long v25 = *(_OWORD *)(a1 + 120);
  long long v26 = *(_OWORD *)(a1 + 136);
  long long v27 = *(_OWORD *)(a1 + 152);
  long long v20 = *(_OWORD *)(a1 + 40);
  long long v21 = *(_OWORD *)(a1 + 56);
  long long v22 = *(_OWORD *)(a1 + 72);
  long long v23 = *(_OWORD *)(a1 + 88);
  long long v10 = *(_OWORD *)(a1 + 344);
  long long v38 = *(_OWORD *)(a1 + 328);
  long long v39 = v10;
  long long v11 = *(_OWORD *)(a1 + 312);
  long long v36 = *(_OWORD *)(a1 + 296);
  long long v37 = v11;
  uint64_t v40 = *(void *)(a1 + 360);
  long long v12 = *(_OWORD *)(a1 + 384);
  long long v41 = *(_OWORD *)(a1 + 368);
  long long v42 = v12;
  uint64_t v13 = *(void *)(a1 + 400);
  uint64_t v14 = *(void *)(a1 + 440);
  long long v15 = *(_OWORD *)(a1 + 424);
  long long v44 = *(_OWORD *)(a1 + 408);
  long long v45 = v15;
  uint64_t v43 = v13;
  uint64_t v46 = v14;
  *(_OWORD *)((char *)v49 + 12) = *(_OWORD *)(a1 + 492);
  long long v16 = *(_OWORD *)(a1 + 480);
  long long v17 = *(_OWORD *)(a1 + 448);
  long long v48 = *(_OWORD *)(a1 + 464);
  v49[0] = v16;
  long long v47 = v17;
  v19[6] = *(void *)(a1 + 32);
  return [v7 async:v19];
}

void sub_1003B0E7C(int32x2_t *a1)
{
  __p = 0;
  uint64_t v46 = 0;
  long long v47 = 0;
  double v2 = (void *)a1[4];
  if (v2)
  {
    if ([v2 code] == (id)6)
    {
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      int v3 = qword_102419208;
      if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Prediction history query failed due to device lock", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        LOWORD(v49) = 0;
        double v4 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "-[CLPredictedWalkDistanceServiceCompanion sendAnalyticsWeeklyEstimate:strideCalInfo:walkingWorkoutPaceStats:runningWorkoutPaceStats:userInfo:]_block_invoke", "%s\n", v4);
LABEL_47:
        if (v4 != (char *)buf) {
          free(v4);
        }
      }
    }
    else
    {
      if (qword_102419200 != -1) {
        dispatch_once(&qword_102419200, &stru_1022AD450);
      }
      long long v31 = qword_102419208;
      if (os_log_type_enabled((os_log_t)qword_102419208, OS_LOG_TYPE_ERROR))
      {
        id v32 = [*(id *)&a1[4] code];
        *(_DWORD *)buf = 134349056;
        id v52 = v32;
        _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_ERROR, "Prediction history query encountered error,%{public}ld", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419200 != -1) {
          dispatch_once(&qword_102419200, &stru_1022AD450);
        }
        id v33 = [*(id *)&a1[4] code];
        int v49 = 134349056;
        id v50 = v33;
        double v4 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "-[CLPredictedWalkDistanceServiceCompanion sendAnalyticsWeeklyEstimate:strideCalInfo:walkingWorkoutPaceStats:runningWorkoutPaceStats:userInfo:]_block_invoke", "%s\n", v4);
        goto LABEL_47;
      }
    }
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    id v5 = (void *)a1[5];
    id v6 = [v5 countByEnumeratingWithState:&v41 objects:v48 count:16];
    if (v6)
    {
      uint64_t v7 = *(void *)v42;
      do
      {
        for (i = 0; i != v6; i = (char *)i + 1)
        {
          if (*(void *)v42 != v7) {
            objc_enumerationMutation(v5);
          }
          long long v9 = *(void **)(*((void *)&v41 + 1) + 8 * i);
          [objc_msgSend(v9, "quantity") doubleValueForUnit:[HKUnit unitFromString:@"m"]];
          uint64_t v11 = v10;
          [objc_msgSend(v9, "startDate") timeIntervalSinceReferenceDate];
          uint64_t v13 = v12;
          [objc_msgSend(v9, "endDate") timeIntervalSinceReferenceDate];
          uint64_t v15 = v14;
          long long v16 = v46;
          if (v46 >= v47)
          {
            uint64_t v18 = (char *)__p;
            unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((v46 - (unsigned char *)__p) >> 3);
            unint64_t v20 = v19 + 1;
            if (v19 + 1 > 0xAAAAAAAAAAAAAAALL) {
              sub_1001D7FD4();
            }
            if (0x5555555555555556 * ((v47 - (unsigned char *)__p) >> 3) > v20) {
              unint64_t v20 = 0x5555555555555556 * ((v47 - (unsigned char *)__p) >> 3);
            }
            if (0xAAAAAAAAAAAAAAABLL * ((v47 - (unsigned char *)__p) >> 3) >= 0x555555555555555) {
              unint64_t v21 = 0xAAAAAAAAAAAAAAALL;
            }
            else {
              unint64_t v21 = v20;
            }
            if (v21)
            {
              long long v22 = (char *)sub_1000DA5D8((uint64_t)&v47, v21);
              uint64_t v18 = (char *)__p;
              long long v16 = v46;
            }
            else
            {
              long long v22 = 0;
            }
            long long v23 = &v22[24 * v19];
            *(void *)long long v23 = v13;
            *((void *)v23 + 1) = v15;
            *((void *)v23 + 2) = v11;
            long long v24 = v23;
            if (v16 != v18)
            {
              do
              {
                long long v25 = *(_OWORD *)(v16 - 24);
                *((void *)v24 - 1) = *((void *)v16 - 1);
                *(_OWORD *)(v24 - 24) = v25;
                v24 -= 24;
                v16 -= 24;
              }
              while (v16 != v18);
              uint64_t v18 = (char *)__p;
            }
            long long v17 = v23 + 24;
            __p = v24;
            uint64_t v46 = v23 + 24;
            long long v47 = &v22[24 * v21];
            if (v18) {
              operator delete(v18);
            }
          }
          else
          {
            *(void *)uint64_t v46 = v13;
            *((void *)v16 + 1) = v14;
            long long v17 = v16 + 24;
            *((void *)v16 + 2) = v11;
          }
          uint64_t v46 = v17;
        }
        id v6 = [v5 countByEnumeratingWithState:&v41 objects:v48 count:16];
      }
      while (v6);
    }
    long long v26 = (char *)__p;
    long long v27 = v46;
    if ((__p == v46 || *((double *)v46 - 3) != *(double *)&a1[7]) && a1[9].i32[0] == 1)
    {
      int32x2_t v28 = a1[7];
      int32x2_t v29 = a1[15];
      if (v46 >= v47)
      {
        unint64_t v34 = 0xAAAAAAAAAAAAAAABLL * ((v46 - (unsigned char *)__p) >> 3);
        unint64_t v35 = v34 + 1;
        if (v34 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_1001D7FD4();
        }
        if (0x5555555555555556 * ((v47 - (unsigned char *)__p) >> 3) > v35) {
          unint64_t v35 = 0x5555555555555556 * ((v47 - (unsigned char *)__p) >> 3);
        }
        if (0xAAAAAAAAAAAAAAABLL * ((v47 - (unsigned char *)__p) >> 3) >= 0x555555555555555) {
          unint64_t v36 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v36 = v35;
        }
        if (v36)
        {
          long long v37 = (char *)sub_1000DA5D8((uint64_t)&v47, v36);
          long long v26 = (char *)__p;
          long long v27 = v46;
        }
        else
        {
          long long v37 = 0;
        }
        long long v38 = (int32x2_t *)&v37[24 * v34];
        long long v39 = &v37[24 * v36];
        *long long v38 = v28;
        v38[1] = v28;
        v38[2] = v29;
        long long v30 = (char *)&v38[3];
        if (v27 != v26)
        {
          do
          {
            long long v40 = *(_OWORD *)(v27 - 24);
            v38[-1] = *(int32x2_t *)(v27 - 8);
            *(_OWORD *)v38[-3].i8 = v40;
            v38 -= 3;
            v27 -= 24;
          }
          while (v27 != v26);
          long long v26 = (char *)__p;
        }
        __p = v38;
        uint64_t v46 = v30;
        long long v47 = v39;
        if (v26) {
          operator delete(v26);
        }
      }
      else
      {
        *(int32x2_t *)uint64_t v46 = v28;
        *((int32x2_t *)v27 + 1) = v28;
        long long v30 = v27 + 24;
        *((int32x2_t *)v27 + 2) = v29;
      }
      uint64_t v46 = v30;
    }
  }
  sub_10061A850((uint64_t)&a1[7], &a1[39], (uint64_t **)&__p, (uint64_t)&a1[48], (uint64_t)&a1[53], a1 + 58, (uint64_t)buf);
  [*(id *)&a1[6] sendToCoreAnalyticsWeeklyEstimate:buf];
  if (__p)
  {
    uint64_t v46 = (char *)__p;
    operator delete(__p);
  }
}

void sub_1003B14D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003B1774(_Unwind_Exception *a1)
{
}

void *sub_1003B17B4(void *a1, const void *a2, unint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    sub_10017C6FC(a1, a3);
    id v6 = (char *)a1[1];
    memmove(v6, a2, 4 * a3);
    a1[1] = &v6[4 * a3];
  }
  return a1;
}

void sub_1003B181C(_Unwind_Exception *exception_object)
{
  int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B1838(uint64_t a1)
{
  double v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

NSDictionary *sub_1003B186C(uint64_t a1)
{
  v39[0] = @"weeklyEstimateStatus";
  v40[0] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 8)];
  v39[1] = @"numBouts";
  v40[1] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 12)];
  v39[2] = @"numBoutsTimeWStepsGreater300";
  v40[2] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 16)];
  v39[3] = @"numBoutsTimeWStepsGreater330";
  v40[3] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 20)];
  v39[4] = @"pRaw";
  LODWORD(v2) = *(_DWORD *)(*(void *)(a1 + 32) + 24);
  v40[4] = +[NSNumber numberWithFloat:v2];
  v39[5] = @"pSpeed";
  LODWORD(v3) = *(_DWORD *)(*(void *)(a1 + 32) + 28);
  v40[5] = +[NSNumber numberWithFloat:v3];
  v39[6] = @"pActivity";
  LODWORD(v4) = *(_DWORD *)(*(void *)(a1 + 32) + 32);
  v40[6] = +[NSNumber numberWithFloat:v4];
  v39[7] = @"pDistance";
  LODWORD(v5) = *(_DWORD *)(*(void *)(a1 + 32) + 36);
  v40[7] = +[NSNumber numberWithFloat:v5];
  v39[8] = @"userGender";
  v40[8] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 40)];
  v39[9] = @"userAge_bin";
  float v6 = *(float *)(*(void *)(a1 + 32) + 44);
  unint64_t v35 = 0;
  uint64_t v36 = 0;
  unint64_t v34 = 0;
  sub_10010F834(&v34, (const void *)qword_10247A8C8, *(uint64_t *)algn_10247A8D0, (*(void *)algn_10247A8D0 - qword_10247A8C8) >> 2);
  sub_1003B1E08((uint64_t)&v34, v37, v6);
  if (v38 >= 0) {
    uint64_t v7 = v37;
  }
  else {
    uint64_t v7 = (void **)v37[0];
  }
  v40[9] = +[NSString stringWithUTF8String:v7];
  v39[10] = @"userHeight_bin";
  float v8 = *(float *)(*(void *)(a1 + 32) + 52);
  long long v30 = 0;
  uint64_t v31 = 0;
  int32x2_t v29 = 0;
  sub_10010F834(&v29, (const void *)qword_10247A8E8, *(uint64_t *)algn_10247A8F0, (*(void *)algn_10247A8F0 - qword_10247A8E8) >> 2);
  sub_1003B1E08((uint64_t)&v29, v32, v8);
  if (v33 >= 0) {
    long long v9 = v32;
  }
  else {
    long long v9 = (void **)v32[0];
  }
  v40[10] = +[NSString stringWithUTF8String:v9];
  v39[11] = @"userWeight_bin";
  float v10 = *(float *)(*(void *)(a1 + 32) + 48);
  long long v25 = 0;
  uint64_t v26 = 0;
  long long v24 = 0;
  sub_10010F834(&v24, (const void *)qword_10247A908, *(uint64_t *)algn_10247A910, (*(void *)algn_10247A910 - qword_10247A908) >> 2);
  sub_1003B1E08((uint64_t)&v24, __p, v10);
  if (v28 >= 0) {
    uint64_t v11 = __p;
  }
  else {
    uint64_t v11 = (void **)__p[0];
  }
  v40[11] = +[NSString stringWithUTF8String:v11];
  v39[12] = @"numWatchPedometerGPSCalibrations";
  v40[12] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 56)];
  v39[13] = @"numWalkingSpeedCalibrations";
  v40[13] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 60)];
  v39[14] = @"userStdDevEstimate";
  LODWORD(v12) = *(_DWORD *)(*(void *)(a1 + 32) + 64);
  v40[14] = +[NSNumber numberWithFloat:v12];
  v39[15] = @"userRatioMeanSignedVarMeanAbsVar";
  LODWORD(v13) = *(_DWORD *)(*(void *)(a1 + 32) + 68);
  v40[15] = +[NSNumber numberWithFloat:v13];
  v39[16] = @"percentLast13WeeksWithEstimate";
  LODWORD(v14) = *(_DWORD *)(*(void *)(a1 + 32) + 72);
  v40[16] = +[NSNumber numberWithFloat:v14];
  v39[17] = @"slopeLast13Weeks";
  LODWORD(v15) = *(_DWORD *)(*(void *)(a1 + 32) + 76);
  v40[17] = +[NSNumber numberWithFloat:v15];
  v39[18] = @"timeSinceFirstAvailable";
  LODWORD(v16) = *(_DWORD *)(*(void *)(a1 + 32) + 80);
  v40[18] = +[NSNumber numberWithFloat:v16];
  v39[19] = @"numDaysWithSufficientWearTime";
  v40[19] = +[NSNumber numberWithInt:*(unsigned int *)(*(void *)(a1 + 32) + 84)];
  v39[20] = @"avgStepsPerDayLast4Weeks";
  LODWORD(v17) = *(_DWORD *)(*(void *)(a1 + 32) + 88);
  v40[20] = +[NSNumber numberWithFloat:v17];
  v39[21] = @"avgFlightsPerDayLast4Weeks";
  LODWORD(v18) = *(_DWORD *)(*(void *)(a1 + 32) + 92);
  v40[21] = +[NSNumber numberWithFloat:v18];
  v39[22] = @"numWalkingWorkoutsLast4Weeks";
  LODWORD(v19) = *(_DWORD *)(*(void *)(a1 + 32) + 96);
  v40[22] = +[NSNumber numberWithFloat:v19];
  v39[23] = @"avgPaceWalkingWorkoutsLast4Weeks";
  LODWORD(v20) = *(_DWORD *)(*(void *)(a1 + 32) + 100);
  v40[23] = +[NSNumber numberWithFloat:v20];
  v39[24] = @"avgPaceRunningWorkoutsLast4Weeks";
  LODWORD(v21) = *(_DWORD *)(*(void *)(a1 + 32) + 104);
  v40[24] = +[NSNumber numberWithFloat:v21];
  long long v22 = +[NSDictionary dictionaryWithObjects:v40 forKeys:v39 count:25];
  if (v28 < 0) {
    operator delete(__p[0]);
  }
  if (v24)
  {
    long long v25 = v24;
    operator delete(v24);
  }
  if (v33 < 0) {
    operator delete(v32[0]);
  }
  if (v29)
  {
    long long v30 = v29;
    operator delete(v29);
  }
  if (v38 < 0) {
    operator delete(v37[0]);
  }
  if (v34)
  {
    unint64_t v35 = v34;
    operator delete(v34);
  }
  return v22;
}

void sub_1003B1D64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,int a33,__int16 a34,char a35,char a36)
{
  if (__p) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a19) {
    operator delete(a19);
  }
  if (a36 < 0) {
    operator delete(a31);
  }
  if (a28) {
    operator delete(a28);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003B1E08(uint64_t a1@<X0>, void *a2@<X8>, float a3@<S0>)
{
  char v33 = 0;
  unint64_t v34 = 0;
  uint64_t v35 = 0;
  sub_10010F834(&v33, *(const void **)a1, *(void *)(a1 + 8), (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 2);
  uint64_t v6 = (char *)v34 - (char *)v33;
  if (v34 == v33)
  {
    if (!v34)
    {
      long long v9 = *(float **)a1;
      if (*(void *)(a1 + 8) != *(void *)a1) {
        goto LABEL_30;
      }
LABEL_36:
      sub_100134750(a2, "(--inf,inf)");
      return;
    }
    LODWORD(v7) = 0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = v6 >> 2;
    if ((unint64_t)(v6 >> 2) <= 1) {
      uint64_t v8 = 1;
    }
    while (v33[v7] < a3)
    {
      if (v8 == ++v7)
      {
        LODWORD(v7) = v8;
        break;
      }
    }
  }
  unint64_t v34 = v33;
  operator delete(v33);
  long long v9 = *(float **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10 == *(void *)a1) {
    goto LABEL_36;
  }
  if (!v7)
  {
LABEL_30:
    std::to_string(&v31, *v9);
    long long v25 = std::string::insert(&v31, 0, "(--inf,");
    long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    double v13 = std::string::append(&v32, "]");
LABEL_31:
    long long v27 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    a2[2] = *((void *)&v13->__r_.__value_.__l + 2);
    *(_OWORD *)a2 = v27;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v32.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0)
    {
      long long v24 = (void *)v31.__r_.__value_.__r.__words[0];
      goto LABEL_35;
    }
    return;
  }
  if ((v10 - *(void *)a1) >> 2 == (int)v7)
  {
    std::to_string(&v31, *(float *)(v10 - 4));
    uint64_t v11 = std::string::insert(&v31, 0, "(");
    long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    double v13 = std::string::append(&v32, ",inf)");
    goto LABEL_31;
  }
  std::to_string(&v29, v9[(int)v7 - 1]);
  double v14 = std::string::insert(&v29, 0, "(");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v30.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  double v16 = std::string::append(&v30, ",");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&__p, *(float *)(*(void *)a1 + 4 * (int)v7));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  double v20 = std::string::append(&v31, (const std::string::value_type *)p_p, size);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  long long v22 = std::string::append(&v32, "]");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  a2[2] = *((void *)&v22->__r_.__value_.__l + 2);
  *(_OWORD *)a2 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v32.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v31.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v30.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
  {
    long long v24 = (void *)v29.__r_.__value_.__r.__words[0];
LABEL_35:
    operator delete(v24);
  }
}

void sub_1003B20E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 73) < 0) {
    operator delete(*(void **)(v33 - 96));
  }
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003B2320(id a1)
{
  qword_102419208 = (uint64_t)os_log_create("com.apple.locationd.Motion", "PredictedWalkDistance");
}

void *sub_1003B2350(void *result)
{
  if (result[2])
  {
    uint64_t v1 = result;
    __n128 result = (void *)result[1];
    uint64_t v2 = *v1;
    uint64_t v3 = *result;
    *(void *)(v3 + 8) = *(void *)(*v1 + 8);
    **(void **)(v2 + 8) = v3;
    v1[2] = 0;
    if (result != v1)
    {
      do
      {
        double v4 = (void *)result[1];
        operator delete(result);
        __n128 result = v4;
      }
      while (v4 != v1);
    }
  }
  return result;
}

void *sub_1003B23B4@<X0>(unsigned __int8 *a1@<X1>, void *a2@<X8>)
{
  double v4 = operator new(0x228uLL);
  __n128 result = sub_1003B2410(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1003B23FC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1003B2410(void *a1, unsigned __int8 *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1022AD480;
  sub_1003B251C((uint64_t)&v4, (uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_1003B246C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1003B2480(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022AD480;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1003B24A0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022AD480;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1003B24F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

void sub_1003B251C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v4 = *a3;
  sub_100134750(__p, "");
  sub_101190E88(a2, v4, __p);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1003B2578(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B2594(uint64_t a1, uint64_t *a2)
{
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_WORD *)(a1 + 40) = 1;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
    double v5 = *(std::__shared_weak_count **)(a1 + 32);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = v4;
    if (v5) {
      sub_1000DB0A0(v5);
    }
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = v3;
  }
  sub_1003B2630((void **)a1);
  return a1;
}

void sub_1003B260C(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  if (*v3) {
    sub_1000DB0A0(*v3);
  }
  sub_101A5DAEC(v1);
  _Unwind_Resume(a1);
}

void sub_1003B2630(void **a1)
{
  uint64_t v4 = a1[2];
  uint64_t v2 = (uint64_t)(a1 + 2);
  uint64_t v3 = v4;
  unint64_t v5 = *(void *)(v2 - 8);
  if (v5 >= (unint64_t)v4)
  {
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - (void)*a1) >> 3);
    unint64_t v8 = v7 + 1;
    if (v7 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_1001D7FD4();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((v3 - (unsigned char *)*a1) >> 3);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v8;
    }
    if (v10) {
      uint64_t v11 = (char *)sub_1000DA5D8(v2, v10);
    }
    else {
      uint64_t v11 = 0;
    }
    long long v12 = &v11[24 * v7];
    double v13 = &v11[24 * v10];
    *(void *)long long v12 = 0;
    *((void *)v12 + 1) = 0;
    v12[16] = 0;
    char v6 = v12 + 24;
    long long v15 = (char *)*a1;
    double v14 = (char *)a1[1];
    if (v14 != *a1)
    {
      do
      {
        long long v16 = *(_OWORD *)(v14 - 24);
        *(v12 - 8) = *(v14 - 8);
        *(_OWORD *)(v12 - 24) = v16;
        v12 -= 24;
        v14 -= 24;
      }
      while (v14 != v15);
      double v14 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v6;
    a1[2] = v13;
    if (v14) {
      operator delete(v14);
    }
  }
  else
  {
    *(void *)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    char v6 = (char *)(v5 + 24);
    *(unsigned char *)(v5 + 16) = 0;
  }
  a1[1] = v6;
}

uint64_t sub_1003B273C(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1003B278C(result);
    operator delete();
  }
  return result;
}

uint64_t sub_1003B278C(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    sub_1000DB0A0(v2);
  }
  uint64_t v3 = *(void **)a1;
  if (*(void *)a1)
  {
    *(void *)(a1 + 8) = v3;
    operator delete(v3);
  }
  return a1;
}

void *sub_1003B27CC@<X0>(unsigned __int8 *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x240uLL);
  uint64_t result = sub_1003B2828(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1003B2814(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1003B2828(void *a1, unsigned __int8 *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1022AD4D0;
  sub_100E7E284(a1 + 3, *a2);
  return a1;
}

void sub_1003B2874(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1003B2888(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022AD4D0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1003B28A8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022AD4D0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1003B28FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

void *sub_1003B2924@<X0>(unsigned __int8 *a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x1D8uLL);
  uint64_t result = sub_1003B2980(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_1003B296C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1003B2980(void *a1, unsigned __int8 *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = off_1022AD520;
  sub_1003B2A8C((uint64_t)&v4, (uint64_t)(a1 + 3), a2);
  return a1;
}

void sub_1003B29DC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_1003B29F0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1022AD520;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1003B2A10(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1022AD520;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1003B2A64(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 16))();
}

void sub_1003B2A8C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v4 = *a3;
  sub_100134750(__p, "");
  sub_1009E4890(a2, v4, __p, 0);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1003B2AEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003B2B08(id a1)
{
  qword_102419638 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_1003B2B38(uint64_t a1, double **a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  double v4 = (*a2)[1];
  double v5 = *(float *)(a1 + 136);
  if (v4 <= v5) {
    double v4 = *(float *)(a1 + 136);
  }
  char v6 = v3 + 3;
  if (v3 + 3 == v2)
  {
    uint64_t v7 = 0;
  }
  else
  {
    LODWORD(v7) = 0;
    double v8 = *v3;
    do
    {
      double v9 = *v6;
      double v10 = v6[1];
      v6 += 3;
      uint64_t v7 = (v7 + (int)((v9 - v8) / v4));
      if (v10 <= v5) {
        double v4 = *(float *)(a1 + 136);
      }
      else {
        double v4 = v10;
      }
      double v8 = v9;
    }
    while (v6 != v2);
  }
  if (v4 != 1.79769313e308)
  {
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022AD580);
    }
    uint64_t v11 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "#Warning No expiration rule was added so the number of records will be unbounded.", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022AD580);
      }
      double v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "int CLActivityRecorderDb<CLPredictedWalkDistanceBoutEntry, CLActivityDB::ClassBDataProtectionPolicy>::estimateRecordsNeeded(const CLAggregationRules &) [T = CLPredictedWalkDistanceBoutEntry, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
  }
  return v7;
}

void sub_1003B2D38(id a1)
{
  qword_102418FD8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

void *sub_1003B2D68(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    char v6 = result;
    uint64_t result = sub_1003B2DE4(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1003B2DC8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1003B2DE4(void *a1, unint64_t a2)
{
  if (a2 >= 0x222222222222223) {
    sub_1001D7FD4();
  }
  uint64_t result = (char *)sub_10029BE4C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[120 * v4];
  return result;
}

void *sub_1003B2E38(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    char v6 = result;
    uint64_t result = sub_1000DA584(result, a4);
    uint64_t v7 = v6[1];
    uint64_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8 - 3);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1003B2E98(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B2EB4()
{
  sub_100134750(qword_10247A890, "VO2MaxPowerBudgetEstimatorLastExtendedBudgetAllotmentReason");

  return __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247A890, (void *)&_mh_execute_header);
}

uint64_t sub_1003B2F14(uint64_t a1, unsigned int a2, char a3)
{
  *(unsigned char *)a1 = a2;
  *(_DWORD *)(a1 + 4) = 1092616192;
  *(void *)(a1 + 8) = 0x3FD3333340000000;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 17) = a3;
  *(void *)(a1 + 24) = off_1022AD070;
  *(void *)(a1 + 32) = 0;
  uint64_t v4 = (void *)(a1 + 40);
  *(void *)(a1 + 40) = off_1022AD0A0;
  double v5 = (void *)(a1 + 112);
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(void *)(a1 + 112) = off_1022AD0A0;
  double v19 = (void *)(a1 + 184);
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(void *)(a1 + 184) = off_1022AD0A0;
  uint64_t v6 = a1 + 256;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(void *)(a1 + 256) = off_1022AD070;
  *(void *)(a1 + 264) = 0;
  uint64_t v7 = (void *)(a1 + 272);
  *(void *)(a1 + 272) = off_1022AD0A0;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(void *)(a1 + 344) = off_1022AD0A0;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(void *)(a1 + 416) = off_1022AD0A0;
  *(_OWORD *)(v6 + 168) = 0u;
  *(_OWORD *)(v6 + 184) = 0u;
  *(_OWORD *)(v6 + 200) = 0u;
  *(_OWORD *)(v6 + 216) = 0u;
  *(void *)(a1 + 488) = off_1022AD070;
  *(void *)(a1 + 496) = 0;
  *(void *)(a1 + 504) = off_1022AD0A0;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 528) = 0u;
  *(void *)(a1 + 576) = off_1022AD0A0;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_OWORD *)(a1 + 632) = 0u;
  *(_OWORD *)(a1 + 584) = 0u;
  *(_OWORD *)(a1 + 600) = 0u;
  *(void *)(a1 + 648) = off_1022AD0A0;
  *(_OWORD *)(a1 + 688) = 0u;
  *(_OWORD *)(a1 + 704) = 0u;
  *(_OWORD *)(a1 + 656) = 0u;
  *(_OWORD *)(a1 + 672) = 0u;
  *(void *)(a1 + 720) = off_1022AD070;
  *(void *)(a1 + 728) = 0;
  *(void *)(a1 + 736) = off_1022AD0A0;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 760) = 0u;
  *(_OWORD *)(a1 + 744) = 0u;
  *(void *)(a1 + 808) = off_1022AD0A0;
  *(_OWORD *)(a1 + 848) = 0u;
  *(_OWORD *)(a1 + 864) = 0u;
  *(_OWORD *)(a1 + 816) = 0u;
  *(_OWORD *)(a1 + 832) = 0u;
  *(void *)(a1 + 880) = off_1022AD0A0;
  *(_OWORD *)(a1 + 949) = 0u;
  *(_OWORD *)(a1 + 936) = 0u;
  *(_OWORD *)(a1 + 920) = 0u;
  *(_OWORD *)(a1 + 904) = 0u;
  *(_OWORD *)(a1 + 888) = 0u;
  *(unsigned char *)(a1 + 965) = 1;
  *(void *)(a1 + 968) = 0xBFF0000000000000;
  *(void *)(a1 + 976) = 0x3EE6666600000000;
  *(_DWORD *)(a1 + 984) = 7;
  *(void *)(a1 + 992) = 0xBFF0000000000000;
  *(void *)(a1 + 1000) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 1008) = _Q0;
  *(void *)(a1 + 1024) = 0x3D23D70A3C23D70ALL;
  *(_DWORD *)(a1 + 1032) = 0;
  *(unsigned char *)(a1 + 1036) = 0;
  *(_DWORD *)(a1 + 1040) = 0;
  if (a2 >= 2)
  {
    *(_DWORD *)(a1 + 4) = 1103626240;
    *(void *)(a1 + 8) = 0x3FC99999A0000000;
    *(unsigned char *)(a1 + 16) = 1;
    *(void *)(a1 + 264) = 5;
    *(void *)(a1 + 280) = 5;
    sub_1003A7544(v7);
    *(void *)(a1 + 352) = 5;
    sub_1003A7544((void *)(a1 + 344));
    *(void *)(a1 + 424) = 5;
    sub_1003A7544((void *)(a1 + 416));
    *(void *)(a1 + 496) = 3;
    *(void *)(a1 + 512) = 3;
    sub_1003A7544((void *)(a1 + 504));
    *(void *)(a1 + 584) = 3;
    sub_1003A7544((void *)(a1 + 576));
    *(void *)(a1 + 656) = 3;
    sub_1003A7544((void *)(a1 + 648));
    *(void *)(a1 + 728) = 5;
    *(void *)(a1 + 744) = 5;
    sub_1003A7544((void *)(a1 + 736));
    *(void *)(a1 + 816) = 5;
    sub_1003A7544((void *)(a1 + 808));
    *(void *)(a1 + 888) = 5;
    sub_1003A7544((void *)(a1 + 880));
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    double v13 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134219008;
      uint64_t v21 = 0x4034000000000000;
      __int16 v22 = 1024;
      int v23 = 5;
      __int16 v24 = 1024;
      int v25 = 3;
      __int16 v26 = 1024;
      int v27 = 5;
      __int16 v28 = 1024;
      int v29 = 3;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "gyroFrequency,%.3f,gyroBufferSize,%d,gyroMeanBufferSize,%d,zRotBufferSize,%d,minRequiredZrots,%d", buf, 0x24u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      double v18 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLOrientationDetector::CLOrientationDetector(FormFactor, BOOL)", "%s\n", v18);
      if (v18 != (char *)buf) {
        free(v18);
      }
    }
    *(float *)(a1 + 1024) = *(float *)(a1 + 1024) * 0.8;
    *(_DWORD *)(a1 + 1028) = 1023745720;
  }
  signed int v14 = llround(*(double *)(a1 + 8) * *(float *)(a1 + 4));
  *(void *)(a1 + 32) = v14;
  *(void *)(a1 + 48) = v14;
  sub_1003A7544(v4);
  *(void *)(a1 + 120) = v14;
  sub_1003A7544(v5);
  *(void *)(a1 + 192) = v14;
  sub_1003A7544(v19);
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD5A0);
  }
  long long v15 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 67109120;
    LODWORD(v21) = v14;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "accelBufferSize,%d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    long long v17 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLOrientationDetector::CLOrientationDetector(FormFactor, BOOL)", "%s\n", v17);
    if (v17 != (char *)buf) {
      free(v17);
    }
  }
  return a1;
}

void sub_1003B36A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, void *a17)
{
  sub_1003A73E8(v17);
  sub_1003A73E8(a15);
  sub_1003A73E8(a16);
  sub_1003A73E8(a17);
  _Unwind_Resume(a1);
}

void sub_1003B36DC(uint64_t a1, float *a2, void *a3)
{
  double v6 = *(double *)(a1 + 1008);
  if (v6 < 0.0 || *(double *)a3 >= v6 && *(double *)a3 - v6 <= 2.0 / *(float *)(a1 + 4))
  {
    sub_1001A44F4(a1 + 40, a2);
    sub_1001A44F4(a1 + 112, a2 + 1);
    sub_1001A44F4(a1 + 184, a2 + 2);
    *(void *)(a1 + 1008) = *a3;
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    uint64_t v7 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
    {
      double v8 = *a2;
      double v9 = a2[1];
      double v10 = a2[2];
      uint64_t v11 = *a3;
      *(_DWORD *)buf = 134218752;
      double v17 = v8;
      __int16 v18 = 2048;
      double v19 = v9;
      __int16 v20 = 2048;
      double v21 = v10;
      __int16 v22 = 2048;
      uint64_t v23 = v11;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "accel, %.3f, %.3f, %.3f, timestamp, %.20f", buf, 0x2Au);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      signed int v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::addAccSample(const CLMotionTypeAcceleration &, const CFAbsoluteTime &)", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
    if (*(unsigned char *)(a1 + 965)) {
      *(void *)(a1 + 968) = *a3;
    }
  }
  else
  {
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    long long v12 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEFAULT))
    {
      double v13 = *(double *)a3 - *(double *)(a1 + 1008);
      *(_DWORD *)buf = 134349056;
      double v17 = v13;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Accelerometer samples data gap or out of order! deltaInterval=%{public}.4f", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      long long v15 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::addAccSample(const CLMotionTypeAcceleration &, const CFAbsoluteTime &)", "%s\n", v15);
      if (v15 != (char *)buf) {
        free(v15);
      }
    }
    sub_1003A7544((void *)(a1 + 40));
    sub_1003A7544((void *)(a1 + 112));
    sub_1003A7544((void *)(a1 + 184));
    *(void *)(a1 + 1008) = 0xBFF0000000000000;
  }
}

void sub_1003B3AFC(uint64_t a1, float *a2, double *a3)
{
  if (*(unsigned char *)(a1 + 16))
  {
    double v6 = *(double *)(a1 + 1016);
    if (v6 >= 0.0)
    {
      double v7 = *a3 - v6;
      if (v7 < 0.0 || v7 * 20.0 > 2.5)
      {
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD5A0);
        }
        double v9 = qword_102419048;
        if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEFAULT))
        {
          double v10 = *a3 - *(double *)(a1 + 1016);
          *(_DWORD *)buf = 134349056;
          double v57 = v10;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Gyro samples data gap or out of order! deltaInterval=%{public}.4f", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419040 != -1) {
            dispatch_once(&qword_102419040, &stru_1022AD5A0);
          }
          double v32 = *a3 - *(double *)(a1 + 1016);
          int v38 = 134349056;
          double v39 = v32;
          uint64_t v33 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::addGyroSample(const CLMotionTypeRotationRate &, const CFAbsoluteTime &)", "%s\n", v33);
          if (v33 != (char *)buf) {
            free(v33);
          }
        }
        if (fabs(v7) * 20.0 > 4.0)
        {
          sub_1003A7544((void *)(a1 + 272));
          sub_1003A7544((void *)(a1 + 344));
          sub_1003A7544((void *)(a1 + 416));
          double v11 = -1.0;
LABEL_29:
          *(double *)(a1 + 1016) = v11;
          return;
        }
        if (v7 < 0.0) {
          return;
        }
      }
      sub_1001A44F4(a1 + 272, a2);
      sub_1001A44F4(a1 + 344, a2 + 1);
      sub_1001A44F4(a1 + 416, a2 + 2);
      unint64_t v12 = *(void *)(a1 + 336);
      float v13 = 0.0;
      float v14 = 0.0;
      if (v12) {
        float v14 = *(float *)(a1 + 288) / (float)v12;
      }
      unint64_t v15 = *(void *)(a1 + 408);
      if (v15) {
        float v13 = *(float *)(a1 + 360) / (float)v15;
      }
      unint64_t v16 = *(void *)(a1 + 480);
      if (v16) {
        float v17 = *(float *)(a1 + 432) / (float)v16;
      }
      else {
        float v17 = 0.0;
      }
      unint64_t v34 = off_1022AD5D0;
      float v35 = v14;
      float v36 = v13;
      float v37 = v17;
      sub_1001A44F4(a1 + 504, &v35);
      sub_1001A44F4(a1 + 576, &v36);
      sub_1001A44F4(a1 + 648, &v37);
      sub_1003B410C(a1, (uint64_t)a2, (uint64_t)&v34);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      __int16 v18 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
      {
        double v19 = *a2;
        double v20 = a2[1];
        double v21 = a2[2];
        int v22 = *(_DWORD *)(a1 + 1004);
        int v23 = *(unsigned __int8 *)(a1 + 960);
        double v24 = *a3;
        *(_DWORD *)buf = 134220032;
        double v57 = v19;
        __int16 v58 = 2048;
        double v59 = v20;
        __int16 v60 = 2048;
        double v61 = v21;
        __int16 v62 = 2048;
        double v63 = v35;
        __int16 v64 = 2048;
        double v65 = v36;
        __int16 v66 = 2048;
        double v67 = v37;
        __int16 v68 = 1024;
        int v69 = v22;
        __int16 v70 = 1024;
        int v71 = v23;
        __int16 v72 = 2048;
        double v73 = v24;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "gyro, %.3f, %.3f, %.3f, gyroMean, %.3f, %.3f, %.3f, fLastDetection,%d,fStartZrot,%d, timestamp, %.10f", buf, 0x54u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD5A0);
        }
        double v25 = *a2;
        double v26 = a2[1];
        double v27 = a2[2];
        int v28 = *(_DWORD *)(a1 + 1004);
        int v29 = *(unsigned __int8 *)(a1 + 960);
        double v30 = *a3;
        int v38 = 134220032;
        double v39 = v25;
        __int16 v40 = 2048;
        double v41 = v26;
        __int16 v42 = 2048;
        double v43 = v27;
        __int16 v44 = 2048;
        double v45 = v35;
        __int16 v46 = 2048;
        double v47 = v36;
        __int16 v48 = 2048;
        double v49 = v37;
        __int16 v50 = 1024;
        int v51 = v28;
        __int16 v52 = 1024;
        int v53 = v29;
        __int16 v54 = 2048;
        double v55 = v30;
        std::string v31 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::addGyroSample(const CLMotionTypeRotationRate &, const CFAbsoluteTime &)", "%s\n", v31);
        if (v31 != (char *)buf) {
          free(v31);
        }
      }
    }
    else
    {
      sub_1001A44F4(a1 + 272, a2);
      sub_1001A44F4(a1 + 344, a2 + 1);
      sub_1001A44F4(a1 + 416, a2 + 2);
    }
    sub_1003B4900(a1);
    double v11 = *a3;
    goto LABEL_29;
  }
}

uint64_t sub_1003B4098@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = *(void *)(result + 80);
  float v3 = 0.0;
  float v4 = 0.0;
  if (v2) {
    float v4 = *(float *)(result + 32) / (float)v2;
  }
  unint64_t v5 = *(void *)(result + 152);
  if (v5) {
    float v3 = *(float *)(result + 104) / (float)v5;
  }
  unint64_t v6 = *(void *)(result + 224);
  if (v6) {
    float v7 = *(float *)(result + 176) / (float)v6;
  }
  else {
    float v7 = 0.0;
  }
  *(void *)a2 = off_1022AD5D0;
  *(float *)(a2 + 8) = v4;
  *(float *)(a2 + 12) = v3;
  *(float *)(a2 + 16) = v7;
  return result;
}

void sub_1003B410C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)(a1 + 960);
  if (!*(unsigned char *)(a1 + 960) && !*(_DWORD *)(a1 + 1004)) {
    return;
  }
  float v7 = *(float *)(a3 + 16);
  unint64_t v6 = (float *)(a3 + 16);
  float v8 = v7;
  float v9 = fabsf(*(v6 - 2));
  float v10 = fabsf(*(v6 - 1));
  if (v9 < v10) {
    float v9 = v10;
  }
  float v82 = v9;
  float v11 = fabsf(v8);
  if (v5)
  {
    *(float *)buf = v11 - v9;
    sub_1001A44F4(a1 + 736, v6);
    sub_1001A44F4(a1 + 808, (float *)buf);
    sub_1001A44F4(a1 + 880, &v82);
    if (!*(unsigned char *)(a1 + 960)) {
      return;
    }
  }
  else
  {
    float v55 = *(float *)(a2 + 8);
    float v56 = fabsf((float)(v8 + v55) * 0.5);
    if (v9 >= 90.0 || v56 <= (float)((float)(v9 + 30.0) * 1.25)) {
      return;
    }
    float v58 = fabsf(v55);
    if (v11 <= 45.0 && v58 <= 75.0) {
      return;
    }
    *(float *)buf = v11 - v9;
    sub_1001A44F4(a1 + 736, v6);
    sub_1001A44F4(a1 + 808, (float *)buf);
    sub_1001A44F4(a1 + 880, &v82);
    *(unsigned char *)(a1 + 960) = 1;
    *(void *)(a1 + 952) = (*(_DWORD *)(a1 + 952) + 1);
    *(_DWORD *)(a1 + 1032) = 0;
  }
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD5A0);
  }
  unint64_t v12 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
  {
    unint64_t v13 = *(void *)(a1 + 800);
    float v14 = 0.0;
    float v15 = 0.0;
    if (v13) {
      float v15 = *(float *)(a1 + 752) / (float)v13;
    }
    unint64_t v16 = *(void *)(a1 + 872);
    if (v16) {
      float v14 = *(float *)(a1 + 824) / (float)v16;
    }
    unint64_t v17 = *(void *)(a1 + 944);
    float v18 = 0.0;
    float v19 = 0.0;
    if (v17) {
      float v19 = *(float *)(a1 + 896) / (float)v17;
    }
    float v20 = *(float *)(a2 + 8);
    *(void *)uint64_t v83 = off_1022AD5D0;
    *(float *)&v83[8] = v15;
    *(float *)long long v84 = v14;
    *(float *)&v84[4] = v19;
    if (v13) {
      float v18 = *(float *)(a1 + 752) / (float)v13;
    }
    float v21 = 0.0;
    float v22 = 0.0;
    if (v16) {
      float v22 = *(float *)(a1 + 824) / (float)v16;
    }
    if (v17) {
      float v21 = *(float *)(a1 + 896) / (float)v17;
    }
    uint64_t v78 = off_1022AD5D0;
    float v79 = v18;
    float v80 = v22;
    float v81 = v21;
    float v23 = 0.0;
    float v24 = 0.0;
    if (v13) {
      float v24 = *(float *)(a1 + 752) / (float)v13;
    }
    if (v16) {
      float v23 = *(float *)(a1 + 824) / (float)v16;
    }
    float v25 = 0.0;
    float v26 = 0.0;
    if (v17) {
      float v26 = *(float *)(a1 + 896) / (float)v17;
    }
    double v74 = off_1022AD5D0;
    float v75 = v24;
    float v76 = v23;
    float v77 = v26;
    if (v13 >= 2)
    {
      float v27 = (float)((float)v13 * *(float *)(a1 + 756)) - (float)(*(float *)(a1 + 752) * *(float *)(a1 + 752));
      if (v27 >= 0.0) {
        float v25 = v27 / (float)((v13 - 1) * v13);
      }
    }
    float v28 = 0.0;
    float v29 = 0.0;
    if (v16 >= 2)
    {
      float v30 = (float)((float)v16 * *(float *)(a1 + 828)) - (float)(*(float *)(a1 + 824) * *(float *)(a1 + 824));
      float v29 = 0.0;
      if (v30 >= 0.0) {
        float v29 = v30 / (float)((v16 - 1) * v16);
      }
    }
    if (v17 >= 2)
    {
      float v31 = (float)((float)v17 * *(float *)(a1 + 900)) - (float)(*(float *)(a1 + 896) * *(float *)(a1 + 896));
      if (v31 >= 0.0) {
        float v28 = v31 / (float)((v17 - 1) * v17);
      }
    }
    __int16 v70 = off_1022AD5D0;
    float v71 = v25;
    float v72 = v29;
    float v73 = v28;
    float v32 = 0.0;
    float v33 = 0.0;
    if (v13 >= 2)
    {
      float v34 = (float)((float)v13 * *(float *)(a1 + 756)) - (float)(*(float *)(a1 + 752) * *(float *)(a1 + 752));
      float v33 = 0.0;
      if (v34 >= 0.0) {
        float v33 = v34 / (float)((v13 - 1) * v13);
      }
    }
    if (v16 >= 2)
    {
      float v35 = (float)((float)v16 * *(float *)(a1 + 828)) - (float)(*(float *)(a1 + 824) * *(float *)(a1 + 824));
      if (v35 >= 0.0) {
        float v32 = v35 / (float)((v16 - 1) * v16);
      }
    }
    float v36 = 0.0;
    float v37 = 0.0;
    if (v17 >= 2)
    {
      float v38 = (float)((float)v17 * *(float *)(a1 + 900)) - (float)(*(float *)(a1 + 896) * *(float *)(a1 + 896));
      float v37 = 0.0;
      if (v38 >= 0.0) {
        float v37 = v38 / (float)((v17 - 1) * v17);
      }
    }
    __int16 v66 = off_1022AD5D0;
    float v67 = v33;
    float v68 = v32;
    float v69 = v37;
    if (v13 >= 2)
    {
      float v39 = (float)((float)v13 * *(float *)(a1 + 756)) - (float)(*(float *)(a1 + 752) * *(float *)(a1 + 752));
      if (v39 >= 0.0) {
        float v36 = v39 / (float)((v13 - 1) * v13);
      }
    }
    float v40 = 0.0;
    float v41 = 0.0;
    if (v16 >= 2)
    {
      float v42 = (float)((float)v16 * *(float *)(a1 + 828)) - (float)(*(float *)(a1 + 824) * *(float *)(a1 + 824));
      float v41 = 0.0;
      if (v42 >= 0.0) {
        float v41 = v42 / (float)((v16 - 1) * v16);
      }
    }
    double v43 = v20;
    double v44 = v22;
    if (v17 >= 2)
    {
      float v45 = (float)((float)v17 * *(float *)(a1 + 900)) - (float)(*(float *)(a1 + 896) * *(float *)(a1 + 896));
      if (v45 >= 0.0) {
        float v40 = v45 / (float)((v17 - 1) * v17);
      }
    }
    __int16 v62 = off_1022AD5D0;
    float v63 = v36;
    float v64 = v41;
    float v65 = v40;
    *(float *)buf = 3.8529e-34;
    double v100 = v43;
    __int16 v101 = 2048;
    double v102 = (float)(v11 - v82);
    __int16 v103 = 2048;
    double v104 = v82;
    __int16 v105 = 2048;
    double v106 = v15;
    __int16 v107 = 2048;
    double v108 = v44;
    __int16 v109 = 2048;
    double v110 = v26;
    __int16 v111 = 2048;
    double v112 = v25;
    __int16 v113 = 2048;
    double v114 = v32;
    __int16 v115 = 2048;
    double v116 = v40;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "zRot (%.3f, %.3f, %.3f), mean(%.3f, %.3f, %.3f), var(%.3f, %.3f, %.3f)", buf, 0x5Cu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    float v46 = *(float *)(a2 + 8);
    uint64_t v47 = a1 + 720;
    float v48 = v82;
    sub_1003B4098(v47, (uint64_t)&v78);
    float v49 = v79;
    sub_1003B4098(v47, (uint64_t)&v74);
    float v50 = v76;
    sub_1003B4098(v47, (uint64_t)&v70);
    float v51 = v73;
    sub_1003B4FD4(v47, (uint64_t)&v66);
    float v52 = v67;
    sub_1003B4FD4(v47, (uint64_t)&v62);
    float v53 = v64;
    sub_1003B4FD4(v47, (uint64_t)v60);
    *(_DWORD *)uint64_t v83 = 134220032;
    *(double *)&v83[4] = v46;
    *(_WORD *)long long v84 = 2048;
    *(double *)&v84[2] = (float)(v11 - v48);
    __int16 v85 = 2048;
    double v86 = v48;
    __int16 v87 = 2048;
    double v88 = v49;
    __int16 v89 = 2048;
    double v90 = v50;
    __int16 v91 = 2048;
    double v92 = v51;
    __int16 v93 = 2048;
    double v94 = v52;
    __int16 v95 = 2048;
    double v96 = v53;
    __int16 v97 = 2048;
    double v98 = v61;
    __int16 v54 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::fillZRotBuffer(const CLMotionTypeRotationRate &, const CLVector3d<float> &)", "%s\n", v54);
    if (v54 != (char *)buf) {
      free(v54);
    }
  }
}

void sub_1003B4900(uint64_t a1)
{
  *(_WORD *)(a1 + 963) = 0;
  uint64_t v2 = *(void *)(a1 + 336);
  float v3 = 0.0;
  float v4 = 0.0;
  if (v2) {
    float v4 = *(float *)(*(void *)(*(void *)(a1 + 304)
  }
                              + (((unint64_t)(v2 + *(void *)(a1 + 328) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                  + 4 * ((v2 + *(void *)(a1 + 328) - 1) & 0x3FF));
  uint64_t v5 = *(void *)(a1 + 408);
  if (v5) {
    float v3 = *(float *)(*(void *)(*(void *)(a1 + 376)
  }
                              + (((unint64_t)(v5 + *(void *)(a1 + 400) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                  + 4 * ((v5 + *(void *)(a1 + 400) - 1) & 0x3FF));
  uint64_t v6 = *(void *)(a1 + 480);
  if (v6) {
    float v7 = *(float *)(*(void *)(*(void *)(a1 + 448)
  }
                              + (((unint64_t)(v6 + *(void *)(a1 + 472) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                  + 4 * ((v6 + *(void *)(a1 + 472) - 1) & 0x3FF));
  else {
    float v7 = 0.0;
  }
  float v36 = v4;
  float v37 = v3;
  float v38 = v7;
  if (!*(unsigned char *)(a1 + 960))
  {
LABEL_24:
    float v16 = fabsf(v4);
    float v17 = fabsf(v3);
    float v18 = fabsf(v7);
    if (v16 >= v17) {
      float v17 = v16;
    }
    if (v17 >= v18) {
      float v19 = v17;
    }
    else {
      float v19 = v18;
    }
    if (v19 > 60.0)
    {
      *(unsigned char *)(a1 + 964) = 1;
      if (v19 > 195.0)
      {
        int v20 = *(_DWORD *)(a1 + 976);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *(_DWORD *)(a1 + 976) = v22;
        }
      }
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      float v23 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 134217984;
        double v40 = v19;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "Rotating! Current max gyro rate %.3f", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD5A0);
        }
        *(_DWORD *)float v41 = 134217984;
        *(double *)&v41[4] = v19;
        float v24 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::checkForRotation()", "%s\n", v24);
LABEL_73:
        if (v24 != (char *)buf) {
          free(v24);
        }
        return;
      }
    }
    return;
  }
  unint64_t v8 = *(void *)(a1 + 104);
  float v9 = 0.0;
  float v10 = 0.0;
  if (v8) {
    float v10 = *(float *)(a1 + 56) / (float)v8;
  }
  unint64_t v11 = *(void *)(a1 + 176);
  if (v11) {
    float v9 = *(float *)(a1 + 128) / (float)v11;
  }
  unint64_t v12 = *(void *)(a1 + 248);
  if (v12) {
    float v13 = *(float *)(a1 + 200) / (float)v12;
  }
  else {
    float v13 = 0.0;
  }
  *(void *)float v41 = off_1022AD5D0;
  *(float *)&v41[8] = v10;
  float v42 = v9;
  float v43 = v13;
  float v14 = (float)((float)((float)(v9 * v9) + (float)(v10 * v10)) + (float)(v13 * v13)) + -1.0;
  if (fabsf(v14) < 0.3 && fabsf(v13) > 0.9)
  {
    sub_1003B50A8(a1, 1);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    float v15 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "SCREEN FLAT. NOT FILLING UP ZROT BUFFER.", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      float v35 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::checkForRotation()", "%s\n", v35);
      if (v35 != (char *)buf) {
        free(v35);
      }
    }
LABEL_23:
    float v4 = v36;
    float v3 = v37;
    float v7 = v38;
    goto LABEL_24;
  }
  unint64_t v25 = *(void *)(a1 + 800);
  if (v25) {
    float v26 = *(float *)(a1 + 752) / (float)v25;
  }
  else {
    float v26 = 0.0;
  }
  float v27 = (float)(v7 / 20.0) + *(float *)(a1 + 956);
  *(float *)(a1 + 956) = v27;
  float v28 = fabsf(v27);
  float v29 = 2.0;
  if (v28 > 75.0) {
    float v29 = 15.0;
  }
  if ((v7 < v29 || v26 >= -30.0) && (v7 > (float)-v29 || v26 <= 30.0))
  {
    if (v25) {
      float v32 = *(float *)(*(void *)(*(void *)(a1 + 768)
    }
                                 + (((v25 + *(void *)(a1 + 792) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                     + 4 * ((v25 + *(void *)(a1 + 792) - 1) & 0x3FF));
    else {
      float v32 = 0.0;
    }
    BOOL v34 = sub_1003B50FC(a1, fabsf((float)(v7 + v32) * 0.5), v14, v28);
    *(unsigned char *)(a1 + 963) = v34;
    if (v34) {
      return;
    }
    goto LABEL_23;
  }
  sub_1003B50A8(a1, 1);
  *(unsigned char *)(a1 + 964) = 1;
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD5A0);
  }
  float v33 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "Transient!", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    float v24 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::checkForRotation()", "%s\n", v24);
    goto LABEL_73;
  }
}

uint64_t sub_1003B4FCC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 1036) = a2;
  return result;
}

uint64_t sub_1003B4FD4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = *(void *)(result + 80);
  float v3 = 0.0;
  float v4 = 0.0;
  if (v2 >= 2)
  {
    float v5 = (float)((float)v2 * *(float *)(result + 36)) - (float)(*(float *)(result + 32) * *(float *)(result + 32));
    float v4 = 0.0;
    if (v5 >= 0.0) {
      float v4 = v5 / (float)((v2 - 1) * v2);
    }
  }
  unint64_t v6 = *(void *)(result + 152);
  if (v6 >= 2)
  {
    float v7 = (float)((float)v6 * *(float *)(result + 108)) - (float)(*(float *)(result + 104) * *(float *)(result + 104));
    if (v7 >= 0.0) {
      float v3 = v7 / (float)((v6 - 1) * v6);
    }
  }
  unint64_t v8 = *(void *)(result + 224);
  float v9 = 0.0;
  if (v8 >= 2)
  {
    float v10 = (float)((float)v8 * *(float *)(result + 180)) - (float)(*(float *)(result + 176) * *(float *)(result + 176));
    if (v10 >= 0.0) {
      float v9 = v10 / (float)((v8 - 1) * v8);
    }
  }
  *(void *)a2 = off_1022AD5D0;
  *(float *)(a2 + 8) = v4;
  *(float *)(a2 + 12) = v3;
  *(float *)(a2 + 16) = v9;
  return result;
}

void sub_1003B50A8(uint64_t a1, int a2)
{
  if (a2) {
    *(unsigned char *)(a1 + 960) = 0;
  }
  *(void *)(a1 + 952) = 0;
  *(_DWORD *)(a1 + 1032) = 0;
  sub_1003A7544((void *)(a1 + 736));
  sub_1003A7544((void *)(a1 + 808));

  sub_1003A7544((void *)(a1 + 880));
}

BOOL sub_1003B50FC(uint64_t a1, float a2, float a3, float a4)
{
  uint64_t v8 = *(void *)(a1 + 336);
  uint64_t v9 = *(void *)(a1 + 480);
  if (v9) {
    float v10 = *(float *)(*(void *)(*(void *)(a1 + 448)
  }
                               + (((unint64_t)(v9 + *(void *)(a1 + 472) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                   + 4 * ((v9 + *(void *)(a1 + 472) - 1) & 0x3FF));
  else {
    float v10 = 0.0;
  }
  if (a4 <= 65.0 && (int)v8 >= 2)
  {
    sub_1003B5F80(a1 + 256, v8 - 2, (uint64_t)buf);
    if ((float)(v10 * *(float *)&v88[12]) < 0.0)
    {
      sub_1003B50A8(a1, 1);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      BOOL v21 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "Likely transient.", buf, 2u);
      }
      BOOL result = sub_10013D1A0(115, 2);
      if (result)
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 == -1) {
          goto LABEL_28;
        }
        goto LABEL_136;
      }
      return result;
    }
    float v25 = fabsf(*(float *)&v88[12]) - fabsf(v10);
    float v26 = *(float *)(a1 + 956);
    float v27 = 0.0;
    if (v26 > 45.0) {
      float v27 = 1.0;
    }
    float v28 = v25 + (float)(v27 * -5.0);
    if (v28 > 15.0)
    {
      ++*(_DWORD *)(a1 + 1032);
      int v29 = *(_DWORD *)(a1 + 952);
      if (v29 >= 1)
      {
        *(_DWORD *)(a1 + 952) = v29 - 1;
        if (v28 > 30.0 && v29 != 1)
        {
          *(_DWORD *)(a1 + 952) = v29 - 2;
          *(float *)(a1 + 956) = v26 * 0.8;
        }
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD5A0);
        }
        float v31 = qword_102419048;
        if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
        {
          int v32 = *(_DWORD *)(a1 + 952);
          *(_DWORD *)buf = 134218240;
          *(double *)double v88 = v28;
          *(_WORD *)&v88[8] = 1024;
          *(_DWORD *)&v88[10] = v32;
          _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEBUG, "Slowing. decrement numZRot,delta, %.3f, numZRot, %d", buf, 0x12u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419040 != -1) {
            dispatch_once(&qword_102419040, &stru_1022AD5A0);
          }
          int v68 = *(_DWORD *)(a1 + 952);
          *(_DWORD *)uint64_t v78 = 134218240;
          *(double *)&v78[4] = v28;
          *(_WORD *)&v78[12] = 1024;
          *(_DWORD *)&v78[14] = v68;
          float v69 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLOrientationDetector::updateZRotationStatus(float, float, float)", "%s\n", v69);
          if (v69 != (char *)buf) {
            free(v69);
          }
        }
      }
      if (v28 > 50.0 || *(_DWORD *)(a1 + 1032) >= 4)
      {
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD5A0);
        }
        BOOL v34 = qword_102419048;
        if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
        {
          int v35 = *(_DWORD *)(a1 + 1032);
          *(_DWORD *)buf = 134218240;
          *(double *)double v88 = v28;
          *(_WORD *)&v88[8] = 1024;
          *(_DWORD *)&v88[10] = v35;
          _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_DEBUG, "ZDROP detected. deltaDrop, %.3f, fNumZDrops, %d", buf, 0x12u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419040 != -1) {
            dispatch_once(&qword_102419040, &stru_1022AD5A0);
          }
          int v70 = *(_DWORD *)(a1 + 1032);
          *(_DWORD *)uint64_t v78 = 134218240;
          *(double *)&v78[4] = v28;
          *(_WORD *)&v78[12] = 1024;
          *(_DWORD *)&v78[14] = v70;
          float v71 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLOrientationDetector::updateZRotationStatus(float, float, float)", "%s\n", v71);
          if (v71 != (char *)buf) {
            free(v71);
          }
        }
        sub_1003B50A8(a1, 0);
        return 0;
      }
    }
  }
  unint64_t v12 = *(void *)(a1 + 800);
  float v13 = 0.0;
  float v14 = 0.0;
  if (v12) {
    float v14 = *(float *)(a1 + 752) / (float)v12;
  }
  unint64_t v15 = *(void *)(a1 + 872);
  if (v15) {
    float v13 = *(float *)(a1 + 824) / (float)v15;
  }
  unint64_t v16 = *(void *)(a1 + 944);
  float v17 = 0.0;
  float v18 = 0.0;
  if (v16) {
    float v18 = *(float *)(a1 + 896) / (float)v16;
  }
  double v74 = off_1022AD5D0;
  float v75 = v14;
  float v76 = v13;
  float v77 = v18;
  if (v15) {
    float v17 = *(float *)(*(void *)(*(void *)(a1 + 840) + (((v15 + *(void *)(a1 + 864) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
  }
                   + 4 * ((v15 + *(void *)(a1 + 864) - 1) & 0x3FF));
  if (v18 >= 90.0)
  {
    BOOL v24 = 0;
  }
  else
  {
    float v19 = (float)(v17 * 0.4) + (float)(v13 * 0.6);
    if ((float)(v19 - v18) <= 60.0
      && (!v15
        ? (float v20 = 0.0)
        : (float v20 = *(float *)(*(void *)(*(void *)(a1 + 840)
                                      + (((v15 + *(void *)(a1 + 864) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                          + 4 * ((v15 + *(void *)(a1 + 864) - 1) & 0x3FF))),
          v20 <= 135.0))
    {
      float v36 = 0.0;
      if (v16 >= 2)
      {
        float v37 = (float)((float)v16 * *(float *)(a1 + 900)) - (float)(*(float *)(a1 + 896) * *(float *)(a1 + 896));
        if (v37 >= 0.0) {
          float v36 = v37 / (float)((v16 - 1) * v16);
        }
      }
      BOOL v24 = v19 > (float)(v18 * 1.05) && v36 < 400.0;
    }
    else
    {
      BOOL v24 = 1;
    }
  }
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD5A0);
  }
  float v38 = fabsf(v14);
  float v39 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
  {
    int v40 = *(_DWORD *)(a1 + 952);
    *(_DWORD *)buf = 67110656;
    *(_DWORD *)double v88 = v24;
    *(_WORD *)&v88[4] = 2048;
    *(double *)&v88[6] = v77;
    *(_WORD *)&v88[14] = 2048;
    *(double *)&v88[16] = v38;
    __int16 v89 = 1024;
    int v90 = v40;
    __int16 v91 = 2048;
    double v92 = a2;
    __int16 v93 = 2048;
    double v94 = a4;
    __int16 v95 = 2048;
    double v96 = a3;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEBUG, "mostlyZ, %d, zRotMean.z, %.3f, zRot, %.3f, numZRots, %d, estCurr, %.3f, totalZ, %.2f, mag2MinusGrav, %.2f", buf, 0x40u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    int v62 = *(_DWORD *)(a1 + 952);
    *(_DWORD *)uint64_t v78 = 67110656;
    *(_DWORD *)&v78[4] = v24;
    *(_WORD *)&v78[8] = 2048;
    *(double *)&v78[10] = v77;
    *(_WORD *)&v78[18] = 2048;
    *(double *)&v78[20] = v38;
    __int16 v79 = 1024;
    int v80 = v62;
    __int16 v81 = 2048;
    double v82 = a2;
    __int16 v83 = 2048;
    double v84 = a4;
    __int16 v85 = 2048;
    double v86 = a3;
    float v63 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLOrientationDetector::updateZRotationStatus(float, float, float)", "%s\n", v63);
    if (v63 != (char *)buf) {
      free(v63);
    }
  }
  BOOL result = 0;
  if (a3 >= 0.25 || a3 <= -0.85 || !v24) {
    return result;
  }
  BOOL v42 = v38 > 45.0 && (int)v12 > 1;
  if (a2 <= 150.0 && !v42) {
    return 0;
  }
  int v43 = *(_DWORD *)(a1 + 952) + 1;
  *(_DWORD *)(a1 + 952) = v43;
  if (a4 <= 65.0)
  {
    float v46 = fabsf(a3);
    if (v46 <= 0.3) {
      float v47 = 0.0;
    }
    else {
      float v47 = 1.0;
    }
    if (v46 <= 0.1) {
      float v48 = 0.0;
    }
    else {
      float v48 = 1.0;
    }
    float v49 = (float)((float)(v48 * 5.0) + 35.0) + (float)(v47 * 10.0);
    if (v43 >= (int)v12) {
      int v43 = v12;
    }
    if (v49 >= a4 || v43 <= 3) {
      return 0;
    }
    goto LABEL_104;
  }
  float v44 = 255.0;
  if (a4 > 100.0) {
    float v44 = 225.0;
  }
  if (fabsf(v10) <= v44)
  {
LABEL_104:
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    float v51 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
    {
      unint64_t v52 = *(void *)(a1 + 800);
      float v53 = 0.0;
      float v54 = 0.0;
      if (v52 >= 2)
      {
        float v55 = (float)((float)v52 * *(float *)(a1 + 756)) - (float)(*(float *)(a1 + 752) * *(float *)(a1 + 752));
        float v54 = 0.0;
        if (v55 >= 0.0) {
          float v54 = v55 / (float)((v52 - 1) * v52);
        }
      }
      unint64_t v56 = *(void *)(a1 + 872);
      if (v56 >= 2)
      {
        float v57 = (float)((float)v56 * *(float *)(a1 + 828)) - (float)(*(float *)(a1 + 824) * *(float *)(a1 + 824));
        if (v57 >= 0.0) {
          float v53 = v57 / (float)((v56 - 1) * v56);
        }
      }
      int v58 = *(_DWORD *)(a1 + 952);
      unint64_t v59 = *(void *)(a1 + 944);
      float v60 = 0.0;
      if (v59 >= 2)
      {
        float v61 = (float)((float)v59 * *(float *)(a1 + 900)) - (float)(*(float *)(a1 + 896) * *(float *)(a1 + 896));
        if (v61 >= 0.0) {
          float v60 = v61 / (float)((v59 - 1) * v59);
        }
      }
      *(void *)uint64_t v78 = off_1022AD5D0;
      *(float *)&v78[8] = v54;
      *(float *)&v78[12] = v53;
      *(float *)&v78[16] = v60;
      *(_DWORD *)buf = 67109632;
      *(_DWORD *)double v88 = v12;
      *(_WORD *)&v88[4] = 1024;
      *(_DWORD *)&v88[6] = v58;
      *(_WORD *)&v88[10] = 2048;
      *(double *)&v88[12] = v54;
      _os_log_impl((void *)&_mh_execute_header, v51, OS_LOG_TYPE_DEBUG, "Rotating around Z. numSamples: %d, numAccu, %d, zRotVar, %.3f", buf, 0x18u);
    }
    if (sub_10013D1A0(115, 2))
    {
      int v64 = v12;
      uint64_t v65 = a1 + 720;
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      int v66 = *(_DWORD *)(a1 + 952);
      sub_1003B4FD4(v65, (uint64_t)v72);
      *(_DWORD *)uint64_t v78 = 67109632;
      *(_DWORD *)&v78[4] = v64;
      *(_WORD *)&v78[8] = 1024;
      *(_DWORD *)&v78[10] = v66;
      *(_WORD *)&v78[14] = 2048;
      *(double *)&v78[16] = v73;
      float v67 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLOrientationDetector::updateZRotationStatus(float, float, float)", "%s\n", v67);
      if (v67 != (char *)buf) {
        free(v67);
      }
    }
    return 1;
  }
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD5A0);
  }
  float v45 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEBUG, "Going through with 180 turn.", buf, 2u);
  }
  BOOL result = sub_10013D1A0(115, 2);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 == -1)
    {
LABEL_28:
      *(_WORD *)uint64_t v78 = 0;
      float v23 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLOrientationDetector::updateZRotationStatus(float, float, float)", "%s\n", v23);
      if (v23 != (char *)buf) {
        free(v23);
      }
      return 0;
    }
LABEL_136:
    dispatch_once(&qword_102419040, &stru_1022AD5A0);
    goto LABEL_28;
  }
  return result;
}

void *sub_1003B5EC4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = result[10];
  int v3 = 0;
  int v4 = 0;
  if (v2) {
    int v4 = *(_DWORD *)(*(void *)(result[6] + (((unint64_t)(v2 + result[9] - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
  }
                   + 4 * ((v2 + result[9] - 1) & 0x3FF));
  uint64_t v5 = result[19];
  if (v5) {
    int v3 = *(_DWORD *)(*(void *)(result[15] + (((unint64_t)(v5 + result[18] - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
  }
                   + 4 * ((v5 + result[18] - 1) & 0x3FF));
  uint64_t v6 = result[28];
  if (v6) {
    int v7 = *(_DWORD *)(*(void *)(result[24] + (((unint64_t)(v6 + result[27] - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
  }
                   + 4 * ((v6 + result[27] - 1) & 0x3FF));
  else {
    int v7 = 0;
  }
  *(void *)a2 = off_1022AD5D0;
  *(_DWORD *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 12) = v3;
  *(_DWORD *)(a2 + 16) = v7;
  return result;
}

void sub_1003B5F80(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  if (*(_DWORD *)(a1 + 80) <= a2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022AD5F0);
    }
    float v10 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "Index out of bound.", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022AD5F0);
      }
      unint64_t v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "CLVector3d<T> CLRunningVector3d<float>::getSample const [T = float]", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
    }
    *(void *)a3 = off_1022AD5D0;
    *(void *)(a3 + 8) = 0;
    *(_DWORD *)(a3 + 16) = 0;
  }
  else
  {
    unint64_t v4 = *(void *)(a1 + 72) + a2;
    uint64_t v5 = *(void *)(*(void *)(a1 + 48) + ((v4 >> 7) & 0x1FFFFFFFFFFFFF8));
    unint64_t v6 = *(void *)(a1 + 144) + a2;
    uint64_t v7 = *(void *)(*(void *)(a1 + 120) + ((v6 >> 7) & 0x1FFFFFFFFFFFFF8));
    unint64_t v8 = *(void *)(a1 + 216) + a2;
    uint64_t v9 = *(void *)(*(void *)(a1 + 192) + ((v8 >> 7) & 0x1FFFFFFFFFFFFF8));
    *(void *)a3 = off_1022AD5D0;
    *(_DWORD *)(a3 + 8) = *(_DWORD *)(v5 + 4 * (v4 & 0x3FF));
    *(_DWORD *)(a3 + 12) = *(_DWORD *)(v7 + 4 * (v6 & 0x3FF));
    *(_DWORD *)(a3 + 16) = *(_DWORD *)(v9 + 4 * (v8 & 0x3FF));
  }
}

void sub_1003B61CC(uint64_t a1, float a2, float a3)
{
  if (*(float *)(a1 + 1028) > a2)
  {
    if (a3 < 0.85 && *(_DWORD *)(a1 + 1004) == 0)
    {
      *(_DWORD *)(a1 + 1004) = 1;
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      unint64_t v4 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Setting lastPrimaryOrientation.", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD5A0);
        }
        uint64_t v5 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::updateLastPrimaryOrientationForZStats(float, float)", "%s\n", v5);
        if (v5 != (char *)buf) {
          free(v5);
        }
      }
    }
    else if (a3 > 0.9)
    {
      *(_DWORD *)(a1 + 1004) = 0;
    }
  }
}

void sub_1003B6398(uint64_t a1, float a2, float a3, float a4)
{
  if (a4 > 0.925) {
    goto LABEL_8;
  }
  if ((float)(*(float *)(a1 + 1028) * 3.5) < a2) {
    goto LABEL_7;
  }
  float v4 = 0.0;
  if (fabsf(*(float *)(a1 + 956)) > 80.0) {
    float v4 = 1.0;
  }
  if ((float)((float)(v4 * 0.1) + 0.3) < a3)
  {
LABEL_7:
    uint64_t v5 = *(void *)(a1 + 872);
    if (!v5
      || *(float *)(*(void *)(*(void *)(a1 + 840)
                              + (((unint64_t)(v5 + *(void *)(a1 + 864) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                  + 4 * ((v5 + *(void *)(a1 + 864) - 1) & 0x3FF)) < 90.0)
    {
LABEL_8:
      *(_WORD *)(a1 + 963) = 256;
      float v6 = *(float *)(a1 + 956) * 0.8;
      *(float *)(a1 + 956) = v6;
      --*(_DWORD *)(a1 + 952);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      uint64_t v7 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Nixed rotationAroundZ state.", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD5A0);
        }
        unint64_t v8 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::nixRotationAroundZIfNecessary(float, float, float)", "%s\n", v8);
        if (v8 != (char *)buf) {
          free(v8);
        }
      }
    }
  }
}

void sub_1003B65F0(uint64_t a1, _DWORD *a2)
{
  uint64_t v2 = *(void *)(a1 + 336);
  int v3 = 0;
  int v4 = 0;
  if (v2) {
    int v4 = *(_DWORD *)(*(void *)(*(void *)(a1 + 304)
  }
                               + (((unint64_t)(v2 + *(void *)(a1 + 328) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                   + 4 * ((v2 + *(void *)(a1 + 328) - 1) & 0x3FF));
  uint64_t v5 = *(void *)(a1 + 408);
  if (v5) {
    int v3 = *(_DWORD *)(*(void *)(*(void *)(a1 + 376)
  }
                               + (((unint64_t)(v5 + *(void *)(a1 + 400) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                   + 4 * ((v5 + *(void *)(a1 + 400) - 1) & 0x3FF));
  uint64_t v6 = *(void *)(a1 + 480);
  if (v6) {
    float v7 = *(float *)(*(void *)(*(void *)(a1 + 448)
  }
                              + (((unint64_t)(v6 + *(void *)(a1 + 472) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                  + 4 * ((v6 + *(void *)(a1 + 472) - 1) & 0x3FF));
  else {
    float v7 = 0.0;
  }
  *(void *)buf = off_1022AD5D0;
  int v18 = v4;
  int v19 = v3;
  float v20 = v7;
  if (fabsf(v7) > 30.0)
  {
    uint64_t v8 = *(void *)(a1 + 248);
    float v9 = v8
       ? *(float *)(*(void *)(*(void *)(a1 + 216)
                              + (((unint64_t)(v8 + *(void *)(a1 + 240) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                  + 4 * ((v8 + *(void *)(a1 + 240) - 1) & 0x3FF))
       : 0.0;
    if (fabsf(v9) < 0.9)
    {
      uint64_t v10 = *(void *)(a1 + 104);
      uint64_t v11 = *(void *)(a1 + 176);
      int v12 = 0;
      int v13 = 0;
      if (v10) {
        int v13 = *(_DWORD *)(*(void *)(*(void *)(a1 + 72)
      }
                                    + (((unint64_t)(v10 + *(void *)(a1 + 96) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                        + 4 * ((v10 + *(void *)(a1 + 96) - 1) & 0x3FF));
      if (v11) {
        int v12 = *(_DWORD *)(*(void *)(*(void *)(a1 + 144)
      }
                                    + (((unint64_t)(v11 + *(void *)(a1 + 168) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                        + 4 * ((v11 + *(void *)(a1 + 168) - 1) & 0x3FF));
      if (v8) {
        int v14 = *(_DWORD *)(*(void *)(*(void *)(a1 + 216)
      }
                                    + (((unint64_t)(v8 + *(void *)(a1 + 240) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                        + 4 * ((v8 + *(void *)(a1 + 240) - 1) & 0x3FF));
      else {
        int v14 = 0;
      }
      a2[2] = v13;
      a2[3] = v12;
      a2[4] = v14;
      *(unsigned char *)(a1 + 962) = 0;
      *(_DWORD *)(a1 + 980) = 1055286886;
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      unint64_t v15 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "Ready for orientation change via rotation", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD5A0);
        }
        unint64_t v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::setUpForOrienationChangeViaRotation(CLVector3d<float> &)", "%s\n", v16);
        if (v16 != (char *)buf) {
          free(v16);
        }
      }
    }
  }
}

uint64_t sub_1003B6938(uint64_t result, unsigned char *a2, float a3, float a4)
{
  if (*(unsigned char *)(result + 16))
  {
    uint64_t v4 = result;
    if (*(void *)(result + 336) >= *(void *)(result + 280))
    {
      unint64_t v5 = *(void *)(result + 568);
      if (v5 >= *(void *)(result + 512)
        && *(unsigned char *)(result + 961)
        && *(_DWORD *)(result + 976) < (4 * (int)(float)(*(float *)(result + 4) / 10.0)))
      {
        float v7 = 0.0;
        float v8 = 0.0;
        if (v5 >= 2)
        {
          float v9 = (float)((float)v5 * *(float *)(result + 524))
             - (float)(*(float *)(result + 520) * *(float *)(result + 520));
          float v8 = 0.0;
          if (v9 >= 0.0) {
            float v8 = v9 / (float)((v5 - 1) * v5);
          }
        }
        unint64_t v10 = *(void *)(result + 640);
        if (v10 >= 2)
        {
          float v11 = (float)((float)v10 * *(float *)(result + 596))
              - (float)(*(float *)(result + 592) * *(float *)(result + 592));
          if (v11 >= 0.0) {
            float v7 = v11 / (float)((v10 - 1) * v10);
          }
        }
        unint64_t v12 = *(void *)(result + 712);
        float v13 = 0.0;
        if (v12 >= 2)
        {
          float v14 = (float)((float)v12 * *(float *)(result + 668))
              - (float)(*(float *)(result + 664) * *(float *)(result + 664));
          if (v14 >= 0.0) {
            float v13 = v14 / (float)((v12 - 1) * v12);
          }
        }
        int v32 = off_1022AD5D0;
        float v33 = v8;
        float v34 = v7;
        float v35 = v13;
        if (v8 >= v7) {
          float v7 = v8;
        }
        if (v7 >= v13) {
          float v15 = v7;
        }
        else {
          float v15 = v13;
        }
        if (a3 < 0.45 && (float)(*(float *)(result + 1028) * 4.0) > a4 && v15 < 2000.0)
        {
          BOOL result = sub_1003B4098(result + 488, (uint64_t)v28);
          float v17 = fabsf(v29);
          float v18 = fabsf(v30);
          float v19 = fabsf(v31);
          if (v17 < v18) {
            float v17 = v18;
          }
          if (v17 < v19) {
            float v17 = v19;
          }
          if (v17 < 30.0 || (v15 < 800.0 ? (BOOL v20 = v17 < 60.0) : (BOOL v20 = 0), v20))
          {
            *a2 = 0;
            BOOL result = (uint64_t)sub_1003B5EC4((void *)(v4 + 256), (uint64_t)v24);
            float v21 = fabsf(v25);
            float v22 = fabsf(v26);
            float v23 = fabsf(v27);
            if (v21 < v22) {
              float v21 = v22;
            }
            if (v21 < v23) {
              float v21 = v23;
            }
            if (!*(unsigned char *)(v4 + 964) || v21 < 175.0) {
              *(_DWORD *)(v4 + 976) += 2;
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1003B6B84(uint64_t a1, float a2, float a3)
{
  if (*(float *)(a1 + 1024) > a2)
  {
    unint64_t v3 = *(void *)(a1 + 568);
    float v4 = 0.0;
    float v5 = 0.0;
    if (v3) {
      float v5 = *(float *)(a1 + 520) / (float)v3;
    }
    unint64_t v6 = *(void *)(a1 + 640);
    if (v6) {
      float v4 = *(float *)(a1 + 592) / (float)v6;
    }
    unint64_t v7 = *(void *)(a1 + 712);
    if (v7) {
      float v8 = *(float *)(a1 + 664) / (float)v7;
    }
    else {
      float v8 = 0.0;
    }
    float v9 = fabsf(v8);
    float v10 = fabsf(v5);
    float v11 = fabsf(v4);
    if (v10 >= v11) {
      float v11 = v10;
    }
    if (v9 >= v11) {
      float v11 = v9;
    }
    if ((*(int *)(a1 + 952) < 2 || *(_DWORD *)(a1 + 1000) == *(_DWORD *)(a1 + 984)) && (a3 > 0.85 || v11 < 30.0))
    {
      sub_1003B50A8(a1, 1);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      float v13 = qword_102419048;
      if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Not filling Zrot buffer.", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419040 != -1) {
          dispatch_once(&qword_102419040, &stru_1022AD5A0);
        }
        float v14 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::resetZStatsWhenQuiescent(float, float)", "%s\n", v14);
        if (v14 != (char *)buf) {
          free(v14);
        }
      }
    }
  }
}

float sub_1003B6DE8(uint64_t a1, float *a2, float *a3)
{
  *a3 = 3.4028e38;
  unint64_t v5 = *(void *)(a1 + 104);
  float v6 = 0.0;
  float v7 = 0.0;
  if (v5) {
    float v7 = *(float *)(a1 + 56) / (float)v5;
  }
  unint64_t v8 = *(void *)(a1 + 176);
  if (v8) {
    float v6 = *(float *)(a1 + 128) / (float)v8;
  }
  unint64_t v9 = *(void *)(a1 + 248);
  if (v9) {
    float v10 = *(float *)(a1 + 200) / (float)v9;
  }
  else {
    float v10 = 0.0;
  }
  a2[2] = v7;
  a2[3] = v6;
  a2[4] = v10;
  float v11 = (float)((float)(v6 * v6) + (float)(v7 * v7)) + (float)(v10 * v10);
  if (v5 >= *(void *)(a1 + 48))
  {
    float v12 = 0.0;
    float v13 = 0.0;
    if (v5 >= 2)
    {
      float v14 = (float)((float)v5 * *(float *)(a1 + 60)) - (float)(*(float *)(a1 + 56) * *(float *)(a1 + 56));
      float v13 = 0.0;
      if (v14 >= 0.0) {
        float v13 = v14 / (float)((v5 - 1) * v5);
      }
    }
    if (v8 >= 2)
    {
      float v15 = (float)((float)v8 * *(float *)(a1 + 132)) - (float)(*(float *)(a1 + 128) * *(float *)(a1 + 128));
      if (v15 >= 0.0) {
        float v12 = v15 / (float)((v8 - 1) * v8);
      }
    }
    float v16 = 0.0;
    if (v9 >= 2)
    {
      float v17 = (float)((float)v9 * *(float *)(a1 + 204)) - (float)(*(float *)(a1 + 200) * *(float *)(a1 + 200));
      if (v17 >= 0.0) {
        float v16 = v17 / (float)((v9 - 1) * v9);
      }
    }
    float v25 = v13;
    float v26 = v12;
    float v27 = v16;
    if (v13 >= v12) {
      float v12 = v13;
    }
    if (v12 < v16) {
      float v12 = v16;
    }
    *a3 = v12;
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    float v18 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
    {
      double v19 = a2[2];
      double v20 = a2[3];
      double v21 = a2[4];
      double v22 = *a3;
      *(_DWORD *)buf = 134219776;
      double v29 = v25;
      __int16 v30 = 2048;
      double v31 = v26;
      __int16 v32 = 2048;
      double v33 = v27;
      __int16 v34 = 2048;
      double v35 = v19;
      __int16 v36 = 2048;
      double v37 = v20;
      __int16 v38 = 2048;
      double v39 = v21;
      __int16 v40 = 2048;
      double v41 = v22;
      __int16 v42 = 2048;
      double v43 = v11;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "acc variance, %.3f, %.3f, %.3f, acc mean, %.3f, %.3f, %.3f, maxVar, %.3f, mag2,%.3f", buf, 0x52u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      BOOL v24 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "float CLOrientationDetector::getAccStats(CLVector3d<float> &, float &)", "%s\n", v24);
      if (v24 != (char *)buf) {
        free(v24);
      }
    }
  }
  return fabsf(v11 + -1.0);
}

uint64_t sub_1003B71DC(uint64_t a1, float *a2, float a3, float a4)
{
  *(unsigned char *)(a1 + 961) = 1;
  char v14 = 1;
  float v7 = 1.0;
  float v8 = 1.5;
  if (*(unsigned char *)a1) {
    float v8 = 1.0;
  }
  if (!*(unsigned char *)(a1 + 963))
  {
    if (!*(unsigned char *)a1) {
      float v7 = 2.25;
    }
    if ((float)(v7 * *(float *)(a1 + 1024)) <= a3 || (float)(v8 * 0.15) <= a4)
    {
      if ((float)(v8 * 0.3) <= a4) {
        goto LABEL_18;
      }
      float v10 = v7 * *(float *)(a1 + 1028);
      if (v10 <= a3)
      {
        if (*(void *)(a1 + 104) < *(void *)(a1 + 48)
          || fabsf(a2[4]) >= 0.95
          || fabsf(a2[2]) <= 0.45 && fabsf(a2[3]) <= 0.45
          || v10 * 4.0 <= a3)
        {
          goto LABEL_18;
        }
        char v14 = 0;
      }
      else
      {
        char v14 = 0;
        if (*(unsigned char *)(a1 + 964)) {
          goto LABEL_18;
        }
      }
      ++*(_DWORD *)(a1 + 976);
      goto LABEL_18;
    }
  }
  if (!*(unsigned char *)(a1 + 964))
  {
    *(unsigned char *)(a1 + 961) = 0;
    *(_DWORD *)(a1 + 976) = 0;
  }
  char v14 = 0;
LABEL_18:
  sub_1003B6938(a1, &v14, a4, a3);
  if (v14)
  {
    *(_DWORD *)(a1 + 976) = 0;
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    float v11 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "Resetting stable count", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      float v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLOrientationDetector::deviceIsMoving(const CLVector3d<float> &, float, float)", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
  }
  return *(unsigned __int8 *)(a1 + 961);
}

uint64_t sub_1003B74B0(int a1, int a2, int a3, float a4)
{
  uint64_t v4 = 0;
  while (1)
  {
    if (byte_101D1C8F0[v4] != a1) {
      goto LABEL_12;
    }
    if (!a3) {
      break;
    }
    if (byte_101D1C8F0[v4 + 13]) {
      goto LABEL_7;
    }
LABEL_12:
    v4 += 16;
    if (v4 == 320) {
      return 0;
    }
  }
  if (byte_101D1C8F0[v4 + 13]) {
    goto LABEL_12;
  }
LABEL_7:
  unint64_t v5 = &byte_101D1C8F0[v4];
  if (byte_101D1C8F0[v4 + 12]) {
    BOOL v6 = a2 == 0;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6) {
    goto LABEL_12;
  }
  float v7 = *((float *)v5 + 1);
  float v8 = *((float *)v5 + 2);
  if (vabds_f32(a4, v7) > v8) {
    goto LABEL_12;
  }
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD5A0);
  }
  float v10 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 134218240;
    double v13 = v7;
    __int16 v14 = 2048;
    double v15 = v8;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Within magic angle limits: Threshold %.4f, Delta %.4f", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    float v11 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "static BOOL CLOrientationDetector::withinMagicAngleLimits(FormFactor, BOOL, float, BOOL)", "%s\n", v11);
    if (v11 != (char *)buf) {
      free(v11);
    }
  }
  return 1;
}

BOOL sub_1003B76EC(double *a1, uint64_t a2, float a3, float a4, float a5)
{
  double v7 = a1[126] - a1[121];
  int v8 = 0;
  if (a3 < 0.05)
  {
    float v9 = *(float *)(a2 + 20);
    if (v9 > 0.9 && v9 < 1.1) {
      int v8 = sub_1003B74B0(*(unsigned __int8 *)a1, v7 < 5.0, *((unsigned __int8 *)a1 + 1036), a4);
    }
  }
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD5A0);
  }
  float v10 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
  {
    int v11 = *(unsigned __int8 *)a1;
    double v12 = a1[126] - a1[121];
    *(_DWORD *)buf = 67109632;
    BOOL v21 = v11;
    __int16 v22 = 1024;
    BOOL v23 = v7 < 5.0;
    __int16 v24 = 2048;
    *(double *)float v25 = v12;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Ipad %d: screenJustTurnedOn, %d, deltaTime %.5f", buf, 0x18u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    float v18 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLOrientationDetector::atMagicCoverRestingAngle(const float *, float, float, float)", "%s\n", v18);
    if (v18 != (char *)buf) {
      free(v18);
    }
  }
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD5A0);
  }
  double v13 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
  {
    int v14 = *((unsigned __int8 *)a1 + 962);
    *(_DWORD *)buf = 67110144;
    BOOL v21 = v7 < 5.0;
    __int16 v22 = 1024;
    BOOL v23 = 0;
    __int16 v24 = 1024;
    *(_DWORD *)float v25 = v8;
    *(_WORD *)&v25[4] = 1024;
    *(_DWORD *)&v25[6] = v14;
    __int16 v26 = 2048;
    double v27 = a5;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "allowShallow, %d, magicCaseRest, %d, tiltIn, %d, wasMoving, %d, maxVar, %.5f", buf, 0x24u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    double v19 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLOrientationDetector::atMagicCoverRestingAngle(const float *, float, float, float)", "%s\n", v19);
    if (v19 != (char *)buf) {
      free(v19);
    }
  }
  if (*((unsigned char *)a1 + 962)) {
    int v15 = 0;
  }
  else {
    int v15 = v8;
  }
  if (v15 == 1 && (float)(*((float *)a1 + 256) * 0.025) > a5)
  {
    double v16 = a1[124];
    if (v16 < 0.0)
    {
      double v16 = a1[126];
      a1[124] = v16;
    }
    return *((unsigned char *)a1 + 965) || *((_DWORD *)a1 + 246) == 4 || a1[126] - v16 > dbl_101D1C8E0[*(unsigned char *)a1 == 2];
  }
  else
  {
    BOOL result = 0;
    if (a1[124] > 0.0) {
      a1[124] = -1.0;
    }
  }
  return result;
}

void sub_1003B7BD0(unsigned __int8 *a1)
{
  *((_DWORD *)a1 + 250) = 0;
  uint64_t v2 = *((void *)a1 + 13);
  float v3 = 0.0;
  float v4 = 0.0;
  if (v2) {
    float v4 = *(float *)(*(void *)(*((void *)a1 + 9)
  }
                              + (((unint64_t)(v2 + *((void *)a1 + 12) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                  + 4 * ((v2 + *((void *)a1 + 12) - 1) & 0x3FF));
  uint64_t v5 = *((void *)a1 + 22);
  if (v5) {
    float v3 = *(float *)(*(void *)(*((void *)a1 + 18)
  }
                              + (((unint64_t)(v5 + *((void *)a1 + 21) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                  + 4 * ((v5 + *((void *)a1 + 21) - 1) & 0x3FF));
  uint64_t v6 = *((void *)a1 + 31);
  if (v6) {
    float v7 = *(float *)(*(void *)(*((void *)a1 + 27)
  }
                              + (((unint64_t)(v6 + *((void *)a1 + 30) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                  + 4 * ((v6 + *((void *)a1 + 30) - 1) & 0x3FF));
  else {
    float v7 = 0.0;
  }
  unint64_t v59 = off_1022AD5D0;
  float v60 = v4;
  float v61 = v3;
  float v62 = v7;
  float v58 = 0.0;
  if (a1[965] && *((double *)a1 + 126) > 0.0)
  {
    a1[961] = 0;
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    int v8 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 134218496;
      double v91 = v60;
      __int16 v92 = 2048;
      double v93 = v61;
      __int16 v94 = 2048;
      double v95 = v62;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "onStartup, x, %.3f, y, %.3f, z, %.3f", buf, 0x20u);
    }
    float v9 = 0.0;
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      int v63 = 134218496;
      double v64 = v60;
      __int16 v65 = 2048;
      double v66 = v61;
      __int16 v67 = 2048;
      double v68 = v62;
      float v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::calcCurrentOrientation()", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
  else
  {
    float v11 = sub_1003B6DE8((uint64_t)a1, (float *)&v59, &v58);
    if (a1[16])
    {
      float v12 = fabsf(v62);
      float v9 = v58;
      if (a1[963])
      {
        sub_1003B6398((uint64_t)a1, v58, v11, v12);
        sub_1003B65F0((uint64_t)a1, &v59);
      }
      else
      {
        sub_1003B61CC((uint64_t)a1, v58, v12);
      }
    }
    else
    {
      float v9 = v58;
    }
    int v13 = sub_1003B71DC((uint64_t)a1, (float *)&v59, v9, v11);
    a1[961] = v13;
    if (v13)
    {
      a1[962] = 1;
      if (*((_DWORD *)a1 + 244) < (4 * (int)(float)(*((float *)a1 + 1) / 10.0))) {
        return;
      }
    }
  }
  v89[0] = 0;
  float v14 = v60;
  float v15 = v61;
  float v16 = -v61;
  *(float *)&v89[1] = -v61;
  *(float *)&v89[2] = v61;
  float v17 = -v60;
  *(float *)&v89[3] = -v60;
  *(float *)&v89[4] = v60;
  float v18 = v62;
  float v19 = -v62;
  *(float *)&v89[5] = -v62;
  *(float *)&v89[6] = v62;
  unsigned int v20 = *a1;
  if (*a1)
  {
    float v21 = 0.45;
    if (a1[962]) {
      float v21 = 0.5;
    }
    float v22 = *((float *)a1 + 245);
    if (v22 <= v21) {
      float v23 = v21;
    }
    else {
      float v23 = (float)(v22 + v21) * 0.5;
    }
    *((float *)a1 + 245) = v23;
    float v24 = 0.35;
  }
  else
  {
    float v23 = 0.5;
    float v24 = 0.4;
  }
  if (v15 < 0.0) {
    int v25 = 1;
  }
  else {
    int v25 = 2;
  }
  if (v15 <= 0.0) {
    float v26 = v16;
  }
  else {
    float v26 = v15;
  }
  if (v14 < 0.0) {
    int v27 = 3;
  }
  else {
    int v27 = 4;
  }
  if (v14 <= 0.0) {
    float v28 = v17;
  }
  else {
    float v28 = v14;
  }
  if (v26 > v28)
  {
    if (!a1[963] || (float v29 = 0.5, v28 >= 0.5) || a1[961] || v18 <= -0.85)
    {
      if (v28 <= 0.15 && v18 >= -0.8) {
        float v28 = 0.0;
      }
      if (v20 < 2 || v15 < 0.0)
      {
        float v29 = v23;
      }
      else
      {
        float v24 = v24 + 0.15;
        float v29 = v23 + 0.15;
      }
    }
    else
    {
      float v28 = 0.0;
      float v24 = 0.4;
    }
    if (v26 > v29 && (float)(v26 - v28) > v24)
    {
      *((_DWORD *)a1 + 250) = v25;
      goto LABEL_115;
    }
LABEL_87:
    if (*((_DWORD *)a1 + 250)) {
      goto LABEL_115;
    }
    if (a1[16] && a1[963])
    {
      uint64_t v34 = *((void *)a1 + 60);
      float v35 = v34
          ? *(float *)(*(void *)(*((void *)a1 + 56)
                                 + (((unint64_t)(v34 + *((void *)a1 + 59) - 1) >> 7) & 0x1FFFFFFFFFFFFF8))
                     + 4 * ((v34 + *((void *)a1 + 59) - 1) & 0x3FF))
          : 0.0;
      if (fabsf(v35) > 60.0) {
        goto LABEL_115;
      }
    }
    if (v26 >= v28) {
      float v36 = v26;
    }
    else {
      float v36 = v28;
    }
    if (v18 <= 0.0)
    {
      if (v18 >= -0.5 || (float)(v19 - v36) <= 0.4) {
        goto LABEL_107;
      }
      int v37 = 5;
    }
    else
    {
      if (v18 <= 0.5 || (float)(v18 - v36) <= 0.4) {
        goto LABEL_107;
      }
      int v37 = 6;
    }
    *((_DWORD *)a1 + 250) = v37;
LABEL_107:
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    __int16 v38 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
    {
      if (v18 <= 0.0) {
        float v39 = v19;
      }
      else {
        float v39 = v18;
      }
      int v40 = *((_DWORD *)a1 + 250);
      *(_DWORD *)buf = 134218496;
      double v91 = v39;
      __int16 v92 = 2048;
      double v93 = v36;
      __int16 v94 = 1024;
      LODWORD(v95) = v40;
      _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_DEBUG, "FaceUp/Down: maxWeight,%.3f, 2ndWeight,%.3f, orientation,%d", buf, 0x1Cu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      if (v18 <= 0.0) {
        float v55 = v19;
      }
      else {
        float v55 = v18;
      }
      int v56 = *((_DWORD *)a1 + 250);
      int v63 = 134218496;
      double v64 = v55;
      __int16 v65 = 2048;
      double v66 = v36;
      __int16 v67 = 1024;
      LODWORD(v68) = v56;
      float v57 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::calcCurrentOrientation()", "%s\n", v57);
      if (v57 != (char *)buf) {
        free(v57);
      }
    }
    goto LABEL_115;
  }
  if (!a1[963] || v26 >= 0.5 || a1[961] || v18 <= -0.85)
  {
    if (v26 <= 0.15 && v18 >= -0.8) {
      float v26 = 0.0;
    }
  }
  else
  {
    float v26 = 0.0;
    float v24 = 0.4;
    float v23 = 0.5;
  }
  if (v20 >= 2 && v14 >= 0.0 && a1[17] && sub_1003B76EC((double *)a1, (uint64_t)v89, v26, v28, v9))
  {
    *((_DWORD *)a1 + 250) = 4;
    *((void *)a1 + 124) = 0xBFF0000000000000;
  }
  else
  {
    BOOL v32 = (float)(v28 - v23) <= 0.0 || (float)(v28 - v26) <= v24;
    if (v32
      || *a1 < 2u
      && ((float)(v28 - v23) <= 0.15
       || (int v33 = *((_DWORD *)a1 + 260) + 1, *((_DWORD *)a1 + 260) = v33, v33 < (int)(float)(*((float *)a1 + 1) * 0.3))))
    {
      float v29 = v23;
      goto LABEL_87;
    }
    *((_DWORD *)a1 + 250) = v27;
  }
  float v29 = v23;
LABEL_115:
  a1[965] = 0;
  if (!a1[961])
  {
    a1[962] = 0;
    if (a1[16])
    {
      if (*a1 >= 2u) {
        sub_1003B6B84((uint64_t)a1, v9, fabsf(v62));
      }
    }
  }
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD5A0);
  }
  double v41 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEBUG))
  {
    int v42 = *((_DWORD *)a1 + 250);
    int v43 = a1[961];
    int v44 = a1[962];
    int v45 = *((_DWORD *)a1 + 246);
    int v46 = *((_DWORD *)a1 + 244);
    uint64_t v47 = *((void *)a1 + 126);
    *(_DWORD *)buf = 134221056;
    double v91 = v24;
    __int16 v92 = 2048;
    double v93 = v29;
    __int16 v94 = 2048;
    double v95 = v60;
    __int16 v96 = 2048;
    double v97 = v61;
    __int16 v98 = 2048;
    double v99 = v62;
    __int16 v100 = 2048;
    double v101 = (float)(v26 - v28);
    __int16 v102 = 2048;
    double v103 = v26;
    __int16 v104 = 1024;
    int v105 = v42;
    __int16 v106 = 1024;
    int v107 = v43;
    __int16 v108 = 1024;
    int v109 = v44;
    __int16 v110 = 1024;
    int v111 = v45;
    __int16 v112 = 1024;
    int v113 = v46;
    __int16 v114 = 2048;
    uint64_t v115 = v47;
    _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEBUG, "deltaWeightThreshold, %.3f, tiltWeightTheshold, %.3f, currAcc, %.3f, %.3f, %.3f, deltaWeight, %.3f, tilt, %.3f, fCurrentOrientation, %d, isMoving, %d, wasMoving, %d, fLastClearOrientation, %d, fStableCount, %d, DetectionTime, %f", buf, 0x70u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    int v48 = *((_DWORD *)a1 + 250);
    int v49 = a1[961];
    int v50 = a1[962];
    int v51 = *((_DWORD *)a1 + 246);
    int v52 = *((_DWORD *)a1 + 244);
    uint64_t v53 = *((void *)a1 + 126);
    int v63 = 134221056;
    double v64 = v24;
    __int16 v65 = 2048;
    double v66 = v29;
    __int16 v67 = 2048;
    double v68 = v60;
    __int16 v69 = 2048;
    double v70 = v61;
    __int16 v71 = 2048;
    double v72 = v62;
    __int16 v73 = 2048;
    double v74 = (float)(v26 - v28);
    __int16 v75 = 2048;
    double v76 = v26;
    __int16 v77 = 1024;
    int v78 = v48;
    __int16 v79 = 1024;
    int v80 = v49;
    __int16 v81 = 1024;
    int v82 = v50;
    __int16 v83 = 1024;
    int v84 = v51;
    __int16 v85 = 1024;
    int v86 = v52;
    __int16 v87 = 2048;
    uint64_t v88 = v53;
    float v54 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::calcCurrentOrientation()", "%s\n", v54);
    if (v54 != (char *)buf) {
      free(v54);
    }
  }
}

BOOL sub_1003B86E0(uint64_t a1, int *a2, void *a3)
{
  sub_1003B7BD0((unsigned __int8 *)a1);
  int v6 = *(_DWORD *)(a1 + 1000);
  *a2 = v6;
  if (*(_DWORD *)(a1 + 1000))
  {
    *(_DWORD *)(a1 + 1040) = 0;
  }
  else
  {
    int v7 = *(_DWORD *)(a1 + 984);
    if (v7) {
      BOOL v8 = v7 == 7;
    }
    else {
      BOOL v8 = 1;
    }
    if (!v8)
    {
      *a2 = v7;
      int v6 = v7;
    }
  }
  int v9 = *(_DWORD *)(a1 + 984);
  *a3 = *(void *)(a1 + 1008);
  if (v6 != v9)
  {
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    float v10 = qword_102419048;
    if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(int *)(a1 + 984);
      if (v11 > 6) {
        float v12 = "Unexpected";
      }
      else {
        float v12 = off_1022AD610[v11];
      }
      uint64_t v13 = *a2;
      if (v13 > 6) {
        float v14 = "Unexpected";
      }
      else {
        float v14 = off_1022AD610[v13];
      }
      *(_DWORD *)buf = 136446466;
      float v19 = v12;
      __int16 v20 = 2082;
      float v21 = v14;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Notify from, %{public}s -> %{public}s ", buf, 0x16u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419040 != -1) {
        dispatch_once(&qword_102419040, &stru_1022AD5A0);
      }
      float v17 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLOrientationDetector::calcOrientation(CMDeviceOrientationType &, CLMotionTypeTimestamp &)", "%s\n", v17);
      if (v17 != (char *)buf) {
        free(v17);
      }
    }
    *(_DWORD *)(a1 + 984) = *(_DWORD *)(a1 + 1000);
    *(_DWORD *)(a1 + 980) = 1055286886;
    *(unsigned char *)(a1 + 962) = 0;
    sub_1003B50A8(a1, 1);
    int v15 = *(_DWORD *)(a1 + 1000);
    if ((v15 - 5) < 2) {
      int v15 = 0;
    }
    *(_DWORD *)(a1 + 1004) = v15;
  }
  return v6 != v9;
}

void sub_1003B89C4(uint64_t a1)
{
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD5A0);
  }
  uint64_t v2 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Disabling gyro.", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    float v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::disableGyro()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    *(unsigned char *)(a1 + 16) = 0;
    sub_1003A7544((void *)(a1 + 272));
    sub_1003A7544((void *)(a1 + 344));
    sub_1003A7544((void *)(a1 + 416));
    sub_1003A7544((void *)(a1 + 504));
    sub_1003A7544((void *)(a1 + 576));
    sub_1003A7544((void *)(a1 + 648));
    sub_1003B50A8(a1, 1);
  }
}

void sub_1003B8BA0(uint64_t a1)
{
  if (qword_102419040 != -1) {
    dispatch_once(&qword_102419040, &stru_1022AD5A0);
  }
  uint64_t v2 = qword_102419048;
  if (os_log_type_enabled((os_log_t)qword_102419048, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Enabling gyro.", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419040 != -1) {
      dispatch_once(&qword_102419040, &stru_1022AD5A0);
    }
    float v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLOrientationDetector::enableGyro()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  *(void *)(a1 + 1016) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 16) = 1;
}

void sub_1003B8D44(id a1)
{
  qword_102419048 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Orientation");
}

void sub_1003B8D74()
{
}

void sub_1003B8D88(id a1)
{
  qword_102419638 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_1003B8DB8(unsigned int a1)
{
  if (a1 > 4) {
    return 25;
  }
  else {
    return qword_101D1CA60[a1];
  }
}

uint64_t sub_1003B8DD8()
{
  return 6;
}

void sub_1003B9160(id a1)
{
  qword_102419208 = (uint64_t)os_log_create("com.apple.locationd.Motion", "PredictedWalkDistance");
}

void *sub_1003B9190(void *a1, int a2)
{
  sub_100134750(__p, "");
  sub_1003B9270((uint64_t)a1, "VO2MaxRetrocomputeBodyMetricsHistory", a2, (uint64_t)__p, 1, 30.0);
  if (v6 < 0) {
    operator delete(__p[0]);
  }
  *a1 = off_1022AD6C8;
  a1[9] = off_1022AD778;
  sub_1003B9C84((uint64_t)a1);
  return a1;
}

void sub_1003B9244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  sub_1003B9730(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_1003B9270(uint64_t a1, char *a2, int a3, uint64_t a4, int a5, float a6)
{
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  float v12 = (void *)(a1 + 8);
  *(void *)a1 = off_1022ADAD8;
  sub_1003BDF2C((void *)(a1 + 8));
  *float v12 = off_1022ADB08;
  *(void *)a1 = off_1022AD9E0;
  *(void *)(a1 + 72) = off_1022ADA88;
  sub_1011F8748(a1 + 72, a2, a3, a1, a6, a4, a5, 0);
  *(void *)a1 = off_1022AD9E0;
  *(void *)(a1 + 72) = off_1022ADA88;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_DWORD *)(a1 + 240) = 3;
  *(void *)(a1 + 252) = 0;
  *(void *)(a1 + 244) = 0;
  *(_DWORD *)(a1 + 264) = 12000;
  *(void *)(a1 + 272) = off_1022ADAD8;
  sub_1003BDF2C((void *)(a1 + 280));
  *(void *)(a1 + 280) = off_1022ADB08;
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v17 = a1 + 112;
  (*(void (**)(uint64_t))(v13 + 16))(a1 + 112);
  __int16 v18 = 256;
  if ((a3 & 1) == 0)
  {
    if (*(char *)(a4 + 23) < 0)
    {
      sub_1000DC48C(__p, *(void **)a4, *(void *)(a4 + 8));
    }
    else
    {
      *(_OWORD *)std::string __p = *(_OWORD *)a4;
      uint64_t v16 = *(void *)(a4 + 16);
    }
    sub_1011F8FF8(a1 + 72);
  }
  *(void *)(a1 + 232) = 0xBFF0000000000000;
  (*(void (**)(uint64_t))(*(void *)(a1 + 112) + 24))(a1 + 112);
  return a1;
}

void sub_1003B9694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  sub_1019DB560((uint64_t)&a19);
  *int v27 = v30;
  sub_1003BE1F8(v31);
  sub_1003BE294(v29);
  sub_1011F8AE0(v28);
  *int v25 = a12;
  sub_1003BE1F8(v26);
  _Unwind_Resume(a1);
}

void sub_1003B9728()
{
}

void *sub_1003B9730(void *a1)
{
  *a1 = off_1022AD9E0;
  uint64_t v2 = (uint64_t)(a1 + 9);
  a1[9] = off_1022ADA88;
  a1[34] = off_1022ADAD8;
  sub_1003BE1F8(a1 + 35);
  sub_1003BE294(a1 + 22);
  sub_1011F8AE0(v2);
  *a1 = off_1022ADAD8;
  sub_1003BE1F8(a1 + 1);
  return a1;
}

void *sub_1003B97F4(uint64_t a1)
{
  return sub_1003B9730((void *)(a1 - 72));
}

void sub_1003B97FC(void *a1)
{
  sub_1003B9730(a1);

  operator delete();
}

void sub_1003B9834(uint64_t a1)
{
  sub_1003B9730((void *)(a1 - 72));

  operator delete();
}

uint64_t sub_1003B9870(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)a1 + 120))(a1, a2, 0);
}

uint64_t sub_1003B9898(uint64_t a1)
{
  uint64_t result = sub_100082064(a1 + 72);
  if (result) {
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)"DELETE FROM VO2MaxRetrocomputeBodyMetricsHistory WHERE algorithmVersion = ?");
  }
  return result;
}

void sub_1003B9ACC(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B9B10(uint64_t a1)
{
  if (sub_100082064(a1 + 72)) {
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)"SELECT * FROM VO2MaxRetrocomputeBodyMetricsHistory WHERE algorithmVersion = ? LIMIT 1");
  }
  return 109;
}

void sub_1003B9C6C(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_101A5DB04();
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003B9C84(uint64_t a1)
{
  uint64_t result = sub_10014C3C0(*(void *)(a1 + 80));
  if (result)
  {
    sub_1003B9CF4(a1);
    uint64_t v3 = *(void *)(a1 + 80);
    return sub_1005F7B0C(v3, "VO2MaxRetrocomputeBodyMetricsHistory", (const char **)&off_1022AD850, (const std::string::value_type **)&off_10241ACF8, 0);
  }
  return result;
}

uint64_t sub_1003B9CF4(uint64_t a1)
{
  uint64_t result = sub_1005F93E4(*(void *)(a1 + 80), "VO2MaxRetrocomputeBodyMetricsHistory");
  if (result)
  {
    uint64_t v3 = "startTime";
    int v4 = 5;
    __int16 v5 = 0;
    char v6 = 0;
    char v7 = 0;
    sub_1005FEC4C(*(void *)(a1 + 80), "VO2MaxRetrocomputeBodyMetricsHistory", (uint64_t)"startTime", (uint64_t)&v3);
  }
  return result;
}

void sub_1003BA1EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a23);
  if (v61) {
    (*(void (**)(uint64_t))(*(void *)v61 + 8))(v61);
  }
  sub_101A129A8((uint64_t)&a61);
  _Unwind_Resume(a1);
}

uint64_t sub_1003BA294(uint64_t a1)
{
  uint64_t result = sub_100082064(a1 + 72);
  if (result) {
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)"DELETE FROM VO2MaxRetrocomputeBodyMetricsHistory");
  }
  return result;
}

void sub_1003BA344(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_101A5DB04();
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003BA35C(uint64_t a1)
{
  return sub_1003BA294(a1 - 72);
}

uint64_t sub_1003BA364(uint64_t a1)
{
  uint64_t result = sub_100082064(a1 + 72);
  if (result) {
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)"INSERT INTO VO2MaxRetrocomputeBodyMetricsHistory (startTime, algorithmVersion, biologicalSex, age, height, weight) VALUES (?, ?, ?, ?, ?, ?)");
  }
  return result;
}

void sub_1003BA49C(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_101A5DB04();
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003BA4B4(uint64_t a1, void *a2)
{
  if (!sub_1005F9734(*(void *)(a1 + 80), (char *)a2))
  {
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022ADB60);
    }
    int v4 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 136446210;
      *(std::string::size_type *)((char *)buf[0].__r_.__value_.__r.__words + 4) = (std::string::size_type)a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#Notice %{public}s needs autoincrement migration", (uint8_t *)buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022ADB60);
      }
      LODWORD(__p[0]) = 136446210;
      *(void **)((char *)__p + 4) = a2;
      __int16 v20 = (std::string *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLActivityRecorderDb<VO2MaxRetrocomputeBodyMetrics, CLActivityDB::ClassBDataProtectionPolicy>::migrateDbConstraints(const char *, const CLSqliteDatabase::ColumnInfo *, const char **) [T = VO2MaxRetrocomputeBodyMetrics, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", (const char *)v20);
      if (v20 != buf) {
        free(v20);
      }
    }
    memset(__p, 0, 24);
    sub_100134750(buf, (char *)a2);
    __int16 v5 = std::string::append(buf, "AutoIncr");
    long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    int64_t v22 = v5->__r_.__value_.__r.__words[2];
    *(_OWORD *)float v21 = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(buf[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf[0].__r_.__value_.__l.__data_);
    }
    sub_100134750(buf, (char *)a2);
    char v7 = std::string::append(buf, "Index");
    v7->__r_.__value_.__l.__size_ = 0;
    v7->__r_.__value_.__r.__words[2] = 0;
    v7->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(buf[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf[0].__r_.__value_.__l.__data_);
    }
    sub_10002B640(*(void *)(a1 + 80));
    if (SHIBYTE(__p[2]) >= 0) {
      size_t v8 = HIBYTE(__p[2]);
    }
    else {
      size_t v8 = (size_t)__p[1];
    }
    int v9 = buf;
    sub_1001110E4((uint64_t)buf, v8 + 21);
    if ((buf[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v9 = (std::string *)buf[0].__r_.__value_.__r.__words[0];
    }
    if (v8)
    {
      if (SHIBYTE(__p[2]) >= 0) {
        float v10 = __p;
      }
      else {
        float v10 = (void **)__p[0];
      }
      memmove(v9, v10, v8);
    }
    strcpy((char *)v9 + v8, "DROP TABLE IF EXISTS ");
    if (v22 >= 0) {
      uint64_t v11 = v21;
    }
    else {
      uint64_t v11 = (void **)v21[0];
    }
    if (v22 >= 0) {
      std::string::size_type v12 = HIBYTE(v22);
    }
    else {
      std::string::size_type v12 = (std::string::size_type)v21[1];
    }
    uint64_t v13 = std::string::append(buf, (const std::string::value_type *)v11, v12);
    float v14 = (void *)v13->__r_.__value_.__r.__words[0];
    v23.__r_.__value_.__r.__words[0] = v13->__r_.__value_.__l.__size_;
    *(std::string::size_type *)((char *)v23.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v13->__r_.__value_.__r.__words[1] + 7);
    char v15 = HIBYTE(v13->__r_.__value_.__r.__words[2]);
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__p[2]) < 0) {
      operator delete(__p[0]);
    }
    __p[0] = v14;
    __p[1] = v23.__r_.__value_.__l.__data_;
    *(void **)((char *)&__p[1] + 7) = *(void **)((char *)v23.__r_.__value_.__r.__words + 7);
    HIBYTE(__p[2]) = v15;
    if (SHIBYTE(buf[0].__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(buf[0].__r_.__value_.__l.__data_);
      char v15 = HIBYTE(__p[2]);
      float v14 = __p[0];
    }
    if (v15 >= 0) {
      uint64_t v16 = __p;
    }
    else {
      uint64_t v16 = (void **)v14;
    }
    sub_10014D518(*(void *)(a1 + 80), (uint64_t)v16);
  }
  uint64_t v17 = *(void *)(a1 + 80);
  if (*(uint64_t *)(v17 + 88) <= 0) {
    uint64_t v18 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v18 = *(void *)(v17 + 88);
  }
  sub_10003CC68(v17, v18);
  return 0;
}

void sub_1003BB6E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a60 < 0) {
    operator delete(a55);
  }
  _Unwind_Resume(a1);
}

void *sub_1003BBA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1003BE6D8((uint64_t)v6, a3);
  sub_1003BE33C(a1 + 8, a2, (uint64_t)v6);
  return sub_1003BE174(v6);
}

void sub_1003BBABC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003BE174((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003BBAD8()
{
  return 2;
}

uint64_t sub_1003BBAE0(uint64_t a1, uint64_t a2)
{
  return sub_1011F9554((uint64_t *)(a1 + 72), a2);
}

uint64_t sub_1003BBAE8(void *a1, void *a2)
{
  int v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v15);
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if (HIBYTE(v16)) {
      goto LABEL_3;
    }
LABEL_18:
    sub_101A5DB38(v4);
    sub_1001D7FD4();
  }
  std::string::size_type v12 = v15[1];
  operator delete(v15[0]);
  if (!v12) {
    goto LABEL_18;
  }
LABEL_3:
  uint64_t result = sub_100082064(a1 + 9);
  if (result)
  {
    a2[1] = *a2;
    sub_10010F274((uint64_t)v15);
    long long v6 = sub_100132EFC(&v16, (uint64_t)"SELECT * from ", 14);
    (*(void (**)(void **__return_ptr, void *))(*a1 + 64))(__p, a1);
    if ((SBYTE7(v14) & 0x80u) == 0) {
      char v7 = __p;
    }
    else {
      char v7 = (void **)__p[0];
    }
    if ((SBYTE7(v14) & 0x80u) == 0) {
      uint64_t v8 = BYTE7(v14);
    }
    else {
      uint64_t v8 = (uint64_t)__p[1];
    }
    int v9 = sub_100132EFC(v6, (uint64_t)v7, v8);
    sub_100132EFC(v9, (uint64_t)" ORDER BY id ASC", 16);
    if (SBYTE7(v14) < 0) {
      operator delete(__p[0]);
    }
    uint64_t v10 = a1[10];
    std::stringbuf::str();
    if ((SBYTE7(v14) & 0x80u) == 0) {
      uint64_t v11 = __p;
    }
    else {
      uint64_t v11 = (void **)__p[0];
    }
    sub_10014D518(v10, (uint64_t)v11);
  }
  return result;
}

void sub_1003BBF04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  if (v20) {
    (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
  }
  sub_101A129A8((uint64_t)&a20);
  _Unwind_Resume(a1);
}

uint64_t sub_1003BBF84(void *a1)
{
  uint64_t v3 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v16);
  if (SHIBYTE(v17[0]) < 0)
  {
    uint64_t v10 = v16[1];
    operator delete(v16[0]);
    if (v10)
    {
LABEL_3:
      if (sub_100082064(a1 + 9))
      {
        sub_10010F274((uint64_t)v16);
        int v4 = sub_100132EFC(v17, (uint64_t)"SELECT * FROM ", 14);
        (*(void (**)(void **__return_ptr, void *))(*a1 + 64))(__p, a1);
        if ((SBYTE7(v14) & 0x80u) == 0) {
          __int16 v5 = __p;
        }
        else {
          __int16 v5 = (void **)__p[0];
        }
        if ((SBYTE7(v14) & 0x80u) == 0) {
          uint64_t v6 = BYTE7(v14);
        }
        else {
          uint64_t v6 = (uint64_t)__p[1];
        }
        char v7 = sub_100132EFC(v4, (uint64_t)v5, v6);
        sub_100132EFC(v7, (uint64_t)" WHERE startTime > ? and startTime <= ? ORDER BY rowid ASC", 58);
        if (SBYTE7(v14) < 0) {
          operator delete(__p[0]);
        }
        uint64_t v8 = a1[10];
        std::stringbuf::str();
        if ((SBYTE7(v14) & 0x80u) == 0) {
          int v9 = __p;
        }
        else {
          int v9 = (void **)__p[0];
        }
        sub_10014D518(v8, (uint64_t)v9);
      }
      return 2;
    }
  }
  else if (HIBYTE(v17[0]))
  {
    goto LABEL_3;
  }
  sub_101A5DCA8(v3);
  uint64_t v15 = 0;
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  *(void **)((char *)v16
  v17[0] = v11;
  if (v18 < 0) {
    operator delete((void *)v17[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  std::ios::~ios();
  return 2;
}

void sub_1003BC3E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a20);
  _Unwind_Resume(a1);
}

uint64_t sub_1003BC464(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v2 = a1 + 112;
  uint64_t v4 = v2 - 40;
  uint64_t v11 = v2;
  (*(void (**)(void))(v3 + 16))();
  if (!sub_100082064(v4)) {
    sub_1003BE770(a1);
  }
  if (qword_102418FD0 != -1) {
    dispatch_once(&qword_102418FD0, &stru_1022ADB60);
  }
  __int16 v5 = qword_102418FD8;
  if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v6 = (void *)(a1 + 88);
    if (*(char *)(a1 + 111) < 0) {
      uint64_t v6 = (void *)*v6;
    }
    *(_DWORD *)buf = 68289282;
    *(_DWORD *)uint64_t v13 = 0;
    *(_WORD *)&v13[4] = 2082;
    *(void *)&v13[6] = "";
    __int16 v14 = 2082;
    uint64_t v15 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Database is already opened.\", \"name\":%{public, location:escape_only}s}", buf, 0x1Cu);
  }
  if (*(void *)(a1 + 216))
  {
    if (qword_102418FD0 != -1) {
      dispatch_once(&qword_102418FD0, &stru_1022ADB60);
    }
    char v7 = qword_102418FD8;
    if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_FAULT))
    {
      uint64_t v8 = *(void *)(a1 + 216);
      *(_DWORD *)buf = 134349056;
      *(void *)uint64_t v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "In memory buffer should have been empty! Instead it had a size of %{public}lu.", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022ADB60);
      }
      uint64_t v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "virtual BOOL CLActivityRecorderDb<VO2MaxRetrocomputeBodyMetrics, CLActivityDB::ClassBDataProtectionPolicy>::setDatabaseAccessible() [T = VO2MaxRetrocomputeBodyMetrics, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
  (*(void (**)(uint64_t))(*(void *)v11 + 24))(v11);
  return 1;
}

void sub_1003BCBE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_1003BCC18@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "");
}

__n128 sub_1003BCC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result = *(__n128 *)a3;
  long long v4 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a2 + 32) = *(_DWORD *)(a3 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v4;
  return result;
}

id *sub_1003BCC3C(uint64_t a1, long long *a2, char a3)
{
  v34[0] = (id)os_transaction_create();
  v34[1] = 0;
  if (*(double *)(a1 + 232) > 0.0
    && (*(unsigned int (**)(uint64_t, uint64_t, long long *))(*(void *)a1 + 136))(a1, a1 + 224, a2))
  {
    (*(void (**)(uint64_t, uint64_t, long long *))(*(void *)a1 + 72))(a1, a1 + 224, a2);
    return sub_1000E1098(v34);
  }
  if ((a3 & 1) == 0) {
    sub_10002B640(*(void *)(a1 + 80));
  }
  uint64_t v29 = 0;
  double v30 = 0.0;
  int v31 = 3;
  uint64_t v33 = 0;
  uint64_t v32 = 0;
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a1 + 104))(a1, &v29);
  if (v6 == 1)
  {
    (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)a1 + 120))(a1, a2, 1);
  }
  else
  {
    if (v6)
    {
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022ADB60);
      }
      __int16 v14 = qword_102418FD8;
      if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_FAULT, "Failed to insert record due to failure from reading the most recent entry.", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102418FD0 != -1) {
          dispatch_once(&qword_102418FD0, &stru_1022ADB60);
        }
        LOWORD(v35) = 0;
        uint64_t v15 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "virtual void CLActivityRecorderDb<VO2MaxRetrocomputeBodyMetrics, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStoreRecordUL(const T &, BOOL) [T = VO2MaxRetrocomputeBodyMetrics, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v15);
        if (v15 != (char *)buf) {
          free(v15);
        }
      }
      goto LABEL_43;
    }
    double v7 = *((double *)a2 + 1);
    double v8 = v30;
    double v9 = v7 - v30;
    if (v7 - v30 < 0.0) {
      double v9 = -(v7 - v30);
    }
    if (v9 > 604800.0)
    {
      if (qword_102418FD0 != -1) {
        dispatch_once(&qword_102418FD0, &stru_1022ADB60);
      }
      uint64_t v10 = qword_102418FD8;
      if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v11 = *((void *)a2 + 1);
        *(_DWORD *)buf = 134349312;
        double v40 = v30;
        __int16 v41 = 2050;
        uint64_t v42 = v11;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "#Notice Potential CM database inconsistency, time jump %{public}lf %{public}lf", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102418FD0 != -1) {
          dispatch_once(&qword_102418FD0, &stru_1022ADB60);
        }
        uint64_t v23 = *((void *)a2 + 1);
        int v35 = 134349312;
        double v36 = v30;
        __int16 v37 = 2050;
        uint64_t v38 = v23;
        float v24 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLActivityRecorderDb<VO2MaxRetrocomputeBodyMetrics, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStoreRecordUL(const T &, BOOL) [T = VO2MaxRetrocomputeBodyMetrics, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v24);
        if (v24 != (char *)buf) {
          free(v24);
        }
      }
      CLWriteStackshot();
      double v7 = *((double *)a2 + 1);
      double v8 = v30;
    }
    if (v7 < v8)
    {
      if (v8 - v7 < 10.0)
      {
        if (qword_102418FD0 != -1) {
          dispatch_once(&qword_102418FD0, &stru_1022ADB60);
        }
        std::string::size_type v12 = qword_102418FD8;
        if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
        {
          double v13 = *((double *)a2 + 1);
          *(_DWORD *)buf = 134217984;
          double v40 = v13;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "Entry being recorded has a startTime in the recent past.  Deleting records after %f.", buf, 0xCu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102418FD0 != -1) {
            dispatch_once(&qword_102418FD0, &stru_1022ADB60);
          }
          double v25 = *((double *)a2 + 1);
          int v35 = 134217984;
          double v36 = v25;
          float v26 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLActivityRecorderDb<VO2MaxRetrocomputeBodyMetrics, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStoreRecordUL(const T &, BOOL) [T = VO2MaxRetrocomputeBodyMetrics, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v26);
          if (v26 != (char *)buf) {
            free(v26);
          }
        }
        (*(void (**)(uint64_t, long long *))(*(void *)a1 + 88))(a1, a2);
        goto LABEL_42;
      }
      double v16 = v7 - v8;
      double v17 = *(float *)(a1 + 136);
      if (qword_102418FD0 != -1)
      {
        double v28 = *(float *)(a1 + 136);
        dispatch_once(&qword_102418FD0, &stru_1022ADB60);
        double v17 = v28;
      }
      double v18 = v16 - v17;
      float v19 = qword_102418FD8;
      if (os_log_type_enabled((os_log_t)qword_102418FD8, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 134217984;
        double v40 = v18;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Entry being recorded has a startTime in the substantial past.  Shift records by %f.", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102418FD0 != -1) {
          dispatch_once(&qword_102418FD0, &stru_1022ADB60);
        }
        int v35 = 134217984;
        double v36 = v18;
        int v27 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLActivityRecorderDb<VO2MaxRetrocomputeBodyMetrics, CLActivityDB::ClassBDataProtectionPolicy>::sanitizeAndStoreRecordUL(const T &, BOOL) [T = VO2MaxRetrocomputeBodyMetrics, DataProtectionPolicy = CLActivityDB::ClassBDataProtectionPolicy]", "%s\n", v27);
        if (v27 != (char *)buf) {
          free(v27);
        }
      }
      (*(void (**)(uint64_t, double))(*(void *)a1 + 96))(a1, v18);
    }
    (*(void (**)(uint64_t, uint64_t *, uint64_t, long long *))(*(void *)a1 + 144))(a1, &v29, a1 + 224, a2);
    (*(void (**)(uint64_t, long long *, uint64_t))(*(void *)a1 + 120))(a1, a2, 1);
  }
LABEL_42:
  long long v20 = *a2;
  long long v21 = a2[1];
  *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 8);
  *(_OWORD *)(a1 + 224) = v20;
  *(_OWORD *)(a1 + 240) = v21;
LABEL_43:
  if ((a3 & 1) == 0) {
    sub_100028FB4(*(void *)(a1 + 80));
  }
  return sub_1000E1098(v34);
}

void sub_1003BD458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1000E1098((id *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003BD484(void *a1, uint64_t a2)
{
  long long v4 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v16);
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if (HIBYTE(v17)) {
      goto LABEL_3;
    }
LABEL_18:
    double v13 = (_Unwind_Exception *)sub_101A5DE18(v4);
    if ((char)v15 < 0) {
      operator delete(__p[0]);
    }
    sub_101A129A8((uint64_t)v16);
    _Unwind_Resume(v13);
  }
  std::string::size_type v12 = v16[1];
  operator delete(v16[0]);
  if (!v12) {
    goto LABEL_18;
  }
LABEL_3:
  uint64_t result = sub_100082064(a1 + 9);
  if (result)
  {
    (*(void (**)(void *, uint64_t, uint64_t))(*a1 + 120))(a1, a2, 1);
    sub_10010F274((uint64_t)v16);
    int v6 = sub_100132EFC(&v17, (uint64_t)"DELETE FROM ", 12);
    (*(void (**)(void **__return_ptr, void *))(*a1 + 64))(__p, a1);
    if ((v15 & 0x80u) == 0) {
      double v7 = __p;
    }
    else {
      double v7 = (void **)__p[0];
    }
    if ((v15 & 0x80u) == 0) {
      uint64_t v8 = v15;
    }
    else {
      uint64_t v8 = (uint64_t)__p[1];
    }
    double v9 = sub_100132EFC(v6, (uint64_t)v7, v8);
    sub_100132EFC(v9, (uint64_t)" WHERE startTime > ?", 20);
    if ((char)v15 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v10 = a1[10];
    std::stringbuf::str();
    if ((v15 & 0x80u) == 0) {
      uint64_t v11 = __p;
    }
    else {
      uint64_t v11 = (void **)__p[0];
    }
    sub_10014D518(v10, (uint64_t)v11);
  }
  return result;
}

uint64_t sub_1003BD7F8(void *a1)
{
  uint64_t v2 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v14);
  if ((SHIBYTE(v15) & 0x80000000) == 0)
  {
    if (HIBYTE(v15)) {
      goto LABEL_3;
    }
LABEL_18:
    uint64_t v11 = (_Unwind_Exception *)sub_101A5DF88(v2);
    if ((char)v13 < 0) {
      operator delete(__p[0]);
    }
    sub_101A129A8((uint64_t)v14);
    _Unwind_Resume(v11);
  }
  uint64_t v10 = v14[1];
  operator delete(v14[0]);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_3:
  uint64_t result = sub_100082064(a1 + 9);
  if (result)
  {
    sub_10010F274((uint64_t)v14);
    long long v4 = sub_100132EFC(&v15, (uint64_t)"UPDATE ", 7);
    (*(void (**)(void **__return_ptr, void *))(*a1 + 64))(__p, a1);
    if ((v13 & 0x80u) == 0) {
      __int16 v5 = __p;
    }
    else {
      __int16 v5 = (void **)__p[0];
    }
    if ((v13 & 0x80u) == 0) {
      uint64_t v6 = v13;
    }
    else {
      uint64_t v6 = (uint64_t)__p[1];
    }
    double v7 = sub_100132EFC(v4, (uint64_t)v5, v6);
    sub_100132EFC(v7, (uint64_t)" SET startTime = startTime + ?", 30);
    if ((char)v13 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v8 = a1[10];
    std::stringbuf::str();
    if ((v13 & 0x80u) == 0) {
      double v9 = __p;
    }
    else {
      double v9 = (void **)__p[0];
    }
    sub_10014D518(v8, (uint64_t)v9);
  }
  return result;
}

uint64_t sub_1003BDB24(void *a1)
{
  uint64_t v2 = (*(void *(**)(void **__return_ptr))(*a1 + 64))(v15);
  if ((SHIBYTE(v16) & 0x80000000) == 0)
  {
    if (HIBYTE(v16)) {
      goto LABEL_3;
    }
LABEL_18:
    uint64_t v11 = (_Unwind_Exception *)sub_101A5E0F8(v2);
    if (v12) {
      sub_101A5DB04();
    }
    sub_101A129A8((uint64_t)v15);
    _Unwind_Resume(v11);
  }
  uint64_t v10 = v15[1];
  operator delete(v15[0]);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_3:
  if (sub_100082064(a1 + 9))
  {
    sub_10010F274((uint64_t)v15);
    uint64_t v3 = sub_100132EFC(&v16, (uint64_t)"SELECT * FROM ", 14);
    (*(void (**)(void **__return_ptr, void *))(*a1 + 64))(__p, a1);
    if ((v14 & 0x80u) == 0) {
      long long v4 = __p;
    }
    else {
      long long v4 = (void **)__p[0];
    }
    if ((v14 & 0x80u) == 0) {
      uint64_t v5 = v14;
    }
    else {
      uint64_t v5 = (uint64_t)__p[1];
    }
    uint64_t v6 = sub_100132EFC(v3, (uint64_t)v4, v5);
    sub_100132EFC(v6, (uint64_t)" ORDER BY ROWID DESC LIMIT 1", 28);
    if ((char)v14 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v7 = a1[10];
    std::stringbuf::str();
    if ((v14 & 0x80u) == 0) {
      uint64_t v8 = __p;
    }
    else {
      uint64_t v8 = (void **)__p[0];
    }
    sub_10014D518(v7, (uint64_t)v8);
  }
  return 2;
}

uint64_t sub_1003BDE4C(uint64_t a1)
{
  return sub_1003BC464(a1 - 72);
}

void sub_1003BDE54(id a1)
{
  qword_102419288 = (uint64_t)os_log_create("com.apple.locationd.Motion", "ContextConfiguration");
}

void *sub_1003BDE84(void *a1)
{
  *a1 = off_1022ADAD8;
  sub_1003BE1F8(a1 + 1);
  return a1;
}

void sub_1003BDEC8(void *a1)
{
  *a1 = off_1022ADAD8;
  sub_1003BE1F8(a1 + 1);

  operator delete();
}

void *sub_1003BDF2C(void *a1)
{
  *a1 = &off_1022ADB50;
  a1[1] = 0;
  a1[5] = 0;
  uint64_t v2 = a1 + 6;
  sub_100513074(a1 + 6, "BasicDataProtectionPolicy", 0, 1);
  (*(void (**)(void *))(*v2 + 16))(v2);
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver(DarwinNotifyCenter, a1, (CFNotificationCallback)sub_1003BE098, @"com.apple.mobile.keybagd.lock_status", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  (*(void (**)(void *))(*v2 + 24))(v2);
  return a1;
}

void sub_1003BE028(_Unwind_Exception *a1)
{
  sub_10051310C(v2);
  sub_1003BE174((void *)(v1 + 16));
  _Unwind_Resume(a1);
}

void sub_1003BE060(void *a1)
{
  sub_1003BE1F8(a1);

  operator delete();
}

void sub_1003BE098(uint64_t a1, void *a2)
{
  int v3 = MKBGetDeviceLockState();
  if (a2[5])
  {
    uint64_t v4 = a2[1];
    if (v4)
    {
      if (sub_1003BE118((uint64_t)(a2 + 2), v4, v3 == 0))
      {
        DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
        CFNotificationCenterRemoveObserver(DarwinNotifyCenter, a2, @"com.apple.mobile.keybagd.lock_status", 0);
      }
    }
  }
}

uint64_t sub_1003BE118(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = a2;
  char v5 = a3;
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    sub_10015E48C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *, char *))(*(void *)v3 + 48))(v3, &v6, &v5);
}

void *sub_1003BE174(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void *sub_1003BE1F8(void *a1)
{
  *a1 = &off_1022ADB50;
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterRemoveObserver(DarwinNotifyCenter, a1, @"com.apple.mobile.keybagd.lock_status", 0);
  sub_10051310C(a1 + 6);
  sub_1003BE174(a1 + 2);
  return a1;
}

void sub_1003BE264(id a1)
{
  qword_102418FD8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Motion");
}

uint64_t sub_1003BE294(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 51;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 102;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_1000D7EB4((uint64_t)a1);
}

uint64_t sub_1003BE33C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1 + 48;
  (*(void (**)(uint64_t))(*(void *)(a1 + 48) + 16))(a1 + 48);
  *(void *)(v5 - 40) = a2;
  sub_1003BE3F8((void *)(v5 - 32), a3);
  return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 24))(v5);
}

void sub_1003BE3E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1019DB560((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_1003BE3F8(void *a1, uint64_t a2)
{
  sub_1003BE6D8((uint64_t)v4, a2);
  sub_1003BE46C(v4, a1);
  sub_1003BE174(v4);
  return a1;
}

void *sub_1003BE46C(void *result, void *a2)
{
  if (a2 != result)
  {
    uint64_t v3 = result;
    unint64_t v4 = (void *)result[3];
    uint64_t v5 = (void *)a2[3];
    if (v4 == result)
    {
      if (v5 == a2)
      {
        (*(void (**)(void *, void *))(*result + 24))(result, v6);
        (*(void (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = 0;
        (*(void (**)(void, void *))(*(void *)a2[3] + 24))(a2[3], v3);
        (*(void (**)(void))(*(void *)a2[3] + 32))(a2[3]);
        a2[3] = 0;
        v3[3] = v3;
        (*(void (**)(void *, void *))(v6[0] + 24))(v6, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void *))(v6[0] + 32))(v6);
      }
      else
      {
        (*(void (**)(void *, void *))(*result + 24))(result, a2);
        uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)v3[3] + 32))(v3[3]);
        v3[3] = a2[3];
      }
      a2[3] = a2;
    }
    else if (v5 == a2)
    {
      (*(void (**)(void *, void *))(*a2 + 24))(a2, result);
      uint64_t result = (void *)(*(uint64_t (**)(void))(*(void *)a2[3] + 32))(a2[3]);
      a2[3] = v3[3];
      v3[3] = v3;
    }
    else
    {
      result[3] = v5;
      a2[3] = v4;
    }
  }
  return result;
}

void sub_1003BE6CC(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

uint64_t sub_1003BE6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1003BE770(uint64_t a1)
{
  uint64_t v1 = a1 + 72;
  sub_100134750(&__p, "");
  sub_1011F8FF8(v1);
}

void sub_1003BE7F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003BE80C(id a1)
{
  qword_102419038 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Pedometer");
}

uint64_t sub_1003BE83C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = (sqlite3_stmt *)sub_10014D19C(*a2);
  int v7 = sqlite3_step(v6);
  if (v7 == 101) {
    return 1;
  }
  if (v7 != 100) {
    return 2;
  }
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a1 + 128))(a1, a2, a3);
  return 0;
}

BOOL sub_1003BE8CC()
{
  uint64_t v1 = qword_102418FD8;
  return os_log_type_enabled(v1, OS_LOG_TYPE_FAULT);
}

BOOL sub_1003BE8EC()
{
  uint64_t v2 = *(NSObject **)(v0 + 4056);
  return os_log_type_enabled(v2, OS_LOG_TYPE_INFO);
}

BOOL sub_1003BE908()
{
  uint64_t v2 = *(NSObject **)(v0 + 4056);
  return os_signpost_enabled(v2);
}

uint64_t sub_1003BE920(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_1003BE954(uint64_t a1)
{
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 112));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 64));

  std::mutex::~mutex((std::mutex *)a1);
}

uint64_t sub_1003BE998(uint64_t a1)
{
  return a1;
}

void sub_1003BE9C4()
{
}

void sub_1003BEA20()
{
}

void sub_1003BEA44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_1022ADBB0;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a3;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0x40D5180000000000;
  uint64_t v3 = (void *)(a1 + 32);
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  sub_1000C7F88(buf);
  sub_1000A699C(*(uint64_t *)buf, "CleanupInterval", v3);
  if (v5) {
    sub_1000DB0A0(v5);
  }
  sub_1007E0344();
}

void sub_1003BEF84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  uint64_t v28 = v25[9];
  v25[9] = 0;
  if (v28) {
    (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
  }
  uint64_t v29 = v25[8];
  v25[8] = 0;
  if (v29) {
    (*(void (**)(uint64_t))(*(void *)v29 + 8))(v29);
  }
  uint64_t v30 = v25[7];
  v25[7] = 0;
  if (v30) {
    (*(void (**)(uint64_t))(*(void *)v30 + 8))(v30);
  }
  uint64_t v31 = v25[6];
  v25[6] = 0;
  if (v31) {
    (*(void (**)(uint64_t))(*(void *)v31 + 8))(v31);
  }
  uint64_t v32 = *v26;
  *float v26 = 0;
  if (v32) {
    (*(void (**)(uint64_t))(*(void *)v32 + 8))(v32);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003BF0DC(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022ADC10);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLCoarseCellTilesManager::onClientNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022ADC10);
    }
    double v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLCoarseCellTilesManager::onClientNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100D10108(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003BF2A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003BF2C8(uint64_t a1, int *a2, _DWORD *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022ADC10);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLCoarseCellTilesManager::onDataProtectionNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022ADC10);
    }
    double v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLCoarseCellTilesManager::onDataProtectionNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100D0F5AC(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003BF494(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003BF4B4(uint64_t a1, int *a2, char *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022ADC10);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLCoarseCellTilesManager::onCompanionNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022ADC10);
    }
    double v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLCoarseCellTilesManager::onCompanionNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100D10C1C(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003BF680(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003BF6A0(uint64_t a1, int *a2, int *a3, uint64_t a4)
{
  CLProfilingIdentify();
  [objc_msgSend(*(id *)(a4 + 32), "silo") assertInside];
  if (qword_102419580 != -1) {
    dispatch_once(&qword_102419580, &stru_1022ADC10);
  }
  if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
  {
    char v11 = 1;
    uint64_t v8 = _os_activity_create((void *)&_mh_execute_header, "CL: CLCoarseCellTilesManager::onStatusNotification", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
    os_activity_scope_enter(v8, &state);

    if (qword_102419580 != -1) {
      dispatch_once(&qword_102419580, &stru_1022ADC10);
    }
    double v9 = qword_102419588;
    if (os_log_type_enabled((os_log_t)qword_102419588, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289538;
      int v13 = 0;
      __int16 v14 = 2082;
      uint64_t v15 = "";
      __int16 v16 = 2082;
      uint64_t v17 = "activity";
      __int16 v18 = 2050;
      uint64_t v19 = a4;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLCoarseCellTilesManager::onStatusNotification\", \"event\":%{public, location:escape_only}s, \"this\":\"%{public}p\"}", buf, 0x26u);
    }
  }
  else
  {
    char v11 = 0;
  }
  sub_100D0FDCC(a4, a1, a2, a3);
  if (v11) {
    os_activity_scope_leave(&state);
  }
}

void sub_1003BF86C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_activity_scope_state_s state, char a11)
{
  if (a11) {
    os_activity_scope_leave(&state);
  }
  _Unwind_Resume(exception_object);
}

id sub_1003BF88C(uint64_t a1)
{
  return sub_100D1116C(*(void *)(*(void *)(a1 + 32) + 8));
}

uint64_t sub_1003BF898(uint64_t a1)
{
  *(void *)a1 = off_1022ADBB0;
  [*(id *)(a1 + 24) invalidate];

  *(void *)(a1 + 24) = 0;
  uint64_t v2 = *(void **)(a1 + 80);
  if (v2)
  {

    *(void *)(a1 + 80) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  return a1;
}

void sub_1003BF9F4(uint64_t a1)
{
  sub_1003BF898(a1);

  operator delete();
}

uint64_t sub_1003BFA30()
{
  sub_100103240();

  return sub_10010145C();
}

uint64_t sub_1003BFA58()
{
  return sub_1001073D0() & 1;
}

id sub_1003BFA78(void *a1)
{
  uint64_t v2 = (CLTileDownloadSchedulingClient *)a1[10];
  if (!v2)
  {
    uint64_t v3 = [CLTileDownloadSchedulingClient alloc];
    uint64_t v4 = a1[1];
    if (v4) {
      uint64_t v5 = v4 + 112;
    }
    else {
      uint64_t v5 = 0;
    }
    uint64_t v2 = [(CLTileDownloadSchedulingClient *)v3 initWithUniverse:a1[2] andDelegate:v5];
    a1[10] = v2;
  }

  return (id)[(CLTileDownloadSchedulingClient *)v2 scheduleTileDownloadIfNecessary];
}

id sub_1003BFAD4(uint64_t a1)
{
  id v1 = [[objc_msgSend(*(id *)(a1 + 16), "vendor") proxyForService:@"CLClientManager"];
  if (byte_10247A957 >= 0) {
    uint64_t v2 = &qword_10247A940;
  }
  else {
    uint64_t v2 = (uint64_t *)qword_10247A940;
  }
  uint64_t v3 = +[NSString stringWithUTF8String:v2];

  return [v1 resetNotificationConsumedForIdentifier:v3];
}

void sub_1003BFB44(id a1)
{
  qword_102419588 = (uint64_t)os_log_create("com.apple.locationd.Core", "Notifier");
}

void sub_1003BFB74(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

uint64_t sub_1003BFBA4(uint64_t a1, int *a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 8 * a3;
    do
    {
      sub_1007329F8((uint64_t **)a1, v4, a2, (uint64_t *)a2);
      a2 += 2;
      v6 -= 8;
    }
    while (v6);
  }
  return a1;
}

void sub_1003BFC0C(_Unwind_Exception *a1)
{
  sub_1000F5BB0(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

void sub_1003BFC24()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241AD20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241AD20))
  {
    qword_10241AD08 = 0;
    qword_10241AD10 = 0;
    qword_10241AD18 = 0;
    __cxa_atexit((void (*)(void *))sub_1003BE920, &qword_10241AD08, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241AD20);
  }
}

void sub_1003BFCA4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10241ADD0))
  {
    std::__shared_mutex_base::__shared_mutex_base(&stru_10241AD28);
    __cxa_atexit((void (*)(void *))sub_1003BE954, &stru_10241AD28, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10241ADD0);
  }
}

void sub_1003BFD34(_Unwind_Exception *a1)
{
}

void sub_1003BFD4C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10241ADF0, memory_order_acquire) & 1) == 0)
  {
    if (__cxa_guard_acquire(&qword_10241ADF0))
    {
      uint64_t v1 = 0x7FFFFFFF00000000;
      v0[2] = xmmword_101D1CB88;
      v0[3] = unk_101D1CB98;
      v0[4] = xmmword_101D1CBA8;
      v0[0] = xmmword_101D1CB68;
      v0[1] = unk_101D1CB78;
      sub_1003BFBA4((uint64_t)&unk_10241ADD8, (int *)v0, 11);
      __cxa_atexit((void (*)(void *))sub_1003BE998, &unk_10241ADD8, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10241ADF0);
    }
  }
}

void sub_1003BFE2C(_Unwind_Exception *a1)
{
}

uint64_t sub_1003BFE44()
{
  sub_100134750(qword_10247A928, "t");
  __cxa_atexit((void (*)(void *))&std::string::~string, qword_10247A928, (void *)&_mh_execute_header);
  sub_100134750(&qword_10247A940, "CoarseCellTilesManager");

  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10247A940, (void *)&_mh_execute_header);
}

uint64_t sub_1003BFEDC(double a1, double a2)
{
  if (a2 > 134.82 || a2 < 73.48 || a1 < 18.15 || a1 > 53.6) {
    return 0;
  }
  if (a1 <= 42.3 && a2 >= 107.1 && a2 <= 119.3
    || a1 <= 42.3 && a1 >= 25.3 && a2 <= 123.45 && a2 >= 119.3
    || a1 >= 42.3 && a2 <= 129.2 && a1 <= 49.34 && a2 >= 119.93
    || a2 <= 107.1 && a2 >= 98.76 && a1 >= 23.39 && a1 <= 41.58
    || a1 <= 42.6 && a2 <= 98.76 && a1 >= 28.39 && a2 >= 85.19
    || a2 <= 90.66 && a2 >= 80.81 && a1 >= 42.6 && a1 <= 45.2
    || a2 <= 101.54 && a2 >= 99.4 && a1 >= 22.06 && a1 <= 23.39
    || a2 <= 119.93 && a1 >= 42.3 && a1 <= 44.74 && a2 >= 111.924
    || a2 <= 119.93 && a2 >= 116.55 && a1 >= 44.74 && a1 <= 46.35
    || a2 <= 133.09 && a2 >= 129.2 && a1 >= 45.23 && a1 <= 47.66
    || a2 <= 125.95 && a2 >= 120.78 && a1 >= 49.34 && a1 <= 52.86
    || a2 >= 123.45 && a1 <= 42.4 && a2 <= 126.51 && a1 >= 41.38
    || a2 <= 85.19 && a2 >= 79.24 && a1 >= 31.07 && a1 <= 41.73
    || a2 <= 85.19 && a1 <= 42.6 && a1 >= 41.73 && a2 >= 80.28
    || a2 >= 123.45 && a1 >= 40.9 && a1 <= 41.38 && a2 <= 125.97
    || a2 >= 123.45 && a1 >= 40.47 && a1 <= 40.9 && a2 <= 125.0
    || a2 <= 120.15 && a2 >= 119.2 && a1 >= 24.78 && a1 <= 25.4)
  {
    return 1;
  }
  if ((a2 > 108.15 || a2 < 97.511 || a1 < 21.14 || a1 > 28.39)
    && (a2 > 97.511 || a2 < 78.33 || a1 < 27.29 || a1 > 32.7)
    && (a1 < 32.7 || a2 > 79.24 || a1 > 41.73)
    && (a1 > 49.16 || a2 > 96.06 || a1 < 41.73 || a2 < 79.24)
    && (a1 > 45.45 || a2 < 96.06 || a2 > 115.52 || a1 < 41.38)
    && (a1 < 39.6 || a2 < 115.52)
    && (a1 < 21.7 || a1 > 25.3 || a2 > 122.5 || a2 < 119.3))
  {
    return 0;
  }
  else
  {
    return 2;
  }
}

uint64_t sub_1003C0494(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = (std::__shared_weak_count *)a4[1];
  uint64_t v39 = *a4;
  double v40 = v10;
  if (v10) {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  char v11 = (std::__shared_weak_count *)a5[1];
  uint64_t v37 = *a5;
  uint64_t v38 = v11;
  if (v11) {
    atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v12 = (std::__shared_weak_count *)a6[1];
  uint64_t v35 = *a6;
  double v36 = v12;
  if (v12) {
    atomic_fetch_add_explicit(&v12->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  v34[0] = xmmword_10247A958;
  v34[1] = unk_10247A968;
  id v34[2] = xmmword_10247A978;
  sub_100D6AEB4(a1, a2, 9, &v39, &v37, &v35, a8, a7, v34);
  if (v36) {
    sub_1000DB0A0(v36);
  }
  if (v38) {
    sub_1000DB0A0(v38);
  }
  if (v40) {
    sub_1000DB0A0(v40);
  }
  *(void *)a1 = off_1022ADC60;
  *(void *)(a1 + 352) = *a3;
  uint64_t v13 = a3[1];
  *(void *)(a1 + 360) = v13;
  if (v13) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v13 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 384) = 0;
  __int16 v14 = (double **)(a1 + 408);
  uint64_t v15 = (double *)(a1 + 416);
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 408) = a1 + 416;
  *(void *)(a1 + 440) = 0;
  sub_1000C7F88(&v33);
  char v16 = sub_1000A699C(v33, "PoiHarvestScanInterval", (void *)(a1 + 376));
  if (*((void *)&v33 + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&v33 + 1));
  }
  if ((v16 & 1) == 0) {
    *(void *)(a1 + 376) = 0x4014000000000000;
  }
  *(void *)(a1 + 368) = [*(id *)(a1 + 72) classifyingStoreForHarvester:9];
  *(void *)(a1 + 432) = objc_opt_new();
  *(void *)(a1 + 400) = objc_opt_new();
  *(void *)(a1 + 392) = objc_opt_new();
  *(void *)(a1 + 448) = objc_opt_new();
  long long v33 = 0uLL;
  sub_1000C7F88(&v32);
  char v17 = sub_1000A699C(v32, "PoiHarvestPassbookBefore", &v33);
  if (*((void *)&v32 + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&v32 + 1));
  }
  if ((v17 & 1) == 0) {
    *(void *)&long long v33 = 0x403E000000000000;
  }
  sub_1000C7F88(&v32);
  char v18 = sub_1000A699C(v32, "PoiHarvestPassbookAfter", (char *)&v33 + 8);
  if (*((void *)&v32 + 1)) {
    sub_1000DB0A0(*((std::__shared_weak_count **)&v32 + 1));
  }
  if ((v18 & 1) == 0) {
    *((void *)&v33 + 1) = 0x403E000000000000;
  }
  if (*(double *)&v33 < 0.0)
  {
    sub_101A5E268(&v32, *(double *)&v33);
LABEL_53:
    uint64_t result = abort_report_np();
LABEL_57:
    __break(1u);
    return result;
  }
  if (*((double *)&v33 + 1) < 0.0)
  {
    sub_101A5E3BC(&v32, *((double *)&v33 + 1));
    goto LABEL_53;
  }
  LODWORD(v30) = 1;
  *(void *)&long long v32 = &v30;
  uint64_t v19 = sub_1000C5658((uint64_t **)(a1 + 408), (int *)&v30, (uint64_t)&unk_101D0B290, (_DWORD **)&v32);
  *(_OWORD *)(v19 + 5) = v33;
  long long v32 = 0uLL;
  sub_1000C7F88(&v30);
  char v20 = sub_1000A699C((uint64_t)v30, "PoiHarvestVisitBefore", &v32);
  if (v31) {
    sub_1000DB0A0(v31);
  }
  if ((v20 & 1) == 0) {
    *(void *)&long long v32 = 0x403E000000000000;
  }
  sub_1000C7F88(&v30);
  char v21 = sub_1000A699C((uint64_t)v30, "PoiHarvestVisitAfter", (char *)&v32 + 8);
  if (v31) {
    sub_1000DB0A0(v31);
  }
  if ((v21 & 1) == 0) {
    *((void *)&v32 + 1) = 0x4066800000000000;
  }
  if (*(double *)&v32 < 0.0)
  {
    sub_101A5E510(&v30, *(double *)&v32);
LABEL_56:
    uint64_t result = abort_report_np();
    goto LABEL_57;
  }
  if (*((double *)&v32 + 1) < 0.0)
  {
    sub_101A5E664(&v30, *((double *)&v32 + 1));
    goto LABEL_56;
  }
  int v29 = 2;
  uint64_t v30 = &v29;
  int64_t v22 = sub_1000C5658((uint64_t **)(a1 + 408), &v29, (uint64_t)&unk_101D0B290, &v30);
  *(_OWORD *)(v22 + 5) = v32;
  uint64_t v23 = *v14;
  if (*v14 != v15)
  {
    double v24 = *(double *)(a1 + 440);
    do
    {
      if (v24 <= v23[5]) {
        double v24 = v23[5];
      }
      double v25 = (double *)*((void *)v23 + 1);
      if (v25)
      {
        do
        {
          float v26 = v25;
          double v25 = *(double **)v25;
        }
        while (v25);
      }
      else
      {
        do
        {
          float v26 = (double *)*((void *)v23 + 2);
          BOOL v27 = *(void *)v26 == (void)v23;
          uint64_t v23 = v26;
        }
        while (!v27);
      }
      uint64_t v23 = v26;
    }
    while (v26 != v15);
    *(double *)(a1 + 440) = v24;
  }
  return a1;
}

void sub_1003C08E0(_Unwind_Exception *a1)
{
  sub_1000F5BB0(v2, *(void **)(v1 + 416));
  uint64_t v4 = *(std::__shared_weak_count **)(v1 + 360);
  if (v4) {
    sub_1000DB0A0(v4);
  }
  sub_1003C0998(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1003C0998(uint64_t a1)
{
  *(void *)a1 = off_1022F58E8;
  uint64_t v2 = *(void **)(a1 + 240);
  if (v2)
  {
    *(void *)(a1 + 248) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 199) < 0) {
    operator delete(*(void **)(a1 + 176));
  }
  if (*(char *)(a1 + 175) < 0) {
    operator delete(*(void **)(a1 + 152));
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 64);
  if (v3) {
    sub_1000DB0A0(v3);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 48);
  if (v4) {
    sub_1000DB0A0(v4);
  }
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 32);
  if (v5) {
    sub_1000DB0A0(v5);
  }
  return a1;
}

uint64_t sub_1003C0A30(uint64_t a1)
{
  *(void *)a1 = off_1022ADC60;

  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 392) = 0;

  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 432) = 0;
  sub_1000F5BB0(a1 + 408, *(void **)(a1 + 416));
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 360);
  if (v2) {
    sub_1000DB0A0(v2);
  }

  return sub_1003C0998(a1);
}

void sub_1003C0AD0(uint64_t a1)
{
  sub_1003C0A30(a1);

  operator delete();
}

id sub_1003C0B08(uint64_t a1)
{
  if (qword_102419560 != -1) {
    dispatch_once(&qword_102419560, &stru_1022ADD90);
  }
  uint64_t v2 = qword_102419568;
  if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEBUG))
  {
    v4[0] = 68289282;
    v4[1] = 0;
    __int16 v5 = 2082;
    uint64_t v6 = "";
    __int16 v7 = 2050;
    uint64_t v8 = 9;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"shutdown\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld}", (uint8_t *)v4, 0x1Cu);
  }
  return [*(id *)(a1 + 448) removeAllObjects];
}

uint64_t sub_1003C0BFC(uint64_t a1, uint64_t a2)
{
  sub_1000E9354(v11);
  uint64_t v4 = (_OWORD *)(a1 + 280);
  long long v5 = unk_10247A968;
  _OWORD *v4 = xmmword_10247A958;
  v4[1] = v5;
  *(_OWORD *)((char *)v4 + 25) = unk_10247A971;
  if (sub_100012960(a2, "Poi", v11)) {
    sub_1012B77D8((uint64_t)v4, (uint64_t)v11);
  }
  if (qword_102419560 != -1) {
    dispatch_once(&qword_102419560, &stru_1022ADD90);
  }
  uint64_t v6 = qword_102419568;
  if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_INFO))
  {
    sub_1012B7520();
    if (v10 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    *(_DWORD *)buf = 68289539;
    int v13 = 0;
    __int16 v14 = 2082;
    uint64_t v15 = "";
    __int16 v16 = 2050;
    uint64_t v17 = 9;
    __int16 v18 = 2081;
    uint64_t v19 = p_p;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"harvest-apply-rules\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld, \"rules\":%{private, location:escape_only}s}", buf, 0x26u);
    if (v10 < 0) {
      operator delete(__p);
    }
  }
  return sub_10013F3C4(v11);
}

void sub_1003C0D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10013F3C4(va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003C0DA4(uint64_t a1)
{
  if (((*(uint64_t (**)(void))(**(void **)(a1 + 56) + 72))(*(void *)(a1 + 56)) & 2) != 0) {
    return ((*(unsigned int (**)(void))(**(void **)(a1 + 56) + 72))(*(void *)(a1 + 56)) >> 3) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1003C0E24(uint64_t a1)
{
  id v9 = objc_alloc_init((Class)CLPPoiCollectionRequest);
  [v9 setMeta:+[CLPMeta meta](CLPMeta, "meta")];
  id v2 = [*(id *)(a1 + 368) homeArchive];
  if ([v2 count])
  {
    [v2 overwritePrimaryObject:v9];
    uint64_t v3 = [[CLHUploadRequest alloc] initWithArchive:v2];
    -[CLHUploadRequest setEndpoint:](v3, "setEndpoint:", [objc_msgSend(objc_msgSend(*(id *)(a1 + 80), "endpointSelector"), "poiEndpoint")]);
    [*(id *)(a1 + 80) submitRequest:v3];
  }
  id v4 = [*(id *)(a1 + 368) workArchive];
  if ([v4 count])
  {
    [v4 overwritePrimaryObject:v9];
    long long v5 = [[CLHUploadRequest alloc] initWithArchive:v4];
    -[CLHUploadRequest setEndpoint:](v5, "setEndpoint:", [objc_msgSend(*(id *)(a1 + 80), "endpointSelector") poiEndpoint]);
    [*(id *)(a1 + 80) submitRequest:v5];
  }
  id v6 = [*(id *)(a1 + 368) mainArchive];
  if ([v6 count])
  {
    [v6 overwritePrimaryObject:v9];
    __int16 v7 = [[CLHUploadRequest alloc] initWithArchive:v6];
    -[CLHUploadRequest setEndpoint:[objc_msgSend(*(id *)(a1 + 80), "endpointSelector") poiEndpoint]];
    [*(id *)(a1 + 80) submitRequest:v7];
  }

  return _objc_release_x1();
}

BOOL sub_1003C0FAC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 432) count];
  if (v1)
  {
    if (qword_102419560 != -1) {
      dispatch_once(&qword_102419560, &stru_1022ADD90);
    }
    id v2 = qword_102419568;
    if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEBUG))
    {
      v4[0] = 68289282;
      v4[1] = 0;
      __int16 v5 = 2082;
      id v6 = "";
      __int16 v7 = 2050;
      uint64_t v8 = 9;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"not ready to upload: still has active transactions.\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld}", (uint8_t *)v4, 0x1Cu);
    }
  }
  return v1 == 0;
}

void sub_1003C10B0(uint64_t a1, void *a2)
{
  [*(id *)(a1 + 368) writeSecondaryObject:a2 collectedAt:[objc_msgSend(objc_msgSend(a2, "locations"), "firstObject")] toField:2];
  ++*(_DWORD *)(a1 + 208);
  if (qword_102419560 != -1) {
    dispatch_once(&qword_102419560, &stru_1022ADD90);
  }
  id v4 = qword_102419568;
  if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEBUG))
  {
    v5[0] = 68289539;
    v5[1] = 0;
    __int16 v6 = 2082;
    __int16 v7 = "";
    __int16 v8 = 2050;
    uint64_t v9 = 9;
    __int16 v10 = 2113;
    char v11 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"persisting poi harvest\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld, \"harvest\":%{private, location:escape_only}@}", (uint8_t *)v5, 0x26u);
  }
}

uint64_t sub_1003C11E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = sub_10012FD50(a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2 + 24))(v2, v3, 7);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = sub_10012FD50(a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v4 + 24))(v4, v5, 6);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = sub_10012FD50(a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 24))(v6, v7, 1);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = sub_10012FD50(a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v8 + 24))(v8, v9, 8);
  return 1;
}

uint64_t sub_1003C12F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = sub_10012FD50(a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v2 + 32))(v2, v3, 7);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = sub_10012FD50(a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v4 + 32))(v4, v5, 6);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = sub_10012FD50(a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 32))(v6, v7, 1);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = sub_10012FD50(a1);
  __int16 v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v8 + 32);

  return v10(v8, v9, 8);
}

id sub_1003C140C(uint64_t a1)
{
  return [*(id *)(a1 + 368) count];
}

id sub_1003C1414(uint64_t a1)
{
  double v2 = (*(double (**)(void))(**(void **)(a1 + 56) + 64))(*(void *)(a1 + 56));
  double v3 = v2 - (*(double (**)(uint64_t))(*(void *)a1 + 184))(a1);
  uint64_t v4 = *(void **)(a1 + 368);

  return [v4 pruneSecondaryDataOlderThan:v3];
}

id sub_1003C14A8(uint64_t a1)
{
  return [*(id *)(a1 + 72) clearDataForHarvester:9];
}

id sub_1003C14B4(uint64_t a1, void *a2)
{
  id result = [a2 doubleValue];
  if (v5 < *(double *)(a1 + 40))
  {
    uint64_t v6 = *(void **)(a1 + 32);
    return [v6 addObject:a2];
  }
  return result;
}

void sub_1003C1510(uint64_t a1, void *a2)
{
  if ([a2 triggerType])
  {
    unsigned int v33 = [a2 triggerType];
    *(void *)buf = &v33;
    uint64_t v4 = sub_1000C5658((uint64_t **)(a1 + 408), (int *)&v33, (uint64_t)&unk_101D0B290, (_DWORD **)buf);
    double v5 = *((double *)v4 + 5);
    double v6 = *((double *)v4 + 6);
    [a2 triggerTimestamp];
    double v8 = v7 - v5;
    [a2 triggerTimestamp];
    double v10 = v6 + v9;
    id v27 = objc_alloc_init((Class)CLPPoiHarvest);
    [v27 setTriggerEvent:a2];
    long long v31 = 0u;
    long long v32 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    char v11 = *(void **)(a1 + 400);
    id v12 = [v11 countByEnumeratingWithState:&v29 objects:v41 count:16];
    if (!v12) {
      goto LABEL_20;
    }
    id v13 = v12;
    uint64_t v14 = *(void *)v30;
    while (1)
    {
      uint64_t v15 = 0;
      do
      {
        if (*(void *)v30 != v14) {
          objc_enumerationMutation(v11);
        }
        __int16 v16 = *(void **)(*((void *)&v29 + 1) + 8 * (void)v15);
        [v16 timestamp];
        if (v17 >= v8 && ([v16 timestamp], v18 <= v10))
        {
          [v27 addLocations:v16];
          if (qword_102419560 != -1) {
            dispatch_once(&qword_102419560, &stru_1022ADD90);
          }
          uint64_t v22 = qword_102419568;
          if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 68289282;
            *(_DWORD *)&uint8_t buf[4] = 0;
            __int16 v35 = 2082;
            double v36 = "";
            __int16 v37 = 2050;
            uint64_t v38 = 9;
            char v20 = v22;
            char v21 = "{\"msg%{public}.0s\":\"adding location within start/end range to harvest\", \"subHarvester\":%{public,"
                  " location:CLSubHarvesterIdentifier}lld}";
            goto LABEL_17;
          }
        }
        else
        {
          if (qword_102419560 != -1) {
            dispatch_once(&qword_102419560, &stru_1022ADD90);
          }
          uint64_t v19 = qword_102419568;
          if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = 68289282;
            *(_DWORD *)&uint8_t buf[4] = 0;
            __int16 v35 = 2082;
            double v36 = "";
            __int16 v37 = 2050;
            uint64_t v38 = 9;
            char v20 = v19;
            char v21 = "{\"msg%{public}.0s\":\"skipping location outside start/end range\", \"subHarvester\":%{public, locatio"
                  "n:CLSubHarvesterIdentifier}lld}";
LABEL_17:
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, v21, buf, 0x1Cu);
          }
        }
        uint64_t v15 = (char *)v15 + 1;
      }
      while (v13 != v15);
      id v13 = [v11 countByEnumeratingWithState:&v29 objects:v41 count:16];
      if (!v13)
      {
LABEL_20:
        uint64_t v23 = *(void **)(a1 + 392);
        v28[0] = _NSConcreteStackBlock;
        v28[1] = 3221225472;
        v28[2] = sub_1003C1A3C;
        v28[3] = &unk_1022ADD58;
        *(double *)&v28[5] = v8;
        *(double *)&v28[6] = v10;
        v28[4] = v27;
        [v23 enumerateKeysAndObjectsUsingBlock:v28];
        if (qword_102419560 != -1) {
          dispatch_once(&qword_102419560, &stru_1022ADD90);
        }
        double v24 = qword_102419568;
        if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 68289539;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v35 = 2082;
          double v36 = "";
          __int16 v37 = 2050;
          uint64_t v38 = 9;
          __int16 v39 = 2113;
          id v40 = v27;
          _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Harvest-Collect\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld, \"harvestData\":%{private, location:escape_only}@}", buf, 0x26u);
        }
        sub_1003C10B0(a1, v27);

        return;
      }
    }
  }
  if (qword_102419560 != -1) {
    dispatch_once(&qword_102419560, &stru_1022ADD90);
  }
  double v25 = qword_102419568;
  if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)buf = 68289282;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v35 = 2082;
    double v36 = "";
    __int16 v37 = 2050;
    uint64_t v38 = 9;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Found a trigger transaction of type None\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld}", buf, 0x1Cu);
    if (qword_102419560 != -1) {
      dispatch_once(&qword_102419560, &stru_1022ADD90);
    }
  }
  float v26 = qword_102419568;
  if (os_signpost_enabled((os_log_t)qword_102419568))
  {
    *(_DWORD *)buf = 68289282;
    *(_DWORD *)&uint8_t buf[4] = 0;
    __int16 v35 = 2082;
    double v36 = "";
    __int16 v37 = 2050;
    uint64_t v38 = 9;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v26, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Found a trigger transaction of type None", "{\"msg%{public}.0s\":\"Found a trigger transaction of type None\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld}", buf, 0x1Cu);
  }
}

void sub_1003C1A3C(uint64_t a1, void *a2, void *a3)
{
  [a2 doubleValue];
  if (v6 >= *(double *)(a1 + 40) && ([a2 doubleValue], v7 <= *(double *)(a1 + 48)))
  {
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v9 = [a3 countByEnumeratingWithState:&v16 objects:v26 count:16];
    if (v9)
    {
      id v11 = v9;
      uint64_t v12 = *(void *)v17;
      *(void *)&long long v10 = 68289282;
      long long v15 = v10;
      do
      {
        id v13 = 0;
        do
        {
          if (*(void *)v17 != v12) {
            objc_enumerationMutation(a3);
          }
          [*(id *)(a1 + 32) addAccessPoints:*(void *)(*((void *)&v16 + 1) + 8 * (void)v13), v15];
          if (qword_102419560 != -1) {
            dispatch_once(&qword_102419560, &stru_1022ADD90);
          }
          uint64_t v14 = qword_102419568;
          if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEBUG))
          {
            *(_DWORD *)buf = v15;
            int v21 = 0;
            __int16 v22 = 2082;
            uint64_t v23 = "";
            __int16 v24 = 2050;
            uint64_t v25 = 9;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"adding wifi within start/end range to harvest\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld}", buf, 0x1Cu);
          }
          id v13 = (char *)v13 + 1;
        }
        while (v11 != v13);
        id v11 = [a3 countByEnumeratingWithState:&v16 objects:v26 count:16];
      }
      while (v11);
    }
  }
  else
  {
    if (qword_102419560 != -1) {
      dispatch_once(&qword_102419560, &stru_1022ADD90);
    }
    double v8 = qword_102419568;
    if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289282;
      int v21 = 0;
      __int16 v22 = 2082;
      uint64_t v23 = "";
      __int16 v24 = 2050;
      uint64_t v25 = 9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"skipping location outside start/end range\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld}", buf, 0x1Cu);
    }
  }
}

uint64_t sub_1003C1CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  ++*(_DWORD *)(a1 + 204);
  double v10 = (*(double (**)(void))(**(void **)(a1 + 56) + 64))(*(void *)(a1 + 56));
  id v11 = objc_alloc_init((Class)CLPPoiTriggerEvent);
  [v11 setTriggerTimestamp:v10];
  [v11 setTriggerType:a2];
  [v11 setTriggerSubType:a3];
  [v11 setMuid:a4];
  [v11 setProviderIdentifier:a5];
  [*(id *)(a1 + 432) addObject:v11];

  if (qword_102419560 != -1) {
    dispatch_once(&qword_102419560, &stru_1022ADD90);
  }
  uint64_t v12 = qword_102419568;
  if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEBUG))
  {
    int v17 = 68289539;
    int v18 = 0;
    __int16 v19 = 2082;
    char v20 = "";
    __int16 v21 = 2050;
    uint64_t v22 = 9;
    __int16 v23 = 2113;
    id v24 = v11;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"registered trigger event\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld, \"triggerEvent\":%{private, location:escape_only}@}", (uint8_t *)&v17, 0x26u);
    if (qword_102419560 != -1) {
      dispatch_once(&qword_102419560, &stru_1022ADD90);
    }
  }
  id v13 = qword_102419568;
  if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEBUG))
  {
    int v17 = 68289282;
    int v18 = 0;
    __int16 v19 = 2082;
    char v20 = "";
    __int16 v21 = 2050;
    uint64_t v22 = 9;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"starting wifi scan\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld}", (uint8_t *)&v17, 0x1Cu);
  }
  uint64_t v14 = *(void *)(a1 + 352);
  double v15 = sub_100036BC0(a1);
  return (*(uint64_t (**)(uint64_t, double))(*(void *)v14 + 16))(v14, v10 - v15);
}

void sub_1003C1F1C(uint64_t a1, uint64_t a2, int a3)
{
  if (a3 == 3)
  {
    double v4 = (*(double (**)(void))(**(void **)(a1 + 56) + 64))(*(void *)(a1 + 56));
    if (v4 - *(double *)(a1 + 384) >= *(double *)(a1 + 376))
    {
      uint64_t v18 = 0;
      double v19 = -1.79769313e308;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      (*(void (**)(void, uint64_t *, double *))(**(void **)(a1 + 56) + 240))(*(void *)(a1 + 56), &v16, &v19);
      if (v4 - v19 <= *(double *)(a1 + 440))
      {
        id v5 = objc_alloc((Class)NSMutableArray);
        id v6 = [v5 initWithCapacity:0x2E8BA2E8BA2E8BA3 * ((v17 - v16) >> 3)];
        uint64_t v8 = v16;
        uint64_t v9 = v17;
        if (v16 != v17)
        {
          *(void *)&long long v7 = 68289282;
          long long v15 = v7;
          do
          {
            if (*(_DWORD *)(v8 + 32))
            {
              id v10 = objc_alloc_init((Class)CLPPoiWifiAccessPoint);
              [v10 setAge:*(double *)(v8 + 48)];
              [v10 setScanTimestamp:*(double *)(v8 + 56)];
              [v10 setChannel:*(unsigned int *)(v8 + 40)];
              sub_10006DF94();
              if ((v24 & 0x80000000) == 0) {
                p_p = &__p;
              }
              else {
                p_p = __p;
              }
              [v10 setMac:[NSString stringWithUTF8String:p_p]];
              if (SBYTE3(v24) < 0) {
                operator delete(__p);
              }
              [v10 setRssi:*(unsigned int *)(v8 + 32)];
              [v6 addObject:v10];
            }
            else
            {
              if (qword_102419560 != -1) {
                dispatch_once(&qword_102419560, &stru_1022ADD90);
              }
              uint64_t v12 = qword_102419568;
              if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEBUG))
              {
                std::string __p = (void *)v15;
                __int16 v21 = 2082;
                uint64_t v22 = "";
                __int16 v23 = 2050;
                uint64_t v24 = 9;
                _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"ignoring sentinel access point\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld}", (uint8_t *)&__p, 0x1Cu);
              }
            }
            v8 += 88;
          }
          while (v8 != v9);
        }
        [*(id *)(a1 + 392) setObject:v6 forKeyedSubscript:[NSNumber numberWithDouble:v19, v15]];
        if (qword_102419560 != -1) {
          dispatch_once(&qword_102419560, &stru_1022ADD90);
        }
        id v13 = qword_102419568;
        if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEBUG))
        {
          id v14 = [*(id *)(a1 + 392) count];
          std::string __p = (void *)68289539;
          __int16 v21 = 2082;
          uint64_t v22 = "";
          __int16 v23 = 2050;
          uint64_t v24 = 9;
          __int16 v25 = 2049;
          id v26 = v14;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"adding scan to buffer\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld, \"bufferedWifiCount\":%{private}lu}", (uint8_t *)&__p, 0x26u);
        }

        *(double *)(a1 + 384) = v4;
        sub_100024744(a1);
      }
      std::string __p = &v16;
      sub_1000D7F78((void ***)&__p);
    }
  }
}

void sub_1003C22B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  std::string __p = &a13;
  sub_1000D7F78((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1003C22FC(uint64_t a1, int a2, uint64_t *a3)
{
  if (!a2)
  {
    uint64_t v5 = *a3;
    double v4 = (std::__shared_weak_count *)a3[1];
    if (v4) {
      atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    if sub_100778804(v5) && (sub_1000B2378(v5))
    {
      uint64_t v6 = sub_10077880C(v5);
      uint64_t v7 = sub_10026DE28(v5);
      sub_1003C1CAC(a1, 1, 1, v6, v7);
    }
    else
    {
      if (qword_102419560 != -1) {
        dispatch_once(&qword_102419560, &stru_1022ADD90);
      }
      uint64_t v8 = qword_102419568;
      if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_INFO))
      {
        v9[0] = 68289282;
        v9[1] = 0;
        __int16 v10 = 2082;
        id v11 = "";
        __int16 v12 = 2050;
        uint64_t v13 = 9;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"ignoring PassKit payment trigger without MUID data\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld}", (uint8_t *)v9, 0x1Cu);
      }
    }
    if (v4) {
      sub_1000DB0A0(v4);
    }
  }
}

void sub_1003C245C(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1000DB0A0(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003C2474(uint64_t a1, void *a2, void *a3)
{
  if (!a3 || [a3 type])
  {
    if (qword_102419560 != -1) {
      dispatch_once(&qword_102419560, &stru_1022ADD90);
    }
    uint64_t v6 = qword_102419568;
    if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = 68289539;
      int v12 = 0;
      __int16 v13 = 2082;
      id v14 = "";
      __int16 v15 = 2050;
      uint64_t v16 = 9;
      __int16 v17 = 2113;
      uint64_t v18 = a2;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"received leeched visit notification\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld, \"visit\":%{private, location:escape_only}@}", (uint8_t *)&v11, 0x26u);
    }
    id v7 = [a3 mapItem];
    if ([v7 validMUID])
    {
      if ([a2 hasDepartureDate])
      {
        if (qword_102419560 != -1) {
          dispatch_once(&qword_102419560, &stru_1022ADD90);
        }
        uint64_t v8 = qword_102419568;
        if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_INFO))
        {
          int v11 = 68289282;
          int v12 = 0;
          __int16 v13 = 2082;
          id v14 = "";
          __int16 v15 = 2050;
          uint64_t v16 = 9;
          uint64_t v9 = "{\"msg%{public}.0s\":\"ignoring non-arrival visit\", \"subHarvester\":%{public, location:CLSubHarvesterIdentifier}lld}";
LABEL_17:
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, v9, (uint8_t *)&v11, 0x1Cu);
        }
      }
      else
      {
        unsigned int v10 = [v7 source];
        sub_1003C1CAC(a1, 2, v10 & 1 | (((v10 >> 1) & 1) << 7) | (v10 >> 1) & 0xE | (v10 >> 2) & 0x70 | (v10 >> 1) & 0x7F00, (uint64_t)[v7 muid], (uint64_t)[v7 resultProviderID]);
      }
    }
    else
    {
      if (qword_102419560 != -1) {
        dispatch_once(&qword_102419560, &stru_1022ADD90);
      }
      uint64_t v8 = qword_102419568;
      if (os_log_type_enabled((os_log_t)qword_102419568, OS_LOG_TYPE_INFO))
      {
        int v11 = 68289282;
        int v12 = 0;
        __int16 v13 = 2082;
        id v14 = "";
        __int16 v15 = 2050;
        uint64_t v16 = 9;
        uint64_t v9 = "{\"msg%{public}.0s\":\"ignoring Visit trigger without MUID data\", \"subHarvester\":%{public, location:CLSu"
             "bHarvesterIdentifier}lld}";
        goto LABEL_17;
      }
    }
  }
}

void sub_1003C2728(id a1)
{
  qword_102419568 = (uint64_t)os_log_create("com.apple.locationd.Core", "Harvester");
}

BOOL sub_1003C2764()
{
  id v1 = qword_102419568;
  return os_log_type_enabled(v1, OS_LOG_TYPE_FAULT);
}

BOOL sub_1003C2784()
{
  double v2 = *(NSObject **)(v0 + 1384);
  return os_log_type_enabled(v2, OS_LOG_TYPE_INFO);
}

void sub_1003C27A0(int a1@<W8>)
{
  *uint64_t v1 = a1;
}

BOOL sub_1003C27AC()
{
  double v2 = *(NSObject **)(v0 + 1384);
  return os_signpost_enabled(v2);
}

uint64_t sub_1003C27C4()
{
  return sub_1012B748C((uint64_t)&xmmword_10247A958, 1, 2, 2, 1, -1.0, 43200.0, 43200.0);
}

void *sub_1003C2804(void *result, uint64_t a2)
{
  *id result = off_1022ADDC0;
  result[1] = a2;
  result[2] = 0;
  return result;
}

id sub_1003C2828(uint64_t a1, double a2)
{
  double v4 = 0;
  unsigned int v33 = 0;
  uint64_t v34 = 0;
  __int16 v35 = 0;
  for (int i = 1; i != 14; ++i)
  {
    if (v4 >= v35)
    {
      uint64_t v6 = v33;
      uint64_t v7 = v4 - v33;
      unint64_t v8 = v7 + 1;
      if ((unint64_t)(v7 + 1) >> 62) {
        sub_1001D7FD4();
      }
      uint64_t v9 = (char *)v35 - (char *)v33;
      if (((char *)v35 - (char *)v33) >> 1 > v8) {
        unint64_t v8 = v9 >> 1;
      }
      if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v10 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v10 = v8;
      }
      if (v10)
      {
        int v11 = (char *)sub_10017EA34((uint64_t)&v35, v10);
        uint64_t v6 = v33;
        double v4 = v34;
      }
      else
      {
        int v11 = 0;
      }
      int v12 = (int *)&v11[4 * v7];
      *int v12 = i;
      __int16 v13 = v12 + 1;
      while (v4 != v6)
      {
        int v14 = *--v4;
        *--int v12 = v14;
      }
      unsigned int v33 = v12;
      uint64_t v34 = v13;
      __int16 v35 = (int *)&v11[4 * v10];
      if (v6) {
        operator delete(v6);
      }
      double v4 = v13;
    }
    else
    {
      *v4++ = i;
    }
    uint64_t v34 = v4;
  }
  id v26 = 0;
  uint64_t v27 = 0;
  __int16 v25 = 0;
  sub_10010F834(&v25, v33, (uint64_t)v4, v4 - v33);
  sub_100134750(__p, "poiharvest");
  sub_100F7E780((uint64_t)v28, 2, 2, 0, (uint64_t)&v25, 110, (uint64_t)a2, 1, 0, (uint64_t)__p);
  if (v24 < 0) {
    operator delete(__p[0]);
  }
  if (v25)
  {
    id v26 = v25;
    operator delete(v25);
  }
  id v15 = [[objc_msgSend(*(id *)(a1 + 8), "vendor") proxyForService:@"CLWifiService"];
  sub_1001F6F78((uint64_t)v18, v28);
  id v16 = [v15 syncgetStartScanWithParameters:sub_1003C2AC8(v18)];
  if (v22 < 0) {
    operator delete(v21);
  }
  if (v19)
  {
    char v20 = v19;
    operator delete(v19);
  }
  if (v32 < 0) {
    operator delete(v31);
  }
  if (v29)
  {
    long long v30 = v29;
    operator delete(v29);
  }
  if (v33)
  {
    uint64_t v34 = v33;
    operator delete(v33);
  }
  return v16;
}

void sub_1003C2A54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,uint64_t a32,char a33)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a30) {
    operator delete(a30);
  }
  __int16 v35 = *(void **)(v33 - 104);
  if (v35)
  {
    *(void *)(v33 - 96) = v35;
    operator delete(v35);
  }
  _Unwind_Resume(exception_object);
}

id sub_1003C2AC8(uint64_t *a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  v3[2] = sub_1003C2C88;
  v3[3] = &unk_1022ADE00;
  sub_1001F6F78((uint64_t)&v4, a1);
  id v1 = [v3 copy];
  if (v8 < 0) {
    operator delete(__p);
  }
  if (v5)
  {
    uint64_t v6 = v5;
    operator delete(v5);
  }
  return v1;
}

void sub_1003C2B74(_Unwind_Exception *a1)
{
  sub_1001F6058(v1);
  _Unwind_Resume(a1);
}

void *sub_1003C2B88(void *a1)
{
  *a1 = off_1022ADDC0;
  sub_1003C2C38(a1 + 2, 0);
  return a1;
}

void sub_1003C2BD0(void *a1)
{
  *a1 = off_1022ADDC0;
  sub_1003C2C38(a1 + 2, 0);

  operator delete();
}

uint64_t sub_1003C2C38(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1015766A0(result);
    operator delete();
  }
  return result;
}

uint64_t sub_1003C2C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001F6F78(a2, (uint64_t *)(a1 + 32));
}

uint64_t sub_1003C2C94(uint64_t a1, uint64_t a2)
{
  return sub_1001F6F78(a1 + 32, (uint64_t *)(a2 + 32));
}

void sub_1003C2CA0(uint64_t a1)
{
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  double v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
}

uint64_t sub_1003C2CF8()
{
  if (qword_102489C08) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C08 + 8))(qword_102489C08);
  }
  if (qword_102489C10) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C10 + 8))(qword_102489C10);
  }
  if (qword_102489C18) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C18 + 8))(qword_102489C18);
  }
  if (qword_102489C20) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C20 + 8))(qword_102489C20);
  }
  if (qword_102489C28) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C28 + 8))(qword_102489C28);
  }
  if (qword_102489C30) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C30 + 8))(qword_102489C30);
  }
  if (qword_102489C38) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C38 + 8))(qword_102489C38);
  }
  if (qword_102489C40) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C40 + 8))(qword_102489C40);
  }
  if (qword_102489C48) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C48 + 8))(qword_102489C48);
  }
  if (qword_102489C50) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C50 + 8))(qword_102489C50);
  }
  if (qword_102489C58) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C58 + 8))(qword_102489C58);
  }
  if (qword_102489C60) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C60 + 8))(qword_102489C60);
  }
  if (qword_102489C68) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C68 + 8))(qword_102489C68);
  }
  if (qword_102489C70) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C70 + 8))(qword_102489C70);
  }
  if (qword_102489C78) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C78 + 8))(qword_102489C78);
  }
  if (qword_102489C80) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C80 + 8))(qword_102489C80);
  }
  if (qword_102489C88) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C88 + 8))(qword_102489C88);
  }
  if (qword_102489C90) {
    (*(void (**)(uint64_t))(*(void *)qword_102489C90 + 8))(qword_102489C90);
  }
  uint64_t result = qword_102489C98;
  if (qword_102489C98)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_102489C98 + 8);
    return v1();
  }
  return result;
}

void sub_1003C30B0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10247A988 & 1) == 0)
  {
    byte_10247A988 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPRavenOutput.pb.cc", a4);
    operator new();
  }
}

double sub_1003C3A9C(uint64_t a1)
{
  *(void *)a1 = off_1022ADE40;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  return result;
}

uint64_t sub_1003C3AD0(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_102489C30;
  if (!qword_102489C30)
  {
    double result = sub_1003C30B0();
    uint64_t v2 = qword_102489C30;
  }
  v1[1] = v2;
  uint64_t v3 = qword_102489C38;
  if (!qword_102489C38)
  {
    double result = sub_1003C30B0();
    uint64_t v3 = qword_102489C38;
  }
  v1[2] = v3;
  uint64_t v4 = qword_102489C50;
  if (!qword_102489C50)
  {
    double result = sub_1003C30B0();
    uint64_t v4 = qword_102489C50;
  }
  v1[3] = v4;
  uint64_t v5 = qword_102489C40;
  if (!qword_102489C40)
  {
    double result = sub_1003C30B0();
    uint64_t v5 = qword_102489C40;
  }
  v1[4] = v5;
  uint64_t v6 = qword_102489C48;
  if (!qword_102489C48)
  {
    double result = sub_1003C30B0();
    uint64_t v6 = qword_102489C48;
  }
  v1[5] = v6;
  uint64_t v7 = qword_102489C28;
  if (!qword_102489C28)
  {
    double result = sub_1003C30B0();
    uint64_t v7 = qword_102489C28;
  }
  v1[6] = v7;
  return result;
}

uint64_t sub_1003C3B80(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_102489C10;
  if (qword_102489C10)
  {
    *(void *)(result + 8) = qword_102489C10;
LABEL_4:
    v1[2] = v2;
LABEL_5:
    v1[3] = v2;
    goto LABEL_6;
  }
  double result = ((uint64_t (*)(void))sub_1003C30B0)();
  uint64_t v2 = qword_102489C10;
  v1[1] = qword_102489C10;
  if (v2) {
    goto LABEL_4;
  }
  double result = sub_1003C30B0(result);
  uint64_t v2 = qword_102489C10;
  v1[2] = qword_102489C10;
  if (v2) {
    goto LABEL_5;
  }
  double result = sub_1003C30B0(result);
  uint64_t v2 = qword_102489C10;
  v1[3] = qword_102489C10;
  if (!v2)
  {
    double result = sub_1003C30B0(result);
    uint64_t v2 = qword_102489C10;
  }
LABEL_6:
  v1[4] = v2;
  return result;
}

uint64_t sub_1003C3BFC(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_102489C18;
  if (!qword_102489C18)
  {
    double result = sub_1003C30B0(result);
    uint64_t v2 = qword_102489C18;
  }
  v1[1] = v2;
  uint64_t v3 = qword_102489C58;
  if (!qword_102489C58)
  {
    double result = sub_1003C30B0(result);
    uint64_t v3 = qword_102489C58;
  }
  v1[2] = v3;
  uint64_t v4 = qword_102489C60;
  if (!qword_102489C60)
  {
    double result = sub_1003C30B0(result);
    uint64_t v4 = qword_102489C60;
  }
  v1[3] = v4;
  uint64_t v5 = qword_102489C68;
  if (!qword_102489C68)
  {
    double result = sub_1003C30B0(result);
    uint64_t v5 = qword_102489C68;
  }
  v1[4] = v5;
  uint64_t v6 = qword_102489C70;
  if (!qword_102489C70)
  {
    double result = sub_1003C30B0(result);
    uint64_t v6 = qword_102489C70;
  }
  v1[5] = v6;
  uint64_t v7 = qword_102489C78;
  if (!qword_102489C78)
  {
    double result = sub_1003C30B0(result);
    uint64_t v7 = qword_102489C78;
  }
  v1[6] = v7;
  uint64_t v8 = qword_102489C80;
  if (!qword_102489C80)
  {
    double result = sub_1003C30B0(result);
    uint64_t v8 = qword_102489C80;
  }
  v1[7] = v8;
  uint64_t v9 = qword_102489C88;
  if (!qword_102489C88)
  {
    double result = sub_1003C30B0(result);
    uint64_t v9 = qword_102489C88;
  }
  v1[8] = v9;
  uint64_t v10 = qword_102489C90;
  if (!qword_102489C90)
  {
    double result = sub_1003C30B0(result);
    uint64_t v10 = qword_102489C90;
  }
  v1[9] = v10;
  uint64_t v11 = qword_102489C98;
  if (!qword_102489C98)
  {
    double result = sub_1003C30B0(result);
    uint64_t v11 = qword_102489C98;
  }
  v1[10] = v11;
  return result;
}

void sub_1003C3D0C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 60);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 60))
  {
    *(_DWORD *)(a1 + 60) |= 1u;
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489C08 + 8);
    }
    sub_1003C54BC(v5, v6);
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((*(unsigned char *)(a2 + 60) & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 60) |= 2u;
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    operator new();
  }
  uint64_t v8 = *(void *)(a2 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489C08 + 16);
  }
  sub_1003C5D88(v7, v8);
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_26:
    *(_DWORD *)(a1 + 60) |= 8u;
    uint64_t v11 = *(void *)(a1 + 32);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 32);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_102489C08 + 32);
    }
    sub_1003C6888(v11, v12);
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_36;
    }
    goto LABEL_31;
  }
LABEL_21:
  *(_DWORD *)(a1 + 60) |= 4u;
  uint64_t v9 = *(void *)(a1 + 24);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 24);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_102489C08 + 24);
  }
  sub_1003C6284(v9, v10);
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 8) != 0) {
    goto LABEL_26;
  }
LABEL_8:
  if ((v4 & 0x10) == 0) {
    goto LABEL_9;
  }
LABEL_31:
  *(_DWORD *)(a1 + 60) |= 0x10u;
  uint64_t v13 = *(void *)(a1 + 40);
  if (!v13) {
    operator new();
  }
  uint64_t v14 = *(void *)(a2 + 40);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_102489C08 + 40);
  }
  sub_1003C6C08(v13, v14);
  if ((*(_DWORD *)(a2 + 60) & 0x20) != 0)
  {
LABEL_36:
    *(_DWORD *)(a1 + 60) |= 0x20u;
    uint64_t v15 = *(void *)(a1 + 48);
    if (!v15) {
      operator new();
    }
    uint64_t v16 = *(void *)(a2 + 48);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_102489C08 + 48);
    }
    sub_1003C6E80(v15, v16);
  }
}

void sub_1003C4150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1003C4168(void *result)
{
  if ((void *)qword_102489C08 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[5];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    double result = (void *)v1[6];
    if (result)
    {
      uint64_t v7 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v7();
    }
  }
  return result;
}

void sub_1003C42B8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022ADE40;
  sub_1003C4168(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003C430C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022ADE40;
  sub_1003C4168(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003C4374(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489C08;
  if (!qword_102489C08)
  {
    sub_1003C30B0(0, a2, a3, a4);
    return qword_102489C08;
  }
  return result;
}

void sub_1003C43A4()
{
}

uint64_t sub_1003C4400(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 60);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 60))
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1003C44A0(result);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(v1 + 16);
      if (result)
      {
        uint64_t result = sub_1003C4544(result);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(v1 + 24);
      if (result)
      {
        uint64_t result = sub_1003C45EC(result);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t result = *(void *)(v1 + 32);
      if (result)
      {
        uint64_t result = sub_1003C46E8(result);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t result = *(void *)(v1 + 40);
      if (result)
      {
        uint64_t result = sub_1003C476C(result);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t result = *(void *)(v1 + 48);
      if (result) {
        uint64_t result = sub_1003C47D4(result);
      }
    }
  }
  *(_DWORD *)(v1 + 60) = 0;
  return result;
}

uint64_t sub_1003C44A0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 292);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 8);
      if (v3)
      {
        sub_1003C7CEC(v3);
        int v2 = *(_DWORD *)(a1 + 292);
      }
    }
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(_OWORD *)(a1 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
  }
  sub_10026DEDC(a1 + 112);
  sub_10026DEDC(a1 + 136);
  sub_10026DEDC(a1 + 192);
  sub_10026DEDC(a1 + 216);
  sub_10026DEDC(a1 + 240);
  uint64_t result = sub_10026DEDC(a1 + 264);
  *(_DWORD *)(a1 + 292) = 0;
  return result;
}

uint64_t sub_1003C4544(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(_DWORD *)(result + 228);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1003C7CEC(result);
        unsigned int v2 = *(_DWORD *)(v1 + 228);
      }
    }
    *(void *)(v1 + 48) = 0;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_DWORD *)(v1 + 136) = 0;
    *(_OWORD *)(v1 + 56) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(void *)(v1 + 104) = 0;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(void *)(v1 + 112) = 0;
    *(void *)(v1 + 120) = 0;
    *(void *)(v1 + 128) = 0;
    *(_OWORD *)(v1 + 144) = 0u;
    *(_OWORD *)(v1 + 160) = 0u;
    *(void *)(v1 + 176) = 0;
  }
  if (HIBYTE(v2))
  {
    *(_DWORD *)(v1 + 140) = 0;
    *(_OWORD *)(v1 + 184) = 0u;
    *(_OWORD *)(v1 + 200) = 0u;
    *(void *)(v1 + 216) = 0;
  }
  *(_DWORD *)(v1 + 228) = 0;
  return result;
}

uint64_t sub_1003C45EC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1003C7CEC(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(v1 + 16);
      if (result)
      {
        uint64_t result = sub_1003CF144(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(v1 + 24);
      if (result)
      {
        uint64_t result = sub_1003CF1A4(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t result = *(void *)(v1 + 32);
      if (result)
      {
        uint64_t result = sub_1003CF214(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t result = *(void *)(v1 + 40);
      if (result)
      {
        uint64_t result = sub_1003CF274(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t result = *(void *)(v1 + 48);
      if (result)
      {
        uint64_t result = sub_1003CF2D4(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t result = *(void *)(v1 + 56);
      if (result)
      {
        uint64_t result = sub_1003CF344(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      uint64_t result = *(void *)(v1 + 64);
      if (result)
      {
        uint64_t result = sub_1003CF3A4(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t result = *(void *)(v1 + 72);
      if (result)
      {
        uint64_t result = sub_1003CF404(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      uint64_t result = *(void *)(v1 + 80);
      if (result) {
        uint64_t result = sub_1003CF464(result);
      }
    }
  }
  *(_DWORD *)(v1 + 92) = 0;
  return result;
}

uint64_t sub_1003C46E8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 160);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1003C7CEC(result);
        int v2 = *(_DWORD *)(v1 + 160);
      }
    }
    *(_WORD *)(v1 + 152) = 0;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(void *)(v1 + 48) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_OWORD *)(v1 + 104) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
    *(_OWORD *)(v1 + 56) = 0u;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(_OWORD *)(v1 + 136) = 0u;
    *(_OWORD *)(v1 + 120) = 0u;
  }
  *(_DWORD *)(v1 + 160) = 0;
  return result;
}

uint64_t sub_1003C476C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 96);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1003C7CEC(result);
        int v2 = *(_DWORD *)(v1 + 96);
      }
    }
    *(_WORD *)(v1 + 88) = 0;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(void *)(v1 + 48) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_OWORD *)(v1 + 72) = 0u;
    *(_OWORD *)(v1 + 56) = 0u;
  }
  *(_DWORD *)(v1 + 96) = 0;
  return result;
}

uint64_t sub_1003C47D4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 168);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 8);
      if (v3)
      {
        sub_1003C7CEC(v3);
        int v2 = *(_DWORD *)(a1 + 168);
      }
    }
    *(_OWORD *)(a1 + 44) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  if ((v2 & 0x3FC00) != 0)
  {
    *(_DWORD *)(a1 + 60) = 0;
    *(void *)(a1 + 144) = 0;
    *(void *)(a1 + 152) = 0;
    *(void *)(a1 + 136) = 0;
    *(_DWORD *)(a1 + 160) = 0;
  }
  sub_10026DEDC(a1 + 64);
  sub_10026DEDC(a1 + 88);
  uint64_t result = sub_10026DEDC(a1 + 112);
  *(_DWORD *)(a1 + 168) = 0;
  return result;
}

uint64_t sub_1003C4854(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v63 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_1003CA108(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        __int16 v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 18) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_35;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_23;
        }
LABEL_35:
        *(_DWORD *)(a1 + 60) |= 2u;
        uint64_t v18 = *(void *)(a1 + 16);
        if (!v18) {
          operator new();
        }
        unsigned int v63 = 0;
        double v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_1003CBD40(v18, this, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v15) {
          *((_DWORD *)this + 14) = v25;
        }
        id v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 26) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_49:
        *(_DWORD *)(a1 + 60) |= 4u;
        uint64_t v27 = *(void *)(a1 + 24);
        if (!v27) {
          operator new();
        }
        unsigned int v63 = 0;
        uint64_t v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_1003CF4AC(v27, this, v32) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v15) {
          *((_DWORD *)this + 14) = v34;
        }
        __int16 v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 34) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_63:
        *(_DWORD *)(a1 + 60) |= 8u;
        uint64_t v36 = *(void *)(a1 + 32);
        if (!v36) {
          operator new();
        }
        unsigned int v63 = 0;
        __int16 v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_1003CD548(v36, this, v41) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v15) {
          *((_DWORD *)this + 14) = v43;
        }
        int v44 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 != 42) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
LABEL_77:
        *(_DWORD *)(a1 + 60) |= 0x10u;
        uint64_t v45 = *(void *)(a1 + 40);
        if (!v45) {
          operator new();
        }
        unsigned int v63 = 0;
        int v46 = (char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v46;
          *((void *)this + 1) = v46 + 1;
        }
        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_1003CE494(v45, this, v50) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v51 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v51, 1);
        int v52 = v51 - 1;
        if (v52 < 0 == v15) {
          *((_DWORD *)this + 14) = v52;
        }
        uint64_t v53 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v53 >= *((void *)this + 2) || *v53 != 50) {
          continue;
        }
        *((void *)this + 1) = v53 + 1;
LABEL_91:
        *(_DWORD *)(a1 + 60) |= 0x20u;
        uint64_t v54 = *(void *)(a1 + 48);
        if (!v54) {
          operator new();
        }
        unsigned int v63 = 0;
        float v55 = (char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v55;
          *((void *)this + 1) = v55 + 1;
        }
        int v56 = *((_DWORD *)this + 14);
        int v57 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v56 + 1;
        if (v56 >= v57) {
          return 0;
        }
        int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63);
        if (!sub_1003C8E84(v54, this, v59) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
        int v60 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v15) {
          *((_DWORD *)this + 14) = v61;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_49;
        }
        goto LABEL_23;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_63;
        }
        goto LABEL_23;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_77;
        }
        goto LABEL_23;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_23;
        }
        goto LABEL_91;
      default:
        int v7 = TagFallback & 7;
LABEL_23:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003C50F0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C08 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489C08 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489C08 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_102489C08 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_102489C08 + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 0x20) != 0)
  {
LABEL_23:
    uint64_t v12 = *(void *)(v5 + 48);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_102489C08 + 48);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v12, a2, a4);
  }
  return result;
}

uint64_t sub_1003C5230(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 60);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_47;
  }
  if ((*(unsigned char *)(a1 + 60) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 60) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_102489C08 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003CB764(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489C08 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003CD07C(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 60);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_102489C08 + 24);
    }
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003D037C(v13, a2);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    }
    else {
      int v16 = 1;
    }
    uint64_t v4 = (v4 + v15 + v16 + 1);
    int v3 = *(_DWORD *)(a1 + 60);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_35;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)(a1 + 32);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_102489C08 + 32);
  }
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003CE14C(v17, a2);
  int v19 = (int)v18;
  if (v18 >= 0x80) {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  }
  else {
    int v20 = 1;
  }
  uint64_t v4 = (v4 + v19 + v20 + 1);
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_47;
    }
    goto LABEL_41;
  }
LABEL_35:
  uint64_t v21 = *(void *)(a1 + 40);
  if (!v21) {
    uint64_t v21 = *(void *)(qword_102489C08 + 40);
  }
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003CEC74(v21, a2);
  int v23 = (int)v22;
  if (v22 >= 0x80) {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  }
  else {
    int v24 = 1;
  }
  uint64_t v4 = (v4 + v23 + v24 + 1);
  if ((*(_DWORD *)(a1 + 60) & 0x20) != 0)
  {
LABEL_41:
    uint64_t v25 = *(void *)(a1 + 48);
    if (!v25) {
      uint64_t v25 = *(void *)(qword_102489C08 + 48);
    }
    id v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C9BF8(v25, a2);
    int v28 = (int)v26;
    if (v26 >= 0x80) {
      int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, v27);
    }
    else {
      int v29 = 1;
    }
    uint64_t v4 = (v4 + v28 + v29 + 1);
  }
LABEL_47:
  *(_DWORD *)(a1 + 56) = v4;
  return v4;
}

void sub_1003C5434(uint64_t a1, void *lpsrc)
{
  sub_1003C3D0C(a1, (uint64_t)lpsrc);
}

double sub_1003C54BC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v44);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 112), *(_DWORD *)(a2 + 120) + *(_DWORD *)(a1 + 120));
  if (*(int *)(a2 + 120) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 112) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 124);
      uint64_t v7 = *(int *)(a1 + 120);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 128))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 112), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 124);
        }
        *(_DWORD *)(a1 + 124) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 112);
      *(_DWORD *)(a1 + 120) = v7 + 1;
      sub_1003C8640(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 120));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 136), *(_DWORD *)(a2 + 144) + *(_DWORD *)(a1 + 144));
  if (*(int *)(a2 + 144) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a2 + 136) + 8 * v9);
      int v11 = *(_DWORD *)(a1 + 148);
      uint64_t v12 = *(int *)(a1 + 144);
      if ((int)v12 >= v11)
      {
        if (v11 == *(_DWORD *)(a1 + 152))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 136), v11 + 1);
          int v11 = *(_DWORD *)(a1 + 148);
        }
        *(_DWORD *)(a1 + 148) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *(void *)(a1 + 136);
      *(_DWORD *)(a1 + 144) = v12 + 1;
      sub_1003C8640(*(void *)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *(int *)(a2 + 144));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 192), *(_DWORD *)(a2 + 200) + *(_DWORD *)(a1 + 200));
  if (*(int *)(a2 + 200) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = *(void *)(*(void *)(a2 + 192) + 8 * v14);
      int v16 = *(_DWORD *)(a1 + 204);
      uint64_t v17 = *(int *)(a1 + 200);
      if ((int)v17 >= v16)
      {
        if (v16 == *(_DWORD *)(a1 + 208))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 192), v16 + 1);
          int v16 = *(_DWORD *)(a1 + 204);
        }
        *(_DWORD *)(a1 + 204) = v16 + 1;
        operator new();
      }
      uint64_t v18 = *(void *)(a1 + 192);
      *(_DWORD *)(a1 + 200) = v17 + 1;
      sub_1003C8640(*(void *)(v18 + 8 * v17), v15);
      ++v14;
    }
    while (v14 < *(int *)(a2 + 200));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 216), *(_DWORD *)(a2 + 224) + *(_DWORD *)(a1 + 224));
  if (*(int *)(a2 + 224) >= 1)
  {
    uint64_t v19 = 0;
    do
    {
      uint64_t v20 = *(void *)(*(void *)(a2 + 216) + 8 * v19);
      int v21 = *(_DWORD *)(a1 + 228);
      uint64_t v22 = *(int *)(a1 + 224);
      if ((int)v22 >= v21)
      {
        if (v21 == *(_DWORD *)(a1 + 232))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 216), v21 + 1);
          int v21 = *(_DWORD *)(a1 + 228);
        }
        *(_DWORD *)(a1 + 228) = v21 + 1;
        operator new();
      }
      uint64_t v23 = *(void *)(a1 + 216);
      *(_DWORD *)(a1 + 224) = v22 + 1;
      sub_1003C8640(*(void *)(v23 + 8 * v22), v20);
      ++v19;
    }
    while (v19 < *(int *)(a2 + 224));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 240), *(_DWORD *)(a2 + 248) + *(_DWORD *)(a1 + 248));
  if (*(int *)(a2 + 248) >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      uint64_t v25 = *(void *)(*(void *)(a2 + 240) + 8 * v24);
      int v26 = *(_DWORD *)(a1 + 252);
      uint64_t v27 = *(int *)(a1 + 248);
      if ((int)v27 >= v26)
      {
        if (v26 == *(_DWORD *)(a1 + 256))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 240), v26 + 1);
          int v26 = *(_DWORD *)(a1 + 252);
        }
        *(_DWORD *)(a1 + 252) = v26 + 1;
        operator new();
      }
      uint64_t v28 = *(void *)(a1 + 240);
      *(_DWORD *)(a1 + 248) = v27 + 1;
      sub_1003C8640(*(void *)(v28 + 8 * v27), v25);
      ++v24;
    }
    while (v24 < *(int *)(a2 + 248));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 264), *(_DWORD *)(a2 + 272) + *(_DWORD *)(a1 + 272));
  if (*(int *)(a2 + 272) >= 1)
  {
    uint64_t v30 = 0;
    do
    {
      uint64_t v31 = *(void *)(*(void *)(a2 + 264) + 8 * v30);
      uint64_t v32 = *(int *)(a1 + 272);
      int v33 = *(_DWORD *)(a1 + 276);
      if ((int)v32 >= v33)
      {
        if (v33 == *(_DWORD *)(a1 + 280))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 264), v33 + 1);
          int v33 = *(_DWORD *)(a1 + 276);
        }
        *(_DWORD *)(a1 + 276) = v33 + 1;
        operator new();
      }
      uint64_t v34 = *(void *)(a1 + 264);
      *(_DWORD *)(a1 + 272) = v32 + 1;
      sub_1003C8640(*(void *)(v34 + 8 * v32), v31);
      ++v30;
    }
    while (v30 < *(int *)(a2 + 272));
  }
  int v35 = *(_DWORD *)(a2 + 292);
  if (!(_BYTE)v35) {
    goto LABEL_70;
  }
  if (v35)
  {
    *(_DWORD *)(a1 + 292) |= 1u;
    uint64_t v36 = *(void *)(a1 + 8);
    if (!v36) {
      operator new();
    }
    uint64_t v37 = *(void *)(a2 + 8);
    if (!v37) {
      uint64_t v37 = *(void *)(qword_102489C30 + 8);
    }
    double result = sub_1003C7864(v36, v37);
    int v35 = *(_DWORD *)(a2 + 292);
  }
  if ((v35 & 2) != 0)
  {
    unsigned int v38 = *(_DWORD *)(a2 + 16);
    if (v38 >= 7) {
      sub_101A5E7E4();
    }
    *(_DWORD *)(a1 + 292) |= 2u;
    *(_DWORD *)(a1 + 16) = v38;
    int v35 = *(_DWORD *)(a2 + 292);
  }
  if ((v35 & 4) != 0)
  {
    unsigned int v39 = *(_DWORD *)(a2 + 20);
    if (v39 >= 4) {
      sub_101A5E7B8();
    }
    *(_DWORD *)(a1 + 292) |= 4u;
    *(_DWORD *)(a1 + 20) = v39;
    int v35 = *(_DWORD *)(a2 + 292);
  }
  if ((v35 & 8) != 0)
  {
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 292) |= 8u;
    *(double *)(a1 + 24) = result;
    int v35 = *(_DWORD *)(a2 + 292);
    if ((v35 & 0x10) == 0)
    {
LABEL_66:
      if ((v35 & 0x20) == 0) {
        goto LABEL_67;
      }
LABEL_97:
      uint64_t v42 = *(void *)(a2 + 40);
      *(_DWORD *)(a1 + 292) |= 0x20u;
      *(void *)(a1 + 40) = v42;
      int v35 = *(_DWORD *)(a2 + 292);
      if ((v35 & 0x40) == 0)
      {
LABEL_68:
        if ((v35 & 0x80) == 0) {
          goto LABEL_70;
        }
        goto LABEL_69;
      }
      goto LABEL_98;
    }
  }
  else if ((v35 & 0x10) == 0)
  {
    goto LABEL_66;
  }
  double result = *(double *)(a2 + 32);
  *(_DWORD *)(a1 + 292) |= 0x10u;
  *(double *)(a1 + 32) = result;
  int v35 = *(_DWORD *)(a2 + 292);
  if ((v35 & 0x20) != 0) {
    goto LABEL_97;
  }
LABEL_67:
  if ((v35 & 0x40) == 0) {
    goto LABEL_68;
  }
LABEL_98:
  uint64_t v43 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 292) |= 0x40u;
  *(void *)(a1 + 48) = v43;
  int v35 = *(_DWORD *)(a2 + 292);
  if ((v35 & 0x80) != 0)
  {
LABEL_69:
    uint64_t v40 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 292) |= 0x80u;
    *(void *)(a1 + 56) = v40;
    int v35 = *(_DWORD *)(a2 + 292);
  }
LABEL_70:
  if ((v35 & 0xFF00) == 0) {
    goto LABEL_78;
  }
  if ((v35 & 0x100) != 0)
  {
    double result = *(double *)(a2 + 64);
    *(_DWORD *)(a1 + 292) |= 0x100u;
    *(double *)(a1 + 64) = result;
    int v35 = *(_DWORD *)(a2 + 292);
    if ((v35 & 0x200) == 0)
    {
LABEL_73:
      if ((v35 & 0x400) == 0) {
        goto LABEL_74;
      }
      goto LABEL_87;
    }
  }
  else if ((v35 & 0x200) == 0)
  {
    goto LABEL_73;
  }
  double result = *(double *)(a2 + 72);
  *(_DWORD *)(a1 + 292) |= 0x200u;
  *(double *)(a1 + 72) = result;
  int v35 = *(_DWORD *)(a2 + 292);
  if ((v35 & 0x400) == 0)
  {
LABEL_74:
    if ((v35 & 0x800) == 0) {
      goto LABEL_75;
    }
    goto LABEL_88;
  }
LABEL_87:
  double result = *(double *)(a2 + 80);
  *(_DWORD *)(a1 + 292) |= 0x400u;
  *(double *)(a1 + 80) = result;
  int v35 = *(_DWORD *)(a2 + 292);
  if ((v35 & 0x800) == 0)
  {
LABEL_75:
    if ((v35 & 0x1000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_89;
  }
LABEL_88:
  double result = *(double *)(a2 + 88);
  *(_DWORD *)(a1 + 292) |= 0x800u;
  *(double *)(a1 + 88) = result;
  int v35 = *(_DWORD *)(a2 + 292);
  if ((v35 & 0x1000) == 0)
  {
LABEL_76:
    if ((v35 & 0x2000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_77;
  }
LABEL_89:
  double result = *(double *)(a2 + 96);
  *(_DWORD *)(a1 + 292) |= 0x1000u;
  *(double *)(a1 + 96) = result;
  int v35 = *(_DWORD *)(a2 + 292);
  if ((v35 & 0x2000) != 0)
  {
LABEL_77:
    double result = *(double *)(a2 + 104);
    *(_DWORD *)(a1 + 292) |= 0x2000u;
    *(double *)(a1 + 104) = result;
    int v35 = *(_DWORD *)(a2 + 292);
  }
LABEL_78:
  if ((v35 & 0xFF0000) == 0) {
    return result;
  }
  if ((v35 & 0x10000) != 0)
  {
    double result = *(double *)(a2 + 160);
    *(_DWORD *)(a1 + 292) |= 0x10000u;
    *(double *)(a1 + 160) = result;
    int v35 = *(_DWORD *)(a2 + 292);
    if ((v35 & 0x20000) == 0)
    {
LABEL_81:
      if ((v35 & 0x40000) == 0) {
        goto LABEL_82;
      }
      goto LABEL_93;
    }
  }
  else if ((v35 & 0x20000) == 0)
  {
    goto LABEL_81;
  }
  double result = *(double *)(a2 + 168);
  *(_DWORD *)(a1 + 292) |= 0x20000u;
  *(double *)(a1 + 168) = result;
  int v35 = *(_DWORD *)(a2 + 292);
  if ((v35 & 0x40000) == 0)
  {
LABEL_82:
    if ((v35 & 0x80000) == 0) {
      return result;
    }
    goto LABEL_83;
  }
LABEL_93:
  double result = *(double *)(a2 + 176);
  *(_DWORD *)(a1 + 292) |= 0x40000u;
  *(double *)(a1 + 176) = result;
  if ((*(_DWORD *)(a2 + 292) & 0x80000) != 0)
  {
LABEL_83:
    uint64_t v41 = *(void *)(a2 + 184);
    *(_DWORD *)(a1 + 292) |= 0x80000u;
    *(void *)(a1 + 184) = v41;
  }
  return result;
}

void sub_1003C5D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003C5D88(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v36);
  }
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if (!(_BYTE)v4) {
    goto LABEL_29;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 228) |= 1u;
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489C38 + 8);
    }
    sub_1003C7864(v5, v6);
    unsigned int v4 = *(_DWORD *)(a2 + 228);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v7 = *(_DWORD *)(a2 + 24);
    if (v7 >= 0xA) {
      sub_101A5E8EC();
    }
    *(_DWORD *)(a1 + 228) |= 2u;
    *(_DWORD *)(a1 + 24) = v7;
    unsigned int v4 = *(_DWORD *)(a2 + 228);
  }
  if ((v4 & 4) != 0)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 228) |= 4u;
    *(void *)(a1 + 16) = v8;
    unsigned int v4 = *(_DWORD *)(a2 + 228);
  }
  if ((v4 & 8) != 0)
  {
    unsigned int v9 = *(_DWORD *)(a2 + 28);
    if (v9 >= 4) {
      sub_101A5E8C0();
    }
    *(_DWORD *)(a1 + 228) |= 8u;
    *(_DWORD *)(a1 + 28) = v9;
    unsigned int v4 = *(_DWORD *)(a2 + 228);
  }
  if ((v4 & 0x10) == 0)
  {
    if ((v4 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_24:
    uint64_t v11 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 228) |= 0x20u;
    *(void *)(a1 + 40) = v11;
    unsigned int v4 = *(_DWORD *)(a2 + 228);
    if ((v4 & 0x40) == 0)
    {
LABEL_21:
      if ((v4 & 0x80) == 0) {
        goto LABEL_29;
      }
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  uint64_t v10 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 228) |= 0x10u;
  *(void *)(a1 + 32) = v10;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_20:
  if ((v4 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_25:
  unsigned int v12 = *(_DWORD *)(a2 + 48);
  if (v12 >= 0xA) {
    sub_101A5E894();
  }
  *(_DWORD *)(a1 + 228) |= 0x40u;
  *(_DWORD *)(a1 + 48) = v12;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x80) != 0)
  {
LABEL_27:
    unsigned int v13 = *(_DWORD *)(a2 + 52);
    if (v13 >= 4) {
      sub_101A5E868();
    }
    *(_DWORD *)(a1 + 228) |= 0x80u;
    *(_DWORD *)(a1 + 52) = v13;
    unsigned int v4 = *(_DWORD *)(a2 + 228);
  }
LABEL_29:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_41;
  }
  if ((v4 & 0x100) != 0)
  {
    unsigned int v14 = *(_DWORD *)(a2 + 136);
    if (v14 >= 3) {
      sub_101A5E83C();
    }
    *(_DWORD *)(a1 + 228) |= 0x100u;
    *(_DWORD *)(a1 + 136) = v14;
    unsigned int v4 = *(_DWORD *)(a2 + 228);
  }
  if ((v4 & 0x200) != 0)
  {
    uint64_t v24 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 228) |= 0x200u;
    *(void *)(a1 + 56) = v24;
    unsigned int v4 = *(_DWORD *)(a2 + 228);
    if ((v4 & 0x400) == 0)
    {
LABEL_35:
      if ((v4 & 0x800) == 0) {
        goto LABEL_36;
      }
      goto LABEL_69;
    }
  }
  else if ((v4 & 0x400) == 0)
  {
    goto LABEL_35;
  }
  uint64_t v25 = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 228) |= 0x400u;
  *(void *)(a1 + 64) = v25;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x800) == 0)
  {
LABEL_36:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t v26 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 228) |= 0x800u;
  *(void *)(a1 + 72) = v26;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x1000) == 0)
  {
LABEL_37:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t v27 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 228) |= 0x1000u;
  *(void *)(a1 + 80) = v27;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x2000) == 0)
  {
LABEL_38:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t v28 = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 228) |= 0x2000u;
  *(void *)(a1 + 88) = v28;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x4000) == 0)
  {
LABEL_39:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_40;
  }
LABEL_72:
  uint64_t v29 = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 228) |= 0x4000u;
  *(void *)(a1 + 96) = v29;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x8000) != 0)
  {
LABEL_40:
    uint64_t v15 = *(void *)(a2 + 104);
    *(_DWORD *)(a1 + 228) |= 0x8000u;
    *(void *)(a1 + 104) = v15;
    unsigned int v4 = *(_DWORD *)(a2 + 228);
  }
LABEL_41:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_51;
  }
  if ((v4 & 0x10000) != 0)
  {
    uint64_t v17 = *(void *)(a2 + 112);
    *(_DWORD *)(a1 + 228) |= 0x10000u;
    *(void *)(a1 + 112) = v17;
    unsigned int v4 = *(_DWORD *)(a2 + 228);
    if ((v4 & 0x20000) == 0)
    {
LABEL_44:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_61;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_44;
  }
  uint64_t v18 = *(void *)(a2 + 120);
  *(_DWORD *)(a1 + 228) |= 0x20000u;
  *(void *)(a1 + 120) = v18;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x40000) == 0)
  {
LABEL_45:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t v19 = *(void *)(a2 + 128);
  *(_DWORD *)(a1 + 228) |= 0x40000u;
  *(void *)(a1 + 128) = v19;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x80000) == 0)
  {
LABEL_46:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t v20 = *(void *)(a2 + 144);
  *(_DWORD *)(a1 + 228) |= 0x80000u;
  *(void *)(a1 + 144) = v20;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x100000) == 0)
  {
LABEL_47:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t v21 = *(void *)(a2 + 152);
  *(_DWORD *)(a1 + 228) |= 0x100000u;
  *(void *)(a1 + 152) = v21;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x200000) == 0)
  {
LABEL_48:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t v22 = *(void *)(a2 + 160);
  *(_DWORD *)(a1 + 228) |= 0x200000u;
  *(void *)(a1 + 160) = v22;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x400000) == 0)
  {
LABEL_49:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_50;
  }
LABEL_65:
  uint64_t v23 = *(void *)(a2 + 168);
  *(_DWORD *)(a1 + 228) |= 0x400000u;
  *(void *)(a1 + 168) = v23;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x800000) != 0)
  {
LABEL_50:
    uint64_t v16 = *(void *)(a2 + 176);
    *(_DWORD *)(a1 + 228) |= 0x800000u;
    *(void *)(a1 + 176) = v16;
    unsigned int v4 = *(_DWORD *)(a2 + 228);
  }
LABEL_51:
  if (!HIBYTE(v4)) {
    return;
  }
  if ((v4 & 0x1000000) != 0)
  {
    uint64_t v30 = *(void *)(a2 + 184);
    *(_DWORD *)(a1 + 228) |= 0x1000000u;
    *(void *)(a1 + 184) = v30;
    unsigned int v4 = *(_DWORD *)(a2 + 228);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_54:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_55;
      }
      goto LABEL_76;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_54;
  }
  uint64_t v31 = *(void *)(a2 + 192);
  *(_DWORD *)(a1 + 228) |= 0x2000000u;
  *(void *)(a1 + 192) = v31;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_55:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t v32 = *(void *)(a2 + 200);
  *(_DWORD *)(a1 + 228) |= 0x4000000u;
  *(void *)(a1 + 200) = v32;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_56:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_57;
    }
LABEL_78:
    uint64_t v34 = *(void *)(a2 + 216);
    *(_DWORD *)(a1 + 228) |= 0x10000000u;
    *(void *)(a1 + 216) = v34;
    if ((*(_DWORD *)(a2 + 228) & 0x20000000) == 0) {
      return;
    }
    goto LABEL_79;
  }
LABEL_77:
  uint64_t v33 = *(void *)(a2 + 208);
  *(_DWORD *)(a1 + 228) |= 0x8000000u;
  *(void *)(a1 + 208) = v33;
  unsigned int v4 = *(_DWORD *)(a2 + 228);
  if ((v4 & 0x10000000) != 0) {
    goto LABEL_78;
  }
LABEL_57:
  if ((v4 & 0x20000000) == 0) {
    return;
  }
LABEL_79:
  unsigned int v35 = *(_DWORD *)(a2 + 140);
  if (v35 >= 8) {
    sub_101A5E810();
  }
  *(_DWORD *)(a1 + 228) |= 0x20000000u;
  *(_DWORD *)(a1 + 140) = v35;
}

void sub_1003C626C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_1003C6284(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
  }
  int v5 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v5) {
    goto LABEL_53;
  }
  if (v5)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C50 + 8);
    }
    double result = sub_1003C7864(v6, v7);
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 92) |= 2u;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489C50 + 16);
  }
  double result = sub_1003D073C(v8, v9);
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_23:
  *(_DWORD *)(a1 + 92) |= 4u;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *(void *)(a2 + 24);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_102489C50 + 24);
  }
  double result = sub_1003D096C(v10, v11);
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_28:
  *(_DWORD *)(a1 + 92) |= 8u;
  uint64_t v12 = *(void *)(a1 + 32);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = *(void *)(a2 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_102489C50 + 32);
  }
  double result = sub_1003D0C44(v12, v13);
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_38:
    *(_DWORD *)(a1 + 92) |= 0x20u;
    uint64_t v16 = *(void *)(a1 + 48);
    if (!v16) {
      operator new();
    }
    uint64_t v17 = *(void *)(a2 + 48);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_102489C50 + 48);
    }
    double result = sub_1003D10A4(v16, v17);
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_53;
      }
      goto LABEL_48;
    }
    goto LABEL_43;
  }
LABEL_33:
  *(_DWORD *)(a1 + 92) |= 0x10u;
  uint64_t v14 = *(void *)(a1 + 40);
  if (!v14) {
    operator new();
  }
  uint64_t v15 = *(void *)(a2 + 40);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_102489C50 + 40);
  }
  double result = sub_1003D0E74(v14, v15);
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x20) != 0) {
    goto LABEL_38;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_43:
  *(_DWORD *)(a1 + 92) |= 0x40u;
  uint64_t v18 = *(void *)(a1 + 56);
  if (!v18) {
    operator new();
  }
  uint64_t v19 = *(void *)(a2 + 56);
  if (!v19) {
    uint64_t v19 = *(void *)(qword_102489C50 + 56);
  }
  double result = sub_1003D137C(v18, v19);
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x80) != 0)
  {
LABEL_48:
    *(_DWORD *)(a1 + 92) |= 0x80u;
    uint64_t v20 = *(void *)(a1 + 64);
    if (!v20) {
      operator new();
    }
    uint64_t v21 = *(void *)(a2 + 64);
    if (!v21) {
      uint64_t v21 = *(void *)(qword_102489C50 + 64);
    }
    double result = sub_1003D15AC(v20, v21);
    int v5 = *(_DWORD *)(a2 + 92);
  }
LABEL_53:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 92) |= 0x100u;
      uint64_t v22 = *(void *)(a1 + 72);
      if (!v22) {
        operator new();
      }
      uint64_t v23 = *(void *)(a2 + 72);
      if (!v23) {
        uint64_t v23 = *(void *)(qword_102489C50 + 72);
      }
      double result = sub_1003D17DC(v22, v23);
      int v5 = *(_DWORD *)(a2 + 92);
    }
    if ((v5 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 92) |= 0x200u;
      uint64_t v24 = *(void *)(a1 + 80);
      if (!v24) {
        operator new();
      }
      uint64_t v25 = *(void *)(a2 + 80);
      if (!v25) {
        uint64_t v25 = *(void *)(qword_102489C50 + 80);
      }
      return sub_1003D1A0C(v24, v25);
    }
  }
  return result;
}

void sub_1003C6870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_1003C6888(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  int v5 = *(_DWORD *)(a2 + 160);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *(_DWORD *)(a1 + 160) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C40 + 8);
    }
    double result = sub_1003C7864(v6, v7);
    int v5 = *(_DWORD *)(a2 + 160);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_36;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 160) |= 2u;
  *(double *)(a1 + 16) = result;
  int v5 = *(_DWORD *)(a2 + 160);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_36:
  double result = *(double *)(a2 + 24);
  *(_DWORD *)(a1 + 160) |= 4u;
  *(double *)(a1 + 24) = result;
  int v5 = *(_DWORD *)(a2 + 160);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = *(double *)(a2 + 32);
  *(_DWORD *)(a1 + 160) |= 8u;
  *(double *)(a1 + 32) = result;
  int v5 = *(_DWORD *)(a2 + 160);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_39:
    char v9 = *(unsigned char *)(a2 + 153);
    *(_DWORD *)(a1 + 160) |= 0x20u;
    *(unsigned char *)(a1 + 153) = v9;
    int v5 = *(_DWORD *)(a2 + 160);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_40;
  }
LABEL_38:
  char v8 = *(unsigned char *)(a2 + 152);
  *(_DWORD *)(a1 + 160) |= 0x10u;
  *(unsigned char *)(a1 + 152) = v8;
  int v5 = *(_DWORD *)(a2 + 160);
  if ((v5 & 0x20) != 0) {
    goto LABEL_39;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_40:
  double result = *(double *)(a2 + 40);
  *(_DWORD *)(a1 + 160) |= 0x40u;
  *(double *)(a1 + 40) = result;
  int v5 = *(_DWORD *)(a2 + 160);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 160) |= 0x80u;
    *(double *)(a1 + 48) = result;
    int v5 = *(_DWORD *)(a2 + 160);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v5 & 0x100) != 0)
  {
    double result = *(double *)(a2 + 56);
    *(_DWORD *)(a1 + 160) |= 0x100u;
    *(double *)(a1 + 56) = result;
    int v5 = *(_DWORD *)(a2 + 160);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_44;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  double result = *(double *)(a2 + 64);
  *(_DWORD *)(a1 + 160) |= 0x200u;
  *(double *)(a1 + 64) = result;
  int v5 = *(_DWORD *)(a2 + 160);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_45;
  }
LABEL_44:
  double result = *(double *)(a2 + 72);
  *(_DWORD *)(a1 + 160) |= 0x400u;
  *(double *)(a1 + 72) = result;
  int v5 = *(_DWORD *)(a2 + 160);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_46;
  }
LABEL_45:
  double result = *(double *)(a2 + 80);
  *(_DWORD *)(a1 + 160) |= 0x800u;
  *(double *)(a1 + 80) = result;
  int v5 = *(_DWORD *)(a2 + 160);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_47;
  }
LABEL_46:
  double result = *(double *)(a2 + 88);
  *(_DWORD *)(a1 + 160) |= 0x1000u;
  *(double *)(a1 + 88) = result;
  int v5 = *(_DWORD *)(a2 + 160);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_48;
  }
LABEL_47:
  double result = *(double *)(a2 + 96);
  *(_DWORD *)(a1 + 160) |= 0x2000u;
  *(double *)(a1 + 96) = result;
  int v5 = *(_DWORD *)(a2 + 160);
  if ((v5 & 0x4000) == 0)
  {
LABEL_21:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_48:
  double result = *(double *)(a2 + 104);
  *(_DWORD *)(a1 + 160) |= 0x4000u;
  *(double *)(a1 + 104) = result;
  int v5 = *(_DWORD *)(a2 + 160);
  if ((v5 & 0x8000) != 0)
  {
LABEL_22:
    double result = *(double *)(a2 + 112);
    *(_DWORD *)(a1 + 160) |= 0x8000u;
    *(double *)(a1 + 112) = result;
    int v5 = *(_DWORD *)(a2 + 160);
  }
LABEL_23:
  if ((v5 & 0xFF0000) == 0) {
    return result;
  }
  if ((v5 & 0x10000) != 0)
  {
    double result = *(double *)(a2 + 120);
    *(_DWORD *)(a1 + 160) |= 0x10000u;
    *(double *)(a1 + 120) = result;
    int v5 = *(_DWORD *)(a2 + 160);
    if ((v5 & 0x20000) == 0)
    {
LABEL_26:
      if ((v5 & 0x40000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_52;
    }
  }
  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  double result = *(double *)(a2 + 128);
  *(_DWORD *)(a1 + 160) |= 0x20000u;
  *(double *)(a1 + 128) = result;
  int v5 = *(_DWORD *)(a2 + 160);
  if ((v5 & 0x40000) == 0)
  {
LABEL_27:
    if ((v5 & 0x80000) == 0) {
      return result;
    }
    goto LABEL_28;
  }
LABEL_52:
  double result = *(double *)(a2 + 136);
  *(_DWORD *)(a1 + 160) |= 0x40000u;
  *(double *)(a1 + 136) = result;
  if ((*(_DWORD *)(a2 + 160) & 0x80000) == 0) {
    return result;
  }
LABEL_28:
  double result = *(double *)(a2 + 144);
  *(_DWORD *)(a1 + 160) |= 0x80000u;
  *(double *)(a1 + 144) = result;
  return result;
}

void sub_1003C6BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_1003C6C08(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  int v5 = *(_DWORD *)(a2 + 96);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *(_DWORD *)(a1 + 96) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C48 + 8);
    }
    double result = sub_1003C7864(v6, v7);
    int v5 = *(_DWORD *)(a2 + 96);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  char v8 = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 96) |= 2u;
  *(unsigned char *)(a1 + 88) = v8;
  int v5 = *(_DWORD *)(a2 + 96);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v9 = *(unsigned char *)(a2 + 89);
  *(_DWORD *)(a1 + 96) |= 4u;
  *(unsigned char *)(a1 + 89) = v9;
  int v5 = *(_DWORD *)(a2 + 96);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 96) |= 8u;
  *(double *)(a1 + 16) = result;
  int v5 = *(_DWORD *)(a2 + 96);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_29:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 96) |= 0x20u;
    *(double *)(a1 + 32) = result;
    int v5 = *(_DWORD *)(a2 + 96);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_28:
  double result = *(double *)(a2 + 24);
  *(_DWORD *)(a1 + 96) |= 0x10u;
  *(double *)(a1 + 24) = result;
  int v5 = *(_DWORD *)(a2 + 96);
  if ((v5 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_30:
  double result = *(double *)(a2 + 40);
  *(_DWORD *)(a1 + 96) |= 0x40u;
  *(double *)(a1 + 40) = result;
  int v5 = *(_DWORD *)(a2 + 96);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 96) |= 0x80u;
    *(double *)(a1 + 48) = result;
    int v5 = *(_DWORD *)(a2 + 96);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0) {
    return result;
  }
  if ((v5 & 0x100) != 0)
  {
    double result = *(double *)(a2 + 56);
    *(_DWORD *)(a1 + 96) |= 0x100u;
    *(double *)(a1 + 56) = result;
    int v5 = *(_DWORD *)(a2 + 96);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_34;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  double result = *(double *)(a2 + 64);
  *(_DWORD *)(a1 + 96) |= 0x200u;
  *(double *)(a1 + 64) = result;
  int v5 = *(_DWORD *)(a2 + 96);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      return result;
    }
    goto LABEL_18;
  }
LABEL_34:
  double result = *(double *)(a2 + 72);
  *(_DWORD *)(a1 + 96) |= 0x400u;
  *(double *)(a1 + 72) = result;
  if ((*(_DWORD *)(a2 + 96) & 0x800) == 0) {
    return result;
  }
LABEL_18:
  double result = *(double *)(a2 + 80);
  *(_DWORD *)(a1 + 96) |= 0x800u;
  *(double *)(a1 + 80) = result;
  return result;
}

void sub_1003C6E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003C6E80(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v33);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 64), *(_DWORD *)(a2 + 72) + *(_DWORD *)(a1 + 72));
  if (*(int *)(a2 + 72) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 64) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 76);
      uint64_t v7 = *(int *)(a1 + 72);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 80))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 64), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 76);
        }
        *(_DWORD *)(a1 + 76) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 64);
      *(_DWORD *)(a1 + 72) = v7 + 1;
      sub_1003C8640(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 72));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88), *(_DWORD *)(a2 + 96) + *(_DWORD *)(a1 + 96));
  if (*(int *)(a2 + 96) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a2 + 88) + 8 * v9);
      int v11 = *(_DWORD *)(a1 + 100);
      uint64_t v12 = *(int *)(a1 + 96);
      if ((int)v12 >= v11)
      {
        if (v11 == *(_DWORD *)(a1 + 104))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88), v11 + 1);
          int v11 = *(_DWORD *)(a1 + 100);
        }
        *(_DWORD *)(a1 + 100) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *(void *)(a1 + 88);
      *(_DWORD *)(a1 + 96) = v12 + 1;
      sub_1003C8640(*(void *)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *(int *)(a2 + 96));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 112), *(_DWORD *)(a2 + 120) + *(_DWORD *)(a1 + 120));
  if (*(int *)(a2 + 120) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = *(void *)(*(void *)(a2 + 112) + 8 * v14);
      int v16 = *(_DWORD *)(a1 + 124);
      uint64_t v17 = *(int *)(a1 + 120);
      if ((int)v17 >= v16)
      {
        if (v16 == *(_DWORD *)(a1 + 128))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 112), v16 + 1);
          int v16 = *(_DWORD *)(a1 + 124);
        }
        *(_DWORD *)(a1 + 124) = v16 + 1;
        operator new();
      }
      uint64_t v18 = *(void *)(a1 + 112);
      *(_DWORD *)(a1 + 120) = v17 + 1;
      sub_1003C8640(*(void *)(v18 + 8 * v17), v15);
      ++v14;
    }
    while (v14 < *(int *)(a2 + 120));
  }
  int v19 = *(_DWORD *)(a2 + 168);
  if (!(_BYTE)v19) {
    goto LABEL_43;
  }
  if (v19)
  {
    *(_DWORD *)(a1 + 168) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    if (!v20) {
      operator new();
    }
    uint64_t v21 = *(void *)(a2 + 8);
    if (!v21) {
      uint64_t v21 = *(void *)(qword_102489C28 + 8);
    }
    sub_1003C7864(v20, v21);
    int v19 = *(_DWORD *)(a2 + 168);
  }
  if ((v19 & 2) != 0)
  {
    unsigned int v22 = *(_DWORD *)(a2 + 56);
    if (v22 >= 4) {
      sub_101A5E918();
    }
    *(_DWORD *)(a1 + 168) |= 2u;
    *(_DWORD *)(a1 + 56) = v22;
    int v19 = *(_DWORD *)(a2 + 168);
  }
  if ((v19 & 4) != 0)
  {
    uint64_t v29 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 168) |= 4u;
    *(void *)(a1 + 16) = v29;
    int v19 = *(_DWORD *)(a2 + 168);
    if ((v19 & 8) == 0)
    {
LABEL_39:
      if ((v19 & 0x10) == 0) {
        goto LABEL_40;
      }
LABEL_58:
      uint64_t v31 = *(void *)(a2 + 32);
      *(_DWORD *)(a1 + 168) |= 0x10u;
      *(void *)(a1 + 32) = v31;
      int v19 = *(_DWORD *)(a2 + 168);
      if ((v19 & 0x20) == 0)
      {
LABEL_41:
        if ((v19 & 0x40) == 0) {
          goto LABEL_43;
        }
        goto LABEL_42;
      }
      goto LABEL_59;
    }
  }
  else if ((v19 & 8) == 0)
  {
    goto LABEL_39;
  }
  uint64_t v30 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 168) |= 8u;
  *(void *)(a1 + 24) = v30;
  int v19 = *(_DWORD *)(a2 + 168);
  if ((v19 & 0x10) != 0) {
    goto LABEL_58;
  }
LABEL_40:
  if ((v19 & 0x20) == 0) {
    goto LABEL_41;
  }
LABEL_59:
  uint64_t v32 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 168) |= 0x20u;
  *(void *)(a1 + 40) = v32;
  int v19 = *(_DWORD *)(a2 + 168);
  if ((v19 & 0x40) != 0)
  {
LABEL_42:
    uint64_t v23 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 168) |= 0x40u;
    *(void *)(a1 + 48) = v23;
    int v19 = *(_DWORD *)(a2 + 168);
  }
LABEL_43:
  if ((v19 & 0x3FC00) == 0) {
    return;
  }
  if ((v19 & 0x400) != 0)
  {
    uint64_t v25 = *(void *)(a2 + 136);
    *(_DWORD *)(a1 + 168) |= 0x400u;
    *(void *)(a1 + 136) = v25;
    int v19 = *(_DWORD *)(a2 + 168);
    if ((v19 & 0x800) == 0)
    {
LABEL_46:
      if ((v19 & 0x1000) == 0) {
        goto LABEL_47;
      }
      goto LABEL_53;
    }
  }
  else if ((v19 & 0x800) == 0)
  {
    goto LABEL_46;
  }
  uint64_t v26 = *(void *)(a2 + 144);
  *(_DWORD *)(a1 + 168) |= 0x800u;
  *(void *)(a1 + 144) = v26;
  int v19 = *(_DWORD *)(a2 + 168);
  if ((v19 & 0x1000) == 0)
  {
LABEL_47:
    if ((v19 & 0x2000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v27 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 168) |= 0x1000u;
  *(_DWORD *)(a1 + 60) = v27;
  int v19 = *(_DWORD *)(a2 + 168);
  if ((v19 & 0x2000) == 0)
  {
LABEL_48:
    if ((v19 & 0x4000) == 0) {
      return;
    }
    goto LABEL_49;
  }
LABEL_54:
  int v28 = *(_DWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 168) |= 0x2000u;
  *(_DWORD *)(a1 + 160) = v28;
  if ((*(_DWORD *)(a2 + 168) & 0x4000) != 0)
  {
LABEL_49:
    uint64_t v24 = *(void *)(a2 + 152);
    *(_DWORD *)(a1 + 168) |= 0x4000u;
    *(void *)(a1 + 152) = v24;
  }
}

void sub_1003C73AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003C73C4()
{
  return 1;
}

void *sub_1003C73CC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.RavenOutput");
}

double sub_1003C73DC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }
  return result;
}

void sub_1003C7488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003C74A0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022ADEB8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003C74C0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022ADEB8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1003C7514()
{
}

uint64_t sub_1003C7560(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1003C7574(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unint64_t v13 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v13);
          if (!result) {
            return result;
          }
          unint64_t v10 = v13;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unint64_t v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
        }
        *(void *)(a1 + 8) = v10;
        *(_DWORD *)(a1 + 28) |= 1u;
        if ((unint64_t)v11 < v8 && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_23;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 1) {
        goto LABEL_15;
      }
LABEL_23:
      unint64_t v13 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13) & 1) == 0) {
        return 0;
      }
      *(void *)(a1 + 16) = v13;
      *(_DWORD *)(a1 + 28) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_15:
    if (v7 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) != 0);
  return 0;
}

uint64_t sub_1003C76FC(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0)
  {
    double v7 = *(double *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, v7, a3);
  }
  return result;
}

uint64_t sub_1003C7768(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 28))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 28);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 24) = result;
  return result;
}

double sub_1003C77C4(uint64_t a1, void *lpsrc)
{
  return sub_1003C73DC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003C784C()
{
  return 1;
}

void *sub_1003C7854@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.TimeStruct");
}

double sub_1003C7864(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 52);
  if (!(_BYTE)v5) {
    return result;
  }
  if (*(unsigned char *)(a2 + 52))
  {
    *(_DWORD *)(a1 + 52) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C18 + 8);
    }
    double result = sub_1003C73DC(v6, v7);
    int v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_21:
      *(_DWORD *)(a1 + 52) |= 4u;
      uint64_t v10 = *(void *)(a1 + 24);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = *(void *)(a2 + 24);
      if (!v11) {
        uint64_t v11 = *(void *)(qword_102489C18 + 24);
      }
      double result = sub_1003C73DC(v10, v11);
      int v5 = *(_DWORD *)(a2 + 52);
      if ((v5 & 8) == 0)
      {
LABEL_8:
        if ((v5 & 0x10) == 0) {
          return result;
        }
        goto LABEL_9;
      }
      goto LABEL_26;
    }
  }
  else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 52) |= 2u;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489C18 + 16);
  }
  double result = sub_1003C73DC(v8, v9);
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 4) != 0) {
    goto LABEL_21;
  }
LABEL_7:
  if ((v5 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_26:
  *(_DWORD *)(a1 + 52) |= 8u;
  uint64_t v12 = *(void *)(a1 + 32);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = *(void *)(a2 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_102489C18 + 32);
  }
  double result = sub_1003C73DC(v12, v13);
  if ((*(_DWORD *)(a2 + 52) & 0x10) != 0)
  {
LABEL_9:
    double result = *(double *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 0x10u;
    *(double *)(a1 + 40) = result;
  }
  return result;
}

void sub_1003C7AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1003C7AE0(void *result)
{
  if ((void *)qword_102489C18 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    double result = (void *)v1[4];
    if (result)
    {
      int v5 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v5();
    }
  }
  return result;
}

void sub_1003C7BD8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022ADF30;
  sub_1003C7AE0(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003C7C2C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022ADF30;
  sub_1003C7AE0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1003C7C94()
{
}

uint64_t sub_1003C7CEC(uint64_t result)
{
  LOBYTE(v1) = *(unsigned char *)(result + 52);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(result + 52))
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 28))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 28) = 0;
        int v1 = *(_DWORD *)(result + 52);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        int v1 = *(_DWORD *)(result + 52);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 28))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
        int v1 = *(_DWORD *)(result + 52);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v5 = *(void *)(result + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 28))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
      }
    }
    *(void *)(result + 40) = 0;
  }
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_1003C7D7C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v46[0] = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46))return 0; {
        }
          }
        else
        {
          v46[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v46[0]);
        if (!sub_1003C7574(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 18) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_33;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
LABEL_33:
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v18 = *(void *)(a1 + 16);
        if (!v18) {
          operator new();
        }
        v46[0] = 0;
        int v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46))return 0; {
        }
          }
        else
        {
          v46[0] = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v46[0]);
        if (!sub_1003C7574(v18, this, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v15) {
          *((_DWORD *)this + 14) = v25;
        }
        uint64_t v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 26) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_47:
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v27 = *(void *)(a1 + 24);
        if (!v27) {
          operator new();
        }
        v46[0] = 0;
        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46))return 0; {
        }
          }
        else
        {
          v46[0] = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v46[0]);
        if (!sub_1003C7574(v27, this, v32) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v15) {
          *((_DWORD *)this + 14) = v34;
        }
        unsigned int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 34) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_61:
        *(_DWORD *)(a1 + 52) |= 8u;
        uint64_t v36 = *(void *)(a1 + 32);
        if (!v36) {
          operator new();
        }
        v46[0] = 0;
        uint64_t v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46))return 0; {
        }
          }
        else
        {
          v46[0] = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v46[0]);
        if (!sub_1003C7574(v36, this, v41) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v15) {
          *((_DWORD *)this + 14) = v43;
        }
        int v44 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 != 41) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
LABEL_75:
        *(void *)int v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v46;
        }
        *(_DWORD *)(a1 + 52) |= 0x10u;
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_47;
        }
        goto LABEL_21;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_61;
        }
        goto LABEL_21;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_21;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_21:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003C8324(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C18 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489C18 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_13:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489C18 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_102489C18 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x10) != 0)
  {
LABEL_19:
    double v11 = *(double *)(v5 + 40);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, v11, a3);
  }
  return result;
}

uint64_t sub_1003C8428(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_36;
  }
  if ((*(unsigned char *)(a1 + 52) & 1) == 0)
  {
    unsigned int v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_102489C18 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C7768(v6, a2);
  int v8 = (int)v7;
  if (v7 >= 0x80) {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  }
  else {
    int v9 = 1;
  }
  unsigned int v4 = v8 + v9 + 1;
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_102489C18 + 16);
    }
    double v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C7768(v10, a2);
    int v12 = (int)v11;
    if (v11 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    }
    else {
      int v13 = 1;
    }
    v4 += v12 + v13 + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v14 = *(void *)(a1 + 24);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_102489C18 + 24);
    }
    BOOL v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C7768(v14, a2);
    int v16 = (int)v15;
    if (v15 >= 0x80) {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    }
    else {
      int v17 = 1;
    }
    v4 += v16 + v17 + 1;
    int v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
  if ((v3 & 8) != 0)
  {
LABEL_27:
    uint64_t v18 = *(void *)(a1 + 32);
    if (!v18) {
      uint64_t v18 = *(void *)(qword_102489C18 + 32);
    }
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C7768(v18, a2);
    int v21 = (int)v19;
    if (v19 >= 0x80) {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, v20);
    }
    else {
      int v22 = 1;
    }
    v4 += v21 + v22 + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
LABEL_33:
  if ((v3 & 0x10) != 0) {
    uint64_t result = v4 + 9;
  }
  else {
    uint64_t result = v4;
  }
LABEL_36:
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

double sub_1003C85A0(uint64_t a1, void *lpsrc)
{
  return sub_1003C7864(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003C8628()
{
  return 1;
}

void *sub_1003C8630@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.TimeStamp");
}

void sub_1003C8640(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v4) {
    return;
  }
  if ((*(unsigned char *)(a2 + 40) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_11:
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(void *)(a1 + 8) = v6;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 2) != 0) {
    goto LABEL_11;
  }
LABEL_6:
  if ((v4 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_12:
  unsigned int v8 = *(_DWORD *)(a2 + 32);
  if (v8 >= 0x24) {
    sub_101A5E944();
  }
  *(_DWORD *)(a1 + 40) |= 4u;
  *(_DWORD *)(a1 + 32) = v8;
  if ((*(_DWORD *)(a2 + 40) & 8) != 0)
  {
LABEL_8:
    uint64_t v5 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(void *)(a1 + 24) = v5;
  }
}

void sub_1003C8740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003C8758(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022ADFA8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003C8778(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022ADFA8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1003C87CC()
{
}

uint64_t sub_1003C8824(uint64_t result)
{
  if (*(unsigned char *)(result + 40))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1003C8840(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  uint64_t v6 = (unint64_t *)(a1 + 16);
  uint64_t v7 = (unint64_t *)(a1 + 24);
  while (2)
  {
    unsigned int v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 < v11 && (*v12 & 0x80000000) == 0)
        {
          *uint64_t v5 = *v12;
          int v13 = v12 + 1;
          *((void *)this + 1) = v13;
LABEL_24:
          *(_DWORD *)(a1 + 40) |= 1u;
          if ((unint64_t)v13 < v11 && *v13 == 16)
          {
            uint64_t v14 = v13 + 1;
            *((void *)this + 1) = v14;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
        if (result)
        {
          int v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_27:
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v14;
          uint64_t v18 = v14 + 1;
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v18 >= v11 || *v18 != 24) {
          continue;
        }
        BOOL v15 = v18 + 1;
        *((void *)this + 1) = v15;
LABEL_35:
        unsigned int v23 = 0;
        if ((unint64_t)v15 >= v11 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!result) {
            return result;
          }
          unsigned int v19 = v23;
        }
        else
        {
          unsigned int v19 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        if (v19 <= 0x23)
        {
          *(_DWORD *)(a1 + 40) |= 4u;
          *(_DWORD *)(a1 + 32) = v19;
        }
        unsigned int v20 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v20 >= v16 || *v20 != 32) {
          continue;
        }
        int v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_45:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v21 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v17;
          int v21 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v21;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        if (v21 != (unsigned __int8 *)v16 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        BOOL v15 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_35;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_45;
      default:
        int v10 = TagFallback & 7;
LABEL_18:
        if (v10 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1003C8B14(uint64_t result, unint64_t a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), a2, a4);
      if ((*(_DWORD *)(v5 + 40) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_1003C8BBC(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_11;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v4 = 0;
  if ((*(unsigned char *)(a1 + 40) & 2) != 0)
  {
LABEL_7:
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
LABEL_8:
  if ((v3 & 4) != 0)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
    if ((v3 & 8) != 0) {
      goto LABEL_10;
    }
  }
  else if ((v3 & 8) != 0)
  {
LABEL_10:
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), a2)+ 1;
  }
LABEL_11:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

void sub_1003C8C7C(uint64_t a1, void *lpsrc)
{
  sub_1003C8640(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003C8D04()
{
  return 1;
}

void *sub_1003C8D0C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.MeasurementTypeCount");
}

void sub_1003C8D1C(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022AE020;
  if ((uint64_t *)qword_102489C28 != a1)
  {
    uint64_t v2 = a1[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  sub_10016B2E8(a1 + 14);
  sub_10016B2E8(a1 + 11);
  sub_10016B2E8(a1 + 8);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1003C8DD0(uint64_t *a1)
{
  sub_1003C8D1C(a1);

  operator delete();
}

void sub_1003C8E08()
{
}

uint64_t sub_1003C8E84(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 32);
  int v6 = (unint64_t *)(a1 + 40);
  int v7 = (unint64_t *)(a1 + 48);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 64);
  int v9 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 88);
  int v10 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 112);
  while (1)
  {
LABEL_2:
    unint64_t v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 < *((void *)this + 2) && (*v11 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 168) |= 1u;
        uint64_t v14 = *(void *)(a1 + 8);
        if (!v14) {
          operator new();
        }
        v83[0] = 0;
        BOOL v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v83))return 0; {
        }
          }
        else
        {
          v83[0] = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v83[0]);
        if (!sub_1003C7D7C(v14, this, v28) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v29 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v29, 1);
        int v31 = v29 - 1;
        if (v31 < 0 == v30) {
          *((_DWORD *)this + 14) = v31;
        }
        unsigned int v32 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v32 >= v16 || *v32 != 16) {
          continue;
        }
        int v17 = v32 + 1;
        *((void *)this + 1) = v17;
        goto LABEL_54;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_54:
        v83[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v83);
          if (!result) {
            return result;
          }
          unsigned int v33 = v83[0];
        }
        else
        {
          unsigned int v33 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        if (v33 <= 3)
        {
          *(_DWORD *)(a1 + 168) |= 2u;
          *(_DWORD *)(a1 + 56) = v33;
        }
        unsigned int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 25) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_64:
        *(void *)__int16 v83 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v83) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v83;
        }
        *(_DWORD *)(a1 + 168) |= 4u;
        uint64_t v36 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v36 >= *((void *)this + 2) || *v36 != 33) {
          continue;
        }
        *((void *)this + 1) = v36 + 1;
LABEL_68:
        *(void *)__int16 v83 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v83) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v83;
        }
        *(_DWORD *)(a1 + 168) |= 8u;
        uint64_t v37 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v37 >= v18 || *v37 != 40) {
          continue;
        }
        unsigned int v19 = v37 + 1;
        *((void *)this + 1) = v19;
LABEL_72:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v19;
          int v38 = v19 + 1;
          *((void *)this + 1) = v38;
        }
        *(_DWORD *)(a1 + 168) |= 0x10u;
        if ((unint64_t)v38 >= v18 || *v38 != 48) {
          continue;
        }
        unsigned int v20 = v38 + 1;
        *((void *)this + 1) = v20;
LABEL_80:
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v20;
          int v39 = v20 + 1;
          *((void *)this + 1) = v39;
        }
        *(_DWORD *)(a1 + 168) |= 0x20u;
        if ((unint64_t)v39 >= v18 || *v39 != 56) {
          continue;
        }
        int v21 = v39 + 1;
        *((void *)this + 1) = v21;
LABEL_88:
        if ((unint64_t)v21 >= v18 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          *int v7 = *v21;
          int v40 = v21 + 1;
          *((void *)this + 1) = v40;
        }
        *(_DWORD *)(a1 + 168) |= 0x40u;
        if ((unint64_t)v40 >= v18 || *v40 != 66) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v40 + 1;
LABEL_96:
          int v41 = *(_DWORD *)(a1 + 76);
          uint64_t v42 = *(int *)(a1 + 72);
          if ((int)v42 >= v41)
          {
            if (v41 == *(_DWORD *)(a1 + 80))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v41 + 1);
              int v41 = *(_DWORD *)(a1 + 76);
            }
            *(_DWORD *)(a1 + 76) = v41 + 1;
            operator new();
          }
          uint64_t v43 = *(void *)(a1 + 64);
          *(_DWORD *)(a1 + 72) = v42 + 1;
          uint64_t v44 = *(void *)(v43 + 8 * v42);
          v83[0] = 0;
          uint64_t v45 = (char *)*((void *)this + 1);
          if ((unint64_t)v45 >= *((void *)this + 2) || *v45 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v83))return 0; {
          }
            }
          else
          {
            v83[0] = *v45;
            *((void *)this + 1) = v45 + 1;
          }
          int v46 = *((_DWORD *)this + 14);
          int v47 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v46 + 1;
          if (v46 >= v47) {
            return 0;
          }
          int v48 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v83[0]);
          if (!sub_1003C8840(v44, this, v49) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v48);
          int v50 = *((_DWORD *)this + 14);
          BOOL v30 = __OFSUB__(v50, 1);
          int v51 = v50 - 1;
          if (v51 < 0 == v30) {
            *((_DWORD *)this + 14) = v51;
          }
          int v40 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v40 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v52 = *v40;
        }
        while (v52 == 66);
        if (v52 != 74) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v40 + 1;
LABEL_114:
          int v53 = *(_DWORD *)(a1 + 100);
          uint64_t v54 = *(int *)(a1 + 96);
          if ((int)v54 >= v53)
          {
            if (v53 == *(_DWORD *)(a1 + 104))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9, v53 + 1);
              int v53 = *(_DWORD *)(a1 + 100);
            }
            *(_DWORD *)(a1 + 100) = v53 + 1;
            operator new();
          }
          uint64_t v55 = *(void *)(a1 + 88);
          *(_DWORD *)(a1 + 96) = v54 + 1;
          uint64_t v56 = *(void *)(v55 + 8 * v54);
          v83[0] = 0;
          int v57 = (char *)*((void *)this + 1);
          if ((unint64_t)v57 >= *((void *)this + 2) || *v57 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v83))return 0; {
          }
            }
          else
          {
            v83[0] = *v57;
            *((void *)this + 1) = v57 + 1;
          }
          int v58 = *((_DWORD *)this + 14);
          int v59 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v58 + 1;
          if (v58 >= v59) {
            return 0;
          }
          int v60 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v83[0]);
          if (!sub_1003C8840(v56, this, v61) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v60);
          int v62 = *((_DWORD *)this + 14);
          BOOL v30 = __OFSUB__(v62, 1);
          int v63 = v62 - 1;
          if (v63 < 0 == v30) {
            *((_DWORD *)this + 14) = v63;
          }
          int v40 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v40 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v64 = *v40;
        }
        while (v64 == 74);
        if (v64 != 82) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v40 + 1;
LABEL_132:
          int v65 = *(_DWORD *)(a1 + 124);
          uint64_t v66 = *(int *)(a1 + 120);
          if ((int)v66 >= v65)
          {
            if (v65 == *(_DWORD *)(a1 + 128))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v10, v65 + 1);
              int v65 = *(_DWORD *)(a1 + 124);
            }
            *(_DWORD *)(a1 + 124) = v65 + 1;
            operator new();
          }
          uint64_t v67 = *(void *)(a1 + 112);
          *(_DWORD *)(a1 + 120) = v66 + 1;
          uint64_t v68 = *(void *)(v67 + 8 * v66);
          v83[0] = 0;
          __int16 v69 = (char *)*((void *)this + 1);
          if ((unint64_t)v69 >= *((void *)this + 2) || *v69 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v83))return 0; {
          }
            }
          else
          {
            v83[0] = *v69;
            *((void *)this + 1) = v69 + 1;
          }
          int v70 = *((_DWORD *)this + 14);
          int v71 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v70 + 1;
          if (v70 >= v71) {
            return 0;
          }
          int v72 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v83[0]);
          if (!sub_1003C8840(v68, this, v73) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v72);
          int v74 = *((_DWORD *)this + 14);
          BOOL v30 = __OFSUB__(v74, 1);
          int v75 = v74 - 1;
          if (v75 < 0 == v30) {
            *((_DWORD *)this + 14) = v75;
          }
          int v40 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v40 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v76 = *v40;
        }
        while (v76 == 82);
        if (v76 != 89) {
          continue;
        }
        *((void *)this + 1) = v40 + 1;
LABEL_150:
        *(void *)__int16 v83 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v83) & 1) == 0)return 0; {
        *(void *)(a1 + 136) = *(void *)v83;
        }
        *(_DWORD *)(a1 + 168) |= 0x400u;
        __int16 v77 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v77 >= *((void *)this + 2) || *v77 != 97) {
          continue;
        }
        *((void *)this + 1) = v77 + 1;
LABEL_154:
        *(void *)__int16 v83 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v83) & 1) == 0)return 0; {
        *(void *)(a1 + 144) = *(void *)v83;
        }
        *(_DWORD *)(a1 + 168) |= 0x800u;
        int v78 = (unsigned char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        if ((unint64_t)v78 >= v22 || *v78 != 104) {
          continue;
        }
        unsigned int v23 = v78 + 1;
        *((void *)this + 1) = v23;
LABEL_158:
        v83[0] = 0;
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v83);
          if (!result) {
            return result;
          }
          unsigned int v79 = v83[0];
          int v80 = (unsigned char *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
        }
        else
        {
          unsigned int v79 = *v23;
          int v80 = v23 + 1;
          *((void *)this + 1) = v80;
        }
        *(_DWORD *)(a1 + 60) = v79;
        *(_DWORD *)(a1 + 168) |= 0x1000u;
        if ((unint64_t)v80 >= v22 || *v80 != 112) {
          continue;
        }
        int v24 = v80 + 1;
        *((void *)this + 1) = v24;
LABEL_166:
        v83[0] = 0;
        if ((unint64_t)v24 >= v22 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v83);
          if (!result) {
            return result;
          }
          unsigned int v81 = v83[0];
          int v82 = (unsigned char *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
        }
        else
        {
          unsigned int v81 = *v24;
          int v82 = v24 + 1;
          *((void *)this + 1) = v82;
        }
        *(_DWORD *)(a1 + 160) = v81;
        *(_DWORD *)(a1 + 168) |= 0x2000u;
        if ((unint64_t)v82 >= v22 || *v82 != 121) {
          continue;
        }
        *((void *)this + 1) = v82 + 1;
LABEL_174:
        *(void *)__int16 v83 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v83) & 1) == 0)return 0; {
        *(void *)(a1 + 152) = *(void *)v83;
        }
        *(_DWORD *)(a1 + 168) |= 0x4000u;
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_64;
        }
        goto LABEL_42;
      case 4u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_68;
        }
        goto LABEL_42;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_72;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        unsigned int v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_80;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_88;
      case 8u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_96;
        }
        goto LABEL_42;
      case 9u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_114;
        }
        goto LABEL_42;
      case 0xAu:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_132;
        }
        goto LABEL_42;
      case 0xBu:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_150;
        }
        goto LABEL_42;
      case 0xCu:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_154;
        }
        goto LABEL_42;
      case 0xDu:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        unsigned int v23 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_158;
      case 0xEu:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_166;
      case 0xFu:
        int v13 = TagFallback & 7;
        if (v13 != 1) {
          goto LABEL_42;
        }
        goto LABEL_174;
      default:
        int v13 = TagFallback & 7;
LABEL_42:
        if (v13 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003C99B8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 168);
  if (v6)
  {
    uint64_t v11 = *(void *)(result + 8);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_102489C28 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v11, a2, a4);
    int v6 = *(_DWORD *)(v5 + 168);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_28;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 56), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 168);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 168);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 168);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 32), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 168);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(v5 + 40), (unint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 168) & 0x40) != 0) {
LABEL_8:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(v5 + 48), (unint64_t)a2, a4);
LABEL_9:
  if (*(int *)(v5 + 72) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(*(void *)(v5 + 64) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 72));
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(*(void *)(v5 + 88) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 96));
  }
  if (*(int *)(v5 + 120) >= 1)
  {
    uint64_t v9 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(void *)(*(void *)(v5 + 112) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 120));
  }
  int v10 = *(_DWORD *)(v5 + 168);
  if ((v10 & 0x400) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 136), a3);
    int v10 = *(_DWORD *)(v5 + 168);
    if ((v10 & 0x800) == 0)
    {
LABEL_20:
      if ((v10 & 0x1000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_35;
    }
  }
  else if ((v10 & 0x800) == 0)
  {
    goto LABEL_20;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v5 + 144), a3);
  int v10 = *(_DWORD *)(v5 + 168);
  if ((v10 & 0x1000) == 0)
  {
LABEL_21:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_22;
    }
LABEL_36:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_DWORD *)(v5 + 160), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 168) & 0x4000) == 0) {
      return result;
    }
    goto LABEL_37;
  }
LABEL_35:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(_DWORD *)(v5 + 60), (int)a2, a4);
  int v10 = *(_DWORD *)(v5 + 168);
  if ((v10 & 0x2000) != 0) {
    goto LABEL_36;
  }
LABEL_22:
  if ((v10 & 0x4000) == 0) {
    return result;
  }
LABEL_37:
  double v12 = *(double *)(v5 + 152);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (int)a2, v12, a3);
}

uint64_t sub_1003C9BF8(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 168);
  if (!(_BYTE)v3)
  {
    int v5 = 0;
    goto LABEL_27;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_102489C28 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v6, a2);
  int v8 = (int)v7;
  if (v7 >= 0x80) {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  }
  else {
    int v9 = 1;
  }
  int v4 = v8 + v9 + 1;
  int v3 = *(_DWORD *)(a1 + 168);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 10;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
      int v3 = *(_DWORD *)(a1 + 168);
    }
    else
    {
      int v11 = 1;
    }
    v4 += v11 + 1;
  }
LABEL_18:
  int v12 = v4 + 9;
  if ((v3 & 4) == 0) {
    int v12 = v4;
  }
  if ((v3 & 8) != 0) {
    int v5 = v12 + 9;
  }
  else {
    int v5 = v12;
  }
  if ((v3 & 0x10) != 0)
  {
    v5 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 168);
    if ((v3 & 0x20) == 0)
    {
LABEL_25:
      if ((v3 & 0x40) == 0) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
  }
  else if ((v3 & 0x20) == 0)
  {
    goto LABEL_25;
  }
  v5 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), a2)+ 1;
  int v3 = *(_DWORD *)(a1 + 168);
  if ((v3 & 0x40) != 0)
  {
LABEL_26:
    v5 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 48), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 168);
  }
LABEL_27:
  if ((v3 & 0x3FC00) != 0)
  {
    int v13 = v5 + 9;
    if ((v3 & 0x400) == 0) {
      int v13 = v5;
    }
    if ((v3 & 0x800) != 0) {
      int v5 = v13 + 9;
    }
    else {
      int v5 = v13;
    }
    if ((v3 & 0x1000) != 0)
    {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
      if ((v14 & 0x80000000) != 0)
      {
        int v15 = 11;
      }
      else if (v14 >= 0x80)
      {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 168);
      }
      else
      {
        int v15 = 2;
      }
      v5 += v15;
    }
    if ((v3 & 0x2000) != 0)
    {
      unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 160);
      if ((v16 & 0x80000000) != 0)
      {
        int v17 = 11;
      }
      else if (v16 >= 0x80)
      {
        int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 168);
      }
      else
      {
        int v17 = 2;
      }
      v5 += v17;
    }
    if ((v3 & 0x4000) != 0) {
      v5 += 9;
    }
  }
  int v18 = *(_DWORD *)(a1 + 72);
  int v19 = v18 + v5;
  if (v18 >= 1)
  {
    uint64_t v20 = 0;
    do
    {
      int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8BBC(*(void *)(*(void *)(a1 + 64) + 8 * v20), a2);
      int v22 = (int)v21;
      if (v21 >= 0x80) {
        int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
      }
      else {
        int v23 = 1;
      }
      v19 += v22 + v23;
      ++v20;
    }
    while (v20 < *(int *)(a1 + 72));
  }
  int v24 = *(_DWORD *)(a1 + 96);
  int v25 = v24 + v19;
  if (v24 >= 1)
  {
    uint64_t v26 = 0;
    do
    {
      int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8BBC(*(void *)(*(void *)(a1 + 88) + 8 * v26), a2);
      int v28 = (int)v27;
      if (v27 >= 0x80) {
        int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2);
      }
      else {
        int v29 = 1;
      }
      v25 += v28 + v29;
      ++v26;
    }
    while (v26 < *(int *)(a1 + 96));
  }
  int v30 = *(_DWORD *)(a1 + 120);
  uint64_t v31 = (v30 + v25);
  if (v30 >= 1)
  {
    uint64_t v32 = 0;
    do
    {
      unsigned int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8BBC(*(void *)(*(void *)(a1 + 112)+ 8 * v32), a2);
      int v34 = (int)v33;
      if (v33 >= 0x80) {
        int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33, a2);
      }
      else {
        int v35 = 1;
      }
      uint64_t v31 = (v34 + v31 + v35);
      ++v32;
    }
    while (v32 < *(int *)(a1 + 120));
  }
  *(_DWORD *)(a1 + 164) = v31;
  return v31;
}

void sub_1003C9EBC(uint64_t a1, void *lpsrc)
{
  sub_1003C6E80(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003C9F44()
{
  return 1;
}

void *sub_1003C9F4C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.NrEstimatorHealth");
}

void sub_1003C9F5C(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022AE098;
  if ((uint64_t *)qword_102489C30 != a1)
  {
    uint64_t v2 = a1[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  sub_10016B2E8(a1 + 33);
  sub_10016B2E8(a1 + 30);
  sub_10016B2E8(a1 + 27);
  sub_10016B2E8(a1 + 24);
  sub_10016B2E8(a1 + 17);
  sub_10016B2E8(a1 + 14);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1003CA034(uint64_t *a1)
{
  sub_1003C9F5C(a1);

  operator delete();
}

void sub_1003CA06C()
{
}

uint64_t sub_1003CA108(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unint64_t *)(a1 + 40);
  uint64_t v6 = (unint64_t *)(a1 + 48);
  uint64_t v7 = (unint64_t *)(a1 + 56);
  int v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 112);
  int v9 = (unint64_t *)(a1 + 184);
  uint64_t v126 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 192);
  v127 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 216);
  v128 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 240);
  uint64_t v129 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 136);
  int v10 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 264);
  while (1)
  {
LABEL_2:
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 < *((void *)this + 2) && (*v11 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 292) |= 1u;
        uint64_t v14 = *(void *)(a1 + 8);
        if (!v14) {
          operator new();
        }
        v130[0] = 0;
        int v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v130))return 0; {
        }
          }
        else
        {
          v130[0] = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v130[0]);
        if (!sub_1003C7D7C(v14, this, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v31 = __OFSUB__(v30, 1);
        int v32 = v30 - 1;
        if (v32 < 0 == v31) {
          *((_DWORD *)this + 14) = v32;
        }
        unsigned int v33 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v33 >= v16 || *v33 != 16) {
          continue;
        }
        int v17 = v33 + 1;
        *((void *)this + 1) = v17;
        goto LABEL_72;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_60;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
LABEL_72:
        v130[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v130);
          if (!result) {
            return result;
          }
          unsigned int v34 = v130[0];
        }
        else
        {
          unsigned int v34 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        if (v34 <= 6)
        {
          *(_DWORD *)(a1 + 292) |= 2u;
          *(_DWORD *)(a1 + 16) = v34;
        }
        uint64_t v36 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v36 >= v18 || *v36 != 24) {
          continue;
        }
        int v19 = v36 + 1;
        *((void *)this + 1) = v19;
LABEL_82:
        v130[0] = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v130);
          if (!result) {
            return result;
          }
          unsigned int v37 = v130[0];
        }
        else
        {
          unsigned int v37 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        if (v37 <= 3)
        {
          *(_DWORD *)(a1 + 292) |= 4u;
          *(_DWORD *)(a1 + 20) = v37;
        }
        int v38 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v38 >= *((void *)this + 2) || *v38 != 33) {
          continue;
        }
        *((void *)this + 1) = v38 + 1;
LABEL_92:
        *(void *)v130 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v130) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v130;
        }
        *(_DWORD *)(a1 + 292) |= 8u;
        int v39 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 != 41) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
LABEL_96:
        *(void *)v130 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v130) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v130;
        }
        *(_DWORD *)(a1 + 292) |= 0x10u;
        int v40 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v40 >= v20 || *v40 != 48) {
          continue;
        }
        int v21 = v40 + 1;
        *((void *)this + 1) = v21;
LABEL_100:
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v41 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v21;
          int v41 = v21 + 1;
          *((void *)this + 1) = v41;
        }
        *(_DWORD *)(a1 + 292) |= 0x20u;
        if ((unint64_t)v41 >= v20 || *v41 != 56) {
          continue;
        }
        int v22 = v41 + 1;
        *((void *)this + 1) = v22;
LABEL_108:
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v42 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v22;
          uint64_t v42 = v22 + 1;
          *((void *)this + 1) = v42;
        }
        *(_DWORD *)(a1 + 292) |= 0x40u;
        if ((unint64_t)v42 >= v20 || *v42 != 64) {
          continue;
        }
        int v23 = v42 + 1;
        *((void *)this + 1) = v23;
LABEL_116:
        if ((unint64_t)v23 >= v20 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!result) {
            return result;
          }
          uint64_t v43 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v23;
          uint64_t v43 = v23 + 1;
          *((void *)this + 1) = v43;
        }
        *(_DWORD *)(a1 + 292) |= 0x80u;
        if ((unint64_t)v43 >= v20 || *v43 != 73) {
          continue;
        }
        *((void *)this + 1) = v43 + 1;
LABEL_124:
        *(void *)v130 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v130) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v130;
        }
        *(_DWORD *)(a1 + 292) |= 0x100u;
        uint64_t v44 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 != 81) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
LABEL_128:
        *(void *)v130 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v130) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v130;
        }
        *(_DWORD *)(a1 + 292) |= 0x200u;
        uint64_t v45 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v45 >= *((void *)this + 2) || *v45 != 89) {
          continue;
        }
        *((void *)this + 1) = v45 + 1;
LABEL_132:
        *(void *)v130 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v130) & 1) == 0)return 0; {
        *(void *)(a1 + 80) = *(void *)v130;
        }
        *(_DWORD *)(a1 + 292) |= 0x400u;
        int v46 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 != 97) {
          continue;
        }
        *((void *)this + 1) = v46 + 1;
LABEL_136:
        *(void *)v130 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v130) & 1) == 0)return 0; {
        *(void *)(a1 + 88) = *(void *)v130;
        }
        *(_DWORD *)(a1 + 292) |= 0x800u;
        int v47 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v47 >= *((void *)this + 2) || *v47 != 105) {
          continue;
        }
        *((void *)this + 1) = v47 + 1;
LABEL_140:
        *(void *)v130 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v130) & 1) == 0)return 0; {
        *(void *)(a1 + 96) = *(void *)v130;
        }
        *(_DWORD *)(a1 + 292) |= 0x1000u;
        int v48 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v48 >= *((void *)this + 2) || *v48 != 113) {
          continue;
        }
        *((void *)this + 1) = v48 + 1;
LABEL_144:
        *(void *)v130 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v130) & 1) == 0)return 0; {
        *(void *)(a1 + 104) = *(void *)v130;
        }
        *(_DWORD *)(a1 + 292) |= 0x2000u;
        unsigned int v49 = (unsigned __int8 *)*((void *)this + 1);
        if ((unint64_t)v49 >= *((void *)this + 2) || *v49 != 122) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v49 + 1;
LABEL_148:
          int v50 = *(_DWORD *)(a1 + 124);
          uint64_t v51 = *(int *)(a1 + 120);
          if ((int)v51 >= v50)
          {
            if (v50 == *(_DWORD *)(a1 + 128))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v50 + 1);
              int v50 = *(_DWORD *)(a1 + 124);
            }
            *(_DWORD *)(a1 + 124) = v50 + 1;
            operator new();
          }
          uint64_t v52 = *(void *)(a1 + 112);
          *(_DWORD *)(a1 + 120) = v51 + 1;
          uint64_t v53 = *(void *)(v52 + 8 * v51);
          v130[0] = 0;
          uint64_t v54 = (char *)*((void *)this + 1);
          if ((unint64_t)v54 >= *((void *)this + 2) || *v54 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v130))return 0; {
          }
            }
          else
          {
            v130[0] = *v54;
            *((void *)this + 1) = v54 + 1;
          }
          int v55 = *((_DWORD *)this + 14);
          int v56 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v55 + 1;
          if (v55 >= v56) {
            return 0;
          }
          int v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v130[0]);
          if (!sub_1003C8840(v53, this, v58) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
          int v59 = *((_DWORD *)this + 14);
          BOOL v31 = __OFSUB__(v59, 1);
          int v60 = v59 - 1;
          if (v60 < 0 == v31) {
            *((_DWORD *)this + 14) = v60;
          }
          unsigned int v49 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v61 = *((void *)this + 2);
        }
        while ((unint64_t)v49 < v61 && *v49 == 122);
        if ((int)v61 - (int)v49 < 2 || *v49 != 130 || v49[1] != 1) {
          continue;
        }
        while (1)
        {
          *((void *)this + 1) = v49 + 2;
LABEL_168:
          int v62 = *(_DWORD *)(a1 + 148);
          uint64_t v63 = *(int *)(a1 + 144);
          if ((int)v63 >= v62)
          {
            if (v62 == *(_DWORD *)(a1 + 152))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v129, v62 + 1);
              int v62 = *(_DWORD *)(a1 + 148);
            }
            *(_DWORD *)(a1 + 148) = v62 + 1;
            operator new();
          }
          uint64_t v64 = *(void *)(a1 + 136);
          *(_DWORD *)(a1 + 144) = v63 + 1;
          uint64_t v65 = *(void *)(v64 + 8 * v63);
          v130[0] = 0;
          uint64_t v66 = (char *)*((void *)this + 1);
          if ((unint64_t)v66 >= *((void *)this + 2) || *v66 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v130))return 0; {
          }
            }
          else
          {
            v130[0] = *v66;
            *((void *)this + 1) = v66 + 1;
          }
          int v67 = *((_DWORD *)this + 14);
          int v68 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v67 + 1;
          if (v67 >= v68) {
            return 0;
          }
          int v69 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v130[0]);
          if (!sub_1003C8840(v65, this, v70) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v69);
          int v71 = *((_DWORD *)this + 14);
          BOOL v31 = __OFSUB__(v71, 1);
          int v72 = v71 - 1;
          if (v72 < 0 == v31) {
            *((_DWORD *)this + 14) = v72;
          }
          unsigned int v49 = (unsigned __int8 *)*((void *)this + 1);
          if (*((_DWORD *)this + 4) - (int)v49 <= 1) {
            goto LABEL_2;
          }
          int v73 = *v49;
          if (v73 == 137) {
            break;
          }
          if (v73 != 130 || v49[1] != 1) {
            goto LABEL_2;
          }
        }
        if (v49[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v49 + 2;
LABEL_189:
        *(void *)v130 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v130) & 1) == 0)return 0; {
        *(void *)(a1 + 160) = *(void *)v130;
        }
        *(_DWORD *)(a1 + 292) |= 0x10000u;
        int v74 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v74 < 2 || *v74 != 145 || v74[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v74 + 2;
LABEL_194:
        *(void *)v130 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v130) & 1) == 0)return 0; {
        *(void *)(a1 + 168) = *(void *)v130;
        }
        *(_DWORD *)(a1 + 292) |= 0x20000u;
        int v75 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v75 < 2 || *v75 != 153 || v75[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v75 + 2;
LABEL_199:
        *(void *)v130 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v130) & 1) == 0)return 0; {
        *(void *)(a1 + 176) = *(void *)v130;
        }
        *(_DWORD *)(a1 + 292) |= 0x40000u;
        int v76 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        if ((int)v25 - (int)v76 >= 2 && *v76 == 160 && v76[1] == 1)
        {
          int v24 = v76 + 2;
          *((void *)this + 1) = v24;
LABEL_204:
          if ((unint64_t)v24 >= v25 || (char)*v24 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v9);
            if (!result) {
              return result;
            }
            __int16 v77 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v25 = *((void *)this + 2);
          }
          else
          {
            *int v9 = *v24;
            __int16 v77 = v24 + 1;
            *((void *)this + 1) = v77;
          }
          *(_DWORD *)(a1 + 292) |= 0x80000u;
          if ((int)v25 - (int)v77 >= 2 && *v77 == 170 && v77[1] == 1)
          {
            while (1)
            {
              *((void *)this + 1) = v77 + 2;
LABEL_213:
              int v78 = *(_DWORD *)(a1 + 204);
              uint64_t v79 = *(int *)(a1 + 200);
              if ((int)v79 >= v78)
              {
                if (v78 == *(_DWORD *)(a1 + 208))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v126, v78 + 1);
                  int v78 = *(_DWORD *)(a1 + 204);
                }
                *(_DWORD *)(a1 + 204) = v78 + 1;
                operator new();
              }
              uint64_t v80 = *(void *)(a1 + 192);
              *(_DWORD *)(a1 + 200) = v79 + 1;
              uint64_t v81 = *(void *)(v80 + 8 * v79);
              v130[0] = 0;
              int v82 = (char *)*((void *)this + 1);
              if ((unint64_t)v82 >= *((void *)this + 2) || *v82 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v130))return 0; {
              }
                }
              else
              {
                v130[0] = *v82;
                *((void *)this + 1) = v82 + 1;
              }
              int v83 = *((_DWORD *)this + 14);
              int v84 = *((_DWORD *)this + 15);
              *((_DWORD *)this + 14) = v83 + 1;
              if (v83 >= v84) {
                return 0;
              }
              int v85 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v130[0]);
              if (!sub_1003C8840(v81, this, v86) || !*((unsigned char *)this + 36)) {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v85);
              int v87 = *((_DWORD *)this + 14);
              BOOL v31 = __OFSUB__(v87, 1);
              int v88 = v87 - 1;
              if (v88 < 0 == v31) {
                *((_DWORD *)this + 14) = v88;
              }
              __int16 v77 = (unsigned __int8 *)*((void *)this + 1);
              if (*((_DWORD *)this + 4) - (int)v77 <= 1) {
                goto LABEL_2;
              }
              int v89 = *v77;
              if (v89 == 178) {
                break;
              }
              if (v89 != 170 || v77[1] != 1) {
                goto LABEL_2;
              }
            }
            if (v77[1] == 1)
            {
              while (1)
              {
                *((void *)this + 1) = v77 + 2;
LABEL_234:
                int v90 = *(_DWORD *)(a1 + 228);
                uint64_t v91 = *(int *)(a1 + 224);
                if ((int)v91 >= v90)
                {
                  if (v90 == *(_DWORD *)(a1 + 232))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v127, v90 + 1);
                    int v90 = *(_DWORD *)(a1 + 228);
                  }
                  *(_DWORD *)(a1 + 228) = v90 + 1;
                  operator new();
                }
                uint64_t v92 = *(void *)(a1 + 216);
                *(_DWORD *)(a1 + 224) = v91 + 1;
                uint64_t v93 = *(void *)(v92 + 8 * v91);
                v130[0] = 0;
                __int16 v94 = (char *)*((void *)this + 1);
                if ((unint64_t)v94 >= *((void *)this + 2) || *v94 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v130))return 0; {
                }
                  }
                else
                {
                  v130[0] = *v94;
                  *((void *)this + 1) = v94 + 1;
                }
                int v95 = *((_DWORD *)this + 14);
                int v96 = *((_DWORD *)this + 15);
                *((_DWORD *)this + 14) = v95 + 1;
                if (v95 >= v96) {
                  return 0;
                }
                int v97 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v130[0]);
                if (!sub_1003C8840(v93, this, v98) || !*((unsigned char *)this + 36)) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v97);
                int v99 = *((_DWORD *)this + 14);
                BOOL v31 = __OFSUB__(v99, 1);
                int v100 = v99 - 1;
                if (v100 < 0 == v31) {
                  *((_DWORD *)this + 14) = v100;
                }
                __int16 v77 = (unsigned __int8 *)*((void *)this + 1);
                if (*((_DWORD *)this + 4) - (int)v77 <= 1) {
                  goto LABEL_2;
                }
                int v101 = *v77;
                if (v101 == 186) {
                  break;
                }
                if (v101 != 178 || v77[1] != 1) {
                  goto LABEL_2;
                }
              }
              if (v77[1] == 1)
              {
                while (1)
                {
                  *((void *)this + 1) = v77 + 2;
LABEL_255:
                  int v102 = *(_DWORD *)(a1 + 252);
                  uint64_t v103 = *(int *)(a1 + 248);
                  if ((int)v103 >= v102)
                  {
                    if (v102 == *(_DWORD *)(a1 + 256))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v128, v102 + 1);
                      int v102 = *(_DWORD *)(a1 + 252);
                    }
                    *(_DWORD *)(a1 + 252) = v102 + 1;
                    operator new();
                  }
                  uint64_t v104 = *(void *)(a1 + 240);
                  *(_DWORD *)(a1 + 248) = v103 + 1;
                  uint64_t v105 = *(void *)(v104 + 8 * v103);
                  v130[0] = 0;
                  __int16 v106 = (char *)*((void *)this + 1);
                  if ((unint64_t)v106 >= *((void *)this + 2) || *v106 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v130))return 0; {
                  }
                    }
                  else
                  {
                    v130[0] = *v106;
                    *((void *)this + 1) = v106 + 1;
                  }
                  int v107 = *((_DWORD *)this + 14);
                  int v108 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v107 + 1;
                  if (v107 >= v108) {
                    return 0;
                  }
                  int v109 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v130[0]);
                  if (!sub_1003C8840(v105, this, v110) || !*((unsigned char *)this + 36)) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v109);
                  int v111 = *((_DWORD *)this + 14);
                  BOOL v31 = __OFSUB__(v111, 1);
                  int v112 = v111 - 1;
                  if (v112 < 0 == v31) {
                    *((_DWORD *)this + 14) = v112;
                  }
                  __int16 v77 = (unsigned __int8 *)*((void *)this + 1);
                  if (*((_DWORD *)this + 4) - (int)v77 <= 1) {
                    goto LABEL_2;
                  }
                  int v113 = *v77;
                  if (v113 == 194) {
                    break;
                  }
                  if (v113 != 186 || v77[1] != 1) {
                    goto LABEL_2;
                  }
                }
                if (v77[1] == 1)
                {
                  do
                  {
                    *((void *)this + 1) = v77 + 2;
LABEL_276:
                    uint64_t v114 = *(int *)(a1 + 272);
                    int v115 = *(_DWORD *)(a1 + 276);
                    if ((int)v114 >= v115)
                    {
                      if (v115 == *(_DWORD *)(a1 + 280))
                      {
                        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v10, v115 + 1);
                        int v115 = *(_DWORD *)(a1 + 276);
                      }
                      *(_DWORD *)(a1 + 276) = v115 + 1;
                      operator new();
                    }
                    uint64_t v116 = *(void *)(a1 + 264);
                    *(_DWORD *)(a1 + 272) = v114 + 1;
                    uint64_t v117 = *(void *)(v116 + 8 * v114);
                    v130[0] = 0;
                    long long v118 = (char *)*((void *)this + 1);
                    if ((unint64_t)v118 >= *((void *)this + 2) || *v118 < 0)
                    {
                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v130))return 0; {
                    }
                      }
                    else
                    {
                      v130[0] = *v118;
                      *((void *)this + 1) = v118 + 1;
                    }
                    int v119 = *((_DWORD *)this + 14);
                    int v120 = *((_DWORD *)this + 15);
                    *((_DWORD *)this + 14) = v119 + 1;
                    if (v119 >= v120) {
                      return 0;
                    }
                    int v121 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v130[0]);
                    if (!sub_1003C8840(v117, this, v122) || !*((unsigned char *)this + 36)) {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v121);
                    int v123 = *((_DWORD *)this + 14);
                    BOOL v31 = __OFSUB__(v123, 1);
                    int v124 = v123 - 1;
                    if (v124 < 0 == v31) {
                      *((_DWORD *)this + 14) = v124;
                    }
                    __int16 v77 = (unsigned __int8 *)*((void *)this + 1);
                    v125 = (unsigned __int8 *)*((void *)this + 2);
                  }
                  while ((int)v125 - (int)v77 > 1 && *v77 == 194 && v77[1] == 1);
                  if (v77 == v125 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)this + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
        }
        break;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_60;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_82;
      case 4u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_92;
        }
        goto LABEL_60;
      case 5u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_96;
        }
        goto LABEL_60;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_60;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_100;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_60;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_108;
      case 8u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_60;
        }
        int v23 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_116;
      case 9u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_124;
        }
        goto LABEL_60;
      case 0xAu:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_128;
        }
        goto LABEL_60;
      case 0xBu:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_132;
        }
        goto LABEL_60;
      case 0xCu:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_136;
        }
        goto LABEL_60;
      case 0xDu:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_140;
        }
        goto LABEL_60;
      case 0xEu:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_144;
        }
        goto LABEL_60;
      case 0xFu:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_148;
        }
        goto LABEL_60;
      case 0x10u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_168;
        }
        goto LABEL_60;
      case 0x11u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_189;
        }
        goto LABEL_60;
      case 0x12u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_194;
        }
        goto LABEL_60;
      case 0x13u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_199;
        }
        goto LABEL_60;
      case 0x14u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_60;
        }
        int v24 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        goto LABEL_204;
      case 0x15u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_213;
        }
        goto LABEL_60;
      case 0x16u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_234;
        }
        goto LABEL_60;
      case 0x17u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_255;
        }
        goto LABEL_60;
      case 0x18u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_60;
        }
        goto LABEL_276;
      default:
        int v13 = TagFallback & 7;
LABEL_60:
        if (v13 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003CB3F8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 292);
  if (v6)
  {
    uint64_t v14 = *(void *)(result + 8);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_102489C30 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v14, a2, a4);
    int v6 = *(_DWORD *)(v5 + 292);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_44;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 20), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(v5 + 40), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(v5 + 48), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(v5 + 56), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_54:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(double *)(v5 + 96), a3);
  if ((*(_DWORD *)(v5 + 292) & 0x2000) != 0) {
LABEL_15:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (int)a2, *(double *)(v5 + 104), a3);
LABEL_16:
  if (*(int *)(v5 + 120) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(void *)(*(void *)(v5 + 112) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 120));
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(void *)(*(void *)(v5 + 136) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 144));
  }
  int v9 = *(_DWORD *)(v5 + 292);
  if ((v9 & 0x10000) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (int)a2, *(double *)(v5 + 160), a3);
    int v9 = *(_DWORD *)(v5 + 292);
    if ((v9 & 0x20000) == 0)
    {
LABEL_24:
      if ((v9 & 0x40000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_58;
    }
  }
  else if ((v9 & 0x20000) == 0)
  {
    goto LABEL_24;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (int)a2, *(double *)(v5 + 168), a3);
  int v9 = *(_DWORD *)(v5 + 292);
  if ((v9 & 0x40000) == 0)
  {
LABEL_25:
    if ((v9 & 0x80000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_58:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, (int)a2, *(double *)(v5 + 176), a3);
  if ((*(_DWORD *)(v5 + 292) & 0x80000) != 0) {
LABEL_26:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(void *)(v5 + 184), (unint64_t)a2, a4);
LABEL_27:
  if (*(int *)(v5 + 200) >= 1)
  {
    uint64_t v10 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(void *)(*(void *)(v5 + 192) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 200));
  }
  if (*(int *)(v5 + 224) >= 1)
  {
    uint64_t v11 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(void *)(*(void *)(v5 + 216) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 224));
  }
  if (*(int *)(v5 + 248) >= 1)
  {
    uint64_t v12 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(void *)(*(void *)(v5 + 240) + 8 * v12++), a2, a4);
    while (v12 < *(int *)(v5 + 248));
  }
  if (*(int *)(v5 + 272) >= 1)
  {
    uint64_t v13 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(void *)(*(void *)(v5 + 264) + 8 * v13++), a2, a4);
    while (v13 < *(int *)(v5 + 272));
  }
  return result;
}

uint64_t sub_1003CB764(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 292);
  if (!(_BYTE)v3)
  {
    int v5 = 0;
    goto LABEL_34;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_102489C30 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v6, a2);
  int v8 = (int)v7;
  if (v7 >= 0x80) {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  }
  else {
    int v9 = 1;
  }
  int v4 = v8 + v9 + 1;
  int v3 = *(_DWORD *)(a1 + 292);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 10;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
      int v3 = *(_DWORD *)(a1 + 292);
    }
    else
    {
      int v11 = 1;
    }
    v4 += v11 + 1;
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 10;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
      int v3 = *(_DWORD *)(a1 + 292);
    }
    else
    {
      int v13 = 1;
    }
    v4 += v13 + 1;
  }
  int v14 = v4 + 9;
  if ((v3 & 8) == 0) {
    int v14 = v4;
  }
  if ((v3 & 0x10) != 0) {
    int v5 = v14 + 9;
  }
  else {
    int v5 = v14;
  }
  if ((v3 & 0x20) != 0)
  {
    v5 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 292);
    if ((v3 & 0x40) == 0)
    {
LABEL_32:
      if ((v3 & 0x80) == 0) {
        goto LABEL_34;
      }
      goto LABEL_33;
    }
  }
  else if ((v3 & 0x40) == 0)
  {
    goto LABEL_32;
  }
  v5 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 48), a2)+ 1;
  int v3 = *(_DWORD *)(a1 + 292);
  if ((v3 & 0x80) != 0)
  {
LABEL_33:
    v5 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 56), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 292);
  }
LABEL_34:
  int v15 = v5 + 9;
  if ((v3 & 0x100) == 0) {
    int v15 = v5;
  }
  if ((v3 & 0x200) != 0) {
    v15 += 9;
  }
  if ((v3 & 0x400) != 0) {
    v15 += 9;
  }
  if ((v3 & 0x800) != 0) {
    v15 += 9;
  }
  if ((v3 & 0x1000) != 0) {
    v15 += 9;
  }
  if ((v3 & 0x2000) != 0) {
    v15 += 9;
  }
  if ((v3 & 0xFF00) != 0) {
    int v5 = v15;
  }
  if ((v3 & 0xFF0000) != 0)
  {
    int v16 = v5 + 10;
    if ((v3 & 0x10000) == 0) {
      int v16 = v5;
    }
    if ((v3 & 0x20000) != 0) {
      v16 += 10;
    }
    if ((v3 & 0x40000) != 0) {
      int v5 = v16 + 10;
    }
    else {
      int v5 = v16;
    }
    if ((v3 & 0x80000) != 0) {
      v5 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 184), a2)+ 2;
    }
  }
  int v17 = *(_DWORD *)(a1 + 120);
  int v18 = v17 + v5;
  if (v17 >= 1)
  {
    uint64_t v19 = 0;
    do
    {
      unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8BBC(*(void *)(*(void *)(a1 + 112)+ 8 * v19), a2);
      int v21 = (int)v20;
      if (v20 >= 0x80) {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
      }
      else {
        int v22 = 1;
      }
      v18 += v21 + v22;
      ++v19;
    }
    while (v19 < *(int *)(a1 + 120));
  }
  int v23 = *(_DWORD *)(a1 + 144);
  int v24 = v18 + 2 * v23;
  if (v23 >= 1)
  {
    uint64_t v25 = 0;
    do
    {
      int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8BBC(*(void *)(*(void *)(a1 + 136)+ 8 * v25), a2);
      int v27 = (int)v26;
      if (v26 >= 0x80) {
        int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
      }
      else {
        int v28 = 1;
      }
      v24 += v27 + v28;
      ++v25;
    }
    while (v25 < *(int *)(a1 + 144));
  }
  int v29 = *(_DWORD *)(a1 + 200);
  int v30 = v24 + 2 * v29;
  if (v29 >= 1)
  {
    uint64_t v31 = 0;
    do
    {
      int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8BBC(*(void *)(*(void *)(a1 + 192)+ 8 * v31), a2);
      int v33 = (int)v32;
      if (v32 >= 0x80) {
        int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32, a2);
      }
      else {
        int v34 = 1;
      }
      v30 += v33 + v34;
      ++v31;
    }
    while (v31 < *(int *)(a1 + 200));
  }
  int v35 = *(_DWORD *)(a1 + 224);
  int v36 = v30 + 2 * v35;
  if (v35 >= 1)
  {
    uint64_t v37 = 0;
    do
    {
      int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8BBC(*(void *)(*(void *)(a1 + 216)+ 8 * v37), a2);
      int v39 = (int)v38;
      if (v38 >= 0x80) {
        int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2);
      }
      else {
        int v40 = 1;
      }
      v36 += v39 + v40;
      ++v37;
    }
    while (v37 < *(int *)(a1 + 224));
  }
  int v41 = *(_DWORD *)(a1 + 248);
  int v42 = v36 + 2 * v41;
  if (v41 >= 1)
  {
    uint64_t v43 = 0;
    do
    {
      uint64_t v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8BBC(*(void *)(*(void *)(a1 + 240)+ 8 * v43), a2);
      int v45 = (int)v44;
      if (v44 >= 0x80) {
        int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44, a2);
      }
      else {
        int v46 = 1;
      }
      v42 += v45 + v46;
      ++v43;
    }
    while (v43 < *(int *)(a1 + 248));
  }
  int v47 = *(_DWORD *)(a1 + 272);
  uint64_t v48 = (v42 + 2 * v47);
  if (v47 >= 1)
  {
    uint64_t v49 = 0;
    do
    {
      int v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8BBC(*(void *)(*(void *)(a1 + 264)+ 8 * v49), a2);
      int v51 = (int)v50;
      if (v50 >= 0x80) {
        int v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v50, a2);
      }
      else {
        int v52 = 1;
      }
      uint64_t v48 = (v51 + v48 + v52);
      ++v49;
    }
    while (v49 < *(int *)(a1 + 272));
  }
  *(_DWORD *)(a1 + 288) = v48;
  return v48;
}

double sub_1003CBB54(uint64_t a1, void *lpsrc)
{
  return sub_1003C54BC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003CBBDC()
{
  return 1;
}

void *sub_1003CBBE4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.EstimatorHealth");
}

void sub_1003CBBF4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AE110;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489C38 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003CBC84(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003CBBF4(a1);

  operator delete();
}

void sub_1003CBCBC()
{
}

uint64_t sub_1003CBD40(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 228) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v65[0] = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v65))return 0; {
        }
          }
        else
        {
          v65[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v65[0]);
        if (!sub_1003C7D7C(v8, this, v25) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v26 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v26, 1);
        int v28 = v26 - 1;
        if (v28 < 0 == v27) {
          *((_DWORD *)this + 14) = v28;
        }
        int v29 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v29 >= v12 || *v29 != 16) {
          continue;
        }
        int v13 = v29 + 1;
        *((void *)this + 1) = v13;
        goto LABEL_84;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_72;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_84:
        v65[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v65);
          if (!result) {
            return result;
          }
          unsigned int v30 = v65[0];
        }
        else
        {
          unsigned int v30 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v30 <= 9)
        {
          *(_DWORD *)(a1 + 228) |= 2u;
          *(_DWORD *)(a1 + 24) = v30;
        }
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 25) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_94:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 4u;
        int v33 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v33 >= v14 || *v33 != 32) {
          continue;
        }
        int v15 = v33 + 1;
        *((void *)this + 1) = v15;
LABEL_98:
        v65[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v65);
          if (!result) {
            return result;
          }
          unsigned int v34 = v65[0];
        }
        else
        {
          unsigned int v34 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        if (v34 <= 3)
        {
          *(_DWORD *)(a1 + 228) |= 8u;
          *(_DWORD *)(a1 + 28) = v34;
        }
        int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 41) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_108:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x10u;
        int v36 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v36 >= *((void *)this + 2) || *v36 != 49) {
          continue;
        }
        *((void *)this + 1) = v36 + 1;
LABEL_112:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x20u;
        uint64_t v37 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v37 >= v16 || *v37 != 56) {
          continue;
        }
        int v17 = v37 + 1;
        *((void *)this + 1) = v17;
LABEL_116:
        v65[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v65);
          if (!result) {
            return result;
          }
          unsigned int v38 = v65[0];
        }
        else
        {
          unsigned int v38 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        if (v38 <= 9)
        {
          *(_DWORD *)(a1 + 228) |= 0x40u;
          *(_DWORD *)(a1 + 48) = v38;
        }
        int v39 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v39 >= v18 || *v39 != 64) {
          continue;
        }
        uint64_t v19 = v39 + 1;
        *((void *)this + 1) = v19;
LABEL_126:
        v65[0] = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v65);
          if (!result) {
            return result;
          }
          unsigned int v40 = v65[0];
        }
        else
        {
          unsigned int v40 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        if (v40 <= 3)
        {
          *(_DWORD *)(a1 + 228) |= 0x80u;
          *(_DWORD *)(a1 + 52) = v40;
        }
        int v41 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v41 >= v20 || *v41 != 72) {
          continue;
        }
        int v21 = v41 + 1;
        *((void *)this + 1) = v21;
LABEL_136:
        v65[0] = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v65);
          if (!result) {
            return result;
          }
          unsigned int v42 = v65[0];
        }
        else
        {
          unsigned int v42 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        if (v42 <= 2)
        {
          *(_DWORD *)(a1 + 228) |= 0x100u;
          *(_DWORD *)(a1 + 136) = v42;
        }
        uint64_t v43 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v43 < 2 || *v43 != 161 || v43[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v43 + 2;
LABEL_147:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x200u;
        uint64_t v44 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v44 < 2 || *v44 != 169 || v44[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v44 + 2;
LABEL_152:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x400u;
        int v45 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v45 < 2 || *v45 != 177 || v45[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v45 + 2;
LABEL_157:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x800u;
        int v46 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v46 < 2 || *v46 != 185 || v46[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v46 + 2;
LABEL_162:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 80) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x1000u;
        int v47 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v47 < 2 || *v47 != 193 || v47[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v47 + 2;
LABEL_167:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 88) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x2000u;
        uint64_t v48 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v48 < 2 || *v48 != 201 || v48[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v48 + 2;
LABEL_172:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 96) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x4000u;
        uint64_t v49 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v49 < 2 || *v49 != 209 || v49[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v49 + 2;
LABEL_177:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 104) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x8000u;
        int v50 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v50 < 2 || *v50 != 217 || v50[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v50 + 2;
LABEL_182:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 112) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x10000u;
        int v51 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v51 < 2 || *v51 != 225 || v51[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v51 + 2;
LABEL_187:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 120) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x20000u;
        int v52 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v52 < 2 || *v52 != 233 || v52[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v52 + 2;
LABEL_192:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 128) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x40000u;
        uint64_t v53 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v53 < 2 || *v53 != 145 || v53[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v53 + 2;
LABEL_197:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 144) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x80000u;
        uint64_t v54 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v54 < 2 || *v54 != 153 || v54[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v54 + 2;
LABEL_202:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 152) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x100000u;
        int v55 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v55 < 2 || *v55 != 161 || v55[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v55 + 2;
LABEL_207:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 160) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x200000u;
        int v56 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v56 < 2 || *v56 != 169 || v56[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v56 + 2;
LABEL_212:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 168) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x400000u;
        int v57 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v57 < 2 || *v57 != 225 || v57[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v57 + 2;
LABEL_217:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 176) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x800000u;
        unsigned int v58 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v58 < 2 || *v58 != 233 || v58[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v58 + 2;
LABEL_222:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 184) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x1000000u;
        int v59 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v59 < 2 || *v59 != 241 || v59[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v59 + 2;
LABEL_227:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 192) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x2000000u;
        int v60 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v60 < 2 || *v60 != 249 || v60[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v60 + 2;
LABEL_232:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 200) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x4000000u;
        unint64_t v61 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v61 < 2 || *v61 != 177 || v61[1] != 4) {
          continue;
        }
        *((void *)this + 1) = v61 + 2;
LABEL_237:
        *(void *)uint64_t v65 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65) & 1) == 0)return 0; {
        *(void *)(a1 + 208) = *(void *)v65;
        }
        *(_DWORD *)(a1 + 228) |= 0x8000000u;
        int v62 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v62 < 2 || *v62 != 185 || v62[1] != 4) {
          continue;
        }
        *((void *)this + 1) = v62 + 2;
LABEL_242:
        *(void *)uint64_t v65 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v65))
        {
          *(void *)(a1 + 216) = *(void *)v65;
          *(_DWORD *)(a1 + 228) |= 0x10000000u;
          uint64_t v63 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((int)v10 - (int)v63 >= 2 && *v63 == 128 && v63[1] == 5)
          {
            int v11 = (char *)(v63 + 2);
            *((void *)this + 1) = v11;
LABEL_247:
            v65[0] = 0;
            if ((unint64_t)v11 >= v10 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v65);
              if (!result) {
                return result;
              }
              unsigned int v64 = v65[0];
            }
            else
            {
              unsigned int v64 = *v11;
              *((void *)this + 1) = v11 + 1;
            }
            if (v64 <= 7)
            {
              *(_DWORD *)(a1 + 228) |= 0x20000000u;
              *(_DWORD *)(a1 + 140) = v64;
            }
            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_94;
        }
        goto LABEL_72;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_72;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_98;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_108;
        }
        goto LABEL_72;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_112;
        }
        goto LABEL_72;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_72;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_116;
      case 8u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_72;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_126;
      case 9u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_72;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_136;
      case 0xAu:
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x1Eu:
      case 0x1Fu:
      case 0x20u:
      case 0x21u:
      case 0x22u:
      case 0x23u:
      case 0x24u:
      case 0x25u:
      case 0x26u:
      case 0x27u:
      case 0x28u:
      case 0x29u:
      case 0x2Au:
      case 0x2Bu:
      case 0x2Cu:
      case 0x2Du:
      case 0x2Eu:
      case 0x2Fu:
      case 0x30u:
      case 0x31u:
      case 0x36u:
      case 0x37u:
      case 0x38u:
      case 0x39u:
      case 0x3Au:
      case 0x3Bu:
      case 0x40u:
      case 0x41u:
      case 0x42u:
      case 0x43u:
      case 0x44u:
      case 0x45u:
        goto LABEL_16;
      case 0x14u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_147;
        }
        goto LABEL_72;
      case 0x15u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_152;
        }
        goto LABEL_72;
      case 0x16u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_157;
        }
        goto LABEL_72;
      case 0x17u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_162;
        }
        goto LABEL_72;
      case 0x18u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_167;
        }
        goto LABEL_72;
      case 0x19u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_172;
        }
        goto LABEL_72;
      case 0x1Au:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_177;
        }
        goto LABEL_72;
      case 0x1Bu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_182;
        }
        goto LABEL_72;
      case 0x1Cu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_187;
        }
        goto LABEL_72;
      case 0x1Du:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_192;
        }
        goto LABEL_72;
      case 0x32u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_197;
        }
        goto LABEL_72;
      case 0x33u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_202;
        }
        goto LABEL_72;
      case 0x34u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_207;
        }
        goto LABEL_72;
      case 0x35u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_212;
        }
        goto LABEL_72;
      case 0x3Cu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_217;
        }
        goto LABEL_72;
      case 0x3Du:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_222;
        }
        goto LABEL_72;
      case 0x3Eu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_227;
        }
        goto LABEL_72;
      case 0x3Fu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_232;
        }
        goto LABEL_72;
      case 0x46u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_237;
        }
        goto LABEL_72;
      case 0x47u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_72;
        }
        goto LABEL_242;
      default:
        if (TagFallback >> 3 == 80)
        {
          int v7 = TagFallback & 7;
          if ((TagFallback & 7) == 0)
          {
            int v11 = (char *)*((void *)this + 1);
            unint64_t v10 = *((void *)this + 2);
            goto LABEL_247;
          }
        }
        else
        {
LABEL_16:
          int v7 = TagFallback & 7;
        }
LABEL_72:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003CCCEC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 228);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C38 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 228);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_36;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 48), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 52), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 136), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, (int)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, (int)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, (int)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (int)a2, *(double *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, (int)a2, *(double *)(v5 + 112), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, (int)a2, *(double *)(v5 + 120), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, (int)a2, *(double *)(v5 + 128), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, (int)a2, *(double *)(v5 + 144), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x33, (int)a2, *(double *)(v5 + 152), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x34, (int)a2, *(double *)(v5 + 160), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35, (int)a2, *(double *)(v5 + 168), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C, (int)a2, *(double *)(v5 + 176), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3D, (int)a2, *(double *)(v5 + 184), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E, (int)a2, *(double *)(v5 + 192), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F, (int)a2, *(double *)(v5 + 200), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
LABEL_62:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47, (int)a2, *(double *)(v5 + 216), a3);
    if ((*(_DWORD *)(v5 + 228) & 0x20000000) == 0) {
      return result;
    }
    goto LABEL_63;
  }
LABEL_61:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x46, (int)a2, *(double *)(v5 + 208), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x10000000) != 0) {
    goto LABEL_62;
  }
LABEL_30:
  if ((v6 & 0x20000000) == 0) {
    return result;
  }
LABEL_63:
  int v8 = *(_DWORD *)(v5 + 140);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x50, v8, (int)a2, a4);
}

uint64_t sub_1003CD07C(uint64_t a1, unint64_t a2)
{
  unsigned int v3 = *(_DWORD *)(a1 + 228);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_46;
  }
  if (v3)
  {
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489C38 + 8);
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v6, a2);
    int v8 = (int)v7;
    if (v7 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
    }
    else {
      int v9 = 1;
    }
    int v4 = v8 + v9 + 1;
    unsigned int v3 = *(_DWORD *)(a1 + 228);
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  int v4 = 0;
  if ((v3 & 2) != 0)
  {
LABEL_12:
    unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 10;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
      unsigned int v3 = *(_DWORD *)(a1 + 228);
    }
    else
    {
      int v11 = 1;
    }
    v4 += v11 + 1;
  }
LABEL_18:
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if ((v3 & 8) != 0)
  {
    unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
      unsigned int v3 = *(_DWORD *)(a1 + 228);
    }
    else
    {
      int v13 = 2;
    }
    v4 += v13;
  }
  unsigned int v14 = v4 + 9;
  if ((v3 & 0x10) == 0) {
    unsigned int v14 = v4;
  }
  if ((v3 & 0x20) != 0) {
    uint64_t v5 = v14 + 9;
  }
  else {
    uint64_t v5 = v14;
  }
  if ((v3 & 0x40) != 0)
  {
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if ((v15 & 0x80000000) != 0)
    {
      int v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
      unsigned int v3 = *(_DWORD *)(a1 + 228);
    }
    else
    {
      int v16 = 2;
    }
    uint64_t v5 = (v16 + v5);
  }
  if ((v3 & 0x80) != 0)
  {
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if ((v17 & 0x80000000) != 0)
    {
      int v18 = 11;
    }
    else if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
      unsigned int v3 = *(_DWORD *)(a1 + 228);
    }
    else
    {
      int v18 = 2;
    }
    uint64_t v5 = (v18 + v5);
  }
LABEL_46:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 136);
      if ((v19 & 0x80000000) != 0)
      {
        int v20 = 11;
      }
      else if (v19 >= 0x80)
      {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
        unsigned int v3 = *(_DWORD *)(a1 + 228);
      }
      else
      {
        int v20 = 2;
      }
      LODWORD(v5) = v20 + v5;
    }
    unsigned int v21 = v5 + 10;
    if ((v3 & 0x200) == 0) {
      unsigned int v21 = v5;
    }
    if ((v3 & 0x400) != 0) {
      v21 += 10;
    }
    if ((v3 & 0x800) != 0) {
      v21 += 10;
    }
    if ((v3 & 0x1000) != 0) {
      v21 += 10;
    }
    if ((v3 & 0x2000) != 0) {
      v21 += 10;
    }
    if ((v3 & 0x4000) != 0) {
      v21 += 10;
    }
    if ((v3 & 0x8000) != 0) {
      uint64_t v5 = v21 + 10;
    }
    else {
      uint64_t v5 = v21;
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    unsigned int v22 = v5 + 10;
    if ((v3 & 0x10000) == 0) {
      unsigned int v22 = v5;
    }
    if ((v3 & 0x20000) != 0) {
      v22 += 10;
    }
    if ((v3 & 0x40000) != 0) {
      v22 += 10;
    }
    if ((v3 & 0x80000) != 0) {
      v22 += 10;
    }
    if ((v3 & 0x100000) != 0) {
      v22 += 10;
    }
    if ((v3 & 0x200000) != 0) {
      v22 += 10;
    }
    if ((v3 & 0x400000) != 0) {
      v22 += 10;
    }
    if ((v3 & 0x800000) != 0) {
      uint64_t v5 = v22 + 10;
    }
    else {
      uint64_t v5 = v22;
    }
  }
  if (HIBYTE(v3))
  {
    unsigned int v23 = v5 + 10;
    if ((v3 & 0x1000000) == 0) {
      unsigned int v23 = v5;
    }
    if ((v3 & 0x2000000) != 0) {
      v23 += 10;
    }
    if ((v3 & 0x4000000) != 0) {
      v23 += 10;
    }
    if ((v3 & 0x8000000) != 0) {
      v23 += 10;
    }
    if ((v3 & 0x10000000) != 0) {
      uint64_t v5 = v23 + 10;
    }
    else {
      uint64_t v5 = v23;
    }
    if ((v3 & 0x20000000) != 0)
    {
      int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 140);
      if ((v24 & 0x80000000) != 0)
      {
        int v25 = 12;
      }
      else if (v24 >= 0x80)
      {
        int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2) + 2;
      }
      else
      {
        int v25 = 3;
      }
      uint64_t v5 = (v25 + v5);
    }
  }
  *(_DWORD *)(a1 + 224) = v5;
  return v5;
}

void sub_1003CD368(uint64_t a1, void *lpsrc)
{
  sub_1003C5D88(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003CD3F0()
{
  return 1;
}

void *sub_1003CD3F8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.EstimatorActivity");
}

void sub_1003CD408(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AE188;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489C40 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003CD498(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003CD408(a1);

  operator delete();
}

void sub_1003CD4D0()
{
}

uint64_t sub_1003CD548(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 160) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v42[0] = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v42))return 0; {
        }
          }
        else
        {
          v42[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42[0]);
        if (!sub_1003C7D7C(v8, this, v16) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 17) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
        goto LABEL_63;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_51;
        }
LABEL_63:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 2u;
        unsigned int v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 25) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_67:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 4u;
        unsigned int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 33) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_71:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 8u;
        unsigned int v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v23 >= v10 || *v23 != 40) {
          continue;
        }
        int v11 = v23 + 1;
        *((void *)this + 1) = v11;
LABEL_75:
        v42[0] = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v42);
          if (!result) {
            return result;
          }
          unsigned int v24 = v42[0];
          int v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v24 = *v11;
          int v25 = v11 + 1;
          *((void *)this + 1) = v25;
        }
        *(unsigned char *)(a1 + 152) = v24 != 0;
        *(_DWORD *)(a1 + 160) |= 0x10u;
        if ((unint64_t)v25 >= v10 || *v25 != 48) {
          continue;
        }
        unint64_t v12 = v25 + 1;
        *((void *)this + 1) = v12;
LABEL_83:
        v42[0] = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v42);
          if (!result) {
            return result;
          }
          unsigned int v27 = v42[0];
          int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v27 = *v12;
          int v28 = v12 + 1;
          *((void *)this + 1) = v28;
        }
        *(unsigned char *)(a1 + 153) = v27 != 0;
        *(_DWORD *)(a1 + 160) |= 0x20u;
        if ((unint64_t)v28 >= v10 || *v28 != 57) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_91:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 0x40u;
        int v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 65) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_95:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 0x80u;
        unsigned int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 73) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_99:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 0x100u;
        uint64_t v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 81) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
LABEL_103:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 0x200u;
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 89) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_107:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 0x400u;
        int v33 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 != 97) {
          continue;
        }
        *((void *)this + 1) = v33 + 1;
LABEL_111:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 80) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 0x800u;
        unsigned int v34 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 != 105) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
LABEL_115:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 88) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 0x1000u;
        int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 113) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_119:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 96) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 0x2000u;
        int v36 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v36 >= *((void *)this + 2) || *v36 != 121) {
          continue;
        }
        *((void *)this + 1) = v36 + 1;
LABEL_123:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 104) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 0x4000u;
        uint64_t v37 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v37 < 2 || *v37 != 129 || v37[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v37 + 2;
LABEL_128:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 112) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 0x8000u;
        unsigned int v38 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v38 < 2 || *v38 != 137 || v38[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v38 + 2;
LABEL_133:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 120) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 0x10000u;
        int v39 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v39 < 2 || *v39 != 145 || v39[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v39 + 2;
LABEL_138:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 128) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 0x20000u;
        unsigned int v40 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v40 < 2 || *v40 != 153 || v40[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v40 + 2;
LABEL_143:
        *(void *)unsigned int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42) & 1) == 0)return 0; {
        *(void *)(a1 + 136) = *(void *)v42;
        }
        *(_DWORD *)(a1 + 160) |= 0x40000u;
        int v41 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v41 < 2 || *v41 != 161 || v41[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v41 + 2;
LABEL_148:
        *(void *)unsigned int v42 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v42))
        {
          *(void *)(a1 + 144) = *(void *)v42;
          *(_DWORD *)(a1 + 160) |= 0x80000u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_51;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_51;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_75;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        unint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_83;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_91;
        }
        goto LABEL_51;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_95;
        }
        goto LABEL_51;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_99;
        }
        goto LABEL_51;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_103;
        }
        goto LABEL_51;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_107;
        }
        goto LABEL_51;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_111;
        }
        goto LABEL_51;
      case 0xDu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_115;
        }
        goto LABEL_51;
      case 0xEu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_119;
        }
        goto LABEL_51;
      case 0xFu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_123;
        }
        goto LABEL_51;
      case 0x10u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_128;
        }
        goto LABEL_51;
      case 0x11u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_133;
        }
        goto LABEL_51;
      case 0x12u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_138;
        }
        goto LABEL_51;
      case 0x13u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_143;
        }
        goto LABEL_51;
      case 0x14u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_51;
        }
        goto LABEL_148;
      default:
        int v7 = TagFallback & 7;
LABEL_51:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003CDED4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 160);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C40 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 160);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 152), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 153), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (int)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (int)a2, *(double *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, (int)a2, *(double *)(v5 + 112), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (int)a2, *(double *)(v5 + 120), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
LABEL_42:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, (int)a2, *(double *)(v5 + 136), a3);
    if ((*(_DWORD *)(v5 + 160) & 0x80000) == 0) {
      return result;
    }
    goto LABEL_43;
  }
LABEL_41:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (int)a2, *(double *)(v5 + 128), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x40000) != 0) {
    goto LABEL_42;
  }
LABEL_20:
  if ((v6 & 0x80000) == 0) {
    return result;
  }
LABEL_43:
  double v8 = *(double *)(v5 + 144);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (int)a2, v8, a3);
}

uint64_t sub_1003CE14C(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 160);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489C40 + 8);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v6, a2);
      int v9 = (int)v7;
      if (v7 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
      }
      else {
        int v10 = 1;
      }
      unsigned int v4 = v9 + v10 + 1;
      int v3 = *(_DWORD *)(a1 + 160);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v11 = result + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v11 = result;
    }
    if ((v3 & 0x200) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x800) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x2000) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x4000) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x8000) != 0) {
      uint64_t result = v11 + 10;
    }
    else {
      uint64_t result = v11;
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    unsigned int v12 = result + 10;
    if ((v3 & 0x10000) == 0) {
      unsigned int v12 = result;
    }
    if ((v3 & 0x20000) != 0) {
      v12 += 10;
    }
    if ((v3 & 0x40000) != 0) {
      v12 += 10;
    }
    if ((v3 & 0x80000) != 0) {
      uint64_t result = v12 + 10;
    }
    else {
      uint64_t result = v12;
    }
  }
  *(_DWORD *)(a1 + 156) = result;
  return result;
}

double sub_1003CE2C4(uint64_t a1, void *lpsrc)
{
  return sub_1003C6888(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003CE34C()
{
  return 1;
}

void *sub_1003CE354@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.NrParameters");
}

void sub_1003CE364(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AE200;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489C48 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003CE3F4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003CE364(a1);

  operator delete();
}

void sub_1003CE42C()
{
}

uint64_t sub_1003CE494(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 96) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v34[0] = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34))return 0; {
        }
          }
        else
        {
          v34[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        if (!sub_1003C7D7C(v8, this, v16) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        int v20 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v20 >= v10 || *v20 != 16) {
          continue;
        }
        unsigned int v11 = v20 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_47;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        unsigned int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_47:
        v34[0] = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34);
          if (!result) {
            return result;
          }
          unsigned int v21 = v34[0];
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v11;
          unsigned int v22 = v11 + 1;
          *((void *)this + 1) = v22;
        }
        *(unsigned char *)(a1 + 88) = v21 != 0;
        *(_DWORD *)(a1 + 96) |= 2u;
        if ((unint64_t)v22 >= v10 || *v22 != 24) {
          continue;
        }
        unsigned int v12 = v22 + 1;
        *((void *)this + 1) = v12;
LABEL_55:
        v34[0] = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34);
          if (!result) {
            return result;
          }
          unsigned int v24 = v34[0];
          int v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v24 = *v12;
          int v25 = v12 + 1;
          *((void *)this + 1) = v25;
        }
        *(unsigned char *)(a1 + 89) = v24 != 0;
        *(_DWORD *)(a1 + 96) |= 4u;
        if ((unint64_t)v25 >= v10 || *v25 != 33) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_63:
        *(void *)unsigned int v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v34;
        }
        *(_DWORD *)(a1 + 96) |= 8u;
        int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 41) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_67:
        *(void *)unsigned int v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v34;
        }
        *(_DWORD *)(a1 + 96) |= 0x10u;
        unsigned int v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 != 49) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
LABEL_71:
        *(void *)unsigned int v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v34;
        }
        *(_DWORD *)(a1 + 96) |= 0x20u;
        int v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 57) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_75:
        *(void *)unsigned int v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v34;
        }
        *(_DWORD *)(a1 + 96) |= 0x40u;
        int v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 65) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_79:
        *(void *)unsigned int v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v34;
        }
        *(_DWORD *)(a1 + 96) |= 0x80u;
        unsigned int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 73) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_83:
        *(void *)unsigned int v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v34;
        }
        *(_DWORD *)(a1 + 96) |= 0x100u;
        uint64_t v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 81) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
LABEL_87:
        *(void *)unsigned int v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v34;
        }
        *(_DWORD *)(a1 + 96) |= 0x200u;
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 89) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_91:
        *(void *)unsigned int v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v34;
        }
        *(_DWORD *)(a1 + 96) |= 0x400u;
        int v33 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 != 97) {
          continue;
        }
        *((void *)this + 1) = v33 + 1;
LABEL_95:
        *(void *)unsigned int v34 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34))
        {
          *(void *)(a1 + 80) = *(void *)v34;
          *(_DWORD *)(a1 + 96) |= 0x800u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        unsigned int v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_55;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_63;
        }
        goto LABEL_35;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_35;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_35;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_75;
        }
        goto LABEL_35;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_79;
        }
        goto LABEL_35;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_83;
        }
        goto LABEL_35;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_87;
        }
        goto LABEL_35;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_91;
        }
        goto LABEL_35;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_35;
        }
        goto LABEL_95;
      default:
        int v7 = TagFallback & 7;
LABEL_35:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003CEADC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 96);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C48 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 88), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 89), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_26:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 96) & 0x800) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x400) != 0) {
    goto LABEL_26;
  }
LABEL_12:
  if ((v6 & 0x800) == 0) {
    return result;
  }
LABEL_27:
  double v8 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, v8, a3);
}

uint64_t sub_1003CEC74(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 96);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489C48 + 8);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v6, a2);
      int v9 = (int)v7;
      if (v7 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
      }
      else {
        int v10 = 1;
      }
      unsigned int v4 = v9 + v10 + 1;
      int v3 = *(_DWORD *)(a1 + 96);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 2;
    }
    if ((v3 & 4) != 0) {
      v4 += 2;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v11 = result + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v11 = result;
    }
    if ((v3 & 0x200) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x800) != 0) {
      uint64_t result = v11 + 9;
    }
    else {
      uint64_t result = v11;
    }
  }
  *(_DWORD *)(a1 + 92) = result;
  return result;
}

double sub_1003CED84(uint64_t a1, void *lpsrc)
{
  return sub_1003C6C08(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003CEE0C()
{
  return 1;
}

void *sub_1003CEE14@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.NrBiases");
}

void *sub_1003CEE24(void *result)
{
  if ((void *)qword_102489C50 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[5];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[6];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[7];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = v1[8];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = v1[9];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t result = (void *)v1[10];
    if (result)
    {
      unsigned int v11 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v11();
    }
  }
  return result;
}

void sub_1003CF024(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AE278;
  sub_1003CEE24(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003CF078(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AE278;
  sub_1003CEE24(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1003CF0E0()
{
}

uint64_t sub_1003CF144(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1003C7CEC(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return result;
}

uint64_t sub_1003CF1A4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 132);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1003C7CEC(result);
        int v2 = *(_DWORD *)(v1 + 132);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 120) = 0;
    *(_OWORD *)(v1 + 104) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
  }
  *(_DWORD *)(v1 + 132) = 0;
  return result;
}

uint64_t sub_1003CF214(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1003C7CEC(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return result;
}

uint64_t sub_1003CF274(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1003C7CEC(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return result;
}

uint64_t sub_1003CF2D4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 132);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1003C7CEC(result);
        int v2 = *(_DWORD *)(v1 + 132);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 120) = 0;
    *(_OWORD *)(v1 + 104) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
  }
  *(_DWORD *)(v1 + 132) = 0;
  return result;
}

uint64_t sub_1003CF344(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1003C7CEC(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return result;
}

uint64_t sub_1003CF3A4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1003C7CEC(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return result;
}

uint64_t sub_1003CF404(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t result = *(void *)(result + 8);
      if (result)
      {
        uint64_t result = sub_1003C7CEC(result);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return result;
}

uint64_t sub_1003CF464(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 60))
  {
    if (*(unsigned char *)(result + 60))
    {
      uint64_t result = *(void *)(result + 8);
      if (result) {
        uint64_t result = sub_1003C7CEC(result);
      }
    }
    *(void *)(v1 + 48) = 0;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
  }
  *(_DWORD *)(v1 + 60) = 0;
  return result;
}

uint64_t sub_1003CF4AC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v99 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v99))return 0; {
        }
          }
        else
        {
          unsigned int v99 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        if (!sub_1003C7D7C(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 18) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
LABEL_43:
        *(_DWORD *)(a1 + 92) |= 2u;
        uint64_t v18 = *(void *)(a1 + 16);
        if (!v18) {
          operator new();
        }
        unsigned int v99 = 0;
        int v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v99))return 0; {
        }
          }
        else
        {
          unsigned int v99 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        if (!sub_1003D1CFC(v18, this, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v15) {
          *((_DWORD *)this + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 26) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 92) |= 4u;
        uint64_t v27 = *(void *)(a1 + 24);
        if (!v27) {
          operator new();
        }
        unsigned int v99 = 0;
        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v99))return 0; {
        }
          }
        else
        {
          unsigned int v99 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        if (!sub_1003D2668(v27, this, v32) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v15) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 34) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_71:
        *(_DWORD *)(a1 + 92) |= 8u;
        uint64_t v36 = *(void *)(a1 + 32);
        if (!v36) {
          operator new();
        }
        unsigned int v99 = 0;
        uint64_t v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v99))return 0; {
        }
          }
        else
        {
          unsigned int v99 = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        if (!sub_1003D3260(v36, this, v41) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v15) {
          *((_DWORD *)this + 14) = v43;
        }
        uint64_t v44 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 != 42) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
LABEL_85:
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v45 = *(void *)(a1 + 40);
        if (!v45) {
          operator new();
        }
        unsigned int v99 = 0;
        int v46 = (char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v99))return 0; {
        }
          }
        else
        {
          unsigned int v99 = *v46;
          *((void *)this + 1) = v46 + 1;
        }
        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        if (!sub_1003D3BC4(v45, this, v50) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v51 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v51, 1);
        int v52 = v51 - 1;
        if (v52 < 0 == v15) {
          *((_DWORD *)this + 14) = v52;
        }
        uint64_t v53 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v53 >= *((void *)this + 2) || *v53 != 50) {
          continue;
        }
        *((void *)this + 1) = v53 + 1;
LABEL_99:
        *(_DWORD *)(a1 + 92) |= 0x20u;
        uint64_t v54 = *(void *)(a1 + 48);
        if (!v54) {
          operator new();
        }
        unsigned int v99 = 0;
        int v55 = (char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v99))return 0; {
        }
          }
        else
        {
          unsigned int v99 = *v55;
          *((void *)this + 1) = v55 + 1;
        }
        int v56 = *((_DWORD *)this + 14);
        int v57 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v56 + 1;
        if (v56 >= v57) {
          return 0;
        }
        int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        if (!sub_1003D4530(v54, this, v59) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
        int v60 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v15) {
          *((_DWORD *)this + 14) = v61;
        }
        int v62 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v62 >= *((void *)this + 2) || *v62 != 58) {
          continue;
        }
        *((void *)this + 1) = v62 + 1;
LABEL_113:
        *(_DWORD *)(a1 + 92) |= 0x40u;
        uint64_t v63 = *(void *)(a1 + 56);
        if (!v63) {
          operator new();
        }
        unsigned int v99 = 0;
        unsigned int v64 = (char *)*((void *)this + 1);
        if ((unint64_t)v64 >= *((void *)this + 2) || *v64 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v99))return 0; {
        }
          }
        else
        {
          unsigned int v99 = *v64;
          *((void *)this + 1) = v64 + 1;
        }
        int v65 = *((_DWORD *)this + 14);
        int v66 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v65 + 1;
        if (v65 >= v66) {
          return 0;
        }
        int v67 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        if (!sub_1003D5128(v63, this, v68) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v67);
        int v69 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v69, 1);
        int v70 = v69 - 1;
        if (v70 < 0 == v15) {
          *((_DWORD *)this + 14) = v70;
        }
        int v71 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v71 >= *((void *)this + 2) || *v71 != 66) {
          continue;
        }
        *((void *)this + 1) = v71 + 1;
LABEL_127:
        *(_DWORD *)(a1 + 92) |= 0x80u;
        uint64_t v72 = *(void *)(a1 + 64);
        if (!v72) {
          operator new();
        }
        unsigned int v99 = 0;
        int v73 = (char *)*((void *)this + 1);
        if ((unint64_t)v73 >= *((void *)this + 2) || *v73 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v99))return 0; {
        }
          }
        else
        {
          unsigned int v99 = *v73;
          *((void *)this + 1) = v73 + 1;
        }
        int v74 = *((_DWORD *)this + 14);
        int v75 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v74 + 1;
        if (v74 >= v75) {
          return 0;
        }
        int v76 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        if (!sub_1003D5A8C(v72, this, v77) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v76);
        int v78 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v78, 1);
        int v79 = v78 - 1;
        if (v79 < 0 == v15) {
          *((_DWORD *)this + 14) = v79;
        }
        uint64_t v80 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v80 >= *((void *)this + 2) || *v80 != 74) {
          continue;
        }
        *((void *)this + 1) = v80 + 1;
LABEL_141:
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v81 = *(void *)(a1 + 72);
        if (!v81) {
          operator new();
        }
        unsigned int v99 = 0;
        int v82 = (char *)*((void *)this + 1);
        if ((unint64_t)v82 >= *((void *)this + 2) || *v82 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v99))return 0; {
        }
          }
        else
        {
          unsigned int v99 = *v82;
          *((void *)this + 1) = v82 + 1;
        }
        int v83 = *((_DWORD *)this + 14);
        int v84 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v83 + 1;
        if (v83 >= v84) {
          return 0;
        }
        int v85 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        if (!sub_1003D63F0(v81, this, v86) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v85);
        int v87 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v87, 1);
        int v88 = v87 - 1;
        if (v88 < 0 == v15) {
          *((_DWORD *)this + 14) = v88;
        }
        int v89 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v89 >= *((void *)this + 2) || *v89 != 82) {
          continue;
        }
        *((void *)this + 1) = v89 + 1;
LABEL_155:
        *(_DWORD *)(a1 + 92) |= 0x200u;
        uint64_t v90 = *(void *)(a1 + 80);
        if (!v90) {
          operator new();
        }
        unsigned int v99 = 0;
        uint64_t v91 = (char *)*((void *)this + 1);
        if ((unint64_t)v91 >= *((void *)this + 2) || *v91 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v99))return 0; {
        }
          }
        else
        {
          unsigned int v99 = *v91;
          *((void *)this + 1) = v91 + 1;
        }
        int v92 = *((_DWORD *)this + 14);
        int v93 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v92 + 1;
        if (v92 >= v93) {
          return 0;
        }
        int v94 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99);
        if (!sub_1003D6D4C(v90, this, v95) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v94);
        int v96 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v96, 1);
        int v97 = v96 - 1;
        if (v97 < 0 == v15) {
          *((_DWORD *)this + 14) = v97;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_57;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_85;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_99;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_113;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_127;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_141;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        goto LABEL_155;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003D018C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C50 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489C50 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489C50 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_102489C50 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
LABEL_24:
  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_102489C50 + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_27:
  uint64_t v12 = *(void *)(v5 + 48);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_102489C50 + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_30:
  uint64_t v13 = *(void *)(v5 + 56);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_102489C50 + 56);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
LABEL_33:
  uint64_t v14 = *(void *)(v5 + 64);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_102489C50 + 64);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v14, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      return result;
    }
    goto LABEL_39;
  }
LABEL_36:
  uint64_t v15 = *(void *)(v5 + 72);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_102489C50 + 72);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v15, a2, a4);
  if ((*(_DWORD *)(v5 + 92) & 0x200) != 0)
  {
LABEL_39:
    uint64_t v16 = *(void *)(v5 + 80);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_102489C50 + 80);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v16, a2, a4);
  }
  return result;
}

uint64_t sub_1003D037C(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_61;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_102489C50 + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v5, a2);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  uint64_t v4 = (v7 + v8 + 1);
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489C50 + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003D239C(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    uint64_t v4 = (v4 + v11 + v12 + 1);
    int v3 = *(_DWORD *)(a1 + 92);
  }
LABEL_18:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_102489C50 + 24);
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003D2F60(v13, a2);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    }
    else {
      int v16 = 1;
    }
    uint64_t v4 = (v4 + v15 + v16 + 1);
    int v3 = *(_DWORD *)(a1 + 92);
    if ((v3 & 8) == 0)
    {
LABEL_20:
      if ((v3 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)(a1 + 32);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_102489C50 + 32);
  }
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003D3900(v17, a2);
  int v19 = (int)v18;
  if (v18 >= 0x80) {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
  }
  else {
    int v20 = 1;
  }
  uint64_t v4 = (v4 + v19 + v20 + 1);
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x10) == 0)
  {
LABEL_21:
    if ((v3 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
LABEL_37:
  uint64_t v21 = *(void *)(a1 + 40);
  if (!v21) {
    uint64_t v21 = *(void *)(qword_102489C50 + 40);
  }
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003D4264(v21, a2);
  int v23 = (int)v22;
  if (v22 >= 0x80) {
    int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
  }
  else {
    int v24 = 1;
  }
  uint64_t v4 = (v4 + v23 + v24 + 1);
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x20) == 0)
  {
LABEL_22:
    if ((v3 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_43:
  uint64_t v25 = *(void *)(a1 + 48);
  if (!v25) {
    uint64_t v25 = *(void *)(qword_102489C50 + 48);
  }
  int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003D4E28(v25, a2);
  int v27 = (int)v26;
  if (v26 >= 0x80) {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
  }
  else {
    int v28 = 1;
  }
  uint64_t v4 = (v4 + v27 + v28 + 1);
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x40) == 0)
  {
LABEL_23:
    if ((v3 & 0x80) == 0) {
      goto LABEL_61;
    }
    goto LABEL_55;
  }
LABEL_49:
  uint64_t v29 = *(void *)(a1 + 56);
  if (!v29) {
    uint64_t v29 = *(void *)(qword_102489C50 + 56);
  }
  int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003D57C8(v29, a2);
  int v31 = (int)v30;
  if (v30 >= 0x80) {
    int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
  }
  else {
    int v32 = 1;
  }
  uint64_t v4 = (v4 + v31 + v32 + 1);
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x80) != 0)
  {
LABEL_55:
    uint64_t v33 = *(void *)(a1 + 64);
    if (!v33) {
      uint64_t v33 = *(void *)(qword_102489C50 + 64);
    }
    int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003D612C(v33, a2);
    int v35 = (int)v34;
    if (v34 >= 0x80) {
      int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34, a2);
    }
    else {
      int v36 = 1;
    }
    uint64_t v4 = (v4 + v35 + v36 + 1);
    int v3 = *(_DWORD *)(a1 + 92);
  }
LABEL_61:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      uint64_t v37 = *(void *)(a1 + 72);
      if (!v37) {
        uint64_t v37 = *(void *)(qword_102489C50 + 72);
      }
      int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003D6A90(v37, a2);
      int v39 = (int)v38;
      if (v38 >= 0x80) {
        int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2);
      }
      else {
        int v40 = 1;
      }
      uint64_t v4 = (v4 + v39 + v40 + 1);
      int v3 = *(_DWORD *)(a1 + 92);
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t v41 = *(void *)(a1 + 80);
      if (!v41) {
        uint64_t v41 = *(void *)(qword_102489C50 + 80);
      }
      int v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003D7218(v41, a2);
      int v44 = (int)v42;
      if (v42 >= 0x80) {
        int v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42, v43);
      }
      else {
        int v45 = 1;
      }
      uint64_t v4 = (v4 + v44 + v45 + 1);
    }
  }
  *(_DWORD *)(a1 + 88) = v4;
  return v4;
}

double sub_1003D06B4(uint64_t a1, void *lpsrc)
{
  return sub_1003C6284(a1, (uint64_t)lpsrc);
}

double sub_1003D073C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C58 + 8);
    }
    double result = sub_1003C7864(v6, v7);
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 92) |= 2u;
  *(double *)(a1 + 16) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = *(double *)(a2 + 24);
  *(_DWORD *)(a1 + 92) |= 4u;
  *(double *)(a1 + 24) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = *(double *)(a2 + 32);
  *(_DWORD *)(a1 + 92) |= 8u;
  *(double *)(a1 + 32) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 92) |= 0x20u;
    *(double *)(a1 + 48) = result;
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  double result = *(double *)(a2 + 40);
  *(_DWORD *)(a1 + 92) |= 0x10u;
  *(double *)(a1 + 40) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  double result = *(double *)(a2 + 56);
  *(_DWORD *)(a1 + 92) |= 0x40u;
  *(double *)(a1 + 56) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *(double *)(a2 + 64);
    *(_DWORD *)(a1 + 92) |= 0x80u;
    *(double *)(a1 + 64) = result;
    int v5 = *(_DWORD *)(a2 + 92);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      double result = *(double *)(a2 + 72);
      *(_DWORD *)(a1 + 92) |= 0x100u;
      *(double *)(a1 + 72) = result;
      int v5 = *(_DWORD *)(a2 + 92);
    }
    if ((v5 & 0x200) != 0)
    {
      double result = *(double *)(a2 + 80);
      *(_DWORD *)(a1 + 92) |= 0x200u;
      *(double *)(a1 + 80) = result;
    }
  }
  return result;
}

void sub_1003D0954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_1003D096C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *(_DWORD *)(a2 + 132);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *(_DWORD *)(a1 + 132) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C60 + 8);
    }
    double result = sub_1003C7864(v6, v7);
    int v5 = *(_DWORD *)(a2 + 132);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 132) |= 2u;
  *(double *)(a1 + 16) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  double result = *(double *)(a2 + 24);
  *(_DWORD *)(a1 + 132) |= 4u;
  *(double *)(a1 + 24) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  double result = *(double *)(a2 + 32);
  *(_DWORD *)(a1 + 132) |= 8u;
  *(double *)(a1 + 32) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_32:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 132) |= 0x20u;
    *(double *)(a1 + 48) = result;
    int v5 = *(_DWORD *)(a2 + 132);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_31:
  double result = *(double *)(a2 + 40);
  *(_DWORD *)(a1 + 132) |= 0x10u;
  *(double *)(a1 + 40) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 0x20) != 0) {
    goto LABEL_32;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_33:
  double result = *(double *)(a2 + 56);
  *(_DWORD *)(a1 + 132) |= 0x40u;
  *(double *)(a1 + 56) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *(double *)(a2 + 64);
    *(_DWORD *)(a1 + 132) |= 0x80u;
    *(double *)(a1 + 64) = result;
    int v5 = *(_DWORD *)(a2 + 132);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0) {
    return result;
  }
  if ((v5 & 0x100) != 0)
  {
    double result = *(double *)(a2 + 72);
    *(_DWORD *)(a1 + 132) |= 0x100u;
    *(double *)(a1 + 72) = result;
    int v5 = *(_DWORD *)(a2 + 132);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_37;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  double result = *(double *)(a2 + 80);
  *(_DWORD *)(a1 + 132) |= 0x200u;
  *(double *)(a1 + 80) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = *(double *)(a2 + 88);
  *(_DWORD *)(a1 + 132) |= 0x400u;
  *(double *)(a1 + 88) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = *(double *)(a2 + 96);
  *(_DWORD *)(a1 + 132) |= 0x800u;
  *(double *)(a1 + 96) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = *(double *)(a2 + 104);
  *(_DWORD *)(a1 + 132) |= 0x1000u;
  *(double *)(a1 + 104) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_40:
  double result = *(double *)(a2 + 112);
  *(_DWORD *)(a1 + 132) |= 0x2000u;
  *(double *)(a1 + 112) = result;
  if ((*(_DWORD *)(a2 + 132) & 0x4000) == 0) {
    return result;
  }
LABEL_21:
  double result = *(double *)(a2 + 120);
  *(_DWORD *)(a1 + 132) |= 0x4000u;
  *(double *)(a1 + 120) = result;
  return result;
}

void sub_1003D0C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_1003D0C44(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C68 + 8);
    }
    double result = sub_1003C7864(v6, v7);
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 92) |= 2u;
  *(double *)(a1 + 16) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = *(double *)(a2 + 24);
  *(_DWORD *)(a1 + 92) |= 4u;
  *(double *)(a1 + 24) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = *(double *)(a2 + 32);
  *(_DWORD *)(a1 + 92) |= 8u;
  *(double *)(a1 + 32) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 92) |= 0x20u;
    *(double *)(a1 + 48) = result;
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  double result = *(double *)(a2 + 40);
  *(_DWORD *)(a1 + 92) |= 0x10u;
  *(double *)(a1 + 40) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  double result = *(double *)(a2 + 56);
  *(_DWORD *)(a1 + 92) |= 0x40u;
  *(double *)(a1 + 56) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *(double *)(a2 + 64);
    *(_DWORD *)(a1 + 92) |= 0x80u;
    *(double *)(a1 + 64) = result;
    int v5 = *(_DWORD *)(a2 + 92);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      double result = *(double *)(a2 + 72);
      *(_DWORD *)(a1 + 92) |= 0x100u;
      *(double *)(a1 + 72) = result;
      int v5 = *(_DWORD *)(a2 + 92);
    }
    if ((v5 & 0x200) != 0)
    {
      double result = *(double *)(a2 + 80);
      *(_DWORD *)(a1 + 92) |= 0x200u;
      *(double *)(a1 + 80) = result;
    }
  }
  return result;
}

void sub_1003D0E5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_1003D0E74(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C70 + 8);
    }
    double result = sub_1003C7864(v6, v7);
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 92) |= 2u;
  *(double *)(a1 + 16) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = *(double *)(a2 + 24);
  *(_DWORD *)(a1 + 92) |= 4u;
  *(double *)(a1 + 24) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = *(double *)(a2 + 32);
  *(_DWORD *)(a1 + 92) |= 8u;
  *(double *)(a1 + 32) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 92) |= 0x20u;
    *(double *)(a1 + 48) = result;
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  double result = *(double *)(a2 + 40);
  *(_DWORD *)(a1 + 92) |= 0x10u;
  *(double *)(a1 + 40) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  double result = *(double *)(a2 + 56);
  *(_DWORD *)(a1 + 92) |= 0x40u;
  *(double *)(a1 + 56) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *(double *)(a2 + 64);
    *(_DWORD *)(a1 + 92) |= 0x80u;
    *(double *)(a1 + 64) = result;
    int v5 = *(_DWORD *)(a2 + 92);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      double result = *(double *)(a2 + 72);
      *(_DWORD *)(a1 + 92) |= 0x100u;
      *(double *)(a1 + 72) = result;
      int v5 = *(_DWORD *)(a2 + 92);
    }
    if ((v5 & 0x200) != 0)
    {
      double result = *(double *)(a2 + 80);
      *(_DWORD *)(a1 + 92) |= 0x200u;
      *(double *)(a1 + 80) = result;
    }
  }
  return result;
}

void sub_1003D108C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_1003D10A4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *(_DWORD *)(a2 + 132);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *(_DWORD *)(a1 + 132) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C78 + 8);
    }
    double result = sub_1003C7864(v6, v7);
    int v5 = *(_DWORD *)(a2 + 132);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 132) |= 2u;
  *(double *)(a1 + 16) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  double result = *(double *)(a2 + 24);
  *(_DWORD *)(a1 + 132) |= 4u;
  *(double *)(a1 + 24) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  double result = *(double *)(a2 + 32);
  *(_DWORD *)(a1 + 132) |= 8u;
  *(double *)(a1 + 32) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_32:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 132) |= 0x20u;
    *(double *)(a1 + 48) = result;
    int v5 = *(_DWORD *)(a2 + 132);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_31:
  double result = *(double *)(a2 + 40);
  *(_DWORD *)(a1 + 132) |= 0x10u;
  *(double *)(a1 + 40) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 0x20) != 0) {
    goto LABEL_32;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_33:
  double result = *(double *)(a2 + 56);
  *(_DWORD *)(a1 + 132) |= 0x40u;
  *(double *)(a1 + 56) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *(double *)(a2 + 64);
    *(_DWORD *)(a1 + 132) |= 0x80u;
    *(double *)(a1 + 64) = result;
    int v5 = *(_DWORD *)(a2 + 132);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0) {
    return result;
  }
  if ((v5 & 0x100) != 0)
  {
    double result = *(double *)(a2 + 72);
    *(_DWORD *)(a1 + 132) |= 0x100u;
    *(double *)(a1 + 72) = result;
    int v5 = *(_DWORD *)(a2 + 132);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_37;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  double result = *(double *)(a2 + 80);
  *(_DWORD *)(a1 + 132) |= 0x200u;
  *(double *)(a1 + 80) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = *(double *)(a2 + 88);
  *(_DWORD *)(a1 + 132) |= 0x400u;
  *(double *)(a1 + 88) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = *(double *)(a2 + 96);
  *(_DWORD *)(a1 + 132) |= 0x800u;
  *(double *)(a1 + 96) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = *(double *)(a2 + 104);
  *(_DWORD *)(a1 + 132) |= 0x1000u;
  *(double *)(a1 + 104) = result;
  int v5 = *(_DWORD *)(a2 + 132);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_40:
  double result = *(double *)(a2 + 112);
  *(_DWORD *)(a1 + 132) |= 0x2000u;
  *(double *)(a1 + 112) = result;
  if ((*(_DWORD *)(a2 + 132) & 0x4000) == 0) {
    return result;
  }
LABEL_21:
  double result = *(double *)(a2 + 120);
  *(_DWORD *)(a1 + 132) |= 0x4000u;
  *(double *)(a1 + 120) = result;
  return result;
}

void sub_1003D1364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_1003D137C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C80 + 8);
    }
    double result = sub_1003C7864(v6, v7);
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 92) |= 2u;
  *(double *)(a1 + 16) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = *(double *)(a2 + 24);
  *(_DWORD *)(a1 + 92) |= 4u;
  *(double *)(a1 + 24) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = *(double *)(a2 + 32);
  *(_DWORD *)(a1 + 92) |= 8u;
  *(double *)(a1 + 32) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 92) |= 0x20u;
    *(double *)(a1 + 48) = result;
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  double result = *(double *)(a2 + 40);
  *(_DWORD *)(a1 + 92) |= 0x10u;
  *(double *)(a1 + 40) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  double result = *(double *)(a2 + 56);
  *(_DWORD *)(a1 + 92) |= 0x40u;
  *(double *)(a1 + 56) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *(double *)(a2 + 64);
    *(_DWORD *)(a1 + 92) |= 0x80u;
    *(double *)(a1 + 64) = result;
    int v5 = *(_DWORD *)(a2 + 92);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      double result = *(double *)(a2 + 72);
      *(_DWORD *)(a1 + 92) |= 0x100u;
      *(double *)(a1 + 72) = result;
      int v5 = *(_DWORD *)(a2 + 92);
    }
    if ((v5 & 0x200) != 0)
    {
      double result = *(double *)(a2 + 80);
      *(_DWORD *)(a1 + 92) |= 0x200u;
      *(double *)(a1 + 80) = result;
    }
  }
  return result;
}

void sub_1003D1594(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_1003D15AC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C88 + 8);
    }
    double result = sub_1003C7864(v6, v7);
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 92) |= 2u;
  *(double *)(a1 + 16) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = *(double *)(a2 + 24);
  *(_DWORD *)(a1 + 92) |= 4u;
  *(double *)(a1 + 24) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = *(double *)(a2 + 32);
  *(_DWORD *)(a1 + 92) |= 8u;
  *(double *)(a1 + 32) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 92) |= 0x20u;
    *(double *)(a1 + 48) = result;
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  double result = *(double *)(a2 + 40);
  *(_DWORD *)(a1 + 92) |= 0x10u;
  *(double *)(a1 + 40) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  double result = *(double *)(a2 + 56);
  *(_DWORD *)(a1 + 92) |= 0x40u;
  *(double *)(a1 + 56) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *(double *)(a2 + 64);
    *(_DWORD *)(a1 + 92) |= 0x80u;
    *(double *)(a1 + 64) = result;
    int v5 = *(_DWORD *)(a2 + 92);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      double result = *(double *)(a2 + 72);
      *(_DWORD *)(a1 + 92) |= 0x100u;
      *(double *)(a1 + 72) = result;
      int v5 = *(_DWORD *)(a2 + 92);
    }
    if ((v5 & 0x200) != 0)
    {
      double result = *(double *)(a2 + 80);
      *(_DWORD *)(a1 + 92) |= 0x200u;
      *(double *)(a1 + 80) = result;
    }
  }
  return result;
}

void sub_1003D17C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_1003D17DC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C90 + 8);
    }
    double result = sub_1003C7864(v6, v7);
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 92) |= 2u;
  *(double *)(a1 + 16) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = *(double *)(a2 + 24);
  *(_DWORD *)(a1 + 92) |= 4u;
  *(double *)(a1 + 24) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = *(double *)(a2 + 32);
  *(_DWORD *)(a1 + 92) |= 8u;
  *(double *)(a1 + 32) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 92) |= 0x20u;
    *(double *)(a1 + 48) = result;
    int v5 = *(_DWORD *)(a2 + 92);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  double result = *(double *)(a2 + 40);
  *(_DWORD *)(a1 + 92) |= 0x10u;
  *(double *)(a1 + 40) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  double result = *(double *)(a2 + 56);
  *(_DWORD *)(a1 + 92) |= 0x40u;
  *(double *)(a1 + 56) = result;
  int v5 = *(_DWORD *)(a2 + 92);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *(double *)(a2 + 64);
    *(_DWORD *)(a1 + 92) |= 0x80u;
    *(double *)(a1 + 64) = result;
    int v5 = *(_DWORD *)(a2 + 92);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      double result = *(double *)(a2 + 72);
      *(_DWORD *)(a1 + 92) |= 0x100u;
      *(double *)(a1 + 72) = result;
      int v5 = *(_DWORD *)(a2 + 92);
    }
    if ((v5 & 0x200) != 0)
    {
      double result = *(double *)(a2 + 80);
      *(_DWORD *)(a1 + 92) |= 0x200u;
      *(double *)(a1 + 80) = result;
    }
  }
  return result;
}

void sub_1003D19F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double sub_1003D1A0C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 60);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 60))
    {
      *(_DWORD *)(a1 + 60) |= 1u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_102489C98 + 8);
      }
      double result = sub_1003C7864(v6, v7);
      int v5 = *(_DWORD *)(a2 + 60);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_18;
      }
    }
    else if ((*(unsigned char *)(a2 + 60) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 60) |= 2u;
    *(double *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_19;
    }
LABEL_18:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 60) |= 4u;
    *(double *)(a1 + 24) = result;
    int v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
LABEL_19:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 60) |= 8u;
    *(double *)(a1 + 32) = result;
    int v5 = *(_DWORD *)(a2 + 60);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        return result;
      }
      goto LABEL_10;
    }
LABEL_20:
    double result = *(double *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 0x10u;
    *(double *)(a1 + 40) = result;
    if ((*(_DWORD *)(a2 + 60) & 0x20) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(double *)(a1 + 48) = result;
  }
  return result;
}

void sub_1003D1BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003D1BB8()
{
  return 1;
}

void *sub_1003D1BC0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.EstimatorState");
}

void sub_1003D1BD0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AE2F0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489C58 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003D1C60(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003D1BD0(a1);

  operator delete();
}

void sub_1003D1C98()
{
}

uint64_t sub_1003D1CFC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v27[0] = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27))return 0; {
        }
          }
        else
        {
          v27[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        if (!sub_1003C7D7C(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 17) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 2u;
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 25) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_47:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 4u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 33) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_51:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 8u;
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 41) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_55:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 49) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_59:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 57) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_63:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 65) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_67:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x80u;
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 73) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_71:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 81) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_75:
        *(void *)int v27 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27))
        {
          *(void *)(a1 + 80) = *(void *)v27;
          *(_DWORD *)(a1 + 92) |= 0x200u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003D223C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C58 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 92) & 0x200) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return result;
  }
LABEL_23:
  double v8 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, v8, a3);
}

uint64_t sub_1003D239C(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_102489C58 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v5, a2);
      int v8 = (int)v6;
      if (v6 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, v7);
      }
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 9;
    }
  }
  else
  {
    unsigned int v4 = 0;
  }
  unsigned int v10 = v4 + 9;
  if ((v3 & 0x100) == 0) {
    unsigned int v10 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v10 += 9;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t result = v10;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 88) = result;
  return result;
}

double sub_1003D2494(uint64_t a1, void *lpsrc)
{
  return sub_1003D073C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003D251C()
{
  return 1;
}

void *sub_1003D2524@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.UserPosition");
}

void sub_1003D2534(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AE368;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489C60 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003D25C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003D2534(a1);

  operator delete();
}

void sub_1003D25FC()
{
}

uint64_t sub_1003D2668(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 132) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v32[0] = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v32))return 0; {
        }
          }
        else
        {
          v32[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32[0]);
        if (!sub_1003C7D7C(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 17) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_53;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_41;
        }
LABEL_53:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 2u;
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 25) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_57:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 4u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 33) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_61:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 8u;
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 41) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_65:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x10u;
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 49) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_69:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x20u;
        int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 57) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_73:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x40u;
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 65) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_77:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x80u;
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 73) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_81:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x100u;
        uint64_t v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 81) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_85:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 80) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x200u;
        int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 89) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_89:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 88) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x400u;
        int v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 != 97) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
LABEL_93:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 96) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x800u;
        int v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 105) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_97:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 104) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x1000u;
        uint64_t v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 113) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_101:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 112) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x2000u;
        int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 121) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_105:
        *(void *)int v32 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32))
        {
          *(void *)(a1 + 120) = *(void *)v32;
          *(_DWORD *)(a1 + 132) |= 0x4000u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_57;
        }
        goto LABEL_41;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_61;
        }
        goto LABEL_41;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_65;
        }
        goto LABEL_41;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_69;
        }
        goto LABEL_41;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_73;
        }
        goto LABEL_41;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_77;
        }
        goto LABEL_41;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_81;
        }
        goto LABEL_41;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_85;
        }
        goto LABEL_41;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_89;
        }
        goto LABEL_41;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_93;
        }
        goto LABEL_41;
      case 0xDu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_97;
        }
        goto LABEL_41;
      case 0xEu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_101;
        }
        goto LABEL_41;
      case 0xFu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_41;
        }
        goto LABEL_105;
      default:
        int v7 = TagFallback & 7;
LABEL_41:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003D2D74(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 132);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C60 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 132);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
LABEL_32:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (int)a2, *(double *)(v5 + 112), a3);
    if ((*(_DWORD *)(v5 + 132) & 0x4000) == 0) {
      return result;
    }
    goto LABEL_33;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(double *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x2000) != 0) {
    goto LABEL_32;
  }
LABEL_15:
  if ((v6 & 0x4000) == 0) {
    return result;
  }
LABEL_33:
  double v8 = *(double *)(v5 + 120);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (int)a2, v8, a3);
}

uint64_t sub_1003D2F60(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 132);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489C60 + 8);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v6, a2);
      int v9 = (int)v7;
      if (v7 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
      }
      else {
        int v10 = 1;
      }
      unsigned int v4 = v9 + v10 + 1;
      int v3 = *(_DWORD *)(a1 + 132);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v11 = result + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v11 = result;
    }
    if ((v3 & 0x200) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x800) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x2000) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x4000) != 0) {
      uint64_t result = v11 + 9;
    }
    else {
      uint64_t result = v11;
    }
  }
  *(_DWORD *)(a1 + 128) = result;
  return result;
}

double sub_1003D3094(uint64_t a1, void *lpsrc)
{
  return sub_1003D096C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003D311C()
{
  return 1;
}

void *sub_1003D3124@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.UserVelocity");
}

void sub_1003D3134(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AE3E0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489C68 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003D31C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003D3134(a1);

  operator delete();
}

void sub_1003D31FC()
{
}

uint64_t sub_1003D3260(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v27[0] = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27))return 0; {
        }
          }
        else
        {
          v27[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        if (!sub_1003C7D7C(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 17) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 2u;
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 25) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_47:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 4u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 33) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_51:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 8u;
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 41) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_55:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 49) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_59:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 57) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_63:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 65) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_67:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x80u;
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 73) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_71:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 81) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_75:
        *(void *)int v27 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27))
        {
          *(void *)(a1 + 80) = *(void *)v27;
          *(_DWORD *)(a1 + 92) |= 0x200u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003D37A0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C68 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 92) & 0x200) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return result;
  }
LABEL_23:
  double v8 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, v8, a3);
}

uint64_t sub_1003D3900(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_102489C68 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v5, a2);
      int v8 = (int)v6;
      if (v6 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, v7);
      }
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 9;
    }
  }
  else
  {
    unsigned int v4 = 0;
  }
  unsigned int v10 = v4 + 9;
  if ((v3 & 0x100) == 0) {
    unsigned int v10 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v10 += 9;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t result = v10;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 88) = result;
  return result;
}

double sub_1003D39F8(uint64_t a1, void *lpsrc)
{
  return sub_1003D0C44(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003D3A80()
{
  return 1;
}

void *sub_1003D3A88@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.DevicePosition");
}

void sub_1003D3A98(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AE458;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489C70 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003D3B28(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003D3A98(a1);

  operator delete();
}

void sub_1003D3B60()
{
}

uint64_t sub_1003D3BC4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v27[0] = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27))return 0; {
        }
          }
        else
        {
          v27[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        if (!sub_1003C7D7C(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 17) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 2u;
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 25) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_47:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 4u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 33) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_51:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 8u;
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 41) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_55:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 49) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_59:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 57) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_63:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 65) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_67:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x80u;
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 73) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_71:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 81) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_75:
        *(void *)int v27 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27))
        {
          *(void *)(a1 + 80) = *(void *)v27;
          *(_DWORD *)(a1 + 92) |= 0x200u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003D4104(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C70 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 92) & 0x200) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return result;
  }
LABEL_23:
  double v8 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, v8, a3);
}

uint64_t sub_1003D4264(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_102489C70 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v5, a2);
      int v8 = (int)v6;
      if (v6 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, v7);
      }
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 9;
    }
  }
  else
  {
    unsigned int v4 = 0;
  }
  unsigned int v10 = v4 + 9;
  if ((v3 & 0x100) == 0) {
    unsigned int v10 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v10 += 9;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t result = v10;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 88) = result;
  return result;
}

double sub_1003D435C(uint64_t a1, void *lpsrc)
{
  return sub_1003D0E74(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003D43E4()
{
  return 1;
}

void *sub_1003D43EC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.DeviceVelocity");
}

void sub_1003D43FC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AE4D0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489C78 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003D448C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003D43FC(a1);

  operator delete();
}

void sub_1003D44C4()
{
}

uint64_t sub_1003D4530(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 132) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v32[0] = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v32))return 0; {
        }
          }
        else
        {
          v32[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32[0]);
        if (!sub_1003C7D7C(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 17) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_53;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_41;
        }
LABEL_53:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 2u;
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 25) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_57:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 4u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 33) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_61:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 8u;
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 41) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_65:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x10u;
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 49) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_69:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x20u;
        int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 57) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_73:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x40u;
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 65) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_77:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x80u;
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 73) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_81:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x100u;
        uint64_t v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 81) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_85:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 80) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x200u;
        int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 89) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_89:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 88) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x400u;
        int v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 != 97) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
LABEL_93:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 96) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x800u;
        int v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 105) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_97:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 104) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x1000u;
        uint64_t v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 113) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_101:
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        *(void *)(a1 + 112) = *(void *)v32;
        }
        *(_DWORD *)(a1 + 132) |= 0x2000u;
        int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 121) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_105:
        *(void *)int v32 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32))
        {
          *(void *)(a1 + 120) = *(void *)v32;
          *(_DWORD *)(a1 + 132) |= 0x4000u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_57;
        }
        goto LABEL_41;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_61;
        }
        goto LABEL_41;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_65;
        }
        goto LABEL_41;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_69;
        }
        goto LABEL_41;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_73;
        }
        goto LABEL_41;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_77;
        }
        goto LABEL_41;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_81;
        }
        goto LABEL_41;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_85;
        }
        goto LABEL_41;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_89;
        }
        goto LABEL_41;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_93;
        }
        goto LABEL_41;
      case 0xDu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_97;
        }
        goto LABEL_41;
      case 0xEu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_101;
        }
        goto LABEL_41;
      case 0xFu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_41;
        }
        goto LABEL_105;
      default:
        int v7 = TagFallback & 7;
LABEL_41:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003D4C3C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 132);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C78 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 132);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
LABEL_32:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (int)a2, *(double *)(v5 + 112), a3);
    if ((*(_DWORD *)(v5 + 132) & 0x4000) == 0) {
      return result;
    }
    goto LABEL_33;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(double *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x2000) != 0) {
    goto LABEL_32;
  }
LABEL_15:
  if ((v6 & 0x4000) == 0) {
    return result;
  }
LABEL_33:
  double v8 = *(double *)(v5 + 120);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (int)a2, v8, a3);
}

uint64_t sub_1003D4E28(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 132);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489C78 + 8);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v6, a2);
      int v9 = (int)v7;
      if (v7 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
      }
      else {
        int v10 = 1;
      }
      unsigned int v4 = v9 + v10 + 1;
      int v3 = *(_DWORD *)(a1 + 132);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v11 = result + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v11 = result;
    }
    if ((v3 & 0x200) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x800) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x2000) != 0) {
      v11 += 9;
    }
    if ((v3 & 0x4000) != 0) {
      uint64_t result = v11 + 9;
    }
    else {
      uint64_t result = v11;
    }
  }
  *(_DWORD *)(a1 + 128) = result;
  return result;
}

double sub_1003D4F5C(uint64_t a1, void *lpsrc)
{
  return sub_1003D10A4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003D4FE4()
{
  return 1;
}

void *sub_1003D4FEC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.DeviceAttitude");
}

void sub_1003D4FFC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AE548;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489C80 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003D508C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003D4FFC(a1);

  operator delete();
}

void sub_1003D50C4()
{
}

uint64_t sub_1003D5128(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v27[0] = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27))return 0; {
        }
          }
        else
        {
          v27[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        if (!sub_1003C7D7C(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 17) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 2u;
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 25) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_47:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 4u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 33) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_51:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 8u;
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 41) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_55:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 49) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_59:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 57) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_63:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 65) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_67:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x80u;
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 73) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_71:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 81) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_75:
        *(void *)int v27 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27))
        {
          *(void *)(a1 + 80) = *(void *)v27;
          *(_DWORD *)(a1 + 92) |= 0x200u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003D5668(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C80 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 92) & 0x200) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return result;
  }
LABEL_23:
  double v8 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, v8, a3);
}

uint64_t sub_1003D57C8(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_102489C80 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v5, a2);
      int v8 = (int)v6;
      if (v6 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, v7);
      }
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 9;
    }
  }
  else
  {
    unsigned int v4 = 0;
  }
  unsigned int v10 = v4 + 9;
  if ((v3 & 0x100) == 0) {
    unsigned int v10 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v10 += 9;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t result = v10;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 88) = result;
  return result;
}

double sub_1003D58C0(uint64_t a1, void *lpsrc)
{
  return sub_1003D137C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003D5948()
{
  return 1;
}

void *sub_1003D5950@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.DeviceRateGyroBias");
}

void sub_1003D5960(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AE5C0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489C88 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003D59F0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003D5960(a1);

  operator delete();
}

void sub_1003D5A28()
{
}

uint64_t sub_1003D5A8C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v27[0] = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27))return 0; {
        }
          }
        else
        {
          v27[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        if (!sub_1003C7D7C(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 17) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 2u;
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 25) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_47:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 4u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 33) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_51:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 8u;
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 41) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_55:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 49) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_59:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 57) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_63:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 65) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_67:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x80u;
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 73) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_71:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 81) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_75:
        *(void *)int v27 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27))
        {
          *(void *)(a1 + 80) = *(void *)v27;
          *(_DWORD *)(a1 + 92) |= 0x200u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003D5FCC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C88 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 92) & 0x200) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return result;
  }
LABEL_23:
  double v8 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, v8, a3);
}

uint64_t sub_1003D612C(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_102489C88 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v5, a2);
      int v8 = (int)v6;
      if (v6 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, v7);
      }
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 9;
    }
  }
  else
  {
    unsigned int v4 = 0;
  }
  unsigned int v10 = v4 + 9;
  if ((v3 & 0x100) == 0) {
    unsigned int v10 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v10 += 9;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t result = v10;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 88) = result;
  return result;
}

double sub_1003D6224(uint64_t a1, void *lpsrc)
{
  return sub_1003D15AC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003D62AC()
{
  return 1;
}

void *sub_1003D62B4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.DeviceAccelerometerBias");
}

void sub_1003D62C4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AE638;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489C90 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003D6354(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003D62C4(a1);

  operator delete();
}

void sub_1003D638C()
{
}

uint64_t sub_1003D63F0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v27[0] = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27))return 0; {
        }
          }
        else
        {
          v27[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        if (!sub_1003C7D7C(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 17) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 2u;
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 25) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_47:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 4u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 33) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_51:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 8u;
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 41) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_55:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 49) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_59:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 57) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_63:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x40u;
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 65) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_67:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x80u;
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 73) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_71:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 81) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_75:
        *(void *)int v27 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27))
        {
          *(void *)(a1 + 80) = *(void *)v27;
          *(_DWORD *)(a1 + 92) |= 0x200u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003D6930(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C90 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 92) & 0x200) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return result;
  }
LABEL_23:
  double v8 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, v8, a3);
}

uint64_t sub_1003D6A90(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_102489C90 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v5, a2);
      int v8 = (int)v6;
      if (v6 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, v7);
      }
      else {
        int v9 = 1;
      }
      unsigned int v4 = v8 + v9 + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 9;
    }
  }
  else
  {
    unsigned int v4 = 0;
  }
  unsigned int v10 = v4 + 9;
  if ((v3 & 0x100) == 0) {
    unsigned int v10 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v10 += 9;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t result = v10;
  }
  else {
    uint64_t result = v4;
  }
  *(_DWORD *)(a1 + 88) = result;
  return result;
}

double sub_1003D6B88(uint64_t a1, void *lpsrc)
{
  return sub_1003D17DC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003D6C10()
{
  return 1;
}

void *sub_1003D6C18@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.DeviceAccelerometerScaleFactor");
}

void sub_1003D6C28(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AE6B0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489C98 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003D6CB8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003D6C28(a1);

  operator delete();
}

void sub_1003D6CF0()
{
}

uint64_t sub_1003D6D4C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v23[0] = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v23))return 0; {
        }
          }
        else
        {
          v23[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23[0]);
        if (!sub_1003C7D7C(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 17) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_35;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_23;
        }
LABEL_35:
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v23;
        }
        *(_DWORD *)(a1 + 60) |= 2u;
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 49) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_39:
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v23;
        }
        *(_DWORD *)(a1 + 60) |= 4u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 57) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_43:
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v23;
        }
        *(_DWORD *)(a1 + 60) |= 8u;
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 65) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_47:
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v23;
        }
        *(_DWORD *)(a1 + 60) |= 0x10u;
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 73) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_51:
        *(void *)int v23 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23))
        {
          *(void *)(a1 + 48) = *(void *)v23;
          *(_DWORD *)(a1 + 60) |= 0x20u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_39;
        }
        goto LABEL_23;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_43;
        }
        goto LABEL_23;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_47;
        }
        goto LABEL_23;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_23;
        }
        goto LABEL_51;
      default:
        int v7 = TagFallback & 7;
LABEL_23:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003D7128(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489C98 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 40), a3);
    if ((*(_DWORD *)(v5 + 60) & 0x20) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_15:
  double v8 = *(double *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, v8, a3);
}

uint64_t sub_1003D7218(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 60);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 60))
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489C98 + 8);
      }
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003C8428(v6, a2);
      int v9 = (int)v7;
      if (v7 >= 0x80) {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, v8);
      }
      else {
        int v10 = 1;
      }
      unsigned int v4 = v9 + v10 + 1;
      int v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 56) = result;
  return result;
}

double sub_1003D72D4(uint64_t a1, void *lpsrc)
{
  return sub_1003D1A0C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003D735C()
{
  return 1;
}

void *sub_1003D7364@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.Raven.DeviceReceiverClockDiscrepancy");
}

uint64_t sub_1003D7374(uint64_t a1)
{
  return *(unsigned int *)(a1 + 164);
}

uint64_t sub_1003D737C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 224);
}

uint64_t sub_1003D7384(uint64_t a1)
{
  return *(unsigned int *)(a1 + 156);
}

uint64_t sub_1003D738C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_1003D7394(uint64_t a1)
{
  return *(unsigned int *)(a1 + 128);
}

uint64_t sub_1003D7570()
{
  sub_10010F274((uint64_t)v7);
  uint64_t v0 = v8[0];
  *(void *)((char *)&v8[2] + *(void *)(v8[0] - 24)) = 8;
  *(_DWORD *)((char *)&v8[1] + *(void *)(v0 - 24)) = *(_DWORD *)((unsigned char *)&v8[1] + *(void *)(v0 - 24)) & 0xFFFFFEFB | 4;
  std::ostream::operator<<();
  uint64_t v1 = sub_100132EFC(v8, (uint64_t)", ", 2);
  uint64_t v2 = *v1;
  *(uint64_t *)((char *)v1 + *(void *)(*v1 - 24) + 16) = 8;
  *(_DWORD *)((char *)v1 + *(void *)(v2 - 24) + 8) = *(_DWORD *)((unsigned char *)v1 + *(void *)(v2 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<();
  int v3 = sub_100132EFC(v8, (uint64_t)", hacc, ", 8);
  uint64_t v4 = *v3;
  *(uint64_t *)((char *)v3 + *(void *)(*v3 - 24) + 16) = 1;
  *(_DWORD *)((char *)v3 + *(void *)(v4 - 24) + 8) = *(_DWORD *)((unsigned char *)v3 + *(void *)(v4 - 24) + 8) & 0xFFFFFEFB | 4;
  std::ostream::operator<<();
  std::stringbuf::str();
  *(void *)((char *)v7
  v8[0] = v5;
  if (v9 < 0) {
    operator delete((void *)v8[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_1003D7848(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_101A129A8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003D7868(uint64_t a1)
{
  sub_101171D90(a1);
  *(_DWORD *)(v2 + 40) = 0xFFFF;
  *(void *)(v2 + 52) = 0;
  *(void *)(v2 + 44) = 0;
  *(_OWORD *)(v2 + 60) = xmmword_101D1C320;
  __asm { FMOV            V1.2D, #-1.0 }
  *(_OWORD *)(v2 + 76) = _Q1;
  *(_OWORD *)(v2 + 92) = _Q1;
  *(_OWORD *)(v2 + 108) = _Q1;
  *(_DWORD *)(v2 + 124) = 0;
  *(void *)(v2 + 136) = 0;
  *(void *)(v2 + 144) = 0;
  *(void *)(v2 + 128) = 0xBFF0000000000000;
  *(_DWORD *)(v2 + 152) = 0;
  *(void *)(v2 + 156) = 0xBFF0000000000000;
  *(_DWORD *)(v2 + 164) = 0x7FFFFFFF;
  *(void *)(v2 + 176) = 0;
  *(void *)(v2 + 184) = 0;
  *(void *)(v2 + 168) = 0;
  *(unsigned char *)(v2 + 192) = 0;
  *(_DWORD *)(v2 + 196) = 0xFFFF;
  *(void *)(v2 + 284) = 0xBFF0000000000000;
  uint64_t v8 = v2 + 284;
  *(void *)(v2 + 208) = 0;
  *(void *)(v2 + 200) = 0;
  *(_OWORD *)(v2 + 216) = xmmword_101D1C320;
  *(_OWORD *)(v2 + 232) = _Q1;
  *(_OWORD *)(v2 + 248) = _Q1;
  *(void *)(v2 + 264) = 0xBFF0000000000000;
  *(void *)(v2 + 272) = 0xBFF0000000000000;
  *(_DWORD *)(v2 + 280) = 0;
  *(_DWORD *)(v2 + 308) = 0;
  *(void *)(v2 + 292) = 0;
  *(void *)(v2 + 300) = 0;
  *(void *)(v2 + 312) = 0xBFF0000000000000;
  *(_DWORD *)(v2 + 320) = 0x7FFFFFFF;
  *(void *)(v2 + 332) = 0;
  *(void *)(v2 + 340) = 0;
  *(void *)(v2 + 324) = 0;
  *(unsigned char *)(v2 + 348) = 0;
  *(_DWORD *)(v2 + 352) = 0xFFFF;
  *(void *)(v2 + 356) = 0;
  *(void *)(v2 + 364) = 0;
  *(_OWORD *)(v2 + 372) = xmmword_101D1C320;
  *(_OWORD *)(v2 + 388) = _Q1;
  *(_OWORD *)(v2 + 404) = _Q1;
  *(_OWORD *)(v2 + 420) = _Q1;
  *(_DWORD *)(v2 + 436) = 0;
  *(void *)(v2 + 440) = 0xBFF0000000000000;
  *(_DWORD *)(v2 + 464) = 0;
  *(void *)(v2 + 448) = 0;
  *(void *)(v2 + 456) = 0;
  *(void *)(v2 + 468) = 0xBFF0000000000000;
  *(_DWORD *)(v2 + 476) = 0x7FFFFFFF;
  *(void *)(v2 + 488) = 0;
  *(void *)(v2 + 480) = 0;
  *(void *)(v2 + 496) = 0;
  *(unsigned char *)(v2 + 504) = 0;
  *(_WORD *)(v2 + 508) = 0;
  sub_100134750((void *)(v2 + 512), "N/A");
  sub_100134750((void *)(v8 + 252), "not_set");
  sub_100134750((void *)(a1 + 560), "not_set");
  sub_100134750((void *)(a1 + 584), "not_set");
  return a1;
}

void sub_1003D79D4(_Unwind_Exception *exception_object)
{
  if (v1[583] < 0) {
    operator delete(*v4);
  }
  if (v1[559] < 0) {
    operator delete(*v3);
  }
  if (v1[535] < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003D7A24(uint64_t a1, long long *a2)
{
  if (*((_DWORD *)a2 + 24) != 4)
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022AE920);
    }
    char v9 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "location type is not WiFi!", buf, 2u);
    }
    if (!sub_10013D1A0(115, 0)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 == -1)
    {
LABEL_18:
      int v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLWifiPositionCalculatorWithAssociatedApAnalytics::receiveWifiLocationBeforeUseOfAssociatedAp(const CLDaemonLocation &)", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
      return;
    }
LABEL_20:
    dispatch_once(&qword_1024193A0, &stru_1022AE920);
    goto LABEL_18;
  }
  if (*(double *)((char *)a2 + 76) > 0.0)
  {
    long long v2 = *a2;
    *(_OWORD *)(a1 + 56) = a2[1];
    *(_OWORD *)(a1 + 40) = v2;
    long long v3 = a2[2];
    long long v4 = a2[3];
    long long v5 = a2[4];
    *(_OWORD *)(a1 + 120) = a2[5];
    *(_OWORD *)(a1 + 104) = v5;
    *(_OWORD *)(a1 + 88) = v4;
    *(_OWORD *)(a1 + 72) = v3;
    long long v6 = a2[6];
    long long v7 = a2[7];
    long long v8 = a2[8];
    *(_OWORD *)(a1 + 180) = *(long long *)((char *)a2 + 140);
    *(_OWORD *)(a1 + 168) = v8;
    *(_OWORD *)(a1 + 152) = v7;
    *(_OWORD *)(a1 + 136) = v6;
    return;
  }
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022AE920);
  }
  int v10 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "location timestamp is not set!", buf, 2u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 == -1) {
      goto LABEL_18;
    }
    goto LABEL_20;
  }
}

void sub_1003D7CDC(_OWORD *a1, long long *a2)
{
  if (*((_DWORD *)a2 + 24) != 4)
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022AE920);
    }
    char v9 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "location type is not WiFi!", buf, 2u);
    }
    if (!sub_10013D1A0(115, 0)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 == -1)
    {
LABEL_18:
      int v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLWifiPositionCalculatorWithAssociatedApAnalytics::receiveWifiLocationAfterUseOfAssociatedAp(const CLDaemonLocation &)", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
      return;
    }
LABEL_20:
    dispatch_once(&qword_1024193A0, &stru_1022AE920);
    goto LABEL_18;
  }
  if (*(double *)((char *)a2 + 76) > 0.0)
  {
    long long v2 = *a2;
    *(_OWORD *)((char *)a1 + 212) = a2[1];
    *(_OWORD *)((char *)a1 + 196) = v2;
    long long v3 = a2[2];
    long long v4 = a2[3];
    long long v5 = a2[5];
    *(_OWORD *)((char *)a1 + 260) = a2[4];
    *(_OWORD *)((char *)a1 + 276) = v5;
    *(_OWORD *)((char *)a1 + 244) = v4;
    *(_OWORD *)((char *)a1 + 228) = v3;
    long long v6 = a2[6];
    long long v7 = a2[7];
    long long v8 = a2[8];
    a1[21] = *(long long *)((char *)a2 + 140);
    *(_OWORD *)((char *)a1 + 308) = v7;
    *(_OWORD *)((char *)a1 + 324) = v8;
    *(_OWORD *)((char *)a1 + 292) = v6;
    return;
  }
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022AE920);
  }
  int v10 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "location timestamp is not set!", buf, 2u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 == -1) {
      goto LABEL_18;
    }
    goto LABEL_20;
  }
}

void sub_1003D7F90(_OWORD *a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 96) != 1)
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022AE920);
    }
    char v9 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "location type is not GPS!", buf, 2u);
    }
    if (!sub_10013D1A0(115, 0)) {
      return;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 == -1)
    {
LABEL_19:
      int v11 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLWifiPositionCalculatorWithAssociatedApAnalytics::receiveGpsLocation(const CLDaemonLocation &)", "%s\n", v11);
      if (v11 != (char *)buf) {
        free(v11);
      }
      return;
    }
LABEL_21:
    dispatch_once(&qword_1024193A0, &stru_1022AE920);
    goto LABEL_19;
  }
  if (*(double *)(a2 + 76) > 0.0)
  {
    if (*(double *)(a2 + 20) <= 30.0)
    {
      long long v2 = *(_OWORD *)(a2 + 16);
      a1[22] = *(_OWORD *)a2;
      a1[23] = v2;
      long long v3 = *(_OWORD *)(a2 + 32);
      long long v4 = *(_OWORD *)(a2 + 48);
      long long v5 = *(_OWORD *)(a2 + 80);
      a1[26] = *(_OWORD *)(a2 + 64);
      a1[27] = v5;
      a1[24] = v3;
      a1[25] = v4;
      long long v6 = *(_OWORD *)(a2 + 96);
      long long v7 = *(_OWORD *)(a2 + 112);
      long long v8 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)((char *)a1 + 492) = *(_OWORD *)(a2 + 140);
      a1[29] = v7;
      a1[30] = v8;
      a1[28] = v6;
    }
    return;
  }
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022AE920);
  }
  int v10 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_FAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_FAULT, "location timestamp is not set!", buf, 2u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 == -1) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
}

std::string *sub_1003D824C(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 512), a2);
}

std::string *sub_1003D8254(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 584), a2);
}

void sub_1003D825C(uint64_t a1)
{
  uint64_t v2 = a1 + 352;
  sub_1000F1268((double *)a1, a1 + 352, a1 + 196);
  double v4 = v3;
  if (v3 >= *((double *)sub_1014122A8() + 9))
  {
    sub_1000F1268((double *)a1, v2, a1 + 40);
    uint64_t v6 = v5;
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022AE920);
    }
    long long v7 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_FAULT))
    {
      sub_1003D7570();
      if (v28 >= 0) {
        long long v8 = v25;
      }
      else {
        long long v8 = *(unsigned char **)v25;
      }
      sub_1003D7570();
      sub_1003D7570();
      if (v24 >= 0) {
        char v9 = v23;
      }
      else {
        char v9 = (void **)v23[0];
      }
      int v10 = (void **)__p[0];
      if (v22 >= 0) {
        int v10 = __p;
      }
      int v11 = (void *)(a1 + 512);
      if (*(char *)(a1 + 535) < 0) {
        int v11 = (void *)*v11;
      }
      *(_DWORD *)buf = 136316418;
      uint64_t v37 = v8;
      __int16 v38 = 2080;
      int v39 = v9;
      __int16 v40 = 2050;
      uint64_t v41 = v6;
      __int16 v42 = 2080;
      unsigned int v43 = v10;
      __int16 v44 = 2050;
      double v45 = v4;
      __int16 v46 = 2080;
      int v47 = v11;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Large error detected! GPS: %s. Wifi1 before use of associated AP: %s, error %{public}.1fm. After: %s, error %{public}.1fm. LOI: %s", buf, 0x3Eu);
      if (v22 < 0) {
        operator delete(__p[0]);
      }
      if (v24 < 0) {
        operator delete(v23[0]);
      }
      if (SHIBYTE(v28) < 0) {
        operator delete(*(void **)v25);
      }
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022AE920);
      }
      sub_1003D7570();
      if (v24 >= 0) {
        int v12 = v23;
      }
      else {
        int v12 = (void **)v23[0];
      }
      sub_1003D7570();
      int v13 = v22;
      int v14 = (void **)__p[0];
      sub_1003D7570();
      if (v13 >= 0) {
        BOOL v15 = __p;
      }
      else {
        BOOL v15 = v14;
      }
      int v16 = v19;
      if (v20 >= 0) {
        int v16 = &v19;
      }
      uint64_t v17 = (void *)(a1 + 512);
      if (*(char *)(a1 + 535) < 0) {
        uint64_t v17 = (void *)*v17;
      }
      *(_DWORD *)uint64_t v25 = 136316418;
      *(void *)&v25[4] = v12;
      __int16 v26 = 2080;
      int v27 = v15;
      __int16 v28 = 2050;
      uint64_t v29 = v6;
      __int16 v30 = 2080;
      int v31 = v16;
      __int16 v32 = 2050;
      double v33 = v4;
      __int16 v34 = 2080;
      int v35 = v17;
      uint64_t v18 = (char *)_os_log_send_and_compose_impl();
      if (v20 < 0) {
        operator delete(v19);
      }
      if (v22 < 0) {
        operator delete(__p[0]);
      }
      if (v24 < 0) {
        operator delete(v23[0]);
      }
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLWifiPositionCalculatorWithAssociatedApAnalytics::logFaultForLargeErrorAfterUseOfAssociatedAp()", "%s\n", v18);
      if (v18 != (char *)buf) {
        free(v18);
      }
    }
  }
}

void sub_1003D860C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003D8674(uint64_t result, char a2)
{
  *(unsigned char *)(result + 508) = a2;
  return result;
}

uint64_t sub_1003D867C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 509) = a2;
  return result;
}

std::string *sub_1003D8684(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 536), a2);
}

std::string *sub_1003D868C(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 560), a2);
}

uint64_t sub_1003D8694(uint64_t a1)
{
  sub_1003D86EC();
  sub_1003D87E4(a1);
  sub_1003D88A0(a1);
  sub_1003D8B88(a1);
  sub_1003D8DC8(a1);

  return sub_1003D9004(a1);
}

void sub_1003D86EC()
{
  if (!(rand() % dword_10247A990))
  {
    std::operator+<char>();
    if (byte_10247A9AF >= 0) {
      uint64_t v0 = &qword_10247A998;
    }
    else {
      uint64_t v0 = (uint64_t *)qword_10247A998;
    }
    +[NSString stringWithUTF8String:v0];
    AnalyticsSendEventLazy();
    if (v2 < 0) {
      operator delete(v1);
    }
  }
}

void sub_1003D87C8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 - 17) < 0) {
    operator delete(*(void **)(v1 - 40));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003D87E4(uint64_t result)
{
  if (*(unsigned char *)(result + 509))
  {
    uint64_t result = rand();
    if (!((int)result % dword_10247A990))
    {
      if (byte_10247A9AF >= 0) {
        uint64_t v1 = &qword_10247A998;
      }
      else {
        uint64_t v1 = (uint64_t *)qword_10247A998;
      }
      +[NSString stringWithUTF8String:v1];
      return AnalyticsSendEventLazy();
    }
  }
  return result;
}

uint64_t sub_1003D88A0(uint64_t a1)
{
  uint64_t v2 = a1 + 40;
  uint64_t result = sub_1000E6DB4(a1 + 40);
  if (result)
  {
    uint64_t result = sub_1000E6DB4(a1 + 196);
    if (result)
    {
      uint64_t result = rand();
      if (!((int)result % dword_10247A990))
      {
        sub_1000F1268((double *)a1, v2, a1 + 196);
        uint64_t v5 = v4;
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022AE920);
        }
        uint64_t v6 = qword_1024193A8;
        if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
        {
          long long v7 = (void *)(a1 + 584);
          if (*(char *)(a1 + 607) < 0) {
            long long v7 = (void *)*v7;
          }
          long long v8 = (void *)(a1 + 512);
          if (*(char *)(a1 + 535) < 0) {
            long long v8 = (void *)*v8;
          }
          *(_DWORD *)buf = 136446723;
          int v12 = v7;
          __int16 v13 = 2050;
          uint64_t v14 = v5;
          __int16 v15 = 2081;
          int v16 = v8;
          _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "WifiPositionCalculatorWithAssociatedApAnalytics, fixType, %{public}s, wifiFixDistanceBeforeAndAfterUseOfAssociatedAp, %{public}.1fm, LOI %{private}s", buf, 0x20u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024193A0 != -1) {
            dispatch_once(&qword_1024193A0, &stru_1022AE920);
          }
          int v10 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiPositionCalculatorWithAssociatedApAnalytics::submitWifiFixDistanceBeforeAndAfterUseOfAssociatedApIfPossible()", "%s\n", v10);
          if (v10 != (char *)buf) {
            free(v10);
          }
        }
        if (byte_10247A9AF >= 0) {
          char v9 = &qword_10247A998;
        }
        else {
          char v9 = (uint64_t *)qword_10247A998;
        }
        +[NSString stringWithUTF8String:v9];
        return AnalyticsSendEventLazy();
      }
    }
  }
  return result;
}

void sub_1003D8B88(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 509)
    && sub_1000E6DB4(a1 + 352)
    && sub_1000E6DB4(a1 + 40)
    && sub_1000E6DB4(a1 + 196))
  {
    double v2 = *(double *)(a1 + 272);
    if (*(double *)(a1 + 116) == v2)
    {
      if (vabdd_f64(*(double *)(a1 + 428), v2) <= 1.0)
      {
        sub_1003D825C(a1);
        if (!(rand() % dword_10247A990))
        {
          sub_1003D94B8(a1);
        }
      }
    }
    else
    {
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022AE920);
      }
      double v3 = qword_1024193A8;
      if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "different timestamps between wifi locations before and after use of associated AP!", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024193A0 != -1) {
          dispatch_once(&qword_1024193A0, &stru_1022AE920);
        }
        uint64_t v4 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLWifiPositionCalculatorWithAssociatedApAnalytics::submitWifiFixErrorAndHorizontalErrorRatioMetricsIfPossible()", "%s\n", v4);
        if (v4 != (char *)buf) {
          free(v4);
        }
      }
    }
  }
}

uint64_t sub_1003D8DC8(uint64_t a1)
{
  uint64_t result = rand();
  if (!((int)result % dword_10247A990))
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022AE920);
    }
    double v3 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v4 = (void *)(a1 + 536);
      if (*(char *)(a1 + 559) < 0) {
        uint64_t v4 = (void *)*v4;
      }
      *(_DWORD *)buf = 136380675;
      long long v7 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "wifiFixWithAssociatedApOutcome, %{private}s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022AE920);
      }
      uint64_t v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiPositionCalculatorWithAssociatedApAnalytics::submitWifiFixWithAssociatedApOutcomeMetricsIfPossible()", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
    return AnalyticsSendEventLazy();
  }
  return result;
}

uint64_t sub_1003D9004(uint64_t a1)
{
  uint64_t result = rand();
  if (!((int)result % dword_10247A990))
  {
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022AE920);
    }
    double v3 = qword_1024193A8;
    if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v4 = (void *)(a1 + 560);
      if (*(char *)(a1 + 583) < 0) {
        uint64_t v4 = (void *)*v4;
      }
      *(_DWORD *)buf = 136380675;
      long long v7 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "associatedApCentroidFetchOutcome, %{private}s", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024193A0 != -1) {
        dispatch_once(&qword_1024193A0, &stru_1022AE920);
      }
      uint64_t v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiPositionCalculatorWithAssociatedApAnalytics::submitAssociatedApCentroidFetchOutcomeMetricsIfPossible()", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
    return AnalyticsSendEventLazy();
  }
  return result;
}

NSDictionary *sub_1003D9240(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v6[0] = @"fixType";
  double v3 = (void *)(v2 + 584);
  if (*(char *)(v2 + 607) < 0) {
    double v3 = (void *)*v3;
  }
  v7[0] = +[NSString stringWithUTF8String:v3];
  uint64_t v4 = *(uint64_t **)(a1 + 40);
  if (*((char *)v4 + 23) < 0) {
    uint64_t v4 = (uint64_t *)*v4;
  }
  v6[1] = +[NSString stringWithUTF8String:v4];
  v7[1] = +[NSNumber numberWithBool:*(unsigned __int8 *)(v2 + 509)];
  return +[NSDictionary dictionaryWithObjects:v7 forKeys:v6 count:2];
}

NSDictionary *sub_1003D9314(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v4[0] = @"fixType";
  uint64_t v2 = (void *)(v1 + 584);
  if (*(char *)(v1 + 607) < 0) {
    uint64_t v2 = (void *)*v2;
  }
  v4[1] = @"wifiFixYieldIncrease";
  v5[0] = +[NSString stringWithUTF8String:v2];
  v5[1] = +[NSNumber numberWithBool:*(unsigned __int8 *)(v1 + 508)];
  return +[NSDictionary dictionaryWithObjects:v5 forKeys:v4 count:2];
}

NSDictionary *sub_1003D93C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v7[0] = @"fixType";
  double v3 = (void *)(v2 + 584);
  if (*(char *)(v2 + 607) < 0) {
    double v3 = (void *)*v3;
  }
  v8[0] = +[NSString stringWithUTF8String:v3];
  v7[1] = @"wifiFixDistanceBeforeAndAfterUseOfAssociatedAp";
  LODWORD(v4) = llround(*(double *)(a1 + 40));
  v8[1] = +[NSNumber numberWithInt:v4];
  void v7[2] = @"wifiFixLocationOfInterestTypeString";
  uint64_t v5 = (void *)(v2 + 512);
  if (*(char *)(v2 + 535) < 0) {
    uint64_t v5 = (void *)*v5;
  }
  v8[2] = +[NSString stringWithUTF8String:v5];
  return +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:3];
}

uint64_t sub_1003D94B8(uint64_t a1)
{
  uint64_t v2 = a1 + 352;
  sub_1000F1268((double *)a1, a1 + 352, a1 + 40);
  double v4 = v3;
  sub_1000F1268((double *)a1, v2, a1 + 196);
  double v6 = v5;
  double v7 = *(double *)(v2 + 76);
  double v8 = *(double *)(a1 + 272);
  if (qword_1024193A0 != -1) {
    dispatch_once(&qword_1024193A0, &stru_1022AE920);
  }
  double v9 = vabdd_f64(v7, v8);
  int v10 = qword_1024193A8;
  if (os_log_type_enabled((os_log_t)qword_1024193A8, OS_LOG_TYPE_DEBUG))
  {
    int v11 = (void *)(a1 + 512);
    if (*(char *)(a1 + 535) < 0) {
      int v11 = (void *)*v11;
    }
    *(_DWORD *)buf = 134350083;
    double v16 = v4;
    __int16 v17 = 2050;
    double v18 = v6;
    __int16 v19 = 2050;
    double v20 = v4 - v6;
    __int16 v21 = 2050;
    double v22 = v9;
    __int16 v23 = 2081;
    char v24 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "WifiPositionCalculatorWithAssociatedApAnalytics, wifiFixErrorBeforeUseOfAssociatedAp, %{public}.1fm, wifiFixErrorAfterUseOfAssociatedAp, %{public}.1fm, wifiFixAccuracyGainByUseOfAssociatedAp, %{public}.1fm, deltaTimeFromGps, %{public}.1fs, LOI %{private}s", buf, 0x34u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024193A0 != -1) {
      dispatch_once(&qword_1024193A0, &stru_1022AE920);
    }
    uint64_t v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLWifiPositionCalculatorWithAssociatedApAnalytics::sendCoreAnalyticsEventForWifiFixErrorAndHorizontalErrorRatio()", "%s\n", v14);
    if (v14 != (char *)buf) {
      free(v14);
    }
  }
  if (byte_10247A9AF >= 0) {
    int v12 = &qword_10247A998;
  }
  else {
    int v12 = (uint64_t *)qword_10247A998;
  }
  +[NSString stringWithUTF8String:v12];
  return AnalyticsSendEventLazy();
}

NSDictionary *sub_1003D97D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v9[0] = @"fixType";
  double v3 = (void *)(v2 + 584);
  if (*(char *)(v2 + 607) < 0) {
    double v3 = (void *)*v3;
  }
  v10[0] = +[NSString stringWithUTF8String:v3];
  v9[1] = @"wifiFixErrorBeforeUseOfAssociatedAp";
  LODWORD(v4) = llround(*(double *)(a1 + 40));
  v10[1] = +[NSNumber numberWithInt:v4];
  _DWORD v9[2] = @"wifiFixErrorAfterUseOfAssociatedAp";
  LODWORD(v5) = llround(*(double *)(a1 + 48));
  v10[2] = +[NSNumber numberWithInt:v5];
  v9[3] = @"hErrRatioBeforeUseOfAssociatedAp";
  v10[3] = +[NSNumber numberWithDouble:*(double *)(a1 + 56)];
  v9[4] = @"hErrRatioAfterUseOfAssociatedAp";
  v10[4] = +[NSNumber numberWithDouble:*(double *)(a1 + 64)];
  void v9[5] = @"wifiFixAccuracyGainByUseOfAssociatedAp";
  LODWORD(v6) = llround(*(double *)(a1 + 72));
  v10[5] = +[NSNumber numberWithInt:v6];
  void v9[6] = @"wifiFixLocationOfInterestTypeString";
  double v7 = (void *)(v2 + 512);
  if (*(char *)(v2 + 535) < 0) {
    double v7 = (void *)*v7;
  }
  void v10[6] = +[NSString stringWithUTF8String:v7];
  return +[NSDictionary dictionaryWithObjects:v10 forKeys:v9 count:7];
}

NSDictionary *sub_1003D9940(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v5[0] = @"fixType";
  uint64_t v2 = (void *)(v1 + 584);
  if (*(char *)(v1 + 607) < 0) {
    uint64_t v2 = (void *)*v2;
  }
  v5[1] = @"wifiFixWithAssociatedApOutcome";
  v6[0] = +[NSString stringWithUTF8String:v2];
  double v3 = (void *)(v1 + 536);
  if (*(char *)(v1 + 559) < 0) {
    double v3 = (void *)*v3;
  }
  v6[1] = +[NSString stringWithUTF8String:v3];
  return +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:2];
}

NSDictionary *sub_1003D99FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  v5[0] = @"fixType";
  uint64_t v2 = (void *)(v1 + 584);
  if (*(char *)(v1 + 607) < 0) {
    uint64_t v2 = (void *)*v2;
  }
  v5[1] = @"associatedApCentroidFetchOutcome";
  v6[0] = +[NSString stringWithUTF8String:v2];
  double v3 = (void *)(v1 + 560);
  if (*(char *)(v1 + 583) < 0) {
    double v3 = (void *)*v3;
  }
  v6[1] = +[NSString stringWithUTF8String:v3];
  return +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:2];
}

void sub_1003D9AB8(id a1)
{
  qword_1024193A8 = (uint64_t)os_log_create("com.apple.locationd.Position", "GeneralCLX");
}

void sub_1003D9AE8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419688, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419688))
  {
    qword_102419670 = 0;
    qword_102419678 = 0;
    qword_102419680 = 0;
    uint64_t v0 = operator new(6uLL);
    qword_102419678 = (uint64_t)(v0 + 3);
    qword_102419680 = (uint64_t)(v0 + 3);
    *(_DWORD *)uint64_t v0 = 151521030;
    v0[2] = 3082;
    qword_102419670 = (uint64_t)v0;
    __cxa_atexit((void (*)(void *))sub_1001C6FD8, &qword_102419670, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419688);
  }
}

void sub_1003D9BA0(_Unwind_Exception *a1)
{
}

void sub_1003D9BB8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1024196A8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1024196A8))
  {
    qword_102419690 = 0;
    qword_102419698 = 0;
    qword_1024196A0 = 0;
    uint64_t v0 = operator new(2uLL);
    qword_102419690 = (uint64_t)v0;
    _WORD *v0 = 256;
    qword_102419698 = (uint64_t)(v0 + 1);
    qword_1024196A0 = (uint64_t)(v0 + 1);
    __cxa_atexit((void (*)(void *))sub_1001C700C, &qword_102419690, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1024196A8);
  }
}

void sub_1003D9C60(_Unwind_Exception *a1)
{
}

uint64_t sub_1003D9C78()
{
  dword_10247A990 = *sub_101413024();
  sub_100134750(&qword_10247A998, "com.apple.wifiPositionCalculatorWithAssociatedAp.analytics");

  return __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10247A998, (void *)&_mh_execute_header);
}

uint64_t sub_1003D9CE8()
{
  if (qword_102489CA0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489CA0 + 8))(qword_102489CA0);
  }
  if (qword_102489CA8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489CA8 + 8))(qword_102489CA8);
  }
  if (qword_102489CB0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489CB0 + 8))(qword_102489CB0);
  }
  if (qword_102489CB8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489CB8 + 8))(qword_102489CB8);
  }
  if (qword_102489CC0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489CC0 + 8))(qword_102489CC0);
  }
  if (qword_102489CC8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489CC8 + 8))(qword_102489CC8);
  }
  if (qword_102489CD0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489CD0 + 8))(qword_102489CD0);
  }
  if (qword_102489CD8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489CD8 + 8))(qword_102489CD8);
  }
  if (qword_102489CE0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489CE0 + 8))(qword_102489CE0);
  }
  if (qword_102489CE8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489CE8 + 8))(qword_102489CE8);
  }
  if (qword_102489CF0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489CF0 + 8))(qword_102489CF0);
  }
  if (qword_102489CF8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489CF8 + 8))(qword_102489CF8);
  }
  if (qword_102489D00) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D00 + 8))(qword_102489D00);
  }
  if (qword_102489D08) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D08 + 8))(qword_102489D08);
  }
  if (qword_102489D10) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D10 + 8))(qword_102489D10);
  }
  if (qword_102489D18) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D18 + 8))(qword_102489D18);
  }
  if (qword_102489D20) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D20 + 8))(qword_102489D20);
  }
  if (qword_102489D28) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D28 + 8))(qword_102489D28);
  }
  if (qword_102489D30) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D30 + 8))(qword_102489D30);
  }
  if (qword_102489D38) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D38 + 8))(qword_102489D38);
  }
  if (qword_102489D40) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D40 + 8))(qword_102489D40);
  }
  if (qword_102489D48) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D48 + 8))(qword_102489D48);
  }
  if (qword_102489D50) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D50 + 8))(qword_102489D50);
  }
  if (qword_102489D58) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D58 + 8))(qword_102489D58);
  }
  if (qword_102489D60) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D60 + 8))(qword_102489D60);
  }
  if (qword_102489D68) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D68 + 8))(qword_102489D68);
  }
  if (qword_102489D70) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D70 + 8))(qword_102489D70);
  }
  if (qword_102489D78) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D78 + 8))(qword_102489D78);
  }
  if (qword_102489D80) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D80 + 8))(qword_102489D80);
  }
  if (qword_102489D88) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D88 + 8))(qword_102489D88);
  }
  if (qword_102489D90) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D90 + 8))(qword_102489D90);
  }
  if (qword_102489D98) {
    (*(void (**)(uint64_t))(*(void *)qword_102489D98 + 8))(qword_102489D98);
  }
  if (qword_102489DA0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489DA0 + 8))(qword_102489DA0);
  }
  if (qword_102489DA8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489DA8 + 8))(qword_102489DA8);
  }
  if (qword_102489DB0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489DB0 + 8))(qword_102489DB0);
  }
  if (qword_102489DB8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489DB8 + 8))(qword_102489DB8);
  }
  if (qword_102489DC0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489DC0 + 8))(qword_102489DC0);
  }
  if (qword_102489DC8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489DC8 + 8))(qword_102489DC8);
  }
  if (qword_102489DD0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489DD0 + 8))(qword_102489DD0);
  }
  if (qword_102489DD8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489DD8 + 8))(qword_102489DD8);
  }
  if (qword_102489DE0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489DE0 + 8))(qword_102489DE0);
  }
  if (qword_102489DE8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489DE8 + 8))(qword_102489DE8);
  }
  if (qword_102489DF0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489DF0 + 8))(qword_102489DF0);
  }
  if (qword_102489DF8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489DF8 + 8))(qword_102489DF8);
  }
  if (qword_102489E00) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E00 + 8))(qword_102489E00);
  }
  if (qword_102489E08) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E08 + 8))(qword_102489E08);
  }
  if (qword_102489E10) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E10 + 8))(qword_102489E10);
  }
  if (qword_102489E18) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E18 + 8))(qword_102489E18);
  }
  if (qword_102489E20) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E20 + 8))(qword_102489E20);
  }
  if (qword_102489E28) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E28 + 8))(qword_102489E28);
  }
  if (qword_102489E30) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E30 + 8))(qword_102489E30);
  }
  if (qword_102489E38) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E38 + 8))(qword_102489E38);
  }
  if (qword_102489E40) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E40 + 8))(qword_102489E40);
  }
  if (qword_102489E48) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E48 + 8))(qword_102489E48);
  }
  if (qword_102489E50) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E50 + 8))(qword_102489E50);
  }
  if (qword_102489E58) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E58 + 8))(qword_102489E58);
  }
  if (qword_102489E60) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E60 + 8))(qword_102489E60);
  }
  if (qword_102489E68) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E68 + 8))(qword_102489E68);
  }
  if (qword_102489E70) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E70 + 8))(qword_102489E70);
  }
  if (qword_102489E78) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E78 + 8))(qword_102489E78);
  }
  if (qword_102489E80) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E80 + 8))(qword_102489E80);
  }
  if (qword_102489E88) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E88 + 8))(qword_102489E88);
  }
  if (qword_102489E90) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E90 + 8))(qword_102489E90);
  }
  if (qword_102489E98) {
    (*(void (**)(uint64_t))(*(void *)qword_102489E98 + 8))(qword_102489E98);
  }
  if (qword_102489EA0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489EA0 + 8))(qword_102489EA0);
  }
  if (qword_102489EA8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489EA8 + 8))(qword_102489EA8);
  }
  if (qword_102489EB0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489EB0 + 8))(qword_102489EB0);
  }
  if (qword_102489EB8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489EB8 + 8))(qword_102489EB8);
  }
  if (qword_102489EC0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489EC0 + 8))(qword_102489EC0);
  }
  if (qword_102489EC8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489EC8 + 8))(qword_102489EC8);
  }
  if (qword_102489ED0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489ED0 + 8))(qword_102489ED0);
  }
  if (qword_102489ED8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489ED8 + 8))(qword_102489ED8);
  }
  if (qword_102489EE0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489EE0 + 8))(qword_102489EE0);
  }
  if (qword_102489EE8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489EE8 + 8))(qword_102489EE8);
  }
  if (qword_102489EF0) {
    (*(void (**)(uint64_t))(*(void *)qword_102489EF0 + 8))(qword_102489EF0);
  }
  if (qword_102489EF8) {
    (*(void (**)(uint64_t))(*(void *)qword_102489EF8 + 8))(qword_102489EF8);
  }
  if (qword_102489F00) {
    (*(void (**)(uint64_t))(*(void *)qword_102489F00 + 8))(qword_102489F00);
  }
  if (qword_102489F08) {
    (*(void (**)(uint64_t))(*(void *)qword_102489F08 + 8))(qword_102489F08);
  }
  if (qword_102489F10) {
    (*(void (**)(uint64_t))(*(void *)qword_102489F10 + 8))(qword_102489F10);
  }
  if (qword_102489F18) {
    (*(void (**)(uint64_t))(*(void *)qword_102489F18 + 8))(qword_102489F18);
  }
  if (qword_102489F20) {
    (*(void (**)(uint64_t))(*(void *)qword_102489F20 + 8))(qword_102489F20);
  }
  if (qword_102489F28) {
    (*(void (**)(uint64_t))(*(void *)qword_102489F28 + 8))(qword_102489F28);
  }
  if (qword_102489F30) {
    (*(void (**)(uint64_t))(*(void *)qword_102489F30 + 8))(qword_102489F30);
  }
  if (qword_102489F38) {
    (*(void (**)(uint64_t))(*(void *)qword_102489F38 + 8))(qword_102489F38);
  }
  if (qword_102489F40) {
    (*(void (**)(uint64_t))(*(void *)qword_102489F40 + 8))(qword_102489F40);
  }
  if (qword_102489F48) {
    (*(void (**)(uint64_t))(*(void *)qword_102489F48 + 8))(qword_102489F48);
  }
  if (qword_102489F50) {
    (*(void (**)(uint64_t))(*(void *)qword_102489F50 + 8))(qword_102489F50);
  }
  uint64_t result = qword_102489F58;
  if (qword_102489F58)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_102489F58 + 8);
    return v1();
  }
  return result;
}

void sub_1003DAD90(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10247A9B0 & 1) == 0)
  {
    byte_10247A9B0 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/CoreLocation/Daemon/Positioning/ProtobufDefs/CLPPrivateDataShared.pb.cc", a4);
    operator new();
  }
}

uint64_t sub_1003DD228(uint64_t result)
{
  *(void *)uint64_t result = &off_1022AE9C8;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003DD250(uint64_t result)
{
  *(void *)(result + 40) = 0;
  *(void *)uint64_t result = off_1022AEA40;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003DD27C(uint64_t result)
{
  *(void *)uint64_t result = &off_1022AEAB8;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003DD2A4(uint64_t result)
{
  *(void *)(result + 40) = 0;
  *(void *)uint64_t result = off_1022AEB30;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1003DD2D0(void *result)
{
  *uint64_t result = &off_1022AEBA8;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1003DD2F4(uint64_t result)
{
  *(void *)(result + 40) = 0;
  *(void *)uint64_t result = off_1022AEC20;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003DD320(uint64_t result)
{
  *(_DWORD *)(result + 36) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(void *)uint64_t result = off_1022AEE78;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_WORD *)(result + 32) = 0;
  return result;
}

void *sub_1003DD34C(void *result)
{
  *uint64_t result = off_1022AF148;
  result[1] = 0;
  result[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  result[3] = 0;
  return result;
}

uint64_t sub_1003DD378(uint64_t result)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)uint64_t result = off_1022AF2B0;
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  return result;
}

double sub_1003DD3AC(uint64_t a1)
{
  *(void *)a1 = off_1022AF328;
  *(_WORD *)(a1 + 16) = 0;
  double result = COERCE_DOUBLE(&_mh_execute_header);
  *(void *)(a1 + 8) = &_mh_execute_header;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 20) = 0;
  return result;
}

uint64_t sub_1003DD3E4(uint64_t result)
{
  *(void *)double result = off_1022AF3A0;
  *(unsigned char *)(result + 8) = 0;
  *(_DWORD *)(result + 12) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1003DD40C(uint64_t result)
{
  *(void *)double result = off_1022AF490;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1003DD434(uint64_t a1)
{
  *(void *)a1 = &off_1022AF508;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

uint64_t sub_1003DD460(uint64_t result)
{
  *(void *)double result = off_1022AF580;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003DD488(uint64_t result)
{
  *(void *)double result = off_1022AF5F8;
  *(void *)(result + 8) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(result + 16) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_1003DD4BC(uint64_t a1)
{
  *(void *)a1 = off_1022AF670;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 36) = 0u;
  return result;
}

uint64_t sub_1003DD4EC(uint64_t result)
{
  *(void *)double result = off_1022AF6E8;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1003DD514(uint64_t a1)
{
  *(void *)a1 = off_1022AF7D8;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 56) = 0;
  return result;
}

uint64_t sub_1003DD548(uint64_t result)
{
  *(void *)double result = off_1022AF850;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1003DD570(void *result)
{
  result[1] = 0;
  result[2] = 0;
  *double result = &off_1022AF8C8;
  return result;
}

double sub_1003DD594(uint64_t a1)
{
  *(void *)a1 = &off_1022AF940;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

double sub_1003DD5C4(uint64_t a1)
{
  *(void *)a1 = &off_1022AF9B8;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 84) = 0u;
  return result;
}

uint64_t sub_1003DD600(uint64_t result)
{
  *(void *)double result = off_1022AFA30;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1003DD628(uint64_t a1)
{
  *(void *)a1 = &off_1022AFAA8;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 36) = 0u;
  return result;
}

uint64_t sub_1003DD658(uint64_t result)
{
  *(void *)double result = off_1022AFB20;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1003DD680(uint64_t a1)
{
  *(void *)a1 = &off_1022AFB98;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 69) = 0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  return result;
}

uint64_t sub_1003DD6C0(uint64_t result)
{
  *(void *)double result = off_1022AFC10;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1003DD6E8(uint64_t a1)
{
  *(void *)a1 = off_1022AFC88;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

double sub_1003DD718(uint64_t a1)
{
  *(void *)a1 = off_1022AFD00;
  *(void *)(a1 + 56) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 36) = 0u;
  return result;
}

double sub_1003DD74C(uint64_t a1)
{
  *(void *)a1 = off_1022AFD78;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 37) = 0u;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  return result;
}

uint64_t sub_1003DD788(uint64_t result)
{
  *(_DWORD *)(result + 20) = 0;
  *(_DWORD *)(result + 24) = 0;
  *(void *)double result = off_1022AFDF0;
  *(void *)(result + 8) = 0;
  *(_WORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1003DD7B0(uint64_t result)
{
  *(void *)double result = off_1022AFE68;
  *(void *)(result + 8) = 0xBFF0000000000000;
  *(_WORD *)(result + 16) = 0;
  *(unsigned char *)(result + 18) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

double sub_1003DD7E8(uint64_t a1)
{
  *(void *)a1 = off_1022AFEE0;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 34) = 0u;
  return result;
}

double sub_1003DD820(uint64_t a1)
{
  *(void *)a1 = &off_1022AFF58;
  *(void *)(a1 + 8) = 0;
  double result = NAN;
  *(_OWORD *)(a1 + 16) = xmmword_101D1D170;
  *(_DWORD *)(a1 + 32) = 0;
  return result;
}

double sub_1003DD850(uint64_t a1)
{
  *(void *)a1 = off_1022AFFD0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(_OWORD *)(a1 + 8) = xmmword_101D1D180;
  return result;
}

uint64_t sub_1003DD87C(uint64_t result)
{
  *(void *)double result = &off_1022B0048;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003DD8A4(uint64_t result)
{
  *(void *)(result + 40) = 0;
  *(void *)double result = off_1022B00C0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1003DD8D0(void *result)
{
  result[1] = 0;
  result[2] = 0;
  *double result = &off_1022B0138;
  return result;
}

double sub_1003DD8F4(uint64_t a1)
{
  *(void *)a1 = off_1022B01B0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  return result;
}

void *sub_1003DD920(void *result)
{
  result[1] = 0;
  result[2] = 0;
  *double result = off_1022B0228;
  return result;
}

double sub_1003DD944(uint64_t a1)
{
  *(void *)a1 = off_1022B02A0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(void *)(a1 + 88) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_WORD *)(a1 + 96) = 0;
  *(void *)(a1 + 144) = 0;
  *(_OWORD *)(a1 + 100) = 0u;
  *(_OWORD *)(a1 + 116) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  return result;
}

uint64_t sub_1003DD99C(uint64_t result)
{
  *(void *)double result = off_1022B0318;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003DD9C4(uint64_t result)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = off_1022B0390;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

double sub_1003DD9EC(uint64_t a1)
{
  *(void *)a1 = off_1022B0408;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1003DDA1C(uint64_t result)
{
  *(_DWORD *)(result + 36) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(void *)double result = off_1022B04F8;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003DDA48(uint64_t result)
{
  *(void *)(result + 40) = 0;
  *(void *)double result = off_1022B0570;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1003DDA74(uint64_t a1)
{
  *(void *)a1 = off_1022B05E8;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = -1;
  *(_WORD *)(a1 + 44) = 0;
  *(unsigned char *)(a1 + 46) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  *(void *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_1003DDAB8(uint64_t result)
{
  *(void *)double result = off_1022B0660;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

double sub_1003DDADC(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_1022B06D8;
  *(unsigned char *)(a1 + 24) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 28) = 0u;
  *(_OWORD *)(a1 + 44) = 0u;
  return result;
}

uint64_t sub_1003DDB10(uint64_t result)
{
  *(void *)(result + 40) = 0;
  *(void *)double result = off_1022B0750;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1003DDB3C(void *result)
{
  result[1] = 0;
  result[2] = 0;
  *double result = &off_1022B0840;
  return result;
}

uint64_t sub_1003DDB60(uint64_t result)
{
  *(void *)double result = off_1022B08B8;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 44) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_WORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1003DDBA0(uint64_t result)
{
  *(unsigned char *)(result + 16) = 0;
  *(void *)double result = &off_1022B0930;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 20) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1003DDBC8(uint64_t result)
{
  *(void *)(result + 40) = 0;
  *(void *)double result = off_1022B09A8;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1003DDBF4(uint64_t a1)
{
  *(void *)a1 = off_1022B0A20;
  *(_DWORD *)(a1 + 52) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 33) = 0u;
  return result;
}

void *sub_1003DDC28(void *result)
{
  *double result = off_1022B0B10;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_1003DDC4C(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_1022B0B88;
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 84) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(unsigned char *)(a1 + 80) = 0;
  return result;
}

uint64_t sub_1003DDC88(uint64_t result)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = off_1022B0C00;
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 32) = 0;
  return result;
}

double sub_1003DDCB8(uint64_t a1)
{
  *(void *)a1 = off_1022B0C78;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  return result;
}

uint64_t sub_1003DDCEC(uint64_t result)
{
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)double result = off_1022B0CF0;
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 32) = 0;
  return result;
}

double sub_1003DDD1C(uint64_t a1)
{
  *(void *)a1 = off_1022B0D68;
  *(void *)(a1 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 56) = 0;
  return result;
}

double sub_1003DDD54(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  *(void *)a1 = off_1022B0E58;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_1003DDD8C(uint64_t result)
{
  *(void *)double result = off_1022B0DE0;
  *(_WORD *)(result + 8) = 0;
  *(_DWORD *)(result + 12) = 0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1003DDDB4(uint64_t result)
{
  *(unsigned char *)(result + 40) = 0;
  *(_DWORD *)(result + 44) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(void *)double result = off_1022B0ED0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1003DDDE4(void *result)
{
  result[1] = 0;
  result[2] = 0;
  *double result = off_1022B0F48;
  return result;
}

void *sub_1003DDE08(void *result)
{
  result[4] = 0;
  result[1] = 0;
  result[2] = 0;
  *double result = &off_1022B0FC0;
  *(void *)((char *)result + 23) = 0;
  return result;
}

double sub_1003DDE34(uint64_t a1)
{
  *(void *)a1 = off_1022B1038;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 0;
  return result;
}

double sub_1003DDE64(void *a1)
{
  *a1 = off_1022B10B0;
  double result = 0.0;
  a1[1] = 0;
  a1[2] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[3] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[4] = 0;
  return result;
}

double sub_1003DDE9C(uint64_t a1)
{
  *(void *)a1 = off_1022B1128;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  return result;
}

double sub_1003DDED0(uint64_t a1)
{
  *(void *)a1 = off_1022B1218;
  *(void *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 76) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_DWORD *)(a1 + 71) = 0;
  return result;
}

uint64_t sub_1003DDF10(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_102489CD8;
  if (!qword_102489CD8)
  {
    double result = sub_1003DAD90();
    uint64_t v2 = qword_102489CD8;
  }
  v1[8] = v2;
  uint64_t v3 = qword_102489CF0;
  if (!qword_102489CF0)
  {
    double result = sub_1003DAD90();
    uint64_t v2 = qword_102489CD8;
    uint64_t v3 = qword_102489CF0;
  }
  v1[11] = v3;
  if (!v2)
  {
    double result = sub_1003DAD90();
    uint64_t v2 = qword_102489CD8;
  }
  v1[13] = v2;
  uint64_t v4 = qword_102489CE8;
  if (!qword_102489CE8)
  {
    double result = sub_1003DAD90();
    uint64_t v2 = qword_102489CD8;
    uint64_t v4 = qword_102489CE8;
  }
  v1[17] = v4;
  if (!v2)
  {
    double result = sub_1003DAD90();
    uint64_t v2 = qword_102489CD8;
  }
  v1[26] = v2;
  uint64_t v5 = qword_102489D08;
  if (!qword_102489D08)
  {
    double result = sub_1003DAD90();
    uint64_t v5 = qword_102489D08;
  }
  v1[40] = v5;
  return result;
}

uint64_t sub_1003DDFC0(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_102489CA0;
  if (!qword_102489CA0)
  {
    double result = sub_1003DAD90();
    uint64_t v2 = qword_102489CA0;
  }
  v1[1] = v2;
  uint64_t v3 = qword_102489CE0;
  if (!qword_102489CE0)
  {
    double result = sub_1003DAD90();
    uint64_t v3 = qword_102489CE0;
  }
  v1[2] = v3;
  uint64_t v4 = qword_102489D00;
  if (!qword_102489D00)
  {
    double result = sub_1003DAD90();
    uint64_t v4 = qword_102489D00;
  }
  v1[3] = v4;
  uint64_t v5 = qword_102489D10;
  if (!qword_102489D10)
  {
    double result = sub_1003DAD90();
    uint64_t v5 = qword_102489D10;
  }
  v1[5] = v5;
  uint64_t v6 = qword_102489D18;
  if (!qword_102489D18)
  {
    double result = sub_1003DAD90();
    uint64_t v6 = qword_102489D18;
  }
  v1[7] = v6;
  uint64_t v7 = qword_102489D20;
  if (!qword_102489D20)
  {
    double result = sub_1003DAD90();
    uint64_t v7 = qword_102489D20;
  }
  v1[8] = v7;
  uint64_t v8 = qword_102489D28;
  if (!qword_102489D28)
  {
    double result = sub_1003DAD90();
    uint64_t v8 = qword_102489D28;
  }
  v1[10] = v8;
  uint64_t v9 = qword_102489D30;
  if (!qword_102489D30)
  {
    double result = sub_1003DAD90();
    uint64_t v9 = qword_102489D30;
  }
  v1[11] = v9;
  return result;
}

uint64_t sub_1003DE0A0(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_102489CA0;
  if (qword_102489CA0)
  {
    *(void *)(result + 8) = qword_102489CA0;
LABEL_4:
    v1[2] = v2;
    goto LABEL_5;
  }
  double result = ((uint64_t (*)(void))sub_1003DAD90)();
  uint64_t v2 = qword_102489CA0;
  v1[1] = qword_102489CA0;
  if (v2) {
    goto LABEL_4;
  }
  double result = sub_1003DAD90(result);
  uint64_t v2 = qword_102489CA0;
  v1[2] = qword_102489CA0;
  if (!v2)
  {
    double result = sub_1003DAD90(result);
    uint64_t v2 = qword_102489CA0;
  }
LABEL_5:
  v1[3] = v2;
  uint64_t v3 = qword_102489D78;
  if (!qword_102489D78)
  {
    double result = sub_1003DAD90(result);
    uint64_t v3 = qword_102489D78;
  }
  v1[4] = v3;
  return result;
}

uint64_t sub_1003DE120(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_102489CA0;
  if (qword_102489CA0)
  {
    *(void *)(result + 8) = qword_102489CA0;
LABEL_4:
    v1[2] = v2;
    goto LABEL_5;
  }
  double result = sub_1003DAD90(result);
  uint64_t v2 = qword_102489CA0;
  v1[1] = qword_102489CA0;
  if (v2) {
    goto LABEL_4;
  }
  double result = sub_1003DAD90(result);
  uint64_t v2 = qword_102489CA0;
  v1[2] = qword_102489CA0;
  if (!v2)
  {
    double result = sub_1003DAD90(result);
    uint64_t v2 = qword_102489CA0;
  }
LABEL_5:
  v1[3] = v2;
  uint64_t v3 = qword_102489E40;
  if (!qword_102489E40)
  {
    double result = sub_1003DAD90(result);
    uint64_t v3 = qword_102489E40;
  }
  v1[13] = v3;
  uint64_t v4 = qword_102489E48;
  if (!qword_102489E48)
  {
    double result = sub_1003DAD90(result);
    uint64_t v4 = qword_102489E48;
  }
  v1[17] = v4;
  return result;
}

uint64_t sub_1003DE1B8(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_102489E68;
  if (!qword_102489E68)
  {
    double result = sub_1003DAD90(result);
    uint64_t v2 = qword_102489E68;
  }
  v1[1] = v2;
  uint64_t v3 = qword_102489E60;
  if (qword_102489E60)
  {
    v1[2] = qword_102489E60;
LABEL_6:
    v1[3] = v3;
    goto LABEL_7;
  }
  double result = sub_1003DAD90(result);
  uint64_t v3 = qword_102489E60;
  v1[2] = qword_102489E60;
  if (v3) {
    goto LABEL_6;
  }
  double result = sub_1003DAD90(result);
  uint64_t v3 = qword_102489E60;
  v1[3] = qword_102489E60;
  if (!v3)
  {
    double result = sub_1003DAD90(result);
    uint64_t v3 = qword_102489E60;
  }
LABEL_7:
  v1[4] = v3;
  return result;
}

uint64_t sub_1003DE238(uint64_t result)
{
  uint64_t v1 = (void *)result;
  uint64_t v2 = qword_102489CA0;
  if (qword_102489CA0)
  {
    *(void *)(result + 8) = qword_102489CA0;
LABEL_4:
    v1[2] = v2;
LABEL_5:
    v1[3] = v2;
    goto LABEL_6;
  }
  double result = sub_1003DAD90(result);
  uint64_t v2 = qword_102489CA0;
  v1[1] = qword_102489CA0;
  if (v2) {
    goto LABEL_4;
  }
  double result = sub_1003DAD90(result);
  uint64_t v2 = qword_102489CA0;
  v1[2] = qword_102489CA0;
  if (v2) {
    goto LABEL_5;
  }
  double result = sub_1003DAD90(result);
  uint64_t v2 = qword_102489CA0;
  v1[3] = qword_102489CA0;
  if (!v2)
  {
    double result = sub_1003DAD90(result);
    uint64_t v2 = qword_102489CA0;
  }
LABEL_6:
  v1[4] = v2;
  uint64_t v3 = qword_102489F40;
  if (!qword_102489F40)
  {
    double result = sub_1003DAD90(result);
    uint64_t v3 = qword_102489F40;
  }
  v1[5] = v3;
  uint64_t v4 = qword_102489CD8;
  if (!qword_102489CD8)
  {
    double result = sub_1003DAD90(result);
    uint64_t v4 = qword_102489CD8;
  }
  v1[6] = v4;
  return result;
}

BOOL sub_1003DE2E4(unsigned int a1)
{
  return a1 < 7;
}

BOOL sub_1003DE2F0(unsigned int a1)
{
  return a1 < 4 || a1 == 1001;
}

BOOL sub_1003DE308(unsigned int a1)
{
  return a1 < 0xF;
}

double sub_1003DE314(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_1003DE3E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003DE400(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AE950;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

uint64_t sub_1003DE420(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489CA0;
  if (!qword_102489CA0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489CA0;
  }
  return result;
}

void sub_1003DE450()
{
}

uint64_t sub_1003DE4A4(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1003DE4BC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          unint64_t v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          int v10 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }
      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

double sub_1003DE684(uint64_t a1, void *lpsrc)
{
  return sub_1003DE314(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003DE70C()
{
  return 1;
}

void *sub_1003DE714@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.TimeStamp");
}

float sub_1003DE724(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if (*(unsigned char *)(a2 + 32))
  {
    *(_DWORD *)(a1 + 32) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489CA8 + 8);
    }
    double v4 = sub_1003DE314(v6, v7);
    int v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_16:
      LODWORD(v4) = *(_DWORD *)(a2 + 20);
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_DWORD *)(a1 + 20) = LODWORD(v4);
      if ((*(_DWORD *)(a2 + 32) & 8) != 0) {
        goto LABEL_8;
      }
      return *(float *)&v4;
    }
  }
  else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) |= 2u;
  *(_DWORD *)(a1 + 16) = LODWORD(v4);
  int v5 = *(_DWORD *)(a2 + 32);
  if ((v5 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v5 & 8) != 0)
  {
LABEL_8:
    LODWORD(v4) = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 24) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_1003DE874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003DE88C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AE9C8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489CA8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003DE91C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003DE88C(a1);

  operator delete();
}

void sub_1003DE954()
{
}

uint64_t sub_1003DE9A4(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003DE9DC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v21 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21))return 0; {
        }
          }
        else
        {
          unsigned int v21 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v21);
        if (!sub_1003DE4BC(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        __int16 v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 21) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_31;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
LABEL_31:
        unsigned int v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 16) = v21;
        *(_DWORD *)(a1 + 32) |= 2u;
        double v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 29) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_35:
        unsigned int v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 20) = v21;
        *(_DWORD *)(a1 + 32) |= 4u;
        __int16 v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 37) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_39:
        unsigned int v21 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21))
        {
          *(_DWORD *)(a1 + 24) = v21;
          *(_DWORD *)(a1 + 32) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003DECF0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489CA8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 20), a3);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_11:
  float v8 = *(float *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, v8, a3);
}

uint64_t sub_1003DEDA8(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    if (v1)
    {
      uint64_t v1 = *(void *)(a1 + 8);
      if (!v1) {
        uint64_t v1 = *(void *)(qword_102489CA8 + 8);
      }
      int v3 = *(unsigned __int8 *)(v1 + 36);
      if (*(unsigned char *)(v1 + 36))
      {
        int v4 = (v3 << 31 >> 31) & 9;
        if ((v3 & 2) != 0) {
          v4 += 9;
        }
        if ((v3 & 4) != 0) {
          int v3 = v4 + 9;
        }
        else {
          int v3 = v4;
        }
      }
      *(_DWORD *)(v1 + 32) = v3;
      unsigned int v2 = v3 + 2;
      LODWORD(v1) = *(_DWORD *)(a1 + 32);
    }
    else
    {
      unsigned int v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

float sub_1003DEE38(uint64_t a1, void *lpsrc)
{
  return sub_1003DE724(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003DEEC0()
{
  return 1;
}

void *sub_1003DEEC8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.AccelSample");
}

double sub_1003DEED8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 28);
      uint64_t v8 = *(int *)(a1 + 24);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v7 + 1);
          int v7 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v8 + 1;
      *(float *)&double result = sub_1003DE724(*(void *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 44))
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 8);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_102489CB0 + 8);
    }
    return sub_1003DE314(v10, v11);
  }
  return result;
}

void sub_1003DF0B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003DF0C8(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022AEA40;
  if ((uint64_t *)qword_102489CB0 != a1)
  {
    uint64_t v2 = a1[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  sub_10016B2E8(a1 + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1003DF164(uint64_t *a1)
{
  sub_1003DF0C8(a1);

  operator delete();
}

uint64_t sub_1003DF19C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489CB0;
  if (!qword_102489CB0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489CB0;
  }
  return result;
}

void sub_1003DF1CC()
{
}

uint64_t sub_1003DF220(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0;
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  uint64_t result = sub_10026DEDC(a1 + 16);
  *(_DWORD *)(a1 + 44) = 0;
  return result;
}

uint64_t sub_1003DF270(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9) {
          operator new();
        }
        unsigned int v32 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_1003DE4BC(v9, this, v14) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        double v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }
          *(_DWORD *)(a1 + 28) = v19 + 1;
          operator new();
        }
        uint64_t v21 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v20 + 1;
        uint64_t v22 = *(void *)(v21 + 8 * v20);
        unsigned int v33 = 0;
        __int16 v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
        }
          }
        else
        {
          unsigned int v33 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
        if (!sub_1003DE9DC(v22, this, v27) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v16) {
          *((_DWORD *)this + 14) = v29;
        }
        double v18 = (unsigned char *)*((void *)this + 1);
        __int16 v30 = (unsigned char *)*((void *)this + 2);
        if (v18 >= v30 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }
      if (v18 == v30 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1003DF5D0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 44))
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489CB0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return result;
}

uint64_t sub_1003DF658(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v3 = *(void *)(a1 + 8);
    if (!v3) {
      uint64_t v3 = *(void *)(qword_102489CB0 + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(unsigned char *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }
    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }
  else
  {
    int v2 = 0;
  }
  int v6 = *(_DWORD *)(a1 + 24);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003DEDA8(*(void *)(*(void *)(a1 + 16) + 8 * v8));
      int v11 = (int)v9;
      if (v9 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
      }
      else {
        int v12 = 1;
      }
      uint64_t v7 = (v11 + v7 + v12);
      ++v8;
    }
    while (v8 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 40) = v7;
  return v7;
}

double sub_1003DF734(uint64_t a1, void *lpsrc)
{
  return sub_1003DEED8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003DF7BC()
{
  return 1;
}

void *sub_1003DF7C4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.Accel");
}

float sub_1003DF7D4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if (*(unsigned char *)(a2 + 32))
  {
    *(_DWORD *)(a1 + 32) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489CB8 + 8);
    }
    double v4 = sub_1003DE314(v6, v7);
    int v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_16:
      LODWORD(v4) = *(_DWORD *)(a2 + 20);
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_DWORD *)(a1 + 20) = LODWORD(v4);
      if ((*(_DWORD *)(a2 + 32) & 8) != 0) {
        goto LABEL_8;
      }
      return *(float *)&v4;
    }
  }
  else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) |= 2u;
  *(_DWORD *)(a1 + 16) = LODWORD(v4);
  int v5 = *(_DWORD *)(a2 + 32);
  if ((v5 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v5 & 8) != 0)
  {
LABEL_8:
    LODWORD(v4) = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 24) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_1003DF924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003DF93C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AEAB8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489CB8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003DF9CC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003DF93C(a1);

  operator delete();
}

void sub_1003DFA04()
{
}

uint64_t sub_1003DFA54(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003DFA8C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v21 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21))return 0; {
        }
          }
        else
        {
          unsigned int v21 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v21);
        if (!sub_1003DE4BC(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 21) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_31;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
LABEL_31:
        unsigned int v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 16) = v21;
        *(_DWORD *)(a1 + 32) |= 2u;
        double v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 29) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_35:
        unsigned int v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 20) = v21;
        *(_DWORD *)(a1 + 32) |= 4u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 37) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_39:
        unsigned int v21 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21))
        {
          *(_DWORD *)(a1 + 24) = v21;
          *(_DWORD *)(a1 + 32) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003DFDA0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489CB8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 20), a3);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_11:
  float v8 = *(float *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, v8, a3);
}

uint64_t sub_1003DFE58(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    if (v1)
    {
      uint64_t v1 = *(void *)(a1 + 8);
      if (!v1) {
        uint64_t v1 = *(void *)(qword_102489CB8 + 8);
      }
      int v3 = *(unsigned __int8 *)(v1 + 36);
      if (*(unsigned char *)(v1 + 36))
      {
        int v4 = (v3 << 31 >> 31) & 9;
        if ((v3 & 2) != 0) {
          v4 += 9;
        }
        if ((v3 & 4) != 0) {
          int v3 = v4 + 9;
        }
        else {
          int v3 = v4;
        }
      }
      *(_DWORD *)(v1 + 32) = v3;
      unsigned int v2 = v3 + 2;
      LODWORD(v1) = *(_DWORD *)(a1 + 32);
    }
    else
    {
      unsigned int v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

float sub_1003DFEE8(uint64_t a1, void *lpsrc)
{
  return sub_1003DF7D4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003DFF70()
{
  return 1;
}

void *sub_1003DFF78@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GyroSample");
}

double sub_1003DFF88(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 28);
      uint64_t v8 = *(int *)(a1 + 24);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v7 + 1);
          int v7 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v8 + 1;
      *(float *)&double result = sub_1003DF7D4(*(void *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 44))
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 8);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_102489CC0 + 8);
    }
    return sub_1003DE314(v10, v11);
  }
  return result;
}

void sub_1003E0160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E0178(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022AEB30;
  if ((uint64_t *)qword_102489CC0 != a1)
  {
    uint64_t v2 = a1[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  sub_10016B2E8(a1 + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1003E0214(uint64_t *a1)
{
  sub_1003E0178(a1);

  operator delete();
}

uint64_t sub_1003E024C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489CC0;
  if (!qword_102489CC0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489CC0;
  }
  return result;
}

void sub_1003E027C()
{
}

uint64_t sub_1003E02D0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0;
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  uint64_t result = sub_10026DEDC(a1 + 16);
  *(_DWORD *)(a1 + 44) = 0;
  return result;
}

uint64_t sub_1003E0320(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9) {
          operator new();
        }
        unsigned int v32 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_1003DE4BC(v9, this, v14) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        double v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }
          *(_DWORD *)(a1 + 28) = v19 + 1;
          operator new();
        }
        uint64_t v21 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v20 + 1;
        uint64_t v22 = *(void *)(v21 + 8 * v20);
        unsigned int v33 = 0;
        __int16 v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
        }
          }
        else
        {
          unsigned int v33 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
        if (!sub_1003DFA8C(v22, this, v27) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v16) {
          *((_DWORD *)this + 14) = v29;
        }
        double v18 = (unsigned char *)*((void *)this + 1);
        __int16 v30 = (unsigned char *)*((void *)this + 2);
        if (v18 >= v30 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }
      if (v18 == v30 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1003E0680(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 44))
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489CC0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return result;
}

uint64_t sub_1003E0708(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v3 = *(void *)(a1 + 8);
    if (!v3) {
      uint64_t v3 = *(void *)(qword_102489CC0 + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(unsigned char *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }
    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }
  else
  {
    int v2 = 0;
  }
  int v6 = *(_DWORD *)(a1 + 24);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003DFE58(*(void *)(*(void *)(a1 + 16) + 8 * v8));
      int v11 = (int)v9;
      if (v9 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
      }
      else {
        int v12 = 1;
      }
      uint64_t v7 = (v11 + v7 + v12);
      ++v8;
    }
    while (v8 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 40) = v7;
  return v7;
}

double sub_1003E07E4(uint64_t a1, void *lpsrc)
{
  return sub_1003DFF88(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E086C()
{
  return 1;
}

void *sub_1003E0874@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.Gyro");
}

float sub_1003E0884(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 28);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if ((*(unsigned char *)(a2 + 28) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 28) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    LODWORD(v4) = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 28) |= 2u;
    *(_DWORD *)(a1 + 16) = LODWORD(v4);
    if ((*(_DWORD *)(a2 + 28) & 4) != 0) {
      goto LABEL_7;
    }
    return *(float *)&v4;
  }
  *(_DWORD *)(a1 + 28) |= 1u;
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    operator new();
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_102489CC8 + 8);
  }
  double v4 = sub_1003DE314(v6, v7);
  int v5 = *(_DWORD *)(a2 + 28);
  if ((v5 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v5 & 4) != 0)
  {
LABEL_7:
    LODWORD(v4) = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 28) |= 4u;
    *(_DWORD *)(a1 + 20) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_1003E09B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E09CC(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AEBA8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489CC8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003E0A5C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003E09CC(a1);

  operator delete();
}

void sub_1003E0A94()
{
}

uint64_t sub_1003E0AE0(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    if (*(unsigned char *)(result + 28))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1003E0B14(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v7 = TagFallback >> 3;
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_20;
        }
LABEL_32:
        unsigned int v22 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v22) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 16) = v22;
        *(_DWORD *)(a1 + 28) |= 2u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 < *((void *)this + 2) && *v19 == 29)
        {
          *((void *)this + 1) = v19 + 1;
          goto LABEL_36;
        }
      }
      else
      {
        if (v7 != 3)
        {
          int v8 = TagFallback & 7;
          goto LABEL_20;
        }
        int v8 = TagFallback & 7;
        if (v8 == 5)
        {
LABEL_36:
          unsigned int v21 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
            return 0;
          }
          *(_DWORD *)(a1 + 20) = v21;
          *(_DWORD *)(a1 + 28) |= 4u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
        else
        {
LABEL_20:
          if (v8 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        }
          }
      }
    }
    int v8 = TagFallback & 7;
    if (v8 != 2) {
      goto LABEL_20;
    }
    *(_DWORD *)(a1 + 28) |= 1u;
    uint64_t v9 = *(void *)(a1 + 8);
    if (!v9) {
      operator new();
    }
    unsigned int v23 = 0;
    unsigned int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v10;
      *((void *)this + 1) = v10 + 1;
    }
    int v11 = *((_DWORD *)this + 14);
    int v12 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v11 + 1;
    if (v11 >= v12) {
      return 0;
    }
    int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_1003DE4BC(v9, this, v14) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
    int v15 = *((_DWORD *)this + 14);
    BOOL v16 = __OFSUB__(v15, 1);
    int v17 = v15 - 1;
    if (v17 < 0 == v16) {
      *((_DWORD *)this + 14) = v17;
    }
    double v18 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 21)
    {
      *((void *)this + 1) = v18 + 1;
      goto LABEL_32;
    }
  }
}

uint64_t sub_1003E0DAC(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_102489CC8 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  float v8 = *(float *)(v5 + 20);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, v8, a3);
}

uint64_t sub_1003E0E48(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 28);
  if (*(unsigned char *)(a1 + 28))
  {
    if (v1)
    {
      uint64_t v1 = *(void *)(a1 + 8);
      if (!v1) {
        uint64_t v1 = *(void *)(qword_102489CC8 + 8);
      }
      int v3 = *(unsigned __int8 *)(v1 + 36);
      if (*(unsigned char *)(v1 + 36))
      {
        int v4 = (v3 << 31 >> 31) & 9;
        if ((v3 & 2) != 0) {
          v4 += 9;
        }
        if ((v3 & 4) != 0) {
          int v3 = v4 + 9;
        }
        else {
          int v3 = v4;
        }
      }
      *(_DWORD *)(v1 + 32) = v3;
      unsigned int v2 = v3 + 2;
      LODWORD(v1) = *(_DWORD *)(a1 + 28);
    }
    else
    {
      unsigned int v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 24) = v1;
  return v1;
}

float sub_1003E0ECC(uint64_t a1, void *lpsrc)
{
  return sub_1003E0884(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E0F54()
{
  return 1;
}

void *sub_1003E0F5C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.BaroSample");
}

double sub_1003E0F6C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 28);
      uint64_t v8 = *(int *)(a1 + 24);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v7 + 1);
          int v7 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v8 + 1;
      *(float *)&double result = sub_1003E0884(*(void *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 44))
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 8);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_102489CD0 + 8);
    }
    return sub_1003DE314(v10, v11);
  }
  return result;
}

void sub_1003E1140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E1158(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022AEC20;
  if ((uint64_t *)qword_102489CD0 != a1)
  {
    uint64_t v2 = a1[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  sub_10016B2E8(a1 + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1003E11F4(uint64_t *a1)
{
  sub_1003E1158(a1);

  operator delete();
}

uint64_t sub_1003E122C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489CD0;
  if (!qword_102489CD0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489CD0;
  }
  return result;
}

void sub_1003E125C()
{
}

uint64_t sub_1003E12B0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0;
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  uint64_t result = sub_10026DEDC(a1 + 16);
  *(_DWORD *)(a1 + 44) = 0;
  return result;
}

uint64_t sub_1003E1300(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9) {
          operator new();
        }
        unsigned int v32 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_1003DE4BC(v9, this, v14) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        double v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }
          *(_DWORD *)(a1 + 28) = v19 + 1;
          operator new();
        }
        uint64_t v21 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v20 + 1;
        uint64_t v22 = *(void *)(v21 + 8 * v20);
        unsigned int v33 = 0;
        unsigned int v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
        }
          }
        else
        {
          unsigned int v33 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
        if (!sub_1003E0B14(v22, this, v27) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v16) {
          *((_DWORD *)this + 14) = v29;
        }
        double v18 = (unsigned char *)*((void *)this + 1);
        __int16 v30 = (unsigned char *)*((void *)this + 2);
        if (v18 >= v30 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }
      if (v18 == v30 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1003E165C(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 44))
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489CD0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return result;
}

uint64_t sub_1003E16E4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v3 = *(void *)(a1 + 8);
    if (!v3) {
      uint64_t v3 = *(void *)(qword_102489CD0 + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(unsigned char *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }
    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }
  else
  {
    int v2 = 0;
  }
  int v6 = *(_DWORD *)(a1 + 24);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003E0E48(*(void *)(*(void *)(a1 + 16) + 8 * v8));
      int v11 = (int)v9;
      if (v9 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
      }
      else {
        int v12 = 1;
      }
      uint64_t v7 = (v11 + v7 + v12);
      ++v8;
    }
    while (v8 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 40) = v7;
  return v7;
}

double sub_1003E17C0(uint64_t a1, void *lpsrc)
{
  return sub_1003E0F6C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E1848()
{
  return 1;
}

void *sub_1003E1850@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.Baro");
}

double sub_1003E1860(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }
  return result;
}

void sub_1003E190C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E1924(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AEC98;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003E1944()
{
}

uint64_t sub_1003E1990(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1003E19A4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_21;
        }
        unint64_t v10 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v10;
        *(_DWORD *)(a1 + 28) |= 1u;
        uint64_t v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 < *((void *)this + 2) && *v8 == 17)
        {
          *((void *)this + 1) = v8 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_21;
      }
      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_21:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_15:
    unint64_t v10 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 16) = v10;
    *(_DWORD *)(a1 + 28) |= 2u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1003E1B0C(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 28);
  if (*(unsigned char *)(a1 + 28))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 24) = v1;
  return v1;
}

double sub_1003E1B38(uint64_t a1, void *lpsrc)
{
  return sub_1003E1860(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E1BC0()
{
  return 1;
}

void *sub_1003E1BC8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.ClientLocationCoordinate");
}

void sub_1003E1BD8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v29);
  }
  int v4 = *(_DWORD *)(a2 + 152);
  if (!(_BYTE)v4) {
    goto LABEL_16;
  }
  if (v4)
  {
    unsigned int v5 = *(_DWORD *)(a2 + 48);
    if (v5 >= 3 && v5 != 0xFFFF) {
      sub_101A5EA4C();
    }
    *(_DWORD *)(a1 + 152) |= 1u;
    *(_DWORD *)(a1 + 48) = v5;
    int v4 = *(_DWORD *)(a2 + 152);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 152) |= 2u;
    uint64_t v22 = *(void *)(a1 + 8);
    if (!v22) {
      operator new();
    }
    uint64_t v23 = *(void *)(a2 + 8);
    if (!v23) {
      uint64_t v23 = *(void *)(qword_102489CE0 + 8);
    }
    sub_1003E1860(v22, v23);
    int v4 = *(_DWORD *)(a2 + 152);
    if ((v4 & 4) == 0)
    {
LABEL_10:
      if ((v4 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_65;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v24 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 152) |= 4u;
  *(void *)(a1 + 16) = v24;
  int v4 = *(_DWORD *)(a2 + 152);
  if ((v4 & 8) == 0)
  {
LABEL_11:
    if ((v4 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t v25 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 152) |= 8u;
  *(void *)(a1 + 24) = v25;
  int v4 = *(_DWORD *)(a2 + 152);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_67:
    uint64_t v27 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 152) |= 0x20u;
    *(void *)(a1 + 40) = v27;
    int v4 = *(_DWORD *)(a2 + 152);
    if ((v4 & 0x40) == 0)
    {
LABEL_14:
      if ((v4 & 0x80) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    goto LABEL_68;
  }
LABEL_66:
  uint64_t v26 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 152) |= 0x10u;
  *(void *)(a1 + 32) = v26;
  int v4 = *(_DWORD *)(a2 + 152);
  if ((v4 & 0x20) != 0) {
    goto LABEL_67;
  }
LABEL_13:
  if ((v4 & 0x40) == 0) {
    goto LABEL_14;
  }
LABEL_68:
  uint64_t v28 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 152) |= 0x40u;
  *(void *)(a1 + 56) = v28;
  int v4 = *(_DWORD *)(a2 + 152);
  if ((v4 & 0x80) != 0)
  {
LABEL_15:
    uint64_t v6 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 152) |= 0x80u;
    *(void *)(a1 + 64) = v6;
    int v4 = *(_DWORD *)(a2 + 152);
  }
LABEL_16:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_26;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v14 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 152) |= 0x100u;
    *(void *)(a1 + 72) = v14;
    int v4 = *(_DWORD *)(a2 + 152);
    if ((v4 & 0x200) == 0)
    {
LABEL_19:
      if ((v4 & 0x400) == 0) {
        goto LABEL_20;
      }
      goto LABEL_48;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v15 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 152) |= 0x200u;
  *(void *)(a1 + 80) = v15;
  int v4 = *(_DWORD *)(a2 + 152);
  if ((v4 & 0x400) == 0)
  {
LABEL_20:
    if ((v4 & 0x800) == 0) {
      goto LABEL_21;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v16 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 152) |= 0x400u;
  *(_DWORD *)(a1 + 52) = v16;
  int v4 = *(_DWORD *)(a2 + 152);
  if ((v4 & 0x800) == 0)
  {
LABEL_21:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t v17 = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 152) |= 0x800u;
  *(void *)(a1 + 88) = v17;
  int v4 = *(_DWORD *)(a2 + 152);
  if ((v4 & 0x1000) == 0)
  {
LABEL_22:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_52;
  }
LABEL_50:
  unsigned int v18 = *(_DWORD *)(a2 + 104);
  if (v18 >= 0xE) {
    sub_101A5EA20();
  }
  *(_DWORD *)(a1 + 152) |= 0x1000u;
  *(_DWORD *)(a1 + 104) = v18;
  int v4 = *(_DWORD *)(a2 + 152);
  if ((v4 & 0x2000) == 0)
  {
LABEL_23:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_57;
  }
LABEL_52:
  *(_DWORD *)(a1 + 152) |= 0x2000u;
  uint64_t v19 = *(void *)(a1 + 96);
  if (!v19) {
    operator new();
  }
  uint64_t v20 = *(void *)(a2 + 96);
  if (!v20) {
    uint64_t v20 = *(void *)(qword_102489CE0 + 96);
  }
  sub_1003E1860(v19, v20);
  int v4 = *(_DWORD *)(a2 + 152);
  if ((v4 & 0x4000) == 0)
  {
LABEL_24:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_57:
  uint64_t v21 = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 152) |= 0x4000u;
  *(void *)(a1 + 112) = v21;
  int v4 = *(_DWORD *)(a2 + 152);
  if ((v4 & 0x8000) != 0)
  {
LABEL_25:
    int v7 = *(_DWORD *)(a2 + 108);
    *(_DWORD *)(a1 + 152) |= 0x8000u;
    *(_DWORD *)(a1 + 108) = v7;
    int v4 = *(_DWORD *)(a2 + 152);
  }
LABEL_26:
  if ((v4 & 0xFF0000) != 0)
  {
    if ((v4 & 0x10000) != 0)
    {
      int v8 = *(_DWORD *)(a2 + 120);
      if (((v8 - 25) > 0x32 || ((1 << (v8 - 25)) & 0x4000002000001) == 0)
        && (v8 + 1) >= 2)
      {
        sub_101A5E9F4();
      }
      *(_DWORD *)(a1 + 152) |= 0x10000u;
      *(_DWORD *)(a1 + 120) = v8;
      int v4 = *(_DWORD *)(a2 + 152);
    }
    if ((v4 & 0x20000) != 0)
    {
      unsigned int v9 = *(_DWORD *)(a2 + 124);
      if (v9 >= 3) {
        sub_101A5E9C8();
      }
      *(_DWORD *)(a1 + 152) |= 0x20000u;
      *(_DWORD *)(a1 + 124) = v9;
      int v4 = *(_DWORD *)(a2 + 152);
    }
    if ((v4 & 0x40000) != 0)
    {
      unsigned int v10 = *(_DWORD *)(a2 + 128);
      if (v10 >= 3) {
        sub_101A5E99C();
      }
      *(_DWORD *)(a1 + 152) |= 0x40000u;
      *(_DWORD *)(a1 + 128) = v10;
      int v4 = *(_DWORD *)(a2 + 152);
    }
    if ((v4 & 0x80000) != 0)
    {
      int v11 = *(_DWORD *)(a2 + 132);
      if ((v11 + 1) >= 8) {
        sub_101A5E970();
      }
      *(_DWORD *)(a1 + 152) |= 0x80000u;
      *(_DWORD *)(a1 + 132) = v11;
      int v4 = *(_DWORD *)(a2 + 152);
    }
    if ((v4 & 0x100000) != 0)
    {
      uint64_t v12 = *(void *)(a2 + 136);
      *(_DWORD *)(a1 + 152) |= 0x100000u;
      *(void *)(a1 + 136) = v12;
      int v4 = *(_DWORD *)(a2 + 152);
    }
    if ((v4 & 0x200000) != 0)
    {
      char v13 = *(unsigned char *)(a2 + 144);
      *(_DWORD *)(a1 + 152) |= 0x200000u;
      *(unsigned char *)(a1 + 144) = v13;
    }
  }
}

void sub_1003E2030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E2048(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AED10;
  sub_10016B1B0(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

uint64_t sub_1003E209C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489CE0;
  if (!qword_102489CE0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489CE0;
  }
  return result;
}

void sub_1003E20CC()
{
}

uint64_t sub_1003E214C(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 152);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(result + 48) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 28))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 28) = 0;
        int v1 = *(_DWORD *)(result + 152);
      }
    }
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(void *)(result + 56) = 0;
    *(void *)(result + 64) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(result + 52) = 0;
    *(_DWORD *)(result + 104) = 0;
    *(void *)(result + 80) = 0;
    *(void *)(result + 88) = 0;
    *(void *)(result + 72) = 0;
    if ((v1 & 0x2000) != 0)
    {
      uint64_t v3 = *(void *)(result + 96);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        int v1 = *(_DWORD *)(result + 152);
      }
    }
    *(void *)(result + 112) = 0;
    *(_DWORD *)(result + 108) = 0;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_OWORD *)(result + 120) = xmmword_101D1D160;
    *(void *)(result + 136) = 0;
    *(unsigned char *)(result + 144) = 0;
  }
  *(_DWORD *)(result + 152) = 0;
  return result;
}

uint64_t sub_1003E21EC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    unsigned int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        v76[0] = 0;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!result) {
            return result;
          }
          unsigned int v9 = v76[0];
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 < 3 || v9 == 0xFFFF)
        {
          *(_DWORD *)(a1 + 152) |= 1u;
          *(_DWORD *)(a1 + 48) = v9;
        }
        __int16 v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 < *((void *)this + 2) && *v30 == 18)
        {
          *((void *)this + 1) = v30 + 1;
          goto LABEL_81;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_57;
        }
LABEL_81:
        *(_DWORD *)(a1 + 152) |= 2u;
        uint64_t v31 = *(void *)(a1 + 8);
        if (!v31) {
          operator new();
        }
        v76[0] = 0;
        unsigned int v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0; {
        }
          }
        else
        {
          v76[0] = *v32;
          *((void *)this + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_1003E19A4(v31, this, v36) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v37 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v37, 1);
        int v39 = v37 - 1;
        if (v39 < 0 == v38) {
          *((_DWORD *)this + 14) = v39;
        }
        __int16 v40 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 != 25) {
          continue;
        }
        *((void *)this + 1) = v40 + 1;
LABEL_95:
        *(void *)int v76 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v76;
        }
        *(_DWORD *)(a1 + 152) |= 4u;
        uint64_t v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 != 33) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
LABEL_99:
        *(void *)int v76 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v76;
        }
        *(_DWORD *)(a1 + 152) |= 8u;
        __int16 v42 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 != 41) {
          continue;
        }
        *((void *)this + 1) = v42 + 1;
LABEL_103:
        *(void *)int v76 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v76;
        }
        *(_DWORD *)(a1 + 152) |= 0x10u;
        unsigned int v43 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 != 49) {
          continue;
        }
        *((void *)this + 1) = v43 + 1;
LABEL_107:
        *(void *)int v76 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v76;
        }
        *(_DWORD *)(a1 + 152) |= 0x20u;
        __int16 v44 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 != 57) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
LABEL_111:
        *(void *)int v76 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v76;
        }
        *(_DWORD *)(a1 + 152) |= 0x40u;
        double v45 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v45 >= *((void *)this + 2) || *v45 != 65) {
          continue;
        }
        *((void *)this + 1) = v45 + 1;
LABEL_115:
        *(void *)int v76 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v76;
        }
        *(_DWORD *)(a1 + 152) |= 0x80u;
        __int16 v46 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 != 73) {
          continue;
        }
        *((void *)this + 1) = v46 + 1;
LABEL_119:
        *(void *)int v76 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v76;
        }
        *(_DWORD *)(a1 + 152) |= 0x100u;
        int v47 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v47 >= *((void *)this + 2) || *v47 != 81) {
          continue;
        }
        *((void *)this + 1) = v47 + 1;
LABEL_123:
        *(void *)int v76 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76) & 1) == 0)return 0; {
        *(void *)(a1 + 80) = *(void *)v76;
        }
        *(_DWORD *)(a1 + 152) |= 0x200u;
        int v48 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v48 >= v10 || *v48 != 88) {
          continue;
        }
        int v11 = v48 + 1;
        *((void *)this + 1) = v11;
LABEL_127:
        v76[0] = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!result) {
            return result;
          }
          unsigned int v49 = v76[0];
          unsigned int v50 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v49 = *v11;
          unsigned int v50 = v11 + 1;
          *((void *)this + 1) = v50;
        }
        *(_DWORD *)(a1 + 52) = v49;
        *(_DWORD *)(a1 + 152) |= 0x400u;
        if ((unint64_t)v50 >= v10 || *v50 != 97) {
          continue;
        }
        *((void *)this + 1) = v50 + 1;
LABEL_135:
        *(void *)int v76 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76) & 1) == 0)return 0; {
        *(void *)(a1 + 88) = *(void *)v76;
        }
        *(_DWORD *)(a1 + 152) |= 0x800u;
        int v51 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v51 >= v12 || *v51 != 104) {
          continue;
        }
        char v13 = v51 + 1;
        *((void *)this + 1) = v13;
LABEL_139:
        v76[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!result) {
            return result;
          }
          unsigned int v52 = v76[0];
        }
        else
        {
          unsigned int v52 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v52 <= 0xD)
        {
          *(_DWORD *)(a1 + 152) |= 0x1000u;
          *(_DWORD *)(a1 + 104) = v52;
        }
        uint64_t v53 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v53 >= *((void *)this + 2) || *v53 != 114) {
          continue;
        }
        *((void *)this + 1) = v53 + 1;
LABEL_149:
        *(_DWORD *)(a1 + 152) |= 0x2000u;
        uint64_t v54 = *(void *)(a1 + 96);
        if (!v54) {
          operator new();
        }
        v76[0] = 0;
        int v55 = (char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0; {
        }
          }
        else
        {
          v76[0] = *v55;
          *((void *)this + 1) = v55 + 1;
        }
        int v56 = *((_DWORD *)this + 14);
        int v57 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v56 + 1;
        if (v56 >= v57) {
          return 0;
        }
        int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_1003E19A4(v54, this, v59) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
        int v60 = *((_DWORD *)this + 14);
        BOOL v38 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v38) {
          *((_DWORD *)this + 14) = v61;
        }
        int v62 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v62 >= *((void *)this + 2) || *v62 != 121) {
          continue;
        }
        *((void *)this + 1) = v62 + 1;
LABEL_163:
        *(void *)int v76 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76) & 1) == 0)return 0; {
        *(void *)(a1 + 112) = *(void *)v76;
        }
        *(_DWORD *)(a1 + 152) |= 0x4000u;
        uint64_t v63 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((int)v14 - (int)v63 < 2 || *v63 != 128 || v63[1] != 1) {
          continue;
        }
        uint64_t v15 = v63 + 2;
        *((void *)this + 1) = v15;
LABEL_168:
        v76[0] = 0;
        if ((unint64_t)v15 >= v14 || (char)*v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!result) {
            return result;
          }
          unsigned int v64 = v76[0];
          int v65 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int v64 = *v15;
          int v65 = v15 + 1;
          *((void *)this + 1) = v65;
        }
        *(_DWORD *)(a1 + 108) = v64;
        *(_DWORD *)(a1 + 152) |= 0x8000u;
        if ((int)v14 - (int)v65 < 2 || *v65 != 136 || v65[1] != 1) {
          continue;
        }
        int v16 = (char *)(v65 + 2);
        *((void *)this + 1) = v16;
LABEL_177:
        v76[0] = 0;
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!result) {
            return result;
          }
          unsigned int v66 = v76[0];
        }
        else
        {
          unsigned int v66 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        if (v66 - 25 <= 0x32 && ((1 << (v66 - 25)) & 0x4000002000001) != 0 || v66 + 1 < 2)
        {
          *(_DWORD *)(a1 + 152) |= 0x10000u;
          *(_DWORD *)(a1 + 120) = v66;
        }
        int v69 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((int)v17 - (int)v69 < 2 || *v69 != 144 || v69[1] != 1) {
          continue;
        }
        unsigned int v18 = (char *)(v69 + 2);
        *((void *)this + 1) = v18;
LABEL_194:
        v76[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!result) {
            return result;
          }
          unsigned int v70 = v76[0];
        }
        else
        {
          unsigned int v70 = *v18;
          *((void *)this + 1) = v18 + 1;
        }
        if (v70 <= 2)
        {
          *(_DWORD *)(a1 + 152) |= 0x20000u;
          *(_DWORD *)(a1 + 124) = v70;
        }
        int v71 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        if ((int)v19 - (int)v71 < 2 || *v71 != 152 || v71[1] != 1) {
          continue;
        }
        uint64_t v20 = (char *)(v71 + 2);
        *((void *)this + 1) = v20;
LABEL_205:
        v76[0] = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!result) {
            return result;
          }
          unsigned int v72 = v76[0];
        }
        else
        {
          unsigned int v72 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        if (v72 <= 2)
        {
          *(_DWORD *)(a1 + 152) |= 0x40000u;
          *(_DWORD *)(a1 + 128) = v72;
        }
        int v73 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((int)v21 - (int)v73 < 2 || *v73 != 160 || v73[1] != 1) {
          continue;
        }
        uint64_t v22 = (char *)(v73 + 2);
        *((void *)this + 1) = v22;
LABEL_216:
        v76[0] = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!result) {
            return result;
          }
          unsigned int v74 = v76[0];
        }
        else
        {
          unsigned int v74 = *v22;
          *((void *)this + 1) = v22 + 1;
        }
        if (v74 + 1 <= 7)
        {
          *(_DWORD *)(a1 + 152) |= 0x80000u;
          *(_DWORD *)(a1 + 132) = v74;
        }
        int v75 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v75 < 2 || *v75 != 169 || v75[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v75 + 2;
LABEL_51:
        *(void *)int v76 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76))
        {
          *(void *)(a1 + 136) = *(void *)v76;
          *(_DWORD *)(a1 + 152) |= 0x100000u;
          uint64_t v24 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v23 = *((void *)this + 2);
          if ((int)v23 - (int)v24 >= 2 && *v24 == 176 && v24[1] == 1)
          {
            uint64_t v25 = (char *)(v24 + 2);
            *((void *)this + 1) = v25;
LABEL_61:
            v76[0] = 0;
            if ((unint64_t)v25 >= v23 || *v25 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
              if (!result) {
                return result;
              }
              unsigned int v26 = v76[0];
              uint64_t v27 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v23 = *((void *)this + 2);
            }
            else
            {
              unsigned int v26 = *v25;
              uint64_t v27 = (unsigned __int8 *)(v25 + 1);
              *((void *)this + 1) = v27;
            }
            *(unsigned char *)(a1 + 144) = v26 != 0;
            *(_DWORD *)(a1 + 152) |= 0x200000u;
            if (v27 == (unsigned __int8 *)v23
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_95;
        }
        goto LABEL_57;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_99;
        }
        goto LABEL_57;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_103;
        }
        goto LABEL_57;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_107;
        }
        goto LABEL_57;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_111;
        }
        goto LABEL_57;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_115;
        }
        goto LABEL_57;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_119;
        }
        goto LABEL_57;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_123;
        }
        goto LABEL_57;
      case 0xBu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_127;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_135;
        }
        goto LABEL_57;
      case 0xDu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        char v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_139;
      case 0xEu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_149;
        }
        goto LABEL_57;
      case 0xFu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_163;
        }
        goto LABEL_57;
      case 0x10u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        uint64_t v15 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_168;
      case 0x11u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_177;
      case 0x12u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        unsigned int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_194;
      case 0x13u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_205;
      case 0x14u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        uint64_t v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_216;
      case 0x15u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_51;
        }
        goto LABEL_57;
      case 0x16u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        uint64_t v25 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_61;
      default:
        int v7 = TagFallback & 7;
LABEL_57:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1003E2E48(uint64_t a1, void *lpsrc)
{
  sub_1003E1BD8(a1, (uint64_t)lpsrc);
}

void sub_1003E2ED0(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
    sub_1003E1BD8(a1, a2);
  }
}

uint64_t sub_1003E2F3C()
{
  return 1;
}

void *sub_1003E2F44@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.DaemonLocation");
}

void sub_1003E2F54(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(unsigned char *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 32) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = *(unsigned char *)(a2 + 25);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(unsigned char *)(a1 + 25) = v5;
  }
}

void sub_1003E3048(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E3060(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AED88;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003E3080()
{
}

uint64_t sub_1003E30D4(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003E30EC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
        *(void *)unsigned int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v18;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        char v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 17) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
LABEL_14:
        *(void *)unsigned int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v18) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v18;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        unint64_t v10 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 != 24) {
          continue;
        }
        int v11 = v10 + 1;
        *((void *)this + 1) = v11;
LABEL_20:
        v18[0] = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!result) {
            return result;
          }
          unsigned int v12 = v18[0];
          char v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v12 = *v11;
          char v13 = v11 + 1;
          *((void *)this + 1) = v13;
        }
        *(unsigned char *)(a1 + 24) = v12 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v13 >= v9 || *v13 != 32) {
          continue;
        }
        unint64_t v14 = v13 + 1;
        *((void *)this + 1) = v14;
LABEL_33:
        v18[0] = 0;
        if ((unint64_t)v14 >= v9 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v18);
          if (!result) {
            return result;
          }
          unsigned int v16 = v18[0];
          unint64_t v17 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
        }
        else
        {
          unsigned int v16 = *v14;
          unint64_t v17 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v17;
        }
        *(unsigned char *)(a1 + 25) = v16 != 0;
        *(_DWORD *)(a1 + 32) |= 8u;
        if (v17 != (unsigned __int8 *)v9 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_20;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_33;
      default:
        int v7 = TagFallback & 7;
LABEL_24:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

void sub_1003E3384(uint64_t a1, void *lpsrc)
{
  sub_1003E2F54(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E340C()
{
  return 1;
}

void *sub_1003E3414@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MapMatcherData");
}

double sub_1003E3424(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }
  return result;
}

void sub_1003E34D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E34E8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AEE00;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003E3508()
{
}

uint64_t sub_1003E3554(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1003E3568(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_21;
        }
        unint64_t v10 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v10;
        *(_DWORD *)(a1 + 28) |= 1u;
        char v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 < *((void *)this + 2) && *v8 == 17)
        {
          *((void *)this + 1) = v8 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_21;
      }
      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_21:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_15:
    unint64_t v10 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 16) = v10;
    *(_DWORD *)(a1 + 28) |= 2u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1003E36D0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 28);
  if (*(unsigned char *)(a1 + 28))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 24) = v1;
  return v1;
}

double sub_1003E36FC(uint64_t a1, void *lpsrc)
{
  return sub_1003E3424(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E3784()
{
  return 1;
}

void *sub_1003E378C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.PressureSample");
}

void sub_1003E379C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 40))
  {
    unsigned int v5 = *(_DWORD *)(a2 + 8);
    if (v5 >= 7) {
      sub_101A5EA78();
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    *(_DWORD *)(a1 + 8) = v5;
    int v4 = *(_DWORD *)(a2 + 40);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 12) = v7;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  int v8 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 40) |= 4u;
  *(_DWORD *)(a1 + 16) = v8;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v9 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 40) |= 8u;
  *(_DWORD *)(a1 + 20) = v9;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_20:
    int v11 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v11;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x40) == 0)
    {
LABEL_13:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_14;
    }
    goto LABEL_21;
  }
LABEL_19:
  int v10 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  *(_DWORD *)(a1 + 24) = v10;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_12:
  if ((v4 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_21:
  char v12 = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 40) |= 0x40u;
  *(unsigned char *)(a1 + 32) = v12;
  if ((*(_DWORD *)(a2 + 40) & 0x80) != 0)
  {
LABEL_14:
    char v6 = *(unsigned char *)(a2 + 33);
    *(_DWORD *)(a1 + 40) |= 0x80u;
    *(unsigned char *)(a1 + 33) = v6;
  }
}

void sub_1003E3918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E3930(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AEE78;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003E3950(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AEE78;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1003E39A4()
{
}

uint64_t sub_1003E39F8(uint64_t result)
{
  if (*(unsigned char *)(result + 40))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1003E3A14(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    unsigned int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v27 = 0;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!result) {
            return result;
          }
          unsigned int v9 = v27;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 6)
        {
          *(_DWORD *)(a1 + 40) |= 1u;
          *(_DWORD *)(a1 + 8) = v9;
        }
        unsigned int v16 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v16 < v10 && *v16 == 16)
        {
          int v11 = v16 + 1;
          *((void *)this + 1) = v11;
          goto LABEL_36;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_36:
        unsigned int v27 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
          if (!result) {
            return result;
          }
          unsigned int v17 = v27;
          unsigned int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v11;
          unsigned int v18 = v11 + 1;
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 12) = v17;
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v18 >= v10 || *v18 != 29) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_44:
        unsigned int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v27) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 16) = v27;
        *(_DWORD *)(a1 + 40) |= 4u;
        unint64_t v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 37) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_48:
        unsigned int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v27) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 20) = v27;
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 45) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_52:
        unsigned int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v27) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 24) = v27;
        *(_DWORD *)(a1 + 40) |= 0x10u;
        unint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 53) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_56:
        unsigned int v27 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v27))
        {
          *(_DWORD *)(a1 + 28) = v27;
          *(_DWORD *)(a1 + 40) |= 0x20u;
          uint64_t v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v22 < v12 && *v22 == 56)
          {
            char v13 = v22 + 1;
            *((void *)this + 1) = v13;
LABEL_60:
            unsigned int v27 = 0;
            if ((unint64_t)v13 >= v12 || *v13 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
              if (!result) {
                return result;
              }
              unsigned int v23 = v27;
              uint64_t v24 = (unsigned char *)*((void *)this + 1);
              unint64_t v12 = *((void *)this + 2);
            }
            else
            {
              unsigned int v23 = *v13;
              uint64_t v24 = v13 + 1;
              *((void *)this + 1) = v24;
            }
            *(unsigned char *)(a1 + 32) = v23 != 0;
            *(_DWORD *)(a1 + 40) |= 0x40u;
            if ((unint64_t)v24 < v12 && *v24 == 64)
            {
              unint64_t v14 = v24 + 1;
              *((void *)this + 1) = v14;
LABEL_68:
              unsigned int v27 = 0;
              if ((unint64_t)v14 >= v12 || *v14 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27);
                if (!result) {
                  return result;
                }
                unsigned int v25 = v27;
                unsigned int v26 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v12 = *((void *)this + 2);
              }
              else
              {
                unsigned int v25 = *v14;
                unsigned int v26 = (unsigned __int8 *)(v14 + 1);
                *((void *)this + 1) = v26;
              }
              *(unsigned char *)(a1 + 33) = v25 != 0;
              *(_DWORD *)(a1 + 40) |= 0x80u;
              if (v26 == (unsigned __int8 *)v12
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_44;
        }
        goto LABEL_25;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_48;
        }
        goto LABEL_25;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_52;
        }
        goto LABEL_25;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_56;
        }
        goto LABEL_25;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        char v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_60;
      case 8u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_68;
      default:
        int v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003E3E64(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 32), a2, a4);
    if ((*(_DWORD *)(v5 + 40) & 0x80) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return result;
  }
LABEL_17:
  int v7 = *(unsigned __int8 *)(v5 + 33);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, a2, a4);
}

uint64_t sub_1003E3F7C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_32;
  }
  if ((*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_19;
    }
LABEL_13:
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v8 = 2;
    }
    v4 += v8;
    goto LABEL_19;
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
  if ((v6 & 0x80000000) != 0)
  {
    int v4 = 11;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  if (v6 < 0x80)
  {
    int v4 = 2;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 2) != 0) {
    goto LABEL_13;
  }
LABEL_19:
  unsigned int v9 = v4 + 5;
  if ((v3 & 4) == 0) {
    unsigned int v9 = v4;
  }
  if ((v3 & 8) != 0) {
    v9 += 5;
  }
  if ((v3 & 0x10) != 0) {
    v9 += 5;
  }
  if ((v3 & 0x20) != 0) {
    v9 += 5;
  }
  if ((v3 & 0x40) != 0) {
    v9 += 2;
  }
  if ((v3 & 0x80) != 0) {
    uint64_t result = v9 + 2;
  }
  else {
    uint64_t result = v9;
  }
LABEL_32:
  *(_DWORD *)(a1 + 36) = result;
  return result;
}

void sub_1003E4070(uint64_t a1, void *lpsrc)
{
  sub_1003E379C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E40F8()
{
  return 1;
}

void *sub_1003E4100@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.ClientSatelliteInfo");
}

void sub_1003E4110(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 40))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 40) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 40);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_11;
      }
    }
    else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v6 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(void *)(a1 + 16) = v6;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 32);
      if ((v8 + 1) >= 4) {
        sub_101A5EAA4();
      }
      *(_DWORD *)(a1 + 40) |= 8u;
      *(_DWORD *)(a1 + 32) = v8;
      return;
    }
LABEL_11:
    uint64_t v7 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(void *)(a1 + 24) = v7;
    if ((*(_DWORD *)(a2 + 40) & 8) == 0) {
      return;
    }
    goto LABEL_12;
  }
}

void sub_1003E4214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E422C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AEEF0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003E424C()
{
}

uint64_t sub_1003E42A4(uint64_t result)
{
  if (*(unsigned char *)(result + 40))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = -1;
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1003E42C4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
        *(void *)uint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v15) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v15;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        int v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 17) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
LABEL_14:
        *(void *)uint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v15) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v15;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        unsigned int v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 25) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        *(void *)uint64_t v15 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v15))
        {
          *(void *)(a1 + 24) = *(void *)v15;
          *(_DWORD *)(a1 + 40) |= 4u;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 < v10 && *v11 == 32)
          {
            unint64_t v12 = v11 + 1;
            *((void *)this + 1) = v12;
LABEL_28:
            v15[0] = 0;
            if ((unint64_t)v12 >= v10 || *v12 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v15);
              if (!result) {
                return result;
              }
              unsigned int v13 = v15[0];
            }
            else
            {
              unsigned int v13 = *v12;
              *((void *)this + 1) = v12 + 1;
            }
            if (v13 + 1 <= 3)
            {
              *(_DWORD *)(a1 + 40) |= 8u;
              *(_DWORD *)(a1 + 32) = v13;
            }
            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_24;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_28;
      default:
        int v7 = TagFallback & 7;
LABEL_24:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1003E4538(uint64_t a1, void *lpsrc)
{
  sub_1003E4110(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E45C0()
{
  return 1;
}

void *sub_1003E45C8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.DaemonLocationPrivate.AltitudeInfo");
}

void sub_1003E45D8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v73);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 288), *(_DWORD *)(a2 + 296) + *(_DWORD *)(a1 + 296));
  if (*(int *)(a2 + 296) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 288) + 8 * v4);
      uint64_t v6 = *(int *)(a1 + 296);
      int v7 = *(_DWORD *)(a1 + 300);
      if ((int)v6 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 304))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 288), v7 + 1);
          int v7 = *(_DWORD *)(a1 + 300);
        }
        *(_DWORD *)(a1 + 300) = v7 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 288);
      *(_DWORD *)(a1 + 296) = v6 + 1;
      sub_1003E379C(*(void *)(v8 + 8 * v6), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 296));
  }
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if (!(_BYTE)v9) {
    goto LABEL_21;
  }
  if (v9)
  {
    uint64_t v13 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 364) |= 1u;
    *(void *)(a1 + 8) = v13;
    unsigned int v9 = *(_DWORD *)(a2 + 364);
    if ((v9 & 2) == 0)
    {
LABEL_14:
      if ((v9 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_36;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v14 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 364) |= 2u;
  *(void *)(a1 + 16) = v14;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 4) == 0)
  {
LABEL_15:
    if ((v9 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v15 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 364) |= 4u;
  *(void *)(a1 + 24) = v15;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 8) == 0)
  {
LABEL_16:
    if ((v9 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v16 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 364) |= 8u;
  *(void *)(a1 + 32) = v16;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x10) == 0)
  {
LABEL_17:
    if ((v9 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_39:
    int v18 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 364) |= 0x20u;
    *(_DWORD *)(a1 + 48) = v18;
    unsigned int v9 = *(_DWORD *)(a2 + 364);
    if ((v9 & 0x40) == 0)
    {
LABEL_19:
      if ((v9 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_38:
  uint64_t v17 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 364) |= 0x10u;
  *(void *)(a1 + 40) = v17;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x20) != 0) {
    goto LABEL_39;
  }
LABEL_18:
  if ((v9 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_40:
  int v19 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 364) |= 0x40u;
  *(_DWORD *)(a1 + 52) = v19;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x80) != 0)
  {
LABEL_20:
    int v10 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 364) |= 0x80u;
    *(_DWORD *)(a1 + 56) = v10;
    unsigned int v9 = *(_DWORD *)(a2 + 364);
  }
LABEL_21:
  if ((v9 & 0xFF00) == 0) {
    goto LABEL_56;
  }
  if ((v9 & 0x100) != 0)
  {
    char v11 = *(unsigned char *)(a2 + 112);
    *(_DWORD *)(a1 + 364) |= 0x100u;
    *(unsigned char *)(a1 + 112) = v11;
    unsigned int v9 = *(_DWORD *)(a2 + 364);
  }
  if ((v9 & 0x200) != 0)
  {
    unsigned int v12 = *(_DWORD *)(a2 + 60);
    if (v12 >= 4) {
      sub_101A5EC30();
    }
    *(_DWORD *)(a1 + 364) |= 0x200u;
    *(_DWORD *)(a1 + 60) = v12;
    unsigned int v9 = *(_DWORD *)(a2 + 364);
  }
  if ((v9 & 0x400) != 0)
  {
    *(_DWORD *)(a1 + 364) |= 0x400u;
    uint64_t v20 = *(void *)(a1 + 64);
    if (!v20) {
      operator new();
    }
    uint64_t v21 = *(void *)(a2 + 64);
    if (!v21) {
      uint64_t v21 = *(void *)(qword_102489D00 + 64);
    }
    sub_1003E1860(v20, v21);
    unsigned int v9 = *(_DWORD *)(a2 + 364);
    if ((v9 & 0x800) == 0)
    {
LABEL_29:
      if ((v9 & 0x1000) == 0) {
        goto LABEL_30;
      }
      goto LABEL_48;
    }
  }
  else if ((v9 & 0x800) == 0)
  {
    goto LABEL_29;
  }
  uint64_t v22 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 364) |= 0x800u;
  *(void *)(a1 + 72) = v22;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x1000) == 0)
  {
LABEL_30:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v23 = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 364) |= 0x1000u;
  *(_DWORD *)(a1 + 80) = v23;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x2000) == 0)
  {
LABEL_31:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v24 = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 364) |= 0x2000u;
  *(_DWORD *)(a1 + 84) = v24;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x4000) == 0)
  {
LABEL_32:
    if ((v9 & 0x8000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_51;
  }
LABEL_50:
  char v25 = *(unsigned char *)(a2 + 113);
  *(_DWORD *)(a1 + 364) |= 0x4000u;
  *(unsigned char *)(a1 + 113) = v25;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x8000) == 0) {
    goto LABEL_56;
  }
LABEL_51:
  *(_DWORD *)(a1 + 364) |= 0x8000u;
  uint64_t v26 = *(void *)(a1 + 88);
  if (!v26) {
    operator new();
  }
  uint64_t v27 = *(void *)(a2 + 88);
  if (!v27) {
    uint64_t v27 = *(void *)(qword_102489D00 + 88);
  }
  sub_1003E3424(v26, v27);
  unsigned int v9 = *(_DWORD *)(a2 + 364);
LABEL_56:
  if ((v9 & 0xFF0000) == 0) {
    goto LABEL_73;
  }
  if ((v9 & 0x10000) != 0)
  {
    int v28 = *(_DWORD *)(a2 + 96);
    if ((v28 + 1) >= 4) {
      sub_101A5EC04();
    }
    *(_DWORD *)(a1 + 364) |= 0x10000u;
    *(_DWORD *)(a1 + 96) = v28;
    unsigned int v9 = *(_DWORD *)(a2 + 364);
  }
  if ((v9 & 0x20000) != 0)
  {
    int v34 = *(_DWORD *)(a2 + 100);
    *(_DWORD *)(a1 + 364) |= 0x20000u;
    *(_DWORD *)(a1 + 100) = v34;
    unsigned int v9 = *(_DWORD *)(a2 + 364);
    if ((v9 & 0x40000) == 0)
    {
LABEL_62:
      if ((v9 & 0x80000) == 0) {
        goto LABEL_63;
      }
      goto LABEL_107;
    }
  }
  else if ((v9 & 0x40000) == 0)
  {
    goto LABEL_62;
  }
  *(_DWORD *)(a1 + 364) |= 0x40000u;
  uint64_t v35 = *(void *)(a1 + 104);
  if (!v35) {
    operator new();
  }
  uint64_t v36 = *(void *)(a2 + 104);
  if (!v36) {
    uint64_t v36 = *(void *)(qword_102489D00 + 104);
  }
  sub_1003E1860(v35, v36);
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x80000) == 0)
  {
LABEL_63:
    if ((v9 & 0x100000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_108;
  }
LABEL_107:
  uint64_t v37 = *(void *)(a2 + 120);
  *(_DWORD *)(a1 + 364) |= 0x80000u;
  *(void *)(a1 + 120) = v37;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x100000) == 0)
  {
LABEL_64:
    if ((v9 & 0x200000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_109;
  }
LABEL_108:
  uint64_t v38 = *(void *)(a2 + 128);
  *(_DWORD *)(a1 + 364) |= 0x100000u;
  *(void *)(a1 + 128) = v38;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x200000) == 0)
  {
LABEL_65:
    if ((v9 & 0x400000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_66;
  }
LABEL_109:
  unsigned int v39 = *(_DWORD *)(a2 + 116);
  if (v39 >= 3) {
    sub_101A5EBD8();
  }
  *(_DWORD *)(a1 + 364) |= 0x200000u;
  *(_DWORD *)(a1 + 116) = v39;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x400000) == 0) {
    goto LABEL_67;
  }
LABEL_66:
  char v29 = *(unsigned char *)(a2 + 114);
  *(_DWORD *)(a1 + 364) |= 0x400000u;
  *(unsigned char *)(a1 + 114) = v29;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
LABEL_67:
  if ((v9 & 0x800000) != 0)
  {
    *(_DWORD *)(a1 + 364) |= 0x800000u;
    uint64_t v30 = *(void *)(a1 + 136);
    if (!v30) {
      operator new();
    }
    uint64_t v31 = *(void *)(a2 + 136);
    if (!v31) {
      uint64_t v31 = *(void *)(qword_102489D00 + 136);
    }
    sub_1003E2F54(v30, v31);
    unsigned int v9 = *(_DWORD *)(a2 + 364);
  }
LABEL_73:
  if (!HIBYTE(v9)) {
    goto LABEL_82;
  }
  if ((v9 & 0x1000000) != 0)
  {
    uint64_t v65 = *(void *)(a2 + 144);
    *(_DWORD *)(a1 + 364) |= 0x1000000u;
    *(void *)(a1 + 144) = v65;
    unsigned int v9 = *(_DWORD *)(a2 + 364);
    if ((v9 & 0x2000000) == 0)
    {
LABEL_76:
      if ((v9 & 0x4000000) == 0) {
        goto LABEL_77;
      }
      goto LABEL_164;
    }
  }
  else if ((v9 & 0x2000000) == 0)
  {
    goto LABEL_76;
  }
  uint64_t v66 = *(void *)(a2 + 152);
  *(_DWORD *)(a1 + 364) |= 0x2000000u;
  *(void *)(a1 + 152) = v66;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x4000000) == 0)
  {
LABEL_77:
    if ((v9 & 0x8000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_165;
  }
LABEL_164:
  uint64_t v67 = *(void *)(a2 + 160);
  *(_DWORD *)(a1 + 364) |= 0x4000000u;
  *(void *)(a1 + 160) = v67;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x8000000) == 0)
  {
LABEL_78:
    if ((v9 & 0x10000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_166;
  }
LABEL_165:
  uint64_t v68 = *(void *)(a2 + 168);
  *(_DWORD *)(a1 + 364) |= 0x8000000u;
  *(void *)(a1 + 168) = v68;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x10000000) == 0)
  {
LABEL_79:
    if ((v9 & 0x20000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_167;
  }
LABEL_166:
  uint64_t v69 = *(void *)(a2 + 176);
  *(_DWORD *)(a1 + 364) |= 0x10000000u;
  *(void *)(a1 + 176) = v69;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x20000000) == 0)
  {
LABEL_80:
    if ((v9 & 0x40000000) == 0) {
      goto LABEL_81;
    }
LABEL_168:
    char v71 = *(unsigned char *)(a2 + 115);
    *(_DWORD *)(a1 + 364) |= 0x40000000u;
    *(unsigned char *)(a1 + 115) = v71;
    if ((*(_DWORD *)(a2 + 364) & 0x80000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_169;
  }
LABEL_167:
  uint64_t v70 = *(void *)(a2 + 184);
  *(_DWORD *)(a1 + 364) |= 0x20000000u;
  *(void *)(a1 + 184) = v70;
  unsigned int v9 = *(_DWORD *)(a2 + 364);
  if ((v9 & 0x40000000) != 0) {
    goto LABEL_168;
  }
LABEL_81:
  if ((v9 & 0x80000000) == 0) {
    goto LABEL_82;
  }
LABEL_169:
  uint64_t v72 = *(void *)(a2 + 192);
  *(_DWORD *)(a1 + 364) |= 0x80000000;
  *(void *)(a1 + 192) = v72;
LABEL_82:
  int v32 = *(_DWORD *)(a2 + 368);
  if (!(_BYTE)v32) {
    goto LABEL_92;
  }
  if (v32)
  {
    uint64_t v40 = *(void *)(a2 + 200);
    *(_DWORD *)(a1 + 368) |= 1u;
    *(void *)(a1 + 200) = v40;
    int v32 = *(_DWORD *)(a2 + 368);
    if ((v32 & 2) == 0)
    {
LABEL_85:
      if ((v32 & 4) == 0) {
        goto LABEL_86;
      }
      goto LABEL_114;
    }
  }
  else if ((v32 & 2) == 0)
  {
    goto LABEL_85;
  }
  char v41 = *(unsigned char *)(a2 + 276);
  *(_DWORD *)(a1 + 368) |= 2u;
  *(unsigned char *)(a1 + 276) = v41;
  int v32 = *(_DWORD *)(a2 + 368);
  if ((v32 & 4) == 0)
  {
LABEL_86:
    if ((v32 & 8) == 0) {
      goto LABEL_87;
    }
    goto LABEL_119;
  }
LABEL_114:
  *(_DWORD *)(a1 + 368) |= 4u;
  uint64_t v42 = *(void *)(a1 + 208);
  if (!v42) {
    operator new();
  }
  uint64_t v43 = *(void *)(a2 + 208);
  if (!v43) {
    uint64_t v43 = *(void *)(qword_102489D00 + 208);
  }
  sub_1003E1860(v42, v43);
  int v32 = *(_DWORD *)(a2 + 368);
  if ((v32 & 8) == 0)
  {
LABEL_87:
    if ((v32 & 0x10) == 0) {
      goto LABEL_88;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t v44 = *(void *)(a2 + 216);
  *(_DWORD *)(a1 + 368) |= 8u;
  *(void *)(a1 + 216) = v44;
  int v32 = *(_DWORD *)(a2 + 368);
  if ((v32 & 0x10) == 0)
  {
LABEL_88:
    if ((v32 & 0x20) == 0) {
      goto LABEL_89;
    }
    goto LABEL_122;
  }
LABEL_120:
  unsigned int v45 = *(_DWORD *)(a2 + 272);
  if (v45 >= 3) {
    sub_101A5EBAC();
  }
  *(_DWORD *)(a1 + 368) |= 0x10u;
  *(_DWORD *)(a1 + 272) = v45;
  int v32 = *(_DWORD *)(a2 + 368);
  if ((v32 & 0x20) == 0)
  {
LABEL_89:
    if ((v32 & 0x40) == 0) {
      goto LABEL_90;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t v46 = *(void *)(a2 + 224);
  *(_DWORD *)(a1 + 368) |= 0x20u;
  *(void *)(a1 + 224) = v46;
  int v32 = *(_DWORD *)(a2 + 368);
  if ((v32 & 0x40) == 0)
  {
LABEL_90:
    if ((v32 & 0x80) == 0) {
      goto LABEL_92;
    }
    goto LABEL_91;
  }
LABEL_123:
  uint64_t v47 = *(void *)(a2 + 232);
  *(_DWORD *)(a1 + 368) |= 0x40u;
  *(void *)(a1 + 232) = v47;
  int v32 = *(_DWORD *)(a2 + 368);
  if ((v32 & 0x80) != 0)
  {
LABEL_91:
    uint64_t v33 = *(void *)(a2 + 240);
    *(_DWORD *)(a1 + 368) |= 0x80u;
    *(void *)(a1 + 240) = v33;
    int v32 = *(_DWORD *)(a2 + 368);
  }
LABEL_92:
  if ((v32 & 0xFF00) == 0) {
    goto LABEL_137;
  }
  if ((v32 & 0x100) != 0)
  {
    uint64_t v48 = *(void *)(a2 + 248);
    *(_DWORD *)(a1 + 368) |= 0x100u;
    *(void *)(a1 + 248) = v48;
    int v32 = *(_DWORD *)(a2 + 368);
    if ((v32 & 0x200) == 0)
    {
LABEL_95:
      if ((v32 & 0x400) == 0) {
        goto LABEL_96;
      }
      goto LABEL_127;
    }
  }
  else if ((v32 & 0x200) == 0)
  {
    goto LABEL_95;
  }
  uint64_t v49 = *(void *)(a2 + 256);
  *(_DWORD *)(a1 + 368) |= 0x200u;
  *(void *)(a1 + 256) = v49;
  int v32 = *(_DWORD *)(a2 + 368);
  if ((v32 & 0x400) == 0)
  {
LABEL_96:
    if ((v32 & 0x800) == 0) {
      goto LABEL_97;
    }
    goto LABEL_128;
  }
LABEL_127:
  char v50 = *(unsigned char *)(a2 + 277);
  *(_DWORD *)(a1 + 368) |= 0x400u;
  *(unsigned char *)(a1 + 277) = v50;
  int v32 = *(_DWORD *)(a2 + 368);
  if ((v32 & 0x800) == 0)
  {
LABEL_97:
    if ((v32 & 0x1000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t v51 = *(void *)(a2 + 264);
  *(_DWORD *)(a1 + 368) |= 0x800u;
  *(void *)(a1 + 264) = v51;
  int v32 = *(_DWORD *)(a2 + 368);
  if ((v32 & 0x1000) == 0)
  {
LABEL_98:
    if ((v32 & 0x4000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t v52 = *(void *)(a2 + 280);
  *(_DWORD *)(a1 + 368) |= 0x1000u;
  *(void *)(a1 + 280) = v52;
  int v32 = *(_DWORD *)(a2 + 368);
  if ((v32 & 0x4000) == 0)
  {
LABEL_99:
    if ((v32 & 0x8000) == 0) {
      goto LABEL_137;
    }
    goto LABEL_132;
  }
LABEL_130:
  unsigned int v53 = *(_DWORD *)(a2 + 312);
  if (v53 >= 3) {
    sub_101A5EB80();
  }
  *(_DWORD *)(a1 + 368) |= 0x4000u;
  *(_DWORD *)(a1 + 312) = v53;
  int v32 = *(_DWORD *)(a2 + 368);
  if ((v32 & 0x8000) != 0)
  {
LABEL_132:
    *(_DWORD *)(a1 + 368) |= 0x8000u;
    uint64_t v54 = *(void *)(a1 + 320);
    if (!v54) {
      operator new();
    }
    uint64_t v55 = *(void *)(a2 + 320);
    if (!v55) {
      uint64_t v55 = *(void *)(qword_102489D00 + 320);
    }
    sub_1003E4110(v54, v55);
    int v32 = *(_DWORD *)(a2 + 368);
  }
LABEL_137:
  if ((v32 & 0xFF0000) == 0) {
    goto LABEL_154;
  }
  if ((v32 & 0x10000) != 0)
  {
    unsigned int v56 = *(_DWORD *)(a2 + 316);
    if (v56 >= 3) {
      sub_101A5EB54();
    }
    *(_DWORD *)(a1 + 368) |= 0x10000u;
    *(_DWORD *)(a1 + 316) = v56;
    int v32 = *(_DWORD *)(a2 + 368);
  }
  if ((v32 & 0x20000) != 0)
  {
    uint64_t v62 = *(void *)(a2 + 328);
    *(_DWORD *)(a1 + 368) |= 0x20000u;
    *(void *)(a1 + 328) = v62;
    int v32 = *(_DWORD *)(a2 + 368);
    if ((v32 & 0x40000) == 0)
    {
LABEL_143:
      if ((v32 & 0x80000) == 0) {
        goto LABEL_144;
      }
LABEL_159:
      unsigned int v64 = *(_DWORD *)(a2 + 344);
      if (v64 >= 4) {
        sub_101A5EB28();
      }
      *(_DWORD *)(a1 + 368) |= 0x80000u;
      *(_DWORD *)(a1 + 344) = v64;
      int v32 = *(_DWORD *)(a2 + 368);
      if ((v32 & 0x100000) == 0) {
        goto LABEL_146;
      }
      goto LABEL_145;
    }
  }
  else if ((v32 & 0x40000) == 0)
  {
    goto LABEL_143;
  }
  uint64_t v63 = *(void *)(a2 + 336);
  *(_DWORD *)(a1 + 368) |= 0x40000u;
  *(void *)(a1 + 336) = v63;
  int v32 = *(_DWORD *)(a2 + 368);
  if ((v32 & 0x80000) != 0) {
    goto LABEL_159;
  }
LABEL_144:
  if ((v32 & 0x100000) != 0)
  {
LABEL_145:
    char v57 = *(unsigned char *)(a2 + 278);
    *(_DWORD *)(a1 + 368) |= 0x100000u;
    *(unsigned char *)(a1 + 278) = v57;
    int v32 = *(_DWORD *)(a2 + 368);
  }
LABEL_146:
  if ((v32 & 0x200000) != 0)
  {
    unsigned int v58 = *(_DWORD *)(a2 + 348);
    if (v58 >= 3) {
      sub_101A5EAFC();
    }
    *(_DWORD *)(a1 + 368) |= 0x200000u;
    *(_DWORD *)(a1 + 348) = v58;
    int v32 = *(_DWORD *)(a2 + 368);
  }
  if ((v32 & 0x400000) != 0)
  {
    unsigned int v59 = *(_DWORD *)(a2 + 352);
    if (v59 >= 5) {
      sub_101A5EAD0();
    }
    *(_DWORD *)(a1 + 368) |= 0x400000u;
    *(_DWORD *)(a1 + 352) = v59;
    int v32 = *(_DWORD *)(a2 + 368);
  }
  if ((v32 & 0x800000) != 0)
  {
    char v60 = *(unsigned char *)(a2 + 279);
    *(_DWORD *)(a1 + 368) |= 0x800000u;
    *(unsigned char *)(a1 + 279) = v60;
    int v32 = *(_DWORD *)(a2 + 368);
  }
LABEL_154:
  if ((v32 & 0x1000000) != 0)
  {
    char v61 = *(unsigned char *)(a2 + 356);
    *(_DWORD *)(a1 + 368) |= 0x1000000u;
    *(unsigned char *)(a1 + 356) = v61;
  }
}

void sub_1003E50CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003E50E8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D00;
  if (!qword_102489D00)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D00;
  }
  return result;
}

void sub_1003E5118()
{
}

uint64_t sub_1003E51D8(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 364);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 56) = 0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
  }
  unsigned int v2 = (unsigned int *)(a1 + 364);
  if ((v1 & 0xFF00) != 0)
  {
    *(unsigned char *)(a1 + 112) = 0;
    *(_DWORD *)(a1 + 60) = 0;
    if ((v1 & 0x400) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 64);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        unsigned int v1 = *v2;
      }
    }
    *(unsigned char *)(a1 + 113) = 0;
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 80) = 0;
    if ((v1 & 0x8000) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 88);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 28))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
        unsigned int v1 = *v2;
      }
    }
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 96) = 0xFFFFFFFFLL;
    if ((v1 & 0x40000) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 104);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 28))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
        unsigned int v1 = *v2;
      }
    }
    *(unsigned char *)(a1 + 114) = 0;
    *(void *)(a1 + 124) = 0;
    *(void *)(a1 + 116) = 0;
    *(_DWORD *)(a1 + 132) = 0;
    if ((v1 & 0x800000) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 136);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 32))
        {
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
          *(_WORD *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 32) = 0;
        unsigned int v1 = *v2;
      }
    }
  }
  if (HIBYTE(v1))
  {
    *(unsigned char *)(a1 + 115) = 0;
    *(_OWORD *)(a1 + 144) = 0u;
    *(_OWORD *)(a1 + 160) = 0u;
    *(_OWORD *)(a1 + 176) = 0u;
    *(void *)(a1 + 192) = 0;
  }
  unsigned int v7 = *(_DWORD *)(a1 + 368);
  if ((_BYTE)v7)
  {
    *(void *)(a1 + 200) = 0;
    *(unsigned char *)(a1 + 276) = 0;
    if ((v7 & 4) != 0)
    {
      uint64_t v8 = *(void *)(a1 + 208);
      if (v8)
      {
        if (*(unsigned char *)(v8 + 28))
        {
          *(void *)(v8 + 8) = 0;
          *(void *)(v8 + 16) = 0;
        }
        *(_DWORD *)(v8 + 28) = 0;
        unsigned int v7 = *(_DWORD *)(a1 + 368);
      }
    }
    *(_DWORD *)(a1 + 272) = 0;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
  }
  if ((v7 & 0xFF00) != 0)
  {
    *(unsigned char *)(a1 + 277) = 0;
    *(void *)(a1 + 280) = 0;
    *(_DWORD *)(a1 + 312) = 0;
    *(void *)(a1 + 256) = 0;
    *(void *)(a1 + 264) = 0;
    *(void *)(a1 + 248) = 0;
    if ((v7 & 0x8000) != 0)
    {
      uint64_t v9 = *(void *)(a1 + 320);
      if (v9)
      {
        if (*(unsigned char *)(v9 + 40))
        {
          *(void *)(v9 + 8) = 0;
          *(void *)(v9 + 16) = 0;
          *(void *)(v9 + 24) = 0;
          *(_DWORD *)(v9 + 32) = -1;
        }
        *(_DWORD *)(v9 + 40) = 0;
        unsigned int v7 = *(_DWORD *)(a1 + 368);
      }
    }
  }
  if ((v7 & 0xFF0000) != 0)
  {
    *(_DWORD *)(a1 + 316) = 0;
    *(_WORD *)(a1 + 278) = 0;
    *(void *)(a1 + 336) = 0;
    *(void *)(a1 + 344) = 0;
    *(void *)(a1 + 328) = 0;
    *(_DWORD *)(a1 + 352) = 0;
  }
  if (HIBYTE(v7)) {
    *(unsigned char *)(a1 + 356) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 288);
  *(void *)unsigned int v2 = 0;
  return result;
}

uint64_t sub_1003E53B0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 288);
LABEL_2:
  while (2)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_149;
        }
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 1u;
        uint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 17) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
        goto LABEL_15;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_149;
        }
LABEL_15:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 2u;
        int v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 25) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
LABEL_20:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 4u;
        char v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 33) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_25:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 8u;
        unsigned int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 41) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_30:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 0x10u;
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 53) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_35:
        v186[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v186) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 48) = v186[0];
        *(_DWORD *)(a1 + 364) |= 0x20u;
        uint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 61) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_40:
        v186[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v186) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 52) = v186[0];
        *(_DWORD *)(a1 + 364) |= 0x40u;
        uint64_t v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 69) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_45:
        v186[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v186) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 56) = v186[0];
        *(_DWORD *)(a1 + 364) |= 0x80u;
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v17 >= v16 || *v17 != 72) {
          continue;
        }
        int v18 = v17 + 1;
        *((void *)this + 1) = v18;
LABEL_51:
        v186[0] = 0;
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
          if (!result) {
            return result;
          }
          unsigned int v19 = v186[0];
          uint64_t v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v18;
          uint64_t v20 = v18 + 1;
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 112) = v19 != 0;
        *(_DWORD *)(a1 + 364) |= 0x100u;
        if ((unint64_t)v20 >= v16 || *v20 != 80) {
          continue;
        }
        uint64_t v21 = v20 + 1;
        *((void *)this + 1) = v21;
LABEL_158:
        v186[0] = 0;
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
          if (!result) {
            return result;
          }
          unsigned int v59 = v186[0];
        }
        else
        {
          unsigned int v59 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        if (v59 <= 3)
        {
          *(_DWORD *)(a1 + 364) |= 0x200u;
          *(_DWORD *)(a1 + 60) = v59;
        }
        char v60 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v60 >= *((void *)this + 2) || *v60 != 90) {
          continue;
        }
        *((void *)this + 1) = v60 + 1;
LABEL_168:
        *(_DWORD *)(a1 + 364) |= 0x400u;
        uint64_t v61 = *(void *)(a1 + 64);
        if (!v61) {
          operator new();
        }
        v186[0] = 0;
        uint64_t v62 = (char *)*((void *)this + 1);
        if ((unint64_t)v62 >= *((void *)this + 2) || *v62 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186))return 0; {
        }
          }
        else
        {
          v186[0] = *v62;
          *((void *)this + 1) = v62 + 1;
        }
        int v63 = *((_DWORD *)this + 14);
        int v64 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v63 + 1;
        if (v63 >= v64) {
          return 0;
        }
        int v65 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v186[0]);
        if (!sub_1003E19A4(v61, this, v66) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v65);
        int v67 = *((_DWORD *)this + 14);
        BOOL v68 = __OFSUB__(v67, 1);
        int v69 = v67 - 1;
        if (v69 < 0 == v68) {
          *((_DWORD *)this + 14) = v69;
        }
        uint64_t v70 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v70 >= *((void *)this + 2) || *v70 != 97) {
          continue;
        }
        *((void *)this + 1) = v70 + 1;
LABEL_182:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 0x800u;
        char v71 = (unsigned char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        if ((unint64_t)v71 >= v22 || *v71 != 104) {
          continue;
        }
        int v23 = v71 + 1;
        *((void *)this + 1) = v23;
LABEL_186:
        v186[0] = 0;
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
          if (!result) {
            return result;
          }
          unsigned int v72 = v186[0];
          int v73 = (unsigned char *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
        }
        else
        {
          unsigned int v72 = *v23;
          int v73 = v23 + 1;
          *((void *)this + 1) = v73;
        }
        *(_DWORD *)(a1 + 80) = v72;
        *(_DWORD *)(a1 + 364) |= 0x1000u;
        if ((unint64_t)v73 >= v22 || *v73 != 112) {
          continue;
        }
        int v24 = v73 + 1;
        *((void *)this + 1) = v24;
LABEL_194:
        v186[0] = 0;
        if ((unint64_t)v24 >= v22 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
          if (!result) {
            return result;
          }
          unsigned int v74 = v186[0];
          int v75 = (unsigned char *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
        }
        else
        {
          unsigned int v74 = *v24;
          int v75 = v24 + 1;
          *((void *)this + 1) = v75;
        }
        *(_DWORD *)(a1 + 84) = v74;
        *(_DWORD *)(a1 + 364) |= 0x2000u;
        if ((unint64_t)v75 >= v22 || *v75 != 120) {
          continue;
        }
        char v25 = v75 + 1;
        *((void *)this + 1) = v25;
LABEL_202:
        v186[0] = 0;
        if ((unint64_t)v25 >= v22 || (char)*v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
          if (!result) {
            return result;
          }
          unsigned int v76 = v186[0];
          unsigned int v77 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
        }
        else
        {
          unsigned int v76 = *v25;
          unsigned int v77 = v25 + 1;
          *((void *)this + 1) = v77;
        }
        *(unsigned char *)(a1 + 113) = v76 != 0;
        int v26 = *(_DWORD *)(a1 + 364) | 0x4000;
        *(_DWORD *)(a1 + 364) = v26;
        if ((int)v22 - (int)v77 < 2 || *v77 != 130 || v77[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v77 + 2;
LABEL_211:
        *(_DWORD *)(a1 + 364) = v26 | 0x8000;
        uint64_t v78 = *(void *)(a1 + 88);
        if (!v78) {
          operator new();
        }
        v186[0] = 0;
        int v79 = (char *)*((void *)this + 1);
        if ((unint64_t)v79 >= *((void *)this + 2) || *v79 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186))return 0; {
        }
          }
        else
        {
          v186[0] = *v79;
          *((void *)this + 1) = v79 + 1;
        }
        int v80 = *((_DWORD *)this + 14);
        int v81 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v80 + 1;
        if (v80 >= v81) {
          return 0;
        }
        int v82 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v186[0]);
        if (!sub_1003E3568(v78, this, v83) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v82);
        int v84 = *((_DWORD *)this + 14);
        BOOL v68 = __OFSUB__(v84, 1);
        int v85 = v84 - 1;
        if (v85 < 0 == v68) {
          *((_DWORD *)this + 14) = v85;
        }
        unsigned int v86 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        if ((int)v27 - (int)v86 <= 1 || *v86 != 136 || v86[1] != 1) {
          continue;
        }
        int v28 = (char *)(v86 + 2);
        *((void *)this + 1) = v28;
LABEL_226:
        v186[0] = 0;
        if ((unint64_t)v28 >= v27 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
          if (!result) {
            return result;
          }
          unsigned int v87 = v186[0];
        }
        else
        {
          unsigned int v87 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        if (v87 + 1 <= 3)
        {
          *(_DWORD *)(a1 + 364) |= 0x10000u;
          *(_DWORD *)(a1 + 96) = v87;
        }
        int v88 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v88 < 2 || *v88 != 149 || v88[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v88 + 2;
LABEL_237:
        v186[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v186) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 100) = v186[0];
        int v29 = *(_DWORD *)(a1 + 364) | 0x20000;
        *(_DWORD *)(a1 + 364) = v29;
        int v89 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v89 < 2 || *v89 != 154 || v89[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v89 + 2;
LABEL_242:
        *(_DWORD *)(a1 + 364) = v29 | 0x40000;
        uint64_t v90 = *(void *)(a1 + 104);
        if (!v90) {
          operator new();
        }
        v186[0] = 0;
        uint64_t v91 = (char *)*((void *)this + 1);
        if ((unint64_t)v91 >= *((void *)this + 2) || *v91 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186))return 0; {
        }
          }
        else
        {
          v186[0] = *v91;
          *((void *)this + 1) = v91 + 1;
        }
        int v92 = *((_DWORD *)this + 14);
        int v93 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v92 + 1;
        if (v92 >= v93) {
          return 0;
        }
        int v94 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v186[0]);
        if (!sub_1003E19A4(v90, this, v95) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v94);
        int v96 = *((_DWORD *)this + 14);
        BOOL v68 = __OFSUB__(v96, 1);
        int v97 = v96 - 1;
        if (v97 < 0 == v68) {
          *((_DWORD *)this + 14) = v97;
        }
        unsigned int v98 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v98 <= 1 || *v98 != 161 || v98[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v98 + 2;
LABEL_257:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 120) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 0x80000u;
        unsigned int v99 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v99 < 2 || *v99 != 169 || v99[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v99 + 2;
LABEL_262:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 128) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 0x100000u;
        int v100 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v30 = *((void *)this + 2);
        if ((int)v30 - (int)v100 < 2 || *v100 != 176 || v100[1] != 1) {
          continue;
        }
        uint64_t v31 = (char *)(v100 + 2);
        *((void *)this + 1) = v31;
LABEL_267:
        v186[0] = 0;
        if ((unint64_t)v31 >= v30 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
          if (!result) {
            return result;
          }
          unsigned int v101 = v186[0];
        }
        else
        {
          unsigned int v101 = *v31;
          *((void *)this + 1) = v31 + 1;
        }
        if (v101 <= 2)
        {
          *(_DWORD *)(a1 + 364) |= 0x200000u;
          *(_DWORD *)(a1 + 116) = v101;
        }
        int v102 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v32 = *((void *)this + 2);
        if ((int)v32 - (int)v102 < 2 || *v102 != 184 || v102[1] != 1) {
          continue;
        }
        uint64_t v33 = v102 + 2;
        *((void *)this + 1) = v33;
LABEL_278:
        v186[0] = 0;
        if ((unint64_t)v33 >= v32 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
          if (!result) {
            return result;
          }
          unsigned int v103 = v186[0];
          uint64_t v104 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v32 = *((void *)this + 2);
        }
        else
        {
          unsigned int v103 = *v33;
          uint64_t v104 = v33 + 1;
          *((void *)this + 1) = v104;
        }
        *(unsigned char *)(a1 + 114) = v103 != 0;
        int v34 = *(_DWORD *)(a1 + 364) | 0x400000;
        *(_DWORD *)(a1 + 364) = v34;
        if ((int)v32 - (int)v104 < 2 || *v104 != 194 || v104[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v104 + 2;
LABEL_287:
        *(_DWORD *)(a1 + 364) = v34 | 0x800000;
        uint64_t v105 = *(void *)(a1 + 136);
        if (!v105) {
          operator new();
        }
        v186[0] = 0;
        __int16 v106 = (char *)*((void *)this + 1);
        if ((unint64_t)v106 >= *((void *)this + 2) || *v106 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186))return 0; {
        }
          }
        else
        {
          v186[0] = *v106;
          *((void *)this + 1) = v106 + 1;
        }
        int v107 = *((_DWORD *)this + 14);
        int v108 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v107 + 1;
        if (v107 >= v108) {
          return 0;
        }
        int v109 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v186[0]);
        if (!sub_1003E30EC(v105, this, v110) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v109);
        int v111 = *((_DWORD *)this + 14);
        BOOL v68 = __OFSUB__(v111, 1);
        int v112 = v111 - 1;
        if (v112 < 0 == v68) {
          *((_DWORD *)this + 14) = v112;
        }
        int v113 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v113 <= 1 || *v113 != 201 || v113[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v113 + 2;
LABEL_302:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 144) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 0x1000000u;
        uint64_t v114 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v114 < 2 || *v114 != 209 || v114[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v114 + 2;
LABEL_307:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 152) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 0x2000000u;
        int v115 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v115 < 2 || *v115 != 217 || v115[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v115 + 2;
LABEL_312:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 160) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 0x4000000u;
        uint64_t v116 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v116 < 2 || *v116 != 225 || v116[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v116 + 2;
LABEL_317:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 168) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 0x8000000u;
        uint64_t v117 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v117 < 2 || *v117 != 233 || v117[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v117 + 2;
LABEL_322:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 176) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 0x10000000u;
        long long v118 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v118 < 2 || *v118 != 241 || v118[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v118 + 2;
LABEL_327:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 184) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 0x20000000u;
        int v119 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v35 = *((void *)this + 2);
        if ((int)v35 - (int)v119 < 2 || *v119 != 248 || v119[1] != 1) {
          continue;
        }
        uint64_t v36 = v119 + 2;
        *((void *)this + 1) = v36;
LABEL_332:
        v186[0] = 0;
        if ((unint64_t)v36 >= v35 || (char)*v36 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
          if (!result) {
            return result;
          }
          unsigned int v120 = v186[0];
          int v121 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v35 = *((void *)this + 2);
        }
        else
        {
          unsigned int v120 = *v36;
          int v121 = v36 + 1;
          *((void *)this + 1) = v121;
        }
        *(unsigned char *)(a1 + 115) = v120 != 0;
        *(_DWORD *)(a1 + 364) |= 0x40000000u;
        if ((int)v35 - (int)v121 < 2 || *v121 != 129 || v121[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v121 + 2;
LABEL_341:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 192) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 364) |= 0x80000000;
        unsigned int v122 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v122 < 2 || *v122 != 137 || v122[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v122 + 2;
LABEL_346:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 200) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 368) |= 1u;
        int v123 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v37 = *((void *)this + 2);
        if ((int)v37 - (int)v123 < 2 || *v123 != 144 || v123[1] != 2) {
          continue;
        }
        uint64_t v38 = v123 + 2;
        *((void *)this + 1) = v38;
LABEL_351:
        v186[0] = 0;
        if ((unint64_t)v38 >= v37 || (char)*v38 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
          if (!result) {
            return result;
          }
          unsigned int v124 = v186[0];
          v125 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v37 = *((void *)this + 2);
        }
        else
        {
          unsigned int v124 = *v38;
          v125 = v38 + 1;
          *((void *)this + 1) = v125;
        }
        *(unsigned char *)(a1 + 276) = v124 != 0;
        int v39 = *(_DWORD *)(a1 + 368) | 2;
        *(_DWORD *)(a1 + 368) = v39;
        if ((int)v37 - (int)v125 < 2 || *v125 != 154 || v125[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v125 + 2;
LABEL_360:
        *(_DWORD *)(a1 + 368) = v39 | 4;
        uint64_t v126 = *(void *)(a1 + 208);
        if (!v126) {
          operator new();
        }
        v186[0] = 0;
        v127 = (char *)*((void *)this + 1);
        if ((unint64_t)v127 >= *((void *)this + 2) || *v127 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186))return 0; {
        }
          }
        else
        {
          v186[0] = *v127;
          *((void *)this + 1) = v127 + 1;
        }
        int v128 = *((_DWORD *)this + 14);
        int v129 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v128 + 1;
        if (v128 >= v129) {
          return 0;
        }
        int v130 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v186[0]);
        if (!sub_1003E19A4(v126, this, v131) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v130);
        int v132 = *((_DWORD *)this + 14);
        BOOL v68 = __OFSUB__(v132, 1);
        int v133 = v132 - 1;
        if (v133 < 0 == v68) {
          *((_DWORD *)this + 14) = v133;
        }
        unint64_t v134 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v134 <= 1 || *v134 != 161 || v134[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v134 + 2;
LABEL_375:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 216) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 368) |= 8u;
        uint64_t v135 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v40 = *((void *)this + 2);
        if ((int)v40 - (int)v135 < 2 || *v135 != 168 || v135[1] != 2) {
          continue;
        }
        char v41 = (char *)(v135 + 2);
        *((void *)this + 1) = v41;
LABEL_380:
        v186[0] = 0;
        if ((unint64_t)v41 >= v40 || *v41 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
          if (!result) {
            return result;
          }
          unsigned int v136 = v186[0];
        }
        else
        {
          unsigned int v136 = *v41;
          *((void *)this + 1) = v41 + 1;
        }
        if (v136 <= 2)
        {
          *(_DWORD *)(a1 + 368) |= 0x10u;
          *(_DWORD *)(a1 + 272) = v136;
        }
        long long v137 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v137 < 2 || *v137 != 177 || v137[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v137 + 2;
LABEL_391:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 224) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 368) |= 0x20u;
        long long v138 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v138 < 2 || *v138 != 185 || v138[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v138 + 2;
LABEL_396:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 232) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 368) |= 0x40u;
        long long v139 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v139 < 2 || *v139 != 193 || v139[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v139 + 2;
LABEL_401:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 240) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 368) |= 0x80u;
        long long v140 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v140 < 2 || *v140 != 201 || v140[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v140 + 2;
LABEL_406:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 248) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 368) |= 0x100u;
        uint64_t v141 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v141 < 2 || *v141 != 209 || v141[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v141 + 2;
LABEL_411:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 256) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 368) |= 0x200u;
        v142 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v42 = *((void *)this + 2);
        if ((int)v42 - (int)v142 < 2 || *v142 != 216 || v142[1] != 2) {
          continue;
        }
        uint64_t v43 = v142 + 2;
        *((void *)this + 1) = v43;
LABEL_416:
        v186[0] = 0;
        if ((unint64_t)v43 >= v42 || (char)*v43 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
          if (!result) {
            return result;
          }
          unsigned int v143 = v186[0];
          v144 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
        }
        else
        {
          unsigned int v143 = *v43;
          v144 = v43 + 1;
          *((void *)this + 1) = v144;
        }
        *(unsigned char *)(a1 + 277) = v143 != 0;
        *(_DWORD *)(a1 + 368) |= 0x400u;
        if ((int)v42 - (int)v144 < 2 || *v144 != 225 || v144[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v144 + 2;
LABEL_425:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 264) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 368) |= 0x800u;
        int v145 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v145 < 2 || *v145 != 233 || v145[1] != 2) {
          continue;
        }
        *((void *)this + 1) = v145 + 2;
LABEL_430:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 280) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 368) |= 0x1000u;
        int v146 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v146 < 2 || *v146 != 242 || v146[1] != 2) {
          continue;
        }
        while (1)
        {
          *((void *)this + 1) = v146 + 2;
LABEL_435:
          uint64_t v147 = *(int *)(a1 + 296);
          int v148 = *(_DWORD *)(a1 + 300);
          if ((int)v147 >= v148)
          {
            if (v148 == *(_DWORD *)(a1 + 304))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v148 + 1);
              int v148 = *(_DWORD *)(a1 + 300);
            }
            *(_DWORD *)(a1 + 300) = v148 + 1;
            operator new();
          }
          uint64_t v149 = *(void *)(a1 + 288);
          *(_DWORD *)(a1 + 296) = v147 + 1;
          uint64_t v150 = *(void *)(v149 + 8 * v147);
          v186[0] = 0;
          long long v151 = (char *)*((void *)this + 1);
          if ((unint64_t)v151 >= *((void *)this + 2) || *v151 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186))return 0; {
          }
            }
          else
          {
            v186[0] = *v151;
            *((void *)this + 1) = v151 + 1;
          }
          int v152 = *((_DWORD *)this + 14);
          int v153 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v152 + 1;
          if (v152 >= v153) {
            return 0;
          }
          int v154 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v186[0]);
          if (!sub_1003E3A14(v150, this, v155) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v154);
          int v156 = *((_DWORD *)this + 14);
          BOOL v68 = __OFSUB__(v156, 1);
          int v157 = v156 - 1;
          if (v157 < 0 == v68) {
            *((_DWORD *)this + 14) = v157;
          }
          int v146 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v45 = *((void *)this + 2);
          if ((int)v45 - (int)v146 <= 1) {
            goto LABEL_2;
          }
          int v158 = *v146;
          if (v158 == 248) {
            break;
          }
          if (v158 != 242 || v146[1] != 2) {
            goto LABEL_2;
          }
        }
        if (v146[1] != 2) {
          continue;
        }
        uint64_t v44 = (char *)(v146 + 2);
        *((void *)this + 1) = v44;
LABEL_456:
        v186[0] = 0;
        if ((unint64_t)v44 >= v45 || *v44 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
          if (!result) {
            return result;
          }
          unsigned int v159 = v186[0];
        }
        else
        {
          unsigned int v159 = *v44;
          *((void *)this + 1) = v44 + 1;
        }
        if (v159 <= 2)
        {
          *(_DWORD *)(a1 + 368) |= 0x4000u;
          *(_DWORD *)(a1 + 312) = v159;
        }
        v160 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v160 < 2 || *v160 != 130 || v160[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v160 + 2;
LABEL_467:
        *(_DWORD *)(a1 + 368) |= 0x8000u;
        uint64_t v161 = *(void *)(a1 + 320);
        if (!v161) {
          operator new();
        }
        v186[0] = 0;
        long long v162 = (char *)*((void *)this + 1);
        if ((unint64_t)v162 >= *((void *)this + 2) || *v162 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186))return 0; {
        }
          }
        else
        {
          v186[0] = *v162;
          *((void *)this + 1) = v162 + 1;
        }
        int v163 = *((_DWORD *)this + 14);
        int v164 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v163 + 1;
        if (v163 >= v164) {
          return 0;
        }
        int v165 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v186[0]);
        if (!sub_1003E42C4(v161, this, v166) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v165);
        int v167 = *((_DWORD *)this + 14);
        BOOL v68 = __OFSUB__(v167, 1);
        int v168 = v167 - 1;
        if (v168 < 0 == v68) {
          *((_DWORD *)this + 14) = v168;
        }
        long long v169 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v46 = *((void *)this + 2);
        if ((int)v46 - (int)v169 <= 1 || *v169 != 136 || v169[1] != 3) {
          continue;
        }
        uint64_t v47 = (char *)(v169 + 2);
        *((void *)this + 1) = v47;
LABEL_482:
        v186[0] = 0;
        if ((unint64_t)v47 >= v46 || *v47 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
          if (!result) {
            return result;
          }
          unsigned int v170 = v186[0];
        }
        else
        {
          unsigned int v170 = *v47;
          *((void *)this + 1) = v47 + 1;
        }
        if (v170 <= 2)
        {
          *(_DWORD *)(a1 + 368) |= 0x10000u;
          *(_DWORD *)(a1 + 316) = v170;
        }
        long long v171 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v171 < 2 || *v171 != 145 || v171[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v171 + 2;
LABEL_493:
        *(void *)v186 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186) & 1) == 0)return 0; {
        *(void *)(a1 + 328) = *(void *)v186;
        }
        *(_DWORD *)(a1 + 368) |= 0x20000u;
        long long v172 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v172 < 2 || *v172 != 153 || v172[1] != 3) {
          continue;
        }
        *((void *)this + 1) = v172 + 2;
LABEL_498:
        *(void *)v186 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v186))
        {
          *(void *)(a1 + 336) = *(void *)v186;
          *(_DWORD *)(a1 + 368) |= 0x40000u;
          uint64_t v173 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v48 = *((void *)this + 2);
          if ((int)v48 - (int)v173 >= 2 && *v173 == 160 && v173[1] == 3)
          {
            uint64_t v49 = (char *)(v173 + 2);
            *((void *)this + 1) = v49;
LABEL_503:
            v186[0] = 0;
            if ((unint64_t)v49 >= v48 || *v49 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
              if (!result) {
                return result;
              }
              unsigned int v174 = v186[0];
            }
            else
            {
              unsigned int v174 = *v49;
              *((void *)this + 1) = v49 + 1;
            }
            if (v174 <= 3)
            {
              *(_DWORD *)(a1 + 368) |= 0x80000u;
              *(_DWORD *)(a1 + 344) = v174;
            }
            v175 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v50 = *((void *)this + 2);
            if ((int)v50 - (int)v175 >= 2 && *v175 == 168 && v175[1] == 3)
            {
              uint64_t v51 = v175 + 2;
              *((void *)this + 1) = v51;
LABEL_514:
              v186[0] = 0;
              if ((unint64_t)v51 >= v50 || (char)*v51 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
                if (!result) {
                  return result;
                }
                unsigned int v176 = v186[0];
                v177 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v50 = *((void *)this + 2);
              }
              else
              {
                unsigned int v176 = *v51;
                v177 = v51 + 1;
                *((void *)this + 1) = v177;
              }
              *(unsigned char *)(a1 + 278) = v176 != 0;
              *(_DWORD *)(a1 + 368) |= 0x100000u;
              if ((int)v50 - (int)v177 >= 2 && *v177 == 176 && v177[1] == 3)
              {
                uint64_t v52 = (char *)(v177 + 2);
                *((void *)this + 1) = v52;
LABEL_523:
                v186[0] = 0;
                if ((unint64_t)v52 >= v50 || *v52 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
                  if (!result) {
                    return result;
                  }
                  unsigned int v178 = v186[0];
                }
                else
                {
                  unsigned int v178 = *v52;
                  *((void *)this + 1) = v52 + 1;
                }
                if (v178 <= 2)
                {
                  *(_DWORD *)(a1 + 368) |= 0x200000u;
                  *(_DWORD *)(a1 + 348) = v178;
                }
                v179 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v53 = *((void *)this + 2);
                if ((int)v53 - (int)v179 >= 2 && *v179 == 184 && v179[1] == 3)
                {
                  uint64_t v54 = (char *)(v179 + 2);
                  *((void *)this + 1) = v54;
LABEL_534:
                  v186[0] = 0;
                  if ((unint64_t)v54 >= v53 || *v54 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
                    if (!result) {
                      return result;
                    }
                    unsigned int v180 = v186[0];
                  }
                  else
                  {
                    unsigned int v180 = *v54;
                    *((void *)this + 1) = v54 + 1;
                  }
                  if (v180 <= 4)
                  {
                    *(_DWORD *)(a1 + 368) |= 0x400000u;
                    *(_DWORD *)(a1 + 352) = v180;
                  }
                  v181 = (unsigned __int8 *)*((void *)this + 1);
                  unint64_t v55 = *((void *)this + 2);
                  if ((int)v55 - (int)v181 >= 2 && *v181 == 192 && v181[1] == 3)
                  {
                    unsigned int v56 = v181 + 2;
                    *((void *)this + 1) = v56;
LABEL_545:
                    v186[0] = 0;
                    if ((unint64_t)v56 >= v55 || (char)*v56 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
                      if (!result) {
                        return result;
                      }
                      unsigned int v182 = v186[0];
                      v183 = (unsigned __int8 *)*((void *)this + 1);
                      unint64_t v55 = *((void *)this + 2);
                    }
                    else
                    {
                      unsigned int v182 = *v56;
                      v183 = v56 + 1;
                      *((void *)this + 1) = v183;
                    }
                    *(unsigned char *)(a1 + 279) = v182 != 0;
                    *(_DWORD *)(a1 + 368) |= 0x800000u;
                    if ((int)v55 - (int)v183 >= 2 && *v183 == 200 && v183[1] == 3)
                    {
                      char v57 = (char *)(v183 + 2);
                      *((void *)this + 1) = v57;
LABEL_554:
                      v186[0] = 0;
                      if ((unint64_t)v57 >= v55 || *v57 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v186);
                        if (!result) {
                          return result;
                        }
                        unsigned int v184 = v186[0];
                        v185 = (unsigned __int8 *)*((void *)this + 1);
                        unint64_t v55 = *((void *)this + 2);
                      }
                      else
                      {
                        unsigned int v184 = *v57;
                        v185 = (unsigned __int8 *)(v57 + 1);
                        *((void *)this + 1) = v185;
                      }
                      *(unsigned char *)(a1 + 356) = v184 != 0;
                      *(_DWORD *)(a1 + 368) |= 0x1000000u;
                      if (v185 == (unsigned __int8 *)v55
                        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                      {
                        *((_DWORD *)this + 8) = 0;
                        uint64_t result = 1;
                        *((unsigned char *)this + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_20;
        }
        goto LABEL_149;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_25;
        }
        goto LABEL_149;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_30;
        }
        goto LABEL_149;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_35;
        }
        goto LABEL_149;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_40;
        }
        goto LABEL_149;
      case 8u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_45;
        }
        goto LABEL_149;
      case 9u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_51;
      case 0xAu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_158;
      case 0xBu:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_168;
        }
        goto LABEL_149;
      case 0xCu:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_182;
        }
        goto LABEL_149;
      case 0xDu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        int v23 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_186;
      case 0xEu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_194;
      case 0xFu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        char v25 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_202;
      case 0x10u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_149;
        }
        int v26 = *(_DWORD *)(a1 + 364);
        goto LABEL_211;
      case 0x11u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        int v28 = (char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        goto LABEL_226;
      case 0x12u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_237;
        }
        goto LABEL_149;
      case 0x13u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_149;
        }
        int v29 = *(_DWORD *)(a1 + 364);
        goto LABEL_242;
      case 0x14u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_257;
        }
        goto LABEL_149;
      case 0x15u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_262;
        }
        goto LABEL_149;
      case 0x16u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        uint64_t v31 = (char *)*((void *)this + 1);
        unint64_t v30 = *((void *)this + 2);
        goto LABEL_267;
      case 0x17u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        uint64_t v33 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v32 = *((void *)this + 2);
        goto LABEL_278;
      case 0x18u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_149;
        }
        int v34 = *(_DWORD *)(a1 + 364);
        goto LABEL_287;
      case 0x19u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_302;
        }
        goto LABEL_149;
      case 0x1Au:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_307;
        }
        goto LABEL_149;
      case 0x1Bu:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_312;
        }
        goto LABEL_149;
      case 0x1Cu:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_317;
        }
        goto LABEL_149;
      case 0x1Du:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_322;
        }
        goto LABEL_149;
      case 0x1Eu:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_327;
        }
        goto LABEL_149;
      case 0x1Fu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        uint64_t v36 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v35 = *((void *)this + 2);
        goto LABEL_332;
      case 0x20u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_341;
        }
        goto LABEL_149;
      case 0x21u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_346;
        }
        goto LABEL_149;
      case 0x22u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        uint64_t v38 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v37 = *((void *)this + 2);
        goto LABEL_351;
      case 0x23u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_149;
        }
        int v39 = *(_DWORD *)(a1 + 368);
        goto LABEL_360;
      case 0x24u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_375;
        }
        goto LABEL_149;
      case 0x25u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        char v41 = (char *)*((void *)this + 1);
        unint64_t v40 = *((void *)this + 2);
        goto LABEL_380;
      case 0x26u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_391;
        }
        goto LABEL_149;
      case 0x27u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_396;
        }
        goto LABEL_149;
      case 0x28u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_401;
        }
        goto LABEL_149;
      case 0x29u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_406;
        }
        goto LABEL_149;
      case 0x2Au:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_411;
        }
        goto LABEL_149;
      case 0x2Bu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        uint64_t v43 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v42 = *((void *)this + 2);
        goto LABEL_416;
      case 0x2Cu:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_425;
        }
        goto LABEL_149;
      case 0x2Du:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_430;
        }
        goto LABEL_149;
      case 0x2Eu:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_435;
        }
        goto LABEL_149;
      case 0x2Fu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        uint64_t v44 = (char *)*((void *)this + 1);
        unint64_t v45 = *((void *)this + 2);
        goto LABEL_456;
      case 0x30u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_467;
        }
        goto LABEL_149;
      case 0x31u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        uint64_t v47 = (char *)*((void *)this + 1);
        unint64_t v46 = *((void *)this + 2);
        goto LABEL_482;
      case 0x32u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_493;
        }
        goto LABEL_149;
      case 0x33u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_498;
        }
        goto LABEL_149;
      case 0x34u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        uint64_t v49 = (char *)*((void *)this + 1);
        unint64_t v48 = *((void *)this + 2);
        goto LABEL_503;
      case 0x35u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        uint64_t v51 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v50 = *((void *)this + 2);
        goto LABEL_514;
      case 0x36u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        uint64_t v52 = (char *)*((void *)this + 1);
        unint64_t v50 = *((void *)this + 2);
        goto LABEL_523;
      case 0x37u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        uint64_t v54 = (char *)*((void *)this + 1);
        unint64_t v53 = *((void *)this + 2);
        goto LABEL_534;
      case 0x38u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        unsigned int v56 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v55 = *((void *)this + 2);
        goto LABEL_545;
      case 0x39u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_149;
        }
        char v57 = (char *)*((void *)this + 1);
        unint64_t v55 = *((void *)this + 2);
        goto LABEL_554;
      default:
        int v8 = TagFallback & 7;
LABEL_149:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1003E74E0(uint64_t a1, void *lpsrc)
{
  sub_1003E45D8(a1, (uint64_t)lpsrc);
}

void sub_1003E7568(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
    sub_1003E45D8(a1, a2);
  }
}

uint64_t sub_1003E75D4()
{
  return 1;
}

void *sub_1003E75DC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.DaemonLocationPrivate");
}

void sub_1003E75EC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 8);
      if (v5 >= 0xE) {
        sub_101A5EC5C();
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = *(unsigned char *)(a2 + 12);
      *(_DWORD *)(a1 + 20) |= 2u;
      *(unsigned char *)(a1 + 12) = v6;
    }
  }
}

void sub_1003E76A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E76BC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AEFE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

uint64_t sub_1003E76DC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D10;
  if (!qword_102489D10)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D10;
  }
  return result;
}

void sub_1003E770C()
{
}

uint64_t sub_1003E7760(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    *(_DWORD *)(result + 8) = 0;
    *(unsigned char *)(result + 12) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1003E7778(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v16 = 0;
      int v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
        if (!result) {
          return result;
        }
        unsigned int v11 = v16;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)this + 1) = v10 + 1;
      }
      if (v11 <= 0xD)
      {
        *(_DWORD *)(a1 + 20) |= 1u;
        *(_DWORD *)(a1 + 8) = v11;
      }
      unsigned int v12 = (unsigned char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        uint64_t v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_25:
        unsigned int v17 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
          if (!result) {
            return result;
          }
          unsigned int v13 = v17;
          uint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v9;
          uint64_t v14 = (unsigned __int8 *)(v9 + 1);
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 12) = v13 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        if (v14 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_25;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_15:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

void sub_1003E7930(uint64_t a1, void *lpsrc)
{
  sub_1003E75EC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E79B8()
{
  return 1;
}

void *sub_1003E79C0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.TechnologyStatus");
}

double sub_1003E79D0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 44);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(double *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }
LABEL_12:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(double *)(a1 + 24) = result;
    if ((*(_DWORD *)(a2 + 44) & 8) == 0) {
      return result;
    }
LABEL_8:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(double *)(a1 + 32) = result;
  }
  return result;
}

void sub_1003E7AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E7ADC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF058;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

uint64_t sub_1003E7AFC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D18;
  if (!qword_102489D18)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D18;
  }
  return result;
}

void sub_1003E7B2C()
{
}

uint64_t sub_1003E7B84(uint64_t result)
{
  if (*(unsigned char *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1003E7BA0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_29;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 44) |= 1u;
        unint64_t v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 17) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_29;
        }
LABEL_14:
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v12;
        *(_DWORD *)(a1 + 44) |= 2u;
        uint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 25) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v12;
        *(_DWORD *)(a1 + 44) |= 4u;
        int v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 33) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v12;
        *(_DWORD *)(a1 + 44) |= 8u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_24;
        }
        goto LABEL_29;
      default:
        int v7 = TagFallback & 7;
LABEL_29:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

double sub_1003E7DE8(uint64_t a1, void *lpsrc)
{
  return sub_1003E79D0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E7E70()
{
  return 1;
}

void *sub_1003E7E78@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.VehicleSpeed");
}

double sub_1003E7E88(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }
  return result;
}

void sub_1003E7F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E7F4C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF0D0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

uint64_t sub_1003E7F6C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D20;
  if (!qword_102489D20)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D20;
  }
  return result;
}

void sub_1003E7F9C()
{
}

uint64_t sub_1003E7FE8(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1003E7FFC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_21;
        }
        unint64_t v10 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v10;
        *(_DWORD *)(a1 + 28) |= 1u;
        unint64_t v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 < *((void *)this + 2) && *v8 == 17)
        {
          *((void *)this + 1) = v8 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_21;
      }
      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_21:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_15:
    unint64_t v10 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 16) = v10;
    *(_DWORD *)(a1 + 28) |= 2u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

double sub_1003E8164(uint64_t a1, void *lpsrc)
{
  return sub_1003E7E88(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E81EC()
{
  return 1;
}

void *sub_1003E81F4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.VehicleHeading");
}

void sub_1003E8204(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(void *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      int v7 = *(std::string **)(a1 + 16);
      if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v7, v6);
    }
  }
}

void sub_1003E82EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E8304(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF148;
  sub_1002444F8((uint64_t)a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003E8358(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF148;
  sub_1002444F8((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1003E83C0()
{
}

uint64_t sub_1003E8414(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 28);
  if (v1)
  {
    *(void *)(result + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1003E8460(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 == 2)
        {
          int v8 = *(_DWORD *)(a1 + 28);
          goto LABEL_15;
        }
      }
      else
      {
        int v7 = TagFallback & 7;
      }
LABEL_23:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    int v7 = TagFallback & 7;
    if (v7 != 1) {
      goto LABEL_23;
    }
    unint64_t v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v11) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 8) = v11;
    int v8 = *(_DWORD *)(a1 + 28) | 1;
    *(_DWORD *)(a1 + 28) = v8;
    uint64_t v9 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 18)
    {
      *((void *)this + 1) = v9 + 1;
LABEL_15:
      *(_DWORD *)(a1 + 28) = v8 | 2;
      if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1003E85FC(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 28);
  if (v4)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if ((v4 & 2) != 0)
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  return result;
}

uint64_t sub_1003E8668(uint64_t a1, unsigned int a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 28);
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 16);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      char v7 = v6;
      uint64_t v8 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
      }
      else {
        unint64_t v9 = v8;
      }
      if (v9 >= 0x80)
      {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
        int v6 = *(unsigned __int8 *)(v5 + 23);
        uint64_t v8 = *(void *)(v5 + 8);
        char v7 = *(unsigned char *)(v5 + 23);
      }
      else
      {
        int v10 = 1;
      }
      if (v7 < 0) {
        int v6 = v8;
      }
      uint64_t v4 = (v4 + v10 + v6 + 1);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 24) = v4;
  return v4;
}

void sub_1003E8708(uint64_t a1, void *lpsrc)
{
  sub_1003E8204(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E8790()
{
  return 1;
}

void *sub_1003E8798@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.XtraFileAvailable");
}

double sub_1003E87A8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_1003E887C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E8894(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF1C0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

uint64_t sub_1003E88B4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D30;
  if (!qword_102489D30)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D30;
  }
  return result;
}

void sub_1003E88E4()
{
}

uint64_t sub_1003E8938(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1003E8950(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        unint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          unint64_t v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          int v10 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }
      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

double sub_1003E8B18(uint64_t a1, void *lpsrc)
{
  return sub_1003E87A8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003E8BA0()
{
  return 1;
}

void *sub_1003E8BA8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.LocationDerivedSpeed");
}

double sub_1003E8BB8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
  }
  int v5 = *(_DWORD *)(a2 + 100);
  if ((_BYTE)v5)
  {
    if (v5)
    {
      *(_DWORD *)(a1 + 100) |= 1u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_102489D38 + 8);
      }
      double result = sub_1003DE314(v6, v7);
      int v5 = *(_DWORD *)(a2 + 100);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 100) |= 2u;
    *(_DWORD *)(a1 + 32) = v8;
    int v5 = *(_DWORD *)(a2 + 100);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_24;
    }
LABEL_19:
    *(_DWORD *)(a1 + 100) |= 4u;
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_102489D38 + 16);
    }
    sub_1003E1BD8(v9, v10);
    int v5 = *(_DWORD *)(a2 + 100);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_29;
    }
LABEL_24:
    *(_DWORD *)(a1 + 100) |= 8u;
    uint64_t v11 = *(void *)(a1 + 24);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 24);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_102489D38 + 24);
    }
    sub_1003E45D8(v11, v12);
    int v5 = *(_DWORD *)(a2 + 100);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_34;
    }
LABEL_29:
    *(_DWORD *)(a1 + 100) |= 0x10u;
    uint64_t v13 = *(void *)(a1 + 40);
    if (!v13) {
      operator new();
    }
    uint64_t v14 = *(void *)(a2 + 40);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_102489D38 + 40);
    }
    sub_1003E75EC(v13, v14);
    int v5 = *(_DWORD *)(a2 + 100);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_35;
    }
LABEL_34:
    char v15 = *(unsigned char *)(a2 + 36);
    *(_DWORD *)(a1 + 100) |= 0x20u;
    *(unsigned char *)(a1 + 36) = v15;
    int v5 = *(_DWORD *)(a2 + 100);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_38;
      }
      goto LABEL_36;
    }
LABEL_35:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 100) |= 0x40u;
    *(double *)(a1 + 48) = result;
    int v5 = *(_DWORD *)(a2 + 100);
    if ((v5 & 0x80) == 0) {
      goto LABEL_38;
    }
LABEL_36:
    unsigned int v16 = *(_DWORD *)(a2 + 72);
    if (v16 >= 3) {
      sub_101A5ECB4();
    }
    *(_DWORD *)(a1 + 100) |= 0x80u;
    *(_DWORD *)(a1 + 72) = v16;
    int v5 = *(_DWORD *)(a2 + 100);
  }
LABEL_38:
  if ((v5 & 0xFF00) == 0) {
    return result;
  }
  if ((v5 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 100) |= 0x100u;
    uint64_t v17 = *(void *)(a1 + 56);
    if (!v17) {
      operator new();
    }
    uint64_t v18 = *(void *)(a2 + 56);
    if (!v18) {
      uint64_t v18 = *(void *)(qword_102489D38 + 56);
    }
    double result = sub_1003E79D0(v17, v18);
    int v5 = *(_DWORD *)(a2 + 100);
    if ((v5 & 0x200) == 0)
    {
LABEL_41:
      if ((v5 & 0x400) == 0) {
        goto LABEL_42;
      }
      goto LABEL_55;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_41;
  }
  *(_DWORD *)(a1 + 100) |= 0x200u;
  uint64_t v19 = *(void *)(a1 + 64);
  if (!v19) {
    operator new();
  }
  uint64_t v20 = *(void *)(a2 + 64);
  if (!v20) {
    uint64_t v20 = *(void *)(qword_102489D38 + 64);
  }
  double result = sub_1003E7E88(v19, v20);
  int v5 = *(_DWORD *)(a2 + 100);
  if ((v5 & 0x400) == 0)
  {
LABEL_42:
    if ((v5 & 0x800) == 0) {
      goto LABEL_43;
    }
    goto LABEL_60;
  }
LABEL_55:
  *(_DWORD *)(a1 + 100) |= 0x400u;
  uint64_t v21 = *(void *)(a1 + 80);
  if (!v21) {
    operator new();
  }
  uint64_t v22 = *(void *)(a2 + 80);
  if (!v22) {
    uint64_t v22 = *(void *)(qword_102489D38 + 80);
  }
  sub_1003E8204(v21, v22);
  int v5 = *(_DWORD *)(a2 + 100);
  if ((v5 & 0x800) == 0)
  {
LABEL_43:
    if ((v5 & 0x1000) == 0) {
      return result;
    }
    goto LABEL_62;
  }
LABEL_60:
  unsigned int v23 = *(_DWORD *)(a2 + 76);
  if (v23 >= 3) {
    sub_101A5EC88();
  }
  *(_DWORD *)(a1 + 100) |= 0x800u;
  *(_DWORD *)(a1 + 76) = v23;
  if ((*(_DWORD *)(a2 + 100) & 0x1000) != 0)
  {
LABEL_62:
    *(_DWORD *)(a1 + 100) |= 0x1000u;
    uint64_t v24 = *(void *)(a1 + 88);
    if (!v24) {
      operator new();
    }
    uint64_t v25 = *(void *)(a2 + 88);
    if (!v25) {
      uint64_t v25 = *(void *)(qword_102489D38 + 88);
    }
    return sub_1003E87A8(v24, v25);
  }
  return result;
}

void sub_1003E9164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003E917C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF238;
  sub_10001B064(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

uint64_t sub_1003E91D0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D38;
  if (!qword_102489D38)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D38;
  }
  return result;
}

void sub_1003E9200()
{
}

uint64_t sub_1003E9264(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 100);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 100);
      }
    }
    *(_DWORD *)(result + 32) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result)
      {
        uint64_t result = sub_1003E214C(result);
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t result = *(void *)(v1 + 24);
      if (result)
      {
        uint64_t result = sub_1003E51D8(result);
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 40);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 20))
        {
          *(_DWORD *)(v4 + 8) = 0;
          *(unsigned char *)(v4 + 12) = 0;
        }
        *(_DWORD *)(v4 + 20) = 0;
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }
    *(unsigned char *)(v1 + 36) = 0;
    *(void *)(v1 + 48) = 0;
    *(_DWORD *)(v1 + 72) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 56);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 44))
        {
          *(_OWORD *)(v5 + 24) = 0u;
          *(_OWORD *)(v5 + 8) = 0u;
        }
        *(_DWORD *)(v5 + 44) = 0;
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 64);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 28))
        {
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
        }
        *(_DWORD *)(v6 + 28) = 0;
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }
    if ((v2 & 0x400) != 0)
    {
      uint64_t result = *(void *)(v1 + 80);
      if (result)
      {
        uint64_t result = sub_1003E8414(result);
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }
    *(_DWORD *)(v1 + 76) = 0;
    if ((v2 & 0x1000) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 88);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 36))
        {
          *(void *)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
          *(void *)(v7 + 24) = 0;
        }
        *(_DWORD *)(v7 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 100) = 0;
  return result;
}

uint64_t sub_1003E939C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 100) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v99[0] = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99))return 0; {
        }
          }
        else
        {
          v99[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        if (!sub_1003DE4BC(v8, this, v22) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v23 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)this + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v26 >= v10 || *v26 != 16) {
          continue;
        }
        uint64_t v11 = v26 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_49;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_49:
        v99[0] = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99);
          if (!result) {
            return result;
          }
          unsigned int v27 = v99[0];
          int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v27 = *v11;
          int v28 = v11 + 1;
          *((void *)this + 1) = v28;
        }
        *(_DWORD *)(a1 + 32) = v27;
        int v12 = *(_DWORD *)(a1 + 100) | 2;
        *(_DWORD *)(a1 + 100) = v12;
        if ((unint64_t)v28 >= v10 || *v28 != 26) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 100) = v12 | 4;
        uint64_t v30 = *(void *)(a1 + 16);
        if (!v30) {
          operator new();
        }
        v99[0] = 0;
        uint64_t v31 = (char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99))return 0; {
        }
          }
        else
        {
          v99[0] = *v31;
          *((void *)this + 1) = v31 + 1;
        }
        int v32 = *((_DWORD *)this + 14);
        int v33 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v32 + 1;
        if (v32 >= v33) {
          return 0;
        }
        int v34 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        if (!sub_1003E21EC(v30, this, v35) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v34);
        int v36 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v36, 1);
        int v37 = v36 - 1;
        if (v37 < 0 == v24) {
          *((_DWORD *)this + 14) = v37;
        }
        uint64_t v38 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v38 >= *((void *)this + 2) || *v38 != 34) {
          continue;
        }
        *((void *)this + 1) = v38 + 1;
LABEL_71:
        *(_DWORD *)(a1 + 100) |= 8u;
        uint64_t v39 = *(void *)(a1 + 24);
        if (!v39) {
          operator new();
        }
        v99[0] = 0;
        unint64_t v40 = (char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99))return 0; {
        }
          }
        else
        {
          v99[0] = *v40;
          *((void *)this + 1) = v40 + 1;
        }
        int v41 = *((_DWORD *)this + 14);
        int v42 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v41 + 1;
        if (v41 >= v42) {
          return 0;
        }
        int v43 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        if (!sub_1003E53B0(v39, this, v44) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v43);
        int v45 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v45, 1);
        int v46 = v45 - 1;
        if (v46 < 0 == v24) {
          *((_DWORD *)this + 14) = v46;
        }
        uint64_t v47 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v47 >= *((void *)this + 2) || *v47 != 42) {
          continue;
        }
        *((void *)this + 1) = v47 + 1;
LABEL_85:
        *(_DWORD *)(a1 + 100) |= 0x10u;
        uint64_t v48 = *(void *)(a1 + 40);
        if (!v48) {
          operator new();
        }
        v99[0] = 0;
        uint64_t v49 = (char *)*((void *)this + 1);
        if ((unint64_t)v49 >= *((void *)this + 2) || *v49 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99))return 0; {
        }
          }
        else
        {
          v99[0] = *v49;
          *((void *)this + 1) = v49 + 1;
        }
        int v50 = *((_DWORD *)this + 14);
        int v51 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v50 + 1;
        if (v50 >= v51) {
          return 0;
        }
        int v52 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        if (!sub_1003E7778(v48, this, v53) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v52);
        int v54 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v54, 1);
        int v55 = v54 - 1;
        if (v55 < 0 == v24) {
          *((_DWORD *)this + 14) = v55;
        }
        unsigned int v56 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v56 >= v13 || *v56 != 48) {
          continue;
        }
        uint64_t v14 = v56 + 1;
        *((void *)this + 1) = v14;
LABEL_99:
        v99[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99);
          if (!result) {
            return result;
          }
          unsigned int v57 = v99[0];
          unsigned int v58 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v57 = *v14;
          unsigned int v58 = v14 + 1;
          *((void *)this + 1) = v58;
        }
        *(unsigned char *)(a1 + 36) = v57 != 0;
        *(_DWORD *)(a1 + 100) |= 0x20u;
        if ((unint64_t)v58 >= v13 || *v58 != 57) {
          continue;
        }
        *((void *)this + 1) = v58 + 1;
LABEL_107:
        *(void *)unsigned int v99 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v99) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v99;
        }
        *(_DWORD *)(a1 + 100) |= 0x40u;
        unsigned int v59 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v59 >= v15 || *v59 != 64) {
          continue;
        }
        unsigned int v16 = v59 + 1;
        *((void *)this + 1) = v16;
LABEL_111:
        v99[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99);
          if (!result) {
            return result;
          }
          unsigned int v60 = v99[0];
        }
        else
        {
          unsigned int v60 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        if (v60 <= 2)
        {
          *(_DWORD *)(a1 + 100) |= 0x80u;
          *(_DWORD *)(a1 + 72) = v60;
        }
        uint64_t v61 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v61 >= *((void *)this + 2) || *v61 != 74) {
          continue;
        }
        *((void *)this + 1) = v61 + 1;
LABEL_121:
        *(_DWORD *)(a1 + 100) |= 0x100u;
        uint64_t v62 = *(void *)(a1 + 56);
        if (!v62) {
          operator new();
        }
        v99[0] = 0;
        int v63 = (char *)*((void *)this + 1);
        if ((unint64_t)v63 >= *((void *)this + 2) || *v63 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99))return 0; {
        }
          }
        else
        {
          v99[0] = *v63;
          *((void *)this + 1) = v63 + 1;
        }
        int v64 = *((_DWORD *)this + 14);
        int v65 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v64 + 1;
        if (v64 >= v65) {
          return 0;
        }
        int v66 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        if (!sub_1003E7BA0(v62, this, v67) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v66);
        int v68 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v68, 1);
        int v69 = v68 - 1;
        if (v69 < 0 == v24) {
          *((_DWORD *)this + 14) = v69;
        }
        uint64_t v70 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v70 >= *((void *)this + 2) || *v70 != 82) {
          continue;
        }
        *((void *)this + 1) = v70 + 1;
LABEL_135:
        *(_DWORD *)(a1 + 100) |= 0x200u;
        uint64_t v71 = *(void *)(a1 + 64);
        if (!v71) {
          operator new();
        }
        v99[0] = 0;
        unsigned int v72 = (char *)*((void *)this + 1);
        if ((unint64_t)v72 >= *((void *)this + 2) || *v72 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99))return 0; {
        }
          }
        else
        {
          v99[0] = *v72;
          *((void *)this + 1) = v72 + 1;
        }
        int v73 = *((_DWORD *)this + 14);
        int v74 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v73 + 1;
        if (v73 >= v74) {
          return 0;
        }
        int v75 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        if (!sub_1003E7FFC(v71, this, v76) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v75);
        int v77 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v77, 1);
        int v78 = v77 - 1;
        if (v78 < 0 == v24) {
          *((_DWORD *)this + 14) = v78;
        }
        int v79 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v79 >= *((void *)this + 2) || *v79 != 90) {
          continue;
        }
        *((void *)this + 1) = v79 + 1;
LABEL_149:
        *(_DWORD *)(a1 + 100) |= 0x400u;
        uint64_t v80 = *(void *)(a1 + 80);
        if (!v80) {
          operator new();
        }
        v99[0] = 0;
        int v81 = (char *)*((void *)this + 1);
        if ((unint64_t)v81 >= *((void *)this + 2) || *v81 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99))return 0; {
        }
          }
        else
        {
          v99[0] = *v81;
          *((void *)this + 1) = v81 + 1;
        }
        int v82 = *((_DWORD *)this + 14);
        int v83 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v82 + 1;
        if (v82 >= v83) {
          return 0;
        }
        int v84 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        if (!sub_1003E8460(v80, this, v85) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v84);
        int v86 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v86, 1);
        int v87 = v86 - 1;
        if (v87 < 0 == v24) {
          *((_DWORD *)this + 14) = v87;
        }
        int v88 = (unsigned char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v88 >= v17 || *v88 != 96) {
          continue;
        }
        uint64_t v18 = v88 + 1;
        *((void *)this + 1) = v18;
LABEL_163:
        v99[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99);
          if (!result) {
            return result;
          }
          unsigned int v89 = v99[0];
        }
        else
        {
          unsigned int v89 = *v18;
          *((void *)this + 1) = v18 + 1;
        }
        if (v89 <= 2)
        {
          *(_DWORD *)(a1 + 100) |= 0x800u;
          *(_DWORD *)(a1 + 76) = v89;
        }
        uint64_t v90 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v90 >= *((void *)this + 2) || *v90 != 106) {
          continue;
        }
        *((void *)this + 1) = v90 + 1;
LABEL_173:
        *(_DWORD *)(a1 + 100) |= 0x1000u;
        uint64_t v91 = *(void *)(a1 + 88);
        if (!v91) {
          operator new();
        }
        v99[0] = 0;
        int v92 = (char *)*((void *)this + 1);
        if ((unint64_t)v92 >= *((void *)this + 2) || *v92 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v99))return 0; {
        }
          }
        else
        {
          v99[0] = *v92;
          *((void *)this + 1) = v92 + 1;
        }
        int v93 = *((_DWORD *)this + 14);
        int v94 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v93 + 1;
        if (v93 >= v94) {
          return 0;
        }
        int v95 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v99[0]);
        if (!sub_1003E8950(v91, this, v96) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v95);
        int v97 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v97, 1);
        int v98 = v97 - 1;
        if (v98 < 0 == v24) {
          *((_DWORD *)this + 14) = v98;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_37;
        }
        int v12 = *(_DWORD *)(a1 + 100);
        goto LABEL_57;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_71;
        }
        goto LABEL_37;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_85;
        }
        goto LABEL_37;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_99;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_107;
        }
        goto LABEL_37;
      case 8u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_111;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_121;
        }
        goto LABEL_37;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_135;
        }
        goto LABEL_37;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_149;
        }
        goto LABEL_37;
      case 0xCu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_163;
      case 0xDu:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_37;
        }
        goto LABEL_173;
      default:
        int v7 = TagFallback & 7;
LABEL_37:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

double sub_1003EA0A0(uint64_t a1, void *lpsrc)
{
  return sub_1003E8BB8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003EA128()
{
  return 1;
}

void *sub_1003EA130@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.Location");
}

void sub_1003EA140(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  sub_100416E9C((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), a2 + 8);
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), *(_DWORD *)(a2 + 40) + a1[10]);
  if (*(int *)(a2 + 40) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 32) + 8 * v4);
      int v6 = a1[11];
      uint64_t v7 = (int)a1[10];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[12])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), v6 + 1);
          int v6 = a1[11];
        }
        a1[11] = v6 + 1;
        sub_100416DDC();
      }
      uint64_t v8 = *((void *)a1 + 4);
      a1[10] = v7 + 1;
      sub_1003E45D8(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 40));
  }
}

void sub_1003EA274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003EA28C(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022AF2B0;
  sub_10016B2E8(a1 + 4);
  sub_10016B2E8(a1 + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1003EA2F4(uint64_t *a1)
{
  sub_1003EA28C(a1);

  operator delete();
}

uint64_t sub_1003EA32C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D40;
  if (!qword_102489D40)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D40;
  }
  return result;
}

void sub_1003EA35C()
{
}

uint64_t sub_1003EA3B8(uint64_t a1)
{
  sub_10026DEDC(a1 + 8);
  uint64_t result = sub_10026DEDC(a1 + 32);
  *(_DWORD *)(a1 + 60) = 0;
  return result;
}

uint64_t sub_1003EA3EC(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
LABEL_2:
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_30;
        }
        while (1)
        {
          int v10 = a1[5];
          uint64_t v11 = a1[4];
          if ((int)v11 >= v10)
          {
            if (v10 == a1[6])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v10 + 1);
              int v10 = a1[5];
            }
            a1[5] = v10 + 1;
            operator new();
          }
          uint64_t v12 = *((void *)a1 + 1);
          a1[4] = v11 + 1;
          uint64_t v13 = *(void *)(v12 + 8 * v11);
          unsigned int v37 = 0;
          uint64_t v14 = (char *)*((void *)this + 1);
          if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
          }
            }
          else
          {
            unsigned int v37 = *v14;
            *((void *)this + 1) = v14 + 1;
          }
          int v15 = *((_DWORD *)this + 14);
          int v16 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v15 + 1;
          if (v15 >= v16) {
            return 0;
          }
          int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (!sub_1003E21EC(v13, this, v18) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
          int v19 = *((_DWORD *)this + 14);
          BOOL v20 = __OFSUB__(v19, 1);
          int v21 = v19 - 1;
          if (v21 < 0 == v20) {
            *((_DWORD *)this + 14) = v21;
          }
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v22 >= *((void *)this + 2)) {
            break;
          }
          int v23 = *v22;
          if (v23 != 10)
          {
            if (v23 != 18) {
              goto LABEL_2;
            }
            goto LABEL_34;
          }
          *((void *)this + 1) = v22 + 1;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_30;
      }
      while (1)
      {
        int v24 = a1[11];
        uint64_t v25 = a1[10];
        if ((int)v25 >= v24)
        {
          if (v24 == a1[12])
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v24 + 1);
            int v24 = a1[11];
          }
          a1[11] = v24 + 1;
          sub_100416DDC();
        }
        uint64_t v26 = *((void *)a1 + 4);
        a1[10] = v25 + 1;
        uint64_t v27 = *(void *)(v26 + 8 * v25);
        unsigned int v38 = 0;
        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0; {
        }
          }
        else
        {
          unsigned int v38 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
        if (!sub_1003E53B0(v27, this, v32) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v20) {
          *((_DWORD *)this + 14) = v34;
        }
        unsigned int v22 = (unsigned char *)*((void *)this + 1);
        unsigned int v35 = (unsigned char *)*((void *)this + 2);
        if (v22 >= v35 || *v22 != 18) {
          break;
        }
LABEL_34:
        *((void *)this + 1) = v22 + 1;
      }
      if (v22 == v35 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v9 = TagFallback & 7;
LABEL_30:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1003EA7A4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  return result;
}

uint64_t sub_1003EA838(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 16);
  if (v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000843B0(*(void *)(*(void *)(a1 + 8) + 8 * v4), a2);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      }
      else {
        int v7 = 1;
      }
      v3 += v6 + v7;
      ++v4;
    }
    while (v4 < *(int *)(a1 + 16));
  }
  int v8 = *(_DWORD *)(a1 + 40);
  uint64_t v9 = (v8 + v3);
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10008471C(*(void *)(*(void *)(a1 + 32) + 8 * v10), a2);
      int v12 = (int)v11;
      if (v11 >= 0x80) {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      }
      else {
        int v13 = 1;
      }
      uint64_t v9 = (v12 + v9 + v13);
      ++v10;
    }
    while (v10 < *(int *)(a1 + 40));
  }
  *(_DWORD *)(a1 + 56) = v9;
  return v9;
}

void sub_1003EA90C(_DWORD *a1, void *lpsrc)
{
  sub_1003EA140(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003EA994()
{
  return 1;
}

void *sub_1003EA99C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.BatchedLocations");
}

void sub_1003EA9AC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 8);
      if (v5 >= 3) {
        sub_101A5ED0C();
      }
      *(_DWORD *)(a1 + 28) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = *(unsigned char *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(unsigned char *)(a1 + 16) = v6;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 4) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 12);
      if (v7 >= 5) {
        sub_101A5ECE0();
      }
      *(_DWORD *)(a1 + 28) |= 4u;
      *(_DWORD *)(a1 + 12) = v7;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 8) != 0)
    {
      int v8 = *(_DWORD *)(a2 + 20);
      *(_DWORD *)(a1 + 28) |= 8u;
      *(_DWORD *)(a1 + 20) = v8;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 0x10) != 0)
    {
      char v9 = *(unsigned char *)(a2 + 17);
      *(_DWORD *)(a1 + 28) |= 0x10u;
      *(unsigned char *)(a1 + 17) = v9;
    }
  }
}

void sub_1003EAAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003EAADC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF328;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003EAAFC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF328;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003EAB50(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D48;
  if (!qword_102489D48)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D48;
  }
  return result;
}

void sub_1003EAB80()
{
}

uint64_t sub_1003EABE0(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)(result + 8) = &_mh_execute_header;
    *(_DWORD *)(result + 20) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_1003EAC04(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v5 = (unsigned int *)(a1 + 20);
  while (2)
  {
    char v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v26 = 0;
        char v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          *((void *)this + 1) = v9 + 1;
          goto LABEL_26;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
        if (result)
        {
          unsigned int v10 = v26;
LABEL_26:
          if (v10 <= 2)
          {
            *(_DWORD *)(a1 + 28) |= 1u;
            *(_DWORD *)(a1 + 8) = v10;
          }
          int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          if ((unint64_t)v17 < v11 && *v17 == 16)
          {
            int v12 = v17 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_31;
          }
          continue;
        }
        break;
      case 2u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
LABEL_31:
        unsigned int v26 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!result) {
            return result;
          }
          unsigned int v18 = v26;
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v12;
          int v19 = v12 + 1;
          *((void *)this + 1) = v19;
        }
        *(unsigned char *)(a1 + 16) = v18 != 0;
        *(_DWORD *)(a1 + 28) |= 2u;
        if ((unint64_t)v19 >= v11 || *v19 != 24) {
          continue;
        }
        int v13 = v19 + 1;
        *((void *)this + 1) = v13;
LABEL_39:
        unsigned int v26 = 0;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!result) {
            return result;
          }
          unsigned int v20 = v26;
        }
        else
        {
          unsigned int v20 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v20 <= 4)
        {
          *(_DWORD *)(a1 + 28) |= 4u;
          *(_DWORD *)(a1 + 12) = v20;
        }
        int v21 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v21 >= v14 || *v21 != 32) {
          continue;
        }
        int v15 = v21 + 1;
        *((void *)this + 1) = v15;
LABEL_49:
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v5 = *v15;
          unsigned int v22 = v15 + 1;
          *((void *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 28) |= 8u;
        if ((unint64_t)v22 >= v14 || *v22 != 40) {
          continue;
        }
        int v16 = v22 + 1;
        *((void *)this + 1) = v16;
LABEL_57:
        unsigned int v26 = 0;
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!result) {
            return result;
          }
          unsigned int v23 = v26;
          int v24 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int v23 = *v16;
          int v24 = (unsigned __int8 *)(v16 + 1);
          *((void *)this + 1) = v24;
        }
        *(unsigned char *)(a1 + 17) = v23 != 0;
        *(_DWORD *)(a1 + 28) |= 0x10u;
        if (v24 != (unsigned __int8 *)v14 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_39;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_49;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_57;
      default:
        int v8 = TagFallback & 7;
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1003EAF6C(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 28);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = *(unsigned __int8 *)(v5 + 17);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_1003EB030(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 28);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 28))
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if ((v6 & 0x80000000) != 0)
      {
        int v4 = 11;
      }
      else if (v6 >= 0x80)
      {
        int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 28);
      }
      else
      {
        int v4 = 2;
      }
    }
    else
    {
      int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      unsigned int v7 = v4 + 2;
    }
    else {
      unsigned int v7 = v4;
    }
    if ((v3 & 4) != 0)
    {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 11;
      }
      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 28);
      }
      else
      {
        int v9 = 2;
      }
      v7 += v9;
    }
    if ((v3 & 8) != 0)
    {
      unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
      if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 28);
      }
      else
      {
        int v11 = 2;
      }
      v7 += v11;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t result = v7 + 2;
    }
    else {
      uint64_t result = v7;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 24) = result;
  return result;
}

void sub_1003EB110(uint64_t a1, void *lpsrc)
{
  sub_1003EA9AC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003EB198()
{
  return 1;
}

void *sub_1003EB1A0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.RhythmicGnssStatusUpdate");
}

void sub_1003EB1B0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    char v4 = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(unsigned char *)(a1 + 8) = v4;
  }
}

void sub_1003EB23C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003EB254(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF3A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003EB274(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF3A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003EB2C8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D50;
  if (!qword_102489D50)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D50;
  }
  return result;
}

void sub_1003EB2F8()
{
}

uint64_t sub_1003EB348(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(unsigned char *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1003EB35C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v12 = 0;
      int v8 = (char *)*((void *)this + 1);
      unint64_t v7 = *((void *)this + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
        if (!result) {
          return result;
        }
        unsigned int v9 = v12;
        unsigned int v10 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v7 = *((void *)this + 2);
      }
      else
      {
        unsigned int v9 = *v8;
        unsigned int v10 = (unsigned __int8 *)(v8 + 1);
        *((void *)this + 1) = v10;
      }
      *(unsigned char *)(a1 + 8) = v9 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if (v10 == (unsigned __int8 *)v7 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1003EB47C(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_1003EB498(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1u);
  }
  else {
    uint64_t v1 = 0;
  }
  *(_DWORD *)(a1 + 12) = v1;
  return v1;
}

void sub_1003EB4B4(uint64_t a1, void *lpsrc)
{
  sub_1003EB1B0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003EB53C()
{
  return 1;
}

void *sub_1003EB544@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.RhythmicStreamingControl");
}

void sub_1003EB554(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  int v4 = *(_DWORD *)(a2 + 92);
  if (!(_BYTE)v4) {
    goto LABEL_21;
  }
  if (v4)
  {
    int v5 = *(_DWORD *)(a2 + 8);
    if ((sub_100164354(v5) & 1) == 0) {
      sub_101A5EE6C();
    }
    *(_DWORD *)(a1 + 92) |= 1u;
    *(_DWORD *)(a1 + 8) = v5;
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v6 = *(_DWORD *)(a2 + 12);
    if (v6 >= 4) {
      sub_101A5EE40();
    }
    *(_DWORD *)(a1 + 92) |= 2u;
    *(_DWORD *)(a1 + 12) = v6;
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 4) != 0)
  {
    unsigned int v7 = *(_DWORD *)(a2 + 16);
    if (v7 >= 3) {
      sub_101A5EE14();
    }
    *(_DWORD *)(a1 + 92) |= 4u;
    *(_DWORD *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 8) != 0)
  {
    unsigned int v8 = *(_DWORD *)(a2 + 20);
    if (v8 >= 4) {
      sub_101A5EDE8();
    }
    *(_DWORD *)(a1 + 92) |= 8u;
    *(_DWORD *)(a1 + 20) = v8;
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 0x10) == 0)
  {
    if ((v4 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_53:
    int v21 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 92) |= 0x20u;
    *(_DWORD *)(a1 + 24) = v21;
    int v4 = *(_DWORD *)(a2 + 92);
    if ((v4 & 0x40) == 0)
    {
LABEL_19:
      if ((v4 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_54;
  }
  char v20 = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 92) |= 0x10u;
  *(unsigned char *)(a1 + 28) = v20;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x20) != 0) {
    goto LABEL_53;
  }
LABEL_18:
  if ((v4 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_54:
  uint64_t v22 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 92) |= 0x40u;
  *(void *)(a1 + 32) = v22;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x80) != 0)
  {
LABEL_20:
    char v9 = *(unsigned char *)(a2 + 29);
    *(_DWORD *)(a1 + 92) |= 0x80u;
    *(unsigned char *)(a1 + 29) = v9;
    int v4 = *(_DWORD *)(a2 + 92);
  }
LABEL_21:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    unsigned int v10 = *(_DWORD *)(a2 + 48);
    if (v10 >= 4) {
      sub_101A5EDBC();
    }
    *(_DWORD *)(a1 + 92) |= 0x100u;
    *(_DWORD *)(a1 + 48) = v10;
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 0x200) != 0)
  {
    uint64_t v11 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 92) |= 0x200u;
    *(void *)(a1 + 40) = v11;
    int v4 = *(_DWORD *)(a2 + 92);
    if ((v4 & 0x400) == 0)
    {
LABEL_27:
      if ((v4 & 0x800) == 0) {
        goto LABEL_28;
      }
      goto LABEL_35;
    }
  }
  else if ((v4 & 0x400) == 0)
  {
    goto LABEL_27;
  }
  uint64_t v12 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 92) |= 0x400u;
  *(void *)(a1 + 56) = v12;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x800) == 0)
  {
LABEL_28:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_37;
  }
LABEL_35:
  int v13 = *(_DWORD *)(a2 + 52);
  if ((sub_100164354(v13) & 1) == 0) {
    sub_101A5ED90();
  }
  *(_DWORD *)(a1 + 92) |= 0x800u;
  *(_DWORD *)(a1 + 52) = v13;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x1000) == 0)
  {
LABEL_29:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_39;
  }
LABEL_37:
  unsigned int v14 = *(_DWORD *)(a2 + 72);
  if (v14 >= 4) {
    sub_101A5ED64();
  }
  *(_DWORD *)(a1 + 92) |= 0x1000u;
  *(_DWORD *)(a1 + 72) = v14;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x2000) == 0)
  {
LABEL_30:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_44;
  }
LABEL_39:
  *(_DWORD *)(a1 + 92) |= 0x2000u;
  uint64_t v15 = *(void *)(a1 + 64);
  if (!v15) {
    operator new();
  }
  uint64_t v16 = *(void *)(a2 + 64);
  if (!v16) {
    uint64_t v16 = *(void *)(qword_102489D58 + 64);
  }
  sub_1003DE314(v15, v16);
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x4000) == 0)
  {
LABEL_31:
    if ((v4 & 0x8000) == 0) {
      return;
    }
    goto LABEL_49;
  }
LABEL_44:
  *(_DWORD *)(a1 + 92) |= 0x4000u;
  uint64_t v17 = *(void *)(a1 + 80);
  if (!v17) {
    operator new();
  }
  uint64_t v18 = *(void *)(a2 + 80);
  if (!v18) {
    uint64_t v18 = *(void *)(qword_102489D58 + 80);
  }
  sub_1003DE314(v17, v18);
  if ((*(_DWORD *)(a2 + 92) & 0x8000) != 0)
  {
LABEL_49:
    unsigned int v19 = *(_DWORD *)(a2 + 76);
    if (v19 >= 6) {
      sub_101A5ED38();
    }
    *(_DWORD *)(a1 + 92) |= 0x8000u;
    *(_DWORD *)(a1 + 76) = v19;
  }
}

void sub_1003EB8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003EB900(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF418;
  sub_100193850(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

uint64_t sub_1003EB954(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D58;
  if (!qword_102489D58)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D58;
  }
  return result;
}

void sub_1003EB984()
{
}

uint64_t sub_1003EB9E0(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 92);
  if ((_BYTE)v1)
  {
    *(void *)(result + 32) = 0;
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 22) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(result + 72) = 0;
    *(void *)(result + 48) = 0;
    *(void *)(result + 56) = 0;
    *(void *)(result + 40) = 0;
    if ((v1 & 0x2000) != 0)
    {
      uint64_t v2 = *(void *)(result + 64);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(result + 92);
      }
    }
    if ((v1 & 0x4000) != 0)
    {
      uint64_t v3 = *(void *)(result + 80);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
    *(_DWORD *)(result + 76) = 0;
  }
  *(_DWORD *)(result + 92) = 0;
  return result;
}

uint64_t sub_1003EBA5C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        v69[0] = 0;
        unsigned int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!result) {
            return result;
          }
          int v9 = v69[0];
        }
        else
        {
          int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (sub_100164354(v9))
        {
          *(_DWORD *)(a1 + 92) |= 1u;
          *(_DWORD *)(a1 + 8) = v9;
        }
        int v28 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v28 < v10 && *v28 == 16)
        {
          uint64_t v11 = v28 + 1;
          *((void *)this + 1) = v11;
          goto LABEL_52;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_52:
        v69[0] = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!result) {
            return result;
          }
          unsigned int v29 = v69[0];
        }
        else
        {
          unsigned int v29 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v29 <= 3)
        {
          *(_DWORD *)(a1 + 92) |= 2u;
          *(_DWORD *)(a1 + 12) = v29;
        }
        int v30 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v30 >= v12 || *v30 != 24) {
          continue;
        }
        int v13 = v30 + 1;
        *((void *)this + 1) = v13;
LABEL_62:
        v69[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!result) {
            return result;
          }
          unsigned int v31 = v69[0];
        }
        else
        {
          unsigned int v31 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v31 <= 2)
        {
          *(_DWORD *)(a1 + 92) |= 4u;
          *(_DWORD *)(a1 + 16) = v31;
        }
        unsigned int v32 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v32 >= v14 || *v32 != 32) {
          continue;
        }
        uint64_t v15 = v32 + 1;
        *((void *)this + 1) = v15;
LABEL_72:
        v69[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!result) {
            return result;
          }
          unsigned int v33 = v69[0];
        }
        else
        {
          unsigned int v33 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        if (v33 <= 3)
        {
          *(_DWORD *)(a1 + 92) |= 8u;
          *(_DWORD *)(a1 + 20) = v33;
        }
        int v34 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v34 >= v16 || *v34 != 40) {
          continue;
        }
        uint64_t v17 = v34 + 1;
        *((void *)this + 1) = v17;
LABEL_82:
        v69[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!result) {
            return result;
          }
          unsigned int v35 = v69[0];
          int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v35 = *v17;
          int v36 = v17 + 1;
          *((void *)this + 1) = v36;
        }
        *(unsigned char *)(a1 + 28) = v35 != 0;
        *(_DWORD *)(a1 + 92) |= 0x10u;
        if ((unint64_t)v36 >= v16 || *v36 != 53) {
          continue;
        }
        *((void *)this + 1) = v36 + 1;
LABEL_90:
        v69[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v69) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 24) = v69[0];
        *(_DWORD *)(a1 + 92) |= 0x20u;
        unsigned int v37 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 != 57) {
          continue;
        }
        *((void *)this + 1) = v37 + 1;
LABEL_94:
        *(void *)int v69 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v69) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v69;
        }
        *(_DWORD *)(a1 + 92) |= 0x40u;
        unsigned int v38 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v38 >= v18 || *v38 != 64) {
          continue;
        }
        unsigned int v19 = v38 + 1;
        *((void *)this + 1) = v19;
LABEL_98:
        v69[0] = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!result) {
            return result;
          }
          unsigned int v39 = v69[0];
          unint64_t v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          unsigned int v39 = *v19;
          unint64_t v40 = v19 + 1;
          *((void *)this + 1) = v40;
        }
        *(unsigned char *)(a1 + 29) = v39 != 0;
        *(_DWORD *)(a1 + 92) |= 0x80u;
        if ((unint64_t)v40 >= v18 || *v40 != 72) {
          continue;
        }
        char v20 = v40 + 1;
        *((void *)this + 1) = v20;
LABEL_106:
        v69[0] = 0;
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!result) {
            return result;
          }
          unsigned int v41 = v69[0];
        }
        else
        {
          unsigned int v41 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        if (v41 <= 3)
        {
          *(_DWORD *)(a1 + 92) |= 0x100u;
          *(_DWORD *)(a1 + 48) = v41;
        }
        int v42 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 != 81) {
          continue;
        }
        *((void *)this + 1) = v42 + 1;
LABEL_116:
        *(void *)int v69 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v69) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v69;
        }
        *(_DWORD *)(a1 + 92) |= 0x200u;
        int v43 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 != 89) {
          continue;
        }
        *((void *)this + 1) = v43 + 1;
LABEL_120:
        *(void *)int v69 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v69) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v69;
        }
        *(_DWORD *)(a1 + 92) |= 0x400u;
        unsigned int v44 = (unsigned char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((unint64_t)v44 >= v21 || *v44 != 96) {
          continue;
        }
        uint64_t v22 = v44 + 1;
        *((void *)this + 1) = v22;
LABEL_124:
        v69[0] = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!result) {
            return result;
          }
          int v45 = v69[0];
        }
        else
        {
          int v45 = *v22;
          *((void *)this + 1) = v22 + 1;
        }
        if (sub_100164354(v45))
        {
          *(_DWORD *)(a1 + 92) |= 0x800u;
          *(_DWORD *)(a1 + 52) = v45;
        }
        int v46 = (unsigned char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        if ((unint64_t)v46 >= v23 || *v46 != 104) {
          continue;
        }
        int v24 = v46 + 1;
        *((void *)this + 1) = v24;
LABEL_134:
        v69[0] = 0;
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!result) {
            return result;
          }
          unsigned int v47 = v69[0];
        }
        else
        {
          unsigned int v47 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        if (v47 <= 3)
        {
          *(_DWORD *)(a1 + 92) |= 0x1000u;
          *(_DWORD *)(a1 + 72) = v47;
        }
        uint64_t v48 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v48 >= *((void *)this + 2) || *v48 != 114) {
          continue;
        }
        *((void *)this + 1) = v48 + 1;
LABEL_144:
        *(_DWORD *)(a1 + 92) |= 0x2000u;
        uint64_t v49 = *(void *)(a1 + 64);
        if (!v49) {
          operator new();
        }
        v69[0] = 0;
        int v50 = (char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69))return 0; {
        }
          }
        else
        {
          v69[0] = *v50;
          *((void *)this + 1) = v50 + 1;
        }
        int v51 = *((_DWORD *)this + 14);
        int v52 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v51 + 1;
        if (v51 >= v52) {
          return 0;
        }
        int v53 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69[0]);
        if (!sub_1003DE4BC(v49, this, v54) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v53);
        int v55 = *((_DWORD *)this + 14);
        BOOL v56 = __OFSUB__(v55, 1);
        int v57 = v55 - 1;
        if (v57 < 0 == v56) {
          *((_DWORD *)this + 14) = v57;
        }
        unsigned int v58 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v58 >= *((void *)this + 2) || *v58 != 122) {
          continue;
        }
        *((void *)this + 1) = v58 + 1;
LABEL_158:
        *(_DWORD *)(a1 + 92) |= 0x4000u;
        uint64_t v59 = *(void *)(a1 + 80);
        if (!v59) {
          operator new();
        }
        v69[0] = 0;
        unsigned int v60 = (char *)*((void *)this + 1);
        if ((unint64_t)v60 >= *((void *)this + 2) || *v60 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69))return 0; {
        }
          }
        else
        {
          v69[0] = *v60;
          *((void *)this + 1) = v60 + 1;
        }
        int v61 = *((_DWORD *)this + 14);
        int v62 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v61 + 1;
        if (v61 < v62)
        {
          int v63 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69[0]);
          if (sub_1003DE4BC(v59, this, v64))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v63);
              int v65 = *((_DWORD *)this + 14);
              BOOL v56 = __OFSUB__(v65, 1);
              int v66 = v65 - 1;
              if (v66 < 0 == v56) {
                *((_DWORD *)this + 14) = v66;
              }
              unsigned int v67 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v25 = *((void *)this + 2);
              if ((int)v25 - (int)v67 > 1 && *v67 == 128 && v67[1] == 1)
              {
                unsigned int v26 = (char *)(v67 + 2);
                *((void *)this + 1) = v26;
LABEL_173:
                v69[0] = 0;
                if ((unint64_t)v26 >= v25 || *v26 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
                  if (!result) {
                    return result;
                  }
                  unsigned int v68 = v69[0];
                }
                else
                {
                  unsigned int v68 = *v26;
                  *((void *)this + 1) = v26 + 1;
                }
                if (v68 <= 5)
                {
                  *(_DWORD *)(a1 + 92) |= 0x8000u;
                  *(_DWORD *)(a1 + 76) = v68;
                }
                if (*((void *)this + 1) == *((void *)this + 2)
                  && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)this + 36) = 1;
                  return result;
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_62;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_72;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_82;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_90;
        }
        goto LABEL_41;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_94;
        }
        goto LABEL_41;
      case 8u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_98;
      case 9u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        char v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_106;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_116;
        }
        goto LABEL_41;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_120;
        }
        goto LABEL_41;
      case 0xCu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_124;
      case 0xDu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_134;
      case 0xEu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_144;
        }
        goto LABEL_41;
      case 0xFu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_158;
        }
        goto LABEL_41;
      case 0x10u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v26 = (char *)*((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        goto LABEL_173;
      default:
        int v7 = TagFallback & 7;
LABEL_41:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1003EC434(uint64_t a1, void *lpsrc)
{
  sub_1003EB554(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003EC4BC()
{
  return 1;
}

void *sub_1003EC4C4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MotionActivity");
}

void sub_1003EC4D4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489D60 + 8);
      }
      sub_1003DE314(v5, v6);
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v7;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
LABEL_14:
    *(_DWORD *)(a1 + 32) |= 4u;
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489D60 + 16);
    }
    sub_1003EB554(v8, v9);
  }
}

void sub_1003EC668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1003EC680(void *result)
{
  if ((void *)qword_102489D60 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1003EC720(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF490;
  sub_1003EC680(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003EC774(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF490;
  sub_1003EC680(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003EC7DC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D60;
  if (!qword_102489D60)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D60;
  }
  return result;
}

void sub_1003EC80C()
{
}

uint64_t sub_1003EC85C(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 32);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 32);
      }
    }
    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1003EB9E0(result);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1003EC8C0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v10 = *(void *)(a1 + 8);
          if (!v10) {
            operator new();
          }
          unsigned int v34 = 0;
          uint64_t v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34))return 0; {
          }
            }
          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }
          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          if (!sub_1003DE4BC(v10, this, v17) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          unint64_t v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            int v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }
        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }
        else
        {
          int v8 = TagFallback & 7;
        }
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      int v13 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_32:
      unsigned int v33 = 0;
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33);
        if (!result) {
          return result;
        }
        unsigned int v22 = v33;
        unint64_t v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        unsigned int v22 = *v13;
        unint64_t v23 = v13 + 1;
        *((void *)this + 1) = v23;
      }
      *(_DWORD *)(a1 + 24) = v22;
      int v9 = *(_DWORD *)(a1 + 32) | 2;
      *(_DWORD *)(a1 + 32) = v9;
    }
    while ((unint64_t)v23 >= v12 || *v23 != 26);
    *((void *)this + 1) = v23 + 1;
LABEL_40:
    *(_DWORD *)(a1 + 32) = v9 | 4;
    uint64_t v25 = *(void *)(a1 + 16);
    if (!v25) {
      operator new();
    }
    unsigned int v35 = 0;
    unsigned int v26 = (char *)*((void *)this + 1);
    if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35)) {
        return 0;
      }
    }
    else
    {
      unsigned int v35 = *v26;
      *((void *)this + 1) = v26 + 1;
    }
    int v27 = *((_DWORD *)this + 14);
    int v28 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v27 + 1;
    if (v27 >= v28) {
      return 0;
    }
    int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
    if (!sub_1003EBA5C(v25, this, v30) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
    int v31 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v31, 1);
    int v32 = v31 - 1;
    if (v32 < 0 == v19) {
      *((_DWORD *)this + 14) = v32;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1003ECC48(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_102489D60 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489D60 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t sub_1003ECCF4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_102489D60 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(unsigned char *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }
    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }
  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_102489D60 + 16);
    }
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100181B78(v10, a2);
    int v13 = (int)v11;
    if (v11 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, v12);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }
LABEL_28:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1003ECE08(uint64_t a1, void *lpsrc)
{
  sub_1003EC4D4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003ECE90()
{
  return 1;
}

void *sub_1003ECE98@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MotionState");
}

void sub_1003ECEA8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      int v5 = *(_DWORD *)(a2 + 16);
      if ((sub_100164354(v5) & 1) == 0) {
        sub_101A5EEC4();
      }
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_DWORD *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 4) == 0)
      {
LABEL_9:
        if ((v4 & 8) == 0) {
          return;
        }
        goto LABEL_17;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_9;
    }
    *(_DWORD *)(a1 + 36) |= 4u;
    uint64_t v7 = *(void *)(a1 + 24);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_102489D68 + 24);
    }
    sub_1003DE314(v7, v8);
    if ((*(_DWORD *)(a2 + 36) & 8) != 0)
    {
LABEL_17:
      int v9 = *(_DWORD *)(a2 + 20);
      if ((sub_100164354(v9) & 1) == 0) {
        sub_101A5EE98();
      }
      *(_DWORD *)(a1 + 36) |= 8u;
      *(_DWORD *)(a1 + 20) = v9;
    }
  }
}

void sub_1003ED01C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003ED034(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AF508;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489D68 != this)
  {
    uint64_t v2 = *((void *)this + 3);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003ED0C4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003ED034(a1);

  operator delete();
}

uint64_t sub_1003ED0FC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D68;
  if (!qword_102489D68)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D68;
  }
  return result;
}

void sub_1003ED12C()
{
}

uint64_t sub_1003ED180(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 36);
  if (v1)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)(result + 8) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(result + 24);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
      }
    }
    *(_DWORD *)(result + 20) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1003ED1BC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        v27[0] = 0;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!result) {
            return result;
          }
          int v9 = v27[0];
        }
        else
        {
          int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (sub_100164354(v9))
        {
          *(_DWORD *)(a1 + 36) |= 1u;
          *(_DWORD *)(a1 + 16) = v9;
        }
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 < *((void *)this + 2) && *v14 == 17)
        {
          *((void *)this + 1) = v14 + 1;
          goto LABEL_28;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_17;
        }
LABEL_28:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v27;
        }
        int v10 = *(_DWORD *)(a1 + 36) | 2;
        *(_DWORD *)(a1 + 36) = v10;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 26) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_32:
        *(_DWORD *)(a1 + 36) = v10 | 4;
        uint64_t v16 = *(void *)(a1 + 24);
        if (!v16) {
          operator new();
        }
        v27[0] = 0;
        unsigned int v17 = (char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27))return 0; {
        }
          }
        else
        {
          v27[0] = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        int v18 = *((_DWORD *)this + 14);
        int v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 < v19)
        {
          int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
          if (sub_1003DE4BC(v16, this, v21))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
              int v22 = *((_DWORD *)this + 14);
              BOOL v23 = __OFSUB__(v22, 1);
              int v24 = v22 - 1;
              if (v24 < 0 == v23) {
                *((_DWORD *)this + 14) = v24;
              }
              uint64_t v25 = (unsigned char *)*((void *)this + 1);
              unint64_t v11 = *((void *)this + 2);
              if ((unint64_t)v25 < v11 && *v25 == 32)
              {
                unsigned int v12 = v25 + 1;
                *((void *)this + 1) = v12;
LABEL_46:
                v27[0] = 0;
                if ((unint64_t)v12 >= v11 || *v12 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
                  if (!result) {
                    return result;
                  }
                  int v26 = v27[0];
                }
                else
                {
                  int v26 = *v12;
                  *((void *)this + 1) = v12 + 1;
                }
                if (sub_100164354(v26))
                {
                  *(_DWORD *)(a1 + 36) |= 8u;
                  *(_DWORD *)(a1 + 20) = v26;
                }
                if (*((void *)this + 1) == *((void *)this + 2)
                  && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)this + 36) = 1;
                  return result;
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        int v10 = *(_DWORD *)(a1 + 36);
        goto LABEL_32;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_46;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003ED52C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 8), a3);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_102489D68 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 8) != 0)
  {
LABEL_11:
    int v8 = *(_DWORD *)(v5 + 20);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, (int)a2, a4);
  }
  return result;
}

uint64_t sub_1003ED5E4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 36))
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }
      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 36);
      }
      else
      {
        unsigned int v4 = 2;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 4) != 0)
    {
      uint64_t v7 = *(void *)(a1 + 24);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_102489D68 + 24);
      }
      int v8 = *(unsigned __int8 *)(v7 + 36);
      if (*(unsigned char *)(v7 + 36))
      {
        int v9 = (v8 << 31 >> 31) & 9;
        if ((v8 & 2) != 0) {
          v9 += 9;
        }
        if ((v8 & 4) != 0) {
          int v8 = v9 + 9;
        }
        else {
          int v8 = v9;
        }
      }
      *(_DWORD *)(v7 + 32) = v8;
      uint64_t v5 = (v5 + v8 + 2);
      int v3 = *(_DWORD *)(a1 + 36);
    }
    if ((v3 & 8) != 0)
    {
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
      if ((v10 & 0x80000000) != 0)
      {
        int v11 = 11;
      }
      else if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
      }
      else
      {
        int v11 = 2;
      }
      uint64_t v5 = (v11 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

void sub_1003ED6E4(uint64_t a1, void *lpsrc)
{
  sub_1003ECEA8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003ED76C()
{
  return 1;
}

void *sub_1003ED774@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.WorkoutUpdate");
}

void sub_1003ED784(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489D70 + 8);
      }
      sub_1003DE314(v5, v6);
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v7;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
LABEL_14:
    *(_DWORD *)(a1 + 32) |= 4u;
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489D70 + 16);
    }
    sub_1003ECEA8(v8, v9);
  }
}

void sub_1003ED910(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1003ED928(void *result)
{
  if ((void *)qword_102489D70 != result)
  {
    char v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1003ED9C8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF580;
  sub_1003ED928(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003EDA1C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF580;
  sub_1003ED928(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003EDA84(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D70;
  if (!qword_102489D70)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D70;
  }
  return result;
}

void sub_1003EDAB4()
{
}

uint64_t sub_1003EDB04(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 32);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 32);
      }
    }
    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1003ED180(result);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1003EDB68(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v10 = *(void *)(a1 + 8);
          if (!v10) {
            operator new();
          }
          unsigned int v34 = 0;
          int v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34))return 0; {
          }
            }
          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }
          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          if (!sub_1003DE4BC(v10, this, v17) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          unsigned int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            int v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }
        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }
        else
        {
          int v8 = TagFallback & 7;
        }
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      int v13 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_32:
      unsigned int v33 = 0;
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33);
        if (!result) {
          return result;
        }
        unsigned int v22 = v33;
        BOOL v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        unsigned int v22 = *v13;
        BOOL v23 = v13 + 1;
        *((void *)this + 1) = v23;
      }
      *(_DWORD *)(a1 + 24) = v22;
      int v9 = *(_DWORD *)(a1 + 32) | 2;
      *(_DWORD *)(a1 + 32) = v9;
    }
    while ((unint64_t)v23 >= v12 || *v23 != 26);
    *((void *)this + 1) = v23 + 1;
LABEL_40:
    *(_DWORD *)(a1 + 32) = v9 | 4;
    uint64_t v25 = *(void *)(a1 + 16);
    if (!v25) {
      operator new();
    }
    unsigned int v35 = 0;
    int v26 = (char *)*((void *)this + 1);
    if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35)) {
        return 0;
      }
    }
    else
    {
      unsigned int v35 = *v26;
      *((void *)this + 1) = v26 + 1;
    }
    int v27 = *((_DWORD *)this + 14);
    int v28 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v27 + 1;
    if (v27 >= v28) {
      return 0;
    }
    int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
    if (!sub_1003ED1BC(v25, this, v30) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
    int v31 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v31, 1);
    int v32 = v31 - 1;
    if (v32 < 0 == v19) {
      *((_DWORD *)this + 14) = v32;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1003EDEE8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_102489D70 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489D70 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t sub_1003EDF94(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_102489D70 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(unsigned char *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }
    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }
  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_102489D70 + 16);
    }
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003ED5E4(v10, a2);
    int v13 = (int)v11;
    if (v11 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, v12);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }
LABEL_28:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1003EE0A8(uint64_t a1, void *lpsrc)
{
  sub_1003ED784(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003EE130()
{
  return 1;
}

void *sub_1003EE138@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MotionStateObserver");
}

BOOL sub_1003EE148(unsigned int a1)
{
  return a1 < 0x43;
}

void sub_1003EE154(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v5 = *(const std::string **)(a2 + 8);
    *(_DWORD *)(a1 + 40) |= 1u;
    int v6 = *(std::string **)(a1 + 8);
    if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v6, v5);
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_16:
      unsigned int v9 = *(_DWORD *)(a2 + 24);
      if (v9 >= 0x43) {
        sub_101A5EF48();
      }
      *(_DWORD *)(a1 + 40) |= 4u;
      *(_DWORD *)(a1 + 24) = v9;
      int v4 = *(_DWORD *)(a2 + 40);
      if ((v4 & 8) == 0)
      {
LABEL_8:
        if ((v4 & 0x10) == 0) {
          return;
        }
        goto LABEL_20;
      }
      goto LABEL_18;
    }
  }
  else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v7 = *(const std::string **)(a2 + 16);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v8 = *(std::string **)(a1 + 16);
  if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v8, v7);
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v4 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_18:
  unsigned int v10 = *(_DWORD *)(a2 + 28);
  if (v10 >= 5) {
    sub_101A5EF1C();
  }
  *(_DWORD *)(a1 + 40) |= 8u;
  *(_DWORD *)(a1 + 28) = v10;
  if ((*(_DWORD *)(a2 + 40) & 0x10) != 0)
  {
LABEL_20:
    unsigned int v11 = *(_DWORD *)(a2 + 32);
    if (v11 >= 3) {
      sub_101A5EEF0();
    }
    *(_DWORD *)(a1 + 40) |= 0x10u;
    *(_DWORD *)(a1 + 32) = v11;
  }
}

void sub_1003EE304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003EE31C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF5F8;
  sub_100258038((uint64_t)a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003EE370(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF5F8;
  sub_100258038((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1003EE3D8()
{
}

uint64_t sub_1003EE434(uint64_t result)
{
  if (*(unsigned char *)(result + 40))
  {
    if (*(unsigned char *)(result + 40))
    {
      uint64_t v1 = *(void *)(result + 8);
      if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v1 + 23) < 0)
        {
          **(unsigned char **)uint64_t v1 = 0;
          *(void *)(v1 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v1 = 0;
          *(unsigned char *)(v1 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(result + 40) & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
  }
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1003EE4B8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        if (*(_UNKNOWN **)(a1 + 8) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          unsigned int v9 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 18)
          {
            *((void *)this + 1) = v9 + 1;
            goto LABEL_16;
          }
          continue;
        }
        return result;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_30;
        }
LABEL_16:
        *(_DWORD *)(a1 + 40) |= 2u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          unsigned int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v11 < v10 && *v11 == 24)
          {
            unsigned int v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_24;
          }
          continue;
        }
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unsigned int v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_24:
        unsigned int v24 = 0;
        if ((unint64_t)v12 < v10 && (*v12 & 0x80000000) == 0)
        {
          unsigned int v13 = *v12;
          *((void *)this + 1) = v12 + 1;
          goto LABEL_36;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
        if (result)
        {
          unsigned int v13 = v24;
LABEL_36:
          if (v13 <= 0x42)
          {
            *(_DWORD *)(a1 + 40) |= 4u;
            *(_DWORD *)(a1 + 24) = v13;
          }
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          if ((unint64_t)v18 < v14 && *v18 == 32)
          {
            int v15 = v18 + 1;
            *((void *)this + 1) = v15;
            goto LABEL_41;
          }
          continue;
        }
        break;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
LABEL_41:
        unsigned int v23 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!result) {
            return result;
          }
          unsigned int v19 = v23;
        }
        else
        {
          unsigned int v19 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        if (v19 <= 4)
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 28) = v19;
        }
        int v20 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v20 >= v16 || *v20 != 40) {
          continue;
        }
        unsigned int v17 = v20 + 1;
        *((void *)this + 1) = v17;
LABEL_51:
        unsigned int v22 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v21 = v22;
        }
        else
        {
          unsigned int v21 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        if (v21 <= 2)
        {
          *(_DWORD *)(a1 + 40) |= 0x10u;
          *(_DWORD *)(a1 + 32) = v21;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_51;
      default:
        int v7 = TagFallback & 7;
LABEL_30:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

int *sub_1003EE82C(int *result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = result[10];
  if (v6)
  {
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[7], a2, a4);
    if ((v5[10] & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[6], a2, a4);
  int v6 = v5[10];
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  int v7 = v5[8];

  return (int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, a2, a4);
}

uint64_t sub_1003EE8F0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_46;
  }
  if ((*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v10 = v11 + 1;
    int v3 = *(_DWORD *)(a1 + 40);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 2;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  uint64_t v4 = (v10 + v6);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v12 = *(void *)(a1 + 16);
    int v13 = *(unsigned __int8 *)(v12 + 23);
    char v14 = v13;
    uint64_t v15 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      unint64_t v16 = *(unsigned __int8 *)(v12 + 23);
    }
    else {
      unint64_t v16 = v15;
    }
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16, a2);
      int v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v15 = *(void *)(v12 + 8);
      int v3 = *(_DWORD *)(a1 + 40);
      char v14 = *(unsigned char *)(v12 + 23);
    }
    else
    {
      int v17 = 1;
    }
    if (v14 < 0) {
      int v13 = v15;
    }
    uint64_t v4 = (v4 + v17 + v13 + 1);
  }
LABEL_24:
  if ((v3 & 4) != 0)
  {
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if ((v18 & 0x80000000) != 0)
    {
      int v19 = 11;
    }
    else if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v19 = 2;
    }
    uint64_t v4 = (v19 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_26:
      if ((v3 & 0x10) == 0) {
        goto LABEL_46;
      }
      goto LABEL_40;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_26;
  }
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if ((v20 & 0x80000000) != 0)
  {
    int v21 = 11;
  }
  else if (v20 >= 0x80)
  {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
  else
  {
    int v21 = 2;
  }
  uint64_t v4 = (v21 + v4);
  if ((v3 & 0x10) != 0)
  {
LABEL_40:
    unsigned int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v22 & 0x80000000) != 0)
    {
      int v23 = 11;
    }
    else if (v22 >= 0x80)
    {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2) + 1;
    }
    else
    {
      int v23 = 2;
    }
    uint64_t v4 = (v23 + v4);
  }
LABEL_46:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

void sub_1003EEA8C(uint64_t a1, void *lpsrc)
{
  sub_1003EE154(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003EEB14()
{
  return 1;
}

void *sub_1003EEB1C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.WorkoutSettings");
}

BOOL sub_1003EEB2C(unsigned int a1)
{
  return a1 < 0x13;
}

void sub_1003EEB38(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 48);
  if (!(_BYTE)v4) {
    return;
  }
  if (*(unsigned char *)(a2 + 48))
  {
    *(_DWORD *)(a1 + 48) |= 1u;
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489D80 + 8);
    }
    sub_1003DE314(v5, v6);
    int v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_20:
      unsigned int v9 = *(_DWORD *)(a2 + 40);
      if (v9 >= 0x13) {
        sub_101A5EF74();
      }
      *(_DWORD *)(a1 + 48) |= 4u;
      *(_DWORD *)(a1 + 40) = v9;
      int v4 = *(_DWORD *)(a2 + 48);
      if ((v4 & 8) == 0)
      {
LABEL_8:
        if ((v4 & 0x10) == 0) {
          return;
        }
        goto LABEL_27;
      }
      goto LABEL_22;
    }
  }
  else if ((*(unsigned char *)(a2 + 48) & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 48) |= 2u;
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    operator new();
  }
  uint64_t v8 = *(void *)(a2 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489D80 + 16);
  }
  sub_1003DE314(v7, v8);
  int v4 = *(_DWORD *)(a2 + 48);
  if ((v4 & 4) != 0) {
    goto LABEL_20;
  }
LABEL_7:
  if ((v4 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_22:
  *(_DWORD *)(a1 + 48) |= 8u;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *(void *)(a2 + 24);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_102489D80 + 24);
  }
  sub_1003DE314(v10, v11);
  if ((*(_DWORD *)(a2 + 48) & 0x10) != 0)
  {
LABEL_27:
    *(_DWORD *)(a1 + 48) |= 0x10u;
    uint64_t v12 = *(void *)(a1 + 32);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *(void *)(a2 + 32);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_102489D80 + 32);
    }
    sub_1003EE154(v12, v13);
  }
}

void sub_1003EEDD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1003EEDE8(void *result)
{
  if ((void *)qword_102489D80 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      uint64_t v5 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v5();
    }
  }
  return result;
}

void sub_1003EEEE0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF670;
  sub_1003EEDE8(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003EEF34(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF670;
  sub_1003EEDE8(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003EEF9C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D80;
  if (!qword_102489D80)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D80;
  }
  return result;
}

void sub_1003EEFCC()
{
}

uint64_t sub_1003EF024(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 48);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 48))
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 48);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *(void *)(result + 16);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        int v2 = *(_DWORD *)(result + 48);
      }
    }
    *(_DWORD *)(result + 40) = 0;
    if ((v2 & 8) != 0)
    {
      uint64_t v5 = *(void *)(result + 24);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 36))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
          *(void *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
        int v2 = *(_DWORD *)(result + 48);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t result = *(void *)(result + 32);
      if (result) {
        uint64_t result = sub_1003EE434(result);
      }
    }
  }
  *(_DWORD *)(v1 + 48) = 0;
  return result;
}

uint64_t sub_1003EF0D0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v49 = 0;
        unsigned int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49))return 0; {
        }
          }
        else
        {
          unsigned int v49 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v49);
        if (!sub_1003DE4BC(v8, this, v15) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
        int v16 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v16, 1);
        int v18 = v16 - 1;
        if (v18 < 0 == v17) {
          *((_DWORD *)this + 14) = v18;
        }
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 18) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
        goto LABEL_33;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
LABEL_33:
        *(_DWORD *)(a1 + 48) |= 2u;
        uint64_t v20 = *(void *)(a1 + 16);
        if (!v20) {
          operator new();
        }
        unsigned int v49 = 0;
        int v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49))return 0; {
        }
          }
        else
        {
          unsigned int v49 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v49);
        if (!sub_1003DE4BC(v20, this, v25) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v26 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v26, 1);
        int v27 = v26 - 1;
        if (v27 < 0 == v17) {
          *((_DWORD *)this + 14) = v27;
        }
        int v28 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v28 >= v10 || *v28 != 24) {
          continue;
        }
        uint64_t v11 = v28 + 1;
        *((void *)this + 1) = v11;
LABEL_47:
        unsigned int v49 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49);
          if (!result) {
            return result;
          }
          unsigned int v29 = v49;
        }
        else
        {
          unsigned int v29 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v29 <= 0x12)
        {
          *(_DWORD *)(a1 + 48) |= 4u;
          *(_DWORD *)(a1 + 40) = v29;
        }
        int v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 34) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
LABEL_57:
        *(_DWORD *)(a1 + 48) |= 8u;
        uint64_t v32 = *(void *)(a1 + 24);
        if (!v32) {
          operator new();
        }
        unsigned int v49 = 0;
        unsigned int v33 = (char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49))return 0; {
        }
          }
        else
        {
          unsigned int v49 = *v33;
          *((void *)this + 1) = v33 + 1;
        }
        int v34 = *((_DWORD *)this + 14);
        int v35 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v34 + 1;
        if (v34 >= v35) {
          return 0;
        }
        int v36 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v49);
        if (!sub_1003DE4BC(v32, this, v37) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v36);
        int v38 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v38, 1);
        int v39 = v38 - 1;
        if (v39 < 0 == v17) {
          *((_DWORD *)this + 14) = v39;
        }
        unint64_t v40 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 != 42) {
          continue;
        }
        *((void *)this + 1) = v40 + 1;
LABEL_71:
        *(_DWORD *)(a1 + 48) |= 0x10u;
        uint64_t v41 = *(void *)(a1 + 32);
        if (!v41) {
          operator new();
        }
        unsigned int v49 = 0;
        int v42 = (char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49))return 0; {
        }
          }
        else
        {
          unsigned int v49 = *v42;
          *((void *)this + 1) = v42 + 1;
        }
        int v43 = *((_DWORD *)this + 14);
        int v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 >= v44) {
          return 0;
        }
        int v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v49);
        if (!sub_1003EE4B8(v41, this, v46) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
        int v47 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v47, 1);
        int v48 = v47 - 1;
        if (v48 < 0 == v17) {
          *((_DWORD *)this + 14) = v48;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_47;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_57;
        }
        goto LABEL_21;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
        goto LABEL_71;
      default:
        int v7 = TagFallback & 7;
LABEL_21:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003EF6D0(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489D80 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489D80 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 40), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489D80 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x10) != 0)
  {
LABEL_17:
    uint64_t v10 = *(void *)(v5 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_102489D80 + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  }
  return result;
}

uint64_t sub_1003EF7D4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 48);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_49;
  }
  if ((*(unsigned char *)(a1 + 48) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 48) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_102489D80 + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  uint64_t v4 = (v6 + 2);
  int v3 = *(_DWORD *)(a1 + 48);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_102489D80 + 16);
    }
    int v9 = *(unsigned __int8 *)(v8 + 36);
    if (*(unsigned char *)(v8 + 36))
    {
      int v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0) {
        v10 += 9;
      }
      if ((v9 & 4) != 0) {
        int v9 = v10 + 9;
      }
      else {
        int v9 = v10;
      }
    }
    *(_DWORD *)(v8 + 32) = v9;
    uint64_t v4 = (v4 + v9 + 2);
    int v3 = *(_DWORD *)(a1 + 48);
  }
LABEL_24:
  if ((v3 & 4) != 0)
  {
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 48);
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
    if ((v3 & 8) == 0)
    {
LABEL_26:
      if ((v3 & 0x10) == 0) {
        goto LABEL_49;
      }
      goto LABEL_43;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_26;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_102489D80 + 24);
  }
  int v14 = *(unsigned __int8 *)(v13 + 36);
  if (*(unsigned char *)(v13 + 36))
  {
    int v15 = (v14 << 31 >> 31) & 9;
    if ((v14 & 2) != 0) {
      v15 += 9;
    }
    if ((v14 & 4) != 0) {
      int v14 = v15 + 9;
    }
    else {
      int v14 = v15;
    }
  }
  *(_DWORD *)(v13 + 32) = v14;
  uint64_t v4 = (v4 + v14 + 2);
  if ((*(_DWORD *)(a1 + 48) & 0x10) != 0)
  {
LABEL_43:
    uint64_t v16 = *(void *)(a1 + 32);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_102489D80 + 32);
    }
    BOOL v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003EE8F0(v16, a2);
    int v19 = (int)v17;
    if (v17 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, v18);
    }
    else {
      int v20 = 1;
    }
    uint64_t v4 = (v4 + v19 + v20 + 1);
  }
LABEL_49:
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_1003EF99C(uint64_t a1, void *lpsrc)
{
  sub_1003EEB38(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003EFA24()
{
  return 1;
}

void *sub_1003EFA2C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.WorkoutEvent");
}

void sub_1003EFA3C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489D88 + 8);
      }
      sub_1003DE314(v5, v6);
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v7;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
LABEL_14:
    *(_DWORD *)(a1 + 32) |= 4u;
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489D88 + 16);
    }
    sub_1003EEB38(v8, v9);
  }
}

void sub_1003EFBCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1003EFBE4(void *result)
{
  if ((void *)qword_102489D88 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1003EFC84(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF6E8;
  sub_1003EFBE4(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003EFCD8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF6E8;
  sub_1003EFBE4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003EFD40(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D88;
  if (!qword_102489D88)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D88;
  }
  return result;
}

void sub_1003EFD70()
{
}

uint64_t sub_1003EFDC0(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 32);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 32);
      }
    }
    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1003EF024(result);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1003EFE24(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v10 = *(void *)(a1 + 8);
          if (!v10) {
            operator new();
          }
          unsigned int v34 = 0;
          uint64_t v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34))return 0; {
          }
            }
          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }
          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          if (!sub_1003DE4BC(v10, this, v17) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            uint64_t v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }
        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }
        else
        {
          int v8 = TagFallback & 7;
        }
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      uint64_t v13 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_32:
      unsigned int v33 = 0;
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33);
        if (!result) {
          return result;
        }
        unsigned int v22 = v33;
        int v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        unsigned int v22 = *v13;
        int v23 = v13 + 1;
        *((void *)this + 1) = v23;
      }
      *(_DWORD *)(a1 + 24) = v22;
      int v9 = *(_DWORD *)(a1 + 32) | 2;
      *(_DWORD *)(a1 + 32) = v9;
    }
    while ((unint64_t)v23 >= v12 || *v23 != 26);
    *((void *)this + 1) = v23 + 1;
LABEL_40:
    *(_DWORD *)(a1 + 32) = v9 | 4;
    uint64_t v25 = *(void *)(a1 + 16);
    if (!v25) {
      operator new();
    }
    unsigned int v35 = 0;
    int v26 = (char *)*((void *)this + 1);
    if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35)) {
        return 0;
      }
    }
    else
    {
      unsigned int v35 = *v26;
      *((void *)this + 1) = v26 + 1;
    }
    int v27 = *((_DWORD *)this + 14);
    int v28 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v27 + 1;
    if (v27 >= v28) {
      return 0;
    }
    int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
    if (!sub_1003EF0D0(v25, this, v30) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
    int v31 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v31, 1);
    int v32 = v31 - 1;
    if (v32 < 0 == v19) {
      *((_DWORD *)this + 14) = v32;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1003F01A8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_102489D88 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489D88 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t sub_1003F0254(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_102489D88 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(unsigned char *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }
    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }
  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_102489D88 + 16);
    }
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003EF7D4(v10, a2);
    int v13 = (int)v11;
    if (v11 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, v12);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }
LABEL_28:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1003F0368(uint64_t a1, void *lpsrc)
{
  sub_1003EFA3C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F03F0()
{
  return 1;
}

void *sub_1003F03F8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MotionStateMediator");
}

void sub_1003F0408(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 32) |= 2u;
    uint64_t v7 = *(void *)(a1 + 16);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_102489D90 + 16);
    }
    sub_1003EB554(v7, v8);
    if ((*(_DWORD *)(a2 + 32) & 4) != 0)
    {
LABEL_7:
      char v5 = *(unsigned char *)(a2 + 24);
      *(_DWORD *)(a1 + 32) |= 4u;
      *(unsigned char *)(a1 + 24) = v5;
    }
  }
}

void sub_1003F0540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003F055C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489D90;
  if (!qword_102489D90)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489D90;
  }
  return result;
}

void sub_1003F058C()
{
}

uint64_t sub_1003F05E0(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 32);
  if (v2)
  {
    *(void *)(result + 8) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1003EB9E0(result);
      }
    }
    *(unsigned char *)(v1 + 24) = 0;
  }
  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1003F0624(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        char v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_24;
        }
        *(void *)int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v26) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v26;
        }
        int v11 = *(_DWORD *)(a1 + 32) | 1;
        *(_DWORD *)(a1 + 32) = v11;
        unsigned int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 18)
        {
          *((void *)this + 1) = v12 + 1;
          goto LABEL_18;
        }
      }
      if (v7 == 2) {
        break;
      }
      if (v7 == 3)
      {
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          uint64_t v10 = (char *)*((void *)this + 1);
          unint64_t v9 = *((void *)this + 2);
          goto LABEL_36;
        }
      }
      else
      {
        int v8 = TagFallback & 7;
      }
LABEL_24:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
    int v8 = TagFallback & 7;
    if (v8 != 2) {
      goto LABEL_24;
    }
    int v11 = *(_DWORD *)(a1 + 32);
LABEL_18:
    *(_DWORD *)(a1 + 32) = v11 | 2;
    uint64_t v13 = *(void *)(a1 + 16);
    if (!v13) {
      operator new();
    }
    v26[0] = 0;
    int v14 = (char *)*((void *)this + 1);
    if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v26)) {
        return 0;
      }
    }
    else
    {
      v26[0] = *v14;
      *((void *)this + 1) = v14 + 1;
    }
    int v15 = *((_DWORD *)this + 14);
    int v16 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v15 + 1;
    if (v15 >= v16) {
      return 0;
    }
    int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26[0]);
    if (!sub_1003EBA5C(v13, this, v18) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
    int v19 = *((_DWORD *)this + 14);
    BOOL v20 = __OFSUB__(v19, 1);
    int v21 = v19 - 1;
    if (v21 < 0 == v20) {
      *((_DWORD *)this + 14) = v21;
    }
    unsigned int v22 = (unsigned char *)*((void *)this + 1);
    unint64_t v9 = *((void *)this + 2);
    if ((unint64_t)v22 < v9 && *v22 == 24)
    {
      uint64_t v10 = v22 + 1;
      *((void *)this + 1) = v10;
LABEL_36:
      v26[0] = 0;
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v26);
        if (!result) {
          return result;
        }
        unsigned int v23 = v26[0];
        int v24 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unsigned int v23 = *v10;
        int v24 = (unsigned __int8 *)(v10 + 1);
        *((void *)this + 1) = v24;
      }
      *(unsigned char *)(a1 + 24) = v23 != 0;
      *(_DWORD *)(a1 + 32) |= 4u;
      if (v24 == (unsigned __int8 *)v9 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

void sub_1003F08EC(uint64_t a1, void *lpsrc)
{
  sub_1003F0408(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F0974()
{
  return 1;
}

void *sub_1003F097C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MediatedMotionActivity");
}

BOOL sub_1003F098C(unsigned int a1)
{
  return a1 < 8;
}

float sub_1003F0998(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *(_DWORD *)(a2 + 56);
  if (!(_BYTE)v5) {
    goto LABEL_15;
  }
  if (v5)
  {
    unsigned int v6 = *(_DWORD *)(a2 + 8);
    if (v6 >= 3) {
      sub_101A5EFCC();
    }
    *(_DWORD *)(a1 + 56) |= 1u;
    *(_DWORD *)(a1 + 8) = v6;
    int v5 = *(_DWORD *)(a2 + 56);
  }
  if ((v5 & 2) != 0)
  {
    float result = *(float *)(a2 + 12);
    *(_DWORD *)(a1 + 56) |= 2u;
    *(float *)(a1 + 12) = result;
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }
  float result = *(float *)(a2 + 16);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(float *)(a1 + 16) = result;
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  float result = *(float *)(a2 + 20);
  *(_DWORD *)(a1 + 56) |= 8u;
  *(float *)(a1 + 20) = result;
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 0x10) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_28:
    float result = *(float *)(a2 + 28);
    *(_DWORD *)(a1 + 56) |= 0x20u;
    *(float *)(a1 + 28) = result;
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 0x40) == 0)
    {
LABEL_13:
      if ((v5 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_27:
  float result = *(float *)(a2 + 24);
  *(_DWORD *)(a1 + 56) |= 0x10u;
  *(float *)(a1 + 24) = result;
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_12:
  if ((v5 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_29:
  float result = *(float *)(a2 + 32);
  *(_DWORD *)(a1 + 56) |= 0x40u;
  *(float *)(a1 + 32) = result;
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 0x80) != 0)
  {
LABEL_14:
    float result = *(float *)(a2 + 36);
    *(_DWORD *)(a1 + 56) |= 0x80u;
    *(float *)(a1 + 36) = result;
    int v5 = *(_DWORD *)(a2 + 56);
  }
LABEL_15:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      float result = *(float *)(a2 + 40);
      *(_DWORD *)(a1 + 56) |= 0x100u;
      *(float *)(a1 + 40) = result;
      int v5 = *(_DWORD *)(a2 + 56);
    }
    if ((v5 & 0x200) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 44);
      if (v7 >= 8) {
        sub_101A5EFA0();
      }
      *(_DWORD *)(a1 + 56) |= 0x200u;
      *(_DWORD *)(a1 + 44) = v7;
      int v5 = *(_DWORD *)(a2 + 56);
    }
    if ((v5 & 0x400) != 0)
    {
      float result = *(float *)(a2 + 48);
      *(_DWORD *)(a1 + 56) |= 0x400u;
      *(float *)(a1 + 48) = result;
    }
  }
  return result;
}

void sub_1003F0B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003F0B98(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF7D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003F0BB8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF7D8;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1003F0C0C()
{
}

uint64_t sub_1003F0C68(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 56);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 40) = 0;
    *(_DWORD *)(result + 48) = 0;
  }
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1003F0C98(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        unsigned int v24 = 0;
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!result) {
            return result;
          }
          unsigned int v9 = v24;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
        }
        if (v9 <= 2)
        {
          a1[14] |= 1u;
          a1[2] = v9;
        }
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 21)
        {
          *((void *)this + 1) = v13 + 1;
          goto LABEL_41;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_31;
        }
LABEL_41:
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        a1[3] = v24;
        a1[14] |= 2u;
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 29) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_45:
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        a1[4] = v24;
        a1[14] |= 4u;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 37) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_49:
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        a1[5] = v24;
        a1[14] |= 8u;
        int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 != 45) {
          continue;
        }
        *((void *)this + 1) = v16 + 1;
LABEL_53:
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        a1[6] = v24;
        a1[14] |= 0x10u;
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 53) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_57:
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        a1[7] = v24;
        a1[14] |= 0x20u;
        unsigned int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 61) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_61:
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        a1[8] = v24;
        a1[14] |= 0x40u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 69) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_65:
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        a1[9] = v24;
        a1[14] |= 0x80u;
        BOOL v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 77) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_69:
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        a1[10] = v24;
        a1[14] |= 0x100u;
        int v21 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v21 >= v10 || *v21 != 80) {
          continue;
        }
        int v11 = v21 + 1;
        *((void *)this + 1) = v11;
LABEL_73:
        unsigned int v24 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!result) {
            return result;
          }
          unsigned int v22 = v24;
        }
        else
        {
          unsigned int v22 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v22 <= 7)
        {
          a1[14] |= 0x200u;
          a1[11] = v22;
        }
        unsigned int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 93) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_83:
        unsigned int v24 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24))
        {
          a1[12] = v24;
          a1[14] |= 0x400u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_45;
        }
        goto LABEL_31;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_49;
        }
        goto LABEL_31;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_53;
        }
        goto LABEL_31;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_57;
        }
        goto LABEL_31;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_61;
        }
        goto LABEL_31;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_65;
        }
        goto LABEL_31;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_69;
        }
        goto LABEL_31;
      case 0xAu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_73;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_31;
        }
        goto LABEL_83;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003F11B0(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(float *)(v5 + 12), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, a2, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, a2, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 44), a2, a4);
    if ((*(_DWORD *)(v5 + 56) & 0x400) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, a2, *(float *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x200) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return result;
  }
LABEL_23:
  float v7 = *(float *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, a2, v7, a3);
}

uint64_t sub_1003F131C(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[14];
  if ((_BYTE)v3)
  {
    if (v3)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[2];
      if ((v6 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }
      else if (v6 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
        unsigned int v3 = a1[14];
      }
      else
      {
        unsigned int v4 = 2;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t result = v4 + 5;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0) {
      unsigned int v7 = result + 5;
    }
    else {
      unsigned int v7 = result;
    }
    if ((v3 & 0x200) != 0)
    {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[11];
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 11;
      }
      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
        unsigned int v3 = a1[14];
      }
      else
      {
        int v9 = 2;
      }
      v7 += v9;
    }
    if ((v3 & 0x400) != 0) {
      uint64_t result = v7 + 5;
    }
    else {
      uint64_t result = v7;
    }
  }
  a1[13] = result;
  return result;
}

float sub_1003F1434(uint64_t a1, void *lpsrc)
{
  return sub_1003F0998(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F14BC()
{
  return 1;
}

void *sub_1003F14C4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.BodyMetrics");
}

float sub_1003F14D4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_102489DA0 + 8);
      }
      double v4 = sub_1003DE314(v6, v7);
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return *(float *)&v4;
        }
LABEL_14:
        *(_DWORD *)(a1 + 32) |= 4u;
        uint64_t v9 = *(void *)(a1 + 16);
        if (!v9) {
          operator new();
        }
        uint64_t v10 = *(void *)(a2 + 16);
        if (!v10) {
          uint64_t v10 = *(void *)(qword_102489DA0 + 16);
        }
        *(float *)&double v4 = sub_1003F0998(v9, v10);
        return *(float *)&v4;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_14;
  }
  return *(float *)&v4;
}

void sub_1003F1668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1003F1680(void *result)
{
  if ((void *)qword_102489DA0 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      unsigned int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1003F1720(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF850;
  sub_1003F1680(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003F1774(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AF850;
  sub_1003F1680(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003F17DC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489DA0;
  if (!qword_102489DA0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489DA0;
  }
  return result;
}

void sub_1003F180C()
{
}

uint64_t sub_1003F185C(uint64_t result)
{
  LOBYTE(v1) = *(unsigned char *)(result + 32);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(result + 32);
      }
    }
    *(_DWORD *)(result + 24) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        int v4 = *(_DWORD *)(v3 + 56);
        if ((_BYTE)v4)
        {
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        if ((v4 & 0xFF00) != 0)
        {
          *(void *)(v3 + 40) = 0;
          *(_DWORD *)(v3 + 48) = 0;
        }
        *(_DWORD *)(v3 + 56) = 0;
      }
    }
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003F18CC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v10 = *(void *)(a1 + 8);
          if (!v10) {
            operator new();
          }
          unsigned int v34 = 0;
          int v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34))return 0; {
          }
            }
          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }
          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          if (!sub_1003DE4BC(v10, this, v17) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            uint64_t v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }
        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }
        else
        {
          int v8 = TagFallback & 7;
        }
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      uint64_t v13 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_32:
      unsigned int v33 = 0;
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33);
        if (!result) {
          return result;
        }
        unsigned int v22 = v33;
        unsigned int v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        unsigned int v22 = *v13;
        unsigned int v23 = v13 + 1;
        *((void *)this + 1) = v23;
      }
      *(_DWORD *)(a1 + 24) = v22;
      int v9 = *(_DWORD *)(a1 + 32) | 2;
      *(_DWORD *)(a1 + 32) = v9;
    }
    while ((unint64_t)v23 >= v12 || *v23 != 26);
    *((void *)this + 1) = v23 + 1;
LABEL_40:
    *(_DWORD *)(a1 + 32) = v9 | 4;
    uint64_t v25 = *(_DWORD **)(a1 + 16);
    if (!v25) {
      operator new();
    }
    unsigned int v35 = 0;
    int v26 = (char *)*((void *)this + 1);
    if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35)) {
        return 0;
      }
    }
    else
    {
      unsigned int v35 = *v26;
      *((void *)this + 1) = v26 + 1;
    }
    int v27 = *((_DWORD *)this + 14);
    int v28 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v27 + 1;
    if (v27 >= v28) {
      return 0;
    }
    int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
    if (!sub_1003F0C98(v25, this, v30) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
    int v31 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v31, 1);
    int v32 = v31 - 1;
    if (v32 < 0 == v19) {
      *((_DWORD *)this + 14) = v32;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1003F1C54(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_102489DA0 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489DA0 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t sub_1003F1D00(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_102489DA0 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(unsigned char *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }
    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }
  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(unsigned int **)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(unsigned int **)(qword_102489DA0 + 16);
    }
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003F131C(v10, a2);
    int v13 = (int)v11;
    if (v11 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, v12);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }
LABEL_28:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

float sub_1003F1E14(uint64_t a1, void *lpsrc)
{
  return sub_1003F14D4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F1E9C()
{
  return 1;
}

void *sub_1003F1EA4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.Natalimetry");
}

double sub_1003F1EB4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*(unsigned char *)(a2 + 20))
  {
    *(_DWORD *)(a1 + 20) |= 1u;
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489DA8 + 8);
    }
    return sub_1003DE314(v5, v6);
  }
  return result;
}

void sub_1003F1F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003F1FB4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AF8C8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489DA8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003F2044(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003F1FB4(a1);

  operator delete();
}

uint64_t sub_1003F207C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489DA8;
  if (!qword_102489DA8)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489DA8;
  }
  return result;
}

void sub_1003F20AC()
{
}

uint64_t sub_1003F20F8(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    uint64_t v1 = *(void *)(result + 8);
    if (v1)
    {
      if (*(unsigned char *)(v1 + 36))
      {
        *(void *)(v1 + 8) = 0;
        *(void *)(v1 + 16) = 0;
        *(void *)(v1 + 24) = 0;
      }
      *(_DWORD *)(v1 + 36) = 0;
    }
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1003F2124(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      uint64_t v7 = *(void *)(a1 + 8);
      if (!v7) {
        operator new();
      }
      unsigned int v17 = 0;
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17))return 0; {
      }
        }
      else
      {
        unsigned int v17 = *v8;
        *((void *)this + 1) = v8 + 1;
      }
      int v9 = *((_DWORD *)this + 14);
      int v10 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v9 + 1;
      if (v9 >= v10) {
        return 0;
      }
      int v11 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v17);
      if (!sub_1003DE4BC(v7, this, v12) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v11);
      int v13 = *((_DWORD *)this + 14);
      BOOL v14 = __OFSUB__(v13, 1);
      int v15 = v13 - 1;
      if (v15 < 0 == v14) {
        *((_DWORD *)this + 14) = v15;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1003F22E8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 20))
  {
    uint64_t v5 = *(void *)(result + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_102489DA8 + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
  }
  return result;
}

uint64_t sub_1003F2314(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 20))
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (!v2) {
      uint64_t v2 = *(void *)(qword_102489DA8 + 8);
    }
    int v3 = *(unsigned __int8 *)(v2 + 36);
    if (*(unsigned char *)(v2 + 36))
    {
      int v4 = (v3 << 31 >> 31) & 9;
      if ((v3 & 2) != 0) {
        v4 += 9;
      }
      if ((v3 & 4) != 0) {
        int v3 = v4 + 9;
      }
      else {
        int v3 = v4;
      }
    }
    *(_DWORD *)(v2 + 32) = v3;
    uint64_t v1 = (v3 + 2);
  }
  else
  {
    uint64_t v1 = 0;
  }
  *(_DWORD *)(a1 + 16) = v1;
  return v1;
}

double sub_1003F2378(uint64_t a1, void *lpsrc)
{
  return sub_1003F1EB4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F2400()
{
  return 1;
}

void *sub_1003F2408@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.Timer");
}

float sub_1003F2418(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 52);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if (*(unsigned char *)(a2 + 52))
  {
    *(_DWORD *)(a1 + 52) |= 1u;
    uint64_t v7 = *(void *)(a1 + 8);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_102489DB0 + 8);
    }
    double v4 = sub_1003DE314(v7, v8);
    int v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_19;
    }
  }
  else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  double v4 = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(double *)(a1 + 16) = v4;
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  double v4 = *(double *)(a2 + 24);
  *(_DWORD *)(a1 + 52) |= 4u;
  *(double *)(a1 + 24) = v4;
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  LODWORD(v4) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 52) |= 8u;
  *(_DWORD *)(a1 + 32) = LODWORD(v4);
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    LODWORD(v4) = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 0x20u;
    *(_DWORD *)(a1 + 40) = LODWORD(v4);
    if ((*(_DWORD *)(a2 + 52) & 0x40) != 0) {
      goto LABEL_11;
    }
    return *(float *)&v4;
  }
LABEL_21:
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 52) |= 0x10u;
  *(_DWORD *)(a1 + 36) = LODWORD(v4);
  int v5 = *(_DWORD *)(a2 + 52);
  if ((v5 & 0x20) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v5 & 0x40) != 0)
  {
LABEL_11:
    int v6 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 52) |= 0x40u;
    *(_DWORD *)(a1 + 44) = v6;
  }
  return *(float *)&v4;
}

void sub_1003F25C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003F25E0(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AF940;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489DB0 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003F2670(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003F25E0(a1);

  operator delete();
}

uint64_t sub_1003F26A8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489DB0;
  if (!qword_102489DB0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489DB0;
  }
  return result;
}

void sub_1003F26D8()
{
}

uint64_t sub_1003F2730(uint64_t result)
{
  if (*(unsigned char *)(result + 52))
  {
    if (*(unsigned char *)(result + 52))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
  }
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_1003F2768(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_25;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v28[0] = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v28))return 0; {
        }
          }
        else
        {
          v28[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v28[0]);
        if (!sub_1003DE4BC(v8, this, v15) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
        int v16 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v16, 1);
        int v18 = v16 - 1;
        if (v18 < 0 == v17) {
          *((_DWORD *)this + 14) = v18;
        }
        BOOL v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 17) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
        goto LABEL_38;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_25;
        }
LABEL_38:
        *(void *)int v28 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v28) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v28;
        }
        *(_DWORD *)(a1 + 52) |= 2u;
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 25) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_42:
        *(void *)int v28 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v28) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v28;
        }
        *(_DWORD *)(a1 + 52) |= 4u;
        int v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 37) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
LABEL_46:
        v28[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v28) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 32) = v28[0];
        *(_DWORD *)(a1 + 52) |= 8u;
        unsigned int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 45) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_50:
        v28[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v28) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 36) = v28[0];
        *(_DWORD *)(a1 + 52) |= 0x10u;
        unsigned int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 53) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_54:
        v28[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v28))
        {
          *(_DWORD *)(a1 + 40) = v28[0];
          *(_DWORD *)(a1 + 52) |= 0x20u;
          unsigned int v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v24 < v10 && *v24 == 56)
          {
            int v11 = v24 + 1;
            *((void *)this + 1) = v11;
LABEL_58:
            v28[0] = 0;
            if ((unint64_t)v11 >= v10 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v28);
              if (!result) {
                return result;
              }
              unsigned int v25 = v28[0];
              int v26 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v10 = *((void *)this + 2);
            }
            else
            {
              unsigned int v25 = *v11;
              int v26 = (unsigned __int8 *)(v11 + 1);
              *((void *)this + 1) = v26;
            }
            *(_DWORD *)(a1 + 44) = v25;
            *(_DWORD *)(a1 + 52) |= 0x40u;
            if (v26 == (unsigned __int8 *)v10
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_42;
        }
        goto LABEL_25;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_46;
        }
        goto LABEL_25;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_50;
        }
        goto LABEL_25;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_54;
        }
        goto LABEL_25;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_58;
      default:
        int v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003F2BB4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489DB0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(float *)(v5 + 40), a3);
    if ((*(_DWORD *)(v5 + 52) & 0x40) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_17:
  int v8 = *(_DWORD *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v8, (int)a2, a4);
}

uint64_t sub_1003F2CC0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 52))
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489DB0 + 8);
      }
      int v7 = *(unsigned __int8 *)(v6 + 36);
      if (*(unsigned char *)(v6 + 36))
      {
        int v8 = (v7 << 31 >> 31) & 9;
        if ((v7 & 2) != 0) {
          v8 += 9;
        }
        if ((v7 & 4) != 0) {
          int v7 = v8 + 9;
        }
        else {
          int v7 = v8;
        }
      }
      *(_DWORD *)(v6 + 32) = v7;
      unsigned int v4 = v7 + 2;
      int v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t v5 = v4 + 5;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x40) != 0)
    {
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
      if ((v9 & 0x80000000) != 0)
      {
        int v10 = 11;
      }
      else if (v9 >= 0x80)
      {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      }
      else
      {
        int v10 = 2;
      }
      uint64_t v5 = (v10 + v5);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(_DWORD *)(a1 + 48) = v5;
  return v5;
}

float sub_1003F2DBC(uint64_t a1, void *lpsrc)
{
  return sub_1003F2418(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F2E44()
{
  return 1;
}

void *sub_1003F2E4C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.DigitalElevationModel");
}

void sub_1003F2E5C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  int v4 = *(_DWORD *)(a2 + 96);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 96) |= 1u;
    uint64_t v7 = *(void *)(a1 + 8);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_102489DB8 + 8);
    }
    sub_1003DE314(v7, v8);
    int v4 = *(_DWORD *)(a2 + 96);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_28;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 96) |= 2u;
  *(void *)(a1 + 16) = v9;
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v10 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 96) |= 4u;
  *(void *)(a1 + 24) = v10;
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v11 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 96) |= 8u;
  *(void *)(a1 + 32) = v11;
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_31:
    uint64_t v13 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 96) |= 0x20u;
    *(void *)(a1 + 48) = v13;
    int v4 = *(_DWORD *)(a2 + 96);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_30:
  uint64_t v12 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 96) |= 0x10u;
  *(void *)(a1 + 40) = v12;
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_32:
  uint64_t v14 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 96) |= 0x40u;
  *(void *)(a1 + 56) = v14;
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v5 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 96) |= 0x80u;
    *(void *)(a1 + 64) = v5;
    int v4 = *(_DWORD *)(a2 + 96);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v15 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 96) |= 0x100u;
    *(void *)(a1 + 72) = v15;
    int v4 = *(_DWORD *)(a2 + 96);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_36;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v16 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 96) |= 0x200u;
  *(void *)(a1 + 80) = v16;
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  char v17 = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 96) |= 0x400u;
  *(unsigned char *)(a1 + 88) = v17;
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }
LABEL_37:
  char v18 = *(unsigned char *)(a2 + 89);
  *(_DWORD *)(a1 + 96) |= 0x800u;
  *(unsigned char *)(a1 + 89) = v18;
  int v4 = *(_DWORD *)(a2 + 96);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      return;
    }
    goto LABEL_20;
  }
LABEL_38:
  char v19 = *(unsigned char *)(a2 + 90);
  *(_DWORD *)(a1 + 96) |= 0x1000u;
  *(unsigned char *)(a1 + 90) = v19;
  if ((*(_DWORD *)(a2 + 96) & 0x2000) == 0) {
    return;
  }
LABEL_20:
  char v6 = *(unsigned char *)(a2 + 91);
  *(_DWORD *)(a1 + 96) |= 0x2000u;
  *(unsigned char *)(a1 + 91) = v6;
}

void sub_1003F30F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003F3110(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AF9B8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489DB8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003F31A0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003F3110(a1);

  operator delete();
}

void sub_1003F31D8()
{
}

uint64_t sub_1003F323C(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 96);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(result + 96);
      }
    }
    *(void *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 16) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 72) = 0;
    *(void *)(result + 80) = 0;
    *(_DWORD *)(result + 88) = 0;
  }
  *(_DWORD *)(result + 96) = 0;
  return result;
}

uint64_t sub_1003F3294(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 96) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v41[0] = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v41))return 0; {
        }
          }
        else
        {
          v41[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41[0]);
        if (!sub_1003DE4BC(v8, this, v18) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        unsigned int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 17) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
        goto LABEL_52;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_39;
        }
LABEL_52:
        *(void *)uint64_t v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v41) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v41;
        }
        *(_DWORD *)(a1 + 96) |= 2u;
        unsigned int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 25) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_56:
        *(void *)uint64_t v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v41) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v41;
        }
        *(_DWORD *)(a1 + 96) |= 4u;
        unsigned int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 33) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_60:
        *(void *)uint64_t v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v41) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v41;
        }
        *(_DWORD *)(a1 + 96) |= 8u;
        unsigned int v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 41) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_64:
        *(void *)uint64_t v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v41) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v41;
        }
        *(_DWORD *)(a1 + 96) |= 0x10u;
        int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 49) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_68:
        *(void *)uint64_t v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v41) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v41;
        }
        *(_DWORD *)(a1 + 96) |= 0x20u;
        int v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 != 57) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
LABEL_72:
        *(void *)uint64_t v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v41) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v41;
        }
        *(_DWORD *)(a1 + 96) |= 0x40u;
        int v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 65) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_76:
        *(void *)uint64_t v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v41) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v41;
        }
        *(_DWORD *)(a1 + 96) |= 0x80u;
        int v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 73) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_80:
        *(void *)uint64_t v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v41) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v41;
        }
        *(_DWORD *)(a1 + 96) |= 0x100u;
        unsigned int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 81) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_84:
        *(void *)uint64_t v41 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v41))
        {
          *(void *)(a1 + 80) = *(void *)v41;
          *(_DWORD *)(a1 + 96) |= 0x200u;
          int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v31 < v10 && *v31 == 88)
          {
            uint64_t v11 = v31 + 1;
            *((void *)this + 1) = v11;
LABEL_88:
            v41[0] = 0;
            if ((unint64_t)v11 >= v10 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v41);
              if (!result) {
                return result;
              }
              unsigned int v32 = v41[0];
              unsigned int v33 = (unsigned char *)*((void *)this + 1);
              unint64_t v10 = *((void *)this + 2);
            }
            else
            {
              unsigned int v32 = *v11;
              unsigned int v33 = v11 + 1;
              *((void *)this + 1) = v33;
            }
            *(unsigned char *)(a1 + 88) = v32 != 0;
            *(_DWORD *)(a1 + 96) |= 0x400u;
            if ((unint64_t)v33 < v10 && *v33 == 96)
            {
              uint64_t v12 = v33 + 1;
              *((void *)this + 1) = v12;
LABEL_96:
              v41[0] = 0;
              if ((unint64_t)v12 >= v10 || *v12 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v41);
                if (!result) {
                  return result;
                }
                unsigned int v35 = v41[0];
                int v36 = (unsigned char *)*((void *)this + 1);
                unint64_t v10 = *((void *)this + 2);
              }
              else
              {
                unsigned int v35 = *v12;
                int v36 = v12 + 1;
                *((void *)this + 1) = v36;
              }
              *(unsigned char *)(a1 + 89) = v35 != 0;
              *(_DWORD *)(a1 + 96) |= 0x800u;
              if ((unint64_t)v36 < v10 && *v36 == 104)
              {
                uint64_t v13 = v36 + 1;
                *((void *)this + 1) = v13;
LABEL_104:
                v41[0] = 0;
                if ((unint64_t)v13 >= v10 || *v13 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v41);
                  if (!result) {
                    return result;
                  }
                  unsigned int v37 = v41[0];
                  int v38 = (unsigned char *)*((void *)this + 1);
                  unint64_t v10 = *((void *)this + 2);
                }
                else
                {
                  unsigned int v37 = *v13;
                  int v38 = v13 + 1;
                  *((void *)this + 1) = v38;
                }
                *(unsigned char *)(a1 + 90) = v37 != 0;
                *(_DWORD *)(a1 + 96) |= 0x1000u;
                if ((unint64_t)v38 < v10 && *v38 == 112)
                {
                  uint64_t v14 = v38 + 1;
                  *((void *)this + 1) = v14;
LABEL_112:
                  v41[0] = 0;
                  if ((unint64_t)v14 >= v10 || *v14 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v41);
                    if (!result) {
                      return result;
                    }
                    unsigned int v39 = v41[0];
                    unint64_t v40 = (unsigned __int8 *)*((void *)this + 1);
                    unint64_t v10 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v39 = *v14;
                    unint64_t v40 = (unsigned __int8 *)(v14 + 1);
                    *((void *)this + 1) = v40;
                  }
                  *(unsigned char *)(a1 + 91) = v39 != 0;
                  *(_DWORD *)(a1 + 96) |= 0x2000u;
                  if (v40 == (unsigned __int8 *)v10
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)this + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_56;
        }
        goto LABEL_39;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_60;
        }
        goto LABEL_39;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_64;
        }
        goto LABEL_39;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_68;
        }
        goto LABEL_39;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_72;
        }
        goto LABEL_39;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_76;
        }
        goto LABEL_39;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_80;
        }
        goto LABEL_39;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_84;
        }
        goto LABEL_39;
      case 0xBu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_88;
      case 0xCu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_96;
      case 0xDu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_104;
      case 0xEu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_112;
      default:
        int v7 = TagFallback & 7;
LABEL_39:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003F39E4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 96);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489DB8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 88), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
LABEL_30:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 90), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 96) & 0x2000) == 0) {
      return result;
    }
    goto LABEL_31;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned __int8 *)(v5 + 89), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x1000) != 0) {
    goto LABEL_30;
  }
LABEL_14:
  if ((v6 & 0x2000) == 0) {
    return result;
  }
LABEL_31:
  int v8 = *(unsigned __int8 *)(v5 + 91);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v8, (BOOL)a2, a4);
}

uint64_t sub_1003F3BB4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 96);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(a1 + 8);
      if (!v2) {
        uint64_t v2 = *(void *)(qword_102489DB8 + 8);
      }
      int v3 = *(unsigned __int8 *)(v2 + 36);
      if (*(unsigned char *)(v2 + 36))
      {
        int v4 = (v3 << 31 >> 31) & 9;
        if ((v3 & 2) != 0) {
          v4 += 9;
        }
        if ((v3 & 4) != 0) {
          int v3 = v4 + 9;
        }
        else {
          int v3 = v4;
        }
      }
      *(_DWORD *)(v2 + 32) = v3;
      LODWORD(v2) = v3 + 2;
      int v1 = *(_DWORD *)(a1 + 96);
    }
    else
    {
      LODWORD(v2) = 0;
    }
    if ((v1 & 2) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 4) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 8) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x10) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x20) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x40) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x80) != 0) {
      uint64_t v2 = (v2 + 9);
    }
    else {
      uint64_t v2 = v2;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    if ((v1 & 0x100) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x200) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x400) != 0) {
      LODWORD(v2) = v2 + 2;
    }
    if ((v1 & 0x800) != 0) {
      LODWORD(v2) = v2 + 2;
    }
    if ((v1 & 0x1000) != 0) {
      LODWORD(v2) = v2 + 2;
    }
    if ((v1 & 0x2000) != 0) {
      uint64_t v2 = (v2 + 2);
    }
    else {
      uint64_t v2 = v2;
    }
  }
  *(_DWORD *)(a1 + 92) = v2;
  return v2;
}

void sub_1003F3CD0(uint64_t a1, void *lpsrc)
{
  sub_1003F2E5C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F3D58()
{
  return 1;
}

void *sub_1003F3D60@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.DirectionOfTravel");
}

void sub_1003F3D70(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489DC0 + 8);
      }
      sub_1003DE314(v5, v6);
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v7;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
LABEL_14:
    *(_DWORD *)(a1 + 32) |= 4u;
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489DC0 + 16);
    }
    sub_1003F2E5C(v8, v9);
  }
}

void sub_1003F3F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1003F3F24(void *result)
{
  if ((void *)qword_102489DC0 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1003F3FC4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFA30;
  sub_1003F3F24(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003F4018(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFA30;
  sub_1003F3F24(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003F4080(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489DC0;
  if (!qword_102489DC0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489DC0;
  }
  return result;
}

void sub_1003F40B0()
{
}

uint64_t sub_1003F4100(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 32);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 32);
      }
    }
    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1003F323C(result);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1003F4164(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v10 = *(void *)(a1 + 8);
          if (!v10) {
            operator new();
          }
          unsigned int v34 = 0;
          uint64_t v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34))return 0; {
          }
            }
          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }
          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          if (!sub_1003DE4BC(v10, this, v17) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            uint64_t v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }
        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }
        else
        {
          int v8 = TagFallback & 7;
        }
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      uint64_t v13 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_32:
      unsigned int v33 = 0;
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33);
        if (!result) {
          return result;
        }
        unsigned int v22 = v33;
        unsigned int v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        unsigned int v22 = *v13;
        unsigned int v23 = v13 + 1;
        *((void *)this + 1) = v23;
      }
      *(_DWORD *)(a1 + 24) = v22;
      int v9 = *(_DWORD *)(a1 + 32) | 2;
      *(_DWORD *)(a1 + 32) = v9;
    }
    while ((unint64_t)v23 >= v12 || *v23 != 26);
    *((void *)this + 1) = v23 + 1;
LABEL_40:
    *(_DWORD *)(a1 + 32) = v9 | 4;
    uint64_t v25 = *(void *)(a1 + 16);
    if (!v25) {
      operator new();
    }
    unsigned int v35 = 0;
    int v26 = (char *)*((void *)this + 1);
    if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35)) {
        return 0;
      }
    }
    else
    {
      unsigned int v35 = *v26;
      *((void *)this + 1) = v26 + 1;
    }
    int v27 = *((_DWORD *)this + 14);
    int v28 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v27 + 1;
    if (v27 >= v28) {
      return 0;
    }
    int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
    if (!sub_1003F3294(v25, this, v30) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
    int v31 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v31, 1);
    int v32 = v31 - 1;
    if (v32 < 0 == v19) {
      *((_DWORD *)this + 14) = v32;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1003F44F4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_102489DC0 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489DC0 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t sub_1003F45A0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_102489DC0 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(unsigned char *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }
    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }
  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_102489DC0 + 16);
    }
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003F3BB4(v10);
    int v13 = (int)v11;
    if (v11 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, v12);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }
LABEL_28:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1003F46B4(uint64_t a1, void *lpsrc)
{
  sub_1003F3D70(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F473C()
{
  return 1;
}

void *sub_1003F4744@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MapVector");
}

void sub_1003F4754(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 48);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 48))
    {
      *(_DWORD *)(a1 + 48) |= 1u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_102489DC8 + 8);
      }
      sub_1003DE314(v6, v7);
      int v4 = *(_DWORD *)(a2 + 48);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_20;
      }
    }
    else if ((*(unsigned char *)(a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 2u;
    *(void *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_21;
    }
LABEL_20:
    uint64_t v9 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 48) |= 4u;
    *(void *)(a1 + 24) = v9;
    int v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
LABEL_21:
    uint64_t v10 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 48) |= 8u;
    *(void *)(a1 + 32) = v10;
    int v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
LABEL_22:
    char v11 = *(unsigned char *)(a2 + 40);
    *(_DWORD *)(a1 + 48) |= 0x10u;
    *(unsigned char *)(a1 + 40) = v11;
    int v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_24;
    }
LABEL_23:
    char v12 = *(unsigned char *)(a2 + 41);
    *(_DWORD *)(a1 + 48) |= 0x20u;
    *(unsigned char *)(a1 + 41) = v12;
    int v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_12;
    }
LABEL_24:
    char v13 = *(unsigned char *)(a2 + 42);
    *(_DWORD *)(a1 + 48) |= 0x40u;
    *(unsigned char *)(a1 + 42) = v13;
    if ((*(_DWORD *)(a2 + 48) & 0x80) == 0) {
      return;
    }
LABEL_12:
    char v5 = *(unsigned char *)(a2 + 43);
    *(_DWORD *)(a1 + 48) |= 0x80u;
    *(unsigned char *)(a1 + 43) = v5;
  }
}

void sub_1003F4924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003F493C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AFAA8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489DC8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003F49CC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003F493C(a1);

  operator delete();
}

void sub_1003F4A04()
{
}

uint64_t sub_1003F4A5C(uint64_t result)
{
  if (*(unsigned char *)(result + 48))
  {
    if (*(unsigned char *)(result + 48))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(void *)(result + 32) = 0;
  }
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1003F4A98(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v35[0] = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35))return 0; {
        }
          }
        else
        {
          v35[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35[0]);
        if (!sub_1003DE4BC(v8, this, v18) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        unsigned int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 17) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
        goto LABEL_40;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
LABEL_40:
        *(void *)unsigned int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v35) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v35;
        }
        *(_DWORD *)(a1 + 48) |= 2u;
        unsigned int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 25) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_44:
        *(void *)unsigned int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v35) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v35;
        }
        *(_DWORD *)(a1 + 48) |= 4u;
        unsigned int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 33) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_48:
        *(void *)unsigned int v35 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v35))
        {
          *(void *)(a1 + 32) = *(void *)v35;
          *(_DWORD *)(a1 + 48) |= 8u;
          uint64_t v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v25 < v10 && *v25 == 40)
          {
            char v11 = v25 + 1;
            *((void *)this + 1) = v11;
LABEL_52:
            v35[0] = 0;
            if ((unint64_t)v11 >= v10 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
              if (!result) {
                return result;
              }
              unsigned int v26 = v35[0];
              int v27 = (unsigned char *)*((void *)this + 1);
              unint64_t v10 = *((void *)this + 2);
            }
            else
            {
              unsigned int v26 = *v11;
              int v27 = v11 + 1;
              *((void *)this + 1) = v27;
            }
            *(unsigned char *)(a1 + 40) = v26 != 0;
            *(_DWORD *)(a1 + 48) |= 0x10u;
            if ((unint64_t)v27 < v10 && *v27 == 48)
            {
              char v12 = v27 + 1;
              *((void *)this + 1) = v12;
LABEL_60:
              v35[0] = 0;
              if ((unint64_t)v12 >= v10 || *v12 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
                if (!result) {
                  return result;
                }
                unsigned int v29 = v35[0];
                unsigned int v30 = (unsigned char *)*((void *)this + 1);
                unint64_t v10 = *((void *)this + 2);
              }
              else
              {
                unsigned int v29 = *v12;
                unsigned int v30 = v12 + 1;
                *((void *)this + 1) = v30;
              }
              *(unsigned char *)(a1 + 41) = v29 != 0;
              *(_DWORD *)(a1 + 48) |= 0x20u;
              if ((unint64_t)v30 < v10 && *v30 == 56)
              {
                char v13 = v30 + 1;
                *((void *)this + 1) = v13;
LABEL_68:
                v35[0] = 0;
                if ((unint64_t)v13 >= v10 || *v13 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
                  if (!result) {
                    return result;
                  }
                  unsigned int v31 = v35[0];
                  int v32 = (unsigned char *)*((void *)this + 1);
                  unint64_t v10 = *((void *)this + 2);
                }
                else
                {
                  unsigned int v31 = *v13;
                  int v32 = v13 + 1;
                  *((void *)this + 1) = v32;
                }
                *(unsigned char *)(a1 + 42) = v31 != 0;
                *(_DWORD *)(a1 + 48) |= 0x40u;
                if ((unint64_t)v32 < v10 && *v32 == 64)
                {
                  int v14 = v32 + 1;
                  *((void *)this + 1) = v14;
LABEL_76:
                  v35[0] = 0;
                  if ((unint64_t)v14 >= v10 || *v14 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v35);
                    if (!result) {
                      return result;
                    }
                    unsigned int v33 = v35[0];
                    unsigned int v34 = (unsigned __int8 *)*((void *)this + 1);
                    unint64_t v10 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v33 = *v14;
                    unsigned int v34 = (unsigned __int8 *)(v14 + 1);
                    *((void *)this + 1) = v34;
                  }
                  *(unsigned char *)(a1 + 43) = v33 != 0;
                  *(_DWORD *)(a1 + 48) |= 0x80u;
                  if (v34 == (unsigned __int8 *)v10
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)this + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_44;
        }
        goto LABEL_27;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_48;
        }
        goto LABEL_27;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        char v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_52;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        char v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_60;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        char v13 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_68;
      case 8u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_76;
      default:
        int v7 = TagFallback & 7;
LABEL_27:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003F4FC0(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489DC8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 40), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 42), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 48) & 0x80) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 41), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x40) != 0) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return result;
  }
LABEL_19:
  int v8 = *(unsigned __int8 *)(v5 + 43);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v8, (BOOL)a2, a4);
}

uint64_t sub_1003F50E8(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 48);
  if (*(unsigned char *)(a1 + 48))
  {
    if (v1)
    {
      uint64_t v1 = *(void *)(a1 + 8);
      if (!v1) {
        uint64_t v1 = *(void *)(qword_102489DC8 + 8);
      }
      int v3 = *(unsigned __int8 *)(v1 + 36);
      if (*(unsigned char *)(v1 + 36))
      {
        int v4 = (v3 << 31 >> 31) & 9;
        if ((v3 & 2) != 0) {
          v4 += 9;
        }
        if ((v3 & 4) != 0) {
          int v3 = v4 + 9;
        }
        else {
          int v3 = v4;
        }
      }
      *(_DWORD *)(v1 + 32) = v3;
      unsigned int v2 = v3 + 2;
      LODWORD(v1) = *(_DWORD *)(a1 + 48);
    }
    else
    {
      unsigned int v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x80) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 44) = v1;
  return v1;
}

void sub_1003F51A8(uint64_t a1, void *lpsrc)
{
  sub_1003F4754(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F5230()
{
  return 1;
}

void *sub_1003F5238@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.TunnelBridgeAssistance");
}

void sub_1003F5248(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489DD0 + 8);
      }
      sub_1003DE314(v5, v6);
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v7;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
LABEL_14:
    *(_DWORD *)(a1 + 32) |= 4u;
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489DD0 + 16);
    }
    sub_1003F4754(v8, v9);
  }
}

void sub_1003F53D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1003F53F0(void *result)
{
  if ((void *)qword_102489DD0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1003F5490(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFB20;
  sub_1003F53F0(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003F54E4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFB20;
  sub_1003F53F0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003F554C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489DD0;
  if (!qword_102489DD0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489DD0;
  }
  return result;
}

void sub_1003F557C()
{
}

uint64_t sub_1003F55CC(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 32);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 32);
      }
    }
    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1003F4A5C(result);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1003F5630(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v10 = *(void *)(a1 + 8);
          if (!v10) {
            operator new();
          }
          unsigned int v34 = 0;
          char v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34))return 0; {
          }
            }
          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }
          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          if (!sub_1003DE4BC(v10, this, v17) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            char v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }
        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }
        else
        {
          int v8 = TagFallback & 7;
        }
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      char v13 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_32:
      unsigned int v33 = 0;
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33);
        if (!result) {
          return result;
        }
        unsigned int v22 = v33;
        unsigned int v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        unsigned int v22 = *v13;
        unsigned int v23 = v13 + 1;
        *((void *)this + 1) = v23;
      }
      *(_DWORD *)(a1 + 24) = v22;
      int v9 = *(_DWORD *)(a1 + 32) | 2;
      *(_DWORD *)(a1 + 32) = v9;
    }
    while ((unint64_t)v23 >= v12 || *v23 != 26);
    *((void *)this + 1) = v23 + 1;
LABEL_40:
    *(_DWORD *)(a1 + 32) = v9 | 4;
    uint64_t v25 = *(void *)(a1 + 16);
    if (!v25) {
      operator new();
    }
    unsigned int v35 = 0;
    unsigned int v26 = (char *)*((void *)this + 1);
    if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35)) {
        return 0;
      }
    }
    else
    {
      unsigned int v35 = *v26;
      *((void *)this + 1) = v26 + 1;
    }
    int v27 = *((_DWORD *)this + 14);
    int v28 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v27 + 1;
    if (v27 >= v28) {
      return 0;
    }
    int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
    if (!sub_1003F4A98(v25, this, v30) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
    int v31 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v31, 1);
    int v32 = v31 - 1;
    if (v32 < 0 == v19) {
      *((_DWORD *)this + 14) = v32;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1003F59B4(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_102489DD0 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489DD0 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t sub_1003F5A60(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_102489DD0 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(unsigned char *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }
    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }
  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_102489DD0 + 16);
    }
    char v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003F50E8(v10);
    int v13 = (int)v11;
    if (v11 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, v12);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }
LABEL_28:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1003F5B74(uint64_t a1, void *lpsrc)
{
  sub_1003F5248(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F5BFC()
{
  return 1;
}

void *sub_1003F5C04@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.TunnelBridgeNotification");
}

double sub_1003F5C14(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  int v5 = *(_DWORD *)(a2 + 124);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *(_DWORD *)(a1 + 124) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489DD8 + 8);
    }
    double result = sub_1003DE314(v6, v7);
    int v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *(double *)(a2 + 16);
  *(_DWORD *)(a1 + 124) |= 2u;
  *(double *)(a1 + 16) = result;
  int v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  double result = *(double *)(a2 + 24);
  *(_DWORD *)(a1 + 124) |= 4u;
  *(double *)(a1 + 24) = result;
  int v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  double result = *(double *)(a2 + 32);
  *(_DWORD *)(a1 + 124) |= 8u;
  *(double *)(a1 + 32) = result;
  int v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_32:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 124) |= 0x20u;
    *(double *)(a1 + 48) = result;
    int v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_31:
  double result = *(double *)(a2 + 40);
  *(_DWORD *)(a1 + 124) |= 0x10u;
  *(double *)(a1 + 40) = result;
  int v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x20) != 0) {
    goto LABEL_32;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_33:
  unsigned int v8 = *(_DWORD *)(a2 + 72);
  if (v8 >= 3) {
    sub_101A5EFF8();
  }
  *(_DWORD *)(a1 + 124) |= 0x40u;
  *(_DWORD *)(a1 + 72) = v8;
  int v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *(double *)(a2 + 56);
    *(_DWORD *)(a1 + 124) |= 0x80u;
    *(double *)(a1 + 56) = result;
    int v5 = *(_DWORD *)(a2 + 124);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0) {
    return result;
  }
  if ((v5 & 0x100) != 0)
  {
    double result = *(double *)(a2 + 64);
    *(_DWORD *)(a1 + 124) |= 0x100u;
    *(double *)(a1 + 64) = result;
    int v5 = *(_DWORD *)(a2 + 124);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_38;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  double result = *(double *)(a2 + 80);
  *(_DWORD *)(a1 + 124) |= 0x200u;
  *(double *)(a1 + 80) = result;
  int v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  char v9 = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 124) |= 0x400u;
  *(unsigned char *)(a1 + 76) = v9;
  int v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = *(double *)(a2 + 88);
  *(_DWORD *)(a1 + 124) |= 0x800u;
  *(double *)(a1 + 88) = result;
  int v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_40:
  double result = *(double *)(a2 + 96);
  *(_DWORD *)(a1 + 124) |= 0x1000u;
  *(double *)(a1 + 96) = result;
  int v5 = *(_DWORD *)(a2 + 124);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_41:
  double result = *(double *)(a2 + 104);
  *(_DWORD *)(a1 + 124) |= 0x2000u;
  *(double *)(a1 + 104) = result;
  if ((*(_DWORD *)(a2 + 124) & 0x4000) != 0)
  {
LABEL_21:
    double result = *(double *)(a2 + 112);
    *(_DWORD *)(a1 + 124) |= 0x4000u;
    *(double *)(a1 + 112) = result;
  }
  return result;
}

void sub_1003F5EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003F5EF4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AFB98;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489DD8 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003F5F84(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003F5EF4(a1);

  operator delete();
}

void sub_1003F5FBC()
{
}

uint64_t sub_1003F6024(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 124);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(result + 124);
      }
    }
    *(_DWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 64) = 0;
    *(unsigned char *)(result + 76) = 0;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(void *)(result + 112) = 0;
  }
  *(_DWORD *)(result + 124) = 0;
  return result;
}

uint64_t sub_1003F6088(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 124) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v38[0] = 0;
        char v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38))return 0; {
        }
          }
        else
        {
          v38[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38[0]);
        if (!sub_1003DE4BC(v8, this, v17) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        int v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 17) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
        goto LABEL_53;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_41;
        }
LABEL_53:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 124) |= 2u;
        unsigned int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 25) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_57:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 124) |= 4u;
        unsigned int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 33) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_61:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 124) |= 8u;
        unsigned int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 41) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_65:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 124) |= 0x10u;
        uint64_t v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 49) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_69:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 124) |= 0x20u;
        unsigned int v26 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v26 >= v10 || *v26 != 56) {
          continue;
        }
        char v11 = v26 + 1;
        *((void *)this + 1) = v11;
LABEL_73:
        v38[0] = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
          if (!result) {
            return result;
          }
          unsigned int v27 = v38[0];
        }
        else
        {
          unsigned int v27 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v27 <= 2)
        {
          *(_DWORD *)(a1 + 124) |= 0x40u;
          *(_DWORD *)(a1 + 72) = v27;
        }
        int v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 65) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_83:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 124) |= 0x80u;
        unsigned int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 73) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_87:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 124) |= 0x100u;
        int v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 81) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
LABEL_91:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 80) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 124) |= 0x200u;
        int v32 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v32 >= v12 || *v32 != 88) {
          continue;
        }
        int v13 = v32 + 1;
        *((void *)this + 1) = v13;
LABEL_95:
        v38[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
          if (!result) {
            return result;
          }
          unsigned int v33 = v38[0];
          unsigned int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v33 = *v13;
          unsigned int v34 = v13 + 1;
          *((void *)this + 1) = v34;
        }
        *(unsigned char *)(a1 + 76) = v33 != 0;
        *(_DWORD *)(a1 + 124) |= 0x400u;
        if ((unint64_t)v34 >= v12 || *v34 != 97) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
LABEL_103:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 88) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 124) |= 0x800u;
        unsigned int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 105) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_107:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 96) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 124) |= 0x1000u;
        int v36 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v36 >= *((void *)this + 2) || *v36 != 113) {
          continue;
        }
        *((void *)this + 1) = v36 + 1;
LABEL_111:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 104) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 124) |= 0x2000u;
        unsigned int v37 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 != 121) {
          continue;
        }
        *((void *)this + 1) = v37 + 1;
LABEL_115:
        *(void *)int v38 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38))
        {
          *(void *)(a1 + 112) = *(void *)v38;
          *(_DWORD *)(a1 + 124) |= 0x4000u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_57;
        }
        goto LABEL_41;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_61;
        }
        goto LABEL_41;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_65;
        }
        goto LABEL_41;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_69;
        }
        goto LABEL_41;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        char v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_73;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_83;
        }
        goto LABEL_41;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_87;
        }
        goto LABEL_41;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_91;
        }
        goto LABEL_41;
      case 0xBu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_95;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_103;
        }
        goto LABEL_41;
      case 0xDu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_107;
        }
        goto LABEL_41;
      case 0xEu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_111;
        }
        goto LABEL_41;
      case 0xFu:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_41;
        }
        goto LABEL_115;
      default:
        int v7 = TagFallback & 7;
LABEL_41:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003F67E0(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 124);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489DD8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 124);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 72), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 76), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
LABEL_32:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (int)a2, *(double *)(v5 + 104), a3);
    if ((*(_DWORD *)(v5 + 124) & 0x4000) == 0) {
      return result;
    }
    goto LABEL_33;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x2000) != 0) {
    goto LABEL_32;
  }
LABEL_15:
  if ((v6 & 0x4000) == 0) {
    return result;
  }
LABEL_33:
  double v8 = *(double *)(v5 + 112);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (int)a2, v8, a3);
}

uint64_t sub_1003F69CC(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 124);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489DD8 + 8);
      }
      int v7 = *(unsigned __int8 *)(v6 + 36);
      if (*(unsigned char *)(v6 + 36))
      {
        int v8 = (v7 << 31 >> 31) & 9;
        if ((v7 & 2) != 0) {
          v8 += 9;
        }
        if ((v7 & 4) != 0) {
          int v7 = v8 + 9;
        }
        else {
          int v7 = v8;
        }
      }
      *(_DWORD *)(v6 + 32) = v7;
      int v4 = v7 + 2;
      int v3 = *(_DWORD *)(a1 + 124);
    }
    else
    {
      int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      unsigned int v9 = v4 + 9;
    }
    else {
      unsigned int v9 = v4;
    }
    if ((v3 & 0x40) != 0)
    {
      unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
      if ((v10 & 0x80000000) != 0)
      {
        int v11 = 11;
      }
      else if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 124);
      }
      else
      {
        int v11 = 2;
      }
      v9 += v11;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t result = v9 + 9;
    }
    else {
      uint64_t result = v9;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v12 = result + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v12 = result;
    }
    if ((v3 & 0x200) != 0) {
      v12 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v12 += 2;
    }
    if ((v3 & 0x800) != 0) {
      v12 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      v12 += 9;
    }
    if ((v3 & 0x2000) != 0) {
      v12 += 9;
    }
    if ((v3 & 0x4000) != 0) {
      uint64_t result = v12 + 9;
    }
    else {
      uint64_t result = v12;
    }
  }
  *(_DWORD *)(a1 + 120) = result;
  return result;
}

double sub_1003F6B34(uint64_t a1, void *lpsrc)
{
  return sub_1003F5C14(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F6BBC()
{
  return 1;
}

void *sub_1003F6BC4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.TunnelEndPointAssistance");
}

double sub_1003F6BD4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_102489DE0 + 8);
      }
      double result = sub_1003DE314(v6, v7);
      int v5 = *(_DWORD *)(a2 + 32);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_14;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return result;
    }
LABEL_14:
    *(_DWORD *)(a1 + 32) |= 4u;
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_102489DE0 + 16);
    }
    return sub_1003F5C14(v9, v10);
  }
  return result;
}

void sub_1003F6D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1003F6D8C(void *result)
{
  if ((void *)qword_102489DE0 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    double result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1003F6E2C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFC10;
  sub_1003F6D8C(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003F6E80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFC10;
  sub_1003F6D8C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003F6EE8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489DE0;
  if (!qword_102489DE0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489DE0;
  }
  return result;
}

void sub_1003F6F18()
{
}

uint64_t sub_1003F6F68(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 32);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 32);
      }
    }
    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1003F6024(result);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1003F6FCC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v10 = *(void *)(a1 + 8);
          if (!v10) {
            operator new();
          }
          unsigned int v34 = 0;
          int v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34))return 0; {
          }
            }
          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }
          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          if (!sub_1003DE4BC(v10, this, v17) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            int v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }
        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }
        else
        {
          int v8 = TagFallback & 7;
        }
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      int v13 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_32:
      unsigned int v33 = 0;
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33);
        if (!result) {
          return result;
        }
        unsigned int v22 = v33;
        unsigned int v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        unsigned int v22 = *v13;
        unsigned int v23 = v13 + 1;
        *((void *)this + 1) = v23;
      }
      *(_DWORD *)(a1 + 24) = v22;
      int v9 = *(_DWORD *)(a1 + 32) | 2;
      *(_DWORD *)(a1 + 32) = v9;
    }
    while ((unint64_t)v23 >= v12 || *v23 != 26);
    *((void *)this + 1) = v23 + 1;
LABEL_40:
    *(_DWORD *)(a1 + 32) = v9 | 4;
    uint64_t v25 = *(void *)(a1 + 16);
    if (!v25) {
      operator new();
    }
    unsigned int v35 = 0;
    unsigned int v26 = (char *)*((void *)this + 1);
    if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35)) {
        return 0;
      }
    }
    else
    {
      unsigned int v35 = *v26;
      *((void *)this + 1) = v26 + 1;
    }
    int v27 = *((_DWORD *)this + 14);
    int v28 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v27 + 1;
    if (v27 >= v28) {
      return 0;
    }
    int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
    if (!sub_1003F6088(v25, this, v30) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
    int v31 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v31, 1);
    int v32 = v31 - 1;
    if (v32 < 0 == v19) {
      *((_DWORD *)this + 14) = v32;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_1003F7360(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_102489DE0 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489DE0 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t sub_1003F740C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_102489DE0 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(unsigned char *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }
    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }
  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_102489DE0 + 16);
    }
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003F69CC(v10, a2);
    int v13 = (int)v11;
    if (v11 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, v12);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }
LABEL_28:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

double sub_1003F7520(uint64_t a1, void *lpsrc)
{
  return sub_1003F6BD4(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F75A8()
{
  return 1;
}

void *sub_1003F75B0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.TunnelEndPoint");
}

double sub_1003F75C0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      uint64_t v6 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 52) |= 1u;
      *(void *)(a1 + 8) = v6;
      int v5 = *(_DWORD *)(a2 + 52);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(double *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 52) |= 4u;
    *(double *)(a1 + 24) = result;
    int v5 = *(_DWORD *)(a2 + 52);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        return result;
      }
      goto LABEL_9;
    }
LABEL_14:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 52) |= 8u;
    *(double *)(a1 + 32) = result;
    if ((*(_DWORD *)(a2 + 52) & 0x10) == 0) {
      return result;
    }
LABEL_9:
    double result = *(double *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 0x10u;
    *(double *)(a1 + 40) = result;
  }
  return result;
}

void sub_1003F76D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003F76EC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFC88;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003F770C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFC88;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1003F7760()
{
}

uint64_t sub_1003F77B8(uint64_t result)
{
  if (*(unsigned char *)(result + 52))
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 52) = 0;
  return result;
}

uint64_t sub_1003F77D8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v16 = 0;
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unint64_t v10 = v16;
          int v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unint64_t v10 = *v9;
          int v11 = v9 + 1;
          *((void *)this + 1) = v11;
        }
        *(void *)(a1 + 8) = v10;
        *(_DWORD *)(a1 + 52) |= 1u;
        if ((unint64_t)v11 < v8 && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_27;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_19;
        }
LABEL_27:
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v16;
        *(_DWORD *)(a1 + 52) |= 2u;
        int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 25) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_31:
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v16;
        *(_DWORD *)(a1 + 52) |= 4u;
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 33) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_35:
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v16;
        *(_DWORD *)(a1 + 52) |= 8u;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 41) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_39:
        unint64_t v16 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v16))
        {
          *(void *)(a1 + 40) = v16;
          *(_DWORD *)(a1 + 52) |= 0x10u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_31;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003F7A98(uint64_t result, uint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v4, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v4, *(double *)(v5 + 32), a3);
    if ((*(_DWORD *)(v5 + 52) & 0x10) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v4, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_11:
  double v7 = *(double *)(v5 + 40);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v4, v7, a3);
}

uint64_t sub_1003F7B5C(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 52))
    {
      unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 8), a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 52);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t result = v4 + 9;
    }
    else {
      uint64_t result = v4;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

double sub_1003F7BDC(uint64_t a1, void *lpsrc)
{
  return sub_1003F75C0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F7C64()
{
  return 1;
}

void *sub_1003F7C6C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MapsRouteHintData");
}

void sub_1003F7C7C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32), *(_DWORD *)(a2 + 40) + *(_DWORD *)(a1 + 40));
  if (*(int *)(a2 + 40) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 32) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 44);
      uint64_t v7 = *(int *)(a1 + 40);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 48))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 44);
        }
        *(_DWORD *)(a1 + 44) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 32);
      *(_DWORD *)(a1 + 40) = v7 + 1;
      sub_1003F75C0(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 40));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 60);
  if (!(_BYTE)v9) {
    return;
  }
  if ((*(unsigned char *)(a2 + 60) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 60) & 2) == 0) {
      goto LABEL_14;
    }
LABEL_22:
    *(_DWORD *)(a1 + 60) |= 2u;
    uint64_t v12 = *(void *)(a1 + 16);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *(void *)(a2 + 16);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_102489DF0 + 16);
    }
    sub_1003DE314(v12, v13);
    int v9 = *(_DWORD *)(a2 + 60);
    if ((v9 & 4) == 0)
    {
LABEL_15:
      if ((v9 & 8) == 0) {
        return;
      }
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  *(_DWORD *)(a1 + 60) |= 1u;
  uint64_t v10 = *(void *)(a1 + 8);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_102489DF0 + 8);
  }
  sub_1003DE314(v10, v11);
  int v9 = *(_DWORD *)(a2 + 60);
  if ((v9 & 2) != 0) {
    goto LABEL_22;
  }
LABEL_14:
  if ((v9 & 4) == 0) {
    goto LABEL_15;
  }
LABEL_27:
  unsigned int v14 = *(_DWORD *)(a2 + 24);
  if (v14 >= 7) {
    sub_101A5F050();
  }
  *(_DWORD *)(a1 + 60) |= 4u;
  *(_DWORD *)(a1 + 24) = v14;
  if ((*(_DWORD *)(a2 + 60) & 8) != 0)
  {
LABEL_29:
    unsigned int v15 = *(_DWORD *)(a2 + 28);
    if (v15 >= 7) {
      sub_101A5F024();
    }
    *(_DWORD *)(a1 + 60) |= 8u;
    *(_DWORD *)(a1 + 28) = v15;
  }
}

void sub_1003F7F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003F7F50(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022AFD00;
  int v2 = a1 + 4;
  sub_1003F7FB4(a1);
  sub_10016B2E8(v2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void *sub_1003F7FB4(void *result)
{
  if ((void *)qword_102489DF0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1003F8058(uint64_t *a1)
{
  sub_1003F7F50(a1);

  operator delete();
}

uint64_t sub_1003F8090(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489DF0;
  if (!qword_102489DF0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489DF0;
  }
  return result;
}

void sub_1003F80C0()
{
}

uint64_t sub_1003F811C(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 60);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(a1 + 60))
    {
      uint64_t v3 = *(void *)(a1 + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(a1 + 60);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 16);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
      }
    }
    *(void *)(a1 + 24) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 32);
  *(_DWORD *)(a1 + 60) = 0;
  return result;
}

uint64_t sub_1003F8198(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32);
  while (1)
  {
    int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 < *((void *)this + 2) && (*v6 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9) {
          operator new();
        }
        unsigned int v49 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49))return 0; {
        }
          }
        else
        {
          unsigned int v49 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v49);
        if (!sub_1003DE4BC(v9, this, v18) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        unsigned int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 18) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
        goto LABEL_34;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
LABEL_34:
        *(_DWORD *)(a1 + 60) |= 2u;
        uint64_t v23 = *(void *)(a1 + 16);
        if (!v23) {
          operator new();
        }
        unsigned int v49 = 0;
        unsigned int v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49))return 0; {
        }
          }
        else
        {
          unsigned int v49 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v49);
        if (!sub_1003DE4BC(v23, this, v28) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v29 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v20) {
          *((_DWORD *)this + 14) = v30;
        }
        int v31 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v31 < v11 && *v31 == 24)
        {
          uint64_t v12 = v31 + 1;
          *((void *)this + 1) = v12;
LABEL_48:
          unsigned int v49 = 0;
          if ((unint64_t)v12 >= v11 || *v12 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49);
            if (!result) {
              return result;
            }
            unsigned int v32 = v49;
          }
          else
          {
            unsigned int v32 = *v12;
            *((void *)this + 1) = v12 + 1;
          }
          if (v32 <= 6)
          {
            *(_DWORD *)(a1 + 60) |= 4u;
            *(_DWORD *)(a1 + 24) = v32;
          }
          unsigned int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          if ((unint64_t)v34 < v13 && *v34 == 32)
          {
            unsigned int v14 = v34 + 1;
            *((void *)this + 1) = v14;
LABEL_58:
            unsigned int v49 = 0;
            if ((unint64_t)v14 >= v13 || *v14 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49);
              if (!result) {
                return result;
              }
              unsigned int v35 = v49;
            }
            else
            {
              unsigned int v35 = *v14;
              *((void *)this + 1) = v14 + 1;
            }
            if (v35 <= 6)
            {
              *(_DWORD *)(a1 + 60) |= 8u;
              *(_DWORD *)(a1 + 28) = v35;
            }
            int v36 = (unsigned char *)*((void *)this + 1);
            if ((unint64_t)v36 < *((void *)this + 2) && *v36 == 42)
            {
              do
              {
                *((void *)this + 1) = v36 + 1;
LABEL_68:
                int v37 = *(_DWORD *)(a1 + 44);
                uint64_t v38 = *(int *)(a1 + 40);
                if ((int)v38 >= v37)
                {
                  if (v37 == *(_DWORD *)(a1 + 48))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v37 + 1);
                    int v37 = *(_DWORD *)(a1 + 44);
                  }
                  *(_DWORD *)(a1 + 44) = v37 + 1;
                  operator new();
                }
                uint64_t v39 = *(void *)(a1 + 32);
                *(_DWORD *)(a1 + 40) = v38 + 1;
                uint64_t v40 = *(void *)(v39 + 8 * v38);
                unsigned int v49 = 0;
                uint64_t v41 = (char *)*((void *)this + 1);
                if ((unint64_t)v41 >= *((void *)this + 2) || *v41 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v49))return 0; {
                }
                  }
                else
                {
                  unsigned int v49 = *v41;
                  *((void *)this + 1) = v41 + 1;
                }
                int v42 = *((_DWORD *)this + 14);
                int v43 = *((_DWORD *)this + 15);
                *((_DWORD *)this + 14) = v42 + 1;
                if (v42 >= v43) {
                  return 0;
                }
                int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v49);
                if (!sub_1003F77D8(v40, this, v45) || !*((unsigned char *)this + 36)) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
                int v46 = *((_DWORD *)this + 14);
                BOOL v20 = __OFSUB__(v46, 1);
                int v47 = v46 - 1;
                if (v47 < 0 == v20) {
                  *((_DWORD *)this + 14) = v47;
                }
                int v36 = (unsigned char *)*((void *)this + 1);
                int v48 = (unsigned char *)*((void *)this + 2);
              }
              while (v36 < v48 && *v36 == 42);
              if (v36 == v48 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_48;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unsigned int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_58;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_22;
        }
        goto LABEL_68;
      default:
        int v8 = TagFallback & 7;
LABEL_22:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003F8750(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if (v6)
  {
    uint64_t v8 = *(void *)(result + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_102489DF0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v8, a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v9 = *(void *)(v5 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489DF0 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 8) != 0) {
LABEL_5:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), (int)a2, a4);
LABEL_6:
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  return result;
}

uint64_t sub_1003F8840(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 60);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_39;
  }
  if ((*(unsigned char *)(a1 + 60) & 1) == 0)
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 60) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_102489DF0 + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  int v4 = v6 + 2;
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_102489DF0 + 16);
    }
    int v9 = *(unsigned __int8 *)(v8 + 36);
    if (*(unsigned char *)(v8 + 36))
    {
      int v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0) {
        v10 += 9;
      }
      if ((v9 & 4) != 0) {
        int v9 = v10 + 9;
      }
      else {
        int v9 = v10;
      }
    }
    *(_DWORD *)(v8 + 32) = v9;
    v4 += v9 + 2;
    int v3 = *(_DWORD *)(a1 + 60);
  }
LABEL_24:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
  unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v11 & 0x80000000) != 0)
  {
    int v12 = 11;
  }
  else if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    int v12 = 2;
  }
  v4 += v12;
  if ((v3 & 8) != 0)
  {
LABEL_33:
    unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v13 & 0x80000000) != 0)
    {
      int v14 = 11;
    }
    else if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    }
    else
    {
      int v14 = 2;
    }
    v4 += v14;
  }
LABEL_39:
  int v15 = *(_DWORD *)(a1 + 40);
  uint64_t v16 = (v15 + v4);
  if (v15 >= 1)
  {
    uint64_t v17 = 0;
    do
    {
      unsigned int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003F7B5C(*(void *)(*(void *)(a1 + 32) + 8 * v17), a2);
      int v19 = (int)v18;
      if (v18 >= 0x80) {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      }
      else {
        int v20 = 1;
      }
      uint64_t v16 = (v19 + v16 + v20);
      ++v17;
    }
    while (v17 < *(int *)(a1 + 40));
  }
  *(_DWORD *)(a1 + 56) = v16;
  return v16;
}

void sub_1003F89F0(uint64_t a1, void *lpsrc)
{
  sub_1003F7C7C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F8A78()
{
  return 1;
}

void *sub_1003F8A80@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MapMatchingRouteHint");
}

void sub_1003F8A90(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *(_DWORD *)(a2 + 40);
  if (v4)
  {
    sub_10026DE30(a1 + 32, *(_DWORD *)(a1 + 40) + v4);
    memcpy((void *)(*(void *)(a1 + 32) + 8 * *(int *)(a1 + 40)), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 40));
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
  }
  int v5 = *(_DWORD *)(a2 + 64);
  if (v5)
  {
    sub_10026DE30(a1 + 56, *(_DWORD *)(a1 + 64) + v5);
    memcpy((void *)(*(void *)(a1 + 56) + 8 * *(int *)(a1 + 64)), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 64));
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
  }
  int v6 = *(_DWORD *)(a2 + 80);
  if ((_BYTE)v6)
  {
    if (v6)
    {
      *(_DWORD *)(a1 + 80) |= 1u;
      uint64_t v10 = *(void *)(a1 + 8);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = *(void *)(a2 + 8);
      if (!v11) {
        uint64_t v11 = *(void *)(qword_102489DF8 + 8);
      }
      sub_1003DE314(v10, v11);
      int v6 = *(_DWORD *)(a2 + 80);
      if ((v6 & 2) == 0)
      {
LABEL_10:
        if ((v6 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_30;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 80) |= 2u;
    uint64_t v12 = *(void *)(a1 + 16);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *(void *)(a2 + 16);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_102489DF8 + 16);
    }
    sub_1003DE314(v12, v13);
    int v6 = *(_DWORD *)(a2 + 80);
    if ((v6 & 4) == 0)
    {
LABEL_11:
      if ((v6 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_31;
    }
LABEL_30:
    int v14 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 80) |= 4u;
    *(_DWORD *)(a1 + 24) = v14;
    int v6 = *(_DWORD *)(a2 + 80);
    if ((v6 & 8) == 0)
    {
LABEL_12:
      if ((v6 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
LABEL_31:
    unsigned int v15 = *(_DWORD *)(a2 + 28);
    if (v15 >= 5) {
      sub_101A5F0A8();
    }
    *(_DWORD *)(a1 + 80) |= 8u;
    *(_DWORD *)(a1 + 28) = v15;
    int v6 = *(_DWORD *)(a2 + 80);
    if ((v6 & 0x10) == 0) {
      goto LABEL_14;
    }
LABEL_13:
    int v7 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 80) |= 0x10u;
    *(_DWORD *)(a1 + 48) = v7;
    int v6 = *(_DWORD *)(a2 + 80);
LABEL_14:
    if ((v6 & 0x80) != 0)
    {
      char v8 = *(unsigned char *)(a2 + 52);
      *(_DWORD *)(a1 + 80) |= 0x80u;
      *(unsigned char *)(a1 + 52) = v8;
      int v6 = *(_DWORD *)(a2 + 80);
    }
  }
  if ((v6 & 0x100) != 0)
  {
    unsigned int v9 = *(_DWORD *)(a2 + 72);
    if (v9 >= 2) {
      sub_101A5F07C();
    }
    *(_DWORD *)(a1 + 80) |= 0x100u;
    *(_DWORD *)(a1 + 72) = v9;
  }
}

void sub_1003F8D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003F8D50(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFD78;
  sub_1003F8DDC(a1);
  if (*((void *)a1 + 7)) {
    operator delete[]();
  }
  if (*((void *)a1 + 4)) {
    operator delete[]();
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void *sub_1003F8DDC(void *result)
{
  if ((void *)qword_102489DF8 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1003F8E80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003F8D50(a1);

  operator delete();
}

uint64_t sub_1003F8EB8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489DF8;
  if (!qword_102489DF8)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489DF8;
  }
  return result;
}

void sub_1003F8EE8()
{
}

uint64_t sub_1003F8F4C(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 80);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(result + 80);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v1 = *(_DWORD *)(result + 80);
      }
    }
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 48) = 0;
    *(unsigned char *)(result + 52) = 0;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(result + 72) = 0;
  }
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 64) = 0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

uint64_t sub_1003F8FC8(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 56;
  uint64_t v6 = a1 + 32;
LABEL_2:
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 80) |= 1u;
        uint64_t v10 = *(void *)(a1 + 8);
        if (!v10) {
          operator new();
        }
        v69[0] = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69))return 0; {
        }
          }
        else
        {
          v69[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v21 = *((_DWORD *)this + 14);
        int v22 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69[0]);
        if (!sub_1003DE4BC(v10, this, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
        int v25 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v25, 1);
        int v27 = v25 - 1;
        if (v27 < 0 == v26) {
          *((_DWORD *)this + 14) = v27;
        }
        unsigned int v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 18) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
        goto LABEL_47;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_34;
        }
LABEL_47:
        *(_DWORD *)(a1 + 80) |= 2u;
        uint64_t v29 = *(void *)(a1 + 16);
        if (!v29) {
          operator new();
        }
        v69[0] = 0;
        int v30 = (char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69))return 0; {
        }
          }
        else
        {
          v69[0] = *v30;
          *((void *)this + 1) = v30 + 1;
        }
        int v31 = *((_DWORD *)this + 14);
        int v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        int v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69[0]);
        if (!sub_1003DE4BC(v29, this, v34) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
        int v35 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v35, 1);
        int v36 = v35 - 1;
        if (v36 < 0 == v26) {
          *((_DWORD *)this + 14) = v36;
        }
        int v37 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v37 >= v12 || *v37 != 24) {
          continue;
        }
        uint64_t v13 = v37 + 1;
        *((void *)this + 1) = v13;
LABEL_61:
        v69[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!result) {
            return result;
          }
          unsigned int v38 = v69[0];
          uint64_t v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v38 = *v13;
          uint64_t v39 = v13 + 1;
          *((void *)this + 1) = v39;
        }
        *(_DWORD *)(a1 + 24) = v38;
        *(_DWORD *)(a1 + 80) |= 4u;
        if ((unint64_t)v39 >= v12 || *v39 != 32) {
          continue;
        }
        int v14 = v39 + 1;
        *((void *)this + 1) = v14;
LABEL_69:
        v69[0] = 0;
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!result) {
            return result;
          }
          unsigned int v40 = v69[0];
        }
        else
        {
          unsigned int v40 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        if (v40 <= 4)
        {
          *(_DWORD *)(a1 + 80) |= 8u;
          *(_DWORD *)(a1 + 28) = v40;
        }
        uint64_t v41 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v41 >= v15 || *v41 != 40) {
          continue;
        }
        uint64_t v16 = v41 + 1;
        *((void *)this + 1) = v16;
LABEL_79:
        v69[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
          if (!result) {
            return result;
          }
          unsigned int v42 = v69[0];
          int v43 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v42 = *v16;
          int v43 = v16 + 1;
          *((void *)this + 1) = v43;
        }
        *(_DWORD *)(a1 + 48) = v42;
        *(_DWORD *)(a1 + 80) |= 0x10u;
        if ((unint64_t)v43 >= v15 || *v43 != 49) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v43 + 1;
LABEL_87:
          *(void *)int v69 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v69) & 1) == 0)return 0; {
          uint64_t v44 = *(void *)v69;
          }
          int v45 = *(_DWORD *)(a1 + 40);
          if (v45 == *(_DWORD *)(a1 + 44))
          {
            sub_10026DE30(v6, v45 + 1);
            int v45 = *(_DWORD *)(a1 + 40);
          }
          uint64_t v46 = *(void *)(a1 + 32);
          int v47 = v45 + 1;
          *(_DWORD *)(a1 + 40) = v45 + 1;
          *(void *)(v46 + 8 * v45) = v44;
          uint64_t v48 = *((void *)this + 1);
          int v49 = *((_DWORD *)this + 4) - v48;
          if (v49 >= 1)
          {
            signed int v50 = v49 / 9u;
            int v51 = v50 >= *(_DWORD *)(a1 + 44) - v47 ? *(_DWORD *)(a1 + 44) - v47 : v50;
            if (v51 >= 1)
            {
              int v52 = 0;
              while (*(unsigned char *)v48 == 49)
              {
                uint64_t v53 = *(void *)(v48 + 1);
                if (v47 >= *(_DWORD *)(a1 + 44))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v69);
                  int v47 = *(_DWORD *)(a1 + 40);
                  uint64_t v46 = *(void *)(a1 + 32);
                }
                *(_DWORD *)(a1 + 40) = v47 + 1;
                *(void *)(v46 + 8 * v47) = v53;
                ++v52;
                v48 += 9;
                ++v47;
                if (v51 == v52)
                {
                  int v52 = v51;
                  break;
                }
              }
              if (v52) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v52);
              }
            }
          }
LABEL_103:
          int v43 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v43 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v54 = *v43;
        }
        while (v54 == 49);
        if (v54 == 57) {
          goto LABEL_106;
        }
        continue;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_61;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_69;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_79;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_87;
        }
        if (v9 != 2) {
          goto LABEL_34;
        }
        uint64_t result = sub_100249F20(this, v6);
        if (!result) {
          return result;
        }
        goto LABEL_103;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_107;
        }
        if (v9 != 2)
        {
LABEL_34:
          if (v9 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
          continue;
          }
        }
        uint64_t result = sub_100249F20(this, v5);
        if (!result) {
          return result;
        }
LABEL_123:
        int v43 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v43 >= v18) {
          continue;
        }
        int v65 = *v43;
        if (v65 != 57)
        {
          if (v65 == 64)
          {
            int v19 = v43 + 1;
            *((void *)this + 1) = v19;
LABEL_127:
            v69[0] = 0;
            if ((unint64_t)v19 >= v18 || *v19 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
              if (!result) {
                return result;
              }
              unsigned int v66 = v69[0];
              unsigned int v67 = (unsigned char *)*((void *)this + 1);
              unint64_t v18 = *((void *)this + 2);
            }
            else
            {
              unsigned int v66 = *v19;
              unsigned int v67 = v19 + 1;
              *((void *)this + 1) = v67;
            }
            *(unsigned char *)(a1 + 52) = v66 != 0;
            *(_DWORD *)(a1 + 80) |= 0x80u;
            if ((unint64_t)v67 < v18 && *v67 == 72)
            {
              int v20 = v67 + 1;
              *((void *)this + 1) = v20;
LABEL_135:
              v69[0] = 0;
              if ((unint64_t)v20 >= v18 || *v20 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v69);
                if (!result) {
                  return result;
                }
                unsigned int v68 = v69[0];
              }
              else
              {
                unsigned int v68 = *v20;
                *((void *)this + 1) = v20 + 1;
              }
              if (v68 <= 1)
              {
                *(_DWORD *)(a1 + 80) |= 0x100u;
                *(_DWORD *)(a1 + 72) = v68;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
LABEL_106:
        *((void *)this + 1) = v43 + 1;
LABEL_107:
        *(void *)int v69 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v69))
        {
          uint64_t v55 = *(void *)v69;
          int v56 = *(_DWORD *)(a1 + 64);
          if (v56 == *(_DWORD *)(a1 + 68))
          {
            sub_10026DE30(v5, v56 + 1);
            int v56 = *(_DWORD *)(a1 + 64);
          }
          uint64_t v57 = *(void *)(a1 + 56);
          int v58 = v56 + 1;
          *(_DWORD *)(a1 + 64) = v56 + 1;
          *(void *)(v57 + 8 * v56) = v55;
          uint64_t v59 = *((void *)this + 1);
          int v60 = *((_DWORD *)this + 4) - v59;
          if (v60 >= 1)
          {
            signed int v61 = v60 / 9u;
            int v62 = v61 >= *(_DWORD *)(a1 + 68) - v58 ? *(_DWORD *)(a1 + 68) - v58 : v61;
            if (v62 >= 1)
            {
              int v63 = 0;
              while (*(unsigned char *)v59 == 57)
              {
                uint64_t v64 = *(void *)(v59 + 1);
                if (v58 >= *(_DWORD *)(a1 + 68))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v69);
                  int v58 = *(_DWORD *)(a1 + 64);
                  uint64_t v57 = *(void *)(a1 + 56);
                }
                *(_DWORD *)(a1 + 64) = v58 + 1;
                *(void *)(v57 + 8 * v58) = v64;
                ++v63;
                v59 += 9;
                ++v58;
                if (v62 == v63)
                {
                  int v63 = v62;
                  break;
                }
              }
              if (v63) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v63);
              }
            }
          }
          goto LABEL_123;
        }
        return 0;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_127;
      case 9u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_135;
      default:
        int v9 = TagFallback & 7;
        goto LABEL_34;
    }
  }
}

void sub_1003F9858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003F989C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 80);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 8);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_102489DF8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v11 = *(void *)(v5 + 16);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_102489DF8 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 80) & 0x10) != 0) {
LABEL_6:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 48), (int)a2, a4);
LABEL_7:
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(*(void *)(v5 + 32) + 8 * v7++), a3);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(*(void *)(v5 + 56) + 8 * v8++), a3);
    while (v8 < *(int *)(v5 + 64));
  }
  int v9 = *(_DWORD *)(v5 + 80);
  if ((v9 & 0x80) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 52), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 80) & 0x100) == 0) {
      return result;
    }
  }
  else if ((v9 & 0x100) == 0)
  {
    return result;
  }
  int v12 = *(_DWORD *)(v5 + 72);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v12, (int)a2, a4);
}

uint64_t sub_1003F9A2C(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 80);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    if ((v3 & 0x100) == 0) {
      goto LABEL_56;
    }
    goto LABEL_50;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_25;
    }
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_102489DF8 + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  int v4 = v6 + 2;
  int v3 = *(_DWORD *)(a1 + 80);
  if ((v3 & 2) != 0)
  {
LABEL_16:
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_102489DF8 + 16);
    }
    int v9 = *(unsigned __int8 *)(v8 + 36);
    if (*(unsigned char *)(v8 + 36))
    {
      int v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0) {
        v10 += 9;
      }
      if ((v9 & 4) != 0) {
        int v9 = v10 + 9;
      }
      else {
        int v9 = v10;
      }
    }
    *(_DWORD *)(v8 + 32) = v9;
    v4 += v9 + 2;
    int v3 = *(_DWORD *)(a1 + 80);
  }
LABEL_25:
  if ((v3 & 4) != 0)
  {
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 80);
    }
    else
    {
      int v12 = 2;
    }
    v4 += v12;
    if ((v3 & 8) == 0)
    {
LABEL_27:
      if ((v3 & 0x10) == 0) {
        goto LABEL_47;
      }
      goto LABEL_41;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_27;
  }
  uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if ((v13 & 0x80000000) != 0)
  {
    int v14 = 11;
  }
  else if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 80);
  }
  else
  {
    int v14 = 2;
  }
  v4 += v14;
  if ((v3 & 0x10) != 0)
  {
LABEL_41:
    unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if ((v15 & 0x80000000) != 0)
    {
      int v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 80);
    }
    else
    {
      int v16 = 2;
    }
    v4 += v16;
  }
LABEL_47:
  if ((v3 & 0x80) != 0) {
    v4 += 2;
  }
  if ((v3 & 0x100) != 0)
  {
LABEL_50:
    uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
    if ((v17 & 0x80000000) != 0)
    {
      int v18 = 11;
    }
    else if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2) + 1;
    }
    else
    {
      int v18 = 2;
    }
    v4 += v18;
  }
LABEL_56:
  uint64_t result = (9 * (*(_DWORD *)(a1 + 64) + *(_DWORD *)(a1 + 40)) + v4);
  *(_DWORD *)(a1 + 76) = result;
  return result;
}

void sub_1003F9C10(uint64_t a1, void *lpsrc)
{
  sub_1003F8A90(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003F9C98()
{
  return 1;
}

void *sub_1003F9CA0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.AccessoryVehicleSpeedNotification");
}

void sub_1003F9CB0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 8);
      if (v5 >= 4 && v5 != 1001) {
        sub_101A5F100();
      }
      *(_DWORD *)(a1 + 24) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 12);
      if (v6 >= 4 && v6 != 1001) {
        sub_101A5F0D4();
      }
      *(_DWORD *)(a1 + 24) |= 2u;
      *(_DWORD *)(a1 + 12) = v6;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 4) != 0)
    {
      char v7 = *(unsigned char *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 4u;
      *(unsigned char *)(a1 + 16) = v7;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 8) != 0)
    {
      char v8 = *(unsigned char *)(a2 + 17);
      *(_DWORD *)(a1 + 24) |= 8u;
      *(unsigned char *)(a1 + 17) = v8;
    }
  }
}

void sub_1003F9DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003F9DD4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFDF0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003F9DF4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFDF0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003F9E48(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489E00;
  if (!qword_102489E00)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489E00;
  }
  return result;
}

void sub_1003F9E78()
{
}

uint64_t sub_1003F9EC8(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1003F9EE0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    unsigned int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v23 = 0;
        char v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
LABEL_23:
          if (v9 < 4 || v9 == 1001)
          {
            *(_DWORD *)(a1 + 24) |= 1u;
            *(_DWORD *)(a1 + 8) = v9;
          }
          unint64_t v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v15 < v10 && *v15 == 16)
          {
            uint64_t v11 = v15 + 1;
            *((void *)this + 1) = v11;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
        if (result)
        {
          unsigned int v9 = v23;
          goto LABEL_23;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_29:
        unsigned int v23 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!result) {
            return result;
          }
          unsigned int v16 = v23;
        }
        else
        {
          unsigned int v16 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v16 < 4 || v16 == 1001)
        {
          *(_DWORD *)(a1 + 24) |= 2u;
          *(_DWORD *)(a1 + 12) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v17 >= v12 || *v17 != 24) {
          continue;
        }
        uint64_t v13 = v17 + 1;
        *((void *)this + 1) = v13;
LABEL_39:
        unsigned int v23 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!result) {
            return result;
          }
          unsigned int v18 = v23;
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v13;
          int v19 = v13 + 1;
          *((void *)this + 1) = v19;
        }
        *(unsigned char *)(a1 + 16) = v18 != 0;
        *(_DWORD *)(a1 + 24) |= 4u;
        if ((unint64_t)v19 >= v12 || *v19 != 32) {
          continue;
        }
        int v14 = v19 + 1;
        *((void *)this + 1) = v14;
LABEL_47:
        unsigned int v23 = 0;
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!result) {
            return result;
          }
          unsigned int v20 = v23;
          int v21 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v20 = *v14;
          int v21 = (unsigned __int8 *)(v14 + 1);
          *((void *)this + 1) = v21;
        }
        *(unsigned char *)(a1 + 17) = v20 != 0;
        *(_DWORD *)(a1 + 24) |= 8u;
        if (v21 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_39;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_47;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1003FA1E0(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 16), a2, a4);
      if ((*(_DWORD *)(v5 + 24) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:
  int v7 = *(unsigned __int8 *)(v5 + 17);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
}

uint64_t sub_1003FA288(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 24);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_24;
  }
  if (*(unsigned char *)(a1 + 24))
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v6 & 0x80000000) != 0)
    {
      int v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v6 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 24);
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    int v8 = 2;
  }
  v4 += v8;
LABEL_19:
  unsigned int v9 = v4 + 2;
  if ((v3 & 4) == 0) {
    unsigned int v9 = v4;
  }
  if ((v3 & 8) != 0) {
    uint64_t result = v9 + 2;
  }
  else {
    uint64_t result = v9;
  }
LABEL_24:
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1003FA34C(uint64_t a1, void *lpsrc)
{
  sub_1003F9CB0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003FA3D4()
{
  return 1;
}

void *sub_1003FA3DC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.ReachabilityState");
}

void sub_1003FA3EC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      uint64_t v7 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 32) |= 1u;
      *(void *)(a1 + 8) = v7;
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    char v8 = *(unsigned char *)(a2 + 16);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(unsigned char *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    char v9 = *(unsigned char *)(a2 + 17);
    *(_DWORD *)(a1 + 32) |= 4u;
    *(unsigned char *)(a1 + 17) = v9;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
LABEL_16:
    unsigned int v10 = *(_DWORD *)(a2 + 20);
    if (v10 >= 5) {
      sub_101A5F12C();
    }
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 20) = v10;
    int v4 = *(_DWORD *)(a2 + 32);
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    char v5 = *(unsigned char *)(a2 + 18);
    *(_DWORD *)(a1 + 32) |= 0x10u;
    *(unsigned char *)(a1 + 18) = v5;
    int v4 = *(_DWORD *)(a2 + 32);
LABEL_10:
    if ((v4 & 0x20) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 32) |= 0x20u;
      *(_DWORD *)(a1 + 24) = v6;
    }
  }
}

void sub_1003FA528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003FA540(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFE68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003FA560(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFE68;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003FA5B4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489E08;
  if (!qword_102489E08)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489E08;
  }
  return result;
}

void sub_1003FA5E4()
{
}

uint64_t sub_1003FA644(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    *(void *)(result + 8) = 0xBFF0000000000000;
    *(_WORD *)(result + 16) = 0;
    *(unsigned char *)(result + 18) = 0;
    *(_DWORD *)(result + 20) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003FA668(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_25;
        }
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        char v9 = (unsigned char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 >= v8 || *v9 != 16) {
          continue;
        }
        unsigned int v10 = v9 + 1;
        *((void *)this + 1) = v10;
        goto LABEL_15;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v10 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_15:
        v27[0] = 0;
        if ((unint64_t)v10 >= v8 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!result) {
            return result;
          }
          unsigned int v11 = v27[0];
          unint64_t v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v11 = *v10;
          unint64_t v12 = v10 + 1;
          *((void *)this + 1) = v12;
        }
        *(unsigned char *)(a1 + 16) = v11 != 0;
        *(_DWORD *)(a1 + 32) |= 2u;
        if ((unint64_t)v12 >= v8 || *v12 != 24) {
          continue;
        }
        uint64_t v13 = v12 + 1;
        *((void *)this + 1) = v13;
LABEL_34:
        v27[0] = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!result) {
            return result;
          }
          unsigned int v19 = v27[0];
          unsigned int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v13;
          unsigned int v20 = v13 + 1;
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 17) = v19 != 0;
        *(_DWORD *)(a1 + 32) |= 4u;
        if ((unint64_t)v20 >= v8 || *v20 != 32) {
          continue;
        }
        int v14 = v20 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        v27[0] = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!result) {
            return result;
          }
          unsigned int v21 = v27[0];
        }
        else
        {
          unsigned int v21 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        if (v21 <= 4)
        {
          *(_DWORD *)(a1 + 32) |= 8u;
          *(_DWORD *)(a1 + 20) = v21;
        }
        int v22 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v22 >= v15 || *v22 != 40) {
          continue;
        }
        unsigned int v16 = v22 + 1;
        *((void *)this + 1) = v16;
LABEL_52:
        v27[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!result) {
            return result;
          }
          unsigned int v23 = v27[0];
          unsigned int v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v23 = *v16;
          unsigned int v24 = v16 + 1;
          *((void *)this + 1) = v24;
        }
        *(unsigned char *)(a1 + 18) = v23 != 0;
        *(_DWORD *)(a1 + 32) |= 0x10u;
        if ((unint64_t)v24 >= v15 || *v24 != 48) {
          continue;
        }
        uint64_t v17 = v24 + 1;
        *((void *)this + 1) = v17;
LABEL_60:
        v27[0] = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!result) {
            return result;
          }
          unsigned int v25 = v27[0];
          BOOL v26 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v25 = *v17;
          BOOL v26 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v26;
        }
        *(_DWORD *)(a1 + 24) = v25;
        *(_DWORD *)(a1 + 32) |= 0x20u;
        if (v26 != (unsigned __int8 *)v15 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_52;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_60;
      default:
        int v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1003FAA28(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 16), a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 17), a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 18), a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return result;
  }
LABEL_13:
  int v7 = *(_DWORD *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, a2, a4);
}

uint64_t sub_1003FAB08(uint64_t a1, unsigned int a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    if ((v3 & 4) != 0) {
      LODWORD(v4) = ((v3 << 31 >> 31) & 9 | v3 & 2) + 2;
    }
    else {
      LODWORD(v4) = (v3 << 31 >> 31) & 9 | v3 & 2;
    }
    if ((v3 & 8) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
      if ((v5 & 0x80000000) != 0)
      {
        int v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 32);
      }
      else
      {
        int v6 = 2;
      }
      LODWORD(v4) = v6 + v4;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t v4 = (v4 + 2);
    }
    else {
      uint64_t v4 = v4;
    }
    if ((v3 & 0x20) != 0)
    {
      int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v7 & 0x80000000) != 0)
      {
        int v8 = 11;
      }
      else if (v7 >= 0x80)
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      }
      else
      {
        int v8 = 2;
      }
      uint64_t v4 = (v8 + v4);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1003FABD0(uint64_t a1, void *lpsrc)
{
  sub_1003FA3EC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003FAC58()
{
  return 1;
}

void *sub_1003FAC60@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.Battery");
}

BOOL sub_1003FAC70(unsigned int a1)
{
  return a1 < 0x14;
}

void sub_1003FAC7C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  int v4 = *(_DWORD *)(a2 + 60);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 60) |= 1u;
    uint64_t v7 = *(void *)(a1 + 8);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_102489E10 + 8);
    }
    sub_1003DE314(v7, v8);
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_27;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 60) |= 2u;
  *(_DWORD *)(a1 + 16) = v9;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_27:
  unsigned int v10 = *(_DWORD *)(a2 + 20);
  if (v10 >= 0x14) {
    sub_101A5F158();
  }
  *(_DWORD *)(a1 + 60) |= 4u;
  *(_DWORD *)(a1 + 20) = v10;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_29:
  *(_DWORD *)(a1 + 60) |= 8u;
  uint64_t v11 = *(void *)(a1 + 24);
  if (!v11) {
    operator new();
  }
  uint64_t v12 = *(void *)(a2 + 24);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_102489E10 + 24);
  }
  sub_1003F9CB0(v11, v12);
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_39:
    char v15 = *(unsigned char *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(unsigned char *)(a1 + 40) = v15;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_40;
  }
LABEL_34:
  *(_DWORD *)(a1 + 60) |= 0x10u;
  uint64_t v13 = *(void *)(a1 + 32);
  if (!v13) {
    operator new();
  }
  uint64_t v14 = *(void *)(a2 + 32);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_102489E10 + 32);
  }
  sub_1003FA3EC(v13, v14);
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x20) != 0) {
    goto LABEL_39;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_40:
  char v16 = *(unsigned char *)(a2 + 41);
  *(_DWORD *)(a1 + 60) |= 0x40u;
  *(unsigned char *)(a1 + 41) = v16;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    char v5 = *(unsigned char *)(a2 + 42);
    *(_DWORD *)(a1 + 60) |= 0x80u;
    *(unsigned char *)(a1 + 42) = v5;
    int v4 = *(_DWORD *)(a2 + 60);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    char v17 = *(unsigned char *)(a2 + 43);
    *(_DWORD *)(a1 + 60) |= 0x100u;
    *(unsigned char *)(a1 + 43) = v17;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_44;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  char v18 = *(unsigned char *)(a2 + 48);
  *(_DWORD *)(a1 + 60) |= 0x200u;
  *(unsigned char *)(a1 + 48) = v18;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v19 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 60) |= 0x400u;
  *(_DWORD *)(a1 + 44) = v19;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      return;
    }
    goto LABEL_19;
  }
LABEL_45:
  int v20 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 60) |= 0x800u;
  *(_DWORD *)(a1 + 52) = v20;
  if ((*(_DWORD *)(a2 + 60) & 0x1000) != 0)
  {
LABEL_19:
    char v6 = *(unsigned char *)(a2 + 49);
    *(_DWORD *)(a1 + 60) |= 0x1000u;
    *(unsigned char *)(a1 + 49) = v6;
  }
}

void sub_1003FAFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1003FAFDC(void *result)
{
  if ((void *)qword_102489E10 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_1003FB0A8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFEE0;
  sub_1003FAFDC(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003FB0FC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFEE0;
  sub_1003FAFDC(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003FB164(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489E10;
  if (!qword_102489E10)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489E10;
  }
  return result;
}

void sub_1003FB194()
{
}

uint64_t sub_1003FB1F4(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 60);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(result + 60);
      }
    }
    *(void *)(result + 16) = 0;
    if ((v1 & 8) != 0)
    {
      uint64_t v3 = *(void *)(result + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(_WORD *)(v3 + 16) = 0;
          *(void *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v1 = *(_DWORD *)(result + 60);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(result + 32);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 32))
        {
          *(void *)(v4 + 8) = 0xBFF0000000000000;
          *(_WORD *)(v4 + 16) = 0;
          *(unsigned char *)(v4 + 18) = 0;
          *(_DWORD *)(v4 + 20) = 0;
          *(_DWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 32) = 0;
        int v1 = *(_DWORD *)(result + 60);
      }
    }
    *(_WORD *)(result + 40) = 0;
    *(unsigned char *)(result + 42) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(result + 52) = 0;
    *(_DWORD *)(result + 43) = 0;
    *(_DWORD *)(result + 46) = 0;
  }
  *(_DWORD *)(result + 60) = 0;
  return result;
}

uint64_t sub_1003FB2A0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v69 = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69))return 0; {
        }
          }
        else
        {
          unsigned int v69 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69);
        if (!sub_1003DE4BC(v8, this, v25) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v26 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v26, 1);
        int v28 = v26 - 1;
        if (v28 < 0 == v27) {
          *((_DWORD *)this + 14) = v28;
        }
        uint64_t v29 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v29 >= v10 || *v29 != 16) {
          continue;
        }
        uint64_t v11 = v29 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_50;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_50:
        unsigned int v69 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69);
          if (!result) {
            return result;
          }
          unsigned int v30 = v69;
          int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v30 = *v11;
          int v31 = v11 + 1;
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 16) = v30;
        *(_DWORD *)(a1 + 60) |= 2u;
        if ((unint64_t)v31 >= v10 || *v31 != 24) {
          continue;
        }
        uint64_t v12 = v31 + 1;
        *((void *)this + 1) = v12;
LABEL_58:
        unsigned int v69 = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69);
          if (!result) {
            return result;
          }
          unsigned int v33 = v69;
        }
        else
        {
          unsigned int v33 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        if (v33 <= 0x13)
        {
          *(_DWORD *)(a1 + 60) |= 4u;
          *(_DWORD *)(a1 + 20) = v33;
        }
        unsigned int v34 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 != 34) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
LABEL_68:
        *(_DWORD *)(a1 + 60) |= 8u;
        uint64_t v35 = *(void *)(a1 + 24);
        if (!v35) {
          operator new();
        }
        unsigned int v69 = 0;
        int v36 = (char *)*((void *)this + 1);
        if ((unint64_t)v36 >= *((void *)this + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69))return 0; {
        }
          }
        else
        {
          unsigned int v69 = *v36;
          *((void *)this + 1) = v36 + 1;
        }
        int v37 = *((_DWORD *)this + 14);
        int v38 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v37 + 1;
        if (v37 >= v38) {
          return 0;
        }
        int v39 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69);
        if (!sub_1003F9EE0(v35, this, v40) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v39);
        int v41 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v41, 1);
        int v42 = v41 - 1;
        if (v42 < 0 == v27) {
          *((_DWORD *)this + 14) = v42;
        }
        int v43 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 != 42) {
          continue;
        }
        *((void *)this + 1) = v43 + 1;
LABEL_82:
        *(_DWORD *)(a1 + 60) |= 0x10u;
        uint64_t v44 = *(void *)(a1 + 32);
        if (!v44) {
          operator new();
        }
        unsigned int v69 = 0;
        int v45 = (char *)*((void *)this + 1);
        if ((unint64_t)v45 >= *((void *)this + 2) || *v45 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69))return 0; {
        }
          }
        else
        {
          unsigned int v69 = *v45;
          *((void *)this + 1) = v45 + 1;
        }
        int v46 = *((_DWORD *)this + 14);
        int v47 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v46 + 1;
        if (v46 < v47)
        {
          int v48 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69);
          if (sub_1003FA668(v44, this, v49))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v48);
              int v50 = *((_DWORD *)this + 14);
              BOOL v27 = __OFSUB__(v50, 1);
              int v51 = v50 - 1;
              if (v51 < 0 == v27) {
                *((_DWORD *)this + 14) = v51;
              }
              int v52 = (unsigned char *)*((void *)this + 1);
              unint64_t v13 = *((void *)this + 2);
              if ((unint64_t)v52 < v13 && *v52 == 48)
              {
                uint64_t v14 = v52 + 1;
                *((void *)this + 1) = v14;
LABEL_96:
                unsigned int v69 = 0;
                if ((unint64_t)v14 >= v13 || *v14 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69);
                  if (!result) {
                    return result;
                  }
                  unsigned int v53 = v69;
                  int v54 = (unsigned char *)*((void *)this + 1);
                  unint64_t v13 = *((void *)this + 2);
                }
                else
                {
                  unsigned int v53 = *v14;
                  int v54 = v14 + 1;
                  *((void *)this + 1) = v54;
                }
                *(unsigned char *)(a1 + 40) = v53 != 0;
                *(_DWORD *)(a1 + 60) |= 0x20u;
                if ((unint64_t)v54 < v13 && *v54 == 56)
                {
                  char v15 = v54 + 1;
                  *((void *)this + 1) = v15;
LABEL_104:
                  unsigned int v69 = 0;
                  if ((unint64_t)v15 >= v13 || *v15 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69);
                    if (!result) {
                      return result;
                    }
                    unsigned int v55 = v69;
                    int v56 = (unsigned char *)*((void *)this + 1);
                    unint64_t v13 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v55 = *v15;
                    int v56 = v15 + 1;
                    *((void *)this + 1) = v56;
                  }
                  *(unsigned char *)(a1 + 41) = v55 != 0;
                  *(_DWORD *)(a1 + 60) |= 0x40u;
                  if ((unint64_t)v56 < v13 && *v56 == 64)
                  {
                    char v16 = v56 + 1;
                    *((void *)this + 1) = v16;
LABEL_112:
                    unsigned int v69 = 0;
                    if ((unint64_t)v16 >= v13 || *v16 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69);
                      if (!result) {
                        return result;
                      }
                      unsigned int v57 = v69;
                      int v58 = (unsigned char *)*((void *)this + 1);
                      unint64_t v13 = *((void *)this + 2);
                    }
                    else
                    {
                      unsigned int v57 = *v16;
                      int v58 = v16 + 1;
                      *((void *)this + 1) = v58;
                    }
                    *(unsigned char *)(a1 + 42) = v57 != 0;
                    *(_DWORD *)(a1 + 60) |= 0x80u;
                    if ((unint64_t)v58 < v13 && *v58 == 72)
                    {
                      char v17 = v58 + 1;
                      *((void *)this + 1) = v17;
LABEL_120:
                      unsigned int v69 = 0;
                      if ((unint64_t)v17 >= v13 || *v17 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69);
                        if (!result) {
                          return result;
                        }
                        unsigned int v59 = v69;
                        int v60 = (unsigned char *)*((void *)this + 1);
                        unint64_t v13 = *((void *)this + 2);
                      }
                      else
                      {
                        unsigned int v59 = *v17;
                        int v60 = v17 + 1;
                        *((void *)this + 1) = v60;
                      }
                      *(unsigned char *)(a1 + 43) = v59 != 0;
                      *(_DWORD *)(a1 + 60) |= 0x100u;
                      if ((unint64_t)v60 < v13 && *v60 == 80)
                      {
                        char v18 = v60 + 1;
                        *((void *)this + 1) = v18;
LABEL_128:
                        unsigned int v69 = 0;
                        if ((unint64_t)v18 >= v13 || *v18 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69);
                          if (!result) {
                            return result;
                          }
                          unsigned int v61 = v69;
                          int v62 = (unsigned char *)*((void *)this + 1);
                          unint64_t v13 = *((void *)this + 2);
                        }
                        else
                        {
                          unsigned int v61 = *v18;
                          int v62 = v18 + 1;
                          *((void *)this + 1) = v62;
                        }
                        *(unsigned char *)(a1 + 48) = v61 != 0;
                        *(_DWORD *)(a1 + 60) |= 0x200u;
                        if ((unint64_t)v62 < v13 && *v62 == 88)
                        {
                          int v19 = v62 + 1;
                          *((void *)this + 1) = v19;
LABEL_136:
                          unsigned int v69 = 0;
                          if ((unint64_t)v19 >= v13 || *v19 < 0)
                          {
                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69);
                            if (!result) {
                              return result;
                            }
                            unsigned int v63 = v69;
                            uint64_t v64 = (unsigned char *)*((void *)this + 1);
                            unint64_t v13 = *((void *)this + 2);
                          }
                          else
                          {
                            unsigned int v63 = *v19;
                            uint64_t v64 = v19 + 1;
                            *((void *)this + 1) = v64;
                          }
                          *(_DWORD *)(a1 + 44) = v63;
                          *(_DWORD *)(a1 + 60) |= 0x400u;
                          if ((unint64_t)v64 < v13 && *v64 == 96)
                          {
                            int v20 = v64 + 1;
                            *((void *)this + 1) = v20;
LABEL_144:
                            unsigned int v69 = 0;
                            if ((unint64_t)v20 >= v13 || *v20 < 0)
                            {
                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69);
                              if (!result) {
                                return result;
                              }
                              unsigned int v65 = v69;
                              unsigned int v66 = (unsigned char *)*((void *)this + 1);
                              unint64_t v13 = *((void *)this + 2);
                            }
                            else
                            {
                              unsigned int v65 = *v20;
                              unsigned int v66 = v20 + 1;
                              *((void *)this + 1) = v66;
                            }
                            *(_DWORD *)(a1 + 52) = v65;
                            *(_DWORD *)(a1 + 60) |= 0x800u;
                            if ((unint64_t)v66 < v13 && *v66 == 104)
                            {
                              unsigned int v21 = v66 + 1;
                              *((void *)this + 1) = v21;
LABEL_152:
                              unsigned int v69 = 0;
                              if ((unint64_t)v21 >= v13 || *v21 < 0)
                              {
                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v69);
                                if (!result) {
                                  return result;
                                }
                                unsigned int v67 = v69;
                                unsigned int v68 = (unsigned __int8 *)*((void *)this + 1);
                                unint64_t v13 = *((void *)this + 2);
                              }
                              else
                              {
                                unsigned int v67 = *v21;
                                unsigned int v68 = (unsigned __int8 *)(v21 + 1);
                                *((void *)this + 1) = v68;
                              }
                              *(unsigned char *)(a1 + 49) = v67 != 0;
                              *(_DWORD *)(a1 + 60) |= 0x1000u;
                              if (v68 == (unsigned __int8 *)v13
                                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                              {
                                *((_DWORD *)this + 8) = 0;
                                uint64_t result = 1;
                                *((unsigned char *)this + 36) = 1;
                                return result;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        uint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_58;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_68;
        }
        goto LABEL_37;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_82;
        }
        goto LABEL_37;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_96;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        char v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_104;
      case 8u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        char v16 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_112;
      case 9u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        char v17 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_120;
      case 0xAu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        char v18 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_128;
      case 0xBu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_136;
      case 0xCu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_144;
      case 0xDu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_152;
      default:
        int v7 = TagFallback & 7;
LABEL_37:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003FBC0C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489E10 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 20), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489E10 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489E10 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 40), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 41), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 42), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 43), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 48), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
LABEL_32:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 52), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 60) & 0x1000) == 0) {
      return result;
    }
    goto LABEL_33;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 44), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x800) != 0) {
    goto LABEL_32;
  }
LABEL_13:
  if ((v6 & 0x1000) == 0) {
    return result;
  }
LABEL_33:
  int v10 = *(unsigned __int8 *)(v5 + 49);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v10, (BOOL)a2, a4);
}

uint64_t sub_1003FBDE0(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 60);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_50;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_102489E10 + 8);
  }
  int v7 = *(unsigned __int8 *)(v6 + 36);
  if (*(unsigned char *)(v6 + 36))
  {
    int v8 = (v7 << 31 >> 31) & 9;
    if ((v7 & 2) != 0) {
      v8 += 9;
    }
    if ((v7 & 4) != 0) {
      int v7 = v8 + 9;
    }
    else {
      int v7 = v8;
    }
  }
  *(_DWORD *)(v6 + 32) = v7;
  int v4 = v7 + 2;
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 10;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      int v3 = *(_DWORD *)(a1 + 60);
    }
    else
    {
      int v10 = 1;
    }
    v4 += v10 + 1;
  }
LABEL_21:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_23;
    }
LABEL_31:
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_102489E10 + 24);
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003FA288(v13, a2);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    }
    else {
      int v16 = 1;
    }
    v4 += v15 + v16 + 1;
    int v3 = *(_DWORD *)(a1 + 60);
    if ((v3 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_37;
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if ((v11 & 0x80000000) != 0)
  {
    int v12 = 11;
  }
  else if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    int v12 = 2;
  }
  v4 += v12;
  if ((v3 & 8) != 0) {
    goto LABEL_31;
  }
LABEL_23:
  if ((v3 & 0x10) != 0)
  {
LABEL_37:
    uint64_t v17 = *(void *)(a1 + 32);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_102489E10 + 32);
    }
    char v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003FAB08(v17, a2);
    int v19 = (int)v18;
    if (v18 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
    }
    else {
      int v20 = 1;
    }
    v4 += v19 + v20 + 1;
    int v3 = *(_DWORD *)(a1 + 60);
  }
LABEL_43:
  unsigned int v21 = v4 + 2;
  if ((v3 & 0x20) == 0) {
    unsigned int v21 = v4;
  }
  if ((v3 & 0x40) != 0) {
    v21 += 2;
  }
  if ((v3 & 0x80) != 0) {
    uint64_t result = v21 + 2;
  }
  else {
    uint64_t result = v21;
  }
LABEL_50:
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v22 = result + 2;
    if ((v3 & 0x100) == 0) {
      unsigned int v22 = result;
    }
    if ((v3 & 0x200) != 0) {
      unsigned int v23 = v22 + 2;
    }
    else {
      unsigned int v23 = v22;
    }
    if ((v3 & 0x400) != 0)
    {
      int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
      if ((v24 & 0x80000000) != 0)
      {
        int v25 = 11;
      }
      else if (v24 >= 0x80)
      {
        int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 60);
      }
      else
      {
        int v25 = 2;
      }
      v23 += v25;
    }
    if ((v3 & 0x800) != 0)
    {
      int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
      if ((v26 & 0x80000000) != 0)
      {
        int v27 = 11;
      }
      else if (v26 >= 0x80)
      {
        int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 60);
      }
      else
      {
        int v27 = 2;
      }
      v23 += v27;
    }
    if ((v3 & 0x1000) != 0) {
      uint64_t result = v23 + 2;
    }
    else {
      uint64_t result = v23;
    }
  }
  *(_DWORD *)(a1 + 56) = result;
  return result;
}

void sub_1003FC038(uint64_t a1, void *lpsrc)
{
  sub_1003FAC7C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003FC0C0()
{
  return 1;
}

void *sub_1003FC0C8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.DeviceStatus");
}

void sub_1003FC0D8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489E18 + 8);
      }
      sub_1003DE314(v5, v6);
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 2) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 16);
      if ((v7 + 1) >= 8) {
        sub_101A5F1B0();
      }
      *(_DWORD *)(a1 + 32) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 4) != 0)
    {
      int v8 = *(_DWORD *)(a2 + 20);
      if ((v8 + 1) >= 8) {
        sub_101A5F184();
      }
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_DWORD *)(a1 + 20) = v8;
      int v4 = *(_DWORD *)(a2 + 32);
    }
    if ((v4 & 8) != 0)
    {
      int v9 = *(_DWORD *)(a2 + 24);
      *(_DWORD *)(a1 + 32) |= 8u;
      *(_DWORD *)(a1 + 24) = v9;
    }
  }
}

void sub_1003FC238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003FC250(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022AFF58;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489E18 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003FC2E0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003FC250(a1);

  operator delete();
}

uint64_t sub_1003FC318(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489E18;
  if (!qword_102489E18)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489E18;
  }
  return result;
}

void sub_1003FC348()
{
}

uint64_t sub_1003FC3A0(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(result + 16) = -1;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003FC3DC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v31 = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31))return 0; {
        }
          }
        else
        {
          unsigned int v31 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v31);
        if (!sub_1003DE4BC(v8, this, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        unsigned int v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v23 >= v10 || *v23 != 16) {
          continue;
        }
        uint64_t v11 = v23 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_32;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_32:
        unsigned int v31 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31);
          if (!result) {
            return result;
          }
          unsigned int v24 = v31;
        }
        else
        {
          unsigned int v24 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v24 + 1 <= 7)
        {
          *(_DWORD *)(a1 + 32) |= 2u;
          *(_DWORD *)(a1 + 16) = v24;
        }
        int v26 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v26 >= v12 || *v26 != 24) {
          continue;
        }
        uint64_t v13 = v26 + 1;
        *((void *)this + 1) = v13;
LABEL_42:
        unsigned int v31 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31);
          if (!result) {
            return result;
          }
          unsigned int v27 = v31;
        }
        else
        {
          unsigned int v27 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v27 + 1 <= 7)
        {
          *(_DWORD *)(a1 + 32) |= 4u;
          *(_DWORD *)(a1 + 20) = v27;
        }
        int v28 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v28 >= v14 || *v28 != 32) {
          continue;
        }
        int v15 = v28 + 1;
        *((void *)this + 1) = v15;
LABEL_52:
        unsigned int v31 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31);
          if (!result) {
            return result;
          }
          unsigned int v29 = v31;
          unsigned int v30 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int v29 = *v15;
          unsigned int v30 = (unsigned __int8 *)(v15 + 1);
          *((void *)this + 1) = v30;
        }
        *(_DWORD *)(a1 + 24) = v29;
        *(_DWORD *)(a1 + 32) |= 8u;
        if (v30 != (unsigned __int8 *)v14 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_42;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_52;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1003FC76C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (int *)result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489E18 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (int)a2, a4);
      if ((v5[8] & 8) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (int)a2, a4);
  int v6 = v5[8];
  if ((v6 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_11:
  int v8 = v5[6];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, (int)a2, a4);
}

uint64_t sub_1003FC824(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_36;
  }
  if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_102489E18 + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  uint64_t v4 = (v6 + 2);
  int v3 = *(_DWORD *)(a1 + 32);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 32);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_21:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if ((v10 & 0x80000000) != 0)
  {
    int v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v4 = (v11 + v4);
  if ((v3 & 8) != 0)
  {
LABEL_30:
    unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    }
    else
    {
      int v13 = 2;
    }
    uint64_t v4 = (v13 + v4);
  }
LABEL_36:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_1003FC958(uint64_t a1, void *lpsrc)
{
  sub_1003FC0D8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003FC9E0()
{
  return 1;
}

void *sub_1003FC9E8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.SignalEnvironment");
}

void sub_1003FC9F8(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      int v5 = *(_DWORD *)(a2 + 8);
      if ((v5 + 1) >= 8) {
        sub_101A5F208();
      }
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 12);
      if (v6 >= 4) {
        sub_101A5F1DC();
      }
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_1003FCAC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003FCAD8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFFD0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003FCAF8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022AFFD0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1003FCB4C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489E20;
  if (!qword_102489E20)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489E20;
  }
  return result;
}

void sub_1003FCB7C()
{
}

uint64_t sub_1003FCBD0(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0xFFFFFFFFLL;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1003FCBE8(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v16 = 0;
      unint64_t v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
        if (!result) {
          return result;
        }
        unsigned int v11 = v16;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)this + 1) = v10 + 1;
      }
      if (v11 + 1 <= 7)
      {
        a1[5] |= 1u;
        a1[2] = v11;
      }
      unint64_t v12 = (unsigned char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        int v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_25:
        unsigned int v15 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
          if (!result) {
            return result;
          }
          unsigned int v13 = v15;
        }
        else
        {
          unsigned int v13 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        if (v13 <= 3)
        {
          a1[5] |= 2u;
          a1[3] = v13;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_25;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_15:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1003FCDA4(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1003FCE10(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_19;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else
    {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_1003FCEBC(_DWORD *a1, void *lpsrc)
{
  sub_1003FC9F8(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003FCF44()
{
  return 1;
}

void *sub_1003FCF4C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.SignalEnvironmentInfo");
}

float sub_1003FCF5C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 32);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if (*(unsigned char *)(a2 + 32))
  {
    *(_DWORD *)(a1 + 32) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489E28 + 8);
    }
    double v4 = sub_1003DE314(v6, v7);
    int v5 = *(_DWORD *)(a2 + 32);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_16:
      LODWORD(v4) = *(_DWORD *)(a2 + 20);
      *(_DWORD *)(a1 + 32) |= 4u;
      *(_DWORD *)(a1 + 20) = LODWORD(v4);
      if ((*(_DWORD *)(a2 + 32) & 8) != 0) {
        goto LABEL_8;
      }
      return *(float *)&v4;
    }
  }
  else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) |= 2u;
  *(_DWORD *)(a1 + 16) = LODWORD(v4);
  int v5 = *(_DWORD *)(a2 + 32);
  if ((v5 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v5 & 8) != 0)
  {
LABEL_8:
    LODWORD(v4) = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 8u;
    *(_DWORD *)(a1 + 24) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_1003FD0AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003FD0C4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022B0048;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489E28 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003FD154(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003FD0C4(a1);

  operator delete();
}

void sub_1003FD18C()
{
}

uint64_t sub_1003FD1DC(uint64_t result)
{
  if (*(unsigned char *)(result + 32))
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1003FD214(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v21 = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21))return 0; {
        }
          }
        else
        {
          unsigned int v21 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v21);
        if (!sub_1003DE4BC(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 21) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_31;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
LABEL_31:
        unsigned int v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 16) = v21;
        *(_DWORD *)(a1 + 32) |= 2u;
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 29) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_35:
        unsigned int v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 20) = v21;
        *(_DWORD *)(a1 + 32) |= 4u;
        unsigned int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 37) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_39:
        unsigned int v21 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21))
        {
          *(_DWORD *)(a1 + 24) = v21;
          *(_DWORD *)(a1 + 32) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1003FD528(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489E28 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 20), a3);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_11:
  float v8 = *(float *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, v8, a3);
}

uint64_t sub_1003FD5E0(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 32);
  if (*(unsigned char *)(a1 + 32))
  {
    if (v1)
    {
      uint64_t v1 = *(void *)(a1 + 8);
      if (!v1) {
        uint64_t v1 = *(void *)(qword_102489E28 + 8);
      }
      int v3 = *(unsigned __int8 *)(v1 + 36);
      if (*(unsigned char *)(v1 + 36))
      {
        int v4 = (v3 << 31 >> 31) & 9;
        if ((v3 & 2) != 0) {
          v4 += 9;
        }
        if ((v3 & 4) != 0) {
          int v3 = v4 + 9;
        }
        else {
          int v3 = v4;
        }
      }
      *(_DWORD *)(v1 + 32) = v3;
      unsigned int v2 = v3 + 2;
      LODWORD(v1) = *(_DWORD *)(a1 + 32);
    }
    else
    {
      unsigned int v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 28) = v1;
  return v1;
}

float sub_1003FD670(uint64_t a1, void *lpsrc)
{
  return sub_1003FCF5C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003FD6F8()
{
  return 1;
}

void *sub_1003FD700@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MagSample");
}

double sub_1003FD710(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 28);
      uint64_t v8 = *(int *)(a1 + 24);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v7 + 1);
          int v7 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v8 + 1;
      *(float *)&double result = sub_1003FCF5C(*(void *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 44))
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 8);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_102489E30 + 8);
    }
    return sub_1003DE314(v10, v11);
  }
  return result;
}

void sub_1003FD8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003FD900(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022B00C0;
  if ((uint64_t *)qword_102489E30 != a1)
  {
    uint64_t v2 = a1[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  sub_10016B2E8(a1 + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1003FD99C(uint64_t *a1)
{
  sub_1003FD900(a1);

  operator delete();
}

uint64_t sub_1003FD9D4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489E30;
  if (!qword_102489E30)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489E30;
  }
  return result;
}

void sub_1003FDA04()
{
}

uint64_t sub_1003FDA58(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0;
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  uint64_t result = sub_10026DEDC(a1 + 16);
  *(_DWORD *)(a1 + 44) = 0;
  return result;
}

uint64_t sub_1003FDAA8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9) {
          operator new();
        }
        unsigned int v32 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_1003DE4BC(v9, this, v14) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }
          *(_DWORD *)(a1 + 28) = v19 + 1;
          operator new();
        }
        uint64_t v21 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v20 + 1;
        uint64_t v22 = *(void *)(v21 + 8 * v20);
        unsigned int v33 = 0;
        unsigned int v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
        }
          }
        else
        {
          unsigned int v33 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
        if (!sub_1003FD214(v22, this, v27) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v16) {
          *((_DWORD *)this + 14) = v29;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        unsigned int v30 = (unsigned char *)*((void *)this + 2);
        if (v18 >= v30 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }
      if (v18 == v30 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1003FDE08(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 44))
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489E30 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return result;
}

uint64_t sub_1003FDE90(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v3 = *(void *)(a1 + 8);
    if (!v3) {
      uint64_t v3 = *(void *)(qword_102489E30 + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(unsigned char *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }
    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }
  else
  {
    int v2 = 0;
  }
  int v6 = *(_DWORD *)(a1 + 24);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003FD5E0(*(void *)(*(void *)(a1 + 16) + 8 * v8));
      int v11 = (int)v9;
      if (v9 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, v10);
      }
      else {
        int v12 = 1;
      }
      uint64_t v7 = (v11 + v7 + v12);
      ++v8;
    }
    while (v8 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 40) = v7;
  return v7;
}

double sub_1003FDF6C(uint64_t a1, void *lpsrc)
{
  return sub_1003FD710(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003FDFF4()
{
  return 1;
}

void *sub_1003FDFFC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.Magnetometer");
}

double sub_1003FE00C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*(unsigned char *)(a2 + 20))
  {
    *(_DWORD *)(a1 + 20) |= 1u;
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489E38 + 8);
    }
    return sub_1003DE314(v5, v6);
  }
  return result;
}

void sub_1003FE0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003FE10C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022B0138;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489E38 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1003FE19C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1003FE10C(a1);

  operator delete();
}

uint64_t sub_1003FE1D4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489E38;
  if (!qword_102489E38)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489E38;
  }
  return result;
}

void sub_1003FE204()
{
}

uint64_t sub_1003FE250(uint64_t result)
{
  if (*(unsigned char *)(result + 20))
  {
    uint64_t v1 = *(void *)(result + 8);
    if (v1)
    {
      if (*(unsigned char *)(v1 + 36))
      {
        *(void *)(v1 + 8) = 0;
        *(void *)(v1 + 16) = 0;
        *(void *)(v1 + 24) = 0;
      }
      *(_DWORD *)(v1 + 36) = 0;
    }
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1003FE27C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      uint64_t v7 = *(void *)(a1 + 8);
      if (!v7) {
        operator new();
      }
      unsigned int v17 = 0;
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17))return 0; {
      }
        }
      else
      {
        unsigned int v17 = *v8;
        *((void *)this + 1) = v8 + 1;
      }
      int v9 = *((_DWORD *)this + 14);
      int v10 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v9 + 1;
      if (v9 >= v10) {
        return 0;
      }
      int v11 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v17);
      if (!sub_1003DE4BC(v7, this, v12) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v11);
      int v13 = *((_DWORD *)this + 14);
      BOOL v14 = __OFSUB__(v13, 1);
      int v15 = v13 - 1;
      if (v15 < 0 == v14) {
        *((_DWORD *)this + 14) = v15;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_1003FE440(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 20))
  {
    uint64_t v5 = *(void *)(result + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_102489E38 + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
  }
  return result;
}

uint64_t sub_1003FE46C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 20))
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (!v2) {
      uint64_t v2 = *(void *)(qword_102489E38 + 8);
    }
    int v3 = *(unsigned __int8 *)(v2 + 36);
    if (*(unsigned char *)(v2 + 36))
    {
      int v4 = (v3 << 31 >> 31) & 9;
      if ((v3 & 2) != 0) {
        v4 += 9;
      }
      if ((v3 & 4) != 0) {
        int v3 = v4 + 9;
      }
      else {
        int v3 = v4;
      }
    }
    *(_DWORD *)(v2 + 32) = v3;
    uint64_t v1 = (v3 + 2);
  }
  else
  {
    uint64_t v1 = 0;
  }
  *(_DWORD *)(a1 + 16) = v1;
  return v1;
}

double sub_1003FE4D0(uint64_t a1, void *lpsrc)
{
  return sub_1003FE00C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003FE558()
{
  return 1;
}

void *sub_1003FE560@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.Reset");
}

double sub_1003FE570(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 36);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(double *)(a1 + 16) = result;
    if ((*(_DWORD *)(a2 + 36) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(double *)(a1 + 24) = result;
  }
  return result;
}

void sub_1003FE644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003FE65C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B01B0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003FE67C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B01B0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1003FE6D0()
{
}

uint64_t sub_1003FE724(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_1003FE73C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 36) |= 1u;
        int v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 17)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          unint64_t v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 16) = v12;
          *(_DWORD *)(a1 + 36) |= 2u;
          int v10 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 25)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }
      int v8 = TagFallback & 7;
      if (v8 == 1) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v12;
    *(_DWORD *)(a1 + 36) |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1003FE904(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return result;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v6, a3);
}

uint64_t sub_1003FE990(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 36);
  if (*(unsigned char *)(a1 + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 32) = v1;
  return v1;
}

double sub_1003FE9C8(uint64_t a1, void *lpsrc)
{
  return sub_1003FE570(a1, (uint64_t)lpsrc);
}

uint64_t sub_1003FEA50()
{
  return 1;
}

void *sub_1003FEA58@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.AccelerometerPace");
}

void sub_1003FEA68(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = a2[20];
  if ((_BYTE)v4)
  {
    if (a2[20])
    {
      char v6 = a2[8];
      *(_DWORD *)(a1 + 20) |= 1u;
      *(unsigned char *)(a1 + 8) = v6;
      int v4 = *((_DWORD *)a2 + 5);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    else if ((a2[20] & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = a2[9];
    *(_DWORD *)(a1 + 20) |= 2u;
    *(unsigned char *)(a1 + 9) = v7;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
LABEL_16:
    char v8 = a2[10];
    *(_DWORD *)(a1 + 20) |= 4u;
    *(unsigned char *)(a1 + 10) = v8;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
LABEL_17:
    char v9 = a2[11];
    *(_DWORD *)(a1 + 20) |= 8u;
    *(unsigned char *)(a1 + 11) = v9;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_19;
    }
LABEL_18:
    char v10 = a2[12];
    *(_DWORD *)(a1 + 20) |= 0x10u;
    *(unsigned char *)(a1 + 12) = v10;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
LABEL_19:
    char v11 = a2[13];
    *(_DWORD *)(a1 + 20) |= 0x20u;
    *(unsigned char *)(a1 + 13) = v11;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_12;
    }
LABEL_20:
    char v12 = a2[14];
    *(_DWORD *)(a1 + 20) |= 0x40u;
    *(unsigned char *)(a1 + 14) = v12;
    if ((*((_DWORD *)a2 + 5) & 0x80) == 0) {
      return;
    }
LABEL_12:
    char v5 = a2[15];
    *(_DWORD *)(a1 + 20) |= 0x80u;
    *(unsigned char *)(a1 + 15) = v5;
  }
}

void sub_1003FEBDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003FEBF4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0228;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003FEC14(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0228;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1003FEC68()
{
}

uint64_t sub_1003FECB4(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_1003FECC8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v34 = 0;
        char v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        if ((unint64_t)v9 < v8 && (*v9 & 0x80000000) == 0)
        {
          unsigned int v10 = *v9;
          char v11 = v9 + 1;
          *((void *)this + 1) = v11;
LABEL_31:
          *(unsigned char *)(a1 + 8) = v10 != 0;
          *(_DWORD *)(a1 + 20) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            char v12 = v11 + 1;
            *((void *)this + 1) = v12;
            goto LABEL_34;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
        if (result)
        {
          unsigned int v10 = v34;
          char v11 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
          goto LABEL_31;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        char v12 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
LABEL_34:
        unsigned int v34 = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!result) {
            return result;
          }
          unsigned int v19 = v34;
          uint64_t v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v12;
          uint64_t v20 = v12 + 1;
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 9) = v19 != 0;
        *(_DWORD *)(a1 + 20) |= 2u;
        if ((unint64_t)v20 >= v8 || *v20 != 24) {
          continue;
        }
        int v13 = v20 + 1;
        *((void *)this + 1) = v13;
LABEL_42:
        unsigned int v34 = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!result) {
            return result;
          }
          unsigned int v21 = v34;
          uint64_t v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v13;
          uint64_t v22 = v13 + 1;
          *((void *)this + 1) = v22;
        }
        *(unsigned char *)(a1 + 10) = v21 != 0;
        *(_DWORD *)(a1 + 20) |= 4u;
        if ((unint64_t)v22 >= v8 || *v22 != 32) {
          continue;
        }
        BOOL v14 = v22 + 1;
        *((void *)this + 1) = v14;
LABEL_50:
        unsigned int v34 = 0;
        if ((unint64_t)v14 >= v8 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!result) {
            return result;
          }
          unsigned int v23 = v34;
          int v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v23 = *v14;
          int v24 = v14 + 1;
          *((void *)this + 1) = v24;
        }
        *(unsigned char *)(a1 + 11) = v23 != 0;
        *(_DWORD *)(a1 + 20) |= 8u;
        if ((unint64_t)v24 >= v8 || *v24 != 40) {
          continue;
        }
        int v15 = v24 + 1;
        *((void *)this + 1) = v15;
LABEL_58:
        unsigned int v34 = 0;
        if ((unint64_t)v15 >= v8 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!result) {
            return result;
          }
          unsigned int v25 = v34;
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v25 = *v15;
          int v26 = v15 + 1;
          *((void *)this + 1) = v26;
        }
        *(unsigned char *)(a1 + 12) = v25 != 0;
        *(_DWORD *)(a1 + 20) |= 0x10u;
        if ((unint64_t)v26 >= v8 || *v26 != 48) {
          continue;
        }
        BOOL v16 = v26 + 1;
        *((void *)this + 1) = v16;
LABEL_66:
        unsigned int v34 = 0;
        if ((unint64_t)v16 >= v8 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!result) {
            return result;
          }
          unsigned int v27 = v34;
          int v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v27 = *v16;
          int v28 = v16 + 1;
          *((void *)this + 1) = v28;
        }
        *(unsigned char *)(a1 + 13) = v27 != 0;
        *(_DWORD *)(a1 + 20) |= 0x20u;
        if ((unint64_t)v28 >= v8 || *v28 != 56) {
          continue;
        }
        unsigned int v17 = v28 + 1;
        *((void *)this + 1) = v17;
LABEL_74:
        unsigned int v34 = 0;
        if ((unint64_t)v17 >= v8 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!result) {
            return result;
          }
          unsigned int v29 = v34;
          unsigned int v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v29 = *v17;
          unsigned int v30 = v17 + 1;
          *((void *)this + 1) = v30;
        }
        *(unsigned char *)(a1 + 14) = v29 != 0;
        *(_DWORD *)(a1 + 20) |= 0x40u;
        if ((unint64_t)v30 >= v8 || *v30 != 64) {
          continue;
        }
        int v18 = v30 + 1;
        *((void *)this + 1) = v18;
LABEL_82:
        unsigned int v34 = 0;
        if ((unint64_t)v18 >= v8 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
          if (!result) {
            return result;
          }
          unsigned int v31 = v34;
          unsigned int v32 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v31 = *v18;
          unsigned int v32 = (unsigned __int8 *)(v18 + 1);
          *((void *)this + 1) = v32;
        }
        *(unsigned char *)(a1 + 15) = v31 != 0;
        *(_DWORD *)(a1 + 20) |= 0x80u;
        if (v32 != (unsigned __int8 *)v8 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_42;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        BOOL v14 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_50;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_58;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        BOOL v16 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_66;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_74;
      case 8u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_82;
      default:
        int v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1003FF1C0(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 14), a2, a4);
    if ((*(_DWORD *)(v5 + 20) & 0x80) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 13), a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return result;
  }
LABEL_17:
  int v7 = *(unsigned __int8 *)(v5 + 15);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, a2, a4);
}

uint64_t sub_1003FF2D8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v1)
  {
    unsigned int v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x80) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *(_DWORD *)(a1 + 16) = v3;
  return v3;
}

void sub_1003FF350(uint64_t a1, unsigned char *lpsrc)
{
  sub_1003FEA68(a1, lpsrc);
}

uint64_t sub_1003FF3D8()
{
  return 1;
}

void *sub_1003FF3E0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.FalseStepDetectorState");
}

void sub_1003FF3F0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v35);
  }
  int v4 = *(_DWORD *)(a2 + 148);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 148) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489E50 + 8);
    }
    sub_1003DE314(v6, v7);
    int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_33;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 148) |= 2u;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489E50 + 16);
  }
  sub_1003DE314(v8, v9);
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_38;
  }
LABEL_33:
  *(_DWORD *)(a1 + 148) |= 4u;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *(void *)(a2 + 24);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_102489E50 + 24);
  }
  sub_1003DE314(v10, v11);
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v12 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 148) |= 8u;
  *(_DWORD *)(a1 + 40) = v12;
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_40:
    uint64_t v14 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 148) |= 0x20u;
    *(void *)(a1 + 48) = v14;
    int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_39:
  uint64_t v13 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 148) |= 0x10u;
  *(void *)(a1 + 32) = v13;
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x20) != 0) {
    goto LABEL_40;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_41:
  int v15 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 148) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v15;
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 148) |= 0x80u;
    *(_DWORD *)(a1 + 72) = v5;
    int v4 = *(_DWORD *)(a2 + 148);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_57;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v16 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 148) |= 0x100u;
    *(void *)(a1 + 56) = v16;
    int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_45;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v17 = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 148) |= 0x200u;
  *(void *)(a1 + 64) = v17;
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t v18 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 148) |= 0x400u;
  *(void *)(a1 + 80) = v18;
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_47;
  }
LABEL_46:
  int v19 = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 148) |= 0x800u;
  *(_DWORD *)(a1 + 76) = v19;
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_47:
  uint64_t v20 = *(const std::string **)(a2 + 88);
  *(_DWORD *)(a1 + 148) |= 0x1000u;
  unsigned int v21 = *(std::string **)(a1 + 88);
  if (v21 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v21, v20);
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  char v22 = *(unsigned char *)(a2 + 96);
  *(_DWORD *)(a1 + 148) |= 0x2000u;
  *(unsigned char *)(a1 + 96) = v22;
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_52;
  }
LABEL_51:
  char v23 = *(unsigned char *)(a2 + 97);
  *(_DWORD *)(a1 + 148) |= 0x4000u;
  *(unsigned char *)(a1 + 97) = v23;
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x8000) == 0) {
    goto LABEL_57;
  }
LABEL_52:
  *(_DWORD *)(a1 + 148) |= 0x8000u;
  uint64_t v24 = *(void *)(a1 + 104);
  if (!v24) {
    operator new();
  }
  uint64_t v25 = *(void *)(a2 + 104);
  if (!v25) {
    uint64_t v25 = *(void *)(qword_102489E50 + 104);
  }
  sub_1003FE570(v24, v25);
  int v4 = *(_DWORD *)(a2 + 148);
LABEL_57:
  if ((v4 & 0xFF0000) == 0) {
    return;
  }
  if ((v4 & 0x10000) != 0)
  {
    int v26 = *(_DWORD *)(a2 + 100);
    *(_DWORD *)(a1 + 148) |= 0x10000u;
    *(_DWORD *)(a1 + 100) = v26;
    int v4 = *(_DWORD *)(a2 + 148);
    if ((v4 & 0x20000) == 0)
    {
LABEL_60:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_61;
      }
      goto LABEL_69;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_60;
  }
  int v27 = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 148) |= 0x20000u;
  *(_DWORD *)(a1 + 112) = v27;
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x40000) == 0)
  {
LABEL_61:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_70;
  }
LABEL_69:
  int v28 = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(a1 + 148) |= 0x40000u;
  *(_DWORD *)(a1 + 116) = v28;
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x80000) == 0)
  {
LABEL_62:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_71;
  }
LABEL_70:
  int v29 = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 148) |= 0x80000u;
  *(_DWORD *)(a1 + 120) = v29;
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x100000) == 0)
  {
LABEL_63:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_72;
  }
LABEL_71:
  int v30 = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 148) |= 0x100000u;
  *(_DWORD *)(a1 + 124) = v30;
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x200000) == 0)
  {
LABEL_64:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_73;
  }
LABEL_72:
  int v31 = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 148) |= 0x200000u;
  *(_DWORD *)(a1 + 128) = v31;
  int v4 = *(_DWORD *)(a2 + 148);
  if ((v4 & 0x400000) == 0)
  {
LABEL_65:
    if ((v4 & 0x800000) == 0) {
      return;
    }
    goto LABEL_75;
  }
LABEL_73:
  unsigned int v32 = *(_DWORD *)(a2 + 132);
  if (v32 >= 6) {
    sub_101A5F234();
  }
  *(_DWORD *)(a1 + 148) |= 0x400000u;
  *(_DWORD *)(a1 + 132) = v32;
  if ((*(_DWORD *)(a2 + 148) & 0x800000) != 0)
  {
LABEL_75:
    *(_DWORD *)(a1 + 148) |= 0x800000u;
    uint64_t v33 = *(void *)(a1 + 136);
    if (!v33) {
      operator new();
    }
    unsigned int v34 = *(unsigned char **)(a2 + 136);
    if (!v34) {
      unsigned int v34 = *(unsigned char **)(qword_102489E50 + 136);
    }
    sub_1003FEA68(v33, v34);
  }
}

void sub_1003FF98C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1003FF9A4(void *result)
{
  int v1 = result;
  uint64_t v2 = result[11];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)qword_102489E50 != result)
  {
    uint64_t v4 = result[1];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[2];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[3];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[13];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t result = (void *)v1[17];
    if (result)
    {
      uint64_t v8 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v8();
    }
  }
  return result;
}

void sub_1003FFB08(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B02A0;
  sub_1003FF9A4(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1003FFB5C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B02A0;
  sub_1003FF9A4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1003FFBC4()
{
}

uint64_t sub_1003FFC44(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 148);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(result + 148);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v1 = *(_DWORD *)(result + 148);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        int v1 = *(_DWORD *)(result + 148);
      }
    }
    *(_DWORD *)(result + 72) = 0;
    *(void *)(result + 40) = 0;
    *(void *)(result + 48) = 0;
    *(void *)(result + 32) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 80) = 0;
    *(_DWORD *)(result + 76) = 0;
    *(void *)(result + 56) = 0;
    *(void *)(result + 64) = 0;
    if ((v1 & 0x1000) != 0)
    {
      uint64_t v5 = *(void *)(result + 88);
      if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    *(_WORD *)(result + 96) = 0;
    int v1 = *(_DWORD *)(result + 148);
    if ((v1 & 0x8000) != 0)
    {
      uint64_t v6 = *(void *)(result + 104);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 36))
        {
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
          *(void *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 36) = 0;
        int v1 = *(_DWORD *)(result + 148);
      }
    }
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_DWORD *)(result + 100) = 0;
    *(void *)(result + 120) = 0;
    *(void *)(result + 128) = 0;
    *(void *)(result + 112) = 0;
    if ((v1 & 0x800000) != 0)
    {
      uint64_t v7 = *(void *)(result + 136);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 20)) {
          *(void *)(v7 + 8) = 0;
        }
        *(_DWORD *)(v7 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(result + 148) = 0;
  return result;
}

uint64_t sub_1003FFD78(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (unsigned int *)(a1 + 40);
  uint64_t v6 = (unsigned int *)(a1 + 44);
  uint64_t v7 = (unsigned int *)(a1 + 72);
  uint64_t v8 = (unsigned int *)(a1 + 100);
  uint64_t v104 = (unsigned int *)(a1 + 116);
  uint64_t v105 = (unsigned int *)(a1 + 112);
  unsigned int v103 = (unsigned int *)(a1 + 120);
  uint64_t v9 = (unsigned int *)(a1 + 124);
  uint64_t v10 = (unsigned int *)(a1 + 128);
  while (2)
  {
    uint64_t v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 148) |= 1u;
        uint64_t v14 = *(void *)(a1 + 8);
        if (!v14) {
          operator new();
        }
        v106[0] = 0;
        int v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106))return 0; {
        }
          }
        else
        {
          v106[0] = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v45 = *((_DWORD *)this + 14);
        int v46 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v45 + 1;
        if (v45 >= v46) {
          return 0;
        }
        int v47 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v106[0]);
        if (!sub_1003DE4BC(v14, this, v48) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v47);
        int v49 = *((_DWORD *)this + 14);
        BOOL v43 = __OFSUB__(v49, 1);
        int v50 = v49 - 1;
        if (v50 < 0 == v43) {
          *((_DWORD *)this + 14) = v50;
        }
        int v51 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v51 >= *((void *)this + 2) || *v51 != 18) {
          continue;
        }
        *((void *)this + 1) = v51 + 1;
        goto LABEL_87;
      case 2u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_65;
        }
LABEL_87:
        *(_DWORD *)(a1 + 148) |= 2u;
        uint64_t v52 = *(void *)(a1 + 16);
        if (!v52) {
          operator new();
        }
        v106[0] = 0;
        unsigned int v53 = (char *)*((void *)this + 1);
        if ((unint64_t)v53 >= *((void *)this + 2) || *v53 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106))return 0; {
        }
          }
        else
        {
          v106[0] = *v53;
          *((void *)this + 1) = v53 + 1;
        }
        int v54 = *((_DWORD *)this + 14);
        int v55 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v54 + 1;
        if (v54 >= v55) {
          return 0;
        }
        int v56 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v106[0]);
        if (!sub_1003DE4BC(v52, this, v57) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v56);
        int v58 = *((_DWORD *)this + 14);
        BOOL v43 = __OFSUB__(v58, 1);
        int v59 = v58 - 1;
        if (v59 < 0 == v43) {
          *((_DWORD *)this + 14) = v59;
        }
        int v60 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v60 >= *((void *)this + 2) || *v60 != 26) {
          continue;
        }
        *((void *)this + 1) = v60 + 1;
LABEL_101:
        *(_DWORD *)(a1 + 148) |= 4u;
        uint64_t v61 = *(void *)(a1 + 24);
        if (!v61) {
          operator new();
        }
        v106[0] = 0;
        int v62 = (char *)*((void *)this + 1);
        if ((unint64_t)v62 >= *((void *)this + 2) || *v62 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106))return 0; {
        }
          }
        else
        {
          v106[0] = *v62;
          *((void *)this + 1) = v62 + 1;
        }
        int v63 = *((_DWORD *)this + 14);
        int v64 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v63 + 1;
        if (v63 >= v64) {
          return 0;
        }
        int v65 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v106[0]);
        if (!sub_1003DE4BC(v61, this, v66) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v65);
        int v67 = *((_DWORD *)this + 14);
        BOOL v43 = __OFSUB__(v67, 1);
        int v68 = v67 - 1;
        if (v68 < 0 == v43) {
          *((_DWORD *)this + 14) = v68;
        }
        unsigned int v69 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v69 >= v16 || *v69 != 32) {
          continue;
        }
        uint64_t v17 = v69 + 1;
        *((void *)this + 1) = v17;
LABEL_115:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          uint64_t v70 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v5 = *v17;
          uint64_t v70 = v17 + 1;
          *((void *)this + 1) = v70;
        }
        *(_DWORD *)(a1 + 148) |= 8u;
        if ((unint64_t)v70 >= v16 || *v70 != 41) {
          continue;
        }
        *((void *)this + 1) = v70 + 1;
LABEL_123:
        *(void *)__int16 v106 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v106) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v106;
        }
        *(_DWORD *)(a1 + 148) |= 0x10u;
        unsigned int v72 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v72 >= *((void *)this + 2) || *v72 != 49) {
          continue;
        }
        *((void *)this + 1) = v72 + 1;
LABEL_127:
        *(void *)__int16 v106 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v106) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v106;
        }
        *(_DWORD *)(a1 + 148) |= 0x20u;
        int v73 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v73 >= v18 || *v73 != 56) {
          continue;
        }
        int v19 = v73 + 1;
        *((void *)this + 1) = v19;
LABEL_131:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v74 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v6 = *v19;
          int v74 = v19 + 1;
          *((void *)this + 1) = v74;
        }
        *(_DWORD *)(a1 + 148) |= 0x40u;
        if ((unint64_t)v74 >= v18 || *v74 != 64) {
          continue;
        }
        uint64_t v20 = v74 + 1;
        *((void *)this + 1) = v20;
LABEL_139:
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v75 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v20;
          int v75 = v20 + 1;
          *((void *)this + 1) = v75;
        }
        *(_DWORD *)(a1 + 148) |= 0x80u;
        if ((unint64_t)v75 >= v18 || *v75 != 73) {
          continue;
        }
        *((void *)this + 1) = v75 + 1;
LABEL_147:
        *(void *)__int16 v106 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v106) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v106;
        }
        *(_DWORD *)(a1 + 148) |= 0x100u;
        unsigned int v76 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v76 >= *((void *)this + 2) || *v76 != 81) {
          continue;
        }
        *((void *)this + 1) = v76 + 1;
LABEL_151:
        *(void *)__int16 v106 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v106) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v106;
        }
        *(_DWORD *)(a1 + 148) |= 0x200u;
        int v77 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v77 >= *((void *)this + 2) || *v77 != 89) {
          continue;
        }
        *((void *)this + 1) = v77 + 1;
LABEL_155:
        *(void *)__int16 v106 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v106) & 1) == 0)return 0; {
        *(void *)(a1 + 80) = *(void *)v106;
        }
        *(_DWORD *)(a1 + 148) |= 0x400u;
        int v78 = (unsigned char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((unint64_t)v78 >= v21 || *v78 != 96) {
          continue;
        }
        char v22 = v78 + 1;
        *((void *)this + 1) = v22;
LABEL_159:
        v106[0] = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106);
          if (!result) {
            return result;
          }
          unsigned int v79 = v106[0];
          uint64_t v80 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          unsigned int v79 = *v22;
          uint64_t v80 = v22 + 1;
          *((void *)this + 1) = v80;
        }
        *(_DWORD *)(a1 + 76) = v79;
        int v23 = *(_DWORD *)(a1 + 148) | 0x800;
        *(_DWORD *)(a1 + 148) = v23;
        if ((unint64_t)v80 >= v21 || *v80 != 106) {
          continue;
        }
        *((void *)this + 1) = v80 + 1;
LABEL_167:
        *(_DWORD *)(a1 + 148) = v23 | 0x1000;
        if (*(_UNKNOWN **)(a1 + 88) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v81 = (unsigned char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        if ((unint64_t)v81 >= v24 || *v81 != 112) {
          continue;
        }
        uint64_t v25 = v81 + 1;
        *((void *)this + 1) = v25;
LABEL_173:
        v106[0] = 0;
        if ((unint64_t)v25 >= v24 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106);
          if (!result) {
            return result;
          }
          unsigned int v82 = v106[0];
          int v83 = (unsigned char *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
        }
        else
        {
          unsigned int v82 = *v25;
          int v83 = v25 + 1;
          *((void *)this + 1) = v83;
        }
        *(unsigned char *)(a1 + 96) = v82 != 0;
        *(_DWORD *)(a1 + 148) |= 0x2000u;
        if ((unint64_t)v83 >= v24 || *v83 != 120) {
          continue;
        }
        int v26 = v83 + 1;
        *((void *)this + 1) = v26;
LABEL_181:
        v106[0] = 0;
        if ((unint64_t)v26 >= v24 || (char)*v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106);
          if (!result) {
            return result;
          }
          unsigned int v84 = v106[0];
          unsigned int v85 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
        }
        else
        {
          unsigned int v84 = *v26;
          unsigned int v85 = v26 + 1;
          *((void *)this + 1) = v85;
        }
        *(unsigned char *)(a1 + 97) = v84 != 0;
        int v27 = *(_DWORD *)(a1 + 148) | 0x4000;
        *(_DWORD *)(a1 + 148) = v27;
        if ((int)v24 - (int)v85 < 2 || *v85 != 130 || v85[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v85 + 2;
LABEL_190:
        *(_DWORD *)(a1 + 148) = v27 | 0x8000;
        uint64_t v86 = *(void *)(a1 + 104);
        if (!v86) {
          operator new();
        }
        v106[0] = 0;
        int v87 = (char *)*((void *)this + 1);
        if ((unint64_t)v87 >= *((void *)this + 2) || *v87 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106))return 0; {
        }
          }
        else
        {
          v106[0] = *v87;
          *((void *)this + 1) = v87 + 1;
        }
        int v88 = *((_DWORD *)this + 14);
        int v89 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v88 + 1;
        if (v88 >= v89) {
          return 0;
        }
        int v90 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v106[0]);
        if (!sub_1003FE73C(v86, this, v91) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v90);
        int v92 = *((_DWORD *)this + 14);
        BOOL v43 = __OFSUB__(v92, 1);
        int v93 = v92 - 1;
        if (v93 < 0 == v43) {
          *((_DWORD *)this + 14) = v93;
        }
        int v94 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        if ((int)v28 - (int)v94 <= 1 || *v94 != 136 || v94[1] != 1) {
          continue;
        }
        int v29 = v94 + 2;
        *((void *)this + 1) = v29;
LABEL_205:
        if ((unint64_t)v29 >= v28 || (char)*v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v95 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v8 = *v29;
          int v95 = v29 + 1;
          *((void *)this + 1) = v95;
        }
        *(_DWORD *)(a1 + 148) |= 0x10000u;
        if ((int)v28 - (int)v95 < 2 || *v95 != 144 || v95[1] != 1) {
          continue;
        }
        int v30 = v95 + 2;
        *((void *)this + 1) = v30;
LABEL_214:
        if ((unint64_t)v30 >= v28 || (char)*v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v105);
          if (!result) {
            return result;
          }
          unsigned int v96 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v105 = *v30;
          unsigned int v96 = v30 + 1;
          *((void *)this + 1) = v96;
        }
        *(_DWORD *)(a1 + 148) |= 0x20000u;
        if ((int)v28 - (int)v96 < 2 || *v96 != 152 || v96[1] != 1) {
          continue;
        }
        int v31 = v96 + 2;
        *((void *)this + 1) = v31;
LABEL_223:
        if ((unint64_t)v31 >= v28 || (char)*v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v104);
          if (!result) {
            return result;
          }
          int v97 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v104 = *v31;
          int v97 = v31 + 1;
          *((void *)this + 1) = v97;
        }
        *(_DWORD *)(a1 + 148) |= 0x40000u;
        if ((int)v28 - (int)v97 < 2 || *v97 != 160 || v97[1] != 1) {
          continue;
        }
        unsigned int v32 = v97 + 2;
        *((void *)this + 1) = v32;
LABEL_232:
        if ((unint64_t)v32 >= v28 || (char)*v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v103);
          if (!result) {
            return result;
          }
          int v98 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
        }
        else
        {
          *unsigned int v103 = *v32;
          int v98 = v32 + 1;
          *((void *)this + 1) = v98;
        }
        *(_DWORD *)(a1 + 148) |= 0x80000u;
        if ((int)v28 - (int)v98 < 2 || *v98 != 168 || v98[1] != 1) {
          continue;
        }
        uint64_t v33 = v98 + 2;
        *((void *)this + 1) = v33;
LABEL_241:
        if ((unint64_t)v33 >= v28 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          unsigned int v99 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v9 = *v33;
          unsigned int v99 = v33 + 1;
          *((void *)this + 1) = v99;
        }
        *(_DWORD *)(a1 + 148) |= 0x100000u;
        if ((int)v28 - (int)v99 < 2 || *v99 != 176 || v99[1] != 1) {
          continue;
        }
        unsigned int v34 = v99 + 2;
        *((void *)this + 1) = v34;
LABEL_250:
        if ((unint64_t)v34 >= v28 || (char)*v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          int v100 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v10 = *v34;
          int v100 = v34 + 1;
          *((void *)this + 1) = v100;
        }
        *(_DWORD *)(a1 + 148) |= 0x200000u;
        if ((int)v28 - (int)v100 < 2 || *v100 != 184 || v100[1] != 1) {
          continue;
        }
        uint64_t v35 = (char *)(v100 + 2);
        *((void *)this + 1) = v35;
LABEL_259:
        v106[0] = 0;
        if ((unint64_t)v35 >= v28 || *v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106);
          if (!result) {
            return result;
          }
          unsigned int v101 = v106[0];
        }
        else
        {
          unsigned int v101 = *v35;
          *((void *)this + 1) = v35 + 1;
        }
        if (v101 <= 5)
        {
          *(_DWORD *)(a1 + 148) |= 0x400000u;
          *(_DWORD *)(a1 + 132) = v101;
        }
        int v102 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v102 < 2 || *v102 != 194 || v102[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v102 + 2;
LABEL_60:
        *(_DWORD *)(a1 + 148) |= 0x800000u;
        uint64_t v36 = *(void *)(a1 + 136);
        if (!v36) {
          operator new();
        }
        v106[0] = 0;
        int v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v106))return 0; {
        }
          }
        else
        {
          v106[0] = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 < v39)
        {
          int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v106[0]);
          if (sub_1003FECC8(v36, this, v41))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
              int v42 = *((_DWORD *)this + 14);
              BOOL v43 = __OFSUB__(v42, 1);
              int v44 = v42 - 1;
              if (v44 < 0 == v43) {
                *((_DWORD *)this + 14) = v44;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_101;
        }
        goto LABEL_65;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_115;
      case 5u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_123;
        }
        goto LABEL_65;
      case 6u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_127;
        }
        goto LABEL_65;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_131;
      case 8u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_139;
      case 9u:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_147;
        }
        goto LABEL_65;
      case 0xAu:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_151;
        }
        goto LABEL_65;
      case 0xBu:
        int v13 = TagFallback & 7;
        if (v13 == 1) {
          goto LABEL_155;
        }
        goto LABEL_65;
      case 0xCu:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        char v22 = (char *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        goto LABEL_159;
      case 0xDu:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_65;
        }
        int v23 = *(_DWORD *)(a1 + 148);
        goto LABEL_167;
      case 0xEu:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        uint64_t v25 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_173;
      case 0xFu:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        int v26 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_181;
      case 0x10u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_65;
        }
        int v27 = *(_DWORD *)(a1 + 148);
        goto LABEL_190;
      case 0x11u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        int v29 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        goto LABEL_205;
      case 0x12u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        int v30 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        goto LABEL_214;
      case 0x13u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        int v31 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        goto LABEL_223;
      case 0x14u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        unsigned int v32 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        goto LABEL_232;
      case 0x15u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        uint64_t v33 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        goto LABEL_241;
      case 0x16u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        unsigned int v34 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        goto LABEL_250;
      case 0x17u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        uint64_t v35 = (char *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        goto LABEL_259;
      case 0x18u:
        int v13 = TagFallback & 7;
        if (v13 == 2) {
          goto LABEL_60;
        }
        goto LABEL_65;
      default:
        int v13 = TagFallback & 7;
LABEL_65:
        if (v13 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100400D5C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 148);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489E50 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 148);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_32;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489E50 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
LABEL_32:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489E50 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 40), a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 44), a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 72), a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 76), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned __int8 *)(v5 + 96), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned __int8 *)(v5 + 97), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_47:
  uint64_t v10 = *(void *)(v5 + 104);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_102489E50 + 104);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(_DWORD *)(v5 + 100), a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(_DWORD *)(v5 + 112), a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(_DWORD *)(v5 + 116), a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(_DWORD *)(v5 + 120), a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(_DWORD *)(v5 + 124), a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
LABEL_56:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(_DWORD *)(v5 + 132), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 148) & 0x800000) == 0) {
      return result;
    }
    goto LABEL_57;
  }
LABEL_55:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(_DWORD *)(v5 + 128), a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x400000) != 0) {
    goto LABEL_56;
  }
LABEL_24:
  if ((v6 & 0x800000) == 0) {
    return result;
  }
LABEL_57:
  uint64_t v11 = *(void *)(v5 + 136);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_102489E50 + 136);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v11, a2, a4);
}

uint64_t sub_100401084(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 148);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_55;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_102489E50 + 8);
  }
  int v7 = *(unsigned __int8 *)(v6 + 36);
  if (*(unsigned char *)(v6 + 36))
  {
    int v8 = (v7 << 31 >> 31) & 9;
    if ((v7 & 2) != 0) {
      v8 += 9;
    }
    if ((v7 & 4) != 0) {
      int v7 = v8 + 9;
    }
    else {
      int v7 = v8;
    }
  }
  *(_DWORD *)(v6 + 32) = v7;
  int v4 = v7 + 2;
  int v3 = *(_DWORD *)(a1 + 148);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489E50 + 16);
    }
    int v10 = *(unsigned __int8 *)(v9 + 36);
    if (*(unsigned char *)(v9 + 36))
    {
      int v11 = (v10 << 31 >> 31) & 9;
      if ((v10 & 2) != 0) {
        v11 += 9;
      }
      if ((v10 & 4) != 0) {
        int v10 = v11 + 9;
      }
      else {
        int v10 = v11;
      }
    }
    *(_DWORD *)(v9 + 32) = v10;
    v4 += v10 + 2;
    int v3 = *(_DWORD *)(a1 + 148);
  }
LABEL_24:
  if ((v3 & 4) != 0)
  {
    uint64_t v12 = *(void *)(a1 + 24);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_102489E50 + 24);
    }
    int v13 = *(unsigned __int8 *)(v12 + 36);
    if (*(unsigned char *)(v12 + 36))
    {
      int v14 = (v13 << 31 >> 31) & 9;
      if ((v13 & 2) != 0) {
        v14 += 9;
      }
      if ((v13 & 4) != 0) {
        int v13 = v14 + 9;
      }
      else {
        int v13 = v14;
      }
    }
    *(_DWORD *)(v12 + 32) = v13;
    v4 += v13 + 2;
    int v3 = *(_DWORD *)(a1 + 148);
    if ((v3 & 8) == 0) {
      goto LABEL_40;
    }
    goto LABEL_36;
  }
  if ((v3 & 8) != 0)
  {
LABEL_36:
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
      int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v16 = 1;
    }
    v4 += v16 + 1;
  }
LABEL_40:
  unsigned int v17 = v4 + 9;
  if ((v3 & 0x10) == 0) {
    unsigned int v17 = v4;
  }
  if ((v3 & 0x20) != 0) {
    uint64_t v5 = v17 + 9;
  }
  else {
    uint64_t v5 = v17;
  }
  if ((v3 & 0x40) != 0)
  {
    unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v19 = 1;
    }
    uint64_t v5 = (v5 + v19 + 1);
  }
  if ((v3 & 0x80) != 0)
  {
    uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
    if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
      int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v21 = 1;
    }
    uint64_t v5 = (v5 + v21 + 1);
  }
LABEL_55:
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v22 = v5 + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v22 = v5;
    }
    if ((v3 & 0x200) != 0) {
      v22 += 9;
    }
    if ((v3 & 0x400) != 0) {
      unsigned int v23 = v22 + 9;
    }
    else {
      unsigned int v23 = v22;
    }
    if ((v3 & 0x800) != 0)
    {
      unint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
      if ((v24 & 0x80000000) != 0)
      {
        int v25 = 10;
      }
      else if (v24 >= 0x80)
      {
        int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
        int v3 = *(_DWORD *)(a1 + 148);
      }
      else
      {
        int v25 = 1;
      }
      v23 += v25 + 1;
    }
    if ((v3 & 0x1000) != 0)
    {
      uint64_t v26 = *(void *)(a1 + 88);
      int v27 = *(unsigned __int8 *)(v26 + 23);
      char v28 = v27;
      uint64_t v29 = *(void *)(v26 + 8);
      if ((v27 & 0x80u) == 0) {
        unint64_t v30 = *(unsigned __int8 *)(v26 + 23);
      }
      else {
        unint64_t v30 = v29;
      }
      if (v30 >= 0x80)
      {
        int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30, a2);
        int v27 = *(unsigned __int8 *)(v26 + 23);
        uint64_t v29 = *(void *)(v26 + 8);
        int v3 = *(_DWORD *)(a1 + 148);
        char v28 = *(unsigned char *)(v26 + 23);
      }
      else
      {
        int v31 = 1;
      }
      if (v28 < 0) {
        int v27 = v29;
      }
      v23 += v31 + v27 + 1;
    }
    unsigned int v32 = v23 + 2;
    if ((v3 & 0x2000) == 0) {
      unsigned int v32 = v23;
    }
    if ((v3 & 0x4000) != 0) {
      uint64_t v5 = v32 + 2;
    }
    else {
      uint64_t v5 = v32;
    }
    if ((v3 & 0x8000) != 0)
    {
      uint64_t v33 = *(void *)(a1 + 104);
      if (!v33) {
        uint64_t v33 = *(void *)(qword_102489E50 + 104);
      }
      int v34 = *(unsigned __int8 *)(v33 + 36);
      int v35 = (v34 << 31 >> 31) & 9;
      if ((v34 & 2) != 0) {
        v35 += 9;
      }
      if ((v34 & 4) != 0) {
        v35 += 9;
      }
      if (*(unsigned char *)(v33 + 36)) {
        int v36 = v35;
      }
      else {
        int v36 = 0;
      }
      *(_DWORD *)(v33 + 32) = v36;
      uint64_t v5 = (v5 + v36 + 3);
      int v3 = *(_DWORD *)(a1 + 148);
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
      if (v37 >= 0x80)
      {
        int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37, a2);
        int v3 = *(_DWORD *)(a1 + 148);
      }
      else
      {
        int v38 = 1;
      }
      uint64_t v5 = (v5 + v38 + 2);
      if ((v3 & 0x20000) == 0)
      {
LABEL_99:
        if ((v3 & 0x40000) == 0) {
          goto LABEL_100;
        }
        goto LABEL_114;
      }
    }
    else if ((v3 & 0x20000) == 0)
    {
      goto LABEL_99;
    }
    int v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 112);
    if (v39 >= 0x80)
    {
      int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39, a2) + 2;
      int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v40 = 3;
    }
    uint64_t v5 = (v40 + v5);
    if ((v3 & 0x40000) == 0)
    {
LABEL_100:
      if ((v3 & 0x80000) == 0) {
        goto LABEL_101;
      }
      goto LABEL_118;
    }
LABEL_114:
    unsigned int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 116);
    if (v41 >= 0x80)
    {
      int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41, a2) + 2;
      int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v42 = 3;
    }
    uint64_t v5 = (v42 + v5);
    if ((v3 & 0x80000) == 0)
    {
LABEL_101:
      if ((v3 & 0x100000) == 0) {
        goto LABEL_102;
      }
      goto LABEL_122;
    }
LABEL_118:
    BOOL v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
    if (v43 >= 0x80)
    {
      int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43, a2) + 2;
      int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v44 = 3;
    }
    uint64_t v5 = (v44 + v5);
    if ((v3 & 0x100000) == 0)
    {
LABEL_102:
      if ((v3 & 0x200000) == 0) {
        goto LABEL_103;
      }
      goto LABEL_126;
    }
LABEL_122:
    int v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 124);
    if (v45 >= 0x80)
    {
      int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45, a2) + 2;
      int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v46 = 3;
    }
    uint64_t v5 = (v46 + v5);
    if ((v3 & 0x200000) == 0)
    {
LABEL_103:
      if ((v3 & 0x400000) == 0) {
        goto LABEL_104;
      }
      goto LABEL_130;
    }
LABEL_126:
    int v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 128);
    if (v47 >= 0x80)
    {
      int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47, a2) + 2;
      int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v48 = 3;
    }
    uint64_t v5 = (v48 + v5);
    if ((v3 & 0x400000) == 0)
    {
LABEL_104:
      if ((v3 & 0x800000) == 0) {
        goto LABEL_142;
      }
LABEL_136:
      uint64_t v51 = *(void *)(a1 + 136);
      if (!v51) {
        uint64_t v51 = *(void *)(qword_102489E50 + 136);
      }
      uint64_t v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003FF2D8(v51);
      int v54 = (int)v52;
      if (v52 >= 0x80) {
        int v55 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52, v53);
      }
      else {
        int v55 = 1;
      }
      uint64_t v5 = (v5 + v54 + v55 + 2);
      goto LABEL_142;
    }
LABEL_130:
    int v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 132);
    if ((v49 & 0x80000000) != 0)
    {
      int v50 = 12;
    }
    else if (v49 >= 0x80)
    {
      int v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49, a2) + 2;
      int v3 = *(_DWORD *)(a1 + 148);
    }
    else
    {
      int v50 = 3;
    }
    uint64_t v5 = (v50 + v5);
    if ((v3 & 0x800000) == 0) {
      goto LABEL_142;
    }
    goto LABEL_136;
  }
LABEL_142:
  *(_DWORD *)(a1 + 144) = v5;
  return v5;
}

void sub_10040151C(uint64_t a1, void *lpsrc)
{
  sub_1003FF3F0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1004015A4()
{
  return 1;
}

void *sub_1004015AC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.StepCountEntry");
}

void sub_1004015BC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 32))
    {
      *(_DWORD *)(a1 + 32) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489E58 + 8);
      }
      sub_1003DE314(v5, v6);
      int v4 = *(_DWORD *)(a2 + 32);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((*(unsigned char *)(a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v7;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return;
    }
LABEL_14:
    *(_DWORD *)(a1 + 32) |= 4u;
    uint64_t v8 = *(void *)(a1 + 16);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489E58 + 16);
    }
    sub_1003FF3F0(v8, v9);
  }
}

void sub_100401774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_10040178C(void *result)
{
  if ((void *)qword_102489E58 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_10040182C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0318;
  sub_10040178C(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100401880(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0318;
  sub_10040178C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1004018E8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489E58;
  if (!qword_102489E58)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489E58;
  }
  return result;
}

void sub_100401918()
{
}

uint64_t sub_100401968(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 32);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 32))
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 32);
      }
    }
    *(_DWORD *)(result + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_1003FFC44(result);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1004019CC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)this + 1);
          if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)this + 8) = TagFallback;
            *((void *)this + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 32) |= 1u;
          uint64_t v10 = *(void *)(a1 + 8);
          if (!v10) {
            operator new();
          }
          unsigned int v34 = 0;
          int v11 = (char *)*((void *)this + 1);
          if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34))return 0; {
          }
            }
          else
          {
            unsigned int v34 = *v11;
            *((void *)this + 1) = v11 + 1;
          }
          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          if (!sub_1003DE4BC(v10, this, v17) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v21 < v12 && *v21 == 16)
          {
            int v13 = v21 + 1;
            *((void *)this + 1) = v13;
            goto LABEL_32;
          }
        }
        if (v7 == 2) {
          break;
        }
        if (v7 == 3)
        {
          int v8 = TagFallback & 7;
          if (v8 == 2)
          {
            int v9 = *(_DWORD *)(a1 + 32);
            goto LABEL_40;
          }
        }
        else
        {
          int v8 = TagFallback & 7;
        }
LABEL_20:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      int v13 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_32:
      unsigned int v33 = 0;
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33);
        if (!result) {
          return result;
        }
        unsigned int v22 = v33;
        unsigned int v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        unsigned int v22 = *v13;
        unsigned int v23 = v13 + 1;
        *((void *)this + 1) = v23;
      }
      *(_DWORD *)(a1 + 24) = v22;
      int v9 = *(_DWORD *)(a1 + 32) | 2;
      *(_DWORD *)(a1 + 32) = v9;
    }
    while ((unint64_t)v23 >= v12 || *v23 != 26);
    *((void *)this + 1) = v23 + 1;
LABEL_40:
    *(_DWORD *)(a1 + 32) = v9 | 4;
    uint64_t v25 = *(void *)(a1 + 16);
    if (!v25) {
      operator new();
    }
    unsigned int v35 = 0;
    uint64_t v26 = (char *)*((void *)this + 1);
    if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35)) {
        return 0;
      }
    }
    else
    {
      unsigned int v35 = *v26;
      *((void *)this + 1) = v26 + 1;
    }
    int v27 = *((_DWORD *)this + 14);
    int v28 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v27 + 1;
    if (v27 >= v28) {
      return 0;
    }
    int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v35);
    if (!sub_1003FFD78(v25, this, v30) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
    int v31 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v31, 1);
    int v32 = v31 - 1;
    if (v32 < 0 == v19) {
      *((_DWORD *)this + 14) = v32;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_100401D80(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return result;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(result + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_102489E58 + 8);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return result;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489E58 + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t sub_100401E2C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_102489E58 + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(unsigned char *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }
    *(_DWORD *)(v5 + 32) = v6;
    uint64_t v4 = (v6 + 2);
    int v3 = *(_DWORD *)(a1 + 32);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v8 & 0x80000000) != 0)
  {
    int v9 = 11;
  }
  else if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 32);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v4 = (v9 + v4);
LABEL_21:
  if ((v3 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_102489E58 + 16);
    }
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100401084(v10, a2);
    int v13 = (int)v11;
    if (v11 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, v12);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v4 + v13 + v14 + 1);
  }
LABEL_28:
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

void sub_100401F40(uint64_t a1, void *lpsrc)
{
  sub_1004015BC(a1, (uint64_t)lpsrc);
}

uint64_t sub_100401FC8()
{
  return 1;
}

void *sub_100401FD0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.StepCount");
}

float sub_100401FE0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      float result = *(float *)(a2 + 8);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(float *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 24);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*(unsigned char *)(a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    float result = *(float *)(a2 + 12);
    *(_DWORD *)(a1 + 24) |= 2u;
    *(float *)(a1 + 12) = result;
    if ((*(_DWORD *)(a2 + 24) & 4) == 0) {
      return result;
    }
LABEL_7:
    float result = *(float *)(a2 + 16);
    *(_DWORD *)(a1 + 24) |= 4u;
    *(float *)(a1 + 16) = result;
  }
  return result;
}

void sub_1004020B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1004020CC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0390;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1004020EC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0390;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100402140()
{
}

uint64_t sub_100402190(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    *(void *)(result + 8) = 0;
    *(_DWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1004021A8(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_27;
        }
        unsigned int v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        a1[2] = v14;
        a1[6] |= 1u;
        int v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 < *((void *)this + 2) && *v9 == 21)
        {
          *((void *)this + 1) = v9 + 1;
LABEL_17:
          unsigned int v13 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0) {
            return 0;
          }
          a1[3] = v13;
          a1[6] |= 2u;
          uint64_t v10 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 29)
          {
            *((void *)this + 1) = v10 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v7 == 2)
      {
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v7 != 3)
      {
        int v8 = TagFallback & 7;
        goto LABEL_27;
      }
      int v8 = TagFallback & 7;
      if (v8 == 5) {
        break;
      }
LABEL_27:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unsigned int v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    a1[4] = v12;
    a1[6] |= 4u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_100402370(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 24);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(float *)(v4 + 12), a3);
    if ((*(_DWORD *)(v4 + 24) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(float *)(result + 8), a3);
  int v5 = *(_DWORD *)(v4 + 24);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return result;
  }
LABEL_7:
  float v6 = *(float *)(v4 + 16);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, v6, a3);
}

uint64_t sub_1004023FC(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 5;
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

float sub_100402434(uint64_t a1, void *lpsrc)
{
  return sub_100401FE0(a1, (uint64_t)lpsrc);
}

uint64_t sub_1004024BC()
{
  return 1;
}

void *sub_1004024C4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MotionTypeVector3");
}

double sub_1004024D4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 44);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 44))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 44) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 44);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(double *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }
LABEL_12:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(double *)(a1 + 24) = result;
    if ((*(_DWORD *)(a2 + 44) & 8) == 0) {
      return result;
    }
LABEL_8:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(double *)(a1 + 32) = result;
  }
  return result;
}

void sub_1004025C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1004025E0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0408;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100402600(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0408;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100402654()
{
}

uint64_t sub_1004026AC(uint64_t result)
{
  if (*(unsigned char *)(result + 44))
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  *(_DWORD *)(result + 44) = 0;
  return result;
}

uint64_t sub_1004026C8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_29;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v12;
        *(_DWORD *)(a1 + 44) |= 1u;
        int v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 17) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_29;
        }
LABEL_14:
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v12;
        *(_DWORD *)(a1 + 44) |= 2u;
        int v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 25) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v12;
        *(_DWORD *)(a1 + 44) |= 4u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 33) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v12;
        *(_DWORD *)(a1 + 44) |= 8u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_24;
        }
        goto LABEL_29;
      default:
        int v7 = TagFallback & 7;
LABEL_29:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_100402910(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 44);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(double *)(v4 + 24), a3);
      if ((*(_DWORD *)(v4 + 44) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v4 + 16), a3);
  int v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v5 & 8) == 0) {
    return result;
  }
LABEL_9:
  double v6 = *(double *)(v4 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, v6, a3);
}

uint64_t sub_1004029B8(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 44);
  if (*(unsigned char *)(a1 + 44))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 40) = v1;
  return v1;
}

double sub_1004029FC(uint64_t a1, void *lpsrc)
{
  return sub_1004024D4(a1, (uint64_t)lpsrc);
}

uint64_t sub_100402A84()
{
  return 1;
}

void *sub_100402A8C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MotionTypeDoubleVector4");
}

double sub_100402A9C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  int v5 = *(_DWORD *)(a2 + 68);
  if ((_BYTE)v5)
  {
    if (v5)
    {
      *(_DWORD *)(a1 + 68) |= 1u;
      uint64_t v7 = *(void *)(a1 + 8);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 8);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_102489E70 + 8);
      }
      *(float *)&double result = sub_100401FE0(v7, v8);
      int v5 = *(_DWORD *)(a2 + 68);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_29;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 68) |= 2u;
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_102489E70 + 16);
    }
    *(float *)&double result = sub_100401FE0(v9, v10);
    int v5 = *(_DWORD *)(a2 + 68);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_30;
    }
LABEL_29:
    LODWORD(result) = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 68) |= 4u;
    *(_DWORD *)(a1 + 24) = LODWORD(result);
    int v5 = *(_DWORD *)(a2 + 68);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_31;
    }
LABEL_30:
    LODWORD(result) = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 68) |= 8u;
    *(_DWORD *)(a1 + 28) = LODWORD(result);
    int v5 = *(_DWORD *)(a2 + 68);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_32;
    }
LABEL_31:
    LODWORD(result) = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 68) |= 0x10u;
    *(_DWORD *)(a1 + 32) = LODWORD(result);
    int v5 = *(_DWORD *)(a2 + 68);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
LABEL_32:
    int v11 = *(_DWORD *)(a2 + 36);
    if ((v11 + 1) >= 8) {
      sub_101A5F260();
    }
    *(_DWORD *)(a1 + 68) |= 0x20u;
    *(_DWORD *)(a1 + 36) = v11;
    int v5 = *(_DWORD *)(a2 + 68);
    if ((v5 & 0x40) == 0) {
      goto LABEL_12;
    }
LABEL_11:
    char v6 = *(unsigned char *)(a2 + 40);
    *(_DWORD *)(a1 + 68) |= 0x40u;
    *(unsigned char *)(a1 + 40) = v6;
    int v5 = *(_DWORD *)(a2 + 68);
LABEL_12:
    if ((v5 & 0x80) != 0)
    {
      LODWORD(result) = *(_DWORD *)(a2 + 44);
      *(_DWORD *)(a1 + 68) |= 0x80u;
      *(_DWORD *)(a1 + 44) = LODWORD(result);
      int v5 = *(_DWORD *)(a2 + 68);
    }
  }
  if ((v5 & 0xFF00) == 0) {
    return result;
  }
  if ((v5 & 0x100) == 0)
  {
    if ((v5 & 0x200) == 0) {
      goto LABEL_17;
    }
LABEL_36:
    LODWORD(result) = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 68) |= 0x200u;
    *(_DWORD *)(a1 + 52) = LODWORD(result);
    if ((*(_DWORD *)(a2 + 68) & 0x400) == 0) {
      return result;
    }
    goto LABEL_37;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 68) |= 0x100u;
  *(_DWORD *)(a1 + 48) = LODWORD(result);
  int v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x200) != 0) {
    goto LABEL_36;
  }
LABEL_17:
  if ((v5 & 0x400) == 0) {
    return result;
  }
LABEL_37:
  *(_DWORD *)(a1 + 68) |= 0x400u;
  uint64_t v12 = *(void *)(a1 + 56);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = *(void *)(a2 + 56);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_102489E70 + 56);
  }
  return sub_1004024D4(v12, v13);
}

void sub_100402D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100402DB0(void *result)
{
  if ((void *)qword_102489E70 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    double result = (void *)v1[7];
    if (result)
    {
      uint64_t v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_100402E7C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0480;
  sub_100402DB0(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100402ED0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0480;
  sub_100402DB0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100402F38()
{
}

uint64_t sub_100402FA0(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 68);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        int v1 = *(_DWORD *)(result + 68);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v1 = *(_DWORD *)(result + 68);
      }
    }
    *(void *)(result + 24) = 0;
    *(void *)(result + 32) = 0xFFFFFFFF00000000;
    *(unsigned char *)(result + 40) = 0;
    *(_DWORD *)(result + 44) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 48) = 0;
    if ((v1 & 0x400) != 0)
    {
      uint64_t v4 = *(void *)(result + 56);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 44))
        {
          *(_OWORD *)(v4 + 24) = 0u;
          *(_OWORD *)(v4 + 8) = 0u;
        }
        *(_DWORD *)(v4 + 44) = 0;
      }
    }
  }
  *(_DWORD *)(result + 68) = 0;
  return result;
}

uint64_t sub_10040303C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 68) |= 1u;
        uint64_t v8 = *(_DWORD **)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v51 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
        }
          }
        else
        {
          unsigned int v51 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
        if (!sub_1004021A8(v8, this, v18) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        unsigned int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 18) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
        goto LABEL_46;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_34;
        }
LABEL_46:
        *(_DWORD *)(a1 + 68) |= 2u;
        unsigned int v23 = *(_DWORD **)(a1 + 16);
        if (!v23) {
          operator new();
        }
        unsigned int v51 = 0;
        unint64_t v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
        }
          }
        else
        {
          unsigned int v51 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
        if (!sub_1004021A8(v23, this, v28) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v29 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v20) {
          *((_DWORD *)this + 14) = v30;
        }
        int v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 29) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
LABEL_60:
        unsigned int v51 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v51) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 24) = v51;
        *(_DWORD *)(a1 + 68) |= 4u;
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 37) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_64:
        unsigned int v51 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v51) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 28) = v51;
        *(_DWORD *)(a1 + 68) |= 8u;
        unsigned int v33 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 != 45) {
          continue;
        }
        *((void *)this + 1) = v33 + 1;
LABEL_68:
        unsigned int v51 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v51) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 32) = v51;
        *(_DWORD *)(a1 + 68) |= 0x10u;
        unsigned int v34 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v34 >= v10 || *v34 != 48) {
          continue;
        }
        int v11 = v34 + 1;
        *((void *)this + 1) = v11;
LABEL_72:
        unsigned int v51 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51);
          if (!result) {
            return result;
          }
          unsigned int v35 = v51;
        }
        else
        {
          unsigned int v35 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v35 + 1 <= 7)
        {
          *(_DWORD *)(a1 + 68) |= 0x20u;
          *(_DWORD *)(a1 + 36) = v35;
        }
        int v37 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v37 >= v12 || *v37 != 56) {
          continue;
        }
        uint64_t v13 = v37 + 1;
        *((void *)this + 1) = v13;
LABEL_82:
        unsigned int v51 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51);
          if (!result) {
            return result;
          }
          unsigned int v38 = v51;
          int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v38 = *v13;
          int v39 = v13 + 1;
          *((void *)this + 1) = v39;
        }
        *(unsigned char *)(a1 + 40) = v38 != 0;
        *(_DWORD *)(a1 + 68) |= 0x40u;
        if ((unint64_t)v39 >= v12 || *v39 != 69) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
LABEL_90:
        unsigned int v51 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v51) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 44) = v51;
        *(_DWORD *)(a1 + 68) |= 0x80u;
        int v40 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 != 77) {
          continue;
        }
        *((void *)this + 1) = v40 + 1;
LABEL_94:
        unsigned int v51 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v51) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 48) = v51;
        *(_DWORD *)(a1 + 68) |= 0x100u;
        unsigned int v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 != 85) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
LABEL_98:
        unsigned int v51 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v51) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 52) = v51;
        int v14 = *(_DWORD *)(a1 + 68) | 0x200;
        *(_DWORD *)(a1 + 68) = v14;
        int v42 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 != 90) {
          continue;
        }
        *((void *)this + 1) = v42 + 1;
LABEL_102:
        *(_DWORD *)(a1 + 68) = v14 | 0x400;
        uint64_t v43 = *(void *)(a1 + 56);
        if (!v43) {
          operator new();
        }
        unsigned int v51 = 0;
        int v44 = (char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
        }
          }
        else
        {
          unsigned int v51 = *v44;
          *((void *)this + 1) = v44 + 1;
        }
        int v45 = *((_DWORD *)this + 14);
        int v46 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v45 + 1;
        if (v45 < v46)
        {
          int v47 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
          if (sub_1004026C8(v43, this, v48))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v47);
              int v49 = *((_DWORD *)this + 14);
              BOOL v20 = __OFSUB__(v49, 1);
              int v50 = v49 - 1;
              if (v50 < 0 == v20) {
                *((_DWORD *)this + 14) = v50;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_60;
        }
        goto LABEL_34;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_64;
        }
        goto LABEL_34;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_68;
        }
        goto LABEL_34;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_72;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_82;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_90;
        }
        goto LABEL_34;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_94;
        }
        goto LABEL_34;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_98;
        }
        goto LABEL_34;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_34;
        }
        int v14 = *(_DWORD *)(a1 + 68);
        goto LABEL_102;
      default:
        int v7 = TagFallback & 7;
LABEL_34:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1004037B8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 68);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489E70 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489E70 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 36), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 40), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(float *)(v5 + 44), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_26:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(float *)(v5 + 52), a3);
    if ((*(_DWORD *)(v5 + 68) & 0x400) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(float *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x200) != 0) {
    goto LABEL_26;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return result;
  }
LABEL_27:
  uint64_t v9 = *(void *)(v5 + 56);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489E70 + 56);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v9, a2, a4);
}

uint64_t sub_100403954(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 68);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_43;
  }
  if (v3)
  {
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489E70 + 8);
    }
    int v7 = *(unsigned __int8 *)(v6 + 24);
    if (*(unsigned char *)(v6 + 24))
    {
      int v8 = (v7 << 31 >> 31) & 5;
      if ((v7 & 2) != 0) {
        v8 += 5;
      }
      if ((v7 & 4) != 0) {
        int v7 = v8 + 5;
      }
      else {
        int v7 = v8;
      }
    }
    *(_DWORD *)(v6 + 20) = v7;
    int v4 = v7 + 2;
    int v3 = *(_DWORD *)(a1 + 68);
    if ((v3 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  int v4 = 0;
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489E70 + 16);
    }
    int v10 = *(unsigned __int8 *)(v9 + 24);
    if (*(unsigned char *)(v9 + 24))
    {
      int v11 = (v10 << 31 >> 31) & 5;
      if ((v10 & 2) != 0) {
        v11 += 5;
      }
      if ((v10 & 4) != 0) {
        int v10 = v11 + 5;
      }
      else {
        int v10 = v11;
      }
    }
    *(_DWORD *)(v9 + 20) = v10;
    v4 += v10 + 2;
    int v3 = *(_DWORD *)(a1 + 68);
  }
LABEL_24:
  if ((v3 & 4) != 0) {
    v4 += 5;
  }
  if ((v3 & 8) != 0) {
    v4 += 5;
  }
  if ((v3 & 0x10) != 0) {
    int v12 = v4 + 5;
  }
  else {
    int v12 = v4;
  }
  if ((v3 & 0x20) != 0)
  {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if ((v13 & 0x80000000) != 0)
    {
      int v14 = 11;
    }
    else if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 68);
    }
    else
    {
      int v14 = 2;
    }
    v12 += v14;
  }
  unsigned int v15 = v12 + 2;
  if ((v3 & 0x40) == 0) {
    unsigned int v15 = v12;
  }
  if ((v3 & 0x80) != 0) {
    uint64_t v5 = v15 + 5;
  }
  else {
    uint64_t v5 = v15;
  }
LABEL_43:
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v16 = v5 + 5;
    if ((v3 & 0x100) == 0) {
      unsigned int v16 = v5;
    }
    if ((v3 & 0x200) != 0) {
      uint64_t v5 = v16 + 5;
    }
    else {
      uint64_t v5 = v16;
    }
    if ((v3 & 0x400) != 0)
    {
      uint64_t v17 = *(void *)(a1 + 56);
      if (!v17) {
        uint64_t v17 = *(void *)(qword_102489E70 + 56);
      }
      unsigned int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1004029B8(v17);
      int v20 = (int)v18;
      if (v18 >= 0x80) {
        int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, v19);
      }
      else {
        int v21 = 1;
      }
      uint64_t v5 = (v5 + v20 + v21 + 1);
    }
  }
  *(_DWORD *)(a1 + 64) = v5;
  return v5;
}

double sub_100403B1C(uint64_t a1, void *lpsrc)
{
  return sub_100402A9C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100403BA4()
{
  return 1;
}

void *sub_100403BAC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MotionTypeCompass");
}

float sub_100403BBC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if (*(unsigned char *)(a2 + 40))
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v7 = *(void *)(a1 + 8);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_102489E78 + 8);
    }
    double v4 = sub_1003DE314(v7, v8);
    int v5 = *(_DWORD *)(a2 + 40);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_102489E78 + 16);
  }
  double v4 = sub_100402A9C(v9, v10);
  int v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_22:
    LODWORD(v4) = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(_DWORD *)(a1 + 28) = LODWORD(v4);
    if ((*(_DWORD *)(a2 + 40) & 0x10) != 0) {
      goto LABEL_9;
    }
    return *(float *)&v4;
  }
LABEL_21:
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) |= 4u;
  *(_DWORD *)(a1 + 24) = LODWORD(v4);
  int v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 8) != 0) {
    goto LABEL_22;
  }
LABEL_8:
  if ((v5 & 0x10) != 0)
  {
LABEL_9:
    char v6 = *(unsigned char *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    *(unsigned char *)(a1 + 32) = v6;
  }
  return *(float *)&v4;
}

void sub_100403D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100403DB4(void *result)
{
  if ((void *)qword_102489E78 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[2];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_100403E54(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B04F8;
  sub_100403DB4(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100403EA8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B04F8;
  sub_100403DB4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_100403F10(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489E78;
  if (!qword_102489E78)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489E78;
  }
  return result;
}

void sub_100403F40()
{
}

uint64_t sub_100403F94(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 40);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 40))
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 40);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result) {
        uint64_t result = sub_100402FA0(result);
      }
    }
    *(unsigned char *)(v1 + 32) = 0;
    *(void *)(v1 + 24) = 0;
  }
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_100403FFC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v34 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34))return 0; {
        }
          }
        else
        {
          unsigned int v34 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
        if (!sub_1003DE4BC(v8, this, v15) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
        int v16 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v16, 1);
        int v18 = v16 - 1;
        if (v18 < 0 == v17) {
          *((_DWORD *)this + 14) = v18;
        }
        unsigned int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 18) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
        goto LABEL_34;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_21;
        }
LABEL_34:
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v20 = *(void *)(a1 + 16);
        if (!v20) {
          operator new();
        }
        unsigned int v34 = 0;
        int v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34))return 0; {
        }
          }
        else
        {
          unsigned int v34 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
        if (!sub_10040303C(v20, this, v25) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v26 = *((_DWORD *)this + 14);
        BOOL v17 = __OFSUB__(v26, 1);
        int v27 = v26 - 1;
        if (v27 < 0 == v17) {
          *((_DWORD *)this + 14) = v27;
        }
        unsigned int v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 29) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_48:
        unsigned int v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v34) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 24) = v34;
        *(_DWORD *)(a1 + 40) |= 4u;
        int v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 37) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_52:
        unsigned int v34 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v34))
        {
          *(_DWORD *)(a1 + 28) = v34;
          *(_DWORD *)(a1 + 40) |= 8u;
          int v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v30 < v10 && *v30 == 40)
          {
            int v11 = v30 + 1;
            *((void *)this + 1) = v11;
LABEL_56:
            unsigned int v34 = 0;
            if ((unint64_t)v11 >= v10 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
              if (!result) {
                return result;
              }
              unsigned int v31 = v34;
              int v32 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v10 = *((void *)this + 2);
            }
            else
            {
              unsigned int v31 = *v11;
              int v32 = (unsigned __int8 *)(v11 + 1);
              *((void *)this + 1) = v32;
            }
            *(unsigned char *)(a1 + 32) = v31 != 0;
            *(_DWORD *)(a1 + 40) |= 0x10u;
            if (v32 == (unsigned __int8 *)v10
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_48;
        }
        goto LABEL_21;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_52;
        }
        goto LABEL_21;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_56;
      default:
        int v7 = TagFallback & 7;
LABEL_21:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10040447C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489E78 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489E78 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_14:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
    if ((*(_DWORD *)(v5 + 40) & 0x10) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return result;
  }
LABEL_15:
  int v9 = *(unsigned __int8 *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, (BOOL)a2, a4);
}

uint64_t sub_100404560(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_28;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489E78 + 8);
    }
    int v7 = *(unsigned __int8 *)(v6 + 36);
    if (*(unsigned char *)(v6 + 36))
    {
      int v8 = (v7 << 31 >> 31) & 9;
      if ((v7 & 2) != 0) {
        v8 += 9;
      }
      if ((v7 & 4) != 0) {
        int v7 = v8 + 9;
      }
      else {
        int v7 = v8;
      }
    }
    *(_DWORD *)(v6 + 32) = v7;
    int v4 = v7 + 2;
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  int v4 = 0;
  if ((*(unsigned char *)(a1 + 40) & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489E78 + 16);
    }
    unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100403954(v9, a2);
    int v12 = (int)v10;
    if (v10 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, v11);
    }
    else {
      int v13 = 1;
    }
    v4 += v12 + v13 + 1;
    int v3 = *(_DWORD *)(a1 + 40);
  }
LABEL_21:
  unsigned int v14 = v4 + 5;
  if ((v3 & 4) == 0) {
    unsigned int v14 = v4;
  }
  if ((v3 & 8) != 0) {
    v14 += 5;
  }
  if ((v3 & 0x10) != 0) {
    uint64_t result = v14 + 2;
  }
  else {
    uint64_t result = v14;
  }
LABEL_28:
  *(_DWORD *)(a1 + 36) = result;
  return result;
}

float sub_100404664(uint64_t a1, void *lpsrc)
{
  return sub_100403BBC(a1, (uint64_t)lpsrc);
}

uint64_t sub_1004046EC()
{
  return 1;
}

void *sub_1004046F4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.CompassTypeSample");
}

double sub_100404704(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 28);
      uint64_t v8 = *(int *)(a1 + 24);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v7 + 1);
          int v7 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v8 + 1;
      *(float *)&double result = sub_100403BBC(*(void *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 44))
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 8);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_102489E80 + 8);
    }
    return sub_1003DE314(v10, v11);
  }
  return result;
}

void sub_1004048E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1004048F8(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022B0570;
  if ((uint64_t *)qword_102489E80 != a1)
  {
    uint64_t v2 = a1[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  sub_10016B2E8(a1 + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_100404994(uint64_t *a1)
{
  sub_1004048F8(a1);

  operator delete();
}

uint64_t sub_1004049CC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489E80;
  if (!qword_102489E80)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489E80;
  }
  return result;
}

void sub_1004049FC()
{
}

uint64_t sub_100404A50(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0;
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  uint64_t result = sub_10026DEDC(a1 + 16);
  *(_DWORD *)(a1 + 44) = 0;
  return result;
}

uint64_t sub_100404AA0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9) {
          operator new();
        }
        unsigned int v32 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_1003DE4BC(v9, this, v14) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }
          *(_DWORD *)(a1 + 28) = v19 + 1;
          operator new();
        }
        uint64_t v21 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v20 + 1;
        uint64_t v22 = *(void *)(v21 + 8 * v20);
        unsigned int v33 = 0;
        int v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
        }
          }
        else
        {
          unsigned int v33 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
        if (!sub_100403FFC(v22, this, v27) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v16) {
          *((_DWORD *)this + 14) = v29;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        int v30 = (unsigned char *)*((void *)this + 2);
        if (v18 >= v30 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }
      if (v18 == v30 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100404E04(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 44))
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489E80 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return result;
}

uint64_t sub_100404E8C(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_102489E80 + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(unsigned char *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }
    *(_DWORD *)(v4 + 32) = v5;
    int v3 = v5 + 2;
  }
  else
  {
    int v3 = 0;
  }
  int v7 = *(_DWORD *)(a1 + 24);
  uint64_t v8 = (v7 + v3);
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100404560(*(void *)(*(void *)(a1 + 16) + 8 * v9), a2);
      int v11 = (int)v10;
      if (v10 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
      }
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 40) = v8;
  return v8;
}

double sub_100404F68(uint64_t a1, void *lpsrc)
{
  return sub_100404704(a1, (uint64_t)lpsrc);
}

uint64_t sub_100404FF0()
{
  return 1;
}

void *sub_100404FF8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.Compass");
}

float sub_100405008(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  int v5 = *(_DWORD *)(a2 + 56);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *(_DWORD *)(a1 + 56) |= 1u;
    uint64_t v7 = *(void *)(a1 + 8);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_102489E88 + 8);
    }
    double v4 = sub_1004024D4(v7, v8);
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 56) |= 2u;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_102489E88 + 16);
  }
  *(float *)&double v4 = sub_100401FE0(v9, v10);
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_26:
  *(_DWORD *)(a1 + 56) |= 4u;
  uint64_t v11 = *(void *)(a1 + 24);
  if (!v11) {
    operator new();
  }
  uint64_t v12 = *(void *)(a2 + 24);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_102489E88 + 24);
  }
  *(float *)&double v4 = sub_100401FE0(v11, v12);
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_36;
  }
LABEL_31:
  *(_DWORD *)(a1 + 56) |= 8u;
  uint64_t v13 = *(void *)(a1 + 32);
  if (!v13) {
    operator new();
  }
  uint64_t v14 = *(void *)(a2 + 32);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_102489E88 + 32);
  }
  *(float *)&double v4 = sub_100401FE0(v13, v14);
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_38:
    char v16 = *(unsigned char *)(a2 + 44);
    *(_DWORD *)(a1 + 56) |= 0x20u;
    *(unsigned char *)(a1 + 44) = v16;
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_36:
  int v15 = *(_DWORD *)(a2 + 40);
  if ((v15 + 1) >= 8) {
    sub_101A5F28C();
  }
  *(_DWORD *)(a1 + 56) |= 0x10u;
  *(_DWORD *)(a1 + 40) = v15;
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 0x20) != 0) {
    goto LABEL_38;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_39:
  char v17 = *(unsigned char *)(a2 + 45);
  *(_DWORD *)(a1 + 56) |= 0x40u;
  *(unsigned char *)(a1 + 45) = v17;
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    char v6 = *(unsigned char *)(a2 + 46);
    *(_DWORD *)(a1 + 56) |= 0x80u;
    *(unsigned char *)(a1 + 46) = v6;
    int v5 = *(_DWORD *)(a2 + 56);
  }
LABEL_13:
  if ((v5 & 0x100) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 56) |= 0x100u;
    *(_DWORD *)(a1 + 48) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_100405314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_10040532C(void *result)
{
  if ((void *)qword_102489E88 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      int v5 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v5();
    }
  }
  return result;
}

void sub_100405424(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B05E8;
  sub_10040532C(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100405478(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B05E8;
  sub_10040532C(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_1004054E0()
{
}

uint64_t sub_10040554C(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 56);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(result + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 44))
        {
          *(_OWORD *)(v2 + 24) = 0u;
          *(_OWORD *)(v2 + 8) = 0u;
        }
        *(_DWORD *)(v2 + 44) = 0;
        int v1 = *(_DWORD *)(result + 56);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(result + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v1 = *(_DWORD *)(result + 56);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(result + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 24))
        {
          *(void *)(v4 + 8) = 0;
          *(_DWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 24) = 0;
        int v1 = *(_DWORD *)(result + 56);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v5 = *(void *)(result + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 24))
        {
          *(void *)(v5 + 8) = 0;
          *(_DWORD *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 24) = 0;
        int v1 = *(_DWORD *)(result + 56);
      }
    }
    *(_DWORD *)(result + 40) = -1;
    *(_WORD *)(result + 44) = 0;
    *(unsigned char *)(result + 46) = 0;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(result + 48) = 0;
  }
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_100405610(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 56) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v60 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60))return 0; {
        }
          }
        else
        {
          unsigned int v60 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v60);
        if (!sub_1004026C8(v8, this, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 18) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
        goto LABEL_41;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_29;
        }
LABEL_41:
        *(_DWORD *)(a1 + 56) |= 2u;
        int v24 = *(_DWORD **)(a1 + 16);
        if (!v24) {
          operator new();
        }
        unsigned int v60 = 0;
        int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60))return 0; {
        }
          }
        else
        {
          unsigned int v60 = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v60);
        if (!sub_1004021A8(v24, this, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v21) {
          *((_DWORD *)this + 14) = v31;
        }
        unsigned int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 26) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_55:
        *(_DWORD *)(a1 + 56) |= 4u;
        unsigned int v33 = *(_DWORD **)(a1 + 24);
        if (!v33) {
          operator new();
        }
        unsigned int v60 = 0;
        unsigned int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60))return 0; {
        }
          }
        else
        {
          unsigned int v60 = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v60);
        if (!sub_1004021A8(v33, this, v38) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v21) {
          *((_DWORD *)this + 14) = v40;
        }
        unsigned int v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 != 34) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
LABEL_69:
        *(_DWORD *)(a1 + 56) |= 8u;
        int v42 = *(_DWORD **)(a1 + 32);
        if (!v42) {
          operator new();
        }
        unsigned int v60 = 0;
        uint64_t v43 = (char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60))return 0; {
        }
          }
        else
        {
          unsigned int v60 = *v43;
          *((void *)this + 1) = v43 + 1;
        }
        int v44 = *((_DWORD *)this + 14);
        int v45 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v44 + 1;
        if (v44 >= v45) {
          return 0;
        }
        int v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v60);
        if (!sub_1004021A8(v42, this, v47) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
        int v48 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v48, 1);
        int v49 = v48 - 1;
        if (v49 < 0 == v21) {
          *((_DWORD *)this + 14) = v49;
        }
        int v50 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v50 >= v10 || *v50 != 40) {
          continue;
        }
        uint64_t v11 = v50 + 1;
        *((void *)this + 1) = v11;
LABEL_83:
        unsigned int v60 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60);
          if (!result) {
            return result;
          }
          unsigned int v51 = v60;
        }
        else
        {
          unsigned int v51 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v51 + 1 <= 7)
        {
          *(_DWORD *)(a1 + 56) |= 0x10u;
          *(_DWORD *)(a1 + 40) = v51;
        }
        unsigned int v53 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v53 >= v12 || *v53 != 48) {
          continue;
        }
        uint64_t v13 = v53 + 1;
        *((void *)this + 1) = v13;
LABEL_93:
        unsigned int v60 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60);
          if (!result) {
            return result;
          }
          unsigned int v54 = v60;
          int v55 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v54 = *v13;
          int v55 = v13 + 1;
          *((void *)this + 1) = v55;
        }
        *(unsigned char *)(a1 + 44) = v54 != 0;
        *(_DWORD *)(a1 + 56) |= 0x20u;
        if ((unint64_t)v55 >= v12 || *v55 != 56) {
          continue;
        }
        uint64_t v14 = v55 + 1;
        *((void *)this + 1) = v14;
LABEL_101:
        unsigned int v60 = 0;
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60);
          if (!result) {
            return result;
          }
          unsigned int v56 = v60;
          unsigned int v57 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v56 = *v14;
          unsigned int v57 = v14 + 1;
          *((void *)this + 1) = v57;
        }
        *(unsigned char *)(a1 + 45) = v56 != 0;
        *(_DWORD *)(a1 + 56) |= 0x40u;
        if ((unint64_t)v57 >= v12 || *v57 != 64) {
          continue;
        }
        int v15 = v57 + 1;
        *((void *)this + 1) = v15;
LABEL_109:
        unsigned int v60 = 0;
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v60);
          if (!result) {
            return result;
          }
          unsigned int v58 = v60;
          int v59 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v58 = *v15;
          int v59 = v15 + 1;
          *((void *)this + 1) = v59;
        }
        *(unsigned char *)(a1 + 46) = v58 != 0;
        *(_DWORD *)(a1 + 56) |= 0x80u;
        if ((unint64_t)v59 >= v12 || *v59 != 77) {
          continue;
        }
        *((void *)this + 1) = v59 + 1;
LABEL_117:
        unsigned int v60 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v60))
        {
          *(_DWORD *)(a1 + 48) = v60;
          *(_DWORD *)(a1 + 56) |= 0x100u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_55;
        }
        goto LABEL_29;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_69;
        }
        goto LABEL_29;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_83;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_93;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_101;
      case 8u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_109;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_29;
        }
        goto LABEL_117;
      default:
        int v7 = TagFallback & 7;
LABEL_29:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100405DE4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489E88 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489E88 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489E88 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_102489E88 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 40), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 44), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_26:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 46), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 56) & 0x100) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 45), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) != 0) {
    goto LABEL_26;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    return result;
  }
LABEL_27:
  float v11 = *(float *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, v11, a3);
}

uint64_t sub_100405F58(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 56);
  if (!(_BYTE)v3)
  {
    unsigned int v5 = 0;
    goto LABEL_55;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_12;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_102489E88 + 8);
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1004029B8(v6);
  int v8 = (int)v7;
  if (v7 >= 0x80) {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
  }
  else {
    int v9 = 1;
  }
  int v4 = v8 + v9 + 1;
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 2) != 0)
  {
LABEL_12:
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_102489E88 + 16);
    }
    int v11 = *(unsigned __int8 *)(v10 + 24);
    if (*(unsigned char *)(v10 + 24))
    {
      int v12 = (v11 << 31 >> 31) & 5;
      if ((v11 & 2) != 0) {
        v12 += 5;
      }
      if ((v11 & 4) != 0) {
        int v11 = v12 + 5;
      }
      else {
        int v11 = v12;
      }
    }
    *(_DWORD *)(v10 + 20) = v11;
    v4 += v11 + 2;
    int v3 = *(_DWORD *)(a1 + 56);
  }
LABEL_21:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_23;
    }
LABEL_34:
    uint64_t v16 = *(void *)(a1 + 32);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_102489E88 + 32);
    }
    int v17 = *(unsigned __int8 *)(v16 + 24);
    if (*(unsigned char *)(v16 + 24))
    {
      int v18 = (v17 << 31 >> 31) & 5;
      if ((v17 & 2) != 0) {
        v18 += 5;
      }
      if ((v17 & 4) != 0) {
        int v17 = v18 + 5;
      }
      else {
        int v17 = v18;
      }
    }
    *(_DWORD *)(v16 + 20) = v17;
    v4 += v17 + 2;
    int v3 = *(_DWORD *)(a1 + 56);
    if ((v3 & 0x10) == 0) {
      goto LABEL_49;
    }
    goto LABEL_43;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_102489E88 + 24);
  }
  int v14 = *(unsigned __int8 *)(v13 + 24);
  if (*(unsigned char *)(v13 + 24))
  {
    int v15 = (v14 << 31 >> 31) & 5;
    if ((v14 & 2) != 0) {
      v15 += 5;
    }
    if ((v14 & 4) != 0) {
      int v14 = v15 + 5;
    }
    else {
      int v14 = v15;
    }
  }
  *(_DWORD *)(v13 + 20) = v14;
  v4 += v14 + 2;
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 8) != 0) {
    goto LABEL_34;
  }
LABEL_23:
  if ((v3 & 0x10) != 0)
  {
LABEL_43:
    unsigned int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v19 & 0x80000000) != 0)
    {
      int v20 = 11;
    }
    else if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 56);
    }
    else
    {
      int v20 = 2;
    }
    v4 += v20;
  }
LABEL_49:
  unsigned int v5 = v4 + 2;
  if ((v3 & 0x20) == 0) {
    unsigned int v5 = v4;
  }
  if ((v3 & 0x40) != 0) {
    v5 += 2;
  }
  if ((v3 & 0x80) != 0) {
    v5 += 2;
  }
LABEL_55:
  if ((v3 & 0x100) != 0) {
    uint64_t result = v5 + 5;
  }
  else {
    uint64_t result = v5;
  }
  *(_DWORD *)(a1 + 52) = result;
  return result;
}

float sub_10040614C(uint64_t a1, void *lpsrc)
{
  return sub_100405008(a1, (uint64_t)lpsrc);
}

uint64_t sub_1004061D4()
{
  return 1;
}

void *sub_1004061DC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MotionTypeDeviceMotion");
}

void sub_1004061EC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v4 = *(_DWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 8) = v4;
  }
}

void sub_100406278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100406290(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0660;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1004062B0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0660;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100406304()
{
}

uint64_t sub_100406350(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_DWORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_100406364(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  unsigned int v5 = (unsigned int *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      uint64_t v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      int v9 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v9 >= v8 || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
        if (!result) {
          return result;
        }
        uint64_t v10 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }
      else
      {
        *unsigned int v5 = *v9;
        uint64_t v10 = (unsigned __int8 *)(v9 + 1);
        *((void *)this + 1) = v10;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      if (v10 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_100406478(uint64_t result, unsigned int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
  }
  return result;
}

uint64_t sub_100406494(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if (v4 >= 0x80) {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, a2)
    }
             + 1;
    else {
      uint64_t result = 2;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 12) = result;
  return result;
}

void sub_1004064E4(uint64_t a1, void *lpsrc)
{
  sub_1004061EC(a1, (uint64_t)lpsrc);
}

uint64_t sub_10040656C()
{
  return 1;
}

void *sub_100406574@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.SensorFusionStatus");
}

float sub_100406584(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 56);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if (*(unsigned char *)(a2 + 56))
  {
    *(_DWORD *)(a1 + 56) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489E98 + 8);
    }
    double v4 = sub_1003DE314(v6, v7);
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }
  else if ((*(unsigned char *)(a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 56) |= 2u;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489E98 + 16);
  }
  *(float *)&double v4 = sub_100405008(v8, v9);
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v10 = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(unsigned char *)(a1 + 24) = v10;
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v11 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 56) |= 8u;
  *(_DWORD *)(a1 + 28) = v11;
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_26:
  unsigned int v12 = *(_DWORD *)(a2 + 40);
  if (v12 >= 5) {
    sub_101A5F2B8();
  }
  *(_DWORD *)(a1 + 56) |= 0x10u;
  *(_DWORD *)(a1 + 40) = v12;
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
LABEL_33:
    LODWORD(v4) = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 56) |= 0x40u;
    *(_DWORD *)(a1 + 44) = LODWORD(v4);
    if ((*(_DWORD *)(a2 + 56) & 0x80) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_12;
  }
LABEL_28:
  *(_DWORD *)(a1 + 56) |= 0x20u;
  uint64_t v13 = *(void *)(a1 + 32);
  if (!v13) {
    operator new();
  }
  uint64_t v14 = *(void *)(a2 + 32);
  if (!v14) {
    uint64_t v14 = *(void *)(qword_102489E98 + 32);
  }
  sub_1004061EC(v13, v14);
  int v5 = *(_DWORD *)(a2 + 56);
  if ((v5 & 0x40) != 0) {
    goto LABEL_33;
  }
LABEL_11:
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    LODWORD(v4) = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 56) |= 0x80u;
    *(_DWORD *)(a1 + 48) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_100406828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100406840(void *result)
{
  if ((void *)qword_102489E98 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      double v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_10040690C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B06D8;
  sub_100406840(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100406960(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B06D8;
  sub_100406840(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1004069C8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489E98;
  if (!qword_102489E98)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489E98;
  }
  return result;
}

void sub_1004069F8()
{
}

uint64_t sub_100406A54(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 56);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 56))
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 56);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 16);
      if (result)
      {
        uint64_t result = sub_10040554C(result);
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    *(unsigned char *)(v1 + 24) = 0;
    *(_DWORD *)(v1 + 28) = 0;
    *(_DWORD *)(v1 + 40) = 0;
    if ((v2 & 0x20) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 32);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 16)) {
          *(_DWORD *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 16) = 0;
      }
    }
    *(_DWORD *)(v1 + 44) = 0;
    *(_DWORD *)(v1 + 48) = 0;
  }
  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t sub_100406AE4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  int v5 = (unsigned int *)(a1 + 28);
  while (2)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 56) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9) {
          operator new();
        }
        unsigned int v48 = 0;
        char v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48))return 0; {
        }
          }
        else
        {
          unsigned int v48 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        if (!sub_1003DE4BC(v9, this, v18) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 18) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
        goto LABEL_40;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_28;
        }
LABEL_40:
        *(_DWORD *)(a1 + 56) |= 2u;
        uint64_t v23 = *(void *)(a1 + 16);
        if (!v23) {
          operator new();
        }
        unsigned int v48 = 0;
        int v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48))return 0; {
        }
          }
        else
        {
          unsigned int v48 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        if (!sub_100405610(v23, this, v28) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v29 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v20) {
          *((_DWORD *)this + 14) = v30;
        }
        int v31 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v31 >= v11 || *v31 != 24) {
          continue;
        }
        unsigned int v12 = v31 + 1;
        *((void *)this + 1) = v12;
LABEL_54:
        unsigned int v48 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48);
          if (!result) {
            return result;
          }
          unsigned int v32 = v48;
          unsigned int v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v32 = *v12;
          unsigned int v33 = v12 + 1;
          *((void *)this + 1) = v33;
        }
        *(unsigned char *)(a1 + 24) = v32 != 0;
        *(_DWORD *)(a1 + 56) |= 4u;
        if ((unint64_t)v33 >= v11 || *v33 != 32) {
          continue;
        }
        uint64_t v13 = v33 + 1;
        *((void *)this + 1) = v13;
LABEL_62:
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v5);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          *int v5 = *v13;
          int v35 = v13 + 1;
          *((void *)this + 1) = v35;
        }
        *(_DWORD *)(a1 + 56) |= 8u;
        if ((unint64_t)v35 >= v11 || *v35 != 40) {
          continue;
        }
        uint64_t v14 = v35 + 1;
        *((void *)this + 1) = v14;
LABEL_70:
        unsigned int v48 = 0;
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48);
          if (!result) {
            return result;
          }
          unsigned int v36 = v48;
        }
        else
        {
          unsigned int v36 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        if (v36 <= 4)
        {
          *(_DWORD *)(a1 + 56) |= 0x10u;
          *(_DWORD *)(a1 + 40) = v36;
        }
        int v37 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 != 50) {
          continue;
        }
        *((void *)this + 1) = v37 + 1;
LABEL_80:
        *(_DWORD *)(a1 + 56) |= 0x20u;
        uint64_t v38 = *(void *)(a1 + 32);
        if (!v38) {
          operator new();
        }
        unsigned int v48 = 0;
        int v39 = (char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48))return 0; {
        }
          }
        else
        {
          unsigned int v48 = *v39;
          *((void *)this + 1) = v39 + 1;
        }
        int v40 = *((_DWORD *)this + 14);
        int v41 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v40 + 1;
        if (v40 >= v41) {
          return 0;
        }
        int v42 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
        if (!sub_100406364(v38, this, v43) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v42);
        int v44 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v44, 1);
        int v45 = v44 - 1;
        if (v45 < 0 == v20) {
          *((_DWORD *)this + 14) = v45;
        }
        int v46 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 != 61) {
          continue;
        }
        *((void *)this + 1) = v46 + 1;
LABEL_94:
        unsigned int v48 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 44) = v48;
        *(_DWORD *)(a1 + 56) |= 0x40u;
        unsigned int v47 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v47 >= *((void *)this + 2) || *v47 != 69) {
          continue;
        }
        *((void *)this + 1) = v47 + 1;
LABEL_98:
        unsigned int v48 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v48))
        {
          *(_DWORD *)(a1 + 48) = v48;
          *(_DWORD *)(a1 + 56) |= 0x80u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_54;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_62;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_70;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_80;
        }
        goto LABEL_28;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_94;
        }
        goto LABEL_28;
      case 8u:
        int v8 = TagFallback & 7;
        if (v8 != 5) {
          goto LABEL_28;
        }
        goto LABEL_98;
      default:
        int v8 = TagFallback & 7;
LABEL_28:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10040717C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489E98 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489E98 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 40), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_22:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(v5 + 44), a3);
    if ((*(_DWORD *)(v5 + 56) & 0x80) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_19:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489E98 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) != 0) {
    goto LABEL_22;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return result;
  }
LABEL_23:
  float v10 = *(float *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, v10, a3);
}

uint64_t sub_1004072C4(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 56);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 56) & 1) == 0)
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 56) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_102489E98 + 8);
  }
  int v7 = *(unsigned __int8 *)(v6 + 36);
  if (*(unsigned char *)(v6 + 36))
  {
    int v8 = (v7 << 31 >> 31) & 9;
    if ((v7 & 2) != 0) {
      v8 += 9;
    }
    if ((v7 & 4) != 0) {
      int v7 = v8 + 9;
    }
    else {
      int v7 = v8;
    }
  }
  *(_DWORD *)(v6 + 32) = v7;
  int v4 = v7 + 2;
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489E98 + 16);
    }
    float v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100405F58(v9, a2);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
    }
    else {
      int v12 = 1;
    }
    v4 += v11 + v12 + 1;
    int v3 = *(_DWORD *)(a1 + 56);
  }
LABEL_21:
  if ((v3 & 4) != 0) {
    v4 += 2;
  }
  if ((v3 & 8) != 0)
  {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 56);
    }
    else
    {
      int v14 = 2;
    }
    v4 += v14;
    if ((v3 & 0x10) == 0)
    {
LABEL_25:
      if ((v3 & 0x20) == 0) {
        goto LABEL_46;
      }
LABEL_37:
      uint64_t v17 = *(void *)(a1 + 32);
      if (!v17) {
        uint64_t v17 = *(void *)(qword_102489E98 + 32);
      }
      if (*(unsigned char *)(v17 + 16))
      {
        int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v17 + 8);
        if (v19 > 0x7F)
        {
          int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
          int v18 = v22 + 1;
          *(_DWORD *)(v17 + 12) = v22 + 1;
          if ((v22 + 1) >= 0x80)
          {
            int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v22 + 1), v23);
            goto LABEL_45;
          }
LABEL_44:
          int v20 = 1;
LABEL_45:
          v4 += v18 + v20 + 1;
          int v3 = *(_DWORD *)(a1 + 56);
          goto LABEL_46;
        }
        int v18 = 2;
      }
      else
      {
        int v18 = 0;
      }
      *(_DWORD *)(v17 + 12) = v18;
      goto LABEL_44;
    }
  }
  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_25;
  }
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if ((v15 & 0x80000000) != 0)
  {
    int v16 = 11;
  }
  else if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 56);
  }
  else
  {
    int v16 = 2;
  }
  v4 += v16;
  if ((v3 & 0x20) != 0) {
    goto LABEL_37;
  }
LABEL_46:
  unsigned int v21 = v4 + 5;
  if ((v3 & 0x40) == 0) {
    unsigned int v21 = v4;
  }
  if ((v3 & 0x80) != 0) {
    uint64_t result = v21 + 5;
  }
  else {
    uint64_t result = v21;
  }
LABEL_51:
  *(_DWORD *)(a1 + 52) = result;
  return result;
}

float sub_1004074A0(uint64_t a1, void *lpsrc)
{
  return sub_100406584(a1, (uint64_t)lpsrc);
}

uint64_t sub_100407528()
{
  return 1;
}

void *sub_100407530@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.DeviceMotionSample");
}

double sub_100407540(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 28);
      uint64_t v8 = *(int *)(a1 + 24);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v7 + 1);
          int v7 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v8 + 1;
      *(float *)&double result = sub_100406584(*(void *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 44))
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 8);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_102489EA0 + 8);
    }
    return sub_1003DE314(v10, v11);
  }
  return result;
}

void sub_100407724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10040773C(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022B0750;
  if ((uint64_t *)qword_102489EA0 != a1)
  {
    uint64_t v2 = a1[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  sub_10016B2E8(a1 + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1004077D8(uint64_t *a1)
{
  sub_10040773C(a1);

  operator delete();
}

uint64_t sub_100407810(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489EA0;
  if (!qword_102489EA0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489EA0;
  }
  return result;
}

void sub_100407840()
{
}

uint64_t sub_100407894(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0;
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  uint64_t result = sub_10026DEDC(a1 + 16);
  *(_DWORD *)(a1 + 44) = 0;
  return result;
}

uint64_t sub_1004078E4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9) {
          operator new();
        }
        unsigned int v32 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_1003DE4BC(v9, this, v14) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }
          *(_DWORD *)(a1 + 28) = v19 + 1;
          operator new();
        }
        uint64_t v21 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v20 + 1;
        uint64_t v22 = *(void *)(v21 + 8 * v20);
        unsigned int v33 = 0;
        unsigned int v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
        }
          }
        else
        {
          unsigned int v33 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
        if (!sub_100406AE4(v22, this, v27) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v16) {
          *((_DWORD *)this + 14) = v29;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        int v30 = (unsigned char *)*((void *)this + 2);
        if (v18 >= v30 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }
      if (v18 == v30 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100407C50(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 44))
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489EA0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return result;
}

uint64_t sub_100407CD8(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_102489EA0 + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(unsigned char *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }
    *(_DWORD *)(v4 + 32) = v5;
    int v3 = v5 + 2;
  }
  else
  {
    int v3 = 0;
  }
  int v7 = *(_DWORD *)(a1 + 24);
  uint64_t v8 = (v7 + v3);
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1004072C4(*(void *)(*(void *)(a1 + 16) + 8 * v9), a2);
      int v11 = (int)v10;
      if (v10 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
      }
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 40) = v8;
  return v8;
}

double sub_100407DB4(uint64_t a1, void *lpsrc)
{
  return sub_100407540(a1, (uint64_t)lpsrc);
}

uint64_t sub_100407E3C()
{
  return 1;
}

void *sub_100407E44@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.DeviceMotion");
}

double sub_100407E54(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 76);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 76))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 76) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 76);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((*(unsigned char *)(a2 + 76) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 76) |= 2u;
    *(double *)(a1 + 16) = result;
    int v5 = *(_DWORD *)(a2 + 76);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 76) |= 4u;
    *(double *)(a1 + 24) = result;
    int v5 = *(_DWORD *)(a2 + 76);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
LABEL_16:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 76) |= 8u;
    *(double *)(a1 + 32) = result;
    int v5 = *(_DWORD *)(a2 + 76);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
LABEL_17:
    double result = *(double *)(a2 + 40);
    *(_DWORD *)(a1 + 76) |= 0x10u;
    *(double *)(a1 + 40) = result;
    int v5 = *(_DWORD *)(a2 + 76);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
LABEL_18:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 76) |= 0x20u;
    *(double *)(a1 + 48) = result;
    int v5 = *(_DWORD *)(a2 + 76);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        return result;
      }
      goto LABEL_20;
    }
LABEL_19:
    double result = *(double *)(a2 + 56);
    *(_DWORD *)(a1 + 76) |= 0x40u;
    *(double *)(a1 + 56) = result;
    if ((*(_DWORD *)(a2 + 76) & 0x80) == 0) {
      return result;
    }
LABEL_20:
    *(_DWORD *)(a1 + 76) |= 0x80u;
    uint64_t v6 = *(void *)(a1 + 64);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 64);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489EA8 + 64);
    }
    return sub_1003DE314(v6, v7);
  }
  return result;
}

void sub_100408024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10040803C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022B07C8;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489EA8 != this)
  {
    uint64_t v2 = *((void *)this + 8);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_1004080CC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10040803C(a1);

  operator delete();
}

void sub_100408104()
{
}

uint64_t sub_100408164(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 76);
  if (v1)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    if (v1 < 0)
    {
      uint64_t v2 = *(void *)(result + 64);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(result + 76) = 0;
  return result;
}

uint64_t sub_1004081A8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_50;
        }
        *(void *)int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v26) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v26;
        }
        *(_DWORD *)(a1 + 76) |= 1u;
        uint64_t v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 17) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_50;
        }
LABEL_14:
        *(void *)int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v26) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v26;
        }
        *(_DWORD *)(a1 + 76) |= 2u;
        uint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 25) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        *(void *)int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v26) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v26;
        }
        *(_DWORD *)(a1 + 76) |= 4u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 33) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        *(void *)int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v26) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v26;
        }
        *(_DWORD *)(a1 + 76) |= 8u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 41) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_29:
        *(void *)int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v26) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v26;
        }
        *(_DWORD *)(a1 + 76) |= 0x10u;
        int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 49) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_34:
        *(void *)int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v26) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v26;
        }
        *(_DWORD *)(a1 + 76) |= 0x20u;
        int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 57) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_39:
        *(void *)int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v26) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v26;
        }
        int v14 = *(_DWORD *)(a1 + 76) | 0x40;
        *(_DWORD *)(a1 + 76) = v14;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 66) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_45:
        *(_DWORD *)(a1 + 76) = v14 | 0x80;
        uint64_t v16 = *(void *)(a1 + 64);
        if (!v16) {
          operator new();
        }
        v26[0] = 0;
        int v17 = (char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v26))return 0; {
        }
          }
        else
        {
          v26[0] = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        int v18 = *((_DWORD *)this + 14);
        int v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 < v19)
        {
          int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26[0]);
          if (sub_1003DE4BC(v16, this, v21))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
              int v22 = *((_DWORD *)this + 14);
              BOOL v23 = __OFSUB__(v22, 1);
              int v24 = v22 - 1;
              if (v24 < 0 == v23) {
                *((_DWORD *)this + 14) = v24;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_19;
        }
        goto LABEL_50;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_24;
        }
        goto LABEL_50;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_29;
        }
        goto LABEL_50;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_34;
        }
        goto LABEL_50;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_39;
        }
        goto LABEL_50;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_50;
        }
        int v14 = *(_DWORD *)(a1 + 76);
        goto LABEL_45;
      default:
        int v7 = TagFallback & 7;
LABEL_50:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100408630(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 76);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 56), a3);
    if ((*(_DWORD *)(v5 + 76) & 0x80) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return result;
  }
LABEL_17:
  uint64_t v7 = *(void *)(v5 + 64);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_102489EA8 + 64);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, a2, a4);
}

uint64_t sub_100408758(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 76);
  if (*(unsigned char *)(a1 + 76))
  {
    LODWORD(v2) = (v1 << 31 >> 31) & 9;
    if ((v1 & 2) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 4) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 8) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x10) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x20) != 0) {
      LODWORD(v2) = v2 + 9;
    }
    if ((v1 & 0x40) != 0) {
      uint64_t v2 = (v2 + 9);
    }
    else {
      uint64_t v2 = v2;
    }
    if ((v1 & 0x80) != 0)
    {
      uint64_t v3 = *(void *)(a1 + 64);
      if (!v3) {
        uint64_t v3 = *(void *)(qword_102489EA8 + 64);
      }
      int v4 = *(unsigned __int8 *)(v3 + 36);
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        v5 += 9;
      }
      if (*(unsigned char *)(v3 + 36)) {
        int v6 = v5;
      }
      else {
        int v6 = 0;
      }
      *(_DWORD *)(v3 + 32) = v6;
      uint64_t v2 = (v2 + v6 + 2);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 72) = v2;
  return v2;
}

double sub_10040881C(uint64_t a1, void *lpsrc)
{
  return sub_100407E54(a1, (uint64_t)lpsrc);
}

uint64_t sub_1004088A4()
{
  return 1;
}

void *sub_1004088AC@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.MotionTypeGeomagneticModelData");
}

double sub_1004088BC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*(unsigned char *)(a2 + 20))
  {
    *(_DWORD *)(a1 + 20) |= 1u;
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489EB0 + 8);
    }
    return sub_100407E54(v5, v6);
  }
  return result;
}

void sub_1004089B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1004089C8(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022B0840;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489EB0 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100408A58(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_1004089C8(a1);

  operator delete();
}

uint64_t sub_100408A90(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489EB0;
  if (!qword_102489EB0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489EB0;
  }
  return result;
}

void sub_100408AC0()
{
}

uint64_t sub_100408B0C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 20))
  {
    uint64_t result = *(void *)(result + 8);
    if (result) {
      uint64_t result = sub_100408164(result);
    }
  }
  *(_DWORD *)(v1 + 20) = 0;
  return result;
}

uint64_t sub_100408B44(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *(_DWORD *)(a1 + 20) |= 1u;
      uint64_t v7 = *(void *)(a1 + 8);
      if (!v7) {
        operator new();
      }
      unsigned int v17 = 0;
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17))return 0; {
      }
        }
      else
      {
        unsigned int v17 = *v8;
        *((void *)this + 1) = v8 + 1;
      }
      int v9 = *((_DWORD *)this + 14);
      int v10 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v9 + 1;
      if (v9 >= v10) {
        return 0;
      }
      int v11 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v17);
      if (!sub_1004081A8(v7, this, v12) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v11);
      int v13 = *((_DWORD *)this + 14);
      BOOL v14 = __OFSUB__(v13, 1);
      int v15 = v13 - 1;
      if (v15 < 0 == v14) {
        *((_DWORD *)this + 14) = v15;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t sub_100408D14(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(result + 20))
  {
    uint64_t v5 = *(void *)(result + 8);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_102489EB0 + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
  }
  return result;
}

uint64_t sub_100408D40(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 20))
  {
    uint64_t v3 = *(void *)(a1 + 8);
    if (!v3) {
      uint64_t v3 = *(void *)(qword_102489EB0 + 8);
    }
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100408758(v3);
    int v6 = (int)v4;
    if (v4 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4, v5);
    }
    else {
      int v7 = 1;
    }
    uint64_t result = (v6 + v7 + 1);
  }
  else
  {
    uint64_t result = 0;
  }
  *(_DWORD *)(a1 + 16) = result;
  return result;
}

double sub_100408DB0(uint64_t a1, void *lpsrc)
{
  return sub_1004088BC(a1, (uint64_t)lpsrc);
}

uint64_t sub_100408E38()
{
  return 1;
}

void *sub_100408E40@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GeomagneticModelData");
}

void sub_100408E50(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *(_DWORD *)(a2 + 56);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v8 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(void *)(a1 + 8) = v8;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *(const std::string **)(a2 + 16);
  *(_DWORD *)(a1 + 56) |= 2u;
  int v10 = *(std::string **)(a1 + 16);
  if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v10, v9);
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v11 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(_DWORD *)(a1 + 24) = v11;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_25:
  unsigned int v12 = *(_DWORD *)(a2 + 28);
  if (v12 >= 4) {
    sub_101A5F310();
  }
  *(_DWORD *)(a1 + 56) |= 8u;
  *(_DWORD *)(a1 + 28) = v12;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    int v14 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 56) |= 0x20u;
    *(_DWORD *)(a1 + 36) = v14;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  int v13 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) |= 0x10u;
  *(_DWORD *)(a1 + 32) = v13;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  char v15 = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 56) |= 0x40u;
  *(unsigned char *)(a1 + 40) = v15;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    char v5 = *(unsigned char *)(a2 + 41);
    *(_DWORD *)(a1 + 56) |= 0x80u;
    *(unsigned char *)(a1 + 41) = v5;
    int v4 = *(_DWORD *)(a2 + 56);
  }
LABEL_13:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 44);
      if (v6 >= 4) {
        sub_101A5F2E4();
      }
      *(_DWORD *)(a1 + 56) |= 0x100u;
      *(_DWORD *)(a1 + 44) = v6;
      int v4 = *(_DWORD *)(a2 + 56);
    }
    if ((v4 & 0x200) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 48);
      *(_DWORD *)(a1 + 56) |= 0x200u;
      *(_DWORD *)(a1 + 48) = v7;
    }
  }
}

void sub_100409064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10040907C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B08B8;
  sub_1002444F8((uint64_t)a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_1004090D0(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B08B8;
  sub_1002444F8((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100409138()
{
}

uint64_t sub_1004091A0(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 56);
  if ((_BYTE)v1)
  {
    *(void *)(result + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(result + 24) = 0;
    *(void *)(result + 32) = 0;
    *(_WORD *)(result + 40) = 0;
    int v1 = *(_DWORD *)(result + 56);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(result + 44) = 0;
    *(_DWORD *)(result + 48) = 0;
  }
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_100409208(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  char v5 = (unint64_t *)(a1 + 8);
  while (2)
  {
    unsigned int v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_40;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v5);
        if (result)
        {
          int v10 = *(_DWORD *)(a1 + 56) | 1;
          *(_DWORD *)(a1 + 56) = v10;
          int v11 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
          {
            *((void *)this + 1) = v11 + 1;
            goto LABEL_16;
          }
          continue;
        }
        return result;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_40;
        }
        int v10 = *(_DWORD *)(a1 + 56);
LABEL_16:
        *(_DWORD *)(a1 + 56) = v10 | 2;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          int v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v13 < v12 && *v13 == 24)
          {
            int v14 = v13 + 1;
            *((void *)this + 1) = v14;
            goto LABEL_24;
          }
          continue;
        }
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_24:
        unsigned int v39 = 0;
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
          if (!result) {
            return result;
          }
          unsigned int v15 = v39;
          uint64_t v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v15 = *v14;
          uint64_t v16 = v14 + 1;
          *((void *)this + 1) = v16;
        }
        *(_DWORD *)(a1 + 24) = -(v15 & 1) ^ (v15 >> 1);
        *(_DWORD *)(a1 + 56) |= 4u;
        if ((unint64_t)v16 < v12 && *v16 == 32)
        {
          unsigned int v17 = v16 + 1;
          *((void *)this + 1) = v17;
          goto LABEL_49;
        }
        continue;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_49:
        unsigned int v39 = 0;
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
          if (!result) {
            return result;
          }
          unsigned int v26 = v39;
        }
        else
        {
          unsigned int v26 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        if (v26 <= 3)
        {
          *(_DWORD *)(a1 + 56) |= 8u;
          *(_DWORD *)(a1 + 28) = v26;
        }
        unsigned int v27 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v27 >= v18 || *v27 != 40) {
          continue;
        }
        int v19 = v27 + 1;
        *((void *)this + 1) = v19;
LABEL_59:
        unsigned int v39 = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
          if (!result) {
            return result;
          }
          unsigned int v28 = v39;
          int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
        }
        else
        {
          unsigned int v28 = *v19;
          int v29 = v19 + 1;
          *((void *)this + 1) = v29;
        }
        *(_DWORD *)(a1 + 32) = v28;
        *(_DWORD *)(a1 + 56) |= 0x10u;
        if ((unint64_t)v29 >= v18 || *v29 != 53) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
LABEL_67:
        unsigned int v39 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v39))
        {
          *(_DWORD *)(a1 + 36) = v39;
          *(_DWORD *)(a1 + 56) |= 0x20u;
          int v30 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
          if ((unint64_t)v30 < v20 && *v30 == 56)
          {
            unsigned int v21 = v30 + 1;
            *((void *)this + 1) = v21;
LABEL_71:
            unsigned int v39 = 0;
            if ((unint64_t)v21 >= v20 || *v21 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
              if (!result) {
                return result;
              }
              unsigned int v31 = v39;
              unsigned int v32 = (unsigned char *)*((void *)this + 1);
              unint64_t v20 = *((void *)this + 2);
            }
            else
            {
              unsigned int v31 = *v21;
              unsigned int v32 = v21 + 1;
              *((void *)this + 1) = v32;
            }
            *(unsigned char *)(a1 + 40) = v31 != 0;
            *(_DWORD *)(a1 + 56) |= 0x40u;
            if ((unint64_t)v32 < v20 && *v32 == 64)
            {
              int v22 = v32 + 1;
              *((void *)this + 1) = v22;
LABEL_79:
              unsigned int v39 = 0;
              if ((unint64_t)v22 >= v20 || *v22 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
                if (!result) {
                  return result;
                }
                unsigned int v33 = v39;
                unsigned int v34 = (unsigned char *)*((void *)this + 1);
                unint64_t v20 = *((void *)this + 2);
              }
              else
              {
                unsigned int v33 = *v22;
                unsigned int v34 = v22 + 1;
                *((void *)this + 1) = v34;
              }
              *(unsigned char *)(a1 + 41) = v33 != 0;
              *(_DWORD *)(a1 + 56) |= 0x80u;
              if ((unint64_t)v34 < v20 && *v34 == 72)
              {
                BOOL v23 = v34 + 1;
                *((void *)this + 1) = v23;
LABEL_87:
                unsigned int v39 = 0;
                if ((unint64_t)v23 >= v20 || *v23 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
                  if (!result) {
                    return result;
                  }
                  unsigned int v35 = v39;
                }
                else
                {
                  unsigned int v35 = *v23;
                  *((void *)this + 1) = v23 + 1;
                }
                if (v35 <= 3)
                {
                  *(_DWORD *)(a1 + 56) |= 0x100u;
                  *(_DWORD *)(a1 + 44) = v35;
                }
                unsigned int v36 = (unsigned char *)*((void *)this + 1);
                unint64_t v24 = *((void *)this + 2);
                if ((unint64_t)v36 < v24 && *v36 == 80)
                {
                  int v25 = v36 + 1;
                  *((void *)this + 1) = v25;
LABEL_97:
                  unsigned int v39 = 0;
                  if ((unint64_t)v25 >= v24 || *v25 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39);
                    if (!result) {
                      return result;
                    }
                    unsigned int v37 = v39;
                    uint64_t v38 = (unsigned __int8 *)*((void *)this + 1);
                    unint64_t v24 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v37 = *v25;
                    uint64_t v38 = (unsigned __int8 *)(v25 + 1);
                    *((void *)this + 1) = v38;
                  }
                  *(_DWORD *)(a1 + 48) = v37;
                  *(_DWORD *)(a1 + 56) |= 0x200u;
                  if (v38 == (unsigned __int8 *)v24
                    && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)this + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_59;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_67;
        }
        goto LABEL_40;
      case 7u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_71;
      case 8u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_79;
      case 9u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        BOOL v23 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_87;
      case 0xAu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v25 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_97;
      default:
        int v8 = TagFallback & 7;
LABEL_40:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1004097B0(uint64_t result, unint64_t a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v4 = a2;
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFixed64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), v4, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), v4, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 32), v4, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v4, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 40), v4, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 44), v4, a4);
    if ((*(_DWORD *)(v5 + 56) & 0x200) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 41), v4, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x100) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return result;
  }
LABEL_21:
  int v7 = *(_DWORD *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v7, v4, a4);
}

uint64_t sub_100409900(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 56);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_40;
  }
  int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a1 + 16);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    char v8 = v7;
    uint64_t v9 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
    }
    else {
      unint64_t v10 = v9;
    }
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v9 = *(void *)(v6 + 8);
      int v3 = *(_DWORD *)(a1 + 56);
      char v8 = *(unsigned char *)(v6 + 23);
    }
    else
    {
      int v11 = 1;
    }
    if (v8 < 0) {
      int v7 = v9;
    }
    v4 += v11 + v7 + 1;
    if ((v3 & 4) == 0)
    {
LABEL_4:
      if ((v3 & 8) == 0) {
        goto LABEL_5;
      }
LABEL_21:
      int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
      if ((v14 & 0x80000000) != 0)
      {
        int v15 = 11;
      }
      else if (v14 >= 0x80)
      {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 56);
      }
      else
      {
        int v15 = 2;
      }
      v4 += v15;
      if ((v3 & 0x10) == 0) {
        goto LABEL_33;
      }
      goto LABEL_27;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(_DWORD *)(a1 + 24)) ^ (*(int *)(a1 + 24) >> 31));
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 56);
  }
  else
  {
    int v13 = 2;
  }
  v4 += v13;
  if ((v3 & 8) != 0) {
    goto LABEL_21;
  }
LABEL_5:
  if ((v3 & 0x10) != 0)
  {
LABEL_27:
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 56);
    }
    else
    {
      int v17 = 2;
    }
    v4 += v17;
  }
LABEL_33:
  unsigned int v18 = v4 + 5;
  if ((v3 & 0x20) == 0) {
    unsigned int v18 = v4;
  }
  if ((v3 & 0x40) != 0) {
    v18 += 2;
  }
  if ((v3 & 0x80) != 0) {
    uint64_t v5 = v18 + 2;
  }
  else {
    uint64_t v5 = v18;
  }
LABEL_40:
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
      if ((v19 & 0x80000000) != 0)
      {
        int v20 = 11;
      }
      else if (v19 >= 0x80)
      {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
        int v3 = *(_DWORD *)(a1 + 56);
      }
      else
      {
        int v20 = 2;
      }
      uint64_t v5 = (v20 + v5);
    }
    if ((v3 & 0x200) != 0)
    {
      unsigned int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
      if ((v21 & 0x80000000) != 0)
      {
        int v22 = 11;
      }
      else if (v21 >= 0x80)
      {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2) + 1;
      }
      else
      {
        int v22 = 2;
      }
      uint64_t v5 = (v22 + v5);
    }
  }
  *(_DWORD *)(a1 + 52) = v5;
  return v5;
}

void sub_100409AE0(uint64_t a1, void *lpsrc)
{
  sub_100408E50(a1, (uint64_t)lpsrc);
}

uint64_t sub_100409B68()
{
  return 1;
}

void *sub_100409B70@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.WifiAccessPoint");
}

void sub_100409B80(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 24);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 24))
    {
      char v5 = *(unsigned char *)(a2 + 16);
      *(_DWORD *)(a1 + 24) |= 1u;
      *(unsigned char *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 24);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 24) |= 2u;
      uint64_t v6 = *(void *)(a1 + 8);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = *(void *)(a2 + 8);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_102489EC0 + 8);
      }
      sub_100408E50(v6, v7);
    }
  }
}

void sub_100409C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100409CB4(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022B0930;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489EC0 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_100409D44(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_100409CB4(a1);

  operator delete();
}

uint64_t sub_100409D7C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489EC0;
  if (!qword_102489EC0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489EC0;
  }
  return result;
}

void sub_100409DAC()
{
}

uint64_t sub_100409DFC(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 24);
  if (v2)
  {
    *(unsigned char *)(result + 16) = 0;
    if ((v2 & 2) != 0)
    {
      uint64_t result = *(void *)(result + 8);
      if (result) {
        uint64_t result = sub_1004091A0(result);
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t sub_100409E3C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    do
    {
      while (1)
      {
        char v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 == 1) {
          break;
        }
        if (TagFallback >> 3 == 2)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *(_DWORD *)(a1 + 24);
            goto LABEL_23;
          }
        }
        else
        {
          int v7 = TagFallback & 7;
        }
LABEL_15:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
      }
        }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v23 = 0;
      unint64_t v10 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v10 >= v9 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
        if (!result) {
          return result;
        }
        unsigned int v11 = v23;
        unint64_t v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        unint64_t v12 = v10 + 1;
        *((void *)this + 1) = v12;
      }
      *(unsigned char *)(a1 + 16) = v11 != 0;
      int v8 = *(_DWORD *)(a1 + 24) | 1;
      *(_DWORD *)(a1 + 24) = v8;
    }
    while ((unint64_t)v12 >= v9 || *v12 != 18);
    *((void *)this + 1) = v12 + 1;
LABEL_23:
    *(_DWORD *)(a1 + 24) = v8 | 2;
    uint64_t v14 = *(void *)(a1 + 8);
    if (!v14) {
      operator new();
    }
    unsigned int v24 = 0;
    int v15 = (char *)*((void *)this + 1);
    if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24)) {
        return 0;
      }
    }
    else
    {
      unsigned int v24 = *v15;
      *((void *)this + 1) = v15 + 1;
    }
    int v16 = *((_DWORD *)this + 14);
    int v17 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v16 + 1;
    if (v16 >= v17) {
      return 0;
    }
    int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v24);
    if (!sub_100409208(v14, this, v19) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
    int v20 = *((_DWORD *)this + 14);
    BOOL v21 = __OFSUB__(v20, 1);
    int v22 = v20 - 1;
    if (v22 < 0 == v21) {
      *((_DWORD *)this + 14) = v22;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

uint64_t sub_10040A0B8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 16), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return result;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return result;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_102489EC0 + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t sub_10040A138(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 24);
  if ((_BYTE)v3)
  {
    uint64_t v4 = 2 * (v3 & 1u);
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_102489EC0 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100409900(v5, a2);
      int v8 = (int)v6;
      if (v6 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, v7);
      }
      else {
        int v9 = 1;
      }
      uint64_t v4 = (v4 | 1) + v8 + v9;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_10040A1C4(uint64_t a1, void *lpsrc)
{
  sub_100409B80(a1, (uint64_t)lpsrc);
}

uint64_t sub_10040A24C()
{
  return 1;
}

void *sub_10040A254@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.WifiAssociationState");
}

double sub_10040A264(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  sub_100416FE0((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), a2 + 16);
  if (*(unsigned char *)(a2 + 44))
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v5 = *(void *)(a1 + 8);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489EC8 + 8);
    }
    return sub_1003DE314(v5, v6);
  }
  return result;
}

void sub_10040A358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10040A370(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022B09A8;
  if ((uint64_t *)qword_102489EC8 != a1)
  {
    uint64_t v2 = a1[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  sub_10016B2E8(a1 + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_10040A40C(uint64_t *a1)
{
  sub_10040A370(a1);

  operator delete();
}

uint64_t sub_10040A444(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489EC8;
  if (!qword_102489EC8)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489EC8;
  }
  return result;
}

void sub_10040A474()
{
}

uint64_t sub_10040A4C8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0;
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  uint64_t result = sub_10026DEDC(a1 + 16);
  *(_DWORD *)(a1 + 44) = 0;
  return result;
}

uint64_t sub_10040A518(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (char *)*((void *)this + 1);
        if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_18;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        if (!v9) {
          operator new();
        }
        unsigned int v32 = 0;
        unint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v10;
          *((void *)this + 1) = v10 + 1;
        }
        int v11 = *((_DWORD *)this + 14);
        int v12 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
        if (!sub_1003DE4BC(v9, this, v14) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
        int v15 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)this + 14) = v17;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 < *((void *)this + 2) && *v18 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v19 = *(_DWORD *)(a1 + 28);
        uint64_t v20 = *(int *)(a1 + 24);
        if ((int)v20 >= v19)
        {
          if (v19 == *(_DWORD *)(a1 + 32))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            int v19 = *(_DWORD *)(a1 + 28);
          }
          *(_DWORD *)(a1 + 28) = v19 + 1;
          operator new();
        }
        uint64_t v21 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v20 + 1;
        uint64_t v22 = *(void *)(v21 + 8 * v20);
        unsigned int v33 = 0;
        unsigned int v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
        }
          }
        else
        {
          unsigned int v33 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33);
        if (!sub_100409208(v22, this, v27) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v28 = *((_DWORD *)this + 14);
        BOOL v16 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v16) {
          *((_DWORD *)this + 14) = v29;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        int v30 = (unsigned char *)*((void *)this + 2);
        if (v18 >= v30 || *v18 != 18) {
          break;
        }
LABEL_29:
        *((void *)this + 1) = v18 + 1;
      }
      if (v18 == v30 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_18:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10040A890(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 44))
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489EC8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return result;
}

uint64_t sub_10040A918(uint64_t a1, unsigned int a2)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_102489EC8 + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(unsigned char *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }
    *(_DWORD *)(v4 + 32) = v5;
    int v3 = v5 + 2;
  }
  else
  {
    int v3 = 0;
  }
  int v7 = *(_DWORD *)(a1 + 24);
  uint64_t v8 = (v7 + v3);
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100409900(*(void *)(*(void *)(a1 + 16) + 8 * v9), a2);
      int v11 = (int)v10;
      if (v10 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
      }
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 40) = v8;
  return v8;
}

double sub_10040A9F4(uint64_t a1, void *lpsrc)
{
  return sub_10040A264(a1, (uint64_t)lpsrc);
}

uint64_t sub_10040AA7C()
{
  return 1;
}

void *sub_10040AA84@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.WifiScanResult");
}

void sub_10040AA94(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  int v4 = *(_DWORD *)(a2 + 56);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 56) |= 1u;
    uint64_t v7 = *(void *)(a1 + 8);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 8);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_102489ED0 + 8);
    }
    sub_1003DE314(v7, v8);
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 56) |= 2u;
  *(_DWORD *)(a1 + 16) = v9;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_25:
  unsigned int v10 = *(_DWORD *)(a2 + 20);
  if (v10 >= 0xF) {
    sub_101A5F368();
  }
  *(_DWORD *)(a1 + 56) |= 4u;
  *(_DWORD *)(a1 + 20) = v10;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
LABEL_27:
  unsigned int v11 = *(_DWORD *)(a2 + 40);
  if (v11 >= 0xF) {
    sub_101A5F33C();
  }
  *(_DWORD *)(a1 + 56) |= 8u;
  *(_DWORD *)(a1 + 40) = v11;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_30:
    *(_DWORD *)(a1 + 56) |= 0x20u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13) {
      operator new();
    }
    uint64_t v14 = *(void *)(a2 + 24);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_102489ED0 + 24);
    }
    sub_100409B80(v13, v14);
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_35;
  }
LABEL_29:
  char v12 = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 56) |= 0x10u;
  *(unsigned char *)(a1 + 44) = v12;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x20) != 0) {
    goto LABEL_30;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_35:
  *(_DWORD *)(a1 + 56) |= 0x40u;
  uint64_t v15 = *(void *)(a1 + 32);
  if (!v15) {
    operator new();
  }
  uint64_t v16 = *(void *)(a2 + 32);
  if (!v16) {
    uint64_t v16 = *(void *)(qword_102489ED0 + 32);
  }
  sub_10040A264(v15, v16);
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    char v5 = *(unsigned char *)(a2 + 45);
    *(_DWORD *)(a1 + 56) |= 0x80u;
    *(unsigned char *)(a1 + 45) = v5;
    int v4 = *(_DWORD *)(a2 + 56);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    char v17 = *(unsigned char *)(a2 + 46);
    *(_DWORD *)(a1 + 56) |= 0x100u;
    *(unsigned char *)(a1 + 46) = v17;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        return;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  char v18 = *(unsigned char *)(a2 + 47);
  *(_DWORD *)(a1 + 56) |= 0x200u;
  *(unsigned char *)(a1 + 47) = v18;
  if ((*(_DWORD *)(a2 + 56) & 0x400) != 0)
  {
LABEL_17:
    char v6 = *(unsigned char *)(a2 + 48);
    *(_DWORD *)(a1 + 56) |= 0x400u;
    *(unsigned char *)(a1 + 48) = v6;
  }
}

void sub_10040AD9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_10040ADB4(void *result)
{
  if ((void *)qword_102489ED0 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_10040AE80(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0A20;
  sub_10040ADB4(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10040AED4(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0A20;
  sub_10040ADB4(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_10040AF3C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489ED0;
  if (!qword_102489ED0)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489ED0;
  }
  return result;
}

void sub_10040AF6C()
{
}

uint64_t sub_10040AFC8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 56);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 56);
      }
    }
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 40) = 0;
    *(unsigned char *)(result + 44) = 0;
    if ((v2 & 0x20) != 0)
    {
      uint64_t result = *(void *)(result + 24);
      if (result)
      {
        uint64_t result = sub_100409DFC(result);
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t result = *(void *)(v1 + 32);
      if (result)
      {
        uint64_t result = sub_10040A4C8(result);
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    *(unsigned char *)(v1 + 45) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_WORD *)(v1 + 46) = 0;
    *(unsigned char *)(v1 + 48) = 0;
  }
  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t sub_10040B064(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    char v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 56) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v66 = 0;
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66))return 0; {
        }
          }
        else
        {
          unsigned int v66 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v23 = *((_DWORD *)this + 14);
        int v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0;
        }
        int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v66);
        if (!sub_1003DE4BC(v8, this, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        int v30 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v30 >= v10 || *v30 != 16) {
          continue;
        }
        unsigned int v11 = v30 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_46;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_46:
        unsigned int v66 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66);
          if (!result) {
            return result;
          }
          unsigned int v31 = v66;
          unsigned int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v31 = *v11;
          unsigned int v32 = v11 + 1;
          *((void *)this + 1) = v32;
        }
        *(_DWORD *)(a1 + 16) = v31;
        *(_DWORD *)(a1 + 56) |= 2u;
        if ((unint64_t)v32 >= v10 || *v32 != 24) {
          continue;
        }
        char v12 = v32 + 1;
        *((void *)this + 1) = v12;
LABEL_54:
        unsigned int v66 = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66);
          if (!result) {
            return result;
          }
          unsigned int v34 = v66;
        }
        else
        {
          unsigned int v34 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        if (v34 <= 0xE)
        {
          *(_DWORD *)(a1 + 56) |= 4u;
          *(_DWORD *)(a1 + 20) = v34;
        }
        unsigned int v35 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v35 >= v13 || *v35 != 32) {
          continue;
        }
        uint64_t v14 = v35 + 1;
        *((void *)this + 1) = v14;
LABEL_64:
        unsigned int v66 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66);
          if (!result) {
            return result;
          }
          unsigned int v36 = v66;
        }
        else
        {
          unsigned int v36 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        if (v36 <= 0xE)
        {
          *(_DWORD *)(a1 + 56) |= 8u;
          *(_DWORD *)(a1 + 40) = v36;
        }
        unsigned int v37 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v37 >= v15 || *v37 != 40) {
          continue;
        }
        uint64_t v16 = v37 + 1;
        *((void *)this + 1) = v16;
LABEL_74:
        unsigned int v66 = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66);
          if (!result) {
            return result;
          }
          unsigned int v38 = v66;
          unsigned int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v38 = *v16;
          unsigned int v39 = v16 + 1;
          *((void *)this + 1) = v39;
        }
        *(unsigned char *)(a1 + 44) = v38 != 0;
        int v17 = *(_DWORD *)(a1 + 56) | 0x10;
        *(_DWORD *)(a1 + 56) = v17;
        if ((unint64_t)v39 >= v15 || *v39 != 50) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
LABEL_82:
        *(_DWORD *)(a1 + 56) = v17 | 0x20;
        uint64_t v40 = *(void *)(a1 + 24);
        if (!v40) {
          operator new();
        }
        unsigned int v66 = 0;
        int v41 = (char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66))return 0; {
        }
          }
        else
        {
          unsigned int v66 = *v41;
          *((void *)this + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)this + 14);
        int v43 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v42 + 1;
        if (v42 >= v43) {
          return 0;
        }
        int v44 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v66);
        if (!sub_100409E3C(v40, this, v45) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v44);
        int v46 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v46, 1);
        int v47 = v46 - 1;
        if (v47 < 0 == v28) {
          *((_DWORD *)this + 14) = v47;
        }
        unsigned int v48 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v48 >= *((void *)this + 2) || *v48 != 58) {
          continue;
        }
        *((void *)this + 1) = v48 + 1;
LABEL_96:
        *(_DWORD *)(a1 + 56) |= 0x40u;
        uint64_t v49 = *(void *)(a1 + 32);
        if (!v49) {
          operator new();
        }
        unsigned int v66 = 0;
        int v50 = (char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66))return 0; {
        }
          }
        else
        {
          unsigned int v66 = *v50;
          *((void *)this + 1) = v50 + 1;
        }
        int v51 = *((_DWORD *)this + 14);
        int v52 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v51 + 1;
        if (v51 < v52)
        {
          int v53 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v66);
          if (sub_10040A518(v49, this, v54))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v53);
              int v55 = *((_DWORD *)this + 14);
              BOOL v28 = __OFSUB__(v55, 1);
              int v56 = v55 - 1;
              if (v56 < 0 == v28) {
                *((_DWORD *)this + 14) = v56;
              }
              unsigned int v57 = (unsigned char *)*((void *)this + 1);
              unint64_t v18 = *((void *)this + 2);
              if ((unint64_t)v57 < v18 && *v57 == 64)
              {
                int v19 = v57 + 1;
                *((void *)this + 1) = v19;
LABEL_110:
                unsigned int v66 = 0;
                if ((unint64_t)v19 >= v18 || *v19 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66);
                  if (!result) {
                    return result;
                  }
                  unsigned int v58 = v66;
                  int v59 = (unsigned char *)*((void *)this + 1);
                  unint64_t v18 = *((void *)this + 2);
                }
                else
                {
                  unsigned int v58 = *v19;
                  int v59 = v19 + 1;
                  *((void *)this + 1) = v59;
                }
                *(unsigned char *)(a1 + 45) = v58 != 0;
                *(_DWORD *)(a1 + 56) |= 0x80u;
                if ((unint64_t)v59 < v18 && *v59 == 72)
                {
                  uint64_t v20 = v59 + 1;
                  *((void *)this + 1) = v20;
LABEL_118:
                  unsigned int v66 = 0;
                  if ((unint64_t)v20 >= v18 || *v20 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66);
                    if (!result) {
                      return result;
                    }
                    unsigned int v60 = v66;
                    uint64_t v61 = (unsigned char *)*((void *)this + 1);
                    unint64_t v18 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v60 = *v20;
                    uint64_t v61 = v20 + 1;
                    *((void *)this + 1) = v61;
                  }
                  *(unsigned char *)(a1 + 46) = v60 != 0;
                  *(_DWORD *)(a1 + 56) |= 0x100u;
                  if ((unint64_t)v61 < v18 && *v61 == 80)
                  {
                    uint64_t v21 = v61 + 1;
                    *((void *)this + 1) = v21;
LABEL_126:
                    unsigned int v66 = 0;
                    if ((unint64_t)v21 >= v18 || *v21 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66);
                      if (!result) {
                        return result;
                      }
                      unsigned int v62 = v66;
                      int v63 = (unsigned char *)*((void *)this + 1);
                      unint64_t v18 = *((void *)this + 2);
                    }
                    else
                    {
                      unsigned int v62 = *v21;
                      int v63 = v21 + 1;
                      *((void *)this + 1) = v63;
                    }
                    *(unsigned char *)(a1 + 47) = v62 != 0;
                    *(_DWORD *)(a1 + 56) |= 0x200u;
                    if ((unint64_t)v63 < v18 && *v63 == 88)
                    {
                      uint64_t v22 = v63 + 1;
                      *((void *)this + 1) = v22;
LABEL_134:
                      unsigned int v66 = 0;
                      if ((unint64_t)v22 >= v18 || *v22 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v66);
                        if (!result) {
                          return result;
                        }
                        unsigned int v64 = v66;
                        int v65 = (unsigned __int8 *)*((void *)this + 1);
                        unint64_t v18 = *((void *)this + 2);
                      }
                      else
                      {
                        unsigned int v64 = *v22;
                        int v65 = (unsigned __int8 *)(v22 + 1);
                        *((void *)this + 1) = v65;
                      }
                      *(unsigned char *)(a1 + 48) = v64 != 0;
                      *(_DWORD *)(a1 + 56) |= 0x400u;
                      if (v65 == (unsigned __int8 *)v18
                        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                      {
                        *((_DWORD *)this + 8) = 0;
                        uint64_t result = 1;
                        *((unsigned char *)this + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        char v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_54;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_64;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_74;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_33;
        }
        int v17 = *(_DWORD *)(a1 + 56);
        goto LABEL_82;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_96;
        }
        goto LABEL_33;
      case 8u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_110;
      case 9u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_118;
      case 0xAu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_126;
      case 0xBu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        uint64_t v22 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_134;
      default:
        int v7 = TagFallback & 7;
LABEL_33:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10040B8C4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489ED0 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 20), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 40), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 44), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489ED0 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489ED0 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 45), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_28:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 47), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 56) & 0x400) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 46), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x200) != 0) {
    goto LABEL_28;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return result;
  }
LABEL_29:
  int v10 = *(unsigned __int8 *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v10, (BOOL)a2, a4);
}

uint64_t sub_10040BA60(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 56);
  if (!(_BYTE)v3)
  {
    unsigned int v5 = 0;
    goto LABEL_55;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_102489ED0 + 8);
  }
  int v7 = *(unsigned __int8 *)(v6 + 36);
  if (*(unsigned char *)(v6 + 36))
  {
    int v8 = (v7 << 31 >> 31) & 9;
    if ((v7 & 2) != 0) {
      v8 += 9;
    }
    if ((v7 & 4) != 0) {
      int v7 = v8 + 9;
    }
    else {
      int v7 = v8;
    }
  }
  *(_DWORD *)(v6 + 32) = v7;
  int v4 = v7 + 2;
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 11;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 56);
    }
    else
    {
      int v10 = 2;
    }
    v4 += v10;
  }
LABEL_21:
  if ((v3 & 4) != 0)
  {
    unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 56);
    }
    else
    {
      int v12 = 2;
    }
    v4 += v12;
    if ((v3 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  if ((v3 & 8) != 0)
  {
LABEL_30:
    unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v13 & 0x80000000) != 0)
    {
      int v14 = 11;
    }
    else if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 56);
    }
    else
    {
      int v14 = 2;
    }
    v4 += v14;
  }
LABEL_36:
  if ((v3 & 0x10) != 0) {
    int v15 = v4 + 2;
  }
  else {
    int v15 = v4;
  }
  if ((v3 & 0x20) != 0)
  {
    uint64_t v16 = *(void *)(a1 + 24);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_102489ED0 + 24);
    }
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10040A138(v16, a2);
    int v18 = (int)v17;
    if (v17 >= 0x80) {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    }
    else {
      int v19 = 1;
    }
    v15 += v18 + v19 + 1;
    int v3 = *(_DWORD *)(a1 + 56);
  }
  if ((v3 & 0x40) != 0)
  {
    uint64_t v20 = *(void *)(a1 + 32);
    if (!v20) {
      uint64_t v20 = *(void *)(qword_102489ED0 + 32);
    }
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10040A918(v20, a2);
    int v23 = (int)v21;
    if (v21 >= 0x80) {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, v22);
    }
    else {
      int v24 = 1;
    }
    v15 += v23 + v24 + 1;
    int v3 = *(_DWORD *)(a1 + 56);
  }
  unsigned int v5 = v15 + 2;
  if ((v3 & 0x80) == 0) {
    unsigned int v5 = v15;
  }
LABEL_55:
  unsigned int v25 = v5 + 2;
  if ((v3 & 0x100) == 0) {
    unsigned int v25 = v5;
  }
  if ((v3 & 0x200) != 0) {
    v25 += 2;
  }
  if ((v3 & 0x400) != 0) {
    v25 += 2;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t result = v25;
  }
  else {
    uint64_t result = v5;
  }
  *(_DWORD *)(a1 + 52) = result;
  return result;
}

void sub_10040BC74(uint64_t a1, void *lpsrc)
{
  sub_10040AA94(a1, (uint64_t)lpsrc);
}

uint64_t sub_10040BCFC()
{
  return 1;
}

void *sub_10040BD04@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.WifiNotification");
}

void sub_10040BD14(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489ED8 + 8);
      }
      sub_1003DE314(v5, v6);
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 24);
      if (v7 >= 4) {
        sub_101A5F3C0();
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_DWORD *)(a1 + 24) = v7;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 4) != 0)
    {
      uint64_t v8 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 4u;
      *(void *)(a1 + 16) = v8;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 8) != 0)
    {
      unsigned int v9 = *(_DWORD *)(a2 + 28);
      if (v9 >= 4) {
        sub_101A5F394();
      }
      *(_DWORD *)(a1 + 36) |= 8u;
      *(_DWORD *)(a1 + 28) = v9;
    }
  }
}

void sub_10040BE6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10040BE88(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489ED8;
  if (!qword_102489ED8)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489ED8;
  }
  return result;
}

void sub_10040BEB8()
{
}

uint64_t sub_10040BF0C(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    if (*(unsigned char *)(result + 36))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_10040BF40(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v27[0] = 0;
        unsigned int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27))return 0; {
        }
          }
        else
        {
          v27[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        if (!sub_1003DE4BC(v8, this, v17) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v18 = *((_DWORD *)this + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)this + 14) = v20;
        }
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v21 >= v10 || *v21 != 16) {
          continue;
        }
        unsigned int v11 = v21 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_32;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unsigned int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_32:
        v27[0] = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!result) {
            return result;
          }
          unsigned int v22 = v27[0];
        }
        else
        {
          unsigned int v22 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v22 <= 3)
        {
          *(_DWORD *)(a1 + 36) |= 2u;
          *(_DWORD *)(a1 + 24) = v22;
        }
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 25) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_42:
        *(void *)int v27 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27))
        {
          *(void *)(a1 + 16) = *(void *)v27;
          *(_DWORD *)(a1 + 36) |= 4u;
          unsigned int v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v25 < v12 && *v25 == 32)
          {
            unint64_t v13 = v25 + 1;
            *((void *)this + 1) = v13;
LABEL_46:
            v27[0] = 0;
            if ((unint64_t)v13 >= v12 || *v13 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
              if (!result) {
                return result;
              }
              unsigned int v26 = v27[0];
            }
            else
            {
              unsigned int v26 = *v13;
              *((void *)this + 1) = v13 + 1;
            }
            if (v26 <= 3)
            {
              *(_DWORD *)(a1 + 36) |= 8u;
              *(_DWORD *)(a1 + 28) = v26;
            }
            if (*((void *)this + 1) == *((void *)this + 2)
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_42;
        }
        goto LABEL_19;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_46;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10040C2A8(uint64_t a1, void *lpsrc)
{
  sub_10040BD14(a1, (uint64_t)lpsrc);
}

uint64_t sub_10040C330()
{
  return 1;
}

void *sub_10040C338@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GnssAvailabilityPrediction");
}

double sub_10040C348(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 28) |= 1u;
      *(double *)(a1 + 8) = result;
      int v5 = *(_DWORD *)(a2 + 28);
    }
    if ((v5 & 2) != 0)
    {
      double result = *(double *)(a2 + 16);
      *(_DWORD *)(a1 + 28) |= 2u;
      *(double *)(a1 + 16) = result;
    }
  }
  return result;
}

void sub_10040C3F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10040C40C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0B10;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10040C42C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0B10;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10040C480()
{
}

uint64_t sub_10040C4CC(uint64_t result)
{
  if (*(unsigned char *)(result + 28))
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 28) = 0;
  return result;
}

uint64_t sub_10040C4E0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)this + 1);
        if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_21;
        }
        unint64_t v10 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 8) = v10;
        *(_DWORD *)(a1 + 28) |= 1u;
        uint64_t v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 < *((void *)this + 2) && *v8 == 17)
        {
          *((void *)this + 1) = v8 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v7 = TagFallback & 7;
        goto LABEL_21;
      }
      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_21:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
    }
      }
LABEL_15:
    unint64_t v10 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 16) = v10;
    *(_DWORD *)(a1 + 28) |= 2u;
  }
  while (*((void *)this + 1) != *((void *)this + 2)
       || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_10040C648(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 28);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
  {
    double v6 = *(double *)(v4 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, v6, a3);
  }
  return result;
}

uint64_t sub_10040C6B4(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 28);
  if (*(unsigned char *)(a1 + 28))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *(_DWORD *)(a1 + 24) = v1;
  return v1;
}

double sub_10040C6E0(uint64_t a1, void *lpsrc)
{
  return sub_10040C348(a1, (uint64_t)lpsrc);
}

uint64_t sub_10040C768()
{
  return 1;
}

void *sub_10040C770@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GEOLocationCoordinate2D");
}

double sub_10040C780(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), *(_DWORD *)(a2 + 16) + *(_DWORD *)(a1 + 16));
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 8) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 20);
      uint64_t v8 = *(int *)(a1 + 16);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 24))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), v7 + 1);
          int v7 = *(_DWORD *)(a1 + 20);
        }
        *(_DWORD *)(a1 + 20) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *(void *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v8 + 1;
      double result = sub_10040C348(*(void *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 16));
  }
  int v10 = *(_DWORD *)(a2 + 88);
  if ((v10 & 0x1FE) != 0)
  {
    if ((v10 & 2) != 0)
    {
      double result = *(double *)(a2 + 32);
      *(_DWORD *)(a1 + 88) |= 2u;
      *(double *)(a1 + 32) = result;
      int v10 = *(_DWORD *)(a2 + 88);
      if ((v10 & 4) == 0)
      {
LABEL_14:
        if ((v10 & 8) == 0) {
          goto LABEL_15;
        }
        goto LABEL_23;
      }
    }
    else if ((v10 & 4) == 0)
    {
      goto LABEL_14;
    }
    double result = *(double *)(a2 + 40);
    *(_DWORD *)(a1 + 88) |= 4u;
    *(double *)(a1 + 40) = result;
    int v10 = *(_DWORD *)(a2 + 88);
    if ((v10 & 8) == 0)
    {
LABEL_15:
      if ((v10 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_24;
    }
LABEL_23:
    char v11 = *(unsigned char *)(a2 + 80);
    *(_DWORD *)(a1 + 88) |= 8u;
    *(unsigned char *)(a1 + 80) = v11;
    int v10 = *(_DWORD *)(a2 + 88);
    if ((v10 & 0x10) == 0)
    {
LABEL_16:
      if ((v10 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_25;
    }
LABEL_24:
    double result = *(double *)(a2 + 48);
    *(_DWORD *)(a1 + 88) |= 0x10u;
    *(double *)(a1 + 48) = result;
    int v10 = *(_DWORD *)(a2 + 88);
    if ((v10 & 0x20) == 0)
    {
LABEL_17:
      if ((v10 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_26;
    }
LABEL_25:
    double result = *(double *)(a2 + 56);
    *(_DWORD *)(a1 + 88) |= 0x20u;
    *(double *)(a1 + 56) = result;
    int v10 = *(_DWORD *)(a2 + 88);
    if ((v10 & 0x40) == 0)
    {
LABEL_18:
      if ((v10 & 0x80) == 0) {
        return result;
      }
      goto LABEL_19;
    }
LABEL_26:
    double result = *(double *)(a2 + 64);
    *(_DWORD *)(a1 + 88) |= 0x40u;
    *(double *)(a1 + 64) = result;
    if ((*(_DWORD *)(a2 + 88) & 0x80) == 0) {
      return result;
    }
LABEL_19:
    double result = *(double *)(a2 + 72);
    *(_DWORD *)(a1 + 88) |= 0x80u;
    *(double *)(a1 + 72) = result;
  }
  return result;
}

void sub_10040C9C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10040C9DC(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022B0B88;
  sub_10016B2E8(a1 + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_10040CA38(uint64_t *a1)
{
  sub_10040C9DC(a1);

  operator delete();
}

void sub_10040CA70()
{
}

uint64_t sub_10040CAD4(uint64_t a1)
{
  if ((*(_WORD *)(a1 + 88) & 0x1FE) != 0)
  {
    *(unsigned char *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  uint64_t result = sub_10026DEDC(a1 + 8);
  *(_DWORD *)(a1 + 88) = 0;
  return result;
}

uint64_t sub_10040CB1C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
LABEL_2:
  while (2)
  {
    uint64_t v6 = (char *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_49;
        }
        while (1)
        {
          int v9 = *(_DWORD *)(a1 + 20);
          uint64_t v10 = *(int *)(a1 + 16);
          if ((int)v10 >= v9)
          {
            if (v9 == *(_DWORD *)(a1 + 24))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v9 + 1);
              int v9 = *(_DWORD *)(a1 + 20);
            }
            *(_DWORD *)(a1 + 20) = v9 + 1;
            operator new();
          }
          uint64_t v11 = *(void *)(a1 + 8);
          *(_DWORD *)(a1 + 16) = v10 + 1;
          uint64_t v12 = *(void *)(v11 + 8 * v10);
          v33[0] = 0;
          unint64_t v13 = (char *)*((void *)this + 1);
          if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v33))return 0; {
          }
            }
          else
          {
            v33[0] = *v13;
            *((void *)this + 1) = v13 + 1;
          }
          int v14 = *((_DWORD *)this + 14);
          int v15 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0;
          }
          int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v33[0]);
          if (!sub_10040C4E0(v12, this, v17) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
          int v18 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)this + 14) = v20;
          }
          uint64_t v21 = (unsigned __int8 *)*((void *)this + 1);
          if ((unint64_t)v21 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v22 = *v21;
          if (v22 != 10) {
            break;
          }
          *((void *)this + 1) = v21 + 1;
        }
        if (v22 != 17) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
        goto LABEL_28;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_49;
        }
LABEL_28:
        *(void *)unsigned int v33 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v33) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v33;
        }
        *(_DWORD *)(a1 + 88) |= 2u;
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 25) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_33:
        *(void *)unsigned int v33 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v33) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v33;
        }
        *(_DWORD *)(a1 + 88) |= 4u;
        unsigned int v25 = (unsigned char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        if ((unint64_t)v25 >= v24 || *v25 != 32) {
          continue;
        }
        unsigned int v26 = v25 + 1;
        *((void *)this + 1) = v26;
LABEL_39:
        v33[0] = 0;
        if ((unint64_t)v26 >= v24 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v33);
          if (!result) {
            return result;
          }
          unsigned int v27 = v33[0];
          BOOL v28 = (unsigned char *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
        }
        else
        {
          unsigned int v27 = *v26;
          BOOL v28 = v26 + 1;
          *((void *)this + 1) = v28;
        }
        *(unsigned char *)(a1 + 80) = v27 != 0;
        *(_DWORD *)(a1 + 88) |= 8u;
        if ((unint64_t)v28 >= v24 || *v28 != 41) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_57:
        *(void *)unsigned int v33 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v33) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v33;
        }
        *(_DWORD *)(a1 + 88) |= 0x10u;
        int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 49) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_61:
        *(void *)unsigned int v33 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v33) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v33;
        }
        *(_DWORD *)(a1 + 88) |= 0x20u;
        unsigned int v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 57) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
LABEL_65:
        *(void *)unsigned int v33 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v33) & 1) == 0)return 0; {
        *(void *)(a1 + 64) = *(void *)v33;
        }
        *(_DWORD *)(a1 + 88) |= 0x40u;
        unsigned int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 65) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_69:
        *(void *)unsigned int v33 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v33) & 1) == 0)return 0; {
        *(void *)(a1 + 72) = *(void *)v33;
        }
        *(_DWORD *)(a1 + 88) |= 0x80u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_33;
        }
        goto LABEL_49;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_49;
        }
        unsigned int v26 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_39;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_57;
        }
        goto LABEL_49;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_61;
        }
        goto LABEL_49;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_65;
        }
        goto LABEL_49;
      case 8u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_49;
        }
        goto LABEL_69;
      default:
        int v8 = TagFallback & 7;
LABEL_49:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_10040D028(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  int v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 2) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 32), a3);
    int v7 = *(_DWORD *)(v5 + 88);
    if ((v7 & 4) == 0)
    {
LABEL_6:
      if ((v7 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }
  else if ((v7 & 4) == 0)
  {
    goto LABEL_6;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 40), a3);
  int v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 8) == 0)
  {
LABEL_7:
    if ((v7 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 80), (BOOL)a2, a4);
  int v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 0x10) == 0)
  {
LABEL_8:
    if ((v7 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 48), a3);
  int v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 0x20) == 0)
  {
LABEL_9:
    if ((v7 & 0x40) == 0) {
      goto LABEL_10;
    }
LABEL_17:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 64), a3);
    if ((*(_DWORD *)(v5 + 88) & 0x80) == 0) {
      return result;
    }
    goto LABEL_18;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 56), a3);
  int v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 0x40) != 0) {
    goto LABEL_17;
  }
LABEL_10:
  if ((v7 & 0x80) == 0) {
    return result;
  }
LABEL_18:
  double v8 = *(double *)(v5 + 72);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, v8, a3);
}

uint64_t sub_10040D164(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 88);
  if ((v1 & 0x1FE) != 0)
  {
    int v2 = (v1 << 30 >> 31) & 9;
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x80) != 0) {
      int v3 = v2 + 9;
    }
    else {
      int v3 = v2;
    }
  }
  else
  {
    int v3 = 0;
  }
  uint64_t v4 = *(unsigned int *)(a1 + 16);
  uint64_t v5 = (v4 + v3);
  if ((int)v4 >= 1)
  {
    uint64_t v6 = *(void *)(a1 + 8);
    do
    {
      int v7 = *(unsigned __int8 *)(*(void *)v6 + 28);
      if (*(unsigned char *)(*(void *)v6 + 28))
      {
        if ((v7 & 2) != 0) {
          int v7 = ((v7 << 31 >> 31) & 9) + 9;
        }
        else {
          int v7 = (v7 << 31 >> 31) & 9;
        }
      }
      *(_DWORD *)(*(void *)v6 + 24) = v7;
      uint64_t v5 = (v5 + v7 + 1);
      v6 += 8;
      --v4;
    }
    while (v4);
  }
  *(_DWORD *)(a1 + 84) = v5;
  return v5;
}

double sub_10040D228(uint64_t a1, void *lpsrc)
{
  return sub_10040C780(a1, (uint64_t)lpsrc);
}

uint64_t sub_10040D2B0()
{
  return 1;
}

void *sub_10040D2B8@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GEOMapFeatureBuildingSection");
}

void sub_10040D2C8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), *(_DWORD *)(a2 + 16) + *(_DWORD *)(a1 + 16));
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 20);
      uint64_t v7 = *(int *)(a1 + 16);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 24))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 20);
        }
        *(_DWORD *)(a1 + 20) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 8);
      *(_DWORD *)(a1 + 16) = v7 + 1;
      sub_10040C780(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
  int v9 = *(_DWORD *)(a2 + 52);
  if ((v9 & 0x1FE) != 0)
  {
    if ((v9 & 2) != 0)
    {
      uint64_t v10 = *(void *)(a2 + 32);
      *(_DWORD *)(a1 + 52) |= 2u;
      *(void *)(a1 + 32) = v10;
      int v9 = *(_DWORD *)(a2 + 52);
    }
    if ((v9 & 4) != 0)
    {
      uint64_t v11 = *(void *)(a2 + 40);
      *(_DWORD *)(a1 + 52) |= 4u;
      *(void *)(a1 + 40) = v11;
    }
  }
}

void sub_10040D47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10040D494(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022B0C00;
  sub_10016B2E8(a1 + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_10040D4F0(uint64_t *a1)
{
  sub_10040D494(a1);

  operator delete();
}

void sub_10040D528()
{
}

uint64_t sub_10040D580(uint64_t a1)
{
  if ((*(_WORD *)(a1 + 52) & 0x1FE) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 8);
  *(_DWORD *)(a1 + 52) = 0;
  return result;
}

uint64_t sub_10040D5BC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 8);
  int v6 = (unint64_t *)(a1 + 32);
  uint64_t v7 = (unint64_t *)(a1 + 40);
  while (1)
  {
    while (1)
    {
LABEL_2:
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v10 = TagFallback >> 3;
      if (TagFallback >> 3 == 1)
      {
        int v11 = TagFallback & 7;
        if (v11 == 2)
        {
          while (1)
          {
            int v14 = *(_DWORD *)(a1 + 20);
            uint64_t v15 = *(int *)(a1 + 16);
            if ((int)v15 >= v14)
            {
              if (v14 == *(_DWORD *)(a1 + 24))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v14 + 1);
                int v14 = *(_DWORD *)(a1 + 20);
              }
              *(_DWORD *)(a1 + 20) = v14 + 1;
              operator new();
            }
            uint64_t v16 = *(void *)(a1 + 8);
            *(_DWORD *)(a1 + 16) = v15 + 1;
            uint64_t v17 = *(void *)(v16 + 8 * v15);
            unsigned int v32 = 0;
            int v18 = (char *)*((void *)this + 1);
            if ((unint64_t)v18 >= *((void *)this + 2) || *v18 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
            }
              }
            else
            {
              unsigned int v32 = *v18;
              *((void *)this + 1) = v18 + 1;
            }
            int v19 = *((_DWORD *)this + 14);
            int v20 = *((_DWORD *)this + 15);
            *((_DWORD *)this + 14) = v19 + 1;
            if (v19 >= v20) {
              return 0;
            }
            int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32);
            if (!sub_10040CB1C(v17, this, v22) || !*((unsigned char *)this + 36)) {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
            int v23 = *((_DWORD *)this + 14);
            BOOL v24 = __OFSUB__(v23, 1);
            int v25 = v23 - 1;
            if (v25 < 0 == v24) {
              *((_DWORD *)this + 14) = v25;
            }
            unsigned int v26 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v12 = *((void *)this + 2);
            if ((unint64_t)v26 >= v12) {
              goto LABEL_2;
            }
            int v27 = *v26;
            if (v27 != 10)
            {
              if (v27 != 16) {
                goto LABEL_2;
              }
              BOOL v28 = (char *)(v26 + 1);
              *((void *)this + 1) = v28;
              goto LABEL_32;
            }
            *((void *)this + 1) = v26 + 1;
          }
        }
        goto LABEL_36;
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_36;
      }
      BOOL v28 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
LABEL_32:
      if ((unint64_t)v28 >= v12 || *v28 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
        if (!result) {
          return result;
        }
        int v29 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        *int v6 = *v28;
        int v29 = v28 + 1;
        *((void *)this + 1) = v29;
      }
      *(_DWORD *)(a1 + 52) |= 2u;
      if ((unint64_t)v29 < v12 && *v29 == 24)
      {
        unint64_t v13 = v29 + 1;
        *((void *)this + 1) = v13;
LABEL_46:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v31 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v13;
          unsigned int v31 = (unsigned __int8 *)(v13 + 1);
          *((void *)this + 1) = v31;
        }
        *(_DWORD *)(a1 + 52) |= 4u;
        if (v31 == (unsigned __int8 *)v12
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_46;
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_36:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_10040D908(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 2) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 32), (unint64_t)a2, a4);
    int v7 = *(_DWORD *)(v5 + 52);
  }
  if ((v7 & 4) != 0)
  {
    uint64_t v8 = *(void *)(v5 + 40);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, (unint64_t)a2, a4);
  }
  return result;
}

uint64_t sub_10040D9B4(uint64_t a1, unint64_t a2)
{
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x1FE) == 0)
  {
    int v4 = 0;
    goto LABEL_8;
  }
  if ((v3 & 2) != 0)
  {
    int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32), a2)+ 1;
    if ((*(_DWORD *)(a1 + 52) & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  int v4 = 0;
  if ((v3 & 4) != 0) {
LABEL_7:
  }
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), a2)+ 1;
LABEL_8:
  int v5 = *(_DWORD *)(a1 + 16);
  uint64_t v6 = (v5 + v4);
  if (v5 >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10040D164(*(void *)(*(void *)(a1 + 8) + 8 * v7));
      int v10 = (int)v8;
      if (v8 >= 0x80) {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, v9);
      }
      else {
        int v11 = 1;
      }
      uint64_t v6 = (v10 + v6 + v11);
      ++v7;
    }
    while (v7 < *(int *)(a1 + 16));
  }
  *(_DWORD *)(a1 + 48) = v6;
  return v6;
}

void sub_10040DA80(uint64_t a1, void *lpsrc)
{
  sub_10040D2C8(a1, (uint64_t)lpsrc);
}

uint64_t sub_10040DB08()
{
  return 1;
}

void *sub_10040DB10@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GEOMapFeatureBuilding");
}

double sub_10040DB20(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 16) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 28);
      uint64_t v8 = *(int *)(a1 + 24);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v7 + 1);
          int v7 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v8 + 1;
      sub_10040D2C8(*(void *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
  int v10 = *(_DWORD *)(a2 + 48);
  if (v10)
  {
    sub_10026DE30(a1 + 40, *(_DWORD *)(a1 + 48) + v10);
    memcpy((void *)(*(void *)(a1 + 40) + 8 * *(int *)(a1 + 48)), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  LOBYTE(v11) = *(unsigned char *)(a2 + 68);
  if ((_BYTE)v11)
  {
    if (*(unsigned char *)(a2 + 68))
    {
      *(_DWORD *)(a1 + 68) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      if (!v12) {
        operator new();
      }
      uint64_t v13 = *(void *)(a2 + 8);
      if (!v13) {
        uint64_t v13 = *(void *)(qword_102489EF8 + 8);
      }
      double result = sub_1003DE314(v12, v13);
      int v11 = *(_DWORD *)(a2 + 68);
    }
    if ((v11 & 8) != 0)
    {
      *(_DWORD *)(a1 + 68) |= 8u;
      uint64_t v14 = *(void *)(a1 + 56);
      if (!v14) {
        operator new();
      }
      uint64_t v15 = *(void *)(a2 + 56);
      if (!v15) {
        uint64_t v15 = *(void *)(qword_102489EF8 + 56);
      }
      return sub_10040C348(v14, v15);
    }
  }
  return result;
}

void sub_10040DDB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10040DDD0(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022B0C78;
  sub_10040DE4C(a1);
  if (a1[5]) {
    operator delete[]();
  }
  sub_10016B2E8(a1 + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void *sub_10040DE4C(void *result)
{
  if ((void *)qword_102489EF8 != result)
  {
    int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    double result = (void *)v1[7];
    if (result)
    {
      int v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_10040DEF0(uint64_t *a1)
{
  sub_10040DDD0(a1);

  operator delete();
}

uint64_t sub_10040DF28(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489EF8;
  if (!qword_102489EF8)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489EF8;
  }
  return result;
}

void sub_10040DF58()
{
}

uint64_t sub_10040DFB4(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 68);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(a1 + 68))
    {
      uint64_t v3 = *(void *)(a1 + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(a1 + 68);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 56);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 28))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
      }
    }
  }
  uint64_t result = sub_10026DEDC(a1 + 16);
  *(_DWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 68) = 0;
  return result;
}

uint64_t sub_10040E02C(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, unsigned int a3)
{
  uint64_t v5 = a1 + 40;
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
LABEL_2:
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_21;
        }
        *(_DWORD *)(a1 + 68) |= 1u;
        uint64_t v10 = *(void *)(a1 + 8);
        if (!v10) {
          operator new();
        }
        v54[0] = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54))return 0; {
        }
          }
        else
        {
          v54[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54[0]);
        if (!sub_1003DE4BC(v10, this, v18) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        unsigned int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 18) {
          continue;
        }
        goto LABEL_34;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_21;
        }
        while (2)
        {
          int v23 = *(_DWORD *)(a1 + 28);
          uint64_t v24 = *(int *)(a1 + 24);
          if ((int)v24 >= v23)
          {
            if (v23 == *(_DWORD *)(a1 + 32))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v23 + 1);
              int v23 = *(_DWORD *)(a1 + 28);
            }
            *(_DWORD *)(a1 + 28) = v23 + 1;
            operator new();
          }
          uint64_t v25 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v24 + 1;
          uint64_t v26 = *(void *)(v25 + 8 * v24);
          v54[0] = 0;
          int v27 = (char *)*((void *)this + 1);
          if ((unint64_t)v27 >= *((void *)this + 2) || *v27 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54))return 0; {
          }
            }
          else
          {
            v54[0] = *v27;
            *((void *)this + 1) = v27 + 1;
          }
          int v28 = *((_DWORD *)this + 14);
          int v29 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v28 + 1;
          if (v28 >= v29) {
            return 0;
          }
          int v30 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54[0]);
          if (!sub_10040D5BC(v26, this, v31) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v30);
          int v32 = *((_DWORD *)this + 14);
          BOOL v20 = __OFSUB__(v32, 1);
          int v33 = v32 - 1;
          if (v33 < 0 == v20) {
            *((_DWORD *)this + 14) = v33;
          }
          unsigned int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v22 < v12)
          {
            int v34 = *v22;
            if (v34 == 18)
            {
LABEL_34:
              *((void *)this + 1) = v22 + 1;
              continue;
            }
            goto LABEL_51;
          }
          goto LABEL_2;
        }
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 2)
        {
          uint64_t result = sub_10040E684(this, v5);
          if (!result) {
            return result;
          }
          while (1)
          {
            unsigned int v22 = (unsigned char *)*((void *)this + 1);
            unint64_t v12 = *((void *)this + 2);
            if ((unint64_t)v22 >= v12) {
              goto LABEL_2;
            }
            int v34 = *v22;
            if (v34 == 34) {
              break;
            }
LABEL_51:
            if (v34 != 24) {
              goto LABEL_2;
            }
            uint64_t v13 = v22 + 1;
            *((void *)this + 1) = v13;
LABEL_53:
            unint64_t v53 = 0;
            if ((unint64_t)v13 >= v12 || *v13 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v53))return 0; {
            }
              }
            else
            {
              unint64_t v53 = *v13;
              *((void *)this + 1) = v13 + 1;
            }
            int v35 = *(_DWORD *)(a1 + 48);
            int v36 = *(_DWORD *)(a1 + 52);
            if (v35 == v36)
            {
              sub_10026DE30(v5, v35 + 1);
              int v35 = *(_DWORD *)(a1 + 48);
              int v36 = *(_DWORD *)(a1 + 52);
            }
            unint64_t v37 = v53;
            uint64_t v38 = *(void *)(a1 + 40);
            int v39 = v35 + 1;
            *(_DWORD *)(a1 + 48) = v35 + 1;
            *(void *)(v38 + 8 * v35) = v37;
            if (v36 - (v35 + 1) >= 1)
            {
              int v40 = v36 - v35;
              do
              {
                int v41 = (unsigned char *)*((void *)this + 1);
                unint64_t v42 = *((void *)this + 2);
                if ((unint64_t)v41 >= v42 || *v41 != 24) {
                  break;
                }
                *((void *)this + 1) = v41 + 1;
                if ((unint64_t)(v41 + 1) >= v42 || (char)v41[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v53))return 0; {
                  int v39 = *(_DWORD *)(a1 + 48);
                  }
                }
                else
                {
                  unint64_t v53 = v41[1];
                  *((void *)this + 1) = v41 + 2;
                }
                if (v39 >= *(_DWORD *)(a1 + 52))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v54);
                  int v39 = *(_DWORD *)(a1 + 48);
                }
                unint64_t v43 = v53;
                uint64_t v44 = *(void *)(a1 + 40);
                *(_DWORD *)(a1 + 48) = v39 + 1;
                *(void *)(v44 + 8 * v39) = v43;
                --v40;
                ++v39;
              }
              while (v40 > 1);
            }
          }
          *((void *)this + 1) = v22 + 1;
LABEL_74:
          *(_DWORD *)(a1 + 68) |= 8u;
          uint64_t v45 = *(void *)(a1 + 56);
          if (!v45) {
            operator new();
          }
          v54[0] = 0;
          int v46 = (char *)*((void *)this + 1);
          if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v54))return 0; {
          }
            }
          else
          {
            v54[0] = *v46;
            *((void *)this + 1) = v46 + 1;
          }
          int v47 = *((_DWORD *)this + 14);
          int v48 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v47 + 1;
          if (v47 >= v48) {
            return 0;
          }
          int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v54[0]);
          if (!sub_10040C4E0(v45, this, v50) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
          int v51 = *((_DWORD *)this + 14);
          BOOL v20 = __OFSUB__(v51, 1);
          int v52 = v51 - 1;
          if (v52 < 0 == v20) {
            *((_DWORD *)this + 14) = v52;
          }
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          uint64_t v13 = (char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          goto LABEL_53;
        }
LABEL_21:
        if (v9 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_21;
        }
        goto LABEL_74;
      default:
        int v9 = TagFallback & 7;
        goto LABEL_21;
    }
  }
}

void sub_10040E65C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10040E684(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v13 = 0;
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
    if (!result) {
      return result;
    }
    unsigned int v5 = v13;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v13 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unint64_t v12 = 0;
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v12);
        if (!result) {
          return result;
        }
      }
      else
      {
        unint64_t v12 = *v8;
        *((void *)this + 1) = v8 + 1;
      }
      int v9 = *(_DWORD *)(a2 + 8);
      if (v9 == *(_DWORD *)(a2 + 12))
      {
        sub_10026DE30(a2, v9 + 1);
        int v9 = *(_DWORD *)(a2 + 8);
      }
      unint64_t v10 = v12;
      uint64_t v11 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v9 + 1;
      *(void *)(v11 + 8 * v9) = v10;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_10040E7A0(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 68))
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489EF8 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 40) + 8 * v8++), (unint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 48));
  }
  if ((*(unsigned char *)(v5 + 68) & 8) != 0)
  {
    uint64_t v9 = *(void *)(v5 + 56);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489EF8 + 56);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  }
  return result;
}

uint64_t sub_10040E8A0(uint64_t a1, unint64_t a2)
{
  if (!*(unsigned char *)(a1 + 68))
  {
    int v3 = 0;
    goto LABEL_22;
  }
  if ((*(unsigned char *)(a1 + 68) & 1) == 0)
  {
    int v3 = 0;
    if ((*(unsigned char *)(a1 + 68) & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (!v4) {
    uint64_t v4 = *(void *)(qword_102489EF8 + 8);
  }
  int v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(unsigned char *)(v4 + 36))
  {
    int v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0) {
      v6 += 9;
    }
    if ((v5 & 4) != 0) {
      int v5 = v6 + 9;
    }
    else {
      int v5 = v6;
    }
  }
  *(_DWORD *)(v4 + 32) = v5;
  int v3 = v5 + 2;
  if ((*(_DWORD *)(a1 + 68) & 8) != 0)
  {
LABEL_15:
    uint64_t v7 = *(void *)(a1 + 56);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489EF8 + 56);
    }
    int v8 = *(unsigned __int8 *)(v7 + 28);
    if (*(unsigned char *)(v7 + 28))
    {
      if ((v8 & 2) != 0) {
        int v8 = ((v8 << 31 >> 31) & 9) + 9;
      }
      else {
        int v8 = (v8 << 31 >> 31) & 9;
      }
    }
    *(_DWORD *)(v7 + 24) = v8;
    v3 += v8 + 2;
  }
LABEL_22:
  int v9 = *(_DWORD *)(a1 + 24);
  int v10 = v9 + v3;
  if (v9 >= 1)
  {
    uint64_t v11 = 0;
    do
    {
      unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10040D9B4(*(void *)(*(void *)(a1 + 16) + 8 * v11), a2);
      int v13 = (int)v12;
      if (v12 >= 0x80) {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
      }
      else {
        int v14 = 1;
      }
      v10 += v13 + v14;
      ++v11;
    }
    while (v11 < *(int *)(a1 + 24));
  }
  LODWORD(v15) = *(_DWORD *)(a1 + 48);
  if ((int)v15 < 1)
  {
    int v17 = 0;
  }
  else
  {
    uint64_t v16 = 0;
    int v17 = 0;
    do
    {
      v17 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*(void *)(a1 + 40) + 8 * v16++), a2);
      uint64_t v15 = *(int *)(a1 + 48);
    }
    while (v16 < v15);
  }
  uint64_t result = (v17 + v10 + v15);
  *(_DWORD *)(a1 + 64) = result;
  return result;
}

double sub_10040EA14(uint64_t a1, void *lpsrc)
{
  return sub_10040DB20(a1, (uint64_t)lpsrc);
}

uint64_t sub_10040EA9C()
{
  return 1;
}

void *sub_10040EAA4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GEOMapBuildingData");
}

void sub_10040EAB4(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), *(_DWORD *)(a2 + 16) + a1[4]);
  if (*(int *)(a2 + 16) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 8) + 8 * v4);
      int v6 = a1[5];
      uint64_t v7 = (int)a1[4];
      if ((int)v7 >= v6)
      {
        if (v6 == a1[6])
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2), v6 + 1);
          int v6 = a1[5];
        }
        a1[5] = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)a1 + 1);
      a1[4] = v7 + 1;
      sub_10040C348(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 16));
  }
  int v9 = *(_DWORD *)(a2 + 52);
  if ((v9 & 0x1FE) != 0)
  {
    if ((v9 & 2) != 0)
    {
      unsigned int v10 = *(_DWORD *)(a2 + 32);
      if (v10 >= 4) {
        sub_101A5F3EC();
      }
      a1[13] |= 2u;
      a1[8] = v10;
      int v9 = *(_DWORD *)(a2 + 52);
    }
    if ((v9 & 4) != 0)
    {
      int v12 = *(_DWORD *)(a2 + 36);
      a1[13] |= 4u;
      a1[9] = v12;
      int v9 = *(_DWORD *)(a2 + 52);
      if ((v9 & 8) == 0)
      {
LABEL_17:
        if ((v9 & 0x10) == 0) {
          return;
        }
        goto LABEL_18;
      }
    }
    else if ((v9 & 8) == 0)
    {
      goto LABEL_17;
    }
    int v13 = *(_DWORD *)(a2 + 40);
    a1[13] |= 8u;
    a1[10] = v13;
    if ((*(_DWORD *)(a2 + 52) & 0x10) != 0)
    {
LABEL_18:
      int v11 = *(_DWORD *)(a2 + 44);
      a1[13] |= 0x10u;
      a1[11] = v11;
    }
  }
}

void sub_10040ECA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10040ECB8(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022B0CF0;
  sub_10016B2E8(a1 + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_10040ED14(uint64_t *a1)
{
  sub_10040ECB8(a1);

  operator delete();
}

void sub_10040ED4C()
{
}

uint64_t sub_10040EDA4(uint64_t a1)
{
  if ((*(_WORD *)(a1 + 52) & 0x1FE) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 8);
  *(_DWORD *)(a1 + 52) = 0;
  return result;
}

uint64_t sub_10040EDE0(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 2);
  int v6 = a1 + 9;
  uint64_t v7 = a1 + 10;
  uint64_t v8 = a1 + 11;
LABEL_2:
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_37;
        }
        while (1)
        {
          int v12 = a1[5];
          uint64_t v13 = (int)a1[4];
          if ((int)v13 >= v12)
          {
            if (v12 == a1[6])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v12 + 1);
              int v12 = a1[5];
            }
            a1[5] = v12 + 1;
            operator new();
          }
          uint64_t v14 = *((void *)a1 + 1);
          a1[4] = v13 + 1;
          uint64_t v15 = *(void *)(v14 + 8 * v13);
          unsigned int v39 = 0;
          uint64_t v16 = (char *)*((void *)this + 1);
          if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39))return 0; {
          }
            }
          else
          {
            unsigned int v39 = *v16;
            *((void *)this + 1) = v16 + 1;
          }
          int v17 = *((_DWORD *)this + 14);
          int v18 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v17 + 1;
          if (v17 >= v18) {
            return 0;
          }
          int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v39);
          if (!sub_10040C4E0(v15, this, v20) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
          int v21 = *((_DWORD *)this + 14);
          BOOL v22 = __OFSUB__(v21, 1);
          int v23 = v21 - 1;
          if (v23 < 0 == v22) {
            *((_DWORD *)this + 14) = v23;
          }
          uint64_t v25 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          if ((unint64_t)v25 >= v24) {
            goto LABEL_2;
          }
          int v26 = *v25;
          if (v26 != 10) {
            break;
          }
          *((void *)this + 1) = v25 + 1;
        }
        if (v26 != 16) {
          continue;
        }
        int v27 = (char *)(v25 + 1);
        *((void *)this + 1) = v27;
        goto LABEL_29;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
LABEL_29:
        unsigned int v38 = 0;
        if ((unint64_t)v27 >= v24 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38);
          if (!result) {
            return result;
          }
          unsigned int v28 = v38;
        }
        else
        {
          unsigned int v28 = *v27;
          *((void *)this + 1) = v27 + 1;
        }
        if (v28 <= 3)
        {
          a1[13] |= 2u;
          a1[8] = v28;
        }
        int v34 = (unsigned char *)*((void *)this + 1);
        unint64_t v29 = *((void *)this + 2);
        if ((unint64_t)v34 >= v29 || *v34 != 24) {
          continue;
        }
        int v30 = v34 + 1;
        *((void *)this + 1) = v30;
LABEL_50:
        if ((unint64_t)v30 >= v29 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v29 = *((void *)this + 2);
        }
        else
        {
          *int v6 = *v30;
          int v35 = v30 + 1;
          *((void *)this + 1) = v35;
        }
        a1[13] |= 4u;
        if ((unint64_t)v35 >= v29 || *v35 != 32) {
          continue;
        }
        unsigned int v31 = v35 + 1;
        *((void *)this + 1) = v31;
LABEL_58:
        if ((unint64_t)v31 >= v29 || *v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v29 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v31;
          int v36 = v31 + 1;
          *((void *)this + 1) = v36;
        }
        a1[13] |= 8u;
        if ((unint64_t)v36 >= v29 || *v36 != 40) {
          continue;
        }
        int v32 = v36 + 1;
        *((void *)this + 1) = v32;
LABEL_66:
        if ((unint64_t)v32 >= v29 || *v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          unint64_t v37 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v29 = *((void *)this + 2);
        }
        else
        {
          unsigned int *v8 = *v32;
          unint64_t v37 = (unsigned __int8 *)(v32 + 1);
          *((void *)this + 1) = v37;
        }
        a1[13] |= 0x10u;
        if (v37 != (unsigned __int8 *)v29 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v30 = (char *)*((void *)this + 1);
        unint64_t v29 = *((void *)this + 2);
        goto LABEL_50;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v31 = (char *)*((void *)this + 1);
        unint64_t v29 = *((void *)this + 2);
        goto LABEL_58;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v32 = (char *)*((void *)this + 1);
        unint64_t v29 = *((void *)this + 2);
        goto LABEL_66;
      default:
        int v11 = TagFallback & 7;
LABEL_37:
        if (v11 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_10040F234(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 2) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 32), (int)a2, a4);
    int v7 = *(_DWORD *)(v5 + 52);
    if ((v7 & 4) == 0)
    {
LABEL_6:
      if ((v7 & 8) == 0) {
        goto LABEL_7;
      }
LABEL_11:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 40), a2, a4);
      if ((*(_DWORD *)(v5 + 52) & 0x10) == 0) {
        return result;
      }
      goto LABEL_12;
    }
  }
  else if ((v7 & 4) == 0)
  {
    goto LABEL_6;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 36), a2, a4);
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 8) != 0) {
    goto LABEL_11;
  }
LABEL_7:
  if ((v7 & 0x10) == 0) {
    return result;
  }
LABEL_12:
  int v8 = *(_DWORD *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
}

uint64_t sub_10040F31C(uint64_t a1, unsigned int a2)
{
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 0x1FE) == 0)
  {
    int v4 = 0;
    goto LABEL_28;
  }
  if ((v3 & 2) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v5 & 0x80000000) != 0)
    {
      int v4 = 11;
      if ((v3 & 4) == 0) {
        goto LABEL_17;
      }
    }
    else if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 4) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 4) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((v3 & 4) == 0) {
      goto LABEL_17;
    }
  }
  uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_17:
  if ((v3 & 8) == 0)
  {
    if ((v3 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_24;
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 52);
  }
  else
  {
    int v9 = 2;
  }
  v4 += v9;
  if ((v3 & 0x10) != 0)
  {
LABEL_24:
    unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if (v10 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2) + 1;
    }
    else {
      int v11 = 2;
    }
    v4 += v11;
  }
LABEL_28:
  uint64_t v12 = *(unsigned int *)(a1 + 16);
  uint64_t result = (v12 + v4);
  if ((int)v12 >= 1)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    do
    {
      int v15 = *(unsigned __int8 *)(*(void *)v14 + 28);
      if (*(unsigned char *)(*(void *)v14 + 28))
      {
        if ((v15 & 2) != 0) {
          int v15 = ((v15 << 31 >> 31) & 9) + 9;
        }
        else {
          int v15 = (v15 << 31 >> 31) & 9;
        }
      }
      *(_DWORD *)(*(void *)v14 + 24) = v15;
      uint64_t result = (result + v15 + 1);
      v14 += 8;
      --v12;
    }
    while (v12);
  }
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

void sub_10040F464(_DWORD *a1, void *lpsrc)
{
  sub_10040EAB4(a1, (uint64_t)lpsrc);
}

uint64_t sub_10040F4EC()
{
  return 1;
}

void *sub_10040F4F4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavannaBranch");
}

double sub_10040F504(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), *(_DWORD *)(a2 + 48) + *(_DWORD *)(a1 + 48));
  if (*(int *)(a2 + 48) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(a2 + 40) + 8 * v5);
      int v7 = *(_DWORD *)(a1 + 52);
      uint64_t v8 = *(int *)(a1 + 48);
      if ((int)v8 >= v7)
      {
        if (v7 == *(_DWORD *)(a1 + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), v7 + 1);
          int v7 = *(_DWORD *)(a1 + 52);
        }
        *(_DWORD *)(a1 + 52) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *(void *)(a1 + 40);
      *(_DWORD *)(a1 + 48) = v8 + 1;
      double result = sub_10040C348(*(void *)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 48));
  }
  LOBYTE(v10) = *(unsigned char *)(a2 + 68);
  if ((_BYTE)v10)
  {
    if (*(unsigned char *)(a2 + 68))
    {
      double result = *(double *)(a2 + 8);
      *(_DWORD *)(a1 + 68) |= 1u;
      *(double *)(a1 + 8) = result;
      int v10 = *(_DWORD *)(a2 + 68);
      if ((v10 & 2) == 0)
      {
LABEL_14:
        if ((v10 & 4) == 0) {
          goto LABEL_15;
        }
        goto LABEL_20;
      }
    }
    else if ((*(unsigned char *)(a2 + 68) & 2) == 0)
    {
      goto LABEL_14;
    }
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 68) |= 2u;
    *(double *)(a1 + 16) = result;
    int v10 = *(_DWORD *)(a2 + 68);
    if ((v10 & 4) == 0)
    {
LABEL_15:
      if ((v10 & 8) == 0) {
        return result;
      }
      goto LABEL_16;
    }
LABEL_20:
    double result = *(double *)(a2 + 24);
    *(_DWORD *)(a1 + 68) |= 4u;
    *(double *)(a1 + 24) = result;
    if ((*(_DWORD *)(a2 + 68) & 8) == 0) {
      return result;
    }
LABEL_16:
    double result = *(double *)(a2 + 32);
    *(_DWORD *)(a1 + 68) |= 8u;
    *(double *)(a1 + 32) = result;
  }
  return result;
}

void sub_10040F6E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10040F6FC(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022B0D68;
  sub_10016B2E8(a1 + 5);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_10040F758(uint64_t *a1)
{
  sub_10040F6FC(a1);

  operator delete();
}

void sub_10040F790()
{
}

uint64_t sub_10040F7F0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 68))
  {
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
  }
  uint64_t result = sub_10026DEDC(a1 + 40);
  *(_DWORD *)(a1 + 68) = 0;
  return result;
}

uint64_t sub_10040F830(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40);
  while (1)
  {
    uint64_t v6 = (unsigned __int8 *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2) || (char)*v6 < 0) {
      break;
    }
    unint64_t TagFallback = *v6;
    *((_DWORD *)this + 8) = TagFallback;
    *((void *)this + 1) = v6 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_30;
        }
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 68) |= 1u;
        uint64_t v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 17) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
        goto LABEL_15;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_30;
        }
LABEL_15:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 68) |= 2u;
        int v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 25) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
LABEL_20:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 68) |= 4u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 33) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_25:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 68) |= 8u;
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 42) {
          continue;
        }
        break;
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_20;
        }
        goto LABEL_30;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_25;
        }
        goto LABEL_30;
      case 5u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_30;
        }
        goto LABEL_34;
      default:
        int v8 = TagFallback & 7;
LABEL_30:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
    do
    {
      *((void *)this + 1) = v12 + 1;
LABEL_34:
      int v13 = *(_DWORD *)(a1 + 52);
      uint64_t v14 = *(int *)(a1 + 48);
      if ((int)v14 >= v13)
      {
        if (v13 == *(_DWORD *)(a1 + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v13 + 1);
          int v13 = *(_DWORD *)(a1 + 52);
        }
        *(_DWORD *)(a1 + 52) = v13 + 1;
        operator new();
      }
      uint64_t v15 = *(void *)(a1 + 40);
      *(_DWORD *)(a1 + 48) = v14 + 1;
      uint64_t v16 = *(void *)(v15 + 8 * v14);
      v27[0] = 0;
      int v17 = (char *)*((void *)this + 1);
      if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27))return 0; {
      }
        }
      else
      {
        v27[0] = *v17;
        *((void *)this + 1) = v17 + 1;
      }
      int v18 = *((_DWORD *)this + 14);
      int v19 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v18 + 1;
      if (v18 >= v19) {
        return 0;
      }
      int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
      if (!sub_10040C4E0(v16, this, v21) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
      int v22 = *((_DWORD *)this + 14);
      BOOL v23 = __OFSUB__(v22, 1);
      int v24 = v22 - 1;
      if (v24 < 0 == v23) {
        *((_DWORD *)this + 14) = v24;
      }
      uint64_t v12 = (unsigned char *)*((void *)this + 1);
      uint64_t v25 = (unsigned char *)*((void *)this + 2);
    }
    while (v12 < v25 && *v12 == 42);
    if (v12 == v25 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
  unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  *((_DWORD *)this + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t sub_10040FC00(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 68);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 68) & 8) != 0) {
LABEL_5:
  }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
LABEL_6:
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 40) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 48));
  }
  return result;
}

uint64_t sub_10040FCD0(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 68);
  if (*(unsigned char *)(a1 + 68))
  {
    int v2 = (v1 << 31 >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      int v1 = v2 + 9;
    }
    else {
      int v1 = v2;
    }
  }
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  uint64_t v4 = (v3 + v1);
  if ((int)v3 >= 1)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    do
    {
      int v6 = *(unsigned __int8 *)(*(void *)v5 + 28);
      if (*(unsigned char *)(*(void *)v5 + 28))
      {
        if ((v6 & 2) != 0) {
          int v6 = ((v6 << 31 >> 31) & 9) + 9;
        }
        else {
          int v6 = (v6 << 31 >> 31) & 9;
        }
      }
      *(_DWORD *)(*(void *)v5 + 24) = v6;
      uint64_t v4 = (v4 + v6 + 1);
      v5 += 8;
      --v3;
    }
    while (v3);
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

double sub_10040FD64(uint64_t a1, void *lpsrc)
{
  return sub_10040F504(a1, (uint64_t)lpsrc);
}

uint64_t sub_10040FDEC()
{
  return 1;
}

void *sub_10040FDF4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavannaBoundingBox");
}

void sub_10040FE04(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = a2[16];
  if ((_BYTE)v4)
  {
    if (a2[16])
    {
      char v5 = a2[8];
      *(_DWORD *)(a1 + 16) |= 1u;
      *(unsigned char *)(a1 + 8) = v5;
      int v4 = *((_DWORD *)a2 + 4);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = a2[9];
      *(_DWORD *)(a1 + 16) |= 2u;
      *(unsigned char *)(a1 + 9) = v6;
    }
  }
}

void sub_10040FEB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10040FEC8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0DE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_10040FEE8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0DE0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10040FF3C()
{
}

uint64_t sub_10040FF8C(uint64_t result)
{
  if (*(unsigned char *)(result + 16)) {
    *(_WORD *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_10040FFA0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      char v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v17 = 0;
      int v10 = (char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v10 >= v8 || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
        if (!result) {
          return result;
        }
        unsigned int v11 = v17;
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
      }
      else
      {
        unsigned int v11 = *v10;
        uint64_t v12 = v10 + 1;
        *((void *)this + 1) = v12;
      }
      *(unsigned char *)(a1 + 8) = v11 != 0;
      *(_DWORD *)(a1 + 16) |= 1u;
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        uint64_t v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_23:
        unsigned int v16 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
          if (!result) {
            return result;
          }
          unsigned int v13 = v16;
          uint64_t v14 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v8 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v9;
          uint64_t v14 = (unsigned __int8 *)(v9 + 1);
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 9) = v13 != 0;
        *(_DWORD *)(a1 + 16) |= 2u;
        if (v14 == (unsigned __int8 *)v8 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_23;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_15:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100410158(uint64_t result, BOOL a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 16);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(unsigned __int8 *)(v5 + 9);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_1004101C4(uint64_t a1)
{
  unsigned int v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  if ((*(_DWORD *)(a1 + 16) & 2) != 0) {
    v1 += 2;
  }
  if (*(_DWORD *)(a1 + 16)) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 12) = v2;
  return v2;
}

void sub_1004101EC(uint64_t a1, unsigned char *lpsrc)
{
  sub_10040FE04(a1, lpsrc);
}

uint64_t sub_100410274()
{
  return 1;
}

void *sub_10041027C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavanna.TreeFeatures");
}

void sub_10041028C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 28);
      uint64_t v7 = *(int *)(a1 + 24);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v7 + 1;
      sub_10040EAB4(*(_DWORD **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 76);
  if (!(_BYTE)v9) {
    return;
  }
  if (*(unsigned char *)(a2 + 76))
  {
    *(_DWORD *)(a1 + 76) |= 1u;
    uint64_t v11 = *(void *)(a1 + 8);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 8);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_102489F10 + 8);
    }
    sub_10040F504(v11, v12);
    int v9 = *(_DWORD *)(a2 + 76);
    if ((v9 & 4) == 0)
    {
LABEL_14:
      if ((v9 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_26;
    }
  }
  else if ((*(unsigned char *)(a2 + 76) & 4) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v13 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 76) |= 4u;
  *(void *)(a1 + 40) = v13;
  int v9 = *(_DWORD *)(a2 + 76);
  if ((v9 & 8) == 0)
  {
LABEL_15:
    if ((v9 & 0x10) == 0) {
      goto LABEL_16;
    }
LABEL_28:
    int v15 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 76) |= 0x10u;
    *(_DWORD *)(a1 + 52) = v15;
    int v9 = *(_DWORD *)(a2 + 76);
    if ((v9 & 0x20) == 0)
    {
LABEL_17:
      if ((v9 & 0x40) == 0) {
        return;
      }
      goto LABEL_18;
    }
    goto LABEL_29;
  }
LABEL_26:
  unsigned int v14 = *(_DWORD *)(a2 + 48);
  if (v14 >= 4) {
    sub_101A5F418();
  }
  *(_DWORD *)(a1 + 76) |= 8u;
  *(_DWORD *)(a1 + 48) = v14;
  int v9 = *(_DWORD *)(a2 + 76);
  if ((v9 & 0x10) != 0) {
    goto LABEL_28;
  }
LABEL_16:
  if ((v9 & 0x20) == 0) {
    goto LABEL_17;
  }
LABEL_29:
  *(_DWORD *)(a1 + 76) |= 0x20u;
  uint64_t v16 = *(void *)(a1 + 56);
  if (!v16) {
    operator new();
  }
  unsigned int v17 = *(unsigned char **)(a2 + 56);
  if (!v17) {
    unsigned int v17 = *(unsigned char **)(qword_102489F10 + 56);
  }
  sub_10040FE04(v16, v17);
  if ((*(_DWORD *)(a2 + 76) & 0x40) != 0)
  {
LABEL_18:
    uint64_t v10 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 76) |= 0x40u;
    *(void *)(a1 + 64) = v10;
  }
}

void sub_100410584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10041059C(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022B0E58;
  uint64_t v2 = a1 + 2;
  sub_100410600(a1);
  sub_10016B2E8(v2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void *sub_100410600(void *result)
{
  if ((void *)qword_102489F10 != result)
  {
    unsigned int v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t result = (void *)v1[7];
    if (result)
    {
      uint64_t v3 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v3();
    }
  }
  return result;
}

void sub_1004106A4(uint64_t *a1)
{
  sub_10041059C(a1);

  operator delete();
}

void sub_1004106DC()
{
}

uint64_t sub_10041073C(uint64_t a1)
{
  LOBYTE(v2) = *(unsigned char *)(a1 + 76);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(a1 + 76))
    {
      uint64_t v3 = *(void *)(a1 + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 68))
        {
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        sub_10026DEDC(v3 + 40);
        *(_DWORD *)(v3 + 68) = 0;
        int v2 = *(_DWORD *)(a1 + 76);
      }
    }
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    if ((v2 & 0x20) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 56);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 16)) {
          *(_WORD *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 16) = 0;
      }
    }
    *(void *)(a1 + 64) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 16);
  *(_DWORD *)(a1 + 76) = 0;
  return result;
}

uint64_t sub_1004107C4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  int v6 = (unint64_t *)(a1 + 40);
  uint64_t v7 = (unsigned int *)(a1 + 52);
  uint64_t v8 = (unint64_t *)(a1 + 64);
  while (1)
  {
LABEL_2:
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 < *((void *)this + 2) && (*v9 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_26;
        }
        *(_DWORD *)(a1 + 76) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        if (!v12) {
          operator new();
        }
        unsigned int v57 = 0;
        uint64_t v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v57))return 0; {
        }
          }
        else
        {
          unsigned int v57 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v57);
        if (!sub_10040F830(v12, this, v25) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v26 = *((_DWORD *)this + 14);
        BOOL v27 = __OFSUB__(v26, 1);
        int v28 = v26 - 1;
        if (v28 < 0 == v27) {
          *((_DWORD *)this + 14) = v28;
        }
        unint64_t v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 18) {
          continue;
        }
        goto LABEL_38;
      case 2u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_26;
        }
        break;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_57;
      case 4u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_65;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_75;
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_26;
        }
        int v19 = *(_DWORD *)(a1 + 76);
        goto LABEL_83;
      case 7u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_97;
      default:
        int v11 = TagFallback & 7;
LABEL_26:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
    while (1)
    {
      int v30 = *(_DWORD *)(a1 + 28);
      uint64_t v31 = *(int *)(a1 + 24);
      if ((int)v31 >= v30)
      {
        if (v30 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v30 + 1);
          int v30 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v30 + 1;
        operator new();
      }
      uint64_t v32 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v31 + 1;
      int v33 = *(_DWORD **)(v32 + 8 * v31);
      unsigned int v57 = 0;
      int v34 = (char *)*((void *)this + 1);
      if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v57))return 0; {
      }
        }
      else
      {
        unsigned int v57 = *v34;
        *((void *)this + 1) = v34 + 1;
      }
      int v35 = *((_DWORD *)this + 14);
      int v36 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v35 + 1;
      if (v35 >= v36) {
        return 0;
      }
      int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v57);
      if (!sub_10040EDE0(v33, this, v38) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
      int v39 = *((_DWORD *)this + 14);
      BOOL v27 = __OFSUB__(v39, 1);
      int v40 = v39 - 1;
      if (v40 < 0 == v27) {
        *((_DWORD *)this + 14) = v40;
      }
      unint64_t v29 = (unsigned char *)*((void *)this + 1);
      unint64_t v14 = *((void *)this + 2);
      if ((unint64_t)v29 >= v14) {
        goto LABEL_2;
      }
      int v41 = *v29;
      if (v41 != 18) {
        break;
      }
LABEL_38:
      *((void *)this + 1) = v29 + 1;
    }
    if (v41 != 24) {
      continue;
    }
    int v15 = v29 + 1;
    *((void *)this + 1) = v15;
LABEL_57:
    if ((unint64_t)v15 >= v14 || *v15 < 0)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
      if (!result) {
        return result;
      }
      unint64_t v42 = (unsigned char *)*((void *)this + 1);
      unint64_t v14 = *((void *)this + 2);
    }
    else
    {
      *int v6 = *v15;
      unint64_t v42 = v15 + 1;
      *((void *)this + 1) = v42;
    }
    *(_DWORD *)(a1 + 76) |= 4u;
    if ((unint64_t)v42 < v14 && *v42 == 32)
    {
      uint64_t v16 = v42 + 1;
      *((void *)this + 1) = v16;
LABEL_65:
      unsigned int v57 = 0;
      if ((unint64_t)v16 >= v14 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v57);
        if (!result) {
          return result;
        }
        unsigned int v44 = v57;
      }
      else
      {
        unsigned int v44 = *v16;
        *((void *)this + 1) = v16 + 1;
      }
      if (v44 <= 3)
      {
        *(_DWORD *)(a1 + 76) |= 8u;
        *(_DWORD *)(a1 + 48) = v44;
      }
      uint64_t v45 = (unsigned char *)*((void *)this + 1);
      unint64_t v17 = *((void *)this + 2);
      if ((unint64_t)v45 < v17 && *v45 == 40)
      {
        int v18 = v45 + 1;
        *((void *)this + 1) = v18;
LABEL_75:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v46 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          *uint64_t v7 = *v18;
          int v46 = v18 + 1;
          *((void *)this + 1) = v46;
        }
        int v19 = *(_DWORD *)(a1 + 76) | 0x10;
        *(_DWORD *)(a1 + 76) = v19;
        if ((unint64_t)v46 < v17 && *v46 == 50)
        {
          *((void *)this + 1) = v46 + 1;
LABEL_83:
          *(_DWORD *)(a1 + 76) = v19 | 0x20;
          uint64_t v47 = *(void *)(a1 + 56);
          if (!v47) {
            operator new();
          }
          unsigned int v57 = 0;
          int v48 = (char *)*((void *)this + 1);
          if ((unint64_t)v48 >= *((void *)this + 2) || *v48 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v57))return 0; {
          }
            }
          else
          {
            unsigned int v57 = *v48;
            *((void *)this + 1) = v48 + 1;
          }
          int v49 = *((_DWORD *)this + 14);
          int v50 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v49 + 1;
          if (v49 >= v50) {
            return 0;
          }
          int v51 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v57);
          if (!sub_10040FFA0(v47, this, v52) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v51);
          int v53 = *((_DWORD *)this + 14);
          BOOL v27 = __OFSUB__(v53, 1);
          int v54 = v53 - 1;
          if (v54 < 0 == v27) {
            *((_DWORD *)this + 14) = v54;
          }
          int v55 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
          if ((unint64_t)v55 < v20 && *v55 == 56)
          {
            unsigned int v21 = v55 + 1;
            *((void *)this + 1) = v21;
LABEL_97:
            if ((unint64_t)v21 >= v20 || *v21 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v8);
              if (!result) {
                return result;
              }
              int v56 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v20 = *((void *)this + 2);
            }
            else
            {
              unint64_t *v8 = *v21;
              int v56 = (unsigned __int8 *)(v21 + 1);
              *((void *)this + 1) = v56;
            }
            *(_DWORD *)(a1 + 76) |= 0x40u;
            if (v56 == (unsigned __int8 *)v20
              && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100410E68(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 76))
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489F10 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  int v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 4) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 40), (unint64_t)a2, a4);
    int v8 = *(_DWORD *)(v5 + 76);
    if ((v8 & 8) == 0)
    {
LABEL_10:
      if ((v8 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_16;
    }
  }
  else if ((v8 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 48), (int)a2, a4);
  int v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x10) == 0)
  {
LABEL_11:
    if ((v8 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 52), a2, a4);
  int v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x20) == 0)
  {
LABEL_12:
    if ((v8 & 0x40) == 0) {
      return result;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v9 = *(void *)(v5 + 56);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489F10 + 56);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 76) & 0x40) != 0)
  {
LABEL_20:
    uint64_t v10 = *(void *)(v5 + 64);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, (unint64_t)a2, a4);
  }
  return result;
}

uint64_t sub_100410FA4(uint64_t a1, unint64_t a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 76);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    goto LABEL_18;
  }
  if ((*(unsigned char *)(a1 + 76) & 1) == 0)
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 76) & 4) == 0) {
      goto LABEL_13;
    }
LABEL_12:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 76);
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_102489F10 + 8);
  }
  uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10040FCD0(v5);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  }
  else {
    int v8 = 1;
  }
  int v4 = v7 + v8 + 1;
  int v3 = *(_DWORD *)(a1 + 76);
  if ((v3 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_13:
  if ((v3 & 8) != 0)
  {
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 76);
    }
    else
    {
      int v17 = 2;
    }
    v4 += v17;
    if ((v3 & 0x10) == 0)
    {
LABEL_15:
      if ((v3 & 0x20) == 0) {
        goto LABEL_16;
      }
      goto LABEL_35;
    }
  }
  else if ((v3 & 0x10) == 0)
  {
    goto LABEL_15;
  }
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
  if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 76);
  }
  else
  {
    int v19 = 2;
  }
  v4 += v19;
  if ((v3 & 0x20) == 0)
  {
LABEL_16:
    if ((v3 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_35:
  uint64_t v20 = *(void *)(a1 + 56);
  if (!v20) {
    uint64_t v20 = *(void *)(qword_102489F10 + 56);
  }
  int v21 = 2 * (*(_DWORD *)(v20 + 16) & 1);
  if ((*(_DWORD *)(v20 + 16) & 2) != 0) {
    v21 += 2;
  }
  if (*(_DWORD *)(v20 + 16)) {
    int v22 = v21;
  }
  else {
    int v22 = 0;
  }
  *(_DWORD *)(v20 + 12) = v22;
  v4 += v22 + 2;
  if ((*(_DWORD *)(a1 + 76) & 0x40) != 0) {
LABEL_17:
  }
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 64), a2)+ 1;
LABEL_18:
  int v9 = *(_DWORD *)(a1 + 24);
  uint64_t v10 = (v9 + v4);
  if (v9 >= 1)
  {
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10040F31C(*(void *)(*(void *)(a1 + 16) + 8 * v11), a2);
      int v13 = (int)v12;
      if (v12 >= 0x80) {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
      }
      else {
        int v14 = 1;
      }
      uint64_t v10 = (v13 + v10 + v14);
      ++v11;
    }
    while (v11 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 72) = v10;
  return v10;
}

void sub_100411164(uint64_t a1, void *lpsrc)
{
  sub_10041028C(a1, (uint64_t)lpsrc);
}

uint64_t sub_1004111EC()
{
  return 1;
}

void *sub_1004111F4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavanna");
}

void sub_100411204(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a2 + 16) + 8 * v4);
      int v6 = *(_DWORD *)(a1 + 28);
      uint64_t v7 = *(int *)(a1 + 24);
      if ((int)v7 >= v6)
      {
        if (v6 == *(_DWORD *)(a1 + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v6 + 1);
          int v6 = *(_DWORD *)(a1 + 28);
        }
        *(_DWORD *)(a1 + 28) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)(a1 + 16);
      *(_DWORD *)(a1 + 24) = v7 + 1;
      sub_10041028C(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 24));
  }
  LOBYTE(v9) = *(unsigned char *)(a2 + 48);
  if ((_BYTE)v9)
  {
    if (*(unsigned char *)(a2 + 48))
    {
      *(_DWORD *)(a1 + 48) |= 1u;
      uint64_t v10 = *(void *)(a1 + 8);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = *(void *)(a2 + 8);
      if (!v11) {
        uint64_t v11 = *(void *)(qword_102489F20 + 8);
      }
      sub_1003DE314(v10, v11);
      int v9 = *(_DWORD *)(a2 + 48);
    }
    if ((v9 & 4) != 0)
    {
      char v12 = *(unsigned char *)(a2 + 40);
      *(_DWORD *)(a1 + 48) |= 4u;
      *(unsigned char *)(a1 + 40) = v12;
    }
  }
}

void sub_10041140C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100411424(uint64_t *a1)
{
  *a1 = (uint64_t)off_1022B0ED0;
  if ((uint64_t *)qword_102489F20 != a1)
  {
    uint64_t v2 = a1[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  sub_10016B2E8(a1 + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)a1);
}

void sub_1004114C0(uint64_t *a1)
{
  sub_100411424(a1);

  operator delete();
}

uint64_t sub_1004114F8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489F20;
  if (!qword_102489F20)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489F20;
  }
  return result;
}

void sub_100411528()
{
}

uint64_t sub_100411580(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    if (*(unsigned char *)(a1 + 48))
    {
      uint64_t v2 = *(void *)(a1 + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
      }
    }
    *(unsigned char *)(a1 + 40) = 0;
  }
  uint64_t result = sub_10026DEDC(a1 + 16);
  *(_DWORD *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_1004115D8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16);
  while (1)
  {
    while (1)
    {
LABEL_2:
      int v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v8 = TagFallback >> 3;
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_21;
      }
      *(_DWORD *)(a1 + 48) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      if (!v12) {
        operator new();
      }
      unsigned int v38 = 0;
      int v13 = (char *)*((void *)this + 1);
      if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0; {
      }
        }
      else
      {
        unsigned int v38 = *v13;
        *((void *)this + 1) = v13 + 1;
      }
      int v14 = *((_DWORD *)this + 14);
      int v15 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v14 + 1;
      if (v14 >= v15) {
        return 0;
      }
      int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
      if (!sub_1003DE4BC(v12, this, v17) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
      int v18 = *((_DWORD *)this + 14);
      BOOL v19 = __OFSUB__(v18, 1);
      int v20 = v18 - 1;
      if (v20 < 0 == v19) {
        *((_DWORD *)this + 14) = v20;
      }
      int v21 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v21 < *((void *)this + 2) && *v21 == 18)
      {
        while (1)
        {
          *((void *)this + 1) = v21 + 1;
LABEL_33:
          int v22 = *(_DWORD *)(a1 + 28);
          uint64_t v23 = *(int *)(a1 + 24);
          if ((int)v23 >= v22)
          {
            if (v22 == *(_DWORD *)(a1 + 32))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v22 + 1);
              int v22 = *(_DWORD *)(a1 + 28);
            }
            *(_DWORD *)(a1 + 28) = v22 + 1;
            operator new();
          }
          uint64_t v24 = *(void *)(a1 + 16);
          *(_DWORD *)(a1 + 24) = v23 + 1;
          uint64_t v25 = *(void *)(v24 + 8 * v23);
          unsigned int v39 = 0;
          int v26 = (char *)*((void *)this + 1);
          if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39))return 0; {
          }
            }
          else
          {
            unsigned int v39 = *v26;
            *((void *)this + 1) = v26 + 1;
          }
          int v27 = *((_DWORD *)this + 14);
          int v28 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v27 + 1;
          if (v27 >= v28) {
            return 0;
          }
          int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v39);
          if (!sub_1004107C4(v25, this, v30) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
          int v31 = *((_DWORD *)this + 14);
          BOOL v19 = __OFSUB__(v31, 1);
          int v32 = v31 - 1;
          if (v32 < 0 == v19) {
            *((_DWORD *)this + 14) = v32;
          }
          int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v21 >= v10) {
            break;
          }
          int v33 = *v21;
          if (v33 != 18)
          {
            if (v33 == 24)
            {
              uint64_t v11 = v21 + 1;
              *((void *)this + 1) = v11;
LABEL_51:
              unsigned int v37 = 0;
              if ((unint64_t)v11 >= v10 || *v11 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37);
                if (!result) {
                  return result;
                }
                unsigned int v34 = v37;
                int v35 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v10 = *((void *)this + 2);
              }
              else
              {
                unsigned int v34 = *v11;
                int v35 = (unsigned __int8 *)(v11 + 1);
                *((void *)this + 1) = v35;
              }
              *(unsigned char *)(a1 + 40) = v34 != 0;
              *(_DWORD *)(a1 + 48) |= 4u;
              if (v35 == (unsigned __int8 *)v10
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
            goto LABEL_2;
          }
        }
      }
    }
    if (v8 == 2)
    {
      int v9 = TagFallback & 7;
      if (v9 != 2) {
        goto LABEL_21;
      }
      goto LABEL_33;
    }
    if (v8 == 3)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        goto LABEL_51;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_21:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1004119C4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 48))
  {
    uint64_t v6 = *(void *)(result + 8);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_102489F20 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  if ((*(unsigned char *)(v5 + 48) & 4) != 0)
  {
    int v8 = *(unsigned __int8 *)(v5 + 40);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, (BOOL)a2, a4);
  }
  return result;
}

uint64_t sub_100411A80(uint64_t a1, unint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 48);
  if (*(unsigned char *)(a1 + 48))
  {
    if (v3)
    {
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        uint64_t v5 = *(void *)(qword_102489F20 + 8);
      }
      int v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(unsigned char *)(v5 + 36))
      {
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          int v6 = v7 + 9;
        }
        else {
          int v6 = v7;
        }
      }
      *(_DWORD *)(v5 + 32) = v6;
      int v4 = v6 + 2;
      int v3 = *(_DWORD *)(a1 + 48);
    }
    else
    {
      int v4 = 0;
    }
    if ((v3 & 4) != 0) {
      int v3 = v4 + 2;
    }
    else {
      int v3 = v4;
    }
  }
  int v8 = *(_DWORD *)(a1 + 24);
  uint64_t v9 = (v8 + v3);
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100410FA4(*(void *)(*(void *)(a1 + 16) + 8 * v10), a2);
      int v12 = (int)v11;
      if (v11 >= 0x80) {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      }
      else {
        int v13 = 1;
      }
      uint64_t v9 = (v12 + v9 + v13);
      ++v10;
    }
    while (v10 < *(int *)(a1 + 24));
  }
  *(_DWORD *)(a1 + 44) = v9;
  return v9;
}

void sub_100411B70(uint64_t a1, void *lpsrc)
{
  sub_100411204(a1, (uint64_t)lpsrc);
}

uint64_t sub_100411BF8()
{
  return 1;
}

void *sub_100411C00@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.GEOMapTropicalSavannaData");
}

void sub_100411C10(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 20);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 20))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 8);
      if (v5 >= 4) {
        sub_101A5F470();
      }
      a1[5] |= 1u;
      a1[2] = v5;
      int v4 = *(_DWORD *)(a2 + 20);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 12);
      if (v6 >= 4) {
        sub_101A5F444();
      }
      a1[5] |= 2u;
      a1[3] = v6;
    }
  }
}

void sub_100411CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100411CEC(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0F48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100411D0C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B0F48;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100411D60()
{
}

uint64_t sub_100411DAC(uint64_t result)
{
  if (*(unsigned char *)(result + 20)) {
    *(void *)(result + 8) = 0;
  }
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_100411DC0(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    while (1)
    {
      unsigned int v5 = (char *)*((void *)this + 1);
      if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v16 = 0;
      uint64_t v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
        if (!result) {
          return result;
        }
        unsigned int v11 = v16;
      }
      else
      {
        unsigned int v11 = *v10;
        *((void *)this + 1) = v10 + 1;
      }
      if (v11 <= 3)
      {
        a1[5] |= 1u;
        a1[2] = v11;
      }
      int v12 = (unsigned char *)*((void *)this + 1);
      unint64_t v8 = *((void *)this + 2);
      if ((unint64_t)v12 < v8 && *v12 == 16)
      {
        uint64_t v9 = v12 + 1;
        *((void *)this + 1) = v9;
LABEL_25:
        unsigned int v15 = 0;
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
          if (!result) {
            return result;
          }
          unsigned int v13 = v15;
        }
        else
        {
          unsigned int v13 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        if (v13 <= 3)
        {
          a1[5] |= 2u;
          a1[3] = v13;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v9 = (char *)*((void *)this + 1);
        unint64_t v8 = *((void *)this + 2);
        goto LABEL_25;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_15:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100411F78(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 20);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    int v7 = *(_DWORD *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  return result;
}

uint64_t sub_100411FE4(uint64_t a1, unsigned int a2)
{
  char v3 = *(unsigned char *)(a1 + 20);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        if ((*(_DWORD *)(a1 + 20) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
        goto LABEL_19;
      }
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    }
    else
    {
      int v7 = 2;
    }
    uint64_t v4 = (v7 + v4);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  *(_DWORD *)(a1 + 16) = v4;
  return v4;
}

void sub_100412090(_DWORD *a1, void *lpsrc)
{
  sub_100411C10(a1, (uint64_t)lpsrc);
}

uint64_t sub_100412118()
{
  return 1;
}

void *sub_100412120@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.WatchOrientation");
}

void sub_100412130(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      *(_DWORD *)(a1 + 36) |= 1u;
      uint64_t v5 = *(void *)(a1 + 8);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 8);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489F30 + 8);
      }
      sub_1003DE314(v5, v6);
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v7 = *(_DWORD *)(a2 + 16);
      if (v7 >= 4) {
        sub_101A5F4F4();
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_DWORD *)(a1 + 16) = v7;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 4) != 0)
    {
      unsigned int v8 = *(_DWORD *)(a2 + 20);
      if (v8 >= 4) {
        sub_101A5F4C8();
      }
      *(_DWORD *)(a1 + 36) |= 4u;
      *(_DWORD *)(a1 + 20) = v8;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 8) != 0)
    {
      unsigned int v9 = *(_DWORD *)(a2 + 24);
      if (v9 >= 4) {
        sub_101A5F49C();
      }
      *(_DWORD *)(a1 + 36) |= 8u;
      *(_DWORD *)(a1 + 24) = v9;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 0x10) != 0)
    {
      char v11 = *(unsigned char *)(a2 + 28);
      *(_DWORD *)(a1 + 36) |= 0x10u;
      *(unsigned char *)(a1 + 28) = v11;
      int v4 = *(_DWORD *)(a2 + 36);
      if ((v4 & 0x20) == 0)
      {
LABEL_21:
        if ((v4 & 0x40) == 0) {
          return;
        }
        goto LABEL_22;
      }
    }
    else if ((v4 & 0x20) == 0)
    {
      goto LABEL_21;
    }
    char v12 = *(unsigned char *)(a2 + 29);
    *(_DWORD *)(a1 + 36) |= 0x20u;
    *(unsigned char *)(a1 + 29) = v12;
    if ((*(_DWORD *)(a2 + 36) & 0x40) != 0)
    {
LABEL_22:
      char v10 = *(unsigned char *)(a2 + 30);
      *(_DWORD *)(a1 + 36) |= 0x40u;
      *(unsigned char *)(a1 + 30) = v10;
    }
  }
}

void sub_1004122F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10041230C(wireless_diagnostics::google::protobuf::MessageLite *this)
{
  *(void *)this = &off_1022B0FC0;
  if ((wireless_diagnostics::google::protobuf::MessageLite *)qword_102489F30 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

void sub_10041239C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  sub_10041230C(a1);

  operator delete();
}

void sub_1004123D4()
{
}

uint64_t sub_100412428(uint64_t result)
{
  if (*(unsigned char *)(result + 36))
  {
    if (*(unsigned char *)(result + 36))
    {
      uint64_t v1 = *(void *)(result + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(result + 23) = 0;
    *(void *)(result + 16) = 0;
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_100412460(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_25;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v41 = 0;
        unsigned int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41))return 0; {
        }
          }
        else
        {
          unsigned int v41 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        if (!sub_1003DE4BC(v8, this, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)this + 14) = v26;
        }
        int v27 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v27 >= v10 || *v27 != 16) {
          continue;
        }
        char v11 = v27 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_38;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        char v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_38:
        unsigned int v41 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!result) {
            return result;
          }
          unsigned int v28 = v41;
        }
        else
        {
          unsigned int v28 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v28 <= 3)
        {
          *(_DWORD *)(a1 + 36) |= 2u;
          *(_DWORD *)(a1 + 16) = v28;
        }
        unsigned int v30 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v30 >= v12 || *v30 != 24) {
          continue;
        }
        unsigned int v13 = v30 + 1;
        *((void *)this + 1) = v13;
LABEL_48:
        unsigned int v41 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!result) {
            return result;
          }
          unsigned int v31 = v41;
        }
        else
        {
          unsigned int v31 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        if (v31 <= 3)
        {
          *(_DWORD *)(a1 + 36) |= 4u;
          *(_DWORD *)(a1 + 20) = v31;
        }
        int v32 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v32 >= v14 || *v32 != 32) {
          continue;
        }
        unsigned int v15 = v32 + 1;
        *((void *)this + 1) = v15;
LABEL_58:
        unsigned int v41 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!result) {
            return result;
          }
          unsigned int v33 = v41;
        }
        else
        {
          unsigned int v33 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        if (v33 <= 3)
        {
          *(_DWORD *)(a1 + 36) |= 8u;
          *(_DWORD *)(a1 + 24) = v33;
        }
        unsigned int v34 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v34 >= v16 || *v34 != 40) {
          continue;
        }
        unsigned int v17 = v34 + 1;
        *((void *)this + 1) = v17;
LABEL_68:
        unsigned int v41 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!result) {
            return result;
          }
          unsigned int v35 = v41;
          int v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v35 = *v17;
          int v36 = v17 + 1;
          *((void *)this + 1) = v36;
        }
        *(unsigned char *)(a1 + 28) = v35 != 0;
        *(_DWORD *)(a1 + 36) |= 0x10u;
        if ((unint64_t)v36 >= v16 || *v36 != 48) {
          continue;
        }
        int v18 = v36 + 1;
        *((void *)this + 1) = v18;
LABEL_76:
        unsigned int v41 = 0;
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!result) {
            return result;
          }
          unsigned int v37 = v41;
          unsigned int v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v37 = *v18;
          unsigned int v38 = v18 + 1;
          *((void *)this + 1) = v38;
        }
        *(unsigned char *)(a1 + 29) = v37 != 0;
        *(_DWORD *)(a1 + 36) |= 0x20u;
        if ((unint64_t)v38 >= v16 || *v38 != 56) {
          continue;
        }
        BOOL v19 = v38 + 1;
        *((void *)this + 1) = v19;
LABEL_84:
        unsigned int v41 = 0;
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!result) {
            return result;
          }
          unsigned int v39 = v41;
          int v40 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v39 = *v19;
          int v40 = (unsigned __int8 *)(v19 + 1);
          *((void *)this + 1) = v40;
        }
        *(unsigned char *)(a1 + 30) = v39 != 0;
        *(_DWORD *)(a1 + 36) |= 0x40u;
        if (v40 != (unsigned __int8 *)v16 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_48;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_58;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_68;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_76;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        BOOL v19 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_84;
      default:
        int v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_10041297C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489F30 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 16), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 20), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 24), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 29), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 36) & 0x40) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 28), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return result;
  }
LABEL_17:
  int v8 = *(unsigned __int8 *)(v5 + 30);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v8, (BOOL)a2, a4);
}

uint64_t sub_100412A88(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_43;
  }
  if ((*(unsigned char *)(a1 + 36) & 1) == 0)
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_102489F30 + 8);
  }
  int v7 = *(unsigned __int8 *)(v6 + 36);
  if (*(unsigned char *)(v6 + 36))
  {
    int v8 = (v7 << 31 >> 31) & 9;
    if ((v7 & 2) != 0) {
      v8 += 9;
    }
    if ((v7 & 4) != 0) {
      int v7 = v8 + 9;
    }
    else {
      int v7 = v8;
    }
  }
  *(_DWORD *)(v6 + 32) = v7;
  int v4 = v7 + 2;
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 11;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v10 = 2;
    }
    v4 += v10;
  }
LABEL_21:
  if ((v3 & 4) != 0)
  {
    char v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v12 = 2;
    }
    v4 += v12;
    if ((v3 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  if ((v3 & 8) != 0)
  {
LABEL_30:
    unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if ((v13 & 0x80000000) != 0)
    {
      int v14 = 11;
    }
    else if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v14 = 2;
    }
    v4 += v14;
  }
LABEL_36:
  unsigned int v15 = v4 + 2;
  if ((v3 & 0x10) == 0) {
    unsigned int v15 = v4;
  }
  if ((v3 & 0x20) != 0) {
    v15 += 2;
  }
  if ((v3 & 0x40) != 0) {
    uint64_t result = v15 + 2;
  }
  else {
    uint64_t result = v15;
  }
LABEL_43:
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

void sub_100412BE0(uint64_t a1, void *lpsrc)
{
  sub_100412130(a1, (uint64_t)lpsrc);
}

uint64_t sub_100412C68()
{
  return 1;
}

void *sub_100412C70@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.WristState");
}

void sub_100412C80(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v4) {
    return;
  }
  if ((*(unsigned char *)(a2 + 40) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    int v7 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 32) = v7;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  *(_DWORD *)(a1 + 40) |= 1u;
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    operator new();
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_102489F38 + 8);
  }
  sub_1003DE314(v5, v6);
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v4 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_15:
  *(_DWORD *)(a1 + 40) |= 4u;
  int v8 = *(_DWORD **)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489F38 + 16);
  }
  sub_100411C10(v8, v9);
  if ((*(_DWORD *)(a2 + 40) & 8) != 0)
  {
LABEL_20:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v10 = *(void *)(a1 + 24);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 24);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_102489F38 + 24);
    }
    sub_100412130(v10, v11);
  }
}

void sub_100412E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100412E98(void *result)
{
  if ((void *)qword_102489F38 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t result = (void *)v1[3];
    if (result)
    {
      int v4 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v4();
    }
  }
  return result;
}

void sub_100412F64(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B1038;
  sub_100412E98(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100412FB8(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B1038;
  sub_100412E98(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_100413020(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489F38;
  if (!qword_102489F38)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489F38;
  }
  return result;
}

void sub_100413050()
{
}

uint64_t sub_1004130A8(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 40);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 40))
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 40);
      }
    }
    *(_DWORD *)(result + 32) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v4 = *(void *)(result + 16);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 20)) {
          *(void *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 20) = 0;
        int v2 = *(_DWORD *)(result + 40);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t result = *(void *)(result + 24);
      if (result) {
        uint64_t result = sub_100412428(result);
      }
    }
  }
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_10041312C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        unsigned int v41 = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41))return 0; {
        }
          }
        else
        {
          unsigned int v41 = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v13 = *((_DWORD *)this + 14);
        int v14 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        if (!sub_1003DE4BC(v8, this, v16) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        int v20 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v20 >= v10 || *v20 != 16) {
          continue;
        }
        uint64_t v11 = v20 + 1;
        *((void *)this + 1) = v11;
        goto LABEL_31;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_31:
        unsigned int v41 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41);
          if (!result) {
            return result;
          }
          unsigned int v21 = v41;
          int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v11;
          int v22 = v11 + 1;
          *((void *)this + 1) = v22;
        }
        *(_DWORD *)(a1 + 32) = v21;
        int v12 = *(_DWORD *)(a1 + 40) | 2;
        *(_DWORD *)(a1 + 40) = v12;
        if ((unint64_t)v22 >= v10 || *v22 != 26) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_39:
        *(_DWORD *)(a1 + 40) = v12 | 4;
        int v24 = *(_DWORD **)(a1 + 16);
        if (!v24) {
          operator new();
        }
        unsigned int v41 = 0;
        BOOL v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41))return 0; {
        }
          }
        else
        {
          unsigned int v41 = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        if (!sub_100411DC0(v24, this, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v30 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v18) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 34) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
LABEL_53:
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v33 = *(void *)(a1 + 24);
        if (!v33) {
          operator new();
        }
        unsigned int v41 = 0;
        unsigned int v34 = (char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41))return 0; {
        }
          }
        else
        {
          unsigned int v41 = *v34;
          *((void *)this + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        if (!sub_100412460(v33, this, v38) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v39 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v18) {
          *((_DWORD *)this + 14) = v40;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        int v12 = *(_DWORD *)(a1 + 40);
        goto LABEL_39;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_19;
        }
        goto LABEL_53;
      default:
        int v7 = TagFallback & 7;
LABEL_19:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1004135E8(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489F38 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 32), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489F38 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 8) != 0)
  {
LABEL_13:
    uint64_t v9 = *(void *)(v5 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489F38 + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  }
  return result;
}

uint64_t sub_1004136C0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_36;
  }
  if ((*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_102489F38 + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  uint64_t v4 = (v6 + 2);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 40);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v4 = (v9 + v4);
  }
LABEL_21:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_102489F38 + 16);
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100411FE4(v10, a2);
  int v12 = (int)v11;
  if (v11 >= 0x80) {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
  }
  else {
    int v13 = 1;
  }
  uint64_t v4 = (v4 + v12 + v13 + 1);
  if ((*(_DWORD *)(a1 + 40) & 8) != 0)
  {
LABEL_30:
    uint64_t v14 = *(void *)(a1 + 24);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_102489F38 + 24);
    }
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100412A88(v14, a2);
    int v17 = (int)v15;
    if (v15 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, v16);
    }
    else {
      int v18 = 1;
    }
    uint64_t v4 = (v4 + v17 + v18 + 1);
  }
LABEL_36:
  *(_DWORD *)(a1 + 36) = v4;
  return v4;
}

void sub_100413824(uint64_t a1, void *lpsrc)
{
  sub_100412C80(a1, (uint64_t)lpsrc);
}

uint64_t sub_1004138AC()
{
  return 1;
}

void *sub_1004138B4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.WatchState");
}

void sub_1004138C4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      unsigned int v5 = *(_DWORD *)(a2 + 8);
      if (v5 >= 5) {
        sub_101A5F54C();
      }
      *(_DWORD *)(a1 + 36) |= 1u;
      *(_DWORD *)(a1 + 8) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *(_DWORD *)(a2 + 12);
      if (v6 >= 3) {
        sub_101A5F520();
      }
      *(_DWORD *)(a1 + 36) |= 2u;
      *(_DWORD *)(a1 + 12) = v6;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 4) != 0)
    {
      int v7 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 4u;
      uint64_t v8 = *(std::string **)(a1 + 16);
      if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v8, v7);
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 8) != 0)
    {
      int v9 = *(const std::string **)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 8u;
      uint64_t v10 = *(std::string **)(a1 + 24);
      if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v10, v9);
    }
  }
}

void sub_100413A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100413A50(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v3 = *(void *)(result + 24);
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  return result;
}

void sub_100413B0C(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B10B0;
  sub_100413A50((uint64_t)a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100413B60(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B10B0;
  sub_100413A50((uint64_t)a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_100413BC8()
{
}

uint64_t sub_100413C28(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 36);
  if (v1)
  {
    *(void *)(result + 8) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(result + 16);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(result + 36) & 8) != 0)
    {
      uint64_t v3 = *(void *)(result + 24);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(result + 36) = 0;
  return result;
}

uint64_t sub_100413CA8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    unsigned int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v18 = 0;
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
        {
          unsigned int v9 = *v8;
          *((void *)this + 1) = v8 + 1;
          goto LABEL_22;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v18);
        if (result)
        {
          unsigned int v9 = v18;
LABEL_22:
          if (v9 <= 4)
          {
            *(_DWORD *)(a1 + 36) |= 1u;
            *(_DWORD *)(a1 + 8) = v9;
          }
          int v12 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            uint64_t v11 = v12 + 1;
            *((void *)this + 1) = v11;
            goto LABEL_27;
          }
          continue;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_27:
        unsigned int v17 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
          if (!result) {
            return result;
          }
          unsigned int v13 = v17;
        }
        else
        {
          unsigned int v13 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v13 <= 2)
        {
          *(_DWORD *)(a1 + 36) |= 2u;
          *(_DWORD *)(a1 + 12) = v13;
        }
        uint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 26) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_37:
        *(_DWORD *)(a1 + 36) |= 4u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 34) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_43:
        *(_DWORD *)(a1 + 36) |= 8u;
        if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_37;
        }
        goto LABEL_17;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_17;
        }
        goto LABEL_43;
      default:
        int v7 = TagFallback & 7;
LABEL_17:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_100413F94(uint64_t result, int a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 8), a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      if ((*(_DWORD *)(v5 + 36) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 12), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return result;
  }
LABEL_9:

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
}

uint64_t sub_10041403C(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    goto LABEL_40;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 8);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v5 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 36);
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 12);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v7 = 2;
  }
  uint64_t v4 = (v7 + v4);
LABEL_19:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_40;
    }
    goto LABEL_31;
  }
  uint64_t v8 = *(void *)(a1 + 16);
  int v9 = *(unsigned __int8 *)(v8 + 23);
  char v10 = v9;
  uint64_t v11 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    unint64_t v12 = *(unsigned __int8 *)(v8 + 23);
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12, a2);
    int v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v11 = *(void *)(v8 + 8);
    int v3 = *(_DWORD *)(a1 + 36);
    char v10 = *(unsigned char *)(v8 + 23);
  }
  else
  {
    int v13 = 1;
  }
  if (v10 < 0) {
    int v9 = v11;
  }
  uint64_t v4 = (v4 + v13 + v9 + 1);
  if ((v3 & 8) != 0)
  {
LABEL_31:
    uint64_t v14 = *(void *)(a1 + 24);
    int v15 = *(unsigned __int8 *)(v14 + 23);
    char v16 = v15;
    uint64_t v17 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      unint64_t v18 = *(unsigned __int8 *)(v14 + 23);
    }
    else {
      unint64_t v18 = v17;
    }
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18, a2);
      int v15 = *(unsigned __int8 *)(v14 + 23);
      uint64_t v17 = *(void *)(v14 + 8);
      char v16 = *(unsigned char *)(v14 + 23);
    }
    else
    {
      int v19 = 1;
    }
    if (v16 < 0) {
      int v15 = v17;
    }
    uint64_t v4 = (v4 + v19 + v15 + 1);
  }
LABEL_40:
  *(_DWORD *)(a1 + 32) = v4;
  return v4;
}

void sub_1004141A8(uint64_t a1, void *lpsrc)
{
  sub_1004138C4(a1, (uint64_t)lpsrc);
}

uint64_t sub_100414230()
{
  return 1;
}

void *sub_100414238@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.PlaceInference");
}

double sub_100414248(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 68);
  if (!(_BYTE)v5) {
    return result;
  }
  if (*(unsigned char *)(a2 + 68))
  {
    *(_DWORD *)(a1 + 68) |= 1u;
    uint64_t v6 = *(void *)(a1 + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489F48 + 8);
    }
    double result = sub_1003DE314(v6, v7);
    int v5 = *(_DWORD *)(a2 + 68);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((*(unsigned char *)(a2 + 68) & 2) == 0)
  {
    goto LABEL_6;
  }
  *(_DWORD *)(a1 + 68) |= 2u;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489F48 + 16);
  }
  double result = sub_1003DE314(v8, v9);
  int v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_23:
  *(_DWORD *)(a1 + 68) |= 4u;
  uint64_t v10 = *(void *)(a1 + 24);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = *(void *)(a2 + 24);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_102489F48 + 24);
  }
  double result = sub_1003DE314(v10, v11);
  int v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_33:
    *(_DWORD *)(a1 + 68) |= 0x10u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14) {
      operator new();
    }
    uint64_t v15 = *(void *)(a2 + 40);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_102489F48 + 40);
    }
    sub_1004138C4(v14, v15);
    int v5 = *(_DWORD *)(a2 + 68);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0) {
        return result;
      }
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_28:
  *(_DWORD *)(a1 + 68) |= 8u;
  uint64_t v12 = *(void *)(a1 + 32);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = *(void *)(a2 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_102489F48 + 32);
  }
  double result = sub_1003DE314(v12, v13);
  int v5 = *(_DWORD *)(a2 + 68);
  if ((v5 & 0x10) != 0) {
    goto LABEL_33;
  }
LABEL_9:
  if ((v5 & 0x20) == 0) {
    goto LABEL_10;
  }
LABEL_38:
  *(_DWORD *)(a1 + 68) |= 0x20u;
  uint64_t v16 = *(void *)(a1 + 48);
  if (!v16) {
    operator new();
  }
  uint64_t v17 = *(void *)(a2 + 48);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_102489F48 + 48);
  }
  double result = sub_1003E1860(v16, v17);
  if ((*(_DWORD *)(a2 + 68) & 0x40) != 0)
  {
LABEL_11:
    double result = *(double *)(a2 + 56);
    *(_DWORD *)(a1 + 68) |= 0x40u;
    *(double *)(a1 + 56) = result;
  }
  return result;
}

void sub_1004145C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1004145E0(void *result)
{
  if ((void *)qword_102489F48 != result)
  {
    char v1 = result;
    uint64_t v2 = result[1];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[2];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[5];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    double result = (void *)v1[6];
    if (result)
    {
      uint64_t v7 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v7();
    }
  }
  return result;
}

void sub_100414730(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B1128;
  sub_1004145E0(a1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100414784(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B1128;
  sub_1004145E0(a1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

uint64_t sub_1004147EC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489F48;
  if (!qword_102489F48)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489F48;
  }
  return result;
}

void sub_10041481C()
{
}

uint64_t sub_100414878(uint64_t result)
{
  uint64_t v1 = result;
  LOBYTE(v2) = *(unsigned char *)(result + 68);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(result + 68))
    {
      uint64_t v3 = *(void *)(result + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(result + 68);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *(void *)(result + 16);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        int v2 = *(_DWORD *)(result + 68);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v5 = *(void *)(result + 24);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 36))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
          *(void *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
        int v2 = *(_DWORD *)(result + 68);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v6 = *(void *)(result + 32);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 36))
        {
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
          *(void *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 36) = 0;
        int v2 = *(_DWORD *)(result + 68);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t result = *(void *)(result + 40);
      if (result)
      {
        uint64_t result = sub_100413C28(result);
        int v2 = *(_DWORD *)(v1 + 68);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 48);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 28))
        {
          *(void *)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
        }
        *(_DWORD *)(v7 + 28) = 0;
      }
    }
    *(void *)(v1 + 56) = 0;
  }
  *(_DWORD *)(v1 + 68) = 0;
  return result;
}

uint64_t sub_100414968(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (1)
  {
    uint64_t v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 < *((void *)this + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_25;
        }
        *(_DWORD *)(a1 + 68) |= 1u;
        uint64_t v8 = *(void *)(a1 + 8);
        if (!v8) {
          operator new();
        }
        v64[0] = 0;
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v64))return 0; {
        }
          }
        else
        {
          v64[0] = *v9;
          *((void *)this + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)this + 14);
        int v11 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64[0]);
        if (!sub_1003DE4BC(v8, this, v13) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v12);
        int v14 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)this + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 18) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        goto LABEL_37;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_25;
        }
LABEL_37:
        *(_DWORD *)(a1 + 68) |= 2u;
        uint64_t v18 = *(void *)(a1 + 16);
        if (!v18) {
          operator new();
        }
        v64[0] = 0;
        int v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v64))return 0; {
        }
          }
        else
        {
          v64[0] = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64[0]);
        if (!sub_1003DE4BC(v18, this, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v24 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v15) {
          *((_DWORD *)this + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 26) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
LABEL_51:
        *(_DWORD *)(a1 + 68) |= 4u;
        uint64_t v27 = *(void *)(a1 + 24);
        if (!v27) {
          operator new();
        }
        v64[0] = 0;
        int v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v64))return 0; {
        }
          }
        else
        {
          v64[0] = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64[0]);
        if (!sub_1003DE4BC(v27, this, v32) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v33 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v15) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 34) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_65:
        *(_DWORD *)(a1 + 68) |= 8u;
        uint64_t v36 = *(void *)(a1 + 32);
        if (!v36) {
          operator new();
        }
        v64[0] = 0;
        int v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v64))return 0; {
        }
          }
        else
        {
          v64[0] = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64[0]);
        if (!sub_1003DE4BC(v36, this, v41) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v42 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v15) {
          *((_DWORD *)this + 14) = v43;
        }
        unsigned int v44 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 != 42) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
LABEL_79:
        *(_DWORD *)(a1 + 68) |= 0x10u;
        uint64_t v45 = *(void *)(a1 + 40);
        if (!v45) {
          operator new();
        }
        v64[0] = 0;
        int v46 = (char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v64))return 0; {
        }
          }
        else
        {
          v64[0] = *v46;
          *((void *)this + 1) = v46 + 1;
        }
        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64[0]);
        if (!sub_100413CA8(v45, this, v50) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v51 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v51, 1);
        int v52 = v51 - 1;
        if (v52 < 0 == v15) {
          *((_DWORD *)this + 14) = v52;
        }
        int v53 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v53 >= *((void *)this + 2) || *v53 != 50) {
          continue;
        }
        *((void *)this + 1) = v53 + 1;
LABEL_93:
        *(_DWORD *)(a1 + 68) |= 0x20u;
        uint64_t v54 = *(void *)(a1 + 48);
        if (!v54) {
          operator new();
        }
        v64[0] = 0;
        int v55 = (char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v64))return 0; {
        }
          }
        else
        {
          v64[0] = *v55;
          *((void *)this + 1) = v55 + 1;
        }
        int v56 = *((_DWORD *)this + 14);
        int v57 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v56 + 1;
        if (v56 >= v57) {
          return 0;
        }
        int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v64[0]);
        if (!sub_1003E19A4(v54, this, v59) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
        int v60 = *((_DWORD *)this + 14);
        BOOL v15 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v15) {
          *((_DWORD *)this + 14) = v61;
        }
        unsigned int v62 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v62 >= *((void *)this + 2) || *v62 != 57) {
          continue;
        }
        *((void *)this + 1) = v62 + 1;
LABEL_107:
        *(void *)unsigned int v64 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v64) & 1) == 0)return 0; {
        *(void *)(a1 + 56) = *(void *)v64;
        }
        *(_DWORD *)(a1 + 68) |= 0x40u;
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_51;
        }
        goto LABEL_25;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_65;
        }
        goto LABEL_25;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_79;
        }
        goto LABEL_25;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_93;
        }
        goto LABEL_25;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_25;
        }
        goto LABEL_107;
      default:
        int v7 = TagFallback & 7;
LABEL_25:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100415184(uint64_t result, wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 68);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 8);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_102489F48 + 8);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8) {
    uint64_t v8 = *(void *)(qword_102489F48 + 16);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_102489F48 + 24);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_102489F48 + 32);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11) {
    uint64_t v11 = *(void *)(qword_102489F48 + 40);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_24:
  uint64_t v12 = *(void *)(v5 + 48);
  if (!v12) {
    uint64_t v12 = *(void *)(qword_102489F48 + 48);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v12, a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 0x40) != 0)
  {
LABEL_27:
    double v13 = *(double *)(v5 + 56);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, v13, a3);
  }
  return result;
}

uint64_t sub_1004152E0(uint64_t a1, unsigned int a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 68);
  if (!(_BYTE)v3)
  {
    uint64_t result = 0;
    goto LABEL_63;
  }
  if ((*(unsigned char *)(a1 + 68) & 1) == 0)
  {
    unsigned int v4 = 0;
    if ((*(unsigned char *)(a1 + 68) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_102489F48 + 8);
  }
  int v7 = *(unsigned __int8 *)(v6 + 36);
  if (*(unsigned char *)(v6 + 36))
  {
    int v8 = (v7 << 31 >> 31) & 9;
    if ((v7 & 2) != 0) {
      v8 += 9;
    }
    if ((v7 & 4) != 0) {
      int v7 = v8 + 9;
    }
    else {
      int v7 = v8;
    }
  }
  *(_DWORD *)(v6 + 32) = v7;
  unsigned int v4 = v7 + 2;
  int v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 2) != 0)
  {
LABEL_15:
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_102489F48 + 16);
    }
    int v10 = *(unsigned __int8 *)(v9 + 36);
    if (*(unsigned char *)(v9 + 36))
    {
      int v11 = (v10 << 31 >> 31) & 9;
      if ((v10 & 2) != 0) {
        v11 += 9;
      }
      if ((v10 & 4) != 0) {
        int v10 = v11 + 9;
      }
      else {
        int v10 = v11;
      }
    }
    *(_DWORD *)(v9 + 32) = v10;
    v4 += v10 + 2;
    int v3 = *(_DWORD *)(a1 + 68);
  }
LABEL_24:
  if ((v3 & 4) != 0)
  {
    uint64_t v12 = *(void *)(a1 + 24);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_102489F48 + 24);
    }
    int v13 = *(unsigned __int8 *)(v12 + 36);
    if (*(unsigned char *)(v12 + 36))
    {
      int v14 = (v13 << 31 >> 31) & 9;
      if ((v13 & 2) != 0) {
        v14 += 9;
      }
      if ((v13 & 4) != 0) {
        int v13 = v14 + 9;
      }
      else {
        int v13 = v14;
      }
    }
    *(_DWORD *)(v12 + 32) = v13;
    v4 += v13 + 2;
    int v3 = *(_DWORD *)(a1 + 68);
    if ((v3 & 8) == 0)
    {
LABEL_26:
      if ((v3 & 0x10) == 0) {
        goto LABEL_27;
      }
LABEL_47:
      uint64_t v18 = *(void *)(a1 + 40);
      if (!v18) {
        uint64_t v18 = *(void *)(qword_102489F48 + 40);
      }
      int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10041403C(v18, a2);
      int v21 = (int)v19;
      if (v19 >= 0x80) {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, v20);
      }
      else {
        int v22 = 1;
      }
      v4 += v21 + v22 + 1;
      int v3 = *(_DWORD *)(a1 + 68);
      if ((v3 & 0x20) == 0) {
        goto LABEL_60;
      }
      goto LABEL_53;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_26;
  }
  uint64_t v15 = *(void *)(a1 + 32);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_102489F48 + 32);
  }
  int v16 = *(unsigned __int8 *)(v15 + 36);
  if (*(unsigned char *)(v15 + 36))
  {
    int v17 = (v16 << 31 >> 31) & 9;
    if ((v16 & 2) != 0) {
      v17 += 9;
    }
    if ((v16 & 4) != 0) {
      int v16 = v17 + 9;
    }
    else {
      int v16 = v17;
    }
  }
  *(_DWORD *)(v15 + 32) = v16;
  v4 += v16 + 2;
  int v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 0x10) != 0) {
    goto LABEL_47;
  }
LABEL_27:
  if ((v3 & 0x20) != 0)
  {
LABEL_53:
    uint64_t v23 = *(void *)(a1 + 48);
    if (!v23) {
      uint64_t v23 = *(void *)(qword_102489F48 + 48);
    }
    int v24 = *(unsigned __int8 *)(v23 + 28);
    if (*(unsigned char *)(v23 + 28))
    {
      if ((v24 & 2) != 0) {
        int v24 = ((v24 << 31 >> 31) & 9) + 9;
      }
      else {
        int v24 = (v24 << 31 >> 31) & 9;
      }
    }
    *(_DWORD *)(v23 + 24) = v24;
    v4 += v24 + 2;
    int v3 = *(_DWORD *)(a1 + 68);
  }
LABEL_60:
  if ((v3 & 0x40) != 0) {
    uint64_t result = v4 + 9;
  }
  else {
    uint64_t result = v4;
  }
LABEL_63:
  *(_DWORD *)(a1 + 64) = result;
  return result;
}

double sub_100415520(uint64_t a1, void *lpsrc)
{
  return sub_100414248(a1, (uint64_t)lpsrc);
}

uint64_t sub_1004155A8()
{
  return 1;
}

void *sub_1004155B0@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.RoutineVisit");
}

float sub_1004155C0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *(unsigned char *)(a2 + 56);
  if ((_BYTE)v5)
  {
    if (*(unsigned char *)(a2 + 56))
    {
      uint64_t v4 = *(void *)(a2 + 8);
      *(_DWORD *)(a1 + 56) |= 1u;
      *(void *)(a1 + 8) = v4;
      int v5 = *(_DWORD *)(a2 + 56);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_20;
      }
    }
    else if ((*(unsigned char *)(a2 + 56) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v4 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 56) |= 2u;
    *(void *)(a1 + 16) = v4;
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_22;
    }
LABEL_20:
    unsigned int v8 = *(_DWORD *)(a2 + 24);
    if (v8 >= 3) {
      sub_101A5F5D0();
    }
    *(_DWORD *)(a1 + 56) |= 4u;
    *(_DWORD *)(a1 + 24) = v8;
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
      {
LABEL_10:
        if ((v5 & 0x20) != 0)
        {
          unsigned int v6 = *(_DWORD *)(a2 + 40);
          if (v6 >= 4) {
            sub_101A5F578();
          }
          *(_DWORD *)(a1 + 56) |= 0x20u;
          *(_DWORD *)(a1 + 40) = v6;
          int v5 = *(_DWORD *)(a2 + 56);
        }
        if ((v5 & 0x40) != 0)
        {
          char v7 = *(unsigned char *)(a2 + 44);
          *(_DWORD *)(a1 + 56) |= 0x40u;
          *(unsigned char *)(a1 + 44) = v7;
          int v5 = *(_DWORD *)(a2 + 56);
        }
        if ((v5 & 0x80) != 0)
        {
          LODWORD(v4) = *(_DWORD *)(a2 + 48);
          *(_DWORD *)(a1 + 56) |= 0x80u;
          *(_DWORD *)(a1 + 48) = v4;
        }
        return *(float *)&v4;
      }
LABEL_9:
      uint64_t v4 = *(void *)(a2 + 32);
      *(_DWORD *)(a1 + 56) |= 0x10u;
      *(void *)(a1 + 32) = v4;
      int v5 = *(_DWORD *)(a2 + 56);
      goto LABEL_10;
    }
LABEL_22:
    unsigned int v9 = *(_DWORD *)(a2 + 28);
    if (v9 >= 4) {
      sub_101A5F5A4();
    }
    *(_DWORD *)(a1 + 56) |= 8u;
    *(_DWORD *)(a1 + 28) = v9;
    int v5 = *(_DWORD *)(a2 + 56);
    if ((v5 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  return *(float *)&v4;
}

void sub_10041574C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100415764(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B11A0;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

uint64_t sub_100415784(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_102489F50;
  if (!qword_102489F50)
  {
    sub_1003DAD90(0, a2, a3, a4);
    return qword_102489F50;
  }
  return result;
}

void sub_1004157B4()
{
}

uint64_t sub_100415814(uint64_t result)
{
  if (*(unsigned char *)(result + 56))
  {
    *(_DWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 37) = 0;
  }
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_100415838(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_32;
        }
        *(void *)int v28 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v28) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v28;
        }
        *(_DWORD *)(a1 + 56) |= 1u;
        unsigned int v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 17) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_32;
        }
LABEL_14:
        *(void *)int v28 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v28) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v28;
        }
        *(_DWORD *)(a1 + 56) |= 2u;
        int v10 = (unsigned char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        if ((unint64_t)v10 >= v9 || *v10 != 24) {
          continue;
        }
        int v11 = v10 + 1;
        *((void *)this + 1) = v11;
LABEL_20:
        v28[0] = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v28);
          if (!result) {
            return result;
          }
          unsigned int v12 = v28[0];
        }
        else
        {
          unsigned int v12 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        if (v12 <= 2)
        {
          *(_DWORD *)(a1 + 56) |= 4u;
          *(_DWORD *)(a1 + 24) = v12;
        }
        unsigned int v20 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v20 >= v13 || *v20 != 32) {
          continue;
        }
        int v14 = v20 + 1;
        *((void *)this + 1) = v14;
LABEL_42:
        v28[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v28);
          if (!result) {
            return result;
          }
          unsigned int v21 = v28[0];
        }
        else
        {
          unsigned int v21 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        if (v21 <= 3)
        {
          *(_DWORD *)(a1 + 56) |= 8u;
          *(_DWORD *)(a1 + 28) = v21;
        }
        int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 41) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_52:
        *(void *)int v28 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v28) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v28;
        }
        *(_DWORD *)(a1 + 56) |= 0x10u;
        uint64_t v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v23 >= v15 || *v23 != 48) {
          continue;
        }
        int v16 = v23 + 1;
        *((void *)this + 1) = v16;
LABEL_56:
        v28[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v28);
          if (!result) {
            return result;
          }
          unsigned int v24 = v28[0];
        }
        else
        {
          unsigned int v24 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        if (v24 <= 3)
        {
          *(_DWORD *)(a1 + 56) |= 0x20u;
          *(_DWORD *)(a1 + 40) = v24;
        }
        int v25 = (unsigned char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v25 >= v17 || *v25 != 56) {
          continue;
        }
        uint64_t v18 = v25 + 1;
        *((void *)this + 1) = v18;
LABEL_66:
        v28[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v28);
          if (!result) {
            return result;
          }
          unsigned int v26 = v28[0];
          uint64_t v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int v26 = *v18;
          uint64_t v27 = v18 + 1;
          *((void *)this + 1) = v27;
        }
        *(unsigned char *)(a1 + 44) = v26 != 0;
        *(_DWORD *)(a1 + 56) |= 0x40u;
        if ((unint64_t)v27 >= v17 || *v27 != 69) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
LABEL_74:
        v28[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v28))
        {
          *(_DWORD *)(a1 + 48) = v28[0];
          *(_DWORD *)(a1 + 56) |= 0x80u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v11 = (char *)*((void *)this + 1);
        unint64_t v9 = *((void *)this + 2);
        goto LABEL_20;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_42;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_52;
        }
        goto LABEL_32;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_56;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_66;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_32;
        }
        goto LABEL_74;
      default:
        int v7 = TagFallback & 7;
LABEL_32:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

float sub_100415C8C(uint64_t a1, void *lpsrc)
{
  return sub_1004155C0(a1, (uint64_t)lpsrc);
}

uint64_t sub_100415D14()
{
  return 1;
}

void *sub_100415D1C@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.OutdoorUpdate");
}

void sub_100415D2C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  int v4 = *(_DWORD *)(a2 + 84);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v10 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 84) |= 1u;
    *(void *)(a1 + 8) = v10;
    int v4 = *(_DWORD *)(a2 + 84);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_33;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 84) |= 2u;
  *(void *)(a1 + 16) = v11;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v12 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 84) |= 4u;
  *(_DWORD *)(a1 + 24) = v12;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v13 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 84) |= 8u;
  *(_DWORD *)(a1 + 28) = v13;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_36:
    int v15 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 84) |= 0x20u;
    *(_DWORD *)(a1 + 36) = v15;
    int v4 = *(_DWORD *)(a2 + 84);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_35:
  int v14 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 84) |= 0x10u;
  *(_DWORD *)(a1 + 32) = v14;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x20) != 0) {
    goto LABEL_36;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_37:
  int v16 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 84) |= 0x40u;
  *(_DWORD *)(a1 + 40) = v16;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 84) |= 0x80u;
    *(_DWORD *)(a1 + 44) = v5;
    int v4 = *(_DWORD *)(a2 + 84);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_24;
  }
  if ((v4 & 0x100) != 0)
  {
    int v17 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 84) |= 0x100u;
    *(_DWORD *)(a1 + 48) = v17;
    int v4 = *(_DWORD *)(a2 + 84);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_41;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v18 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 84) |= 0x200u;
  *(_DWORD *)(a1 + 52) = v18;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v19 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 84) |= 0x400u;
  *(_DWORD *)(a1 + 56) = v19;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v20 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 84) |= 0x800u;
  *(_DWORD *)(a1 + 60) = v20;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v21 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 84) |= 0x1000u;
  *(_DWORD *)(a1 + 64) = v21;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_44:
  unsigned int v22 = *(_DWORD *)(a2 + 68);
  if (v22 >= 3) {
    sub_101A5F628();
  }
  *(_DWORD *)(a1 + 84) |= 0x2000u;
  *(_DWORD *)(a1 + 68) = v22;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x4000) == 0) {
    goto LABEL_22;
  }
LABEL_21:
  char v6 = *(unsigned char *)(a2 + 72);
  *(_DWORD *)(a1 + 84) |= 0x4000u;
  *(unsigned char *)(a1 + 72) = v6;
  int v4 = *(_DWORD *)(a2 + 84);
LABEL_22:
  if ((v4 & 0x8000) != 0)
  {
    char v7 = *(unsigned char *)(a2 + 73);
    *(_DWORD *)(a1 + 84) |= 0x8000u;
    *(unsigned char *)(a1 + 73) = v7;
    int v4 = *(_DWORD *)(a2 + 84);
  }
LABEL_24:
  if ((v4 & 0xFF0000) != 0)
  {
    if ((v4 & 0x10000) != 0)
    {
      char v8 = *(unsigned char *)(a2 + 74);
      *(_DWORD *)(a1 + 84) |= 0x10000u;
      *(unsigned char *)(a1 + 74) = v8;
      int v4 = *(_DWORD *)(a2 + 84);
    }
    if ((v4 & 0x20000) != 0)
    {
      unsigned int v9 = *(_DWORD *)(a2 + 76);
      if (v9 >= 4) {
        sub_101A5F5FC();
      }
      *(_DWORD *)(a1 + 84) |= 0x20000u;
      *(_DWORD *)(a1 + 76) = v9;
    }
  }
}

void sub_100416000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100416018(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B1218;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);
}

void sub_100416038(wireless_diagnostics::google::protobuf::MessageLite *a1)
{
  *(void *)a1 = off_1022B1218;
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(a1);

  operator delete();
}

void sub_10041608C()
{
}

uint64_t sub_1004160F4(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 84);
  if ((_BYTE)v1)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(result + 48) = 0;
    *(void *)(result + 56) = 0;
    *(_WORD *)(result + 72) = 0;
    *(void *)(result + 64) = 0;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(unsigned char *)(result + 74) = 0;
    *(_DWORD *)(result + 76) = 0;
  }
  *(_DWORD *)(result + 84) = 0;
  return result;
}

uint64_t sub_10041613C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormatLite *this, unsigned int a3)
{
  while (2)
  {
    int v5 = (char *)*((void *)this + 1);
    if ((unint64_t)v5 >= *((void *)this + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_85;
        }
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 8) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 84) |= 1u;
        char v8 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 != 17) {
          continue;
        }
        *((void *)this + 1) = v8 + 1;
        goto LABEL_14;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_85;
        }
LABEL_14:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v38) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v38;
        }
        *(_DWORD *)(a1 + 84) |= 2u;
        unsigned int v9 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 != 29) {
          continue;
        }
        *((void *)this + 1) = v9 + 1;
LABEL_19:
        v38[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 24) = v38[0];
        *(_DWORD *)(a1 + 84) |= 4u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 37) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
LABEL_24:
        v38[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 28) = v38[0];
        *(_DWORD *)(a1 + 84) |= 8u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 45) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_29:
        v38[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 32) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x10u;
        int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 53) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_34:
        v38[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 36) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x20u;
        int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 61) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_39:
        v38[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 40) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x40u;
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 69) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_44:
        v38[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 44) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x80u;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 77) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_49:
        v38[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 48) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x100u;
        int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 != 85) {
          continue;
        }
        *((void *)this + 1) = v16 + 1;
LABEL_54:
        v38[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 52) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x200u;
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 93) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_59:
        v38[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 56) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x400u;
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 101) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_64:
        v38[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 60) = v38[0];
        *(_DWORD *)(a1 + 84) |= 0x800u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 109) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_69:
        v38[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v38))
        {
          *(_DWORD *)(a1 + 64) = v38[0];
          *(_DWORD *)(a1 + 84) |= 0x1000u;
          int v21 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
          if ((unint64_t)v21 < v20 && *v21 == 112)
          {
            unsigned int v22 = v21 + 1;
            *((void *)this + 1) = v22;
LABEL_75:
            v38[0] = 0;
            if ((unint64_t)v22 >= v20 || *v22 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
              if (!result) {
                return result;
              }
              unsigned int v23 = v38[0];
            }
            else
            {
              unsigned int v23 = *v22;
              *((void *)this + 1) = v22 + 1;
            }
            if (v23 <= 2)
            {
              *(_DWORD *)(a1 + 84) |= 0x2000u;
              *(_DWORD *)(a1 + 68) = v23;
            }
            int v30 = (unsigned char *)*((void *)this + 1);
            unint64_t v24 = *((void *)this + 2);
            if ((unint64_t)v30 < v24 && *v30 == 120)
            {
              int v25 = v30 + 1;
              *((void *)this + 1) = v25;
LABEL_96:
              v38[0] = 0;
              if ((unint64_t)v25 >= v24 || (char)*v25 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
                if (!result) {
                  return result;
                }
                unsigned int v31 = v38[0];
                unsigned int v32 = (unsigned __int8 *)*((void *)this + 1);
                unint64_t v24 = *((void *)this + 2);
              }
              else
              {
                unsigned int v31 = *v25;
                unsigned int v32 = v25 + 1;
                *((void *)this + 1) = v32;
              }
              *(unsigned char *)(a1 + 72) = v31 != 0;
              *(_DWORD *)(a1 + 84) |= 0x4000u;
              if ((int)v24 - (int)v32 >= 2 && *v32 == 128 && v32[1] == 1)
              {
                unsigned int v26 = v32 + 2;
                *((void *)this + 1) = v26;
LABEL_105:
                v38[0] = 0;
                if ((unint64_t)v26 >= v24 || (char)*v26 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
                  if (!result) {
                    return result;
                  }
                  unsigned int v33 = v38[0];
                  int v34 = (unsigned __int8 *)*((void *)this + 1);
                  unint64_t v24 = *((void *)this + 2);
                }
                else
                {
                  unsigned int v33 = *v26;
                  int v34 = v26 + 1;
                  *((void *)this + 1) = v34;
                }
                *(unsigned char *)(a1 + 73) = v33 != 0;
                *(_DWORD *)(a1 + 84) |= 0x8000u;
                if ((int)v24 - (int)v34 >= 2 && *v34 == 136 && v34[1] == 1)
                {
                  uint64_t v27 = v34 + 2;
                  *((void *)this + 1) = v27;
LABEL_114:
                  v38[0] = 0;
                  if ((unint64_t)v27 >= v24 || (char)*v27 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
                    if (!result) {
                      return result;
                    }
                    unsigned int v35 = v38[0];
                    uint64_t v36 = (unsigned __int8 *)*((void *)this + 1);
                    unint64_t v24 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v35 = *v27;
                    uint64_t v36 = v27 + 1;
                    *((void *)this + 1) = v36;
                  }
                  *(unsigned char *)(a1 + 74) = v35 != 0;
                  *(_DWORD *)(a1 + 84) |= 0x10000u;
                  if ((int)v24 - (int)v36 >= 2 && *v36 == 144 && v36[1] == 1)
                  {
                    int v28 = (char *)(v36 + 2);
                    *((void *)this + 1) = v28;
LABEL_123:
                    v38[0] = 0;
                    if ((unint64_t)v28 >= v24 || *v28 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v38);
                      if (!result) {
                        return result;
                      }
                      unsigned int v37 = v38[0];
                    }
                    else
                    {
                      unsigned int v37 = *v28;
                      *((void *)this + 1) = v28 + 1;
                    }
                    if (v37 <= 3)
                    {
                      *(_DWORD *)(a1 + 84) |= 0x20000u;
                      *(_DWORD *)(a1 + 76) = v37;
                    }
                    if (*((void *)this + 1) == *((void *)this + 2)
                      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                    {
                      *((_DWORD *)this + 8) = 0;
                      uint64_t result = 1;
                      *((unsigned char *)this + 36) = 1;
                      return result;
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_19;
        }
        goto LABEL_85;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_24;
        }
        goto LABEL_85;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_29;
        }
        goto LABEL_85;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_34;
        }
        goto LABEL_85;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_39;
        }
        goto LABEL_85;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_44;
        }
        goto LABEL_85;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_49;
        }
        goto LABEL_85;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_54;
        }
        goto LABEL_85;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_59;
        }
        goto LABEL_85;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_64;
        }
        goto LABEL_85;
      case 0xDu:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_69;
        }
        goto LABEL_85;
      case 0xEu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_85;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_75;
      case 0xFu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_85;
        }
        int v25 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_96;
      case 0x10u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_85;
        }
        unsigned int v26 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_105;
      case 0x11u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_85;
        }
        uint64_t v27 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_114;
      case 0x12u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_85;
        }
        int v28 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_123;
      default:
        int v7 = TagFallback & 7;
LABEL_85:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, a3) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100416984(uint64_t result, int a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 84);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, a2, *(double *)(result + 8), a3);
    int v6 = *(_DWORD *)(v5 + 84);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, a2, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, a2, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, a2, *(float *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, a2, *(float *)(v5 + 44), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, a2, *(float *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, a2, *(float *)(v5 + 52), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, a2, *(float *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, a2, *(float *)(v5 + 60), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, a2, *(float *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_DWORD *)(v5 + 68), a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned __int8 *)(v5 + 72), a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
LABEL_36:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned __int8 *)(v5 + 74), a2, a4);
    if ((*(_DWORD *)(v5 + 84) & 0x20000) == 0) {
      return result;
    }
    goto LABEL_37;
  }
LABEL_35:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned __int8 *)(v5 + 73), a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x10000) != 0) {
    goto LABEL_36;
  }
LABEL_18:
  if ((v6 & 0x20000) == 0) {
    return result;
  }
LABEL_37:
  int v7 = *(_DWORD *)(v5 + 76);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v7, a2, a4);
}

uint64_t sub_100416BB4(unsigned int *a1, unsigned int a2)
{
  unsigned int v3 = a1[21];
  if ((_BYTE)v3)
  {
    unsigned int v4 = ((int)(v3 << 31) >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x80) != 0) {
      uint64_t v5 = v4 + 5;
    }
    else {
      uint64_t v5 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v6 = v5 + 5;
    if ((v3 & 0x100) == 0) {
      unsigned int v6 = v5;
    }
    if ((v3 & 0x200) != 0) {
      v6 += 5;
    }
    if ((v3 & 0x400) != 0) {
      v6 += 5;
    }
    if ((v3 & 0x800) != 0) {
      v6 += 5;
    }
    if ((v3 & 0x1000) != 0) {
      unsigned int v7 = v6 + 5;
    }
    else {
      unsigned int v7 = v6;
    }
    if ((v3 & 0x2000) != 0)
    {
      char v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[17];
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 11;
      }
      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
        unsigned int v3 = a1[21];
      }
      else
      {
        int v9 = 2;
      }
      v7 += v9;
    }
    unsigned int v10 = v7 + 2;
    if ((v3 & 0x4000) == 0) {
      unsigned int v10 = v7;
    }
    if ((v3 & 0x8000) != 0) {
      uint64_t v5 = v10 + 3;
    }
    else {
      uint64_t v5 = v10;
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    uint64_t v5 = (v3 & 0x10000) != 0 ? (v5 + 3) : v5;
    if ((v3 & 0x20000) != 0)
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)a1[19];
      if ((v11 & 0x80000000) != 0)
      {
        int v12 = 12;
      }
      else if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2) + 2;
      }
      else
      {
        int v12 = 3;
      }
      uint64_t v5 = (v12 + v5);
    }
  }
  a1[20] = v5;
  return v5;
}

void sub_100416D24(uint64_t a1, void *lpsrc)
{
  sub_100415D2C(a1, (uint64_t)lpsrc);
}

uint64_t sub_100416DAC()
{
  return 1;
}

void *sub_100416DB4@<X0>(void *a1@<X8>)
{
  return sub_100134750(a1, "CLP.LogEntry.PrivateData.InertialOdometrySample");
}

uint64_t sub_100416DC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 120);
}

uint64_t sub_100416DCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

uint64_t sub_100416DD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

void sub_100416DDC()
{
}

void sub_100416E9C(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)a2 + 8 * v4);
      int v6 = *((_DWORD *)a1 + 3);
      uint64_t v7 = *((int *)a1 + 2);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v6 + 1);
          int v6 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v7 + 1;
      sub_1003E1BD8(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 8));
  }
}

void sub_100416FE0(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)a2 + 8 * v4);
      int v6 = *((_DWORD *)a1 + 3);
      uint64_t v7 = *((int *)a1 + 2);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v6 + 1);
          int v6 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v7 + 1;
      sub_100408E50(*(void *)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *(int *)(a2 + 8));
  }
}

uint64_t sub_100417108(uint64_t a1, float *a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0;
  }
  return sub_100417BC4(v2, a2);
}

uint64_t sub_100417118(uint64_t result)
{
  uint64_t v1 = result - 8;
  if (!result) {
    uint64_t v1 = 0;
  }
  *(void *)(v1 + 104) = 0;
  *(_DWORD *)(v1 + 100) = 0;
  *(void *)(v1 + 564) = 0;
  return result;
}

BOOL sub_100417138(uint64_t a1, uint64_t a2)
{
  return *(float *)(a2 + 4) > 15.0;
}

double sub_10041714C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0;
  }
  *(void *)&double result = sub_100418254(v2, a2).n128_u64[0];
  return result;
}

uint64_t sub_10041715C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0;
  }
  return sub_100417FFC(v2, a2);
}

uint64_t sub_10041716C(uint64_t result)
{
  uint64_t v1 = result - 8;
  if (!result) {
    uint64_t v1 = 0;
  }
  *(void *)(v1 + 104) = 0;
  *(_DWORD *)(v1 + 100) = 0;
  *(void *)(v1 + 564) = 0;
  return result;
}

uint64_t sub_100417190(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0;
  }
  return sub_10041806C(v2, a2);
}

double sub_1004171A0(uint64_t a1)
{
  *(void *)(a1 + 8) = &unk_1022B1AC0;
  *(void *)(a1 + 16) = 9;
  *(_WORD *)(a1 + 24) = 512;
  *(void *)a1 = off_1022B1BA8;
  *(unsigned char *)(a1 + 28) = 1;
  *(void *)(a1 + 44) = 0xC00000000;
  *(_DWORD *)(a1 + 40) = 1031798784;
  *(void *)(a1 + 100) = 0;
  *(_DWORD *)(a1 + 108) = 0;
  *(void *)(a1 + 112) = off_1022D4E20;
  *(_OWORD *)(a1 + 120) = xmmword_101D1E240;
  *(void *)(a1 + 136) = 0xFFEFFFFFFFFFFFFFLL;
  *(_DWORD *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(unsigned char *)(a1 + 176) = 1;
  *(_DWORD *)(a1 + 196) = 75;
  *(void *)(a1 + 188) = 0;
  *(_OWORD *)(a1 + 504) = 0u;
  *(void *)(a1 + 520) = 0xC08F380000000000;
  *(void *)(a1 + 528) = 0xC08F380000000000;
  *(unsigned char *)(a1 + 536) = 0;
  *(void *)(a1 + 544) = 0;
  *(unsigned char *)(a1 + 552) = 0;
  *(void *)(a1 + 576) = 0;
  *(_OWORD *)(a1 + 560) = 0u;
  *(void *)(a1 + 584) = 0xC08F380000000000;
  *(void *)(a1 + 592) = 0xC08F380000000000;
  *(unsigned char *)(a1 + 600) = 0;
  *(void *)(a1 + 608) = 0;
  *(unsigned char *)(a1 + 616) = 0;
  *(void *)&double result = 0x3C00000000;
  *(void *)(a1 + 624) = 0x3C00000000;
  *(void *)(a1 + 872) = 0x3C00000000;
  return result;
}

uint64_t sub_1004172A8(uint64_t a1, double *a2)
{
  uint64_t v4 = operator new(0xCuLL);
  int v46 = v4 + 3;
  int v47 = (char *)(v4 + 3);
  *(void *)uint64_t v4 = 7;
  void v4[2] = 8;
  std::string __p = v4;
  uint64_t v5 = sub_1009660E4(a1 + 112, (uint64_t)a2);
  if (v5)
  {
    if (qword_1024191C0 != -1) {
      dispatch_once(&qword_1024191C0, &stru_1022B1C20);
    }
    int v6 = qword_1024191C8;
    if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = *(unsigned __int8 *)(a1 + 24);
      *(_DWORD *)buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "HRStop detect in indoor cycle model during state,%{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024191C0 != -1) {
        dispatch_once(&qword_1024191C0, &stru_1022B1C20);
      }
      int v8 = *(unsigned __int8 *)(a1 + 24);
      LODWORD(v72[0]) = 67240192;
      DWORD1(v72[0]) = v8;
      int v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual CLWorkoutPredictor_Type::WorkoutStopDetectionEvent CLStationaryCycleStopModel::update(const CLWorkoutPredictorInputs &)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
  }
  else
  {
    __int16 v75 = 0;
    v72[0] = xmmword_101D1E250;
    memset(&v72[1], 0, 96);
    long long v73 = 0u;
    memset(v74, 0, sizeof(v74));
    long long v76 = xmmword_101D1E250;
    uint64_t v77 = 0;
    int v78 = 0;
    uint64_t v79 = 0;
    v80[0] = 0;
    *(void *)((char *)v80 + 5) = 0;
    *(void *)((char *)&v80[1] + 6) = 0;
    char v81 = 0;
    memset(&v80[3], 0, 24);
    long long v82 = xmmword_101D1E250;
    uint64_t v83 = 0;
    int v84 = 0;
    unint64_t v85 = 0xFFEFFFFFFFFFFFFFLL;
    int v96 = 0;
    long long v86 = 0u;
    long long v87 = 0u;
    long long v88 = 0u;
    long long v89 = 0u;
    long long v90 = 0u;
    int v91 = 0;
    long long v92 = 0u;
    long long v93 = 0u;
    long long v94 = 0u;
    memset(v95, 0, sizeof(v95));
    uint64_t v97 = 0;
    uint64_t v98 = 0;
    unint64_t v99 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v100 = 0;
    int v101 = 0;
    uint64_t v107 = 0;
    __int16 v108 = 0;
    int v113 = 0;
    int v106 = 0;
    long long v104 = 0u;
    long long v105 = 0u;
    long long v102 = 0u;
    long long v103 = 0u;
    long long v110 = 0u;
    long long v109 = 0u;
    char v111 = 0;
    memset(v112, 0, sizeof(v112));
    unint64_t v114 = 0xFFEFFFFFFFFFFFFFLL;
    long long v133 = 0u;
    long long v132 = 0u;
    long long v131 = 0u;
    long long v130 = 0u;
    long long v129 = 0u;
    long long v128 = 0u;
    long long v127 = 0u;
    long long v126 = 0u;
    long long v125 = 0u;
    long long v124 = 0u;
    long long v123 = 0u;
    long long v122 = 0u;
    long long v121 = 0u;
    long long v120 = 0u;
    long long v119 = 0u;
    long long v118 = 0u;
    long long v117 = 0u;
    long long v116 = 0u;
    long long v115 = 0u;
    uint64_t v134 = 0;
    unint64_t v135 = 0xFFEFFFFFFFFFFFFFLL;
    long long v136 = 0u;
    long long v137 = 0u;
    long long v138 = 0u;
    long long v139 = 0u;
    unint64_t v140 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v141 = 0;
    int v142 = 0;
    uint64_t v143 = 0;
    char v144 = 0;
    unint64_t v145 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v147 = 0;
    uint64_t v146 = 0;
    uint64_t v148 = 0x80000000800000;
    uint64_t v150 = 0;
    uint64_t v149 = 0;
    long long v151 = xmmword_101D1E260;
    uint64_t v152 = 0x80000000800000;
    long long v153 = 0u;
    long long v154 = 0u;
    uint64_t v155 = 0;
    unint64_t v156 = 0xFFEFFFFFFFFFFFFFLL;
    long long v157 = 0u;
    long long v158 = 0u;
    long long v159 = 0u;
    long long v160 = 0u;
    long long v161 = 0u;
    long long v162 = 0u;
    int v163 = 0;
    unint64_t v164 = 0xFFEFFFFFFFFFFFFFLL;
    __int16 v165 = 0;
    int v166 = 0;
    unint64_t v167 = 0xFFEFFFFFFFFFFFFFLL;
    uint64_t v168 = 7;
    unint64_t v169 = 0xFFEFFFFFFFFFFFFFLL;
    char v170 = 0;
    uint64_t v172 = 0;
    uint64_t v171 = 0;
    uint64_t v173 = 0;
    if (sub_100174478(a2, &__p, (uint64_t)v72))
    {
      uint64_t v10 = *(unsigned __int16 *)(a1 + 44);
      uint64_t v11 = (unsigned char *)(a1 + 28);
      float v12 = *((float *)&v146 + 1) * 57.296;
      uint64_t v13 = *(unsigned __int16 *)(a1 + 46);
      unint64_t v14 = *(unsigned int *)(a1 + 48);
      if (v10 + v13 >= v14) {
        uint64_t v15 = *(unsigned int *)(a1 + 48);
      }
      else {
        uint64_t v15 = 0;
      }
      *(float *)(a1 + 44 + 4 * (v10 + v13 - v15) + 8) = v12;
      if (v14 <= v13)
      {
        unint64_t v16 = v10 + 1;
        if (v16 >= v14) {
          __int16 v17 = v14;
        }
        else {
          __int16 v17 = 0;
        }
        *(_WORD *)(a1 + 44) = v16 - v17;
      }
      else
      {
        LOWORD(v13) = v13 + 1;
        *(_WORD *)(a1 + 46) = v13;
        LODWORD(v13) = (unsigned __int16)v13;
      }
      *uint64_t v11 = 1;
      if (v14 == v13)
      {
        int v18 = v128;
        if (v128) {
          int v18 = *(_DWORD *)(a1 + 572) + 1;
        }
        *(_DWORD *)(a1 + 572) = v18;
        if (sub_1012C9600((unsigned __int16 *)(a1 + 624), a1 + 512, v12))
        {
          uint64_t v5 = 12;
          goto LABEL_45;
        }
        uint64_t v41 = 0;
        *(void *)int v42 = 0;
        *(int64x2_t *)&v42[8] = vdupq_n_s64(0xC08F380000000000);
        v42[24] = 0;
        *(void *)&v42[32] = 0;
        v42[40] = 0;
        uint64_t v43 = 0;
        float v44 = 0.0;
        if (*v11) {
          sub_1004184F0(a1 + 28);
        }
        float v19 = *(float *)(a1 + 36);
        float v20 = sqrtf(v19);
        BOOL v21 = v19 <= 0.0;
        float v22 = 0.0;
        if (!v21) {
          float v22 = v20;
        }
        float v23 = *(float *)&v149;
        if (*(float *)&v149 >= *(float *)&v146) {
          float v23 = *(float *)&v146;
        }
        *(float *)&uint64_t v41 = v22;
        *((float *)&v41 + 1) = v23 * 57.296;
        long long v24 = *(_OWORD *)(a1 + 528);
        *(_OWORD *)int v42 = *(_OWORD *)(a1 + 512);
        *(_OWORD *)&v42[16] = v24;
        *(_OWORD *)&v42[25] = *(_OWORD *)(a1 + 537);
        LODWORD(v43) = DWORD1(v73);
        HIDWORD(v43) = *(_DWORD *)(a1 + 572);
        float v44 = *((float *)&v151 + 2) * 57.296;
        sub_1001A34E0(a1 + 8, 0, (uint64_t)&v41);
        int v25 = *(unsigned __int8 *)(a1 + 24);
        if (qword_1024191C0 != -1) {
          dispatch_once(&qword_1024191C0, &stru_1022B1C20);
        }
        unsigned int v26 = qword_1024191C8;
        if (os_log_type_enabled((os_log_t)qword_1024191C8, OS_LOG_TYPE_INFO))
        {
          double v27 = -999.0;
          int v28 = *(_DWORD *)(a1 + 104);
          if (*(double *)&v42[8] != -999.0 && *(double *)&v42[16] != -999.0) {
            double v27 = *(double *)&v42[16] - *(double *)&v42[8];
          }
          int v29 = *(_DWORD *)(a1 + 100);
          int v30 = *(_DWORD *)(a1 + 572);
          int v31 = *(_DWORD *)(a1 + 568);
          double v32 = *(float *)(a1 + 564);
          *(_DWORD *)buf = 67111936;
          *(_DWORD *)&uint8_t buf[4] = v25;
          __int16 v175 = 1024;
          int v176 = v28;
          __int16 v177 = 2048;
          double v178 = *(float *)&v41;
          __int16 v179 = 2048;
          double v180 = *((float *)&v41 + 1);
          __int16 v181 = 2048;
          uint64_t v182 = *(void *)v42;
          __int16 v183 = 1024;
          int v184 = v42[24];
          __int16 v185 = 2048;
          double v186 = *(float *)&v43;
          __int16 v187 = 2048;
          double v188 = v27;
          __int16 v189 = 1024;
          int v190 = v29;
          __int16 v191 = 1024;
          int v192 = v30;
          __int16 v193 = 1024;
          int v194 = v31;
          __int16 v195 = 2048;
          double v196 = v32;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "IndoorCycleStop,state,%d,headingCnt,%d,longStd,%f,shortStd,%f,exertionDelta,%f,exertionLow,%d,vm,%f,fromBaseline,%f,inLikely,%d,steps,%d,combinedCnt,%d,deltaH,%f", buf, 0x62u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_1024191C0 != -1) {
            dispatch_once(&qword_1024191C0, &stru_1022B1C20);
          }
          double v34 = -999.0;
          int v35 = *(_DWORD *)(a1 + 104);
          if (*(double *)&v42[8] != -999.0 && *(double *)&v42[16] != -999.0) {
            double v34 = *(double *)&v42[16] - *(double *)&v42[8];
          }
          int v36 = *(_DWORD *)(a1 + 100);
          int v37 = *(_DWORD *)(a1 + 572);
          int v38 = *(_DWORD *)(a1 + 568);
          double v39 = *(float *)(a1 + 564);
          int v48 = 67111936;
          int v49 = v25;
          __int16 v50 = 1024;
          int v51 = v35;
          __int16 v52 = 2048;
          double v53 = *(float *)&v41;
          __int16 v54 = 2048;
          double v55 = *((float *)&v41 + 1);
          __int16 v56 = 2048;
          uint64_t v57 = *(void *)v42;
          __int16 v58 = 1024;
          int v59 = v42[24];
          __int16 v60 = 2048;
          double v61 = *(float *)&v43;
          __int16 v62 = 2048;
          double v63 = v34;
          __int16 v64 = 1024;
          int v65 = v36;
          __int16 v66 = 1024;
          int v67 = v37;
          __int16 v68 = 1024;
          int v69 = v38;
          __int16 v70 = 2048;
          double v71 = v39;
          int v40 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "virtual CLWorkoutPredictor_Type::WorkoutStopDetectionEvent CLStationaryCycleStopModel::update(const CLWorkoutPredictorInputs &)", "%s\n", v40);
          if (v40 != (char *)buf) {
            free(v40);
          }
        }
        if (*(unsigned char *)(a1 + 24) == 4)
        {
          uint64_t v5 = 1;
          goto LABEL_45;
        }
      }
    }
    else
    {
      sub_100134750(buf, "IndoorCycleStop");
      sub_10111B644(a2, (uint64_t *)buf, (uint64_t)&__p);
      if (SHIBYTE(v178) < 0) {
        operator delete(*(void **)buf);
      }
    }
    uint64_t v5 = 0;
  }
LABEL_45:
  if (__p)
  {
    int v46 = __p;
    operator delete(__p);
  }
  return v5;
}

void sub_100417B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100417BC4(uint64_t result, float *a2)
{
  if (*a2 <= 30.0)
  {
    int v2 = *(_DWORD *)(result + 108);
    *(_DWORD *)(result + 108) = v2 + 1;
    if (v2 >= 70) {
      return sub_1001A34E0(result + 8, 1, (uint64_t)&v3);
    }
  }
  else
  {
    *(_DWORD *)(result + 108) = 0;
  }
  return result;
}

uint64_t sub_100417C1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(float *)a2 > 30.0 && *(float *)(a2 + 4) > 5.0;
  double v3 = *(double *)(a2 + 16);
  BOOL v4 = 0;
  if (v3 != -999.0)
  {
    double v5 = *(double *)(a2 + 24);
    if (v5 != -999.0)
    {
      double v6 = v5 - v3;
      if (v6 != -999.0 && v6 <= -5.0) {
        BOOL v4 = *(double *)(a2 + 8) <= -0.75 || *(unsigned char *)(a2 + 32) != 0;
      }
    }
  }
  int v8 = v2 || v4;
  if (*(int *)(a2 + 60) > 11) {
    int v8 = 1;
  }
  if (*(float *)(a2 + 56) < 0.1) {
    int v8 = 1;
  }
  int v9 = *(_DWORD *)(a1 + 568) + v8;
  int v10 = *(_DWORD *)(a1 + 100);
  int v11 = *(_DWORD *)(a1 + 104) + v2;
  *(_DWORD *)(a1 + 568) = v9;
  *(_DWORD *)(a1 + 104) = v11;
  float v12 = *(float *)(a1 + 564);
  float v13 = (float)(180.0 / v12) * 11.719;
  if ((float)(180.0 / v12) <= 1.0) {
    float v13 = 11.719;
  }
  BOOL v15 = fminf(v13, 46.875) < (float)v9 && v10 > 23;
  if (v11 > 0 || v12 > 180.0)
  {
    int v18 = !v15;
    if (v3 == -999.0) {
      goto LABEL_41;
    }
    double v16 = *(double *)(a2 + 24);
  }
  else
  {
    if (v3 == -999.0 || (double v16 = *(double *)(a2 + 24), v16 == -999.0))
    {
      int v18 = 1;
      goto LABEL_41;
    }
    BOOL v17 = v16 - v3 != -999.0;
    if (v16 - v3 > -20.0) {
      BOOL v17 = 0;
    }
    int v18 = !v15 || !v17;
  }
  if (v16 == -999.0 || (double v19 = v16 - v3, v19 == -999.0))
  {
LABEL_41:
    if (v10 >= 24)
    {
      BOOL v21 = 0;
      double v16 = *(double *)(a2 + 24);
      goto LABEL_43;
    }
LABEL_47:
    BOOL v22 = 0;
    BOOL v21 = 0;
LABEL_49:
    BOOL v24 = 0;
    return (v21 | ~v18) & (!v22 && !v24);
  }
  if (v10 < 24) {
    goto LABEL_47;
  }
  float v20 = v19;
  BOOL v21 = v19 <= -20.0;
  if (fmaxf((float)(v20 * 1.5) + 60.0, 1.0) >= (float)v11) {
    BOOL v21 = 0;
  }
LABEL_43:
  if (v16 == -999.0)
  {
    BOOL v22 = 0;
    goto LABEL_49;
  }
  BOOL v22 = v16 > 75.0;
  double v23 = *(double *)(a1 + 592);
  BOOL v24 = v16 > v23 + 10.0;
  if (v23 == -999.0) {
    BOOL v24 = 0;
  }
  return (v21 | ~v18) & (!v22 && !v24);
}

BOOL sub_100417E48(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a2 + 16);
  if (v2 == -999.0)
  {
    BOOL v4 = 0;
  }
  else
  {
    double v3 = *(double *)(a2 + 24);
    BOOL v4 = v3 != -999.0;
    double v5 = v3 - v2;
    if (v5 == -999.0) {
      BOOL v4 = 0;
    }
    if (v5 > -40.0) {
      BOOL v4 = 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 100);
  if (v6 >= 71)
  {
    if (*(float *)(a1 + 564) >= 180.0) {
      BOOL v4 = 1;
    }
    if (!v4)
    {
      BOOL v7 = *(unsigned char *)(a1 + 24) != 3;
LABEL_16:
      float v8 = *(float *)(a2 + 4);
      goto LABEL_17;
    }
LABEL_15:
    BOOL v7 = 0;
    goto LABEL_16;
  }
  if (v6 >= 6) {
    goto LABEL_15;
  }
  float v8 = *(float *)(a2 + 4);
  BOOL v7 = v8 < 1.5;
LABEL_17:
  if (v8 >= 5.0 || *(_DWORD *)(a2 + 60) || *(float *)(a2 + 56) <= 0.5 || *(float *)(a2 + 64) >= 20.0)
  {
    if (v8 > 5.0 || *(float *)(a2 + 56) < 0.5) {
      *(_DWORD *)(a1 + 108) = 0;
    }
  }
  else
  {
    ++*(_DWORD *)(a1 + 108);
  }
  return v7 || *(_DWORD *)(a1 + 108) > 17;
}

uint64_t sub_100417F60(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  float v4 = *(float *)(result + 560);
  if (*(_WORD *)(result + 46))
  {
    double result = sub_1004182C4((unsigned __int16 *)(result + 44), *(unsigned __int16 *)(result + 46) - 1);
    float v5 = *(float *)result;
  }
  else
  {
    float v5 = 0.0;
  }
  float v6 = vabds_f32(v4, v5);
  if (*(float *)(v3 + 564) >= v6) {
    float v6 = *(float *)(v3 + 564);
  }
  *(float *)(v3 + 564) = v6;
  ++*(_DWORD *)(v3 + 100);
  if (*(double *)(v3 + 592) == -999.0)
  {
    long long v7 = *(_OWORD *)(a2 + 8);
    long long v8 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(v3 + 601) = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(v3 + 576) = v7;
    *(_OWORD *)(v3 + 592) = v8;
  }
  return result;
}

uint64_t sub_100417FFC(uint64_t a1, uint64_t a2)
{
  sub_100417F60(a1, a2);
  if (sub_100417C1C(a1, a2))
  {
    uint64_t v4 = a1 + 8;
    float v5 = &v9;
    int v6 = 3;
  }
  else
  {
    uint64_t result = sub_100417E48(a1, a2);
    if (!result) {
      return result;
    }
    uint64_t v4 = a1 + 8;
    float v5 = &v8;
    int v6 = 2;
  }
  return sub_1001A34E0(v4, v6, (uint64_t)v5);
}

uint64_t sub_10041806C(uint64_t a1, uint64_t a2)
{
  sub_100417F60(a1, a2);
  if (*(int *)(a1 + 100) >= 51)
  {
    uint64_t v4 = a1 + 8;
    float v5 = &v14;
    int v6 = 4;
    return sub_1001A34E0(v4, v6, (uint64_t)v5);
  }
  double v7 = *(double *)(a2 + 16);
  if (v7 == -999.0)
  {
    BOOL v11 = 0;
  }
  else
  {
    double v8 = *(double *)(a2 + 24);
    BOOL v9 = v8 != -999.0;
    double v10 = v8 - v7;
    if (v10 == -999.0) {
      BOOL v9 = 0;
    }
    BOOL v11 = v10 <= -20.0 && v9;
  }
  uint64_t result = sub_100417E48(a1, a2);
  if (!v11 && result)
  {
    uint64_t v4 = a1 + 8;
    float v5 = &v13;
    int v6 = 2;
    return sub_1001A34E0(v4, v6, (uint64_t)v5);
  }
  return result;
}

void *sub_100418124(void *a1)
{
  *a1 = off_1022B1BA8;
  a1[14] = off_1022D4E20;
  double v2 = (void *)a1[19];
  if (v2)
  {
    a1[20] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_100418194(void *a1)
{
  *a1 = off_1022B1BA8;
  a1[14] = off_1022D4E20;
  double v2 = (void *)a1[19];
  if (v2)
  {
    a1[20] = v2;
    operator delete(v2);
  }

  operator delete();
}

void sub_100418224(id a1)
{
  qword_1024191C8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Workout");
}

__n128 sub_100418254(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 100) = 0;
  *(void *)(a1 + 564) = 0;
  if (*(_WORD *)(a1 + 46)) {
    int v4 = *(_DWORD *)sub_1004182C4((unsigned __int16 *)(a1 + 44), 0);
  }
  else {
    int v4 = 0;
  }
  *(_DWORD *)(a1 + 560) = v4;
  __n128 result = *(__n128 *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 601) = *(_OWORD *)(a2 + 33);
  *(__n128 *)(a1 + 576) = result;
  *(_OWORD *)(a1 + 592) = v6;
  return result;
}

uint64_t sub_1004182C4(unsigned __int16 *a1, unint64_t a2)
{
  if (*((unsigned int *)a1 + 1) <= a2)
  {
    if (qword_102419630 != -1) {
      dispatch_once(&qword_102419630, &stru_1022B1C40);
    }
    double v7 = qword_102419638;
    if (os_log_type_enabled((os_log_t)qword_102419638, OS_LOG_TYPE_FAULT))
    {
      int v8 = *((_DWORD *)a1 + 1);
      *(_DWORD *)buf = 134218240;
      unint64_t v11 = a2;
      __int16 v12 = 1024;
      int v13 = v8;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "Assertion failed: i < fCapacity, file /Library/Caches/com.apple.xbs/Sources/CoreLocation/Oscar/CMQueue.h, line 233,i,%zu,capacity,%u.", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419630 != -1) {
        dispatch_once(&qword_102419630, &stru_1022B1C40);
      }
      BOOL v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "const T &CMQueue<float>::operator[](const size_t) const [T = float]", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
  }
  unint64_t v4 = *a1 + a2;
  unint64_t v5 = *((unsigned int *)a1 + 1);
  if (v4 < v5) {
    unint64_t v5 = 0;
  }
  return (uint64_t)&a1[2 * (v4 - v5) + 4];
}

void sub_1004184C0(id a1)
{
  qword_102419638 = (uint64_t)os_log_create("com.apple.locationd.Legacy", "Generic_deprecated");
}

uint64_t sub_1004184F0(uint64_t result)
{
  uint64_t v1 = result;
  if (*(_WORD *)(result + 18))
  {
    unint64_t v2 = 0;
    float v3 = 0.0;
    do
    {
      __n128 result = sub_1004182C4((unsigned __int16 *)(v1 + 16), v2);
      float v3 = v3 + *(float *)result;
      ++v2;
      unint64_t v4 = *(unsigned __int16 *)(v1 + 18);
    }
    while (v2 < v4);
    *(float *)(v1 + 4) = v3 / (float)v4;
    float v5 = 0.0;
    if (v4 >= 3)
    {
      unint64_t v6 = 0;
      float v7 = 0.0;
      do
      {
        __n128 result = sub_1004182C4((unsigned __int16 *)(v1 + 16), v6);
        float v7 = v7
           + (float)((float)(*(float *)result - *(float *)(v1 + 4)) * (float)(*(float *)result - *(float *)(v1 + 4)));
        ++v6;
        unint64_t v8 = *(unsigned __int16 *)(v1 + 18);
      }
      while (v6 < v8);
      float v5 = v7 / (float)v8;
    }
  }
  else
  {
    *(_DWORD *)(result + 4) = 0;
    float v5 = 0.0;
  }
  *(float *)(v1 + 8) = v5;
  *(unsigned char *)uint64_t v1 = 0;
  return result;
}

uint64_t sub_1004185C0(uint64_t a1)
{
  uint64_t v2 = sub_1014F0400(a1);
  *(void *)uint64_t v2 = off_1022B1C70;
  *(_DWORD *)(v2 + 16) = 1065353216;
  float v3 = (float *)(v2 + 16);
  uint64_t v4 = sub_1000D3E78();
  sub_10006B564(v4, &v6);
  sub_1004D11B0(v6, "WalkModelMetsScale", v3);
  if (v7) {
    sub_1000DB0A0(v7);
  }
  return a1;
}

void sub_100418648(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1000DB0A0(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100418664(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

float sub_100418670(float a1)
{
  return (float)((float)(a1 * -0.793) + (float)((float)(a1 * 0.3564) * a1)) + 3.142;
}

void sub_10041869C()
{
}

void sub_1004186B0(id a1)
{
  qword_102418FF8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "Calorimetry");
}

void *sub_1004186E0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_100418AD4((uint64_t)v6, a3);
  sub_10070665C(a1, a2, (uint64_t)v6);
  sub_100418A50(v6);
  *a1 = off_1022B1CF0;
  return a1;
}

void sub_10041877C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100418A50((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10041879C(uint64_t result, double a2)
{
  double v2 = a2 + -240.0 + 60.0;
  if (v2 < *(double *)(result + 40)) {
    double v2 = *(double *)(result + 40);
  }
  *(double *)(result + 40) = v2;
  return result;
}

void *sub_1004187C8(uint64_t a1)
{
  char v15 = 0;
  double v13 = 0.0;
  double v14 = 0.0;
  uint64_t v12 = 0;
  double v2 = (double *)(a1 + 40);
  float v3 = operator new(0x20uLL);
  void *v3 = off_1022B1D88;
  v3[1] = &v13;
  v3[2] = &v14;
  v3[3] = &v15;
  v16[3] = v3;
  char v4 = sub_1007066AC(a1, v2, &v12, (uint64_t)v16, 240.0);
  __n128 result = sub_100418CB0(v16);
  if (v4)
  {
    if (v14 < 210.0 || (double v6 = v13 / 240.0, v13 / 240.0 < 4.40208912))
    {
      double *v2 = *(double *)(v12 + 8);
    }
    else
    {
      double v7 = *v2;
      double v8 = *v2 + 240.0;
      for (double *v2 = *v2 + 60.0;
            v7 < v8;
            __n128 result = (void *)(*(uint64_t (**)(uint64_t, void *))(*(void *)v9 + 48))(v9, v10))
      {
        *(double *)double v10 = v7;
        double v7 = v7 + 60.0;
        *(double *)&v10[1] = v7;
        *(double *)&v10[2] = v6;
        uint64_t v11 = 65540;
        BYTE3(v11) = v15;
        uint64_t v9 = *(void *)(a1 + 32);
        if (!v9) {
          sub_10015E48C();
        }
      }
    }
  }
  return result;
}

void sub_100418984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_100418CB0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_1004189A0(void *a1)
{
  *a1 = off_1022B1D50;
  sub_100418A50(a1 + 1);
  return a1;
}

void sub_1004189E4(void *a1)
{
  *a1 = off_1022B1D50;
  sub_100418A50(a1 + 1);

  operator delete();
}

uint64_t sub_100418A48(uint64_t result)
{
  *(void *)(result + 40) = 0;
  return result;
}

void *sub_100418A50(void *a1)
{
  double v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_100418AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100418B70()
{
}

__n128 sub_100418B84(uint64_t a1)
{
  double v2 = (char *)operator new(0x20uLL);
  *(void *)double v2 = off_1022B1D88;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_100418BD8(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022B1D88;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_100418C10(uint64_t result, uint64_t a2, double *a3)
{
  double v3 = *a3;
  char v4 = *(double **)(result + 16);
  **(double **)(result + 8) = **(double **)(result + 8) + *(double *)(a2 + 16) * *a3;
  if (!*(unsigned char *)(a2 + 28)) {
    double v3 = 0.0;
  }
  double *v4 = *v4 + v3;
  **(unsigned char **)(result + 24) = (**(unsigned __int8 **)(result + 24) | *(unsigned __int8 *)(a2 + 29)) != 0;
  return result;
}

uint64_t sub_100418C64(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100418CA4()
{
}

void *sub_100418CB0(void *a1)
{
  double v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

BOOL sub_100418D34(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 2120) == v2) {
    return 0;
  }
  BOOL v4 = v2 == 1 || *(double *)(a2 + 136) > 0.0 && v2 == 0;
  BOOL v6 = v2 < 2 && v4;
  if (*(void *)(a2 + 16)) {
    BOOL v7 = 0;
  }
  else {
    BOOL v7 = *(void *)(a2 + 112) == 19;
  }
  return v7 && v6;
}

BOOL sub_100418D8C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 2120);
  if (v2 != *(void *)(a2 + 128)) {
    return 0;
  }
  BOOL v3 = v2 == 1 || *(double *)(a2 + 136) > 0.0 && v2 == 0;
  BOOL v6 = v2 < 2 && v3;
  if (*(void *)(a2 + 16)) {
    BOOL v7 = 0;
  }
  else {
    BOOL v7 = *(void *)(a2 + 112) == 19;
  }
  return v7 && v6;
}

BOOL sub_100418DE4(uint64_t a1, const unsigned __int8 *a2, uint64_t a3, char a4, float a5, double a6)
{
  *(float *)(a1 + 1008) = a5;
  *(void *)(a1 + 2120) = a3;
  *(unsigned char *)(a1 + 1012) = a4;
  *(unsigned char *)(a1 + 1013) = 0;
  sub_101220FD8((_OWORD *)(a1 + 2128));
  if (uuid_compare(a2, (const unsigned __int8 *)(a1 + 1014))) {
    sub_100419678((void *)a1);
  }
  uuid_copy((unsigned __int8 *)(a1 + 1014), a2);
  *(double *)(a1 + 992) = a6;
  if (*(double *)(a1 + 1048) + 60.0 < a6)
  {
    uuid_parse("00000000-0000-0000-0000-000000000000", (unsigned __int8 *)(a1 + 1030));
    *(void *)(a1 + 1048) = 0;
  }
  if (*(void *)(a1 + 2120) != 1)
  {
    unint64_t v9 = 0xFFFFFFFFFFFFFCF0;
    uint64_t v10 = 984;
    do
    {
      *(unsigned char *)(a1 + v10) = 0;
      unint64_t v11 = a1 + 984 + v9;
      *(_OWORD *)(v11 + 48) = *(_OWORD *)((char *)&unk_101D1E4D8 + v9 + 832);
      *(_OWORD *)(v11 + 64) = *(_OWORD *)((char *)&unk_101D1E4D8 + v9 + 848);
      *(_OWORD *)(v11 + 80) = *(_OWORD *)((char *)&unk_101D1E4D8 + v9 + 864);
      *(_OWORD *)(v11 + 96) = *(_OWORD *)((char *)&unk_101D1E4D8 + v9 + 880);
      *(_OWORD *)unint64_t v11 = *(_OWORD *)((char *)&unk_101D1E4D8 + v9 + 784);
      *(_OWORD *)(v11 + 16) = *(_OWORD *)((char *)&unk_101D1E4D8 + v9 + 800);
      *(_OWORD *)(v11 + 32) = *(_OWORD *)((char *)&unk_101D1E4D8 + v9 + 816);
      *(double *)(v11 + 32) = *(float *)(a1 + 1008);
      uuid_copy((unsigned __int8 *)v11, (const unsigned __int8 *)(a1 + 1030));
      uuid_copy((unsigned __int8 *)(a1 + v9 + 1000), (const unsigned __int8 *)(a1 + 1014));
      ++v10;
      v9 += 112;
    }
    while (v9);
  }
  *(unsigned char *)(a1 + 1068) = 0;

  return sub_10041B8D0(a1);
}

BOOL sub_100418F4C(int64x2_t *a1, uint64_t a2)
{
  if (!a1[132].i64[1]) {
    sub_10041C440((uint64_t)a1);
  }
  a1[62] = vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
  a1[63].i32[0] = 1102504264;
  a1[63].i16[2] = 0;
  a1[136].i64[0] = 0x7FEFFFFFFFFFFFFFLL;
  float v4 = *(double *)(a2 + 136);
  BOOL result = sub_100418DE4((uint64_t)a1, (const unsigned __int8 *)(a2 + 64), *(void *)(a2 + 128), 1, v4, *(double *)(a2 + 232));
  a1[135].i32[0] = 3;
  return result;
}

void sub_100418FCC(uint64_t a1, const unsigned __int8 *a2, uint64_t a3, float a4)
{
  if (!*(unsigned char *)(a1 + 1012))
  {
    *(float *)(a1 + 1008) = a4;
    *(void *)(a1 + 2120) = a3;
    float v5 = (const unsigned __int8 *)(a1 + 1014);
    uuid_copy((unsigned __int8 *)(a1 + 1014), a2);
    uint64_t v6 = 0;
    *(unsigned char *)(a1 + 1012) = 1;
    do
    {
      *(double *)(a1 + v6 + 232) = *(float *)(a1 + 1008);
      uuid_copy((unsigned __int8 *)(a1 + v6 + 216), v5);
      v6 += 112;
    }
    while (v6 != 784);
    uint64_t v7 = *(void *)(a1 + 192);
    if (v7)
    {
      long long v34 = 0u;
      long long v35 = 0u;
      long long v33 = 0u;
      unint64_t v8 = *(void *)(a1 + 184);
      uint64_t v9 = *(void *)(a1 + 160);
      uint64_t v10 = (uint64_t *)(v9 + 8 * (v8 / 0x1A));
      if (*(void *)(a1 + 168) == v9)
      {
        unint64_t v11 = 0;
        uint64_t v17 = 0;
        double v13 = (uint64_t *)(v9 + ((((v8 + v7) * (unsigned __int128)0x4EC4EC4EC4EC4EC5uLL) >> 64) & 0x7FFFFFFFFFFFFFF8));
      }
      else
      {
        unint64_t v11 = (char *)(*(void *)(v9 + 8 * (v8 / 0x1A)) + 152 * (v8 % 0x1A));
        unint64_t v12 = v8 + v7;
        double v13 = (uint64_t *)(v9 + 8 * (v12 / 0x1A));
        unint64_t v14 = v12 % 0x1A;
        uint64_t v15 = *v13 + 152 * v14;
        if (v11 != (char *)v15)
        {
          while (*(void *)v11 != 0x7FFFFFFFFFFFFFFFLL)
          {
            v11 += 152;
            if (&v11[-*v10] == (char *)3952)
            {
              double v16 = (char *)v10[1];
              ++v10;
              unint64_t v11 = v16;
            }
            if (v11 == (char *)v15)
            {
              unint64_t v11 = (char *)(*v13 + 152 * v14);
              break;
            }
          }
        }
        uint64_t v17 = *v13 + 152 * v14;
      }
      *(void *)&long long v48 = &v33;
      sub_10041F8F0(v10, (uint64_t)v11, v13, v17, (void **)&v48);
      unint64_t v18 = *(void *)(a1 + 184) + *(void *)(a1 + 192);
      uint64_t v19 = *(void *)(a1 + 160);
      float v20 = (void *)(v19 + 8 * (v18 / 0x1A));
      if (*(void *)(a1 + 168) == v19) {
        BOOL v21 = 0;
      }
      else {
        BOOL v21 = (char *)(*v20 + 152 * (v18 % 0x1A));
      }
      sub_100174118((void *)(a1 + 152), v10, v11, v20, v21);
      uint64_t v57 = 0;
      long long v55 = 0u;
      long long v56 = 0u;
      long long v53 = 0u;
      long long v54 = 0u;
      long long v51 = 0u;
      long long v52 = 0u;
      long long v49 = 0u;
      long long v50 = 0u;
      long long v48 = 0u;
      double v22 = 0.0;
      if (sub_100E4FD3C((void *)(a1 + 1072), (uint64_t)&v48) == 100)
      {
        double v23 = *(double *)&v51 + 2.22044605e-16;
        if (*(double *)(a1 + 992) >= *(double *)&v51 + 2.22044605e-16) {
          double v23 = *(double *)(a1 + 992);
        }
        long long v44 = v54;
        long long v45 = v55;
        long long v46 = (unint64_t)v56;
        uint64_t v38 = v50;
        uint64_t v41 = *((void *)&v51 + 1);
        uint64_t v47 = v57;
        long long v42 = v52;
        long long v43 = v53;
        *(void *)buf_8 = *((void *)&v48 + 1);
        *(_OWORD *)&buf_8[8] = v49;
        uint64_t buf = 0x7FFFFFFFFFFFFFFFLL;
        double v39 = v23;
        double v40 = v23;
        uint64_t v41 = *(void *)(a1 + 1000);
        LODWORD(v44) = 4;
        *((double *)&v43 + 1) = *(float *)(a1 + 1008);
        *(void *)&long long v46 = 0;
        uuid_copy(buf_8, v5);
        sub_10041AF24(a1, (uint64_t)&buf);
        double v22 = *((double *)&v52 + 1);
        if (*((void *)&v35 + 1))
        {
          *(void *)&long long v35 = v35 + 1;
          --*((void *)&v35 + 1);
          if ((unint64_t)v35 >= 0x34)
          {
            operator delete(**((void ***)&v33 + 1));
            *((void *)&v33 + 1) += 8;
            *(void *)&long long v35 = v35 - 26;
          }
        }
      }
      if (*((void *)&v35 + 1))
      {
        BOOL v24 = (void *)(*((void *)&v33 + 1) + 8 * ((unint64_t)v35 / 0x1A));
        uint64_t v25 = *v24 + 152 * ((unint64_t)v35 % 0x1A);
        if (SHIDWORD(v54) <= *(_DWORD *)(v25 + 108))
        {
          if ((void)v34 != *((void *)&v33 + 1))
          {
            unint64_t v30 = *(void *)(*((void *)&v33 + 1) + 8 * (((void)v35 + *((void *)&v35 + 1)) / 0x1AuLL))
                + 152 * (((void)v35 + *((void *)&v35 + 1)) % 0x1AuLL);
            while (v25 != v30)
            {
              if (!*(void *)(a1 + 2120) && (*(_DWORD *)(v25 + 96) - 1) <= 1)
              {
                double v31 = *(float *)(a1 + 1008);
                *(double *)(v25 + 88) = v31;
                double v22 = v22 + v31;
                *(double *)(v25 + 72) = v22;
              }
              uuid_copy((unsigned __int8 *)(v25 + 8), v5);
              sub_10041AF24(a1, v25);
              v25 += 152;
              if (v25 - *v24 == 3952)
              {
                uint64_t v32 = v24[1];
                ++v24;
                uint64_t v25 = v32;
              }
            }
          }
        }
        else
        {
          if (qword_102419000 != -1) {
            dispatch_once(&qword_102419000, &stru_1022B1FD0);
          }
          unsigned int v26 = qword_102419008;
          if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_FAULT))
          {
            int v27 = *(_DWORD *)(*(void *)(*((void *)&v33 + 1) + 8 * ((unint64_t)v35 / 0x1A))
                            + 152 * ((unint64_t)v35 % 0x1A)
                            + 108);
            uint64_t buf = 68289538;
            *(_WORD *)buf_8 = 2082;
            *(void *)&buf_8[2] = "";
            *(_WORD *)&buf_8[10] = 1026;
            *(_DWORD *)&buf_8[12] = HIDWORD(v54);
            *(_WORD *)&buf_8[16] = 1026;
            *(_DWORD *)&buf_8[18] = v27;
            _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Unexpected lap counts, skipping in-memory laps.\", \"persisted laps\":%{public}d, \"in-memory laps\":%{public}d}", (uint8_t *)&buf, 0x1Eu);
            if (qword_102419000 != -1) {
              dispatch_once(&qword_102419000, &stru_1022B1FD0);
            }
          }
          int v28 = qword_102419008;
          if (os_signpost_enabled((os_log_t)qword_102419008))
          {
            int v29 = *(_DWORD *)(*(void *)(*((void *)&v33 + 1) + 8 * ((unint64_t)v35 / 0x1A))
                            + 152 * ((unint64_t)v35 % 0x1A)
                            + 108);
            uint64_t buf = 68289538;
            *(_WORD *)buf_8 = 2082;
            *(void *)&buf_8[2] = "";
            *(_WORD *)&buf_8[10] = 1026;
            *(_DWORD *)&buf_8[12] = HIDWORD(v54);
            *(_WORD *)&buf_8[16] = 1026;
            *(_DWORD *)&buf_8[18] = v29;
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v28, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Unexpected lap counts, skipping in-memory laps.", "{\"msg%{public}.0s\":\"Unexpected lap counts, skipping in-memory laps.\", \"persisted laps\":%{public}d, \"in-memory laps\":%{public}d}", (uint8_t *)&buf, 0x1Eu);
          }
        }
      }
      sub_1000D801C(&v33);
    }
  }
}

void sub_10041958C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1004195B0(int64x2_t *a1)
{
  if (!a1[132].i64[1]) {
    sub_10041C440((uint64_t)a1);
  }
  a1[62] = vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
  a1[63].i32[0] = 1102504264;
  a1[63].i16[2] = 0;
  a1[136].i64[0] = 0x7FEFFFFFFFFFFFFFLL;
  a1[135].i32[0] = 6;
  unint64_t v2 = (void **)a1[10].i64[0];
  uint64_t v3 = a1[10].i64[1];
  a1[12].i64[0] = 0;
  unint64_t v4 = v3 - (void)v2;
  if (v4 >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v5 = a1[10].i64[1];
      unint64_t v2 = (void **)(a1[10].i64[0] + 8);
      a1[10].i64[0] = (uint64_t)v2;
      unint64_t v4 = v5 - (void)v2;
    }
    while (v4 > 0x10);
  }
  if (v4 >> 3 == 1)
  {
    uint64_t v6 = 13;
  }
  else
  {
    if (v4 >> 3 != 2) {
      goto LABEL_10;
    }
    uint64_t v6 = 26;
  }
  a1[11].i64[1] = v6;
LABEL_10:

  sub_100419678(a1);
}

void sub_100419678(void *a1)
{
  unint64_t v2 = (void **)a1[8];
  uint64_t v3 = a1[9];
  a1[12] = 0;
  unint64_t v4 = v3 - (void)v2;
  if (v4 >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v5 = a1[9];
      unint64_t v2 = (void **)(a1[8] + 8);
      a1[8] = v2;
      unint64_t v4 = v5 - (void)v2;
    }
    while (v4 > 0x10);
  }
  if (v4 >> 3 == 1)
  {
    uint64_t v6 = 85;
  }
  else
  {
    if (v4 >> 3 != 2) {
      goto LABEL_8;
    }
    uint64_t v6 = 170;
  }
  a1[11] = v6;
LABEL_8:
  a1[132] = 0;
  uint64_t v7 = (void **)a1[14];
  uint64_t v8 = a1[15];
  a1[18] = 0;
  unint64_t v9 = v8 - (void)v7;
  if (v9 >= 0x11)
  {
    do
    {
      operator delete(*v7);
      uint64_t v10 = a1[15];
      uint64_t v7 = (void **)(a1[14] + 8);
      a1[14] = v7;
      unint64_t v9 = v10 - (void)v7;
    }
    while (v9 > 0x10);
  }
  if (v9 >> 3 == 1)
  {
    uint64_t v11 = 85;
    goto LABEL_14;
  }
  if (v9 >> 3 == 2)
  {
    uint64_t v11 = 170;
LABEL_14:
    a1[17] = v11;
  }
  a1[5] = a1[4];
}

uint64_t sub_100419758(uint64_t a1, uint64_t a2, double a3, double a4)
{
  *(_DWORD *)(a1 + 2160) = 0;
  *(double *)(a1 + 2168) = a3;
  long long v6 = *(_OWORD *)(a2 + 208);
  v49[12] = *(_OWORD *)(a2 + 192);
  v49[13] = v6;
  uint64_t v50 = *(void *)(a2 + 224);
  long long v7 = *(_OWORD *)(a2 + 144);
  v49[8] = *(_OWORD *)(a2 + 128);
  v49[9] = v7;
  long long v8 = *(_OWORD *)(a2 + 160);
  v49[11] = *(_OWORD *)(a2 + 176);
  v49[10] = v8;
  long long v9 = *(_OWORD *)(a2 + 80);
  v49[4] = *(_OWORD *)(a2 + 64);
  v49[5] = v9;
  long long v10 = *(_OWORD *)(a2 + 96);
  v49[7] = *(_OWORD *)(a2 + 112);
  v49[6] = v10;
  long long v11 = *(_OWORD *)(a2 + 16);
  v49[0] = *(_OWORD *)a2;
  v49[1] = v11;
  long long v12 = *(_OWORD *)(a2 + 32);
  v49[3] = *(_OWORD *)(a2 + 48);
  _OWORD v49[2] = v12;
  double v52 = a4;
  double v51 = a3;
  sub_1001A34E0(a1 + 8, 1, (uint64_t)v49);
  if (*(void *)(a2 + 112) != 19 && !*(_DWORD *)(a1 + 2160)) {
    return 0;
  }
  memset(out, 0, 37);
  memset(v47, 0, 37);
  uuid_unparse((const unsigned __int8 *)(a2 + 64), out);
  uuid_unparse((const unsigned __int8 *)(a2 + 80), v47);
  if (qword_102419000 != -1) {
    dispatch_once(&qword_102419000, &stru_1022B1FD0);
  }
  double v13 = qword_102419008;
  if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_DEFAULT))
  {
    int v14 = *(_DWORD *)(a1 + 2160);
    if ((v14 - 1) > 5) {
      uint64_t v15 = "None";
    }
    else {
      uint64_t v15 = off_1022B20C0[v14 - 1];
    }
    uint64_t v16 = *(void *)(a1 + 2120);
    double v17 = *(float *)(a1 + 1008);
    uint64_t v18 = *(void *)(a2 + 128);
    uint64_t v19 = *(void *)(a2 + 136);
    int v20 = *(unsigned __int8 *)(a1 + 24);
    uint64_t v21 = *(void *)(a2 + 16);
    uint64_t v22 = *(void *)(a2 + 112);
    *(_DWORD *)uint64_t buf = 136448770;
    unsigned int v26 = v15;
    __int16 v27 = 2082;
    int v28 = out;
    __int16 v29 = 2082;
    unint64_t v30 = v47;
    __int16 v31 = 1026;
    int v32 = v14;
    __int16 v33 = 2050;
    uint64_t v34 = v16;
    __int16 v35 = 2050;
    uint64_t v36 = v18;
    __int16 v37 = 2050;
    double v38 = v17;
    __int16 v39 = 2050;
    uint64_t v40 = v19;
    __int16 v41 = 1024;
    int v42 = v20;
    __int16 v43 = 2048;
    uint64_t v44 = v21;
    __int16 v45 = 2048;
    uint64_t v46 = v22;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "SwimDataStoreEvent,%{public}s,sessionId,%{public}s,overviewId,%{public}s,updateType,%{public}d,swimLocation,%{public}ld,swimLocationEvent,%{public}ld,poolLength,%{public}f,poolLengthEvent,%{public}f,state,%d,workoutEvent,%ld,workoutType,%ld", buf, 0x68u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419000 != -1) {
      dispatch_once(&qword_102419000, &stru_1022B1FD0);
    }
    BOOL v24 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLSwimDataStore::SessionUpdate CLSwimDataStore::feedWorkoutEvent(const CLMotionStateMediator_Type::WorkoutEvent &, CFAbsoluteTime, CLMotionTypeTimestamp)", "%s\n", v24);
    if (v24 != (char *)buf) {
      free(v24);
    }
  }
  return *(unsigned int *)(a1 + 2160);
}

BOOL sub_100419B40(uint64_t a1, void *a2)
{
  return a2[2] == 20 && a2[14] == 19 && a2[16] < 2uLL;
}

BOOL sub_100419B70(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0;
  }
  float v3 = *(double *)(a2 + 136);
  BOOL result = sub_100418DE4(v2, (const unsigned __int8 *)(a2 + 64), *(void *)(a2 + 128), 0, v3, *(double *)(a2 + 232));
  *(_DWORD *)(v2 + 2160) = 1;
  return result;
}

BOOL sub_100419BC4(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 128);
  BOOL v3 = v2 == 1 || *(double *)(a2 + 136) > 0.0 && v2 == 0;
  BOOL v5 = v2 < 2 && v3;
  if (*(void *)(a2 + 16)) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = *(void *)(a2 + 112) == 19;
  }
  return v6 && v5;
}

BOOL sub_100419C08(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0;
  }
  float v3 = *(double *)(a2 + 136);
  BOOL result = sub_100418DE4(v2, (const unsigned __int8 *)(a2 + 64), *(void *)(a2 + 128), 1, v3, *(double *)(a2 + 232));
  *(_DWORD *)(v2 + 2160) = 2;
  return result;
}

BOOL sub_100419C5C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0;
  }
  return sub_100418D34(v2, a2);
}

BOOL sub_100419C6C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = (int64x2_t *)(a1 - 8);
  }
  else {
    uint64_t v2 = 0;
  }
  return sub_100418F4C(v2, a2);
}

BOOL sub_100419C7C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0;
  }
  return sub_100418D8C(v2, a2);
}

void sub_100419C8C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a1 - 8;
  }
  else {
    uint64_t v2 = 0;
  }
  float v3 = *(double *)(a2 + 136);
  sub_100418FCC(v2, (const unsigned __int8 *)(a2 + 64), *(void *)(a2 + 128), v3);
  *(_DWORD *)(v2 + 2160) = 4;
}

BOOL sub_100419CD8(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 16) == 1 && *(void *)(a2 + 112) == 19;
}

int64x2_t sub_100419CFC(uint64_t a1)
{
  if (a1) {
    uint64_t v1 = (int64x2_t *)(a1 - 8);
  }
  else {
    uint64_t v1 = 0;
  }
  if (!v1[132].i64[1]) {
    sub_10041C440((uint64_t)v1);
  }
  int64x2_t result = vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
  v1[62] = result;
  v1[63].i32[0] = 1102504264;
  v1[63].i16[2] = 0;
  v1[136].i64[0] = 0x7FEFFFFFFFFFFFFFLL;
  v1[135].i32[0] = 5;
  return result;
}

BOOL sub_100419D60(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 16) == 21 && *(void *)(a2 + 112) == 19;
}

void sub_100419D84(uint64_t a1)
{
  if (a1) {
    sub_1004195B0((int64x2_t *)(a1 - 8));
  }
  else {
    sub_1004195B0(0);
  }
}

uint64_t sub_100419D94(uint64_t a1)
{
  *(void *)(a1 + 8) = &unk_1022B1E08;
  *(void *)(a1 + 16) = 7;
  *(_WORD *)(a1 + 24) = 512;
  *(_OWORD *)(a1 + 32) = 0u;
  *(void *)a1 = off_1022B1EC0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(void *)(a1 + 192) = 0;
  *(int64x2_t *)(a1 + 992) = vdupq_n_s64(0xFFEFFFFFFFFFFFFFLL);
  *(_DWORD *)(a1 + 1008) = 1102504264;
  *(_WORD *)(a1 + 1012) = 0;
  *(_OWORD *)(a1 + 1048) = 0u;
  *(_DWORD *)(a1 + 1064) = -1082130432;
  *(_WORD *)(a1 + 1068) = 0;
  sub_100E4E1CC(a1 + 1072);
  sub_100D56A98(a1 + 1544);
  sub_1013F9254(a1 + 1648, a1);
  *(_OWORD *)(a1 + 2104) = 0u;
  sub_101220FD8((_OWORD *)(a1 + 2128));
  *(void *)(a1 + 2176) = 0x7FEFFFFFFFFFFFFFLL;
  memcpy((void *)(a1 + 200), &unk_101D1E4D8, 0x310uLL);
  for (uint64_t i = 984; i != 991; ++i)
    *(unsigned char *)(a1 + i) = 0;
  uuid_parse("00000000-0000-0000-0000-000000000000", (unsigned __int8 *)(a1 + 1030));
  uuid_parse("00000000-0000-0000-0000-000000000000", (unsigned __int8 *)(a1 + 1014));
  return a1;
}

void sub_100419ED8(_Unwind_Exception *a1)
{
  sub_100E4E1D0(v2);
  sub_1000D801C(v1 + 19);
  sub_1000D816C(v1 + 13);
  sub_1000D816C(v1 + 7);
  BOOL v5 = *v3;
  if (*v3)
  {
    v1[5] = v5;
    operator delete(v5);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100419F34(uint64_t a1)
{
  *(void *)a1 = off_1022B2000;
  sub_1000F5BB0(a1 + 64, *(void **)(a1 + 72));
  sub_10041F48C((void *)(a1 + 16));
  return a1;
}

uint64_t sub_100419F88(uint64_t a1)
{
  *(void *)a1 = off_1022B1EC0;
  *(void *)(a1 + 1544) = off_1022B2000;
  sub_1000F5BB0(a1 + 1608, *(void **)(a1 + 1616));
  sub_10041F48C((void *)(a1 + 1560));
  sub_100E4E1D0(a1 + 1072);
  sub_1000D801C((void *)(a1 + 152));
  sub_1000D816C((void *)(a1 + 104));
  sub_1000D816C((void *)(a1 + 56));
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2)
  {
    *(void *)(a1 + 40) = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_10041A030(uint64_t a1)
{
  sub_100419F88(a1);

  operator delete();
}

float sub_10041A068(uint64_t a1)
{
  (*(void (**)(void *__return_ptr))(*(void *)a1 + 160))(v2);
  return 38.0 / *(double *)&v2[6];
}

__n128 sub_10041A0F0@<Q0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2 = (char *)&unk_101D1E4D8 + 112 * a1;
  long long v3 = *((_OWORD *)v2 + 5);
  *(_OWORD *)(a2 + 64) = *((_OWORD *)v2 + 4);
  *(_OWORD *)(a2 + 80) = v3;
  *(_OWORD *)(a2 + 96) = *((_OWORD *)v2 + 6);
  long long v4 = *((_OWORD *)v2 + 1);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_OWORD *)(a2 + 16) = v4;
  __n128 result = *((__n128 *)v2 + 3);
  *(_OWORD *)(a2 + 32) = *((_OWORD *)v2 + 2);
  *(__n128 *)(a2 + 48) = result;
  return result;
}

BOOL sub_10041A124(uint64_t a1)
{
  __int16 v70 = 0;
  double v71 = 0;
  uint64_t v72 = 0;
  uint64_t v2 = a1 + 1072;
  int v3 = sub_100E4F15C(a1 + 1072);
  long long v4 = *(void ***)(a1 + 160);
  uint64_t v5 = *(void *)(a1 + 168);
  *(void *)(a1 + 192) = 0;
  unint64_t v6 = v5 - (void)v4;
  if (v6 >= 0x11)
  {
    do
    {
      operator delete(*v4);
      uint64_t v7 = *(void *)(a1 + 168);
      long long v4 = (void **)(*(void *)(a1 + 160) + 8);
      *(void *)(a1 + 160) = v4;
      unint64_t v6 = v7 - (void)v4;
    }
    while (v6 > 0x10);
  }
  if (v6 >> 3 == 1)
  {
    uint64_t v8 = 13;
  }
  else
  {
    if (v6 >> 3 != 2) {
      goto LABEL_8;
    }
    uint64_t v8 = 26;
  }
  *(void *)(a1 + 184) = v8;
LABEL_8:
  *(unsigned char *)(a1 + 1069) = 0;
  long long v9 = (char *)v70;
  if (v70 != v71)
  {
    do
    {
      sub_10041EF18((void *)(a1 + 152), (uint64_t)v9);
      v9 += 152;
    }
    while (v9 != v71);
  }
  if (v3 == 100)
  {
    if (v70 == v71)
    {
      int v10 = 0;
      int v11 = 0;
    }
    else
    {
      int v10 = *((_DWORD *)v71 - 12);
      int v11 = *((_DWORD *)v71 - 2);
    }
    *(_DWORD *)(a1 + 1056) = v10;
    *(_DWORD *)(a1 + 1060) = v11;
    sub_100E4E250(v2, buf);
    int v14 = *(void **)(a1 + 32);
    if (v14)
    {
      *(void *)(a1 + 40) = v14;
      operator delete(v14);
      *(void *)(a1 + 32) = 0;
      *(void *)(a1 + 40) = 0;
      *(void *)(a1 + 48) = 0;
    }
    uint64_t v15 = *(const unsigned __int8 **)buf;
    *(void *)(a1 + 32) = *(void *)buf;
    uint64_t v16 = *(const unsigned __int8 **)&buf[8];
    *(_OWORD *)(a1 + 40) = *(_OWORD *)&buf[8];
    if (v15 == v16)
    {
      memset(out, 0, 24);
      __int16 v68 = 0;
      uint64_t v69 = 0;
      int v67 = &v68;
    }
    else
    {
      do
      {
        double v17 = v15;
        memset(v104, 0, sizeof(v104));
        memset(out, 0, sizeof(out));
        uuid_unparse(v15, out);
        uuid_unparse(v17 + 16, v104);
        if (qword_102419000 != -1) {
          dispatch_once(&qword_102419000, &stru_1022B1FD0);
        }
        uint64_t v18 = qword_102419008;
        if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_DEBUG))
        {
          int v19 = *((_DWORD *)v17 + 10);
          uint64_t v20 = *((void *)v17 + 4);
          uint64_t v22 = *((void *)v17 + 6);
          uint64_t v21 = *((void *)v17 + 7);
          uint64_t v23 = *((void *)v17 + 9);
          uint64_t v24 = *((void *)v17 + 10);
          int v25 = *((_DWORD *)v17 + 16);
          uint64_t v26 = *((void *)v17 + 11);
          uint64_t v27 = *((void *)v17 + 12);
          uint64_t v28 = *((void *)v17 + 13);
          *(_DWORD *)uint64_t buf = 136317954;
          *(void *)&uint8_t buf[4] = out;
          *(_WORD *)&buf[12] = 1024;
          *(_DWORD *)&buf[14] = v19;
          *(_WORD *)&unsigned char buf[18] = 2048;
          *(void *)&buf[20] = v20;
          *(_WORD *)&buf[28] = 2048;
          *(void *)&buf[30] = v21;
          *(_WORD *)&buf[38] = 2048;
          *(void *)&buf[40] = v22;
          *(_WORD *)&buf[48] = 2048;
          *(void *)&buf[50] = v23;
          __int16 v91 = 2048;
          uint64_t v92 = v24;
          __int16 v93 = 2048;
          uint64_t v94 = v26;
          __int16 v95 = 1024;
          int v96 = v25;
          __int16 v97 = 2048;
          uint64_t v98 = v27;
          __int16 v99 = 2048;
          uint64_t v100 = v28;
          __int16 v101 = 2080;
          long long v102 = v104;
          _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "Historical-Distributions, loiUuid, %s, style, %d, poolLength, %f, median, %f, mean, %f, stddev, %f, min, %f, max, %f, samples, %d, prctile10, %f, prctile90, %f, uuid, %s", buf, 0x72u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419000 != -1) {
            dispatch_once(&qword_102419000, &stru_1022B1FD0);
          }
          int v29 = *((_DWORD *)v17 + 10);
          uint64_t v30 = *((void *)v17 + 4);
          uint64_t v32 = *((void *)v17 + 6);
          uint64_t v31 = *((void *)v17 + 7);
          uint64_t v33 = *((void *)v17 + 9);
          uint64_t v34 = *((void *)v17 + 10);
          int v35 = *((_DWORD *)v17 + 16);
          uint64_t v36 = *((void *)v17 + 11);
          uint64_t v37 = *((void *)v17 + 12);
          uint64_t v38 = *((void *)v17 + 13);
          *(_DWORD *)std::string __p = 136317954;
          *(void *)&__p[4] = out;
          *(_WORD *)&__p[12] = 1024;
          *(_DWORD *)&__p[14] = v29;
          *(_WORD *)&__p[18] = 2048;
          *(void *)&__p[20] = v30;
          *(_WORD *)&__p[28] = 2048;
          *(void *)&__p[30] = v31;
          __int16 v74 = 2048;
          uint64_t v75 = v32;
          __int16 v76 = 2048;
          uint64_t v77 = v33;
          __int16 v78 = 2048;
          uint64_t v79 = v34;
          __int16 v80 = 2048;
          uint64_t v81 = v36;
          __int16 v82 = 1024;
          int v83 = v35;
          __int16 v84 = 2048;
          uint64_t v85 = v37;
          __int16 v86 = 2048;
          uint64_t v87 = v38;
          __int16 v88 = 2080;
          long long v89 = v104;
          __int16 v39 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLSwimDataStore::reloadStateFromPersistentStore()", "%s\n", v39);
          if (v39 != buf) {
            free(v39);
          }
        }
        uint64_t v15 = v17 + 112;
      }
      while (v17 + 112 != *(const unsigned __int8 **)(a1 + 40));
      uint64_t v40 = *(void *)(a1 + 32);
      memset(out, 0, 24);
      __int16 v68 = 0;
      uint64_t v69 = 0;
      int v67 = &v68;
      if (v17 + 112 != (const unsigned __int8 *)v40)
      {
        do
        {
          memset(__p, 0, 37);
          uuid_unparse((const unsigned __int8 *)(v40 + 16), __p);
          sub_100134750(buf, __p);
          if (out[23] < 0) {
            operator delete(*(void **)out);
          }
          *(_OWORD *)uuid_string_t out = *(_OWORD *)buf;
          *(void *)&out[16] = *(void *)&buf[16];
          __int16 v41 = (char **)sub_10012FFE0((uint64_t)&v67, (const void **)out);
          if (&v68 == v41)
          {
            memset(v104, 0, 28);
            *(_DWORD *)&v104[4 * *(int *)(v40 + 40)] = *(_DWORD *)(v40 + 64);
            if (out[23] < 0)
            {
              sub_1000DC48C(buf, *(void **)out, *(unint64_t *)&out[8]);
            }
            else
            {
              *(_OWORD *)uint64_t buf = *(_OWORD *)out;
              *(void *)&uint8_t buf[16] = *(void *)&out[16];
            }
            *(_OWORD *)&buf[24] = *(_OWORD *)v104;
            *(_OWORD *)&buf[36] = *(_OWORD *)&v104[12];
            sub_10041F84C((uint64_t **)&v67, (const void **)buf, (uint64_t)buf);
            if ((buf[23] & 0x80000000) != 0) {
              operator delete(*(void **)buf);
            }
          }
          else
          {
            int v42 = (char *)v41 + 4 * *(int *)(v40 + 40);
            int v43 = *(_DWORD *)(v40 + 64);
            if (v43 <= *((_DWORD *)v42 + 14)) {
              int v43 = *((_DWORD *)v42 + 14);
            }
            *((_DWORD *)v42 + 14) = v43;
          }
          v40 += 112;
        }
        while (v40 != *(void *)(a1 + 40));
        uint64_t v44 = (uint64_t *)v67;
        memset(__p, 0, 24);
        if (v67 != &v68)
        {
          __int16 v45 = 0;
          do
          {
            int v46 = 0;
            for (uint64_t i = 56; i != 84; i += 4)
              v46 += *(_DWORD *)((char *)v44 + i);
            float v48 = (float)v46;
            if ((unint64_t)v45 >= *(void *)&__p[16])
            {
              long long v49 = *(float **)__p;
              uint64_t v50 = ((uint64_t)v45 - *(void *)__p) >> 2;
              unint64_t v51 = v50 + 1;
              if ((unint64_t)(v50 + 1) >> 62) {
                sub_1001D7FD4();
              }
              uint64_t v52 = *(void *)&__p[16] - *(void *)__p;
              if ((uint64_t)(*(void *)&__p[16] - *(void *)__p) >> 1 > v51) {
                unint64_t v51 = v52 >> 1;
              }
              if ((unint64_t)v52 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v53 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v53 = v51;
              }
              if (v53)
              {
                long long v54 = (char *)sub_10017EA34((uint64_t)&__p[16], v53);
                long long v49 = *(float **)__p;
                __int16 v45 = *(float **)&__p[8];
              }
              else
              {
                long long v54 = 0;
              }
              long long v55 = (float *)&v54[4 * v50];
              float *v55 = v48;
              long long v56 = v55 + 1;
              while (v45 != v49)
              {
                int v57 = *((_DWORD *)v45-- - 1);
                *((_DWORD *)v55-- - 1) = v57;
              }
              *(void *)std::string __p = v55;
              *(void *)&__p[8] = v56;
              *(void *)&__p[16] = &v54[4 * v53];
              if (v49) {
                operator delete(v49);
              }
              __int16 v45 = v56;
            }
            else
            {
              *v45++ = v48;
            }
            *(void *)&__p[8] = v45;
            __int16 v58 = (char *)v44[1];
            if (v58)
            {
              do
              {
                int v59 = (char **)v58;
                __int16 v58 = *(char **)v58;
              }
              while (v58);
            }
            else
            {
              do
              {
                int v59 = (char **)v44[2];
                BOOL v60 = *v59 == (char *)v44;
                uint64_t v44 = (uint64_t *)v59;
              }
              while (!v60);
            }
            uint64_t v44 = (uint64_t *)v59;
          }
          while (v59 != &v68);
          if (*(float **)__p != v45)
          {
            sub_100E0AB2C(buf, __p);
            double v61 = sub_100E0AB24((uint64_t)buf);
            *(_DWORD *)(a1 + 1064) = LODWORD(v61);
            if (*(void *)&buf[24])
            {
              *(void *)&buf[32] = *(void *)&buf[24];
              operator delete(*(void **)&buf[24]);
            }
            goto LABEL_83;
          }
        }
LABEL_82:
        *(_DWORD *)(a1 + 1064) = -1082130432;
LABEL_83:
        if (qword_102419000 != -1) {
          dispatch_once(&qword_102419000, &stru_1022B1FD0);
        }
        __int16 v62 = qword_102419008;
        if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_DEBUG))
        {
          double v63 = *(float *)(a1 + 1064);
          *(_DWORD *)uint64_t buf = 134218240;
          *(double *)&uint8_t buf[4] = v63;
          *(_WORD *)&buf[12] = 2048;
          *(void *)&buf[14] = (uint64_t)(*(void *)&__p[8] - *(void *)__p) >> 2;
          _os_log_impl((void *)&_mh_execute_header, v62, OS_LOG_TYPE_DEBUG, "Historical median turns per session, median, %f, Nsessions, %lu", buf, 0x16u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419000 != -1) {
            dispatch_once(&qword_102419000, &stru_1022B1FD0);
          }
          double v65 = *(float *)(a1 + 1064);
          *(_DWORD *)uuid_string_t v104 = 134218240;
          *(double *)&v104[4] = v65;
          *(_WORD *)&v104[12] = 2048;
          *(void *)&v104[14] = (uint64_t)(*(void *)&__p[8] - *(void *)__p) >> 2;
          __int16 v66 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLSwimDataStore::reloadStateFromPersistentStore()", "%s\n", v66);
          if (v66 != buf) {
            free(v66);
          }
        }
        if (*(void *)__p)
        {
          *(void *)&__p[8] = *(void *)__p;
          operator delete(*(void **)__p);
        }
        sub_1000DB264((uint64_t)&v67, v68);
        if (out[23] < 0) {
          operator delete(*(void **)out);
        }
        goto LABEL_92;
      }
    }
    memset(__p, 0, 24);
    goto LABEL_82;
  }
  if (qword_102419000 != -1) {
    dispatch_once(&qword_102419000, &stru_1022B1FD0);
  }
  long long v12 = qword_102419008;
  if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_FAULT))
  {
    *(_DWORD *)uint64_t buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_FAULT, "Did not successfully load state from db! CMError, %d", buf, 8u);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419000 != -1) {
      dispatch_once(&qword_102419000, &stru_1022B1FD0);
    }
    *(_DWORD *)std::string __p = 67109120;
    *(_DWORD *)&__p[4] = v3;
    double v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLSwimDataStore::reloadStateFromPersistentStore()", "%s\n", v13);
    if (v13 != buf) {
      free(v13);
    }
  }
LABEL_92:
  if (v70)
  {
    double v71 = (char *)v70;
    operator delete(v70);
  }
  return v3 == 100;
}

void sub_10041AB34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char *a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,void *a43,uint64_t a44)
{
  if (__p)
  {
    a22 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_1000DB264((uint64_t)&a15, a16);
  if (*(char *)(v44 - 185) < 0) {
    operator delete(*(void **)(v44 - 208));
  }
  if (a18)
  {
    a19 = (uint64_t)a18;
    operator delete(a18);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10041ABE8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 1068)) {
    return 0;
  }
  double v2 = *(double *)(a1 + 992);
  if (v2 < 0.0) {
    return 0;
  }
  double v3 = *(double *)(a1 + 1000);
  if (v3 < 0.0) {
    return 0;
  }
  memset(v10, 0, sizeof(v10));
  uint64_t v5 = *(void *)(a1 + 192);
  if (v5)
  {
    sub_10041AE98(a1, *(void *)(*(void *)(a1 + 160) + 8 * ((v5 + *(void *)(a1 + 184) - 1) / 0x1AuLL))+ 152 * ((v5 + *(void *)(a1 + 184) - 1) % 0x1AuLL), (uint64_t)v10);
  }
  else
  {
    memset(&v10[40], 0, 32);
    if (v2 < 2.22044605e-16) {
      double v2 = 2.22044605e-16;
    }
    memset(&v10[88], 0, 64);
    *(_OWORD *)&v10[72] = 0uLL;
    memset(&v10[8], 0, 32);
    *(void *)int v10 = 0x7FFFFFFFFFFFFFFFLL;
    *(double *)&v10[40] = v2;
    *(double *)&unsigned char v10[48] = v2;
    *(_DWORD *)&v10[96] = 4;
    double v6 = *(float *)(a1 + 1008);
    *(double *)&v10[56] = v3;
    *(double *)&v10[88] = v6;
    *(_OWORD *)&v10[128] = 0uLL;
    uuid_copy(&v10[8], (const unsigned __int8 *)(a1 + 1014));
  }
  sub_10041AF24(a1, (uint64_t)v10);
  sub_100B02B4C((double *)(a1 + 2104), (uint64_t)v10);
  if (qword_102419000 != -1) {
    dispatch_once(&qword_102419000, &stru_1022B1FD0);
  }
  uint64_t v7 = qword_102419008;
  if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "Set first session entry", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419000 != -1) {
      dispatch_once(&qword_102419000, &stru_1022B1FD0);
    }
    uint64_t v8 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLSwimDataStore::setFirstEntry()", "%s\n", v8);
    if (v8 != (char *)buf) {
      free(v8);
    }
  }
  return 1;
}

void sub_10041AE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v3 = *(double *)(a2 + 48) + 2.22044605e-16;
  if (*(double *)(a1 + 992) >= v3) {
    double v3 = *(double *)(a1 + 992);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a2;
  long long v6 = *(_OWORD *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a3 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a3 + 64) = v6;
  *(_OWORD *)(a3 + 16) = v4;
  *(_OWORD *)(a3 + 32) = v7;
  *(_OWORD *)(a3 + 80) = v5;
  long long v8 = *(_OWORD *)(a2 + 96);
  long long v9 = *(_OWORD *)(a2 + 112);
  long long v10 = *(_OWORD *)(a2 + 128);
  *(void *)(a3 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a3 + 112) = v9;
  *(_OWORD *)(a3 + 128) = v10;
  *(_OWORD *)(a3 + 96) = v8;
  *(void *)a3 = 0x7FFFFFFFFFFFFFFFLL;
  *(double *)(a3 + 40) = v3;
  *(double *)(a3 + 48) = v3;
  *(void *)(a3 + 56) = *(void *)(a1 + 1000);
  *(_DWORD *)(a3 + 96) = 4;
  *(double *)(a3 + 88) = *(float *)(a1 + 1008);
  *(void *)(a3 + 128) = 0;
  *(void *)(a3 + 136) = 0;
  uuid_copy((unsigned __int8 *)(a3 + 8), (const unsigned __int8 *)(a1 + 1014));
}

void sub_10041AF24(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = 0;
  long long v62 = 0u;
  long long v63 = 0u;
  long long v60 = 0u;
  long long v61 = 0u;
  long long v58 = 0u;
  long long v59 = 0u;
  long long v56 = 0u;
  long long v57 = 0u;
  long long v55 = 0u;
  sub_10041EB44(a1, a2, (uint64_t)&v55);
  memset(out, 0, 37);
  uuid_unparse((const unsigned __int8 *)&v55 + 8, out);
  if (*(unsigned char *)(a1 + 1012))
  {
    if (qword_102419000 != -1) {
      dispatch_once(&qword_102419000, &stru_1022B1FD0);
    }
    double v3 = qword_102419008;
    if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 134221826;
      uint64_t v23 = *((void *)&v57 + 1);
      __int16 v24 = 2048;
      uint64_t v25 = v58;
      __int16 v26 = 2048;
      uint64_t v27 = *((void *)&v58 + 1);
      __int16 v28 = 2048;
      uint64_t v29 = *((void *)&v59 + 1);
      __int16 v30 = 2048;
      uint64_t v31 = v60;
      __int16 v32 = 2048;
      uint64_t v33 = *((void *)&v60 + 1);
      __int16 v34 = 1024;
      int v35 = v61;
      __int16 v36 = 1024;
      int v37 = DWORD1(v61);
      __int16 v38 = 1024;
      int v39 = DWORD2(v61);
      __int16 v40 = 1024;
      int v41 = HIDWORD(v61);
      __int16 v42 = 1024;
      int v43 = DWORD2(v62);
      __int16 v44 = 2048;
      uint64_t v45 = v63;
      __int16 v46 = 2048;
      uint64_t v47 = *((void *)&v63 + 1);
      __int16 v48 = 2048;
      double v49 = *(double *)&v58 - *((double *)&v57 + 1);
      __int16 v50 = 2080;
      unint64_t v51 = out;
      __int16 v52 = 1024;
      int v53 = v64;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Persisting Swim Entry,startTime,%f,endTime,%f,timestamp,%f,distance,%f,distanceTimestamp,%f,poolLength,%f,type,%d,style,%d,strokes,%d,laps,%d,segment,%d,SWOLF,%f,segmentSWOLF,%f,lapTime,%f,uuid,%s,kickCount,%d", buf, 0x8Au);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419000 != -1) {
        dispatch_once(&qword_102419000, &stru_1022B1FD0);
      }
      LODWORD(v18[0]) = 134221826;
      *(void *)((char *)v18 + 4) = *((void *)&v57 + 1);
      WORD6(v18[0]) = 2048;
      *(void *)((char *)v18 + 14) = v58;
      WORD3(v18[1]) = 2048;
      *((void *)&v18[1] + 1) = *((void *)&v58 + 1);
      LOWORD(v18[2]) = 2048;
      *(void *)((char *)&v18[2] + 2) = *((void *)&v59 + 1);
      WORD5(v18[2]) = 2048;
      *(void *)((char *)&v18[2] + 12) = v60;
      WORD2(v18[3]) = 2048;
      *(void *)((char *)&v18[3] + 6) = *((void *)&v60 + 1);
      HIWORD(v18[3]) = 1024;
      LODWORD(v19) = v61;
      WORD2(v19) = 1024;
      *(_DWORD *)((char *)&v19 + 6) = DWORD1(v61);
      WORD5(v19) = 1024;
      HIDWORD(v19) = DWORD2(v61);
      LOWORD(v20[0]) = 1024;
      *(_DWORD *)((char *)v20 + 2) = HIDWORD(v61);
      WORD3(v20[0]) = 1024;
      DWORD2(v20[0]) = DWORD2(v62);
      WORD6(v20[0]) = 2048;
      *(void *)((char *)v20 + 14) = v63;
      WORD3(v20[1]) = 2048;
      *((void *)&v20[1] + 1) = *((void *)&v63 + 1);
      LOWORD(v20[2]) = 2048;
      *(double *)((char *)&v20[2] + 2) = *(double *)&v58 - *((double *)&v57 + 1);
      WORD5(v20[2]) = 2080;
      *(void *)((char *)&v20[2] + 12) = out;
      WORD2(v20[3]) = 1024;
      *(_DWORD *)((char *)&v20[3] + 6) = v64;
      int v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLSwimDataStore::persistSwimEntry(const CLSwimEntry &)", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
    }
    if (*((double *)&v57 + 1) <= *(double *)&v58)
    {
      long long v7 = (char *)operator new(0x98uLL);
      std::string __p = v7;
      double v17 = v7 + 152;
      long long v8 = v62;
      *((_OWORD *)v7 + 6) = v61;
      *((_OWORD *)v7 + 7) = v8;
      *((_OWORD *)v7 + 8) = v63;
      *((void *)v7 + 18) = v64;
      long long v9 = v58;
      *((_OWORD *)v7 + 2) = v57;
      *((_OWORD *)v7 + 3) = v9;
      long long v10 = v60;
      *((_OWORD *)v7 + 4) = v59;
      *((_OWORD *)v7 + 5) = v10;
      long long v11 = v56;
      *(_OWORD *)long long v7 = v55;
      *((_OWORD *)v7 + 1) = v11;
      uint64_t v16 = v7 + 152;
      sub_100E502BC((uint64_t *)(a1 + 1072), (uint64_t *)&__p);
      if (__p)
      {
        uint64_t v16 = __p;
        operator delete(__p);
      }
      uint64_t v21 = 0;
      memset(v20, 0, sizeof(v20));
      long long v19 = 0u;
      memset(v18, 0, sizeof(v18));
      if (sub_100E4FD3C((void *)(a1 + 1072), (uint64_t)v18) == 100)
      {
        unint64_t v12 = *(void *)(a1 + 192);
        if (v12 >= 0xC9)
        {
          do
          {
            *(void *)(a1 + 192) = v12 - 1;
            ++*(void *)(a1 + 184);
            sub_10041F9E4(a1 + 152, 1);
            unint64_t v12 = *(void *)(a1 + 192);
          }
          while (v12 > 0xC8);
        }
        sub_10041EF18((void *)(a1 + 152), (uint64_t)v18);
        *(unsigned char *)(a1 + 1013) = 1;
      }
      else
      {
        if (qword_102419000 != -1) {
          dispatch_once(&qword_102419000, &stru_1022B1FD0);
        }
        double v13 = qword_102419008;
        if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_FAULT, "Failure to store lap due to database inaccessibility.", buf, 2u);
        }
        if (sub_10013D1A0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419000 != -1) {
            dispatch_once(&qword_102419000, &stru_1022B1FD0);
          }
          long long v5 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "void CLSwimDataStore::persistSwimEntry(const CLSwimEntry &)", "%s\n", v5);
          goto LABEL_43;
        }
      }
    }
    else
    {
      if (qword_102419000 != -1) {
        dispatch_once(&qword_102419000, &stru_1022B1FD0);
      }
      long long v4 = qword_102419008;
      if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_FAULT))
      {
        *(_DWORD *)uint64_t buf = 134218240;
        uint64_t v23 = *((void *)&v57 + 1);
        __int16 v24 = 2048;
        uint64_t v25 = v58;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "Failure to store lap due to time rollback, startTime, %f, > endTime, %f", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419000 != -1) {
          dispatch_once(&qword_102419000, &stru_1022B1FD0);
        }
        LODWORD(v18[0]) = 134218240;
        *(void *)((char *)v18 + 4) = *((void *)&v57 + 1);
        WORD6(v18[0]) = 2048;
        *(void *)((char *)v18 + 14) = v58;
        long long v5 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLSwimDataStore::persistSwimEntry(const CLSwimEntry &)", "%s\n", v5);
LABEL_43:
        if (v5 != (char *)buf) {
          free(v5);
        }
      }
    }
  }
  else
  {
    sub_10041EF18((void *)(a1 + 152), (uint64_t)&v55);
    if (qword_102419000 != -1) {
      dispatch_once(&qword_102419000, &stru_1022B1FD0);
    }
    long long v6 = qword_102419008;
    if (os_log_type_enabled((os_log_t)qword_102419008, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 134221826;
      uint64_t v23 = *((void *)&v57 + 1);
      __int16 v24 = 2048;
      uint64_t v25 = v58;
      __int16 v26 = 2048;
      uint64_t v27 = *((void *)&v58 + 1);
      __int16 v28 = 2048;
      uint64_t v29 = *((void *)&v59 + 1);
      __int16 v30 = 2048;
      uint64_t v31 = v60;
      __int16 v32 = 2048;
      uint64_t v33 = *((void *)&v60 + 1);
      __int16 v34 = 1024;
      int v35 = v61;
      __int16 v36 = 1024;
      int v37 = DWORD1(v61);
      __int16 v38 = 1024;
      int v39 = DWORD2(v61);
      __int16 v40 = 1024;
      int v41 = HIDWORD(v61);
      __int16 v42 = 1024;
      int v43 = DWORD2(v62);
      __int16 v44 = 2048;
      uint64_t v45 = v63;
      __int16 v46 = 2048;
      uint64_t v47 = *((void *)&v63 + 1);
      __int16 v48 = 2048;
      double v49 = *(double *)&v58 - *((double *)&v57 + 1);
      __int16 v50 = 2080;
      unint64_t v51 = out;
      __int16 v52 = 1024;
      int v53 = v64;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Deferring Swim Entry,startTime,%f,endTime,%f,timestamp,%f,distance,%f,distanceTimestamp,%f,poolLength,%f,type,%d,style,%d,strokes,%d,laps,%d,segment,%d,SWOLF,%f,segmentSWOLF,%f,lapTime,%f,uuid,%s,kickCount,%d", buf, 0x8Au);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419000 != -1) {
        dispatch_once(&qword_102419000, &stru_1022B1FD0);
      }
      LODWORD(v18[0]) = 134221826;
      *(void *)((char *)v18 + 4) = *((void *)&v57 + 1);
      WORD6(v18[0]) = 2048;
      *(void *)((char *)v18 + 14) = v58;
      WORD3(v18[1]) = 2048;
      *((void *)&v18[1] + 1) = *((void *)&v58 + 1);
      LOWORD(v18[2]) = 2048;
      *(void *)((char *)&v18[2] + 2) = *((void *)&v59 + 1);
      WORD5(v18[2]) = 2048;
      *(void *)((char *)&v18[2] + 12) = v60;
      WORD2(v18[3]) = 2048;
      *(void *)((char *)&v18[3] + 6) = *((void *)&v60 + 1);
      HIWORD(v18[3]) = 1024;
      LODWORD(v19) = v61;
      WORD2(v19) = 1024;
      *(_DWORD *)((char *)&v19 + 6) = DWORD1(v61);
      WORD5(v19) = 1024;
      HIDWORD(v19) = DWORD2(v61);
      LOWORD(v20[0]) = 1024;
      *(_DWORD *)((char *)v20 + 2) = HIDWORD(v61);
      WORD3(v20[0]) = 1024;
      DWORD2(v20[0]) = DWORD2(v62);
      WORD6(v20[0]) = 2048;
      *(void *)((char *)v20 + 14) = v63;
      WORD3(v20[1]) = 2048;
      *((void *)&v20[1] + 1) = *((void *)&v63 + 1);
      LOWORD(v20[2]) = 2048;
      *(double *)((char *)&v20[2] + 2) = *(double *)&v58 - *((double *)&v57 + 1);
      WORD5(v20[2]) = 2080;
      *(void *)((char *)&v20[2] + 12) = out;
      WORD2(v20[3]) = 1024;
      *(_DWORD *)((char *)&v20[3] + 6) = v64;
      long long v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLSwimDataStore::persistSwimEntry(const CLSwimEntry &)", "%s\n", v5);
      goto LABEL_43;
    }
  }
}