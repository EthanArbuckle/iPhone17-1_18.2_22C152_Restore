void sub_1002F5514(uint64_t a1, void *a2)
{
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  unsigned int v6;
  unsigned __int8 v7;
  unsigned __int16 v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  NSObject *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  CFAbsoluteTime v20;
  void *v21[2];
  uint64_t v22;
  char v23;
  void *v24[2];
  uint64_t v25;
  char v26;
  void *v27[2];
  uint64_t v28;
  char v29;
  unsigned char v30[72];
  char v31;
  id v32;
  CFAbsoluteTime Current_5;
  unsigned char buf[28];
  __int16 v35;
  id v36;
  __int16 v37;
  id v38;
  void *v39;
  int v40;
  __int16 v41;
  int v42;
  __int16 v43;
  uint64_t v44;
  __int16 v45;
  unsigned char v46[10];
  char v47;
  char v48;
  long long v49;
  char v50;

  v3 = a1;
  [*(id *)(a1 + 24) silo];
  v4 = (unint64_t)[a2 deviceFlags] & 0x180;
  v5 = [a2 nearbyInfoV2DecryptedFlags];
  if (v4 || (v5 & 4) != 0)
  {
    v6 = [a2 discoveryFlags];
    v7 = [a2 deviceFlags];
    v8 = (unsigned __int16)[a2 deviceFlags];
    if (qword_102419460 != -1) {
      dispatch_once(&qword_102419460, &stru_1022A53D0);
    }
    v9 = *(void *)&v6 & 0x80040;
    v10 = v7 & 0x80;
    v11 = v8 & 0x8000;
    v12 = qword_102419468;
    if (os_log_type_enabled((os_log_t)qword_102419468, OS_LOG_TYPE_DEBUG))
    {
      v18 = v11 >> 15;
      v19 = v8 & 0x8000;
      v13 = [objc_msgSend(a2, "idsDeviceID") UTF8String];
      v14 = [objc_msgSend(a2, "identifier") UTF8String];
      v15 = v3;
      v16 = [objc_msgSend(a2, "model") UTF8String];
      [a2 bleAdvertisementTimestamp];
      *(_DWORD *)buf = 68291075;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)&buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&buf[18] = 2081;
      *(void *)&buf[20] = v13;
      v35 = 2081;
      v36 = v14;
      v37 = 2081;
      v38 = v16;
      v3 = v15;
      LOWORD(v39) = 1025;
      *(_DWORD *)((char *)&v39 + 2) = v9 != 0;
      HIWORD(v39) = 1025;
      v40 = v10 >> 7;
      v41 = 1025;
      v11 = v19;
      v42 = v18;
      v43 = 2050;
      v44 = v17;
      v45 = 1026;
      *(_DWORD *)v46 = [a2 rssi];
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Ble Beacon Received\", \"IDS ID\":%{private, location:escape_only}s, \"BT identifier\":%{private, location:escape_only}s, \"Model\":%{private, location:escape_only}s, \"is device nearbyInfo or nearbyAction type?\":%{private}hhd, \"is device same account?\":%{private}hhd, \"is device cloud paired?\":%{private}hhd, \"AdvertisementTimestamp\":\"%{public}.3f\", \"RSSI\":%{public}d}", buf, 0x52u);
    }
    Current_5 = j__CFAbsoluteTimeGetCurrent_5();
    v32 = a2;
    sub_1002E5A10(&v32, v30);
    if (v31) {
      (*(void (**)(void, CFAbsoluteTime *, unsigned char *))(**(void **)(v3 + 32) + 16))(*(void *)(v3 + 32), &Current_5, v30);
    }
    if ([a2 identifier] && v9 && v10 && v11)
    {
      sub_100134750(buf, (char *)[objc_msgSend(objc_msgSend(a2, "identifier"), "UTF8String")]);
      sub_1002E58D4((uint64_t)buf, (uint64_t)&v49);
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      if (v50)
      {
        if ([a2 name])
        {
          sub_100134750(buf, (char *)[a2 name]);
          *(_OWORD *)v27 = *(_OWORD *)buf;
          v28 = *(void *)&buf[16];
          v29 = 1;
        }
        else
        {
          LOBYTE(v27[0]) = 0;
          v29 = 0;
        }
        if ([a2 stableIdentifier])
        {
          sub_100134750(buf, (char *)[[objc_msgSend(objc_msgSend(a2, "stableIdentifier"), "UTF8String");
          *(_OWORD *)v24 = *(_OWORD *)buf;
          v25 = *(void *)&buf[16];
          v26 = 1;
        }
        else
        {
          LOBYTE(v24[0]) = 0;
          v26 = 0;
        }
        if ([a2 model])
        {
          sub_100134750(buf, (char *)[a2 model]);
          *(_OWORD *)v21 = *(_OWORD *)buf;
          v22 = *(void *)&buf[16];
          v23 = 1;
        }
        else
        {
          LOBYTE(v21[0]) = 0;
          v23 = 0;
        }
        v20 = j__CFAbsoluteTimeGetCurrent_5();
        sub_1002F4A60((uint64_t)buf, &v49, (long long *)v27, (long long *)v24, (long long *)v21, &v20);
        (*(void (**)(void, unsigned char *))(**(void **)(v3 + 32) + 24))(*(void *)(v3 + 32), buf);
        if (v48 && v47 < 0) {
          operator delete(*(void **)&v46[2]);
        }
        if (BYTE4(v44) && SBYTE3(v44) < 0) {
          operator delete(v39);
        }
        if ((_BYTE)v38 && SHIBYTE(v37) < 0) {
          operator delete(*(void **)&buf[16]);
        }
        if (v23 && SHIBYTE(v22) < 0) {
          operator delete(v21[0]);
        }
        if (v26 && SHIBYTE(v25) < 0) {
          operator delete(v24[0]);
        }
        if (v29 && SHIBYTE(v28) < 0) {
          operator delete(v27[0]);
        }
      }
    }
    if (v31) {
      sub_10023EB9C((wireless_diagnostics::google::protobuf::MessageLite *)v30);
    }
  }
}

void sub_1002F59AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  if (a19 && a18 < 0) {
    operator delete(__p);
  }
  if (a26 && a25 < 0) {
    operator delete(a20);
  }
  if (a33 && a32 < 0) {
    operator delete(a27);
  }
  if (a46) {
    sub_10023EB9C((wireless_diagnostics::google::protobuf::MessageLite *)&a35);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1002F5A68(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 104) && *(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  if (*(unsigned char *)(a1 + 72) && *(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(unsigned char *)(a1 + 40) && *(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

void sub_1002F5AD4(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 9) || *(void *)(a2 + 40) != *(void *)(a2 + 48)) {
    goto LABEL_9;
  }
  sub_1000C7F88(buf);
  BOOL v23 = 0;
  CFStringRef v4 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleForceRequestedType15Type16ScanWhenDeviceFilterIsEmpty", 0x8000100u, kCFAllocatorNull);
  char v5 = sub_1000D29FC(*(uint64_t *)buf, (uint64_t)v4, &v23);
  CFRelease(v4);
  BOOL v6 = v23;
  if (*(void *)v25) {
    sub_1000DB0A0(*(std::__shared_weak_count **)v25);
  }
  char v7 = v6 ? v5 : 0;
  if (v7)
  {
LABEL_9:
    [*(id *)(a1 + 8) setDiscoveryFlags:524352];
    [*(id *)(a1 + 8) setLabel:@"CLMiLoLeeching"];
    BOOL v8 = *(unsigned char *)(a2 + 9) == 0;
    unint64_t v9 = (unint64_t)[*(id *)(a1 + 8) discoveryFlags];
    v10 = *(void **)(a1 + 8);
    if (v8)
    {
      [v10 setDiscoveryFlags:v9 | 0x1000000000];
      [*(id *)(a1 + 8) setUseCase:524290];
      sub_1000C7F88(buf);
      BOOL v23 = 0;
      CFStringRef v11 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleType15andType16DeviceFilterIsSet", 0x8000100u, kCFAllocatorNull);
      char v12 = sub_1000D29FC(*(uint64_t *)buf, (uint64_t)v11, &v23);
      CFRelease(v11);
      BOOL v13 = v23;
      if (*(void *)v25) {
        sub_1000DB0A0(*(std::__shared_weak_count **)v25);
      }
      if (v13) {
        char v14 = 0;
      }
      else {
        char v14 = v12;
      }
      if ((v14 & 1) == 0)
      {
        if (*(void *)(a2 + 40) == *(void *)(a2 + 48))
        {
          if (qword_102419450 != -1) {
            dispatch_once(&qword_102419450, &stru_1022A53B0);
          }
          v21 = qword_102419458;
          if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 68289026;
            *(_DWORD *)&buf[4] = 0;
            *(_WORD *)v25 = 2082;
            *(void *)&v25[2] = "";
            _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"scanner type 15, 16 deviceFilter is empty for initiated scan\"}", buf, 0x12u);
            if (qword_102419450 != -1) {
              dispatch_once(&qword_102419450, &stru_1022A53B0);
            }
          }
          v22 = qword_102419458;
          if (os_signpost_enabled((os_log_t)qword_102419458))
          {
            *(_DWORD *)buf = 68289026;
            *(_DWORD *)&buf[4] = 0;
            *(_WORD *)v25 = 2082;
            *(void *)&v25[2] = "";
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "scanner type 15, 16 deviceFilter is empty for initiated scan", "{\"msg%{public}.0s\":\"scanner type 15, 16 deviceFilter is empty for initiated scan\"}", buf, 0x12u);
          }
        }
        else
        {
          id v15 = +[NSMutableArray array];
          v17 = *(uint64_t **)(a2 + 40);
          for (i = *(uint64_t **)(a2 + 48); v17 != i; v17 += 3)
          {
            v18 = v17;
            if (*((char *)v17 + 23) < 0) {
              v18 = (uint64_t *)*v17;
            }
            [v15 addObject:[NSString stringWithUTF8String:v18]];
          }
          if (qword_102419450 != -1) {
            dispatch_once(&qword_102419450, &stru_1022A53B0);
          }
          v19 = qword_102419458;
          if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 68289282;
            *(_DWORD *)&buf[4] = 0;
            *(_WORD *)v25 = 2082;
            *(void *)&v25[2] = "";
            __int16 v26 = 2114;
            id v27 = v15;
            _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"scanner type 15, 16 deviceFilter is\", \"deviceFilter\":%{public, location:escape_only}@}", buf, 0x1Cu);
          }
          [*(id *)(a1 + 8) setDeviceFilter:v15];
        }
      }
      if (sub_1002F6CDC()) {
        [*(id *)(a1 + 8) setDiscoveryFlags:((unint64_t)[*(id *)(a1 + 8) discoveryFlags] | 0x200000000)];
      }
      [*(id *)(a1 + 8) setBleScanRate:sub_1002F6D8C()];
    }
    else
    {
      [v10 setDiscoveryFlags:v9 | 0x100200000000];
      [*(id *)(a1 + 8) setUseCase:524291];
    }
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A53B0);
    }
    v20 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289026;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v25 = 2082;
      *(void *)&v25[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"will not conduct nearbyAction, nearbyInfo requested scan because device filter is empty\"}", buf, 0x12u);
    }
  }
}

void sub_1002F5F88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

id sub_1002F5FB4(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a2 + 9)) {
    goto LABEL_52;
  }
  sub_1000C7F88(buf);
  LOBYTE(v36) = 0;
  CFStringRef v2 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleNonLeechingBackgroundScanEnabled", 0x8000100u, kCFAllocatorNull);
  char v3 = sub_1000D29FC(*(uint64_t *)buf, (uint64_t)v2, (BOOL *)&v36);
  CFRelease(v2);
  int v4 = v36;
  if (*(void *)v38) {
    sub_1000DB0A0(*(std::__shared_weak_count **)v38);
  }
  char v5 = v4 ? v3 : 0;
  if ((v5 & 1) == 0)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A53B0);
    }
    v31 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289026;
      *(_DWORD *)&buf[4] = 0;
      *(_WORD *)v38 = 2082;
      *(void *)&v38[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"BleNonLeechingBackgroundScanEnabled is disabled\"}", buf, 0x12u);
    }
    v32 = *(void **)(a1 + 16);
    v35 = (id *)(a1 + 16);
    [v32 removeAllDiscoveryTypes];
    [*v35 setDiscoveryFlags:0];
    [*v35 setDeviceFilter:0];
    return [*v35 setOobKeys:0];
  }
  else
  {
LABEL_52:
    if (sub_1002F6CDC()) {
      [*(id *)(a1 + 16) setDiscoveryFlags:0x200000000];
    }
    [*(id *)(a1 + 16) addDiscoveryType:19];
    sub_1000C7F88(buf);
    LOBYTE(v36) = 0;
    CFStringRef v6 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleType22DeviceFilterIsSet", 0x8000100u, kCFAllocatorNull);
    char v7 = sub_1000D29FC(*(uint64_t *)buf, (uint64_t)v6, (BOOL *)&v36);
    CFRelease(v6);
    int v8 = v36;
    if (*(void *)v38) {
      sub_1000DB0A0(*(std::__shared_weak_count **)v38);
    }
    if (v8) {
      char v9 = 0;
    }
    else {
      char v9 = v7;
    }
    if ((v9 & 1) == 0)
    {
      id v10 = +[NSMutableArray array];
      id v11 = +[NSMutableArray array];
      BOOL v13 = *(id **)(a2 + 16);
      for (i = *(id **)(a2 + 24); v13 != i; ++v13)
      {
        id v14 = *v13;
        id v15 = [*v13 btAddressData];
        if ([v15 length] == (id)7)
        {
          v16 = [v15 bytes];
          id v17 = objc_alloc((Class)NSString);
          v18 = "Random";
          if ((*v16 & 1) == 0) {
            v18 = "Public";
          }
          id v19 = [[v17 initWithFormat:@"%s %02X:%02X:%02X:%02X:%02X:%02X", v18, v16[1], v16[2], v16[3], v16[4], v16[5], v16[6]];
          if (qword_102419450 != -1) {
            dispatch_once(&qword_102419450, &stru_1022A53B0);
          }
          v20 = qword_102419458;
          if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
          {
            id v21 = [v19 UTF8String];
            *(_DWORD *)buf = 68289282;
            *(_DWORD *)&buf[4] = 0;
            *(_WORD *)v38 = 2082;
            *(void *)&v38[2] = "";
            __int16 v39 = 2082;
            id v40 = v21;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"_nsDataToBTAddressString\", \"address\":%{public, location:escape_only}s}", buf, 0x1Cu);
          }
        }
        else
        {
          if (qword_102419450 != -1) {
            dispatch_once(&qword_102419450, &stru_1022A53B0);
          }
          v22 = qword_102419458;
          if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 68289282;
            *(_DWORD *)&buf[4] = 0;
            *(_WORD *)v38 = 2082;
            *(void *)&v38[2] = "";
            __int16 v39 = 2114;
            id v40 = v15;
            _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Invalid Address data\", \"address\":%{public, location:escape_only}@}", buf, 0x1Cu);
            if (qword_102419450 != -1) {
              dispatch_once(&qword_102419450, &stru_1022A53B0);
            }
          }
          BOOL v23 = qword_102419458;
          if (os_signpost_enabled((os_log_t)qword_102419458))
          {
            *(_DWORD *)buf = 68289282;
            *(_DWORD *)&buf[4] = 0;
            *(_WORD *)v38 = 2082;
            *(void *)&v38[2] = "";
            __int16 v39 = 2114;
            id v40 = v15;
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v23, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Invalid Address data", "{\"msg%{public}.0s\":\"Invalid Address data\", \"address\":%{public, location:escape_only}@}", buf, 0x1Cu);
          }
          id v19 = 0;
        }
        [v10 addObject:v19];
        [v11 addObject:v14];
      }
      [*(id *)(a1 + 16) setOobKeys:v11];
      [*(id *)(a1 + 16) setDeviceFilter:v10];
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A53B0);
      }
      v24 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 68289282;
        *(_DWORD *)&buf[4] = 0;
        *(_WORD *)v38 = 2082;
        *(void *)&v38[2] = "";
        __int16 v39 = 2114;
        id v40 = v10;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"scanner type 22 deviceFilter is\", \"deviceFilter\":%{public, location:escape_only}@}", buf, 0x1Cu);
      }
    }
    [*(id *)(a1 + 16) setLabel:@"CLMiLoNonLeeching"];
    v25 = *(void **)(a1 + 16);
    if (*(unsigned char *)(a2 + 9))
    {
      sub_1000C7F88(buf);
      unsigned int v36 = 0;
      CFStringRef v26 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleBackgroundScanRate", 0x8000100u, kCFAllocatorNull);
      int v27 = sub_10013E418(*(uint64_t *)buf, (uint64_t)v26, &v36);
      CFRelease(v26);
      unsigned int v28 = v36;
      if (*(void *)v38) {
        sub_1000DB0A0(*(std::__shared_weak_count **)v38);
      }
      if (v27) {
        uint64_t v29 = v28;
      }
      else {
        uint64_t v29 = 30;
      }
      return [v25 setBleScanRate:v29];
    }
    else
    {
      return [v25 setBleScanRate:sub_1002F6D8C()];
    }
  }
}

void sub_1002F6608(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,std::__shared_weak_count *a24)
{
  if (a24) {
    sub_1000DB0A0(a24);
  }
  _Unwind_Resume(exception_object);
}

id *sub_1002F663C(id *result)
{
  v1 = result;
  if (!result[1])
  {
    result[1] = objc_alloc_init((Class)CBDiscovery);
    [v1[1] setDispatchQueue:[objc_msgSend(objc_msgSend(v1[3], "silo"), "queue")]];
    [v1[1] setDiscoveryFlags:0];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1002F685C;
    v7[3] = &unk_1022A52E8;
    v7[4] = v1;
    [v1[1] setDeviceFoundHandler:v7];
    [v1[1] setDeviceLostHandler:&stru_1022A5328];
    id v2 = v1[1];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1002F694C;
    v6[3] = &unk_1022A5348;
    v6[4] = v1;
    result = (id *)[v2 activateWithCompletion:v6];
  }
  if (!v1[2])
  {
    result = (id *)sub_1002F4E04();
    if (result)
    {
      v1[2] = objc_alloc_init((Class)CBDiscovery);
      [v1[2] setDispatchQueue:[objc_msgSend(objc_msgSend(v1[3], "silo"), "queue")]];
      [v1[2] setDiscoveryFlags:0];
      [v1[2] setUseCase:524290];
      v5[0] = _NSConcreteStackBlock;
      v5[1] = 3221225472;
      v5[2] = sub_1002F6A9C;
      v5[3] = &unk_1022A52E8;
      v5[4] = v1;
      [v1[2] setDeviceFoundHandler:v5];
      [v1[2] setDeviceLostHandler:&stru_1022A5368];
      id v3 = v1[2];
      v4[0] = _NSConcreteStackBlock;
      v4[1] = 3221225472;
      v4[2] = sub_1002F6B8C;
      v4[3] = &unk_1022A5348;
      v4[4] = v1;
      return (id *)[v3 activateWithCompletion:v4];
    }
  }
  return result;
}

void sub_1002F685C(uint64_t a1, void *a2)
{
}

void sub_1002F6864(id a1, CBDevice *a2)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A53B0);
  }
  id v3 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
  {
    v4[0] = 68289282;
    v4[1] = 0;
    __int16 v5 = 2082;
    CFStringRef v6 = "";
    __int16 v7 = 2114;
    int v8 = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Device lost\", \"device:\":%{public, location:escape_only}@}", (uint8_t *)v4, 0x1Cu);
  }
}

void sub_1002F694C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    [*(id *)(v3 + 8) invalidate];

    *(void *)(v3 + 8) = 0;
    int v4 = +[NSString stringWithFormat:@"%@ %@", @"CBDiscovery activation error:", a2];
    sub_10031A59C((uint64_t)v4);
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A53B0);
    }
    __int16 v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 68289026;
      int v7 = 0;
      __int16 v8 = 2082;
      char v9 = "";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"CBDiscovery leeching supported activated successfully\"}", buf, 0x12u);
    }
  }
}

void sub_1002F6A9C(uint64_t a1, void *a2)
{
}

void sub_1002F6AA4(id a1, CBDevice *a2)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A53B0);
  }
  uint64_t v3 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
  {
    v4[0] = 68289282;
    v4[1] = 0;
    __int16 v5 = 2082;
    CFStringRef v6 = "";
    __int16 v7 = 2114;
    __int16 v8 = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Device lost\", \"device:\":%{public, location:escape_only}@}", (uint8_t *)v4, 0x1Cu);
  }
}

void sub_1002F6B8C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    [*(id *)(v3 + 16) invalidate];

    *(void *)(v3 + 16) = 0;
    int v4 = +[NSString stringWithFormat:@"%@ %@", @"CBDiscovery activation error:", a2];
    sub_10031A59C((uint64_t)v4);
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A53B0);
    }
    __int16 v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289026;
      int v7 = 0;
      __int16 v8 = 2082;
      char v9 = "";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CBDiscovery leeching not supported activated successfully\"}", buf, 0x12u);
    }
  }
}

uint64_t sub_1002F6CDC()
{
  sub_1000C7F88(&v5);
  BOOL v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleScanFlagRssiIsSet", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1000D29FC(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  BOOL v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v2) {
    return 1;
  }
  else {
    return v1 ^ 1u;
  }
}

void sub_1002F6D70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002F6D8C()
{
  sub_1000C7F88(&v5);
  unsigned int v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsBleActiveScanRate", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_10013E418(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  unsigned int v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v1) {
    return v2;
  }
  else {
    return 40;
  }
}

void sub_1002F6E20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002F6E3C(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_1002F6E6C(id a1)
{
  qword_102419468 = (uint64_t)os_log_create("com.apple.locationd.Position", "MicrolocationQE");
}

void sub_1002F6E9C(unsigned char *a1@<X0>, int a2@<W1>, double *a3@<X2>, unsigned char *a4@<X8>)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A53F0);
  }
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
  {
    __int16 v8 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
    {
      *(_DWORD *)buf = 68289282;
      int v15 = 0;
      __int16 v16 = 2082;
      id v17 = "";
      __int16 v18 = 1026;
      int v19 = a2;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"displayState\", \"isDisplayOn\":%{public}hhd}", buf, 0x18u);
    }
  }
  *a1 = a2;
  sub_10023D978((uint64_t)v11);
  if (a2) {
    char v9 = "BackLightSwitchedOn";
  }
  else {
    char v9 = "BackLightSwitchedOff";
  }
  v13 |= 2u;
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::assign(v12, v9);
  sub_1002F70C0((uint64_t)v11, 0, 0, 3u, (uint64_t)v10, *a3);
  buf[0] = a2;
  sub_1002660C8(&v16);
  *a4 = buf[0];
  sub_1002660C8(a4 + 8);
  sub_10026633C(&v16);
  sub_10026633C(v10);
  sub_10024FBA0((wireless_diagnostics::google::protobuf::MessageLite *)v11);
}

void sub_1002F7080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  sub_10026633C(v27);
  sub_10026633C(&a10);
  sub_10024FBA0((wireless_diagnostics::google::protobuf::MessageLite *)&a27);
  _Unwind_Resume(a1);
}

void sub_1002F70C0(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  sub_10023DFC0(a5);
  unsigned int v12 = *(_DWORD *)(a1 + 16);
  if (!sub_10023E774(v12))
  {
    id v14 = "::CLMicroLocationProto::EventType_IsValid(value)";
    int v15 = 19803;
    __int16 v16 = "set_eventtype";
    goto LABEL_6;
  }
  int v13 = *(_DWORD *)(a5 + 128);
  *(_DWORD *)(a5 + 72) = v12;
  *(double *)(a5 + 8) = a6;
  *(unsigned char *)(a5 + 77) = a2;
  *(_DWORD *)(a5 + 128) = v13 | 0x2803;
  *(unsigned char *)(a5 + 76) = a3;
  if ((sub_10023E744(a4) & 1) == 0)
  {
    id v14 = "::CLMicroLocationProto::ConfidenceLevel_IsValid(value)";
    int v15 = 20312;
    __int16 v16 = "set_confidencelevel";
LABEL_6:
    __assert_rtn(v16, "microlocation.pb.h", v15, v14);
  }
  *(_DWORD *)(a5 + 128) |= 0x4000u;
  *(_DWORD *)(a5 + 120) = a4;
  sub_1002E69B4(a5, a1);
}

void sub_1002F71A8(_Unwind_Exception *a1)
{
  sub_10026633C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F71BC(unsigned __int8 *a1)
{
  return *a1;
}

void sub_1002F71C4(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_1002F71F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_1022A5420;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 0;
  uint64_t v5 = a1 + 32;
  CFStringRef v6 = operator new(0x20uLL);
  *CFStringRef v6 = off_1022A54B0;
  v6[1] = sub_1002F8020;
  v6[2] = 0;
  v6[3] = a1;
  v8[3] = v6;
  sub_101576408(v5, a2, v8);
  sub_1002F8A04(v8);
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  sub_100EBBEB0(a1 + 216, (uint64_t)"CLMicroLocationSensors", a1, 60.0);
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 184) = [objc_msgSend(*(id *)(a1 + 16), "silo") newTimer];
  (*(void (**)(long long *__return_ptr))(**(void **)(a1 + 8) + 80))(&v7);
  operator new();
}

void sub_1002F745C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  operator delete();
}

uint64_t sub_1002F74FC(uint64_t a1)
{
  *(void *)a1 = off_1022A5420;
  [*(id *)(a1 + 184) invalidate];

  *(void *)(a1 + 184) = 0;
  sub_1002F75B0((uint64_t *)(a1 + 208), 0);
  sub_1002F75B0((uint64_t *)(a1 + 200), 0);

  *(void *)(a1 + 24) = 0;
  sub_100EBBF9C(a1 + 216);
  sub_1002F75B0((uint64_t *)(a1 + 208), 0);
  sub_1002F75B0((uint64_t *)(a1 + 200), 0);
  sub_1015766A0(a1 + 32);
  return a1;
}

uint64_t sub_1002F75B0(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_101091104();
    operator delete();
  }
  return result;
}

void sub_1002F7604(uint64_t a1)
{
  sub_1002F74FC(a1);

  operator delete();
}

void sub_1002F763C(uint64_t a1, int a2)
{
  uint64_t v4 = a1 + 32;
  if (sub_100016E64(a1 + 32))
  {
    *(_DWORD *)buf = 3;
    sub_1015766A4(v4, (int *)buf);
    *(_DWORD *)buf = 4;
    sub_1015766A4(v4, (int *)buf);
    *(_DWORD *)buf = 5;
    sub_1015766A4(v4, (int *)buf);
    uint64_t v5 = sub_1002F782C(a1, a2);
    sub_101091108(v5);
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5480);
    }
    CFStringRef v6 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "WifiBridge, Wifi is powered off - not scanning", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5480);
      }
      long long v7 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMicroLocationWifiBridge::startWifiRssiScanning(CLMicroLocationUtils::ScanActivity)", "%s\n", v7);
      if (v7 != (char *)buf) {
        free(v7);
      }
    }
  }
}

uint64_t sub_1002F782C(uint64_t result, int a2)
{
  uint64_t v2 = result;
  switch(a2)
  {
    case 1:
      (*(void (**)(void))(**(void **)(result + 8) + 64))(*(void *)(result + 8));
      uint64_t v3 = v2 + 200;
      return *(void *)v3;
    case 2:
      (*(void (**)(void))(**(void **)(result + 8) + 64))(*(void *)(result + 8));
      uint64_t v3 = v2 + 208;
      return *(void *)v3;
    case 0:
      sub_101A5AA54();
  }
  return result;
}

uint64_t sub_1002F78C4(uint64_t a1, int a2)
{
  [*(id *)(a1 + 16) silo];
  sub_100EBC6AC(a1 + 216);
  uint64_t v4 = sub_1002F782C(a1, a2);
  sub_101090F00(v4);
  *(_DWORD *)buf = 3;
  sub_1015766FC(a1 + 32, (int *)buf);
  *(_DWORD *)buf = 4;
  sub_1015766FC(a1 + 32, (int *)buf);
  *(_DWORD *)buf = 5;
  sub_1015766FC(a1 + 32, (int *)buf);
  [*(id *)(a1 + 184) invalidate];
  *(void *)(a1 + 192) = 0x7FEFFFFFFFFFFFFFLL;
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5480);
  }
  uint64_t v5 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "WifiBridge, wifi, stop scanning", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5480);
    }
    id v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMicroLocationWifiBridge::stopWifiRssiScanning(CLMicroLocationUtils::ScanActivity)", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  double v7 = *(double *)(a1 + 264);
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5480);
  }
  __int16 v8 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 68289538;
    int v12 = 0;
    __int16 v13 = 2082;
    id v14 = "";
    __int16 v15 = 2050;
    double v16 = Current_5 - v7;
    __int16 v17 = 1026;
    int v18 = a2;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"WifiBridge, scan complete\", \"scanDurationInMs\":\"%{public}.4f\", \"scanActivity\":%{public}d}", buf, 0x22u);
  }
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 48))(*(void *)(a1 + 8));
}

id sub_1002F7BAC(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 16) silo];
  sub_100134750(__p, "startScanning");
  sub_100EBBFD8(a1 + 216, (uint64_t *)__p);
  if (v11 < 0) {
    operator delete(__p[0]);
  }
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  *(double *)(a1 + 192) = (Current_5 * 1000.0 + (double)a2) / 1000.0;
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5480);
  }
  uint64_t v5 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v6 = *(void *)(a1 + 192);
    *(_DWORD *)buf = 68289794;
    int v13 = 0;
    __int16 v14 = 2082;
    __int16 v15 = "";
    __int16 v16 = 2050;
    double v17 = Current_5;
    __int16 v18 = 2050;
    uint64_t v19 = a2;
    __int16 v20 = 2050;
    uint64_t v21 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"WifiBridge, RecordingStarted\", \"now\":\"%{public}.3f\", \"durationInMs\":%{public}lld, \"expected end time\":\"%{public}.3f\"}", buf, 0x30u);
  }
  double v7 = *(void **)(a1 + 184);
  *(double *)(a1 + 264) = Current_5;
  [v7 setNextFireTime:*(double *)(a1 + 192)];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1002F7DA0;
  v9[3] = &unk_1022A3020;
  v9[4] = a1;
  return [*(id *)(a1 + 184) setHandler:v9];
}

void sub_1002F7D7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002F7DA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 32) + 48))();
}

id sub_1002F7DC8(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 192);
  if (v2 == 1.79769313e308) {
    sub_101A5ABD8();
  }
  *(double *)(a1 + 192) = (v2 * 1000.0 + (double)a2) / 1000.0;
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5480);
  }
  uint64_t v5 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
  {
    v7[0] = 68289282;
    v7[1] = 0;
    __int16 v8 = 2082;
    char v9 = "";
    __int16 v10 = 2050;
    uint64_t v11 = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"WifiBridge, RecordingExtended\", \"by durationInMs\":%{public}lld}", (uint8_t *)v7, 0x1Cu);
  }
  return [*(id *)(a1 + 184) setNextFireTime:*(double *)(a1 + 192)];
}

uint64_t sub_1002F7EFC(uint64_t a1)
{
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5480);
  }
  uint64_t v3 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
  {
    v5[0] = 68289282;
    v5[1] = 0;
    __int16 v6 = 2082;
    double v7 = "";
    __int16 v8 = 2050;
    double v9 = Current_5;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"WifiBridge, wifi scan timer stopped\", \"now\":\"%{public}.3f\"}", (uint8_t *)v5, 0x1Cu);
  }
  return (*(uint64_t (**)(void, double))(**(void **)(a1 + 8) + 56))(*(void *)(a1 + 8), Current_5);
}

void sub_1002F8020(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  [*(id *)(a1 + 16) silo];
  if (sub_1001198CC() == 1)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5480);
    }
    double v7 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = *a3;
      int v9 = *(char *)(a4 + 1);
      *(_DWORD *)buf = 67240448;
      *(_DWORD *)&uint8_t buf[4] = v8;
      *(_WORD *)v35 = 1026;
      *(_DWORD *)&v35[2] = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "WifiBridge, Received wifi notification %{public}d with scan type %{public}d", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5480);
      }
      int v24 = *a3;
      int v25 = *(char *)(a4 + 1);
      LODWORD(__p) = 67240448;
      HIDWORD(__p) = v24;
      LOWORD(v32) = 1026;
      *(_DWORD *)((char *)&v32 + 2) = v25;
      CFStringRef v26 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationWifiBridge::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v26);
      if (v26 != (char *)buf) {
        free(v26);
      }
    }
    switch(*a3)
    {
      case 3:
        if (*(unsigned char *)(a4 + 1) == 11)
        {
          sub_1001F7F94((uint64_t *)(a4 + 112), (uint64_t *)&__p);
          uint64_t v27 = 0;
          unint64_t v28 = 0;
          unint64_t v29 = 0;
          __int16 v10 = (int *)__p;
          uint64_t v11 = v32;
          while (v10 != v11)
          {
            sub_1002E5824(v10, (uint64_t)buf);
            if (v39)
            {
              int v12 = v10[17];
              int v30 = v12;
              unint64_t v13 = v28;
              if (v28 >= v29)
              {
                uint64_t v14 = sub_1002F8A88(&v27, (uint64_t)buf, &v30);
              }
              else
              {
                sub_1002F8BB0(v28, (uint64_t)buf, v12);
                uint64_t v14 = v13 + 56;
              }
              unint64_t v28 = v14;
              if (v39) {
                sub_10023F7D4((wireless_diagnostics::google::protobuf::MessageLite *)buf);
              }
            }
            v10 += 22;
          }
          (*(void (**)(void, uint64_t *, double))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8), &v27, *(double *)(a4 + 104));
          *(void *)buf = &v27;
          sub_1002F2E4C((void ***)buf);
          *(void *)buf = &__p;
          sub_1000D7F78((void ***)buf);
        }
        else
        {
          if (qword_102419450 != -1) {
            dispatch_once(&qword_102419450, &stru_1022A5480);
          }
          BOOL v23 = qword_102419458;
          if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "WifiBridge, Received a wifi scan result that is not requested by MiLo, ignore this scan result", buf, 2u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419450 != -1) {
              goto LABEL_61;
            }
            goto LABEL_58;
          }
        }
        break;
      case 4:
        (*(void (**)(void))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8));
        break;
      case 5:
        (*(void (**)(void))(**(void **)(a1 + 8) + 40))(*(void *)(a1 + 8));
        break;
      case 6:
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5480);
        }
        __int16 v20 = qword_102419458;
        if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
        {
          sub_100D54C68(a4 + 8);
          uint64_t v21 = v33 >= 0 ? &__p : (void **)__p;
          *(_DWORD *)buf = 68289283;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)v35 = 2082;
          *(void *)&v35[2] = "";
          __int16 v36 = 2081;
          v37 = v21;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Received link status notification\", \"associatedState\":%{private, location:escape_only}s}", buf, 0x1Cu);
          if (v33 < 0) {
            operator delete(__p);
          }
        }
        uint64_t v22 = *(void *)(a1 + 8);
        sub_100D55690(a4 + 8, (uint64_t)buf);
        (*(void (**)(uint64_t, uint8_t *))(*(void *)v22 + 24))(v22, buf);
        if (v40 && v38 < 0) {
          operator delete(*(void **)v35);
        }
        break;
      default:
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5480);
        }
        __int16 v16 = qword_102419458;
        if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
        {
          int v17 = *a3;
          *(_DWORD *)buf = 67240192;
          *(_DWORD *)&uint8_t buf[4] = v17;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "#Warning WifiBridge, Received unknown wifi service notification %{public}d", buf, 8u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419450 != -1) {
            dispatch_once(&qword_102419450, &stru_1022A5480);
          }
          int v18 = *a3;
          LODWORD(__p) = 67240192;
          HIDWORD(__p) = v18;
          uint64_t v19 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationWifiBridge::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v19);
          goto LABEL_59;
        }
        break;
    }
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5480);
    }
    __int16 v15 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "WifiBridge, Location services are disabled, ignore WiFi scan result", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
LABEL_61:
      }
        dispatch_once(&qword_102419450, &stru_1022A5480);
LABEL_58:
      LOWORD(__p) = 0;
      uint64_t v19 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationWifiBridge::onWifiNotification(int, const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v19);
LABEL_59:
      if (v19 != (char *)buf) {
        free(v19);
      }
    }
  }
}

void sub_1002F8810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char *a11, uint64_t a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  a14 = (uint64_t *)&a11;
  sub_1002F2E4C((void ***)&a14);
  a11 = &a15;
  sub_1000D7F78((void ***)&a11);
  _Unwind_Resume(a1);
}

void sub_1002F889C(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_1002F88CC()
{
}

__n128 sub_1002F88E0(uint64_t a1)
{
  double v2 = (char *)operator new(0x20uLL);
  *(void *)double v2 = off_1022A54B0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_1002F8934(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022A54B0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_1002F896C(void *a1, unsigned int *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (uint64_t (*)(void *, void))a1[1];
  uint64_t v4 = (void *)(a1[3] + (v2 >> 1));
  if (v2) {
    uint64_t v3 = *(uint64_t (**)(void *, void))(*v4 + v3);
  }
  return v3(v4, *a2);
}

uint64_t sub_1002F89B8(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1002F89F8()
{
}

void *sub_1002F8A04(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_1002F8A88(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 3);
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) > 0x492492492492492) {
    sub_1001D7FD4();
  }
  uint64_t v9 = (uint64_t)(a1 + 2);
  unint64_t v10 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v4) >> 3);
  if (2 * v10 > v6) {
    unint64_t v6 = 2 * v10;
  }
  if (v10 >= 0x249249249249249) {
    unint64_t v11 = 0x492492492492492;
  }
  else {
    unint64_t v11 = v6;
  }
  uint64_t v19 = a1 + 2;
  if (v11) {
    int v12 = (char *)sub_10017EA6C(v9, v11);
  }
  else {
    int v12 = 0;
  }
  __int16 v15 = v12;
  __int16 v16 = &v12[56 * v5];
  uint64_t v17 = (uint64_t)v16;
  int v18 = &v12[56 * v11];
  sub_1002F8BB0((uint64_t)v16, a2, *a3);
  uint64_t v17 = (uint64_t)(v16 + 56);
  sub_1002F8C08(a1, &v15);
  uint64_t v13 = a1[1];
  sub_1002F8D28((uint64_t)&v15);
  return v13;
}

void sub_1002F8B9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1002F8D28((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F8BB0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = sub_10023D524(a1);
  *(_DWORD *)(v6 + 48) = a3;
  sub_10023FE6C(v6, a2);
  return a1;
}

void sub_1002F8BF4(_Unwind_Exception *a1)
{
  sub_10023F7D4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F8C08(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1002F8C80((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1002F8C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3 != a5)
  {
    uint64_t v11 = 0;
    do
    {
      sub_10023F7D0(a7 + v11 - 56, a3 + v11 - 56);
      *(_DWORD *)(a7 + v11 - 8) = *(_DWORD *)(a3 + v11 - 8);
      v11 -= 56;
    }
    while (a3 + v11 != a5);
  }
  return a6;
}

void sub_1002F8D08(_Unwind_Exception *exception_object)
{
  for (; v2; v2 += 56)
    sub_10023F7D4((wireless_diagnostics::google::protobuf::MessageLite *)(v1 + v2));
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002F8D28(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 56;
    sub_10023F7D4((wireless_diagnostics::google::protobuf::MessageLite *)(i - 56));
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1002F8D78(uint64_t result, double a2)
{
  *(_OWORD *)uint64_t result = 0u;
  *(_OWORD *)(result + 16) = 0u;
  *(double *)(result + 32) = a2;
  return result;
}

void sub_1002F8D88(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  if (*a2 == v6)
  {
    uint64_t v29 = 0;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v29 = 0;
    do
    {
      sub_10023F7D0(v31, v5);
      double v8 = *(double *)&v32[4];
      if (*(double *)&v32[4] >= *(double *)(a1 + 24))
      {
        uint64_t v9 = *(void *)a1;
        uint64_t v10 = *(void *)(a1 + 8);
        while (v9 != v10)
        {
          uint64_t v11 = (wireless_diagnostics::google::protobuf::MessageLite *)sub_10023F7D0(&v40, v9);
          if (v42 == v33)
          {
            double v12 = *(double *)&v41[4] - v8;
            if (*(double *)&v41[4] - v8 < 0.0) {
              double v12 = -v12;
            }
            if (v12 < *(double *)(a1 + 32))
            {
              if (v43[0] == v34[0]
                && *(float *)&v41[16] == *(float *)&v32[16]
                && *(_DWORD *)(v9 + 48) == *(_DWORD *)(v5 + 48))
              {
                ++v29;
                sub_10023F7D4(v11);
                goto LABEL_29;
              }
              if (qword_102419450 != -1) {
                dispatch_once(&qword_102419450, &stru_1022A5548);
              }
              uint64_t v13 = qword_102419458;
              if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
              {
                nullsub_41(v33, v14);
                sub_10006DE8C(&__p);
                p_p = &__p;
                if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                  p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
                }
                uint64_t buf = 68289282;
                __int16 v36 = 2082;
                v37 = "";
                __int16 v38 = 2082;
                char v39 = p_p;
                _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Warning AP matches timestamp and mac in buffer, but values are not same\", \"mac address\":%{public, location:escape_only}s}", (uint8_t *)&buf, 0x1Cu);
                if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(__p.__r_.__value_.__l.__data_);
                }
              }
            }
          }
          sub_10023F7D4((wireless_diagnostics::google::protobuf::MessageLite *)&v40);
          v9 += 56;
        }
        __int16 v16 = (int *)(v5 + 48);
        unint64_t v17 = a3[1];
        if (v17 >= a3[2])
        {
          uint64_t v19 = sub_1002F97D0(a3, (uint64_t)v31, (int *)(v5 + 48));
        }
        else
        {
          int v18 = *v16;
          sub_10023F7D0(a3[1], v31);
          *(_DWORD *)(v17 + 48) = v18;
          uint64_t v19 = v17 + 56;
          a3[1] = v17 + 56;
        }
        a3[1] = v19;
        unint64_t v20 = *(void *)(a1 + 8);
        if (v20 >= *(void *)(a1 + 16))
        {
          uint64_t v22 = sub_1002F97D0((uint64_t *)a1, (uint64_t)v31, (int *)(v5 + 48));
        }
        else
        {
          int v21 = *v16;
          sub_10023F7D0(*(void *)(a1 + 8), v31);
          *(_DWORD *)(v20 + 48) = v21;
          uint64_t v22 = v20 + 56;
          *(void *)(a1 + 8) = v20 + 56;
        }
        *(void *)(a1 + 8) = v22;
      }
      else
      {
        ++v7;
      }
LABEL_29:
      sub_10023F7D4((wireless_diagnostics::google::protobuf::MessageLite *)v31);
      v5 += 56;
    }
    while (v5 != v6);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5548);
  }
  BOOL v23 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v24 = 0x6DB6DB6DB6DB6DB7 * ((a3[1] - *a3) >> 3);
    uint64_t v25 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3);
    *(_DWORD *)v31 = 134349824;
    *(void *)v32 = v24;
    *(_WORD *)&v32[8] = 2050;
    *(void *)&v32[10] = v7;
    *(_WORD *)&v32[18] = 2050;
    uint64_t v33 = v29;
    LOWORD(v34[0]) = 2050;
    *(void *)((char *)v34 + 2) = v25;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "Ingested %{public}ld new AP measurements, too old %{public}ld, dupe %{public}ld, buffer size %{public}ld", v31, 0x2Au);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(v31, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5548);
    }
    uint64_t v26 = 0x6DB6DB6DB6DB6DB7 * ((a3[1] - *a3) >> 3);
    uint64_t v27 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3);
    int v40 = 134349824;
    *(void *)v41 = v26;
    *(_WORD *)&v41[8] = 2050;
    *(void *)&v41[10] = v7;
    *(_WORD *)&v41[18] = 2050;
    uint64_t v42 = v29;
    LOWORD(v43[0]) = 2050;
    *(void *)((char *)v43 + 2) = v27;
    unint64_t v28 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<CLMiLoProtobufWrapper::WiFiRssi> CLMicroLocationScanBuffer::ingestAps(cl::chrono::CFAbsoluteTimeClock::time_point, const std::vector<CLMiLoProtobufWrapper::WiFiRssi> &)", "%s\n", v28);
    if (v28 != (char *)v31) {
      free(v28);
    }
  }
}

void sub_1002F924C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1002F2E4C((void ***)va);
  _Unwind_Resume(a1);
}

void sub_1002F92A8(uint64_t a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  *(double *)(a1 + 24) = a3 - a4;
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_1002F95D8(a2, 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3));
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  if (*(void *)a1 == v7)
  {
    uint64_t v7 = *(void *)a1;
  }
  else
  {
    double v8 = *(double *)(a1 + 24);
    while (*(double *)(v6 + 8) >= v8)
    {
      v6 += 56;
      if (v6 == v7)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        goto LABEL_13;
      }
    }
    if (v6 != v7)
    {
      uint64_t v9 = v6 + 56;
      if (v6 + 56 != v7)
      {
        do
        {
          if (*(double *)(v9 + 8) >= v8)
          {
            sub_10023FDF8(v6, v9);
            *(_DWORD *)(v6 + 48) = *(_DWORD *)(v9 + 48);
            v6 += 56;
          }
          v9 += 56;
        }
        while (v9 != v7);
        uint64_t v7 = *(void *)(a1 + 8);
      }
    }
  }
LABEL_13:
  sub_1002F990C(v6, v7, a2);
  sub_1002F9698(a1, v6, *(void *)(a1 + 8));
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5548);
  }
  uint64_t v10 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = 0x6DB6DB6DB6DB6DB7 * ((a2[1] - *a2) >> 3);
    uint64_t v12 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3);
    *(_DWORD *)uint64_t buf = 134349312;
    uint64_t v15 = v11;
    __int16 v16 = 2050;
    uint64_t v17 = v12;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Pruned %{public}ld AP measurements, buffer size %{public}ld", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5548);
    }
    uint64_t v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<CLMiLoProtobufWrapper::WiFiRssi> CLMicroLocationScanBuffer::pruneAps(cl::chrono::CFAbsoluteTimeClock::time_point, cl::chrono::CFAbsoluteTimeClock::duration)", "%s\n", v13);
    if (v13 != (char *)buf) {
      free(v13);
    }
  }
}

void sub_1002F95B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_1002F2E4C((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F95D8(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  if (0x6DB6DB6DB6DB6DB7 * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0x492492492492493) {
      sub_1001D7FD4();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_10017EA6C(result, a2);
    v7[1] = v7[0] + v5;
    _DWORD v7[2] = v7[0] + v5;
    v7[3] = v7[0] + 56 * v6;
    sub_1002F8C08(a1, v7);
    return sub_1002F8D28((uint64_t)v7);
  }
  return result;
}

void sub_1002F9684(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1002F8D28((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F9698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 != a3)
  {
    sub_1002F9B18(a3, *(void *)(a1 + 8), a2);
    uint64_t v6 = v5;
    uint64_t v7 = *(void *)(a1 + 8);
    if (v7 != v5)
    {
      do
        sub_10023F7D4((wireless_diagnostics::google::protobuf::MessageLite *)(v7 - 56));
      while (v7 != v6);
    }
    *(void *)(a1 + 8) = v6;
  }
  return a2;
}

uint64_t sub_1002F9708(uint64_t *a1)
{
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v6 = (uint64_t *)&v7;
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1 == v2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  else
  {
    do
    {
      uint64_t v9 = *(void *)(v1 + 24);
      sub_1002F9B84(&v6, (unint64_t *)&v9, &v9);
      v1 += 56;
    }
    while (v1 != v2);
    uint64_t v3 = v7;
    uint64_t v4 = v8;
  }
  sub_1000F5BB0((uint64_t)&v6, v3);
  return v4;
}

void sub_1002F9788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
}

void sub_1002F97A0(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_1002F97D0(uint64_t *a1, uint64_t a2, int *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 3);
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) > 0x492492492492492) {
    sub_1001D7FD4();
  }
  uint64_t v9 = (uint64_t)(a1 + 2);
  unint64_t v10 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v4) >> 3);
  if (2 * v10 > v6) {
    unint64_t v6 = 2 * v10;
  }
  if (v10 >= 0x249249249249249) {
    unint64_t v11 = 0x492492492492492;
  }
  else {
    unint64_t v11 = v6;
  }
  unint64_t v20 = a1 + 2;
  if (v11) {
    uint64_t v12 = (char *)sub_10017EA6C(v9, v11);
  }
  else {
    uint64_t v12 = 0;
  }
  __int16 v16 = v12;
  uint64_t v17 = &v12[56 * v5];
  int v18 = v17;
  uint64_t v19 = &v12[56 * v11];
  int v13 = *a3;
  sub_10023F7D0(v17, a2);
  *((_DWORD *)v17 + 12) = v13;
  v18 += 56;
  sub_1002F8C08(a1, &v16);
  uint64_t v14 = a1[1];
  sub_1002F8D28((uint64_t)&v16);
  return v14;
}

void sub_1002F98F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1002F8D28((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F990C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = a1;
  unint64_t v6 = a3;
  if (a1 == a2) {
    return a1;
  }
  uint64_t v4 = a2;
  do
  {
    sub_1002F9970(&v6, v3);
    v3 += 56;
  }
  while (v3 != v4);
  return v4;
}

uint64_t **sub_1002F9970(uint64_t **a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = (*a1)[1];
  if (v5 >= (*a1)[2])
  {
    uint64_t v6 = sub_1002F99E8(*a1, a2);
  }
  else
  {
    sub_10023F7D0((*a1)[1], a2);
    *(_DWORD *)(v5 + 48) = *(_DWORD *)(a2 + 48);
    uint64_t v6 = v5 + 56;
    v4[1] = v5 + 56;
  }
  v4[1] = v6;
  return a1;
}

void sub_1002F99E0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1002F99E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) > 0x492492492492492) {
    sub_1001D7FD4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x249249249249249) {
    unint64_t v9 = 0x492492492492492;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    unint64_t v10 = (char *)sub_10017EA6C(v7, v9);
  }
  else {
    unint64_t v10 = 0;
  }
  int v13 = v10;
  uint64_t v14 = &v10[56 * v4];
  uint64_t v15 = v14;
  __int16 v16 = &v10[56 * v9];
  sub_10023F7D0(v14, a2);
  *((_DWORD *)v14 + 12) = *(_DWORD *)(a2 + 48);
  v15 += 56;
  sub_1002F8C08(a1, &v13);
  uint64_t v11 = a1[1];
  sub_1002F8D28((uint64_t)&v13);
  return v11;
}

void sub_1002F9B04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1002F8D28((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002F9B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = a2;
  do
  {
    sub_10023FDF8(a3, v4);
    *(_DWORD *)(a3 + 48) = *(_DWORD *)(v4 + 48);
    a3 += 56;
    v4 += 56;
  }
  while (v4 != v5);
  return v5;
}

uint64_t *sub_1002F9B84(uint64_t **a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = a1 + 1;
  uint64_t v5 = a1[1];
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        unint64_t v8 = (uint64_t **)v5;
        unint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    unint64_t v8 = a1 + 1;
LABEL_10:
    unint64_t v10 = (uint64_t *)operator new(0x28uLL);
    v10[4] = *a3;
    sub_1000EDF90(a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

uint64_t sub_1002F9C40@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char **a5@<X8>)
{
  if (!sub_100278D98((uint64_t)a1))
  {
    sub_101A5AECC();
    goto LABEL_28;
  }
  if (!*(unsigned char *)(a3 + 32))
  {
    sub_101A5AD5C();
LABEL_28:
    __break(1u);
  }
  long long v33 = 0u;
  long long v34 = 0u;
  int v35 = 1065353216;
  unint64_t v10 = (void *)a1[29];
  for (uint64_t i = (void *)a1[30]; v10 != i; v10 += 4)
  {
    *(void *)uint64_t buf = v10 + 2;
    uint64_t v12 = (uint64_t **)sub_1002FA714((uint64_t)&v33, v10 + 2, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
    uint64_t v13 = *(void *)(a3 + 24);
    if (!v13) {
      sub_10015E48C();
    }
    *(void *)uint64_t buf = (*(double (**)(uint64_t, void, uint64_t))(*(void *)v13 + 48))(v13, *v10, a2);
    sub_10007EF64(v12 + 4, (double *)buf);
  }
  sub_1002787CC(a1, (uint64_t)v31);
  int v14 = *(_DWORD *)(a2 + 160);
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  *((_DWORD *)a5 + 6) = 3;
  *((unsigned char *)a5 + 80) = 0;
  a5[5] = 0;
  a5[6] = 0;
  a5[4] = 0;
  *((unsigned char *)a5 + 56) = 0;
  uint64_t v15 = (char *)sub_1001D9EDC((uint64_t)(a5 + 2), 1uLL);
  uint64_t v17 = &v15[32 * v16];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  *((void *)v15 + 2) = 0;
  *((_DWORD *)v15 + 6) = v14;
  int v18 = v15 + 32;
  unint64_t v20 = *a5;
  uint64_t v19 = a5[1];
  if (v19 != *a5)
  {
    do
    {
      long long v21 = *((_OWORD *)v19 - 2);
      *(_OWORD *)(v15 - 20) = *(_OWORD *)(v19 - 20);
      *((_OWORD *)v15 - 2) = v21;
      v15 -= 32;
      v19 -= 32;
    }
    while (v19 != v20);
    uint64_t v19 = *a5;
  }
  *a5 = v15;
  a5[1] = v18;
  a5[2] = v17;
  if (v19) {
    operator delete(v19);
  }
  a5[1] = v18;
  sub_1002FA358((uint64_t)v15, a4);
  for (j = v32; j; j = (void *)*j)
  {
    if ((j[2] & j[3]) != -1)
    {
      memset(v29, 0, sizeof(v29));
      int v30 = 1065353216;
      for (k = (uint64_t *)v34; k; k = (uint64_t *)*k)
      {
        if (k[2] == j[2] && k[3] == j[3])
        {
          *(void *)uint64_t buf = k + 2;
          uint64_t v26 = (uint64_t **)sub_1002FA714((uint64_t)v29, k + 2, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
          if (k != (uint64_t *)v26) {
            sub_1002FAA04(v26 + 4, (void *)k[4], k + 5);
          }
        }
        else
        {
          *(void *)uint64_t buf = qword_101D0B118;
          uint64_t v25 = (char *)sub_1002FA714((uint64_t)v29, qword_101D0B118, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
          sub_1002D4844(v25 + 32, (void *)k[4], k + 5);
        }
      }
      sub_1002FA3AC((uint64_t)v29, a4, (uint64_t)v28);
      sub_1001E1CE8(a4, buf);
      sub_100217CDC((uint64_t)buf);
    }
  }
  sub_1000D7D80((uint64_t)v31);
  return sub_1002FA690((uint64_t)&v33);
}

void sub_1002FA280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  sub_1001E058C(v41);
  sub_1000D7D80((uint64_t)&a36);
  sub_1002FA690((uint64_t)&a41);
  _Unwind_Resume(a1);
}

void sub_1002FA358(uint64_t a1, uint64_t a2)
{
  double v2 = COERCE_DOUBLE(sub_1001E1D38(a2));
  if (v4)
  {
    v3.n128_f64[0] = v2;
    if (v2 > 0.0 && v2 < 1.0)
    {
      log(v2);
    }
    else
    {
      uint64_t v6 = sub_101A5B03C(v3);
      sub_1002FA3AC(v6);
    }
  }
}

uint64_t *sub_1002FA3AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(uint64_t **)(a1 + 16);
  if (v6)
  {
    int v7 = 0;
    do
    {
      v7 += *((_DWORD *)v6 + 12);
      uint64_t v6 = (uint64_t *)*v6;
    }
    while (v6);
  }
  else
  {
    int v7 = 0;
  }
  uint64_t v8 = nullsub_41(a2, a1);
  unint64_t v9 = *(uint64_t **)(v8 + 8);
  if (v9)
  {
    uint64_t v3 = v8;
    unint64_t v10 = *(uint64_t **)(v8 + 8);
    do
    {
      int v11 = *((_DWORD *)v10 + 8);
      if (v11 <= 2)
      {
        if (v11 == 2) {
          goto LABEL_15;
        }
        ++v10;
      }
      unint64_t v10 = (uint64_t *)*v10;
    }
    while (v10);
  }
  uint64_t v8 = sub_101A5B1A4();
  do
  {
    ++v9;
    do
    {
      unint64_t v9 = (uint64_t *)*v9;
      if (!v9)
      {
        uint64_t v22 = (_Unwind_Exception *)sub_101A5B314(v8);
        sub_1000D7D80(a3);
        _Unwind_Resume(v22);
      }
LABEL_15:
      int v12 = *((_DWORD *)v9 + 8);
    }
    while (v12 > 3);
  }
  while (v12 != 3);
  LODWORD(v23) = 2;
  double v13 = *(double *)sub_1000A43BC(v3, (int *)&v23);
  LODWORD(v23) = 3;
  uint64_t result = sub_1000A43BC(v3, (int *)&v23);
  double v15 = *(double *)result;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_DWORD *)(a3 + 32) = 1065353216;
  uint64_t v16 = *(uint64_t **)(a1 + 16);
  if (v16)
  {
    double v17 = (double)v7;
    do
    {
      if (~*((_OWORD *)v16 + 1) == 0) {
        double v18 = v15;
      }
      else {
        double v18 = v13;
      }
      sub_1002FA53C((void **)v16 + 4, v18);
      uint64_t v20 = v19;
      unint64_t v21 = v16[6];
      BOOL v23 = v16 + 2;
      uint64_t result = sub_1001F2690(a3, v16 + 2, (uint64_t)&unk_101D0B290, &v23);
      result[4] = v20;
      *((double *)result + 5) = (double)v21 / v17;
      uint64_t v16 = (uint64_t *)*v16;
    }
    while (v16);
  }
  return result;
}

void **sub_1002FA53C(void **result, double a2)
{
  double v2 = result[2];
  if (!v2) {
    sub_101A5B484();
  }
  if (a2 < 0.0 || a2 > 1.0) {
    sub_101A5B4B0();
  }
  BOOL v4 = a2 == 0.0 || v2 == (void *)1;
  if (!v4)
  {
    if (a2 == 1.0)
    {
      uint64_t v6 = result[1];
      ++result;
      uint64_t v5 = v6;
      if (v6)
      {
        do
          uint64_t v5 = (void *)v5[1];
        while (v5);
      }
      else
      {
        do
        {
          BOOL v4 = *result[2] == (void)result;
          uint64_t result = (void **)result[2];
        }
        while (v4);
      }
    }
    else
    {
      double v7 = (double)((unint64_t)v2 - 1);
      double v8 = v7 * a2;
      if (v8 < 0.0) {
        double v8 = 0.0;
      }
      if (v8 <= v7) {
        double v9 = v8;
      }
      else {
        double v9 = (double)((unint64_t)v2 - 1);
      }
      uint64_t v10 = llround(floor(v9));
      if (v10 < 0 || v10 > (int)v2 - 2) {
        sub_101A5B4DC();
      }
      double v13 = *result;
      uint64_t result = sub_1002D4510(&v13, v10);
      int v11 = v13;
      int v12 = (void *)v13[1];
      if (v12)
      {
        do
          int v12 = (void *)*v12;
        while (v12);
      }
      else
      {
        do
        {
          BOOL v4 = *(void *)v11[2] == (void)v11;
          int v11 = (void *)v11[2];
        }
        while (!v4);
      }
    }
  }
  return result;
}

void sub_1002FA660(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_1002FA690(uint64_t a1)
{
  sub_1002FA6CC(a1, *(void ***)(a1 + 16));
  double v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_1002FA6CC(uint64_t a1, void **a2)
{
  if (a2)
  {
    double v2 = a2;
    do
    {
      uint64_t v3 = *v2;
      sub_1000F5BB0((uint64_t)(v2 + 4), v2[5]);
      operator delete(v2);
      double v2 = (void **)v3;
    }
    while (v3);
  }
}

void *sub_1002FA714(uint64_t a1, void *a2, uint64_t a3, _OWORD **a4)
{
  uint64_t v7 = 0;
  unint64_t v8 = 0;
  do
    v8 ^= (v8 << 6) + (v8 >> 2) + 2654435769u + *((unsigned __int8 *)a2 + v7++);
  while (v7 != 16);
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v4 = v8;
      if (v8 >= v9) {
        unint64_t v4 = v8 % v9;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
    int v11 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == *a2 && i[3] == a2[1]) {
            return i;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v4) {
            break;
          }
        }
      }
    }
  }
  double v15 = (void *)(a1 + 16);
  uint64_t i = operator new(0x38uLL);
  void *i = 0;
  i[1] = v8;
  *((_OWORD *)i + 1) = **a4;
  i[6] = 0;
  i[5] = 0;
  i[4] = i + 5;
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    BOOL v18 = 1;
    if (v9 >= 3) {
      BOOL v18 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v9);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_100100330(a1, v21);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v4 = v8 % v9;
      }
      else {
        unint64_t v4 = v8;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
  }
  uint64_t v22 = *(void *)a1;
  BOOL v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    void *i = *v23;
LABEL_44:
    *BOOL v23 = i;
    goto LABEL_45;
  }
  void *i = *v15;
  *double v15 = i;
  *(void *)(v22 + 8 * v4) = v15;
  if (*i)
  {
    unint64_t v24 = *(void *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v24 >= v9) {
        v24 %= v9;
      }
    }
    else
    {
      v24 &= v9 - 1;
    }
    BOOL v23 = (void *)(*(void *)a1 + 8 * v24);
    goto LABEL_44;
  }
LABEL_45:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1002FA98C(_Unwind_Exception *a1)
{
  sub_1002FA9A8(v2, v1);
  _Unwind_Resume(a1);
}

void sub_1002FA9A8(uint64_t a1, void **a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_1000F5BB0((uint64_t)(a2 + 4), a2[5]);
  }
  else if (!a2)
  {
    return;
  }

  operator delete(a2);
}

uint64_t **sub_1002FAA04(uint64_t **result, void *a2, void *a3)
{
  uint64_t v5 = result;
  if (result[2])
  {
    uint64_t v6 = *result;
    uint64_t v7 = result[1];
    *uint64_t result = (uint64_t *)(result + 1);
    _DWORD v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      unint64_t v8 = (uint64_t *)v6[1];
    }
    else {
      unint64_t v8 = v6;
    }
    int v14 = result;
    double v15 = v8;
    float v16 = v8;
    if (v8)
    {
      double v15 = sub_1002FABD8((uint64_t)v8);
      if (a2 != a3)
      {
        unint64_t v9 = a2;
        do
        {
          void v8[4] = v9[4];
          sub_1002FAB68(v5, (uint64_t)v8);
          unint64_t v8 = v15;
          float v16 = v15;
          if (v15) {
            double v15 = sub_1002FABD8((uint64_t)v15);
          }
          uint8x8_t v10 = (void *)v9[1];
          if (v10)
          {
            do
            {
              a2 = v10;
              uint8x8_t v10 = (void *)*v10;
            }
            while (v10);
          }
          else
          {
            do
            {
              a2 = (void *)v9[2];
              BOOL v11 = *a2 == (void)v9;
              unint64_t v9 = a2;
            }
            while (!v11);
          }
          if (!v8) {
            break;
          }
          unint64_t v9 = a2;
        }
        while (a2 != a3);
      }
    }
    uint64_t result = (uint64_t **)sub_1002FAC2C((uint64_t)&v14);
  }
  if (a2 != a3)
  {
    do
    {
      uint64_t result = (uint64_t **)sub_10007EF64(v5, (double *)a2 + 4);
      int v12 = (void *)a2[1];
      if (v12)
      {
        do
        {
          unint64_t v13 = v12;
          int v12 = (void *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          unint64_t v13 = (void *)a2[2];
          BOOL v11 = *v13 == (void)a2;
          a2 = v13;
        }
        while (!v11);
      }
      a2 = v13;
    }
    while (v13 != a3);
  }
  return result;
}

void sub_1002FAB54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1002FAC2C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FAB68(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = a1 + 1;
  unint64_t v4 = a1[1];
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v3 = (uint64_t **)v4;
        if (*(double *)(a2 + 32) >= *((double *)v4 + 4)) {
          break;
        }
        unint64_t v4 = (uint64_t *)*v4;
        uint64_t v5 = v3;
        if (!*v3) {
          goto LABEL_8;
        }
      }
      unint64_t v4 = (uint64_t *)v4[1];
    }
    while (v4);
    uint64_t v5 = v3 + 1;
  }
  else
  {
    uint64_t v5 = a1 + 1;
  }
LABEL_8:
  sub_1000EDF90(a1, (uint64_t)v3, v5, (uint64_t *)a2);
  return a2;
}

void *sub_1002FABD8(uint64_t a1)
{
  uint64_t result = *(void **)(a1 + 16);
  if (result)
  {
    uint64_t v3 = (void *)*result;
    if (*result == a1)
    {
      *uint64_t result = 0;
      while (1)
      {
        unint64_t v4 = (void *)result[1];
        if (!v4) {
          break;
        }
        do
        {
          uint64_t result = v4;
          unint64_t v4 = (void *)*v4;
        }
        while (v4);
      }
    }
    else
    {
      for (result[1] = 0; v3; uint64_t v3 = (void *)result[1])
      {
        do
        {
          uint64_t result = v3;
          uint64_t v3 = (void *)*v3;
        }
        while (v3);
      }
    }
  }
  return result;
}

uint64_t sub_1002FAC2C(uint64_t a1)
{
  sub_1000F5BB0(*(void *)a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = (void *)v2[2];
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        uint64_t v3 = (void *)v3[2];
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    sub_1000F5BB0(*(void *)a1, v2);
  }
  return a1;
}

void sub_1002FAC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (sub_100278D98(a2))
  {
    if (*(unsigned char *)(a4 + 32))
    {
      memset(v15, 0, sizeof(v15));
      int v16 = 1065353216;
      uint8x8_t v10 = *(void **)(a2 + 232);
      for (uint64_t i = *(void **)(a2 + 240); v10 != i; v10 += 4)
      {
        *(void *)uint64_t buf = v10 + 2;
        int v12 = (uint64_t **)sub_1002FA714((uint64_t)v15, v10 + 2, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
        uint64_t v13 = *(void *)(a4 + 24);
        if (!v13) {
          sub_10015E48C();
        }
        *(void *)uint64_t buf = (*(double (**)(uint64_t, void, uint64_t))(*(void *)v13 + 48))(v13, *v10, a3);
        sub_10007EF64(v12 + 4, (double *)buf);
      }
      (*(void (**)(uint64_t *__return_ptr, uint64_t, unsigned char *, uint64_t))(*(void *)a1 + 24))(&v14, a1, v15, a5);
      sub_1001E1CE8(a5, buf);
      sub_100217CDC((uint64_t)buf);
    }
    sub_101A5B508();
  }
  else
  {
    sub_101A5B678();
  }
  __break(1u);
}

void sub_1002FB3E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  sub_1001E058C(v33);
  if (a19) {
    (*(void (**)(uint64_t))(*(void *)a19 + 8))(a19);
  }
  if (__p) {
    operator delete(__p);
  }
  sub_1000D7D80((uint64_t)&a23);
  sub_1000D7D80((uint64_t)&a28);
  sub_1002FA690((uint64_t)&a33);
  _Unwind_Resume(a1);
}

void *sub_1002FB4B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(uint64_t **)(a1 + 16);
  if (v6)
  {
    int v7 = 0;
    do
    {
      v7 += *((_DWORD *)v6 + 12);
      uint64_t v6 = (uint64_t *)*v6;
    }
    while (v6);
    double v8 = (double)v7;
  }
  else
  {
    double v8 = 0.0;
  }
  double v9 = sub_1001E1C8C(a2);
  double v10 = sub_1001E1CB8(a2);
  sub_1000C7F88(&v22);
  LODWORD(v21) = 0;
  CFStringRef v11 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsNullSpaceDistanceReductionFunction", 0x8000100u, kCFAllocatorNull);
  int v12 = sub_1004D08E4(v22, (uint64_t)v11, &v21);
  CFRelease(v11);
  unsigned int v13 = v21;
  if (v23) {
    sub_1000DB0A0(v23);
  }
  if (v12) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 5;
  }
  ((void (*)(uint64_t *__return_ptr, uint64_t, void, double, double))loc_1002D3F78)(&v22, v14, 0, v9, v10);
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_DWORD *)(a3 + 32) = 1065353216;
  for (uint64_t i = *(uint64_t **)(a1 + 16); i; uint64_t i = (uint64_t *)*i)
  {
    sub_1002D47EC((uint64_t)v20, (uint64_t)(i + 4));
    if (!v24) {
      sub_10015E48C();
    }
    double v16 = (*(double (**)(uint64_t, void **))(*(void *)v24 + 48))(v24, v20);
    unint64_t v17 = i[6];
    size_t v21 = i + 2;
    BOOL v18 = (double *)sub_1001F2690(a3, i + 2, (uint64_t)&unk_101D0B290, &v21);
    v18[4] = v16;
    v18[5] = (double)v17 / v8;
    sub_1000F5BB0((uint64_t)v20, v20[1]);
  }
  return sub_1002D4768(&v22);
}

void sub_1002FB6A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, std::__shared_weak_count *a15)
{
  if (a15) {
    sub_1000DB0A0(a15);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002FB6F4(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_1002FB724(void *a1)
{
  if (sub_1002D3900((uint64_t)a1))
  {
    unint64_t v2 = 0;
    while (2)
    {
      uint64_t v3 = sub_1002D386C(a1, v2) + 16;
      while (1)
      {
        uint64_t v3 = *(void *)v3;
        if (!v3) {
          break;
        }
        if (*(_DWORD *)(v3 + 24) == 5)
        {
          sub_1000C7F88(buf);
          unsigned int v16 = 0;
          CFStringRef v9 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsModelQualityNumFingerprintsWiFiBleThreshold", 0x8000100u, kCFAllocatorNull);
          int v10 = sub_1004D08E4(*(uint64_t *)buf, (uint64_t)v9, &v16);
          CFRelease(v9);
          unsigned int v11 = v16;
          if (*(void *)v18) {
            sub_1000DB0A0(*(std::__shared_weak_count **)v18);
          }
          if (v10) {
            unsigned int v8 = v11;
          }
          else {
            unsigned int v8 = 150;
          }
          int v7 = 1;
          goto LABEL_19;
        }
      }
      if (++v2 < sub_1002D3900((uint64_t)a1)) {
        continue;
      }
      break;
    }
  }
  sub_1000C7F88(buf);
  unsigned int v16 = 0;
  CFStringRef v4 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsModelQualityNumFingerprintsWiFiOnlyThreshold", 0x8000100u, kCFAllocatorNull);
  int v5 = sub_1004D08E4(*(uint64_t *)buf, (uint64_t)v4, &v16);
  CFRelease(v4);
  unsigned int v6 = v16;
  if (*(void *)v18) {
    sub_1000DB0A0(*(std::__shared_weak_count **)v18);
  }
  int v7 = 0;
  if (v5) {
    unsigned int v8 = v6;
  }
  else {
    unsigned int v8 = 200;
  }
LABEL_19:
  unint64_t v12 = v8;
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5630);
  }
  unsigned int v13 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v14 = sub_1002D3900((uint64_t)a1);
    *(_DWORD *)uint64_t buf = 68289794;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)BOOL v18 = 2082;
    *(void *)&v18[2] = "";
    __int16 v19 = 2050;
    uint64_t v20 = v14;
    __int16 v21 = 1026;
    int v22 = v7;
    __int16 v23 = 2050;
    unint64_t v24 = v12;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"evaluateQualityWithNumFingerprints\", \"Num fingerprints (unpruned)\":%{public}lu, \"Has BLE\":%{public}hhd, \"Threshold\":%{public}lu}", buf, 0x2Cu);
  }
  if (sub_1002D3900((uint64_t)a1) < v12) {
    return 1;
  }
  else {
    return 3;
  }
}

void sub_1002FB97C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002FB9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a2;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  v81 = (void **)(a2 + 8);
  sub_1000FB43C((char *)(a2 + 8), 0, 0, 0);
  sub_1000C7F88(buf);
  LOBYTE(v88) = 0;
  CFStringRef v4 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAdaptiveSensorsEnable", 0x8000100u, kCFAllocatorNull);
  char v5 = sub_1000D29FC(*(uint64_t *)buf, (uint64_t)v4, (BOOL *)&v88);
  CFRelease(v4);
  int v6 = v88;
  if (*(void *)v98) {
    sub_1000DB0A0(*(std::__shared_weak_count **)v98);
  }
  v94[0] = &stru_10234F018;
  uint64_t v7 = sub_100274A14(1, 1, 1);
  char v8 = v5 ^ 1;
  v94[1] = v7;
  if (v6) {
    char v8 = 1;
  }
  char v95 = v8;
  uint64_t v91 = 0;
  uint64_t v92 = 0;
  uint64_t v93 = 0;
  sub_10029D83C((uint64_t)v94, a1, (float *)&v91);
  if (sub_1002765A8(a1) == 1)
  {
    HIDWORD(v92) = 0;
    LODWORD(v93) = 0;
  }
  long long v88 = 0u;
  long long v89 = 0u;
  int v90 = 1065353216;
  v86 = 0;
  unint64_t v87 = 0;
  uint64_t v84 = 0;
  v85 = &v86;
  v82 = &v83;
  v83 = 0;
  uint64_t v10 = *(void *)(a1 + 232);
  uint64_t v9 = *(void *)(a1 + 240);
  unint64_t v11 = (v9 - v10) >> 5;
  if (v9 == v10)
  {
    unsigned int v21 = 0;
    *(_DWORD *)(v3 + 32) = 0;
    __int16 v19 = (int *)(v3 + 32);
    *(_DWORD *)(v3 + 36) = 0;
    uint64_t v27 = (int *)(v3 + 36);
    *(_DWORD *)(v3 + 40) = 0;
    uint64_t v20 = (int *)(v3 + 40);
  }
  else
  {
    do
    {
      for (uint64_t i = *(uint64_t **)(*(void *)v10 + 16); i; uint64_t i = (uint64_t *)*i)
      {
        int v13 = *((_DWORD *)i + 6);
        if (v13 == 6)
        {
          double v15 = (uint64_t **)&v82;
        }
        else
        {
          if (v13 != 5)
          {
            if (v13 == 1)
            {
              *(void *)uint64_t buf = i + 4;
              uint64_t v14 = sub_1002FC390((uint64_t)&v88, (uint64_t)(i + 4), (uint64_t)&unk_101D0B290, (uint64_t *)buf);
              ++*((_DWORD *)v14 + 12);
            }
            continue;
          }
          double v15 = (uint64_t **)&v85;
        }
        sub_1002FC8B8(v15, (uint64_t)(i + 4), (uint64_t)(i + 4));
      }
      v10 += 32;
    }
    while (v10 != v9);
    int v16 = v87;
    int v17 = v84;
    BOOL v18 = (uint64_t **)v89;
    *(_DWORD *)(v3 + 32) = DWORD2(v89);
    __int16 v19 = (int *)(v3 + 32);
    *(_DWORD *)(v3 + 36) = v16;
    v80 = (int *)(v3 + 36);
    *(_DWORD *)(v3 + 40) = v17;
    uint64_t v20 = (int *)(v3 + 40);
    if (v18)
    {
      uint64_t v79 = v3;
      unsigned int v21 = 0;
      do
      {
        unint64_t v22 = *((int *)v18 + 12);
        sub_1000C7F88(buf);
        double v96 = 0.0;
        CFStringRef v23 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsRobustWiFiMinARDecisionTreeFeatureThreshold", 0x8000100u, kCFAllocatorNull);
        int v24 = sub_1000A6A10(*(uint64_t *)buf, (uint64_t)v23, &v96);
        CFRelease(v23);
        double v25 = v96;
        if (*(void *)v98) {
          sub_1000DB0A0(*(std::__shared_weak_count **)v98);
        }
        if (v24) {
          double v26 = v25;
        }
        else {
          double v26 = 0.05;
        }
        if (v26 < (float)(v22 / v11)) {
          ++v21;
        }
        BOOL v18 = (uint64_t **)*v18;
      }
      while (v18);
      uint64_t v3 = v79;
      uint64_t v27 = v80;
    }
    else
    {
      unsigned int v21 = 0;
      uint64_t v27 = (int *)(v3 + 36);
    }
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5630);
  }
  unint64_t v28 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    int v29 = *v19;
    int v30 = *v27;
    int v31 = *v20;
    *(_DWORD *)uint64_t buf = 68290562;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)v98 = 2082;
    *(void *)&v98[2] = "";
    __int16 v99 = 2050;
    unint64_t v100 = v11;
    __int16 v101 = 2050;
    uint64_t v102 = v21;
    __int16 v103 = 1026;
    int v104 = v29;
    __int16 v105 = 1026;
    int v106 = v30;
    __int16 v107 = 1026;
    int v108 = v31;
    __int16 v109 = 2050;
    double v110 = *(float *)&v93;
    _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"evaluateQualityTreeBased\", \"Num fingerprints (post-pruning)\":%{public}lu, \"NumRobustWifiSources\":%{public}lu, \"NumWiFiSources\":%{public}u, \"NumBLESources\":%{public}u, \"NumUWBSources\":%{public}u, \"maxClusterRfDistance\":\"%{public}f\"}", buf, 0x42u);
  }
  sub_1000C7F88(buf);
  LODWORD(v96) = 0;
  CFStringRef v32 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsNumMinFingerprintsPostPruningTreeBasedThreshold", 0x8000100u, kCFAllocatorNull);
  int v33 = sub_1004D08E4(*(uint64_t *)buf, (uint64_t)v32, &v96);
  CFRelease(v32);
  unint64_t v34 = LODWORD(v96);
  if (*(void *)v98) {
    sub_1000DB0A0(*(std::__shared_weak_count **)v98);
  }
  unint64_t v35 = 130;
  if (v33) {
    unint64_t v35 = v34;
  }
  if (v11 < v35)
  {
    unint64_t v36 = *(void *)(v3 + 24);
    v37 = *(int **)(v3 + 16);
    if ((unint64_t)v37 < v36)
    {
      int v38 = 5;
LABEL_71:
      int *v37 = v38;
      v62 = v37 + 1;
LABEL_103:
      *(void *)(v3 + 16) = v62;
      int v52 = 1;
      goto LABEL_104;
    }
    v55 = (int *)*v81;
    uint64_t v56 = ((char *)v37 - (unsigned char *)*v81) >> 2;
    unint64_t v57 = v56 + 1;
    if ((unint64_t)(v56 + 1) >> 62) {
      sub_1001D7FD4();
    }
    uint64_t v58 = v36 - (void)v55;
    if (v58 >> 1 > v57) {
      unint64_t v57 = v58 >> 1;
    }
    if ((unint64_t)v58 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v59 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v59 = v57;
    }
    if (v59)
    {
      v60 = (char *)sub_10017EA34(v3 + 24, v59);
      v55 = *(int **)(v3 + 8);
      v37 = *(int **)(v3 + 16);
    }
    else
    {
      v60 = 0;
    }
    v68 = &v60[4 * v56];
    v69 = &v60[4 * v59];
    *(_DWORD *)v68 = 5;
    v62 = v68 + 4;
    while (v37 != v55)
    {
      int v70 = *--v37;
      *((_DWORD *)v68 - 1) = v70;
      v68 -= 4;
    }
    goto LABEL_101;
  }
  float v39 = *(float *)&v93;
  sub_1000C7F88(buf);
  double v96 = 0.0;
  CFStringRef v40 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaxClusterRFDistanceDecisionTreeNodeThreshold", 0x8000100u, kCFAllocatorNull);
  int v41 = sub_1000A6A10(*(uint64_t *)buf, (uint64_t)v40, &v96);
  CFRelease(v40);
  double v42 = v96;
  if (*(void *)v98) {
    sub_1000DB0A0(*(std::__shared_weak_count **)v98);
  }
  double v43 = 0.49;
  if (v41) {
    double v43 = v42;
  }
  if (v43 >= v39)
  {
    unint64_t v61 = *(void *)(v3 + 24);
    v37 = *(int **)(v3 + 16);
    if ((unint64_t)v37 < v61)
    {
      int v38 = 6;
      goto LABEL_71;
    }
    v55 = (int *)*v81;
    uint64_t v63 = ((char *)v37 - (unsigned char *)*v81) >> 2;
    unint64_t v64 = v63 + 1;
    if ((unint64_t)(v63 + 1) >> 62) {
      sub_1001D7FD4();
    }
    uint64_t v65 = v61 - (void)v55;
    if (v65 >> 1 > v64) {
      unint64_t v64 = v65 >> 1;
    }
    if ((unint64_t)v65 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v66 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v66 = v64;
    }
    if (v66)
    {
      v67 = (char *)sub_10017EA34(v3 + 24, v66);
      v55 = *(int **)(v3 + 8);
      v37 = *(int **)(v3 + 16);
    }
    else
    {
      v67 = 0;
    }
    v68 = &v67[4 * v63];
    v69 = &v67[4 * v66];
    *(_DWORD *)v68 = 6;
    v62 = v68 + 4;
    while (v37 != v55)
    {
      int v71 = *--v37;
      *((_DWORD *)v68 - 1) = v71;
      v68 -= 4;
    }
    goto LABEL_101;
  }
  sub_1000C7F88(buf);
  LODWORD(v96) = 0;
  CFStringRef v44 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsNumRobustWifiSourcesDecisionTreeNodeThreshold", 0x8000100u, kCFAllocatorNull);
  int v45 = sub_1004D08E4(*(uint64_t *)buf, (uint64_t)v44, &v96);
  CFRelease(v44);
  unsigned int v46 = LODWORD(v96);
  if (*(void *)v98) {
    sub_1000DB0A0(*(std::__shared_weak_count **)v98);
  }
  if (v45) {
    unsigned int v47 = v46;
  }
  else {
    unsigned int v47 = 42;
  }
  if (v21 >= v47)
  {
    int v52 = 3;
  }
  else
  {
    unint64_t v48 = v87;
    sub_1000C7F88(buf);
    LODWORD(v96) = 0;
    CFStringRef v49 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsNumBLESourcesDecisionTreeNodeThreshold", 0x8000100u, kCFAllocatorNull);
    int v50 = sub_1004D08E4(*(uint64_t *)buf, (uint64_t)v49, &v96);
    CFRelease(v49);
    unint64_t v51 = LODWORD(v96);
    if (*(void *)v98) {
      sub_1000DB0A0(*(std::__shared_weak_count **)v98);
    }
    int v52 = 3;
    if (v50) {
      unint64_t v53 = v51;
    }
    else {
      unint64_t v53 = 3;
    }
    if (v48 < v53)
    {
      unint64_t v54 = *(void *)(v3 + 24);
      v37 = *(int **)(v3 + 16);
      if ((unint64_t)v37 < v54)
      {
        int v38 = 7;
        goto LABEL_71;
      }
      v55 = (int *)*v81;
      uint64_t v72 = ((char *)v37 - (unsigned char *)*v81) >> 2;
      unint64_t v73 = v72 + 1;
      if ((unint64_t)(v72 + 1) >> 62) {
        sub_1001D7FD4();
      }
      uint64_t v74 = v54 - (void)v55;
      if (v74 >> 1 > v73) {
        unint64_t v73 = v74 >> 1;
      }
      if ((unint64_t)v74 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v75 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v75 = v73;
      }
      if (v75)
      {
        v76 = (char *)sub_10017EA34(v3 + 24, v75);
        v55 = *(int **)(v3 + 8);
        v37 = *(int **)(v3 + 16);
      }
      else
      {
        v76 = 0;
      }
      v68 = &v76[4 * v72];
      v69 = &v76[4 * v75];
      *(_DWORD *)v68 = 7;
      v62 = v68 + 4;
      while (v37 != v55)
      {
        int v77 = *--v37;
        *((_DWORD *)v68 - 1) = v77;
        v68 -= 4;
      }
LABEL_101:
      *(void *)(v3 + 8) = v68;
      *(void *)(v3 + 16) = v62;
      *(void *)(v3 + 24) = v69;
      if (v55) {
        operator delete(v55);
      }
      goto LABEL_103;
    }
  }
LABEL_104:
  *(_DWORD *)uint64_t v3 = v52;
  sub_1002FC334((uint64_t)&v82, v83);
  sub_1002FC334((uint64_t)&v85, v86);
  return sub_1002FC2B4((uint64_t)&v88);
}

void sub_1002FC1B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5, ...)
{
  va_start(va2, a5);
  va_start(va1, a5);
  va_start(va, a5);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void *);
  uint64_t v11 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v14 = va_arg(va2, void *);
  uint64_t v15 = va_arg(va2, void);
  sub_1002FC334((uint64_t)va, v10);
  sub_1002FC334((uint64_t)va1, v14);
  sub_1002FC2B4((uint64_t)va2);
  uint64_t v7 = *a5;
  if (*a5)
  {
    *(void *)(v5 + 16) = v7;
    operator delete(v7);
  }
  _Unwind_Resume(a1);
}

void sub_1002FC284(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_1002FC2B4(uint64_t a1)
{
  sub_1002FC2F0(a1, *(void **)(a1 + 16));
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_1002FC2F0(uint64_t a1, void *a2)
{
  if (a2)
  {
    unint64_t v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      sub_1001F014C((uint64_t)(v2 + 2));
      operator delete(v2);
      unint64_t v2 = v3;
    }
    while (v3);
  }
}

void sub_1002FC334(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1002FC334(a1, *a2);
    sub_1002FC334(a1, a2[1]);
    sub_1001F014C((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void *sub_1002FC390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_1002FC6A4(a1 + 24, a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    uint64_t v14 = *(void **)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      double v26 = a4;
      uint64_t v15 = (void *)*v14;
      if (*v14)
      {
        do
        {
          unint64_t v16 = v15[1];
          if (v16 == v10)
          {
            if (sub_1002FC7A4((uint64_t)(v15 + 2), a2)) {
              return v15;
            }
          }
          else
          {
            if (v13 > 1)
            {
              if (v16 >= v11) {
                v16 %= v11;
              }
            }
            else
            {
              v16 &= v11 - 1;
            }
            if (v16 != v4) {
              break;
            }
          }
          uint64_t v15 = (void *)*v15;
        }
        while (v15);
      }
      a4 = v26;
    }
  }
  sub_1002FC624(a1, v10, a4, (uint64_t)v27);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_100100330(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  CFStringRef v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v27[0] = *v23;
    *CFStringRef v23 = v27[0];
  }
  else
  {
    *(void *)v27[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v27[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v27[0])
    {
      unint64_t v24 = *(void *)(*(void *)v27[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11) {
          v24 %= v11;
        }
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v24) = v27[0];
    }
  }
  uint64_t v15 = (void *)v27[0];
  v27[0] = 0;
  ++*v8;
  sub_1002FC860((uint64_t)v27, 0);
  return v15;
}

void sub_1002FC60C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1002FC860((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FC624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  uint64_t v8 = operator new(0x38uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *uint64_t v8 = 0;
  v8[1] = a2;
  uint64_t result = sub_1001F073C((uint64_t)(v8 + 2), *a3);
  *((_DWORD *)v8 + 12) = 0;
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_1002FC68C(_Unwind_Exception *a1)
{
  sub_1002FC860(v1, 0);
  _Unwind_Resume(a1);
}

unint64_t sub_1002FC6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned int *)(a2 + 24);
  if (v2 == -1)
  {
    uint64_t v4 = 299792458;
LABEL_5:
    uint64_t v5 = -1;
    goto LABEL_6;
  }
  uint64_t v4 = ((uint64_t (*)(char *))*(&off_1022A5650 + v2))(&v9);
  uint64_t v5 = *(unsigned int *)(a2 + 24);
  if (v5 == -1) {
    goto LABEL_5;
  }
LABEL_6:
  unint64_t v6 = 0x9DDFEA08EB382D69 * (v4 ^ __ROR8__(v5 + 16, 16));
  unint64_t v7 = __ROR8__(v5 + 16, 16) ^ (v6 >> 47);
  return (0x9DDFEA08EB382D69 * ((0x9DDFEA08EB382D69 * (v7 ^ v6)) ^ ((0x9DDFEA08EB382D69 * (v7 ^ v6)) >> 47))) ^ v5;
}

uint64_t sub_1002FC740(uint64_t a1, uint64_t a2)
{
  return *(void *)a2;
}

unint64_t sub_1002FC748(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 0;
  unint64_t result = 0;
  do
    result ^= (result << 6) + (result >> 2) + 2654435769u + *(unsigned __int8 *)(a2 + v2++);
  while (v2 != 16);
  return result;
}

unint64_t sub_1002FC780(uint64_t a1, uint64_t a2)
{
  return sub_100103388((uint64_t)&v3, a2);
}

uint64_t sub_1002FC7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 24);
  int v5 = *(_DWORD *)(a2 + 24);
  BOOL v6 = v5 == v4;
  BOOL v9 = v5 == -1;
  BOOL v7 = v5 == -1;
  if (v9) {
    BOOL v6 = 0;
  }
  if (v4 == -1) {
    uint64_t result = v7;
  }
  else {
    uint64_t result = v6;
  }
  BOOL v9 = v4 == -1 || !v6;
  if (!v9)
  {
    unint64_t v11 = &v10;
    return ((uint64_t (*)(char **, uint64_t))*(&off_1022A5668 + v4))(&v11, a1);
  }
  return result;
}

BOOL sub_1002FC810(uint64_t a1, void *a2, void *a3)
{
  return *a2 == *a3;
}

BOOL sub_1002FC824(uint64_t a1, void *a2, void *a3)
{
  return *a2 == *a3 && a2[1] == a3[1];
}

uint64_t sub_1002FC83C(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  return sub_100103744((uint64_t)&v4, a2, a3);
}

void sub_1002FC860(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1001F014C((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

uint64_t *sub_1002FC8B8(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  int v5 = (uint64_t **)sub_1002FC94C((uint64_t)a1, &v10, a2);
  BOOL v6 = *v5;
  if (!*v5)
  {
    BOOL v7 = v5;
    sub_1002FC9E0((uint64_t)a1, a3, (uint64_t)v9);
    sub_1000EDF90(a1, v10, v7, v9[0]);
    BOOL v6 = v9[0];
    v9[0] = 0;
    sub_1001F0858((uint64_t)v9, 0);
  }
  return v6;
}

void *sub_1002FC94C(uint64_t a1, void *a2, uint64_t a3)
{
  int v5 = (void *)(a1 + 8);
  char v4 = *(void **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        BOOL v7 = v4;
        uint64_t v8 = (uint64_t)(v4 + 4);
        if (!sub_1002FCA4C(a3, (uint64_t)(v4 + 4))) {
          break;
        }
        char v4 = (void *)*v7;
        int v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (!sub_1002FCA4C(v8, a3)) {
        break;
      }
      int v5 = v7 + 1;
      char v4 = (void *)v7[1];
    }
    while (v4);
  }
  else
  {
    BOOL v7 = (void *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

uint64_t sub_1002FC9E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  BOOL v6 = operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_1001F073C((uint64_t)v6 + 32, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1002FCA34(_Unwind_Exception *a1)
{
  sub_1001F0858(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FCA4C(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)(a2 + 24);
  if (v2 == -1) {
    return 0;
  }
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  if (v3 == -1 || v3 < v2) {
    return 1;
  }
  if (v3 > v2) {
    return 0;
  }
  BOOL v6 = &v5;
  return ((uint64_t (*)(char **, uint64_t, uint64_t))*(&off_1022A5680 + v3))(&v6, a1, a2);
}

BOOL sub_1002FCAC4(uint64_t a1, void *a2, void *a3)
{
  return *a2 < *a3;
}

uint64_t sub_1002FCAD8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v3 = bswap64(*a2);
  unint64_t v4 = bswap64(*a3);
  if (v3 == v4 && (v3 = bswap64(a2[1]), unint64_t v4 = bswap64(a3[1]), v3 == v4))
  {
    unsigned int v5 = 0;
  }
  else if (v3 < v4)
  {
    unsigned int v5 = -1;
  }
  else
  {
    unsigned int v5 = 1;
  }
  return v5 >> 31;
}

BOOL sub_1002FCB24(uint64_t a1, const void **a2, const void **a3)
{
  return sub_100130070((uint64_t)&v4, a2, a3);
}

double sub_1002FCB48(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = a2;
  return result;
}

uint64_t sub_1002FCB60(uint64_t a1)
{
  sub_1002FCBAC(a1);
  unint64_t v3 = (void **)(a1 + 16);
  sub_1002334EC(&v3);
  sub_1002FCE68((uint64_t *)(a1 + 8), 0);
  return a1;
}

uint64_t sub_1002FCBAC(uint64_t a1)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  uint64_t v2 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  uint64_t v5 = v2;
  BOOL v6 = (void **)&v4;
  sub_1002334EC(&v6);
  *(_DWORD *)a1 = 0;
  return sub_1002FCE68((uint64_t *)(a1 + 8), 0);
}

void sub_1002FCC0C(uint64_t a1, uint64_t a2)
{
  int v3 = 0;
  sub_1001EE1F4(&v3);
  sub_1001EC8C4((ssize_t)&v3);
  j__CFAbsoluteTimeGetCurrent_5();
  v4[0] = *(_DWORD *)(a2 + 16);
  *(_DWORD *)((char *)v4 + 3) = *(_DWORD *)(a2 + 19);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  sub_1001EF3E8((unsigned int *)&v3);
  operator new();
}

void sub_1002FCE00(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  operator delete();
}

uint64_t sub_1002FCE68(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1002FDB14(result);
    operator delete();
  }
  return result;
}

uint64_t *sub_1002FCEB8(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *(uint64_t **)(a1 + 8);
  if (result) {
    return (uint64_t *)sub_1002FCEC8(result, a2, a3);
  }
  return result;
}

uint64_t **sub_1002FCEC8(uint64_t *a1, unint64_t *a2, uint64_t a3)
{
  long long v4 = (long long *)a1[11];
  if ((long long *)a1[12] == v4)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5698);
    }
    unint64_t v11 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Error - recording transaction does not have any valid recording events", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5698);
      }
      LOWORD(v23[0]) = 0;
      unint64_t v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "void CLMicroLocationRecorder::RecordingTransaction::updateFingerprintMetaInfoOfCurrentRecording(const CLMicroLocationFingerprintConfiguration &, CLMicroLocationRecordingCompletionMetaInformation::RecordingMetaInformation &)", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
    *(_DWORD *)(a3 + 48) = 1;
    *(_DWORD *)uint64_t buf = 1;
    return sub_1000EDED4((uint64_t **)(a3 + 24), (int *)buf, buf);
  }
  else
  {
    sub_1002660C8(v23);
    char v29 = 1;
    long long v35 = *v4;
    char v36 = 1;
    sub_100320670(a1 + 8, (uint64_t)v23, (uint64_t)&v35, a2, buf);
    if (v29) {
      sub_10026633C(v23);
    }
    if (v22)
    {
      sub_1001F03C4((uint64_t)v23, (uint64_t)buf);
      long long v25 = v15;
      uint64_t v26 = v16;
      sub_1001F08B0((uint64_t)v27, (uint64_t)&v17);
      sub_1001F0B48((uint64_t)v28, (uint64_t)v18);
      long long v30 = *(_OWORD *)&v18[40];
      int v31 = v19;
      uint64_t v34 = 0;
      std::string __p = 0;
      int v33 = 0;
      sub_10010F834(&__p, v20, v21, (v21 - (uint64_t)v20) >> 2);
      BOOL v7 = v24;
      if (v24)
      {
        uint64_t v8 = 0;
        BOOL v9 = v24;
        do
        {
          if (*((_DWORD *)v9 + 6) == 1) {
            ++v8;
          }
          BOOL v9 = (uint64_t *)*v9;
        }
        while (v9);
        uint64_t v10 = v24;
        do
        {
          if (*((_DWORD *)v10 + 6) == 5) {
            BOOL v9 = (uint64_t *)((char *)v9 + 1);
          }
          uint64_t v10 = (uint64_t *)*v10;
        }
        while (v10);
        do
        {
          if (*((_DWORD *)v7 + 6) == 6) {
            uint64_t v10 = (uint64_t *)((char *)v10 + 1);
          }
          BOOL v7 = (uint64_t *)*v7;
        }
        while (v7);
      }
      else
      {
        BOOL v9 = 0;
        uint64_t v8 = 0;
        uint64_t v10 = 0;
      }
      *(void *)a3 = v8;
      *(void *)(a3 + 8) = v9;
      *(void *)(a3 + 16) = v10;
      *(_DWORD *)(a3 + 48) = 0;
      if (__p)
      {
        int v33 = __p;
        operator delete(__p);
      }
      sub_1000D7D80((uint64_t)v28);
      sub_1000D7D80((uint64_t)v27);
      sub_1001F00CC((uint64_t)v23);
    }
    else
    {
      *(_DWORD *)(a3 + 48) = 1;
      v23[0] = 1;
      sub_1000EDED4((uint64_t **)(a3 + 24), v23, v23);
    }
    return (uint64_t **)sub_100216190((uint64_t)buf);
  }
}

void sub_1002FD21C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_100216190((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FD284(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(v1 + 88);
  for (uint64_t i = *(void *)(v1 + 96); v2 != i; v2 += 240)
  {
    *(_DWORD *)(v2 + 208) |= 0x2000u;
    *(unsigned char *)(v2 + 157) = 1;
  }
  return result;
}

uint64_t sub_1002FD2B8(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  uint64_t v2 = *(void *)(v1 + 88);
  for (uint64_t i = *(void *)(v1 + 96); v2 != i; v2 += 240)
  {
    *(_DWORD *)(v2 + 208) |= 0x800u;
    *(unsigned char *)(v2 + 156) = 1;
  }
  return result;
}

uint64_t sub_1002FD2EC(uint64_t a1, unsigned int a2, int **a3)
{
  sub_10010F274((uint64_t)v20);
  BOOL v6 = *a3;
  BOOL v7 = a3[1];
  if (*a3 != v7)
  {
    do
    {
      sub_1002757B0(*v6, buf);
      if (v26 >= 0) {
        uint64_t v8 = buf;
      }
      else {
        uint64_t v8 = *(uint8_t **)buf;
      }
      if (v26 >= 0) {
        uint64_t v9 = HIBYTE(v26);
      }
      else {
        uint64_t v9 = *(void *)v24;
      }
      uint64_t v10 = sub_100132EFC(v21, (uint64_t)v8, v9);
      sub_100132EFC(v10, (uint64_t)" ", 1);
      if (SHIBYTE(v26) < 0) {
        operator delete(*(void **)buf);
      }
      ++v6;
    }
    while (v6 != v7);
  }
  std::stringbuf::str();
  if (((char)v19 & 0x80000000) == 0)
  {
    if (v19)
    {
      uint64_t v11 = --v19;
      p_p = &__p;
      goto LABEL_16;
    }
LABEL_19:
    unint64_t v13 = "";
    goto LABEL_20;
  }
  if (!v18) {
    goto LABEL_19;
  }
  uint64_t v11 = v18 - 1;
  p_p = __p;
  --v18;
LABEL_16:
  p_p[v11] = 0;
  if ((v19 & 0x80u) == 0) {
    unint64_t v13 = (const char *)&__p;
  }
  else {
    unint64_t v13 = (const char *)__p;
  }
LABEL_20:
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5698);
  }
  uint64_t v14 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289538;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)unint64_t v24 = 2082;
    *(void *)&v24[2] = "";
    __int16 v25 = 1026;
    signed int v26 = a2;
    __int16 v27 = 2082;
    unint64_t v28 = v13;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"recorder setting confidence and reasons\", \"confidence level\":%{public}d, \"confidence reasons\":%{public, location:escape_only}s}", buf, 0x22u);
  }
  sub_1002FD668(*(void *)(a1 + 8), a2, (uint64_t)a3);
  if ((char)v19 < 0) {
    operator delete(__p);
  }
  *(void *)((char *)v20
  v21[0] = v15;
  if (v22 < 0) {
    operator delete((void *)v21[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_1002FD61C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_101A129A8((uint64_t)&a15);
  _Unwind_Resume(a1);
}

void sub_1002FD668(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unsigned int v22 = a2;
  unint64_t v24 = 0;
  uint64_t v25 = 0;
  CFStringRef v23 = 0;
  sub_10010F834(&v23, *(const void **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 2);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  unsigned int v14 = v22;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v15 = 0;
  sub_10010F834(&v15, v23, (uint64_t)v24, (v24 - (unsigned char *)v23) >> 2);
  if (v4 != v5)
  {
    BOOL v6 = "::CLMicroLocationProto::ConfidenceLevel_IsValid(value)";
    BOOL v7 = "set_confidencelevel";
    while (sub_10023E744(v14))
    {
      *(_DWORD *)(v4 + 208) |= 0x4000u;
      *(_DWORD *)(v4 + 200) = v14;
      *(_DWORD *)(v4 + 192) = 0;
      uint64_t v8 = (unsigned int *)v15;
      uint64_t v9 = v16;
      if (v15 != v16)
      {
        while (1)
        {
          unsigned int v10 = *v8;
          if (!sub_10023E75C(*v8)) {
            break;
          }
          int v11 = *(_DWORD *)(v4 + 192);
          if (v11 == *(_DWORD *)(v4 + 196))
          {
            sub_100221DFC(v4 + 184, v11 + 1);
            int v11 = *(_DWORD *)(v4 + 192);
          }
          uint64_t v12 = *(void *)(v4 + 184);
          *(_DWORD *)(v4 + 192) = v11 + 1;
          *(_DWORD *)(v12 + 4 * v11) = v10;
          if (++v8 == v9) {
            goto LABEL_9;
          }
        }
        int v13 = 20332;
        BOOL v7 = "add_confidencereasons";
        BOOL v6 = "::CLMicroLocationProto::ConfidenceReason_IsValid(value)";
LABEL_18:
        __assert_rtn(v7, "microlocation.pb.h", v13, v6);
      }
LABEL_9:
      v4 += 240;
      if (v4 == v5) {
        goto LABEL_10;
      }
    }
    int v13 = 20312;
    goto LABEL_18;
  }
LABEL_10:
  unsigned int v18 = v14;
  unint64_t v20 = 0;
  uint64_t v21 = 0;
  std::string __p = 0;
  sub_10010F834(&__p, v15, (uint64_t)v16, ((char *)v16 - (unsigned char *)v15) >> 2);
  if (__p)
  {
    unint64_t v20 = __p;
    operator delete(__p);
  }
  if (v15)
  {
    uint64_t v16 = (unsigned int *)v15;
    operator delete(v15);
  }
  if (v23)
  {
    unint64_t v24 = v23;
    operator delete(v23);
  }
}

void sub_1002FD834(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002FD870(uint64_t a1)
{
  if (sub_10014C3C0(a1 + 72))
  {
    uint64_t v2 = *(void *)(a1 + 240);
    if (!v2) {
      operator new();
    }
    uint64_t v3 = sub_1001E40C8(v2);
    sub_10030062C(a1);
    return v3;
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5698);
    }
    uint64_t v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Can't insert because the database is invalid", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5698);
      }
      BOOL v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::insertOrReplace(const std::vector<TableEntry> &) [TableEntry = CLMicroLocationRecordingLabelsTable::Entry]", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    return 0;
  }
}

void sub_1002FDAA4()
{
}

uint64_t sub_1002FDAD0(uint64_t a1, uint64_t a2)
{
  *(CFAbsoluteTime *)a1 = j__CFAbsoluteTimeGetCurrent_5();
  *(void *)(a1 + 8) = mach_continuous_time();
  if ((a2 & 0xFF00000000) != 0) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  *(_DWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t sub_1002FDB14(uint64_t a1)
{
  uint64_t v2 = [[CLOSTransaction alloc] initWithDescription:"com.apple.locationd.microlocation-recording-transaction-commit"];
  if (qword_102419460 != -1) {
    dispatch_once(&qword_102419460, &stru_1022A56B8);
  }
  uint64_t v3 = qword_102419468;
  if (os_log_type_enabled((os_log_t)qword_102419468, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = (char *)operator new(0x28uLL);
    *(void *)(v4 + 29) = 0;
    *(_OWORD *)int v4 = 0u;
    *((_OWORD *)v4 + 1) = 0u;
    sub_1001E0650(a1, v4);
    unint64_t v5 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(*(void *)(a1 + 96) - *(void *)(a1 + 88)) >> 4);
    unint64_t v6 = 0xEEEEEEEEEEEEEEEFLL * ((uint64_t)(*(void *)(a1 + 72) - *(void *)(a1 + 64)) >> 3);
    uint64_t v8 = 68289794;
    __int16 v9 = 2082;
    unsigned int v10 = "";
    __int16 v11 = 2082;
    uint64_t v12 = v4;
    __int16 v13 = 2050;
    unint64_t v14 = v5;
    __int16 v15 = 2050;
    unint64_t v16 = v6;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationRecorder: commiting recording transaction\", \"Recording UUID\":%{public, location:escape_only}s, \"Num records\":%{public}lu, \"Num measurements\":%{public}lu}", (uint8_t *)&v8, 0x30u);
    operator delete(v4);
  }
  sub_1002FDD24(*(void *)(a1 + 136));
  sub_1002FDF84(*(void *)(a1 + 136));
  sub_1002FD870(*(void *)(a1 + 136));

  uint64_t v8 = a1 + 112;
  sub_1001E7FBC((void ***)&v8);
  uint64_t v8 = a1 + 88;
  sub_1001EF794((void ***)&v8);
  uint64_t v8 = a1 + 64;
  sub_100216394((void ***)&v8);
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  return a1;
}

void sub_1002FDCF8(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    operator delete(v2);
    sub_1001C7F8C(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002FDD24(uint64_t a1)
{
  if (sub_10014C3C0(a1 + 72))
  {
    uint64_t v2 = *(void *)(a1 + 232);
    if (!v2) {
      operator new();
    }
    uint64_t v3 = sub_10032949C(v2);
    sub_1003008D4(a1);
    return v3;
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5698);
    }
    unint64_t v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Can't insert because the database is invalid", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5698);
      }
      unint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::insertOrReplace(const std::vector<TableEntry> &) [TableEntry = CLMicroLocationRecordingEventsTable::Entry]", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    return 0;
  }
}

void sub_1002FDF58()
{
}

uint64_t sub_1002FDF84(uint64_t a1)
{
  if (sub_10014C3C0(a1 + 72))
  {
    uint64_t v2 = *(void *)(a1 + 216);
    if (!v2) {
      operator new();
    }
    uint64_t v3 = sub_1002AAAF8(v2);
    sub_100300B7C(a1);
    return v3;
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5698);
    }
    unint64_t v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Can't insert because the database is invalid", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5698);
      }
      unint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::insertOrReplace(const std::vector<TableEntry> &) [TableEntry = CLMicroLocationMeasurementTable::Entry]", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    return 0;
  }
}

void sub_1002FE1B8()
{
}

uint64_t sub_1002FE1E4(uint64_t result, double *a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  if (*a3 != v4)
  {
    unint64_t v6 = (uint64_t *)result;
    BOOL v7 = (uint64_t *)(result + 64);
    uint64_t v8 = (uint64_t *)(a2 + 1);
    unint64_t v9 = *(void *)(result + 72);
    do
    {
      unsigned int v10 = *(_DWORD *)(v3 + 80);
      if (v9 >= v6[10])
      {
        uint64_t result = sub_100300E80(v7, v6, a2, v8, v3, &v10);
        unint64_t v9 = result;
      }
      else
      {
        uint64_t result = sub_100300E28((uint64_t)v7, v6, a2, v8, v3, &v10);
        v9 += 120;
      }
      v6[9] = v9;
      v3 += 88;
    }
    while (v3 != v4);
  }
  return result;
}

void sub_1002FE290(uint64_t a1, uint64_t a2)
{
  LOBYTE(v32) = 0;
  char v33 = 0;
  memset(&v22, 0, sizeof(v22));
  LOBYTE(v30) = 0;
  char v31 = 0;
  int v4 = *(_DWORD *)(a2 + 72);
  if (v4 != 1)
  {
    if (v4 != 13 || (*(unsigned char *)(a2 + 129) & 4) == 0) {
      goto LABEL_27;
    }
    uint64_t v5 = *(void *)(a2 + 88);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_102489AC0 + 88);
    }
    if ((*(unsigned char *)(v5 + 44) & 8) == 0) {
      goto LABEL_27;
    }
    sub_1002E594C(*(uint64_t ***)(v5 + 24), buf);
    long long v32 = *(_OWORD *)buf;
    char v33 = buf[16];
    uint64_t v6 = *(void *)(a2 + 88);
    if (v6)
    {
      if ((*(unsigned char *)(v6 + 44) & 4) == 0)
      {
LABEL_20:
        if ((*(unsigned char *)(v6 + 44) & 0x10) != 0) {
          goto LABEL_26;
        }
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v6 = *(void *)(qword_102489AC0 + 88);
      if ((*(unsigned char *)(v6 + 44) & 4) == 0)
      {
LABEL_19:
        uint64_t v6 = *(void *)(qword_102489AC0 + 88);
        goto LABEL_20;
      }
    }
    std::string::operator=(&v22, *(const std::string **)(v6 + 16));
    uint64_t v6 = *(void *)(a2 + 88);
    if (v6) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if ((*(unsigned char *)(a2 + 128) & 4) == 0) {
    goto LABEL_27;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_102489AC0 + 16);
  }
  if ((*(unsigned char *)(v7 + 44) & 8) == 0) {
    goto LABEL_27;
  }
  sub_1002E594C(*(uint64_t ***)(v7 + 24), buf);
  long long v32 = *(_OWORD *)buf;
  char v33 = buf[16];
  uint64_t v6 = *(void *)(a2 + 16);
  if (!v6)
  {
    uint64_t v6 = *(void *)(qword_102489AC0 + 16);
    if ((*(unsigned char *)(v6 + 44) & 4) == 0)
    {
LABEL_24:
      uint64_t v6 = *(void *)(qword_102489AC0 + 16);
      goto LABEL_25;
    }
LABEL_23:
    std::string::operator=(&v22, *(const std::string **)(v6 + 16));
    uint64_t v6 = *(void *)(a2 + 16);
    if (v6) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if ((*(unsigned char *)(v6 + 44) & 4) != 0) {
    goto LABEL_23;
  }
LABEL_25:
  if ((*(unsigned char *)(v6 + 44) & 0x10) != 0)
  {
LABEL_26:
    sub_1002E594C(*(uint64_t ***)(v6 + 32), buf);
    long long v30 = *(_OWORD *)buf;
    char v31 = buf[16];
  }
LABEL_27:
  if (v31 && v33)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5698);
    }
    uint64_t v8 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      unint64_t v9 = operator new(0x28uLL);
      unint64_t v20 = v9;
      long long v21 = xmmword_101D048C0;
      *unint64_t v9 = 0u;
      v9[1] = 0u;
      *(void *)((char *)v9 + 29) = 0;
      sub_1001E0650(a1, v9);
      if (v21 >= 0) {
        unsigned int v10 = &v20;
      }
      else {
        unsigned int v10 = v20;
      }
      if (!v33) {
        sub_10020D700();
      }
      __int16 v11 = operator new(0x28uLL);
      std::string __p = v11;
      long long v19 = xmmword_101D048C0;
      *__int16 v11 = 0u;
      v11[1] = 0u;
      *(void *)((char *)v11 + 29) = 0;
      sub_1001E0650((uint64_t)&v32, v11);
      if (v19 >= 0) {
        p_p = &__p;
      }
      else {
        p_p = __p;
      }
      if (!v31) {
        sub_10020D700();
      }
      __int16 v13 = (char *)operator new(0x28uLL);
      *(void *)(v13 + 29) = 0;
      *(_OWORD *)__int16 v13 = 0u;
      *((_OWORD *)v13 + 1) = 0u;
      sub_1001E0650((uint64_t)&v30, v13);
      *(_DWORD *)uint64_t buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      __int16 v24 = 2082;
      uint64_t v25 = v10;
      __int16 v26 = 2082;
      __int16 v27 = p_p;
      __int16 v28 = 2082;
      char v29 = v13;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationRecorder: adding label for recording event\", \"Recording UUID\":%{public, location:escape_only}s, \"Trigger UUID\":%{public, location:escape_only}s, \"Label UUID\":%{public, location:escape_only}s}", buf, 0x30u);
      operator delete(v13);
      if (SHIBYTE(v19) < 0) {
        operator delete(__p);
      }
      if (SHIBYTE(v21) < 0) {
        operator delete(v20);
      }
    }
    *(void *)uint64_t buf = *(void *)(a2 + 8);
    unint64_t v14 = *(void *)(a1 + 120);
    if (v14 >= *(void *)(a1 + 128))
    {
      uint64_t v15 = sub_100300460((uint64_t *)(a1 + 112), (uint64_t *)&v32, (uint64_t)&v22, (uint64_t *)&v30, (double *)buf);
    }
    else
    {
      sub_100300578(a1 + 128, *(void *)(a1 + 120), (uint64_t *)&v32, (uint64_t)&v22, (uint64_t *)&v30, (double *)buf);
      uint64_t v15 = v14 + 64;
      *(void *)(a1 + 120) = v14 + 64;
    }
    *(void *)(a1 + 120) = v15;
  }
  unint64_t v16 = *(void *)(a1 + 96);
  if (v16 >= *(void *)(a1 + 104))
  {
    uint64_t v17 = sub_100300FBC((uint64_t *)(a1 + 88), (uint64_t *)a1, (double *)(a1 + 16), a1 + 24, a2, (uint64_t)&v32, (uint64_t *)(a1 + 48));
  }
  else
  {
    sub_10030110C(a1 + 104, *(void *)(a1 + 96), (uint64_t *)a1, (double *)(a1 + 16), a1 + 24, a2, (uint64_t)&v32, (uint64_t *)(a1 + 48));
    uint64_t v17 = v16 + 240;
    *(void *)(a1 + 96) = v16 + 240;
  }
  *(void *)(a1 + 96) = v17;
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
}

void sub_1002FE710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002FE7B4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, double a5)
{
  double v10 = a5;
  unint64_t v7 = a1[16];
  uint64_t v6 = (uint64_t)(a1 + 16);
  unint64_t v8 = *(void *)(v6 - 8);
  if (v8 >= v7)
  {
    uint64_t result = sub_10030121C(a1 + 14, a2, a3, a4, &v10);
  }
  else
  {
    sub_100301334(v6, *(void *)(v6 - 8), a2, a3, a4, &v10);
    uint64_t result = v8 + 64;
    a1[15] = v8 + 64;
  }
  a1[15] = result;
  return result;
}

void sub_1002FE834(_Unwind_Exception *a1)
{
  *(void *)(v1 + 120) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1002FE83C(uint64_t a1, long long *a2, uint64_t *a3)
{
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    sub_101A5B7E8();
  }
  long long v5 = *a2;
  uint64_t v6 = *((void *)a2 + 2);
  return sub_1002FE1E4(v3, (double *)&v5, a3);
}

void sub_1002FE87C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = a1[1];
  if (!v3) {
    sub_101A5B964();
  }
  sub_1002FE290(v3, a2);
  unint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  if (v4 == v5)
  {
    int64x2_t v6 = vdupq_n_s64(v4);
  }
  else
  {
    do
    {
      sub_1002FE290(a1[1], v4);
      v4 += 136;
    }
    while (v4 != v5);
    int64x2_t v6 = *((int64x2_t *)a1 + 1);
  }
  int64x2_t v8 = v6;
  a1[2] = 0;
  a1[3] = 0;
  uint64_t v7 = a1[4];
  a1[4] = 0;
  uint64_t v9 = v7;
  double v10 = &v8;
  sub_1002334EC((void ***)&v10);
}

void sub_1002FE90C(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 16);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  uint64_t v2 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = 0;
  uint64_t v3 = (void **)&v1;
  sub_1002334EC(&v3);
}

void sub_1002FE950(uint64_t *a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == 1)
  {
    sub_1002FE87C(a1, a2);
  }
  else
  {
    unint64_t v3 = a1[3];
    if (v3 >= a1[4])
    {
      uint64_t v4 = sub_1002335AC(a1 + 2);
    }
    else
    {
      sub_1002660C8(a1[3]);
      uint64_t v4 = v3 + 136;
      a1[3] = v3 + 136;
    }
    a1[3] = v4;
  }
}

void sub_1002FE9C8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 24) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1002FE9D0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  sub_1002E5990(a4, (uint64_t)v39);
  sub_1002E5990(a3, (uint64_t)v37);
  if (v40) {
    BOOL v7 = v38 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5698);
    }
    int64x2_t v8 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
    {
      uint64_t v9 = *(char *)(a2 + 23) >= 0 ? a2 : *(void *)a2;
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&unsigned char buf[18] = 2082;
      *(void *)&buf[20] = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"CLMicroLocationRecorder: received invalid truth label\", \"Client\":%{public, location:escape_only}s}", buf, 0x1Cu);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5698);
      }
    }
    double v10 = qword_102419458;
    if (os_signpost_enabled((os_log_t)qword_102419458))
    {
      if (*(char *)(a2 + 23) >= 0) {
        __int16 v11 = (void *)a2;
      }
      else {
        __int16 v11 = *(void **)a2;
      }
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&unsigned char buf[18] = 2082;
      *(void *)&buf[20] = v11;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "CLMicroLocationRecorder: received invalid truth label", "{\"msg%{public}.0s\":\"CLMicroLocationRecorder: received invalid truth label\", \"Client\":%{public, location:escape_only}s}", buf, 0x1Cu);
    }
    return 0;
  }
  else if (*(_DWORD *)a1 == 1)
  {
    __int16 v13 = *(uint64_t **)(a1 + 8);
    double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
    sub_1002FE7B4(v13, v37, a2, v39, Current_5);
    return 1;
  }
  else
  {
    uint64_t v15 = v37[0];
    uint64_t v16 = v37[1];
    if (*(char *)(a2 + 23) < 0)
    {
      sub_1000DC48C(__p, *(void **)a2, *(void *)(a2 + 8));
    }
    else
    {
      *(_OWORD *)std::string __p = *(_OWORD *)a2;
      uint64_t v25 = *(void *)(a2 + 16);
    }
    uint64_t v17 = v39[0];
    uint64_t v18 = v39[1];
    double v19 = j__CFAbsoluteTimeGetCurrent_5();
    sub_1001E2ABC((uint64_t)buf, v15, v16, (long long *)__p, v17, v18, v19);
    if (SHIBYTE(v25) < 0) {
      operator delete(__p[0]);
    }
    long long v28 = *(_OWORD *)buf;
    if (SHIBYTE(v34) < 0)
    {
      sub_1000DC48C(&v29, *(void **)&buf[16], *(unint64_t *)&buf[24]);
    }
    else
    {
      long long v29 = *(_OWORD *)&buf[16];
      uint64_t v30 = v34;
    }
    long long v31 = v35;
    uint64_t v32 = v36;
    uint64_t v22 = 0;
    CFStringRef v23 = 0;
    long long v21 = 0;
    __int16 v26 = &v21;
    char v27 = 0;
    long long v21 = (char *)operator new(0x40uLL);
    uint64_t v22 = (uint64_t)v21;
    CFStringRef v23 = v21 + 64;
    uint64_t v22 = sub_1003013E8((uint64_t)&v23, &v28, (long long *)buf, (uint64_t)v21);
    uint64_t v12 = sub_1002FD870(*(void *)(a1 + 40));
    __int16 v26 = &v21;
    sub_1001E7FBC((void ***)&v26);
    if (SHIBYTE(v30) < 0) {
      operator delete((void *)v29);
    }
    if (SHIBYTE(v34) < 0) {
      operator delete(*(void **)&buf[16]);
    }
  }
  return v12;
}

void sub_1002FED1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a40 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002FED8C(uint64_t a1, const std::string *a2, _OWORD *a3, long long *a4)
{
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = operator new(0x10uLL);
  *(void *)&__p[16] = v9 + 1;
  *uint64_t v9 = *a3;
  *(void *)std::string __p = v9;
  *(void *)&__p[8] = v9 + 1;
  sub_1001FD8C4(v8, (uint64_t)__p, &v37);
  if (*(void *)__p)
  {
    *(void *)&__p[8] = *(void *)__p;
    operator delete(*(void **)__p);
  }
  if (v37 == v38)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5698);
    }
    long long v21 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
    {
      uint64_t v22 = (char *)operator new(0x28uLL);
      *(void *)(v22 + 29) = 0;
      *(_OWORD *)uint64_t v22 = 0u;
      *((_OWORD *)v22 + 1) = 0u;
      sub_1001E0650((uint64_t)a3, v22);
      *(void *)std::string __p = 68289282;
      *(_WORD *)&__p[8] = 2082;
      *(void *)&__p[10] = "";
      *(_WORD *)&__p[18] = 2082;
      *(void *)&__p[20] = v22;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Did not find matching entry for cached trigger UUID\", \"Cached trigger UUID\":%{public, location:escape_only}s}", __p, 0x1Cu);
      operator delete(v22);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5698);
      }
    }
    CFStringRef v23 = qword_102419458;
    if (os_signpost_enabled((os_log_t)qword_102419458))
    {
      __int16 v24 = (char *)operator new(0x28uLL);
      *(void *)(v24 + 29) = 0;
      *(_OWORD *)__int16 v24 = 0u;
      *((_OWORD *)v24 + 1) = 0u;
      sub_1001E0650((uint64_t)a3, v24);
      *(void *)std::string __p = 68289282;
      *(_WORD *)&__p[8] = 2082;
      *(void *)&__p[10] = "";
      *(_WORD *)&__p[18] = 2082;
      *(void *)&__p[20] = v24;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v23, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Did not find matching entry for cached trigger UUID", "{\"msg%{public}.0s\":\"Did not find matching entry for cached trigger UUID\", \"Cached trigger UUID\":%{public, location:escape_only}s}", __p, 0x1Cu);
      operator delete(v24);
    }
    uint64_t v25 = 0;
  }
  else
  {
    if (0xEEEEEEEEEEEEEEEFLL * ((v38 - v37) >> 4) >= 2)
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5698);
      }
      double v10 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
      {
        __int16 v11 = (char *)operator new(0x28uLL);
        __str.__r_.__value_.__r.__words[0] = (std::string::size_type)v11;
        *(_OWORD *)&__str.__r_.__value_.__r.__words[1] = xmmword_101D048C0;
        *(_OWORD *)__int16 v11 = 0u;
        *((_OWORD *)v11 + 1) = 0u;
        *(void *)(v11 + 29) = 0;
        sub_1001E0650((uint64_t)a3, v11);
        p_str = &__str;
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
        }
        *(void *)std::string __p = 68289538;
        *(_WORD *)&__p[8] = 2082;
        *(void *)&__p[10] = "";
        *(_WORD *)&__p[18] = 2082;
        *(void *)&__p[20] = p_str;
        *(_WORD *)&__p[28] = 2050;
        *(void *)&__p[30] = 0xEEEEEEEEEEEEEEEFLL * ((v38 - v37) >> 4);
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Found too many matching entries for cached trigger UUID\", \"Cached trigger UUID\":%{public, location:escape_only}s, \"Number of matches\":%{public}lu}", __p, 0x26u);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5698);
        }
      }
      __int16 v13 = qword_102419458;
      if (os_signpost_enabled((os_log_t)qword_102419458))
      {
        unint64_t v14 = (char *)operator new(0x28uLL);
        __str.__r_.__value_.__r.__words[0] = (std::string::size_type)v14;
        *(_OWORD *)&__str.__r_.__value_.__r.__words[1] = xmmword_101D048C0;
        *(_OWORD *)unint64_t v14 = 0u;
        *((_OWORD *)v14 + 1) = 0u;
        *(void *)(v14 + 29) = 0;
        sub_1001E0650((uint64_t)a3, v14);
        uint64_t v15 = &__str;
        if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          uint64_t v15 = (std::string *)__str.__r_.__value_.__r.__words[0];
        }
        *(void *)std::string __p = 68289538;
        *(_WORD *)&__p[8] = 2082;
        *(void *)&__p[10] = "";
        *(_WORD *)&__p[18] = 2082;
        *(void *)&__p[20] = v15;
        *(_WORD *)&__p[28] = 2050;
        *(void *)&__p[30] = 0xEEEEEEEEEEEEEEEFLL * ((v38 - v37) >> 4);
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v13, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Found too many matching entries for cached trigger UUID", "{\"msg%{public}.0s\":\"Found too many matching entries for cached trigger UUID\", \"Cached trigger UUID\":%{public, location:escape_only}s, \"Number of matches\":%{public}lu}", __p, 0x26u);
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
      }
    }
    uint64_t v16 = v37;
    sub_10023D9E0((uint64_t)v33);
    v36 |= 2u;
    if (v34 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v34, a2);
    memset(&__str, 0, sizeof(__str));
    if ((sub_1001E86C0((uint64_t)a4, &__str) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)__p);
      *(void *)std::string __p = &off_10229E8C8;
      sub_1001E91E8((uint64_t)__p);
    }
    v36 |= 4u;
    if (v35 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v35, &__str);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
    sub_1002FF640((uint64_t)v33, 0, 0, 3u, (uint64_t)v32, Current_5);
    uint64_t v18 = *(void *)v16;
    uint64_t v19 = *(void *)(v16 + 8);
    double v20 = *(double *)(v16 + 16);
    if (*(char *)(v16 + 47) < 0)
    {
      sub_1000DC48C(__dst, *(void **)(v16 + 24), *(void *)(v16 + 32));
    }
    else
    {
      *(_OWORD *)__dst = *(_OWORD *)(v16 + 24);
      uint64_t v31 = *(void *)(v16 + 40);
    }
    long long v46 = *a4;
    char v47 = 1;
    sub_100328ED8((uint64_t)__p, v18, v19, (long long *)__dst, (uint64_t)v32, &v46, *(void *)(v16 + 48), *(void *)(v16 + 56), v20);
    if (SHIBYTE(v31) < 0) {
      operator delete(__dst[0]);
    }
    std::string __str = *(std::string *)__p;
    if (SHIBYTE(v49) < 0)
    {
      sub_1000DC48C(&v42, *(void **)&__p[24], *(unint64_t *)&__p[32]);
    }
    else
    {
      long long v42 = *(_OWORD *)&__p[24];
      uint64_t v43 = v49;
    }
    v44[0] = v50[0];
    *(_OWORD *)((char *)v44 + 12) = *(_OWORD *)((char *)v50 + 12);
    sub_1002660C8(v45);
    *(_OWORD *)&v45[136] = *(_OWORD *)&v51[136];
    v45[152] = v51[152];
    uint64_t v28 = 0;
    long long v29 = 0;
    char v27 = 0;
    float v39 = (void **)&v27;
    char v40 = 0;
    char v27 = (char *)operator new(0xF0uLL);
    uint64_t v28 = (uint64_t)v27;
    long long v29 = v27 + 240;
    uint64_t v28 = sub_10023AC9C((uint64_t)&v29, (long long *)&__str, &v46, (uint64_t)v27);
    sub_10026633C(v45);
    if (SHIBYTE(v43) < 0) {
      operator delete((void *)v42);
    }
    uint64_t v25 = sub_1002FDD24(*(void *)(a1 + 40));
    __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&v27;
    sub_1001EF794((void ***)&__str);
    sub_10026633C(v51);
    if (SHIBYTE(v49) < 0) {
      operator delete(*(void **)&__p[24]);
    }
    sub_10026633C(v32);
    sub_1002508EC((wireless_diagnostics::google::protobuf::MessageLite *)v33);
  }
  *(void *)std::string __p = &v37;
  sub_1001EF794((void ***)__p);
  return v25;
}

void sub_1002FF510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  operator delete(v40);
  STACK[0x230] = (unint64_t)&a40;
  sub_1001EF794((void ***)&STACK[0x230]);
  _Unwind_Resume(a1);
}

void sub_1002FF640(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  sub_10023DFC0(a5);
  unsigned int v12 = *(_DWORD *)(a1 + 32);
  if (!sub_10023E774(v12))
  {
    unint64_t v14 = "::CLMicroLocationProto::EventType_IsValid(value)";
    int v15 = 19803;
    uint64_t v16 = "set_eventtype";
    goto LABEL_6;
  }
  int v13 = *(_DWORD *)(a5 + 128);
  *(_DWORD *)(a5 + 72) = v12;
  *(double *)(a5 + 8) = a6;
  *(unsigned char *)(a5 + 77) = a2;
  *(_DWORD *)(a5 + 128) = v13 | 0x2803;
  *(unsigned char *)(a5 + 76) = a3;
  if ((sub_10023E744(a4) & 1) == 0)
  {
    unint64_t v14 = "::CLMicroLocationProto::ConfidenceLevel_IsValid(value)";
    int v15 = 20312;
    uint64_t v16 = "set_confidencelevel";
LABEL_6:
    __assert_rtn(v16, "microlocation.pb.h", v15, v14);
  }
  *(_DWORD *)(a5 + 128) |= 0x4000u;
  *(_DWORD *)(a5 + 120) = a4;
  sub_1002E6AF4(a5, a1);
}

void sub_1002FF728(_Unwind_Exception *a1)
{
  sub_10026633C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FF73C(uint64_t a1, const std::string *a2, void *a3, void *a4, void *a5, uint64_t a6)
{
  if ([a4 compare:a5] == (id)1)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5698);
    }
    __int16 v11 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "recordTruthLabelBetweenDates, startDate is later than endDate", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5698);
      }
      LOWORD(v61.__vftable) = 0;
      int v36 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationRecorder::recordTruthLabelBetweenDates(const std::string &, NSUUID *const, NSDate *const, NSDate *const, const std::string &)", "%s\n", v36);
      if (v36 != buf) {
        free(v36);
      }
    }
    return 0;
  }
  else
  {
    [a4 timeIntervalSinceReferenceDate];
    std::to_string(&v58, v13);
    [a5 timeIntervalSinceReferenceDate];
    std::to_string(&v57, v14);
    sub_1002A9A64(1u, (char **)&v55);
    int v15 = v55;
    uint64_t v16 = v56;
    if (v55 == v56) {
      goto LABEL_47;
    }
    uint64_t v17 = v55;
    while (*v17 != 14)
    {
      if (++v17 == v56) {
        goto LABEL_21;
      }
    }
    if (v17 != v56)
    {
      for (uint64_t i = v17 + 1; i != v16; ++i)
      {
        if (*i != 14) {
          *v17++ = *i;
        }
      }
    }
    if (v17 != v16)
    {
      uint64_t v16 = v17;
      uint64_t v56 = v17;
    }
LABEL_21:
    if (v15 == v16)
    {
LABEL_47:
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5698);
      }
      uint64_t v32 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 67240192;
        *(_DWORD *)&uint8_t buf[4] = 1;
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "#Warning No recording events for model type %{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5698);
        }
        v61.__vftable = (std::bad_cast_vtbl *)0x104020100;
        uint64_t v37 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationRecorder::recordTruthLabelBetweenDates(const std::string &, NSUUID *const, NSDate *const, NSDate *const, const std::string &)", "%s\n", v37);
        if (v37 != buf) {
          free(v37);
        }
      }
      uint64_t v12 = 0;
    }
    else
    {
      sub_100200C24(*(void *)(a1 + 40), (uint64_t)&v55, (uint64_t)&v58, (uint64_t)&v57, &v53);
      unint64_t v51 = 0;
      __s = (std::string::value_type *)[objc_msgSend(objc_msgSend(a3, "UUIDString"), "UTF8String") UTF8String];
      uint64_t v49 = 0;
      unint64_t v50 = 0;
      sub_1003001A4((uint64_t *)&v49, 0xEEEEEEEEEEEEEEEFLL * ((v54 - v53) >> 4));
      uint64_t v38 = (_DWORD *)a1;
      uint64_t v46 = 0;
      unint64_t v47 = 0;
      unint64_t v48 = 0;
      sub_100300258(&v46, 0xEEEEEEEEEEEEEEEFLL * ((v54 - v53) >> 4));
      uint64_t v19 = v54;
      if (v53 != v54)
      {
        uint64_t v20 = v53 + 80;
        do
        {
          long long v21 = *(_OWORD *)(v20 - 80);
          *(void *)&buf[16] = *(void *)(v20 - 64);
          *(_OWORD *)uint64_t buf = v21;
          if (*(char *)(v20 - 33) < 0)
          {
            sub_1000DC48C(&buf[24], *(void **)(v20 - 56), *(void *)(v20 - 48));
          }
          else
          {
            long long v22 = *(_OWORD *)(v20 - 56);
            uint64_t v66 = *(void *)(v20 - 40);
            *(_OWORD *)&buf[24] = v22;
          }
          uint64_t v23 = v20 - 80;
          long long v24 = *(_OWORD *)(v20 - 32);
          *(_OWORD *)&v67[12] = *(_OWORD *)(v20 - 20);
          *(_OWORD *)v67 = v24;
          sub_1002660C8(v68);
          long long v25 = *(_OWORD *)(v20 + 136);
          v68[152] = *(unsigned char *)(v20 + 152);
          *(_OWORD *)&v68[136] = v25;
          long long v64 = 0uLL;
          LODWORD(v61.__vftable) = 0;
          sub_1001EE1F4((int *)&v61);
          *(void *)&long long v64 = sub_1001EC8C4((ssize_t)&v61);
          *((void *)&v64 + 1) = v26;
          sub_1001EF3E8((unsigned int *)&v61);
          memset(&__str, 0, sizeof(__str));
          if ((sub_1001E86C0((uint64_t)&v64, &__str) & 1) == 0)
          {
            std::bad_cast::bad_cast(&v61);
            v61.__vftable = (std::bad_cast_vtbl *)&off_10229E8C8;
            sub_1001E91E8((uint64_t)&v61);
          }
          sub_10023D9E0((uint64_t)v40);
          v44 |= 2u;
          if (v41 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
            operator new();
          }
          std::string::operator=(v41, a2);
          v44 |= 4u;
          if (v42 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
            operator new();
          }
          std::string::operator=(v42, &__str);
          v44 |= 8u;
          if (v43 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
            operator new();
          }
          std::string::assign(v43, __s);
          double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
          sub_1002FF640((uint64_t)v40, 0, 0, 3u, (uint64_t)&v61, Current_5);
          long long v59 = v64;
          char v60 = 1;
          unint64_t v28 = v50;
          if (v50 >= v51)
          {
            uint64_t v29 = sub_1003014CC((uint64_t *)&v49, (uint64_t *)buf, (double *)&buf[16], a6, (uint64_t)&v61, (uint64_t)&v59, (uint64_t *)v67);
          }
          else
          {
            sub_10030161C((uint64_t)&v51, v50, (uint64_t *)buf, (double *)&buf[16], a6, (uint64_t)&v61, (uint64_t)&v59, (uint64_t *)v67);
            uint64_t v29 = v28 + 240;
          }
          unint64_t v50 = v29;
          *(void *)&long long v59 = v62;
          unint64_t v30 = v47;
          if (v47 >= v48)
          {
            uint64_t v31 = sub_10030172C(&v46, (uint64_t *)&v64, (uint64_t)a2, &__s, (double *)&v59);
          }
          else
          {
            sub_100301844((uint64_t)&v48, v47, (uint64_t *)&v64, (uint64_t)a2, &__s, (double *)&v59);
            uint64_t v31 = v30 + 64;
          }
          unint64_t v47 = v31;
          sub_10026633C(&v61);
          sub_1002508EC((wireless_diagnostics::google::protobuf::MessageLite *)v40);
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__str.__r_.__value_.__l.__data_);
          }
          sub_10026633C(v68);
          if (SHIBYTE(v66) < 0) {
            operator delete(*(void **)&buf[24]);
          }
          v20 += 240;
        }
        while (v23 + 240 != v19);
      }
      if (*(_DWORD *)a1 == 1)
      {
        sub_1003002EC(*(void **)(a1 + 8), &v49);
        sub_100300384(*(void **)(a1 + 8), &v46);
        uint64_t v12 = 1;
      }
      else if (sub_1002FDD24(*(void *)(a1 + 40)))
      {
        uint64_t v12 = sub_1002FD870(*(void *)(a1 + 40));
      }
      else
      {
        uint64_t v12 = 0;
      }
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5698);
      }
      char v33 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
      {
        BOOL v34 = *v38 == 1;
        *(_DWORD *)uint64_t buf = 68289794;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&unsigned char buf[18] = 2050;
        *(void *)&buf[20] = 0xEEEEEEEEEEEEEEEFLL * ((v54 - v53) >> 4);
        *(_WORD *)&buf[28] = 1026;
        *(_DWORD *)&buf[30] = v34;
        *(_WORD *)&buf[34] = 1026;
        *(_DWORD *)&buf[36] = v12;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"CLMicroLocationRecorder: record TruthLabel between dates\", \"Num Matching Events\":%{public}lu, \"Is Recorder Active\":%{public}hhd, \"Insertion Result\":%{public}hhd}", buf, 0x28u);
      }
      *(void *)uint64_t buf = &v46;
      sub_1001E7FBC((void ***)buf);
      *(void *)uint64_t buf = &v49;
      sub_1001EF794((void ***)buf);
      *(void *)uint64_t buf = &v53;
      sub_1001EF794((void ***)buf);
    }
    if (v55)
    {
      uint64_t v56 = v55;
      operator delete(v55);
    }
    if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v57.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v58.__r_.__value_.__l.__data_);
    }
  }
  return v12;
}

void sub_100300054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *__p,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  if (__p) {
    operator delete(__p);
  }
  if (a44 < 0) {
    operator delete(a39);
  }
  if (a50 < 0) {
    operator delete(a45);
  }
  _Unwind_Resume(a1);
}

void **sub_1003001A4(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (void **)(a1 + 2);
  if (0xEEEEEEEEEEEEEEEFLL * ((v4 - *a1) >> 4) < a2)
  {
    if (a2 >= 0x111111111111112) {
      sub_1001D7FD4();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_1001F2B9C((uint64_t)result, a2);
    v7[1] = (char *)v7[0] + v5;
    _DWORD v7[2] = (char *)v7[0] + v5;
    v7[3] = (char *)v7[0] + 240 * v6;
    sub_1001F2B24(a1, v7);
    return sub_1001F2D3C(v7);
  }
  return result;
}

void sub_100300244(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001F2D3C((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100300258(uint64_t *a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  if (a2 > (v4 - *a1) >> 6)
  {
    if (a2 >> 58) {
      sub_1001D7FD4();
    }
    uint64_t v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = sub_10017EAF0(result, a2);
    v7[1] = v7[0] + v5;
    _DWORD v7[2] = v7[0] + v5;
    v7[3] = v7[0] + (v6 << 6);
    sub_1001E7D78(a1, v7);
    return sub_1001E7F2C((uint64_t)v7);
  }
  return result;
}

void sub_1003002D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001E7F2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1003002EC(void *a1, long long **a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    uint64_t v5 = a1 + 11;
    uint64_t v6 = a1 + 13;
    unint64_t v7 = a1[12];
    do
    {
      if (v7 >= *v6)
      {
        unint64_t v7 = sub_1001F2960(v5, v2);
      }
      else
      {
        sub_1001F2A70((uint64_t)v6, v7, v2);
        v7 += 240;
        a1[12] = v7;
      }
      a1[12] = v7;
      v2 += 15;
    }
    while (v2 != v3);
  }
}

void sub_10030037C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 96) = v2;
  _Unwind_Resume(a1);
}

void sub_100300384(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    uint64_t v5 = a1 + 14;
    unint64_t v6 = a1[15];
    do
    {
      if (v6 >= a1[16])
      {
        unint64_t v6 = sub_1003019B0(v5, v2);
      }
      else
      {
        sub_10030192C((uint64_t)v5, v2);
        v6 += 64;
      }
      a1[15] = v6;
      v2 += 64;
    }
    while (v2 != v3);
  }
}

void sub_100300400(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_100300430(id a1)
{
  qword_102419468 = (uint64_t)os_log_create("com.apple.locationd.Position", "MicrolocationQE");
}

uint64_t sub_100300460(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, double *a5)
{
  uint64_t v6 = (a1[1] - *a1) >> 6;
  unint64_t v7 = v6 + 1;
  if ((unint64_t)(v6 + 1) >> 58) {
    sub_1001D7FD4();
  }
  uint64_t v12 = a1[2] - *a1;
  if (v12 >> 5 > v7) {
    unint64_t v7 = v12 >> 5;
  }
  if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFC0) {
    unint64_t v13 = 0x3FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v13 = v7;
  }
  long long v21 = a1 + 2;
  if (v13) {
    double v14 = (char *)sub_10017EAF0((uint64_t)(a1 + 2), v13);
  }
  else {
    double v14 = 0;
  }
  uint64_t v17 = v14;
  uint64_t v18 = &v14[64 * v6];
  uint64_t v20 = &v14[64 * v13];
  sub_100300578((uint64_t)(a1 + 2), (uint64_t)v18, a2, a3, a4, a5);
  uint64_t v19 = v18 + 64;
  sub_1001E7D78(a1, &v17);
  uint64_t v15 = a1[1];
  sub_1001E7F2C((uint64_t)&v17);
  return v15;
}

void sub_100300564(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001E7F2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100300578(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, double *a6)
{
  uint64_t v9 = *a3;
  uint64_t v10 = a3[1];
  if (*(char *)(a4 + 23) < 0)
  {
    sub_1000DC48C(__p, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a4;
    uint64_t v12 = *(void *)(a4 + 16);
  }
  sub_1001E2ABC(a2, v9, v10, (long long *)__p, *a5, a5[1], *a6);
  if (SHIBYTE(v12) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100300610(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10030062C(uint64_t a1)
{
  unsigned int v2 = sub_10020F280(a1);
  if (sub_100300824() > v2) {
    return 1;
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5698);
  }
  uint64_t v3 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 136446210;
    uint64_t v8 = "MicroLocationLabels";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5698);
    }
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::freeSpaceIfFull() [Table = CLMicroLocationRecordingLabelsTable]", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  uint64_t result = sub_100207CD4(a1);
  if (result)
  {
    if (*(uint64_t *)(a1 + 160) <= 0) {
      uint64_t v5 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v5 = *(void *)(a1 + 160);
    }
    sub_10003CC68(a1 + 72, v5);
    return 1;
  }
  return result;
}

uint64_t sub_100300824()
{
  sub_1000C7F88(&v5);
  unsigned int v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsRecordingLabelsTableMaxRows", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1004D08E4(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  unsigned int v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v1) {
    return v2;
  }
  else {
    return 2500;
  }
}

void sub_1003008B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003008D4(uint64_t a1)
{
  unsigned int v2 = sub_10020E920(a1);
  if (sub_100300ACC() > v2) {
    return 1;
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5698);
  }
  uint64_t v3 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 136446210;
    uint64_t v8 = "MicroLocationRecordingEvents";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5698);
    }
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::freeSpaceIfFull() [Table = CLMicroLocationRecordingEventsTable]", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  uint64_t result = sub_1002075B4(a1);
  if (result)
  {
    if (*(uint64_t *)(a1 + 160) <= 0) {
      uint64_t v5 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v5 = *(void *)(a1 + 160);
    }
    sub_10003CC68(a1 + 72, v5);
    return 1;
  }
  return result;
}

uint64_t sub_100300ACC()
{
  sub_1000C7F88(&v5);
  unsigned int v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsRecordingEventsTableMaxRows", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1004D08E4(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  unsigned int v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v1) {
    return v2;
  }
  else {
    return 15150;
  }
}

void sub_100300B60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100300B7C(uint64_t a1)
{
  unsigned int v2 = sub_10020E638(a1);
  if (sub_100300D74() > v2) {
    return 1;
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5698);
  }
  uint64_t v3 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 136446210;
    uint64_t v8 = "MicroLocationMeasurements";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5698);
    }
    uint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::freeSpaceIfFull() [Table = CLMicroLocationMeasurementTable]", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  uint64_t result = sub_1002073EC(a1);
  if (result)
  {
    if (*(uint64_t *)(a1 + 160) <= 0) {
      uint64_t v5 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v5 = *(void *)(a1 + 160);
    }
    sub_10003CC68(a1 + 72, v5);
    return 1;
  }
  return result;
}

uint64_t sub_100300D74()
{
  sub_1000C7F88(&v5);
  unsigned int v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMeasurementTableMaxRows", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1004D08E4(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  unsigned int v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v1) {
    return v2;
  }
  else {
    return 321100;
  }
}

void sub_100300E0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100300E28(uint64_t a1, uint64_t *a2, double *a3, uint64_t *a4, uint64_t a5, unsigned int *a6)
{
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t result = sub_1002AA67C(v7, *a2, a2[1], *a4, a5, *a6 | (unint64_t)&_mh_execute_header, *a3);
  *(void *)(a1 + 8) = v7 + 120;
  return result;
}

void sub_100300E78(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100300E80(uint64_t *a1, uint64_t *a2, double *a3, uint64_t *a4, uint64_t a5, unsigned int *a6)
{
  uint64_t v7 = *a1;
  unint64_t v8 = 0xEEEEEEEEEEEEEEEFLL * ((a1[1] - *a1) >> 3);
  unint64_t v9 = v8 + 1;
  if (v8 + 1 > 0x222222222222222) {
    sub_1001D7FD4();
  }
  uint64_t v15 = (uint64_t)(a1 + 2);
  unint64_t v16 = 0xEEEEEEEEEEEEEEEFLL * ((a1[2] - v7) >> 3);
  if (2 * v16 > v9) {
    unint64_t v9 = 2 * v16;
  }
  if (v16 >= 0x111111111111111) {
    unint64_t v17 = 0x222222222222222;
  }
  else {
    unint64_t v17 = v9;
  }
  long long v25 = a1 + 2;
  if (v17) {
    uint64_t v18 = (char *)sub_10029BE4C(v15, v17);
  }
  else {
    uint64_t v18 = 0;
  }
  long long v21 = v18;
  long long v22 = &v18[120 * v8];
  uint64_t v23 = (uint64_t)v22;
  long long v24 = &v18[120 * v17];
  sub_1002AA67C((uint64_t)v22, *a2, a2[1], *a4, a5, *a6 | (unint64_t)&_mh_execute_header, *a3);
  uint64_t v23 = (uint64_t)(v22 + 120);
  sub_1002AE47C(a1, &v21);
  uint64_t v19 = a1[1];
  sub_10029BFF4((uint64_t)&v21);
  return v19;
}

void sub_100300FA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10029BFF4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100300FBC(uint64_t *a1, uint64_t *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  unint64_t v8 = 0xEEEEEEEEEEEEEEEFLL * ((a1[1] - *a1) >> 4);
  unint64_t v9 = v8 + 1;
  if (v8 + 1 > 0x111111111111111) {
    sub_1001D7FD4();
  }
  if (0xDDDDDDDDDDDDDDDELL * ((a1[2] - *a1) >> 4) > v9) {
    unint64_t v9 = 0xDDDDDDDDDDDDDDDELL * ((a1[2] - *a1) >> 4);
  }
  if (0xEEEEEEEEEEEEEEEFLL * ((a1[2] - *a1) >> 4) >= 0x88888888888888) {
    unint64_t v16 = 0x111111111111111;
  }
  else {
    unint64_t v16 = v9;
  }
  long long v24 = a1 + 2;
  if (v16) {
    unint64_t v17 = (char *)sub_1001F2B9C((uint64_t)(a1 + 2), v16);
  }
  else {
    unint64_t v17 = 0;
  }
  uint64_t v20 = v17;
  long long v21 = &v17[240 * v8];
  uint64_t v23 = &v17[240 * v16];
  sub_10030110C((uint64_t)(a1 + 2), (uint64_t)v21, a2, a3, a4, a5, a6, a7);
  long long v22 = v21 + 240;
  sub_1001F2B24(a1, &v20);
  uint64_t v18 = a1[1];
  sub_1001F2D3C(&v20);
  return v18;
}

void sub_1003010F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001F2D3C((void **)va);
  _Unwind_Resume(a1);
}

void sub_10030110C(uint64_t a1, uint64_t a2, uint64_t *a3, double *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  uint64_t v12 = *a3;
  uint64_t v13 = a3[1];
  double v14 = *a4;
  if (*(char *)(a5 + 23) < 0)
  {
    sub_1000DC48C(__p, *(void **)a5, *(void *)(a5 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a5;
    uint64_t v16 = *(void *)(a5 + 16);
  }
  long long v17 = *(_OWORD *)a7;
  char v18 = *(unsigned char *)(a7 + 16);
  sub_100328ED8(a2, v12, v13, (long long *)__p, a6, &v17, *a8, a8[1], v14);
  if (SHIBYTE(v16) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1003011F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

uint64_t sub_10030121C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, double *a5)
{
  uint64_t v6 = (a1[1] - *a1) >> 6;
  unint64_t v7 = v6 + 1;
  if ((unint64_t)(v6 + 1) >> 58) {
    sub_1001D7FD4();
  }
  uint64_t v12 = a1[2] - *a1;
  if (v12 >> 5 > v7) {
    unint64_t v7 = v12 >> 5;
  }
  if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFC0) {
    unint64_t v13 = 0x3FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v13 = v7;
  }
  long long v21 = a1 + 2;
  if (v13) {
    double v14 = (char *)sub_10017EAF0((uint64_t)(a1 + 2), v13);
  }
  else {
    double v14 = 0;
  }
  long long v17 = v14;
  char v18 = &v14[64 * v6];
  uint64_t v20 = &v14[64 * v13];
  sub_100301334((uint64_t)(a1 + 2), (uint64_t)v18, a2, a3, a4, a5);
  uint64_t v19 = v18 + 64;
  sub_1001E7D78(a1, &v17);
  uint64_t v15 = a1[1];
  sub_1001E7F2C((uint64_t)&v17);
  return v15;
}

void sub_100301320(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001E7F2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100301334(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, double *a6)
{
  uint64_t v9 = *a3;
  uint64_t v10 = a3[1];
  if (*(char *)(a4 + 23) < 0)
  {
    sub_1000DC48C(__p, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a4;
    uint64_t v12 = *(void *)(a4 + 16);
  }
  sub_1001E2ABC(a2, v9, v10, (long long *)__p, *a5, a5[1], *a6);
  if (SHIBYTE(v12) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1003013CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003013E8(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v15 = a4;
  uint64_t v16 = a4;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  char v14 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2 + 1;
    do
    {
      *(_OWORD *)uint64_t v4 = *(v6 - 1);
      unint64_t v7 = (unsigned char *)(v4 + 16);
      if (*((char *)v6 + 23) < 0)
      {
        sub_1000DC48C(v7, *(void **)v6, *((void *)v6 + 1));
        uint64_t v9 = v16;
      }
      else
      {
        long long v8 = *v6;
        *(void *)(v4 + 32) = *((void *)v6 + 2);
        *(_OWORD *)unint64_t v7 = v8;
        uint64_t v9 = v4;
      }
      uint64_t v10 = v6 - 1;
      long long v11 = *(long long *)((char *)v6 + 24);
      *(void *)(v4 + 56) = *((void *)v6 + 5);
      *(_OWORD *)(v4 + 40) = v11;
      uint64_t v4 = v9 + 64;
      uint64_t v16 = v9 + 64;
      v6 += 4;
    }
    while (v10 + 4 != a3);
  }
  char v14 = 1;
  sub_10028AE3C((uint64_t)v13);
  return v4;
}

void sub_1003014B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1003014CC(uint64_t *a1, uint64_t *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  unint64_t v8 = 0xEEEEEEEEEEEEEEEFLL * ((a1[1] - *a1) >> 4);
  unint64_t v9 = v8 + 1;
  if (v8 + 1 > 0x111111111111111) {
    sub_1001D7FD4();
  }
  if (0xDDDDDDDDDDDDDDDELL * ((a1[2] - *a1) >> 4) > v9) {
    unint64_t v9 = 0xDDDDDDDDDDDDDDDELL * ((a1[2] - *a1) >> 4);
  }
  if (0xEEEEEEEEEEEEEEEFLL * ((a1[2] - *a1) >> 4) >= 0x88888888888888) {
    unint64_t v16 = 0x111111111111111;
  }
  else {
    unint64_t v16 = v9;
  }
  long long v24 = a1 + 2;
  if (v16) {
    long long v17 = (char *)sub_1001F2B9C((uint64_t)(a1 + 2), v16);
  }
  else {
    long long v17 = 0;
  }
  uint64_t v20 = v17;
  long long v21 = &v17[240 * v8];
  uint64_t v23 = &v17[240 * v16];
  sub_10030161C((uint64_t)(a1 + 2), (uint64_t)v21, a2, a3, a4, a5, a6, a7);
  long long v22 = v21 + 240;
  sub_1001F2B24(a1, &v20);
  uint64_t v18 = a1[1];
  sub_1001F2D3C(&v20);
  return v18;
}

void sub_100301608(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001F2D3C((void **)va);
  _Unwind_Resume(a1);
}

void sub_10030161C(uint64_t a1, uint64_t a2, uint64_t *a3, double *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  uint64_t v12 = *a3;
  uint64_t v13 = a3[1];
  double v14 = *a4;
  if (*(char *)(a5 + 23) < 0)
  {
    sub_1000DC48C(__p, *(void **)a5, *(void *)(a5 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a5;
    uint64_t v16 = *(void *)(a5 + 16);
  }
  long long v17 = *(_OWORD *)a7;
  char v18 = *(unsigned char *)(a7 + 16);
  sub_100328ED8(a2, v12, v13, (long long *)__p, a6, &v17, *a8, a8[1], v14);
  if (SHIBYTE(v16) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100301708(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

uint64_t sub_10030172C(uint64_t *a1, uint64_t *a2, uint64_t a3, char **a4, double *a5)
{
  uint64_t v6 = (a1[1] - *a1) >> 6;
  unint64_t v7 = v6 + 1;
  if ((unint64_t)(v6 + 1) >> 58) {
    sub_1001D7FD4();
  }
  uint64_t v12 = a1[2] - *a1;
  if (v12 >> 5 > v7) {
    unint64_t v7 = v12 >> 5;
  }
  if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFC0) {
    unint64_t v13 = 0x3FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v13 = v7;
  }
  long long v21 = a1 + 2;
  if (v13) {
    double v14 = (char *)sub_10017EAF0((uint64_t)(a1 + 2), v13);
  }
  else {
    double v14 = 0;
  }
  long long v17 = v14;
  char v18 = &v14[64 * v6];
  uint64_t v20 = &v14[64 * v13];
  sub_100301844((uint64_t)(a1 + 2), (uint64_t)v18, a2, a3, a4, a5);
  uint64_t v19 = v18 + 64;
  sub_1001E7D78(a1, &v17);
  uint64_t v15 = a1[1];
  sub_1001E7F2C((uint64_t)&v17);
  return v15;
}

void sub_100301830(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001E7F2C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100301844(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, char **a5, double *a6)
{
  uint64_t v9 = *a3;
  uint64_t v10 = a3[1];
  if (*(char *)(a4 + 23) < 0)
  {
    sub_1000DC48C(__dst, *(void **)a4, *(void *)(a4 + 8));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)a4;
    uint64_t v14 = *(void *)(a4 + 16);
  }
  sub_100134750(__p, *a5);
  sub_1001E2BB8(a2, v9, v10, (long long *)__dst, (uint64_t)__p, *a6);
  if (v12 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_1003018F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_10030192C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a2;
  uint64_t v5 = (unsigned char *)(v4 + 16);
  if (*(char *)(a2 + 39) < 0)
  {
    sub_1000DC48C(v5, *(void **)(a2 + 16), *(void *)(a2 + 24));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(void *)(v4 + 32) = *(void *)(a2 + 32);
    *(_OWORD *)uint64_t v5 = v6;
  }
  __n128 result = *(__n128 *)(a2 + 40);
  *(void *)(v4 + 56) = *(void *)(a2 + 56);
  *(__n128 *)(v4 + 40) = result;
  *(void *)(a1 + 8) = v4 + 64;
  return result;
}

void sub_1003019A8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1003019B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 6;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 58) {
    sub_1001D7FD4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 5 > v5) {
    unint64_t v5 = v8 >> 5;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFC0) {
    unint64_t v9 = 0x3FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  long long v21 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_10017EAF0(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  long long v11 = &v10[64 * v4];
  v18[0] = v10;
  v18[1] = v11;
  uint64_t v19 = v11;
  uint64_t v20 = &v10[64 * v9];
  *(_OWORD *)long long v11 = *(_OWORD *)a2;
  char v12 = v11 + 16;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_1000DC48C(v12, *(void **)(a2 + 16), *(void *)(a2 + 24));
    long long v11 = v19;
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 16);
    *((void *)v11 + 4) = *(void *)(a2 + 32);
    *(_OWORD *)char v12 = v13;
  }
  uint64_t v14 = &v10[64 * v4];
  long long v15 = *(_OWORD *)(a2 + 40);
  *((void *)v14 + 7) = *(void *)(a2 + 56);
  *(_OWORD *)(v14 + 40) = v15;
  uint64_t v19 = v11 + 64;
  sub_1001E7D78(a1, v18);
  uint64_t v16 = a1[1];
  sub_1001E7F2C((uint64_t)v18);
  return v16;
}

void sub_100301AC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001E7F2C((uint64_t)va);
  _Unwind_Resume(a1);
}

id sub_100301D30(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v2 + 32))
  {
    [*(id *)(v2 + 16) startSessionForClient:];
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A58A8);
    }
    uint64_t v3 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v16 = 0;
      __int16 v17 = 2082;
      char v18 = "";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Requested PDR fence without an active session! Starting Motion Session\"}", buf, 0x12u);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A58A8);
      }
    }
    uint64_t v4 = qword_102419458;
    if (os_signpost_enabled((os_log_t)qword_102419458))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      int v16 = 0;
      __int16 v17 = 2082;
      char v18 = "";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v4, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Requested PDR fence without an active session! Starting Motion Session", "{\"msg%{public}.0s\":\"Requested PDR fence without an active session! Starting Motion Session\"}", buf, 0x12u);
    }
    *(unsigned char *)(*(void *)(a1 + 32) + 32) = 1;
    uint64_t v2 = *(void *)(a1 + 32);
  }
  uint64_t v5 = qword_102419450;
  if (*(unsigned char *)(v2 + 77))
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A58A8);
    }
    long long v6 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Fence is already active, setting fence again", buf, 2u);
    }
    BOOL v7 = sub_10013D1A0(115, 0);
    uint64_t v5 = qword_102419450;
    if (v7)
    {
      bzero(buf, 0x65CuLL);
      if (v5 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A58A8);
      }
      uint64_t v14 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "-[CLMiLoPedestrianFenceClient setFence]_block_invoke", "%s\n", v14);
      if (v14 != (char *)buf) {
        free(v14);
      }
      uint64_t v5 = qword_102419450;
    }
  }
  if (v5 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A58A8);
  }
  uint64_t v8 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    double v11 = *(float *)(v10 + 72);
    LODWORD(v10) = *(unsigned __int8 *)(v10 + 77);
    *(_DWORD *)uint64_t buf = 68289538;
    int v16 = 0;
    __int16 v17 = 2082;
    char v18 = "";
    __int16 v19 = 2050;
    double v20 = v11;
    __int16 v21 = 1026;
    int v22 = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Setting PDR fence\", \"fence size in m\":\"%{public}.2f\", \"previous fence state\":%{public}hhd}", buf, 0x22u);
  }
  uint64_t v12 = *(void *)(a1 + 32);
  LODWORD(v9) = *(_DWORD *)(v12 + 72);
  id result = [*(id *)(v12 + 16) setFence:*(void *)(v12 + 40) forClient:v9 withRadius:*(void *)(v12 + 40)];
  *(unsigned char *)(*(void *)(a1 + 32) + 77) = 1;
  return result;
}

void sub_100302138(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(a1 + 32) + 77))
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A58A8);
    }
    uint64_t v2 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Clearing PDR fence -- will not receive any more fence breach notifications", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A58A8);
      }
      uint64_t v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "-[CLMiLoPedestrianFenceClient clearFence]_block_invoke", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
    [*(id *)(*(void *)(a1 + 32) + 16) clearFence:*(void *)(*(void *)(a1 + 32) + 40)];
    *(unsigned char *)(*(void *)(a1 + 32) + 77) = 0;
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A58A8);
    }
    uint64_t v3 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "No fence active -- ignoring request to clear fence", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A58A8);
      }
      uint64_t v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "-[CLMiLoPedestrianFenceClient clearFence]_block_invoke", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
  }
}

void sub_100302490(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v1 + 32))
  {
    [*(id *)(v1 + 16) startSessionForClient:];
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A58A8);
    }
    uint64_t v3 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
    {
      v4[0] = 68289026;
      v4[1] = 0;
      __int16 v5 = 2082;
      long long v6 = "";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Starting Motion Session\"}", (uint8_t *)v4, 0x12u);
    }
    *(unsigned char *)(*(void *)(a1 + 32) + 32) = 1;
  }
}

void sub_100302608(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 32))
  {
    [*(id *)(v1 + 16) endSessionForClient:];
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A58A8);
    }
    uint64_t v3 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
    {
      v4[0] = 68289026;
      v4[1] = 0;
      __int16 v5 = 2082;
      long long v6 = "";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Ending Motion Session\"}", (uint8_t *)v4, 0x12u);
    }
    *(unsigned char *)(*(void *)(a1 + 32) + 32) = 0;
  }
}

void sub_100302908(uint64_t a1)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A58A8);
  }
  uint64_t v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(*(void *)(a1 + 32) + 40) UTF8String];
    std::string __p = (void *)68289282;
    __int16 v7 = 2082;
    uint64_t v8 = "";
    __int16 v9 = 2082;
    id v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Breached PDR fence\", \"fenceId\":%{public, location:escape_only}s}", (uint8_t *)&__p, 0x1Cu);
  }
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 48);
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  sub_100134750(&__p, (char *)[*(id *)(*(void *)(a1 + 32) + 40) UTF8String]);
  (*(void (**)(uint64_t, void **, double))(v4 + 16))(v4, &__p, Current_5);
  if (SBYTE3(v10) < 0) {
    operator delete(__p);
  }
}

void sub_100302A50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100302C5C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 32) + 64) + 16))();
}

uint64_t sub_100302EF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 32) + 56) + 16))();
}

void *sub_100302F30(void *a1, void *a2, uint64_t a3)
{
  *a1 = off_1022A5710;
  a1[1] = a2;
  a1[2] = a3;
  id v5 = [a2 silo];
  sub_1000C7F88(&v20);
  float v19 = 0.0;
  CFStringRef v6 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsPedestrianFenceRadiusInMeters", 0x8000100u, kCFAllocatorNull);
  sub_1004D123C(v20, (uint64_t)v6, &v19);
  int v8 = v7;
  CFRelease(v6);
  float v9 = v19;
  if (v21) {
    sub_1000DB0A0(v21);
  }
  if (!v8) {
    float v9 = 3.5;
  }
  if (sub_1001B7C64())
  {
    sub_1000C7F88(&v20);
    float v19 = 0.0;
    CFStringRef v10 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsPedestrianFenceRadiusForIpadInMeters", 0x8000100u, kCFAllocatorNull);
    sub_1004D123C(v20, (uint64_t)v10, &v19);
    int v12 = v11;
    CFRelease(v10);
    float v9 = v19;
    if (v21) {
      sub_1000DB0A0(v21);
    }
    if (!v12) {
      float v9 = 3.5;
    }
  }
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_1003031C0;
  v18[3] = &unk_1022A5740;
  v18[4] = a1;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_100303598;
  v17[3] = &unk_1022A5760;
  v17[4] = a1;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 3221225472;
  v16[2] = sub_100303704;
  v16[3] = &unk_1022A5788;
  v16[4] = @"CLMiLoPDRFence";
  v16[5] = a1;
  long long v13 = [CLMiLoPedestrianFenceClient alloc];
  *(float *)&double v14 = v9;
  a1[3] = [(CLMiLoPedestrianFenceClient *)v13 initInUniverse:a2 andIdentifier:@"CLMiLoPDRFence" andRadiusInMeters:v18 andCallback:v16 andStatusCallback:v17 andErrorCallback:v14];
  a1[4] = [v5 newTimer];
  a1[5] = [v5 newTimer];
  return a1;
}

void sub_10030319C(_Unwind_Exception *exception_object)
{
  id v3 = *(std::__shared_weak_count **)(v1 - 72);
  if (v3) {
    sub_1000DB0A0(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003031C0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v5 = *(void *)(a1 + 32);
  sub_100303368(v5);
  (*(void (**)(void, uint64_t, double))(**(void **)(v5 + 16) + 16))(*(void *)(v5 + 16), a2, a3);
  sub_10023DE60(v9);
  if (!sub_10025C930(4u)) {
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  }
  v11 |= 4u;
  int v10 = 4;
  uint64_t v6 = *(void *)(v5 + 16);
  int v8 = 0;
  sub_1001EE1F4(&v8);
  *(void *)&long long v12 = sub_1001EC8C4((ssize_t)&v8);
  *((void *)&v12 + 1) = v7;
  sub_10030350C(&v12, (uint64_t)v9, (uint64_t)v13, a3);
  (*(void (**)(uint64_t, unsigned char *))(*(void *)v6 + 32))(v6, v13);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v14);
  sub_1001EF3E8((unsigned int *)&v8);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)v9);
}

void sub_100303328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11)
{
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)(v11 + 32));
  sub_1001EF3E8(&a10);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)&a11);
  _Unwind_Resume(a1);
}

id sub_100303368(uint64_t a1)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A58A8);
  }
  uint64_t v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "stopAllStatusTimers", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A58A8);
    }
    uint64_t v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationMotionBridge::stopAllStatusTimers()", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  [*(id *)(a1 + 32) invalidate];
  return [*(id *)(a1 + 40) invalidate];
}

void sub_10030350C(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  sub_10023DF50((uint64_t)v8);
  sub_1002E79F4((uint64_t)v8, a2);
  sub_10031A9F0(a3, a1, *(_DWORD *)(a2 + 16), (uint64_t)v8, a4);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_100303584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100303598(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  sub_10023DE60(v8);
  if (!sub_10025C930(0xAu)) {
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  }
  v11 |= 0x24u;
  int v9 = 10;
  int v10 = a2;
  uint64_t v4 = *(void *)(v3 + 16);
  int v7 = 0;
  sub_1001EE1F4(&v7);
  *(void *)&long long v12 = sub_1001EC8C4((ssize_t)&v7);
  *((void *)&v12 + 1) = v5;
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  sub_10030350C(&v12, (uint64_t)v8, (uint64_t)v13, Current_5);
  (*(void (**)(uint64_t, unsigned char *))(*(void *)v4 + 32))(v4, v13);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v14);
  sub_1001EF3E8((unsigned int *)&v7);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_1003036C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11)
{
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)(v11 + 32));
  sub_1001EF3E8(&a10);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)&a11);
  _Unwind_Resume(a1);
}

void sub_100303704(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 40);
  if ([a2 objectForKey:*(void *)(a1 + 32)])
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A58A8);
    }
    uint64_t v4 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 68289282;
      int v8 = 0;
      __int16 v9 = 2082;
      int v10 = "";
      __int16 v11 = 2114;
      long long v12 = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Received status report for active fence\", \"Status report\":%{public, location:escape_only}@}", (uint8_t *)&v7, 0x1Cu);
    }
    sub_100303934(v3);
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A58A8);
    }
    uint64_t v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
    {
      int v7 = 68289282;
      int v8 = 0;
      __int16 v9 = 2082;
      int v10 = "";
      __int16 v11 = 2114;
      long long v12 = a2;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Did not receive status report for active fence\", \"Status report\":%{public, location:escape_only}@}", (uint8_t *)&v7, 0x1Cu);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A58A8);
      }
    }
    uint64_t v6 = qword_102419458;
    if (os_signpost_enabled((os_log_t)qword_102419458))
    {
      int v7 = 68289282;
      int v8 = 0;
      __int16 v9 = 2082;
      int v10 = "";
      __int16 v11 = 2114;
      long long v12 = a2;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v6, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Did not receive status report for active fence", "{\"msg%{public}.0s\":\"Did not receive status report for active fence\", \"Status report\":%{public, location:escape_only}@}", (uint8_t *)&v7, 0x1Cu);
    }
  }
}

id sub_100303934(uint64_t a1)
{
  sub_100303368(a1);
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  sub_1000C7F88(buf);
  double v9 = 0.0;
  CFStringRef v3 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaxTimeAllowedWithoutFenceStatusReport", 0x8000100u, kCFAllocatorNull);
  int v4 = sub_1000A6A10(*(uint64_t *)buf, (uint64_t)v3, &v9);
  CFRelease(v3);
  double v5 = v9;
  if (*(void *)v11) {
    sub_1000DB0A0(*(std::__shared_weak_count **)v11);
  }
  if (!v4) {
    double v5 = 600.0;
  }
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_100303BE4;
  v8[3] = &unk_1022A3020;
  void v8[4] = a1;
  [*(id *)(a1 + 32) setHandler:v8];
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A58A8);
  }
  uint64_t v6 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289282;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)__int16 v11 = 2082;
    *(void *)&v11[2] = "";
    __int16 v12 = 2050;
    double v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"stopAllStatusTimersAndStartFenceStatusTimer: setting fence status timer to fire in the future\", \"Delay to next fire\":\"%{public}f\"}", buf, 0x1Cu);
  }
  return [*(id *)(a1 + 32) setNextFireTime:Current_5 + v5];
}

void sub_100303B0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    sub_1000DB0A0(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100303B34(uint64_t a1)
{
  *(void *)a1 = off_1022A5710;

  [*(id *)(a1 + 32) invalidate];
  *(void *)(a1 + 32) = 0;
  [*(id *)(a1 + 40) invalidate];

  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_100303BAC(uint64_t a1)
{
  sub_100303B34(a1);

  operator delete();
}

id sub_100303BE4(uint64_t a1)
{
  return sub_100303BEC(*(void *)(a1 + 32));
}

id sub_100303BEC(uint64_t a1)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A58A8);
  }
  uint64_t v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "handleFenceStatusTimerFire", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A58A8);
    }
    int v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationMotionBridge::handleFenceStatusTimerFire()", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  return sub_100303D88(a1);
}

id sub_100303D88(uint64_t a1)
{
  sub_100303368(a1);
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  sub_1000C7F88(buf);
  double v9 = 0.0;
  CFStringRef v3 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaxDelayAfterFenceStatusReportTimerFires", 0x8000100u, kCFAllocatorNull);
  int v4 = sub_1000A6A10(*(uint64_t *)buf, (uint64_t)v3, &v9);
  CFRelease(v3);
  double v5 = v9;
  if (*(void *)v11) {
    sub_1000DB0A0(*(std::__shared_weak_count **)v11);
  }
  if (!v4) {
    double v5 = 30.0;
  }
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_100303F80;
  v8[3] = &unk_1022A3020;
  void v8[4] = a1;
  [*(id *)(a1 + 40) setHandler:v8];
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A58A8);
  }
  uint64_t v6 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289282;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)__int16 v11 = 2082;
    *(void *)&v11[2] = "";
    __int16 v12 = 2050;
    double v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"stopAllStatusTimersAndStartRaceDelayTimer: setting race delay timer to fire in the future\", \"Delay to next fire\":\"%{public}f\"}", buf, 0x1Cu);
  }
  return [*(id *)(a1 + 40) setNextFireTime:Current_5 + v5];
}

void sub_100303F5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    sub_1000DB0A0(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100303F80(uint64_t a1)
{
  return sub_100303F88(*(void *)(a1 + 32));
}

uint64_t sub_100303F88(uint64_t a1)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A58A8);
  }
  uint64_t v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "handleRaceDelayTimerFire", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A58A8);
    }
    int v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationMotionBridge::handleRaceDelayTimerFire()", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  sub_100303368(a1);
  return (*(uint64_t (**)(void))(**(void **)(a1 + 16) + 24))(*(void *)(a1 + 16));
}

void sub_10030414C(uint64_t a1)
{
  sub_10023DE60(v6);
  if (!sub_10025C930(8u)) {
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  }
  v8 |= 4u;
  int v7 = 8;
  uint64_t v2 = *(void *)(a1 + 16);
  int v5 = 0;
  sub_1001EE1F4(&v5);
  *(void *)&long long v9 = sub_1001EC8C4((ssize_t)&v5);
  *((void *)&v9 + 1) = v3;
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  sub_10030350C(&v9, (uint64_t)v6, (uint64_t)v10, Current_5);
  (*(void (**)(uint64_t, unsigned char *))(*(void *)v2 + 32))(v2, v10);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v11);
  sub_1001EF3E8((unsigned int *)&v5);
  [*(id *)(a1 + 24) setFence];
  sub_100303934(a1);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)v6);
}

void sub_10030427C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11)
{
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)(v11 + 32));
  sub_1001EF3E8(&a10);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)&a11);
  _Unwind_Resume(a1);
}

void sub_1003042BC(uint64_t a1)
{
  sub_10023DE60(v6);
  if (!sub_10025C930(9u)) {
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  }
  v8 |= 4u;
  int v7 = 9;
  uint64_t v2 = *(void *)(a1 + 16);
  int v5 = 0;
  sub_1001EE1F4(&v5);
  *(void *)&long long v9 = sub_1001EC8C4((ssize_t)&v5);
  *((void *)&v9 + 1) = v3;
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  sub_10030350C(&v9, (uint64_t)v6, (uint64_t)v10, Current_5);
  (*(void (**)(uint64_t, unsigned char *))(*(void *)v2 + 32))(v2, v10);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v11);
  sub_1001EF3E8((unsigned int *)&v5);
  [*(id *)(a1 + 24) clearFence];
  sub_100303368(a1);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)v6);
}

void sub_1003043EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11)
{
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)(v11 + 32));
  sub_1001EF3E8(&a10);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)&a11);
  _Unwind_Resume(a1);
}

id sub_10030442C(uint64_t a1)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A58A8);
  }
  uint64_t v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    uint64_t v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationMotionBridge::startMotionSession\"}", (uint8_t *)v4, 0x12u);
  }
  return [*(id *)(a1 + 24) startSession];
}

id sub_100304510(uint64_t a1)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A58A8);
  }
  uint64_t v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 68289026;
    v4[1] = 0;
    __int16 v5 = 2082;
    uint64_t v6 = "";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationMotionBridge::stopMotionSession\"}", (uint8_t *)v4, 0x12u);
  }
  return [*(id *)(a1 + 24) endSession];
}

uint64_t sub_1003045F4(uint64_t a1, void *a2, uint64_t a3)
{
  *(void *)a1 = &off_1022A57B8;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a3;
  *(unsigned char *)(a1 + 24) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  uint64_t v40 = a1 + 32;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_DWORD *)(a1 + 64) = 1065353216;
  *(unsigned char *)(a1 + 72) = 0;
  uint64_t v3 = a1 + 72;
  *(unsigned char *)(a1 + 136) = 0;
  id v41 = [a2 silo];
  sub_1000C7F88(buf);
  LOBYTE(v57) = 0;
  CFStringRef v4 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleEnable", 0x8000100u, kCFAllocatorNull);
  char v5 = sub_1000D29FC(*(uint64_t *)buf, (uint64_t)v4, (BOOL *)&v57);
  CFRelease(v4);
  int v6 = v57;
  if (*(void *)&buf[8]) {
    sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
  }
  if (v6) {
    char v7 = 0;
  }
  else {
    char v7 = v5;
  }
  if (v7)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A58A8);
    }
    int v8 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(void *)uint64_t buf = 68289282;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&unsigned char buf[18] = 1026;
      *(_DWORD *)&buf[20] = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationStopMotionDetectionBridge CTOR, setting is off so object did not initialize\", \"Stop detection enabled\":%{public}hhd}", buf, 0x18u);
    }
  }
  else
  {
    sub_1000C7F88(buf);
    *(void *)&long long v57 = 0;
    CFStringRef v9 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleRadiuses", 0x8000100u, kCFAllocatorNull);
    BOOL v10 = sub_1004D1D1C(*(uint64_t *)buf, v9, (CFTypeRef *)&v57);
    CFRelease(v9);
    if (v10)
    {
      sub_100306920((const __CFArray *)v57, (uint64_t)__p);
    }
    else
    {
      uint64_t v11 = operator new(0x10uLL);
      uint64_t v56 = v11 + 1;
      *uint64_t v11 = xmmword_101D0B250;
      __p[0] = v11;
      __p[1] = v11 + 1;
    }
    if (*(void *)&buf[8]) {
      sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
    }
    sub_1000C7F88(buf);
    *(void *)&long long v57 = 0;
    CFStringRef v12 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleOngoingTimerTimeout", 0x8000100u, kCFAllocatorNull);
    int v13 = sub_1000A6A10(*(uint64_t *)buf, (uint64_t)v12, &v57);
    CFRelease(v12);
    double v14 = *(double *)&v57;
    if (*(void *)&buf[8]) {
      sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
    }
    if (!v13) {
      double v14 = 5.0;
    }
    sub_1000C7F88(buf);
    *(void *)&long long v57 = 0;
    CFStringRef v15 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleTimeouts", 0x8000100u, kCFAllocatorNull);
    BOOL v16 = sub_1004D1D1C(*(uint64_t *)buf, v15, (CFTypeRef *)&v57);
    CFRelease(v15);
    if (v16)
    {
      sub_100306A8C((const __CFArray *)v57, (uint64_t)&v53);
    }
    else
    {
      __int16 v17 = operator new(0x10uLL);
      *((void *)&v54 + 1) = v17 + 1;
      _OWORD *v17 = xmmword_101D0B260;
      uint64_t v53 = v17;
      *(void *)&long long v54 = v17 + 1;
    }
    if (*(void *)&buf[8]) {
      sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
    }
    if (sub_1001B7C64())
    {
      sub_1000C7F88(&v57);
      v49[0] = 0;
      CFStringRef v18 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleIpadRadii", 0x8000100u, kCFAllocatorNull);
      BOOL v19 = sub_1004D1D1C(v57, v18, (CFTypeRef *)v49);
      CFRelease(v18);
      if (v19)
      {
        sub_100306BF8((const __CFArray *)v49[0], (uint64_t)buf);
      }
      else
      {
        memset(buf, 0, sizeof(buf));
        int v22 = operator new(0x10uLL);
        *(void *)&buf[16] = v22 + 1;
        _OWORD *v22 = xmmword_101D0B270;
        *(void *)uint64_t buf = v22;
        *(void *)&uint8_t buf[8] = v22 + 1;
      }
      if (*((void *)&v57 + 1)) {
        sub_1000DB0A0(*((std::__shared_weak_count **)&v57 + 1));
      }
      if (__p[0])
      {
        __p[1] = __p[0];
        operator delete(__p[0]);
      }
      *(_OWORD *)std::string __p = *(_OWORD *)buf;
      uint64_t v56 = *(_OWORD **)&buf[16];
      sub_1000C7F88(buf);
      *(void *)&long long v57 = 0;
      CFStringRef v23 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleIpadOngoingTimerTimeout", 0x8000100u, kCFAllocatorNull);
      int v24 = sub_1000A6A10(*(uint64_t *)buf, (uint64_t)v23, &v57);
      CFRelease(v23);
      double v14 = *(double *)&v57;
      if (*(void *)&buf[8]) {
        sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
      }
      if (!v24) {
        double v14 = 300.0;
      }
      sub_1000C7F88(&v57);
      v49[0] = 0;
      CFStringRef v25 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleIpadTimeouts", 0x8000100u, kCFAllocatorNull);
      BOOL v26 = sub_1004D1D1C(v57, v25, (CFTypeRef *)v49);
      CFRelease(v25);
      if (v26)
      {
        sub_100306D64((const __CFArray *)v49[0], (uint64_t)buf);
      }
      else
      {
        memset(buf, 0, sizeof(buf));
        char v27 = operator new(0x10uLL);
        *(void *)&buf[16] = v27 + 1;
        *char v27 = xmmword_101D0B280;
        *(void *)uint64_t buf = v27;
        *(void *)&uint8_t buf[8] = v27 + 1;
      }
      if (*((void *)&v57 + 1)) {
        sub_1000DB0A0(*((std::__shared_weak_count **)&v57 + 1));
      }
      if (v53)
      {
        *(void *)&long long v54 = v53;
        operator delete(v53);
      }
      uint64_t v20 = *(void **)buf;
      uint64_t v53 = *(void **)buf;
      long long v54 = *(_OWORD *)&buf[8];
      uint64_t v21 = *(void *)&buf[8];
    }
    else
    {
      uint64_t v20 = v53;
      uint64_t v21 = v54;
    }
    v52[0] = _NSConcreteStackBlock;
    v52[1] = 3221225472;
    v52[2] = sub_1003050D8;
    v52[3] = &unk_1022A5740;
    v52[4] = a1;
    v51[0] = _NSConcreteStackBlock;
    v51[1] = 3221225472;
    v51[2] = sub_1003054A4;
    v51[3] = &unk_1022A5760;
    v51[4] = a1;
    unint64_t v28 = __p[0];
    if ((char *)__p[1] - (char *)__p[0] == v21 - (void)v20)
    {
      uint64_t v39 = v3;
      if (__p[1] != __p[0])
      {
        unint64_t v29 = 0;
        do
        {
          *(void *)uint64_t buf = v28[v29];
          *(void *)&uint8_t buf[8] = *((void *)v53 + v29);
          buf[16] = 0;
          BYTE4(v64) = 0;
          sub_100305614(buf, (uint64_t)v49);
          id v48 = 0;
          unint64_t v30 = [CLMiLoPedestrianFenceClient alloc];
          uint64_t v31 = *(void *)(a1 + 8);
          if (v50 >= 0) {
            uint64_t v32 = v49;
          }
          else {
            uint64_t v32 = (void **)v49[0];
          }
          char v33 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v32, v39);
          HIDWORD(v34) = *(_DWORD *)&buf[4];
          *(float *)&double v34 = *(double *)buf;
          id v48 = [(CLMiLoPedestrianFenceClient *)v30 initInUniverse:v31 andIdentifier:v33 andRadiusInMeters:v52 andCallback:&stru_1022A5808 andStatusCallback:v51 andErrorCallback:v34];
          id v47 = [v41 newTimer];
          std::string v58 = &v47;
          long long v59 = v49;
          *(void *)&long long v57 = buf;
          *((void *)&v57 + 1) = &v48;
          sub_100306FF4(v40, (unsigned __int8 *)v49, (uint64_t)&unk_101D0B290, (long long **)&v59, &v57);
          if (v50 < 0) {
            operator delete(v49[0]);
          }
          if (BYTE4(v64) && SBYTE3(v64) < 0) {
            operator delete(*(void **)&buf[16]);
          }
          ++v29;
          unint64_t v28 = __p[0];
        }
        while (v29 < ((char *)__p[1] - (char *)__p[0]) >> 3);
      }
      *(void *)&long long v43 = nan("");
      *((double *)&v43 + 1) = v14;
      sub_100134750(v44, "ongoingTimer");
      char v46 = 1;
      id v35 = [v41 newTimer];
      *(_OWORD *)uint64_t buf = v43;
      sub_1000E3A78((uint64_t)&buf[16], (long long *)v44);
      uint64_t v65 = 0;
      id v66 = v35;
      sub_100305954(v39, (uint64_t)buf);
      if (BYTE4(v64) && SBYTE3(v64) < 0) {
        operator delete(*(void **)&buf[16]);
      }
      if (v46 && v45 < 0) {
        operator delete(v44[0]);
      }
    }
    else
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A58A8);
      }
      int v36 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
      {
        *(void *)uint64_t buf = 68289794;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&unsigned char buf[18] = 1026;
        *(_DWORD *)&buf[20] = 1;
        __int16 v61 = 2050;
        int64_t v62 = ((char *)__p[1] - (char *)__p[0]) >> 3;
        __int16 v63 = 2050;
        uint64_t v64 = (uint64_t)(v54 - (void)v53) >> 3;
        _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"CLMicroLocationStopMotionDetectionBridge CTOR, wrong configuration, object did not initialize\", \"Stop detection enabled\":%{public}hhd, \"Num Radiuses\":%{public}lu, \"Num Timeouts\":%{public}lu}", buf, 0x2Cu);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A58A8);
        }
      }
      uint64_t v37 = qword_102419458;
      if (os_signpost_enabled((os_log_t)qword_102419458))
      {
        *(void *)uint64_t buf = 68289794;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&unsigned char buf[18] = 1026;
        *(_DWORD *)&buf[20] = 1;
        __int16 v61 = 2050;
        int64_t v62 = ((char *)__p[1] - (char *)__p[0]) >> 3;
        __int16 v63 = 2050;
        uint64_t v64 = (uint64_t)(v54 - (void)v53) >> 3;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v37, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "CLMicroLocationStopMotionDetectionBridge CTOR, wrong configuration, object did not initialize", "{\"msg%{public}.0s\":\"CLMicroLocationStopMotionDetectionBridge CTOR, wrong configuration, object did not initialize\", \"Stop detection enabled\":%{public}hhd, \"Num Radiuses\":%{public}lu, \"Num Timeouts\":%{public}lu}", buf, 0x2Cu);
      }
    }
    if (v53)
    {
      *(void *)&long long v54 = v53;
      operator delete(v53);
    }
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
  }
  return a1;
}

void sub_100304F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *__p,uint64_t a41,uint64_t a42,void *a43,uint64_t a44)
{
  id v47 = *(std::__shared_weak_count **)(v45 - 216);
  if (v47) {
    sub_1000DB0A0(v47);
  }
  if (__p) {
    operator delete(__p);
  }
  if (a43) {
    operator delete(a43);
  }
  sub_100306ED0(v44);
  sub_100306F14(a10);
  _Unwind_Resume(a1);
}

void sub_1003050D8(uint64_t a1, std::string *a2, double a3)
{
}

void sub_1003050E0(uint64_t a1, std::string *a2, double a3)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A58A8);
  }
  int v6 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      char v7 = a2;
    }
    else {
      char v7 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t buf = 68289282;
    int v23 = 0;
    __int16 v24 = 2082;
    CFStringRef v25 = "";
    __int16 v26 = 2082;
    char v27 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"StopMotionDetectionBridge::onMotionMeasurements\", \"fenceId\":%{public, location:escape_only}s}", buf, 0x1Cu);
  }
  int v8 = sub_100103284((void *)(a1 + 32), (unsigned __int8 *)a2);
  CFStringRef v9 = v8;
  if (v8)
  {
    [*((id *)v8 + 11) setFence];
    [*((id *)v9 + 12) setNextFireTime:a3 + *((double *)v9 + 6)];
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A58A8);
    }
    BOOL v10 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = (a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? (uint64_t *)a2
          : (uint64_t *)a2->__r_.__value_.__r.__words[0];
      *(_DWORD *)uint64_t buf = 68289282;
      int v23 = 0;
      __int16 v24 = 2082;
      CFStringRef v25 = "";
      __int16 v26 = 2082;
      char v27 = (std::string *)v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"onMotionMeasurements, couldn't find StopMotionDetection element\", \"fenceIdStr\":%{public, location:escape_only}s}", buf, 0x1Cu);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A58A8);
      }
    }
    CFStringRef v12 = qword_102419458;
    if (os_signpost_enabled((os_log_t)qword_102419458))
    {
      if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v13 = a2;
      }
      else {
        int v13 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)uint64_t buf = 68289282;
      int v23 = 0;
      __int16 v24 = 2082;
      CFStringRef v25 = "";
      __int16 v26 = 2082;
      char v27 = v13;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v12, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "onMotionMeasurements, couldn't find StopMotionDetection element", "{\"msg%{public}.0s\":\"onMotionMeasurements, couldn't find StopMotionDetection element\", \"fenceIdStr\":%{public, location:escape_only}s}", buf, 0x1Cu);
    }
  }
  sub_10023DE60(v17);
  if (!sub_10025C930(5u)) {
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  }
  int v18 = 5;
  v20 |= 0xCu;
  if (v19 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v19, a2);
  uint64_t v14 = *(void *)(a1 + 16);
  int v16 = 0;
  sub_1001EE1F4(&v16);
  *(void *)&long long v21 = sub_1001EC8C4((ssize_t)&v16);
  *((void *)&v21 + 1) = v15;
  sub_10030350C(&v21, (uint64_t)v17, (uint64_t)buf, a3);
  (*(void (**)(uint64_t, uint8_t *))(*(void *)v14 + 32))(v14, buf);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v28);
  sub_1001EF3E8((unsigned int *)&v16);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)v17);
}

void sub_100305464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, char a12)
{
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)(v12 + 32));
  sub_1001EF3E8(&a11);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)&a12);
  _Unwind_Resume(a1);
}

void sub_1003054A4(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  sub_10023DE60(v8);
  if (!sub_10025C930(0xAu)) {
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  }
  v11 |= 0x24u;
  int v9 = 10;
  int v10 = a2;
  uint64_t v4 = *(void *)(v3 + 16);
  int v7 = 0;
  sub_1001EE1F4(&v7);
  *(void *)&long long v12 = sub_1001EC8C4((ssize_t)&v7);
  *((void *)&v12 + 1) = v5;
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  sub_10030350C(&v12, (uint64_t)v8, (uint64_t)v13, Current_5);
  (*(void (**)(uint64_t, unsigned char *))(*(void *)v4 + 32))(v4, v13);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v14);
  sub_1001EF3E8((unsigned int *)&v7);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_1003055D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11)
{
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)(v11 + 32));
  sub_1001EF3E8(&a10);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)&a11);
  _Unwind_Resume(a1);
}

void *sub_100305614@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  if (*((unsigned char *)result + 40))
  {
    if (*((char *)result + 39) < 0)
    {
      int v7 = (void *)result[2];
      unint64_t v8 = result[3];
      return sub_1000DC48C((unsigned char *)a2, v7, v8);
    }
    else
    {
      *(_OWORD *)a2 = *((_OWORD *)result + 1);
      *(void *)(a2 + 16) = result[4];
    }
  }
  else
  {
    sub_10010F274((uint64_t)v13);
    uint64_t v2 = v14[0];
    *(_DWORD *)((char *)&v14[1] + *(void *)(v14[0] - 24)) = *(_DWORD *)((unsigned char *)&v14[1] + *(void *)(v14[0] - 24)) & 0xFFFFFEFB | 4;
    *(void *)((char *)&v14[2] + *(void *)(v2 - 24)) = 2;
    uint64_t v3 = (char *)operator new(0x28uLL);
    strcpy(v3, "MiLoStopMotionDetectionFence:radius:");
    sub_100132EFC(v14, (uint64_t)v3, 36);
    uint64_t v4 = (void *)std::ostream::operator<<();
    char v12 = 10;
    strcpy((char *)v11, "m:timeout:");
    sub_100132EFC(v4, (uint64_t)v11, 10);
    uint64_t v5 = (void *)std::ostream::operator<<();
    char v10 = 3;
    LODWORD(__p) = 6514035;
    sub_100132EFC(v5, (uint64_t)&__p, 3);
    if (v10 < 0) {
      operator delete(__p);
    }
    if (v12 < 0) {
      operator delete(v11[0]);
    }
    operator delete(v3);
    std::stringbuf::str();
    *(void *)((char *)v13
    v14[0] = v6;
    if (v15 < 0) {
      operator delete((void *)v14[9]);
    }
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    return (void *)std::ios::~ios();
  }
  return result;
}

void sub_1003058FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
}

uint64_t sub_100305954(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 64);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v5 = a1 + 16;
  if (v4)
  {
    sub_1002DCC4C(v5, (__n128 *)(a2 + 16));
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  else
  {
    *(unsigned char *)(a1 + 16) = 0;
    *(unsigned char *)(a1 + 40) = 0;
    if (*(unsigned char *)(a2 + 40))
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(void *)(v5 + 16) = *(void *)(a2 + 32);
      *(_OWORD *)uint64_t v5 = v6;
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 16) = 0;
      *(unsigned char *)(a1 + 40) = 1;
    }
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(unsigned char *)(a1 + 64) = 1;
  }
  return a1;
}

uint64_t sub_1003059E8(uint64_t a1)
{
  *(void *)a1 = &off_1022A57B8;
  for (uint64_t i = *(uint64_t ***)(a1 + 48); i; uint64_t i = (uint64_t **)*i)
  {

    i[11] = 0;
    [i[12] invalidate];

    i[12] = 0;
  }
  if (*(unsigned char *)(a1 + 136))
  {
    [*(id *)(a1 + 128) invalidate];

    *(void *)(a1 + 128) = 0;
  }
  sub_100306ED0(a1 + 72);
  sub_100306F14(a1 + 32);
  return a1;
}

void sub_100305A94(uint64_t a1)
{
  sub_1003059E8(a1);

  operator delete();
}

void *sub_100305ACC(void *result, __n128 a2)
{
  if (*((unsigned char *)result + 24))
  {
    uint64_t v2 = result;
    uint64_t v3 = (uint64_t *)result[6];
    if (v3)
    {
      a2.n128_u64[0] = 68289282;
      __n128 v8 = a2;
      do
      {
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A58A8);
        }
        int v4 = qword_102419458;
        if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v5 = (void **)(v3 + 2);
          if (*((char *)v3 + 39) < 0) {
            uint64_t v5 = (void **)*v5;
          }
          *(_DWORD *)uint64_t buf = v8.n128_u32[0];
          int v12 = 0;
          __int16 v13 = 2082;
          uint64_t v14 = "";
          __int16 v15 = 2082;
          int v16 = v5;
          _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"setting stopDetection element to Idle (clear fence and timer)\", \"Element ID\":%{public, location:escape_only}s}", buf, 0x1Cu);
        }
        [v3[11] clearFence:*(_OWORD *)&v8];
        id result = [(id)v3[12] invalidate];
        uint64_t v3 = (uint64_t *)*v3;
      }
      while (v3);
    }
    if (*((unsigned char *)v2 + 136))
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A58A8);
      }
      long long v6 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        sub_100305614(v2 + 9, (uint64_t)__p);
        if (v10 >= 0) {
          int v7 = __p;
        }
        else {
          int v7 = (void **)__p[0];
        }
        *(_DWORD *)uint64_t buf = 68289282;
        int v12 = 0;
        __int16 v13 = 2082;
        uint64_t v14 = "";
        __int16 v15 = 2082;
        int v16 = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"setting stopDetection ongoing timer to Idle (clear fence)\", \"Element ID\":%{public, location:escape_only}s}", buf, 0x1Cu);
        if (v10 < 0) {
          operator delete(__p[0]);
        }
      }
      id result = [(id)v2[16] invalidate];
    }
    *((unsigned char *)v2 + 24) = 0;
  }
  return result;
}

void sub_100305CF8(uint64_t a1)
{
  *(unsigned char *)(a1 + 24) = 1;
  *(double *)&long long v2 = j__CFAbsoluteTimeGetCurrent_5();
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  if (v3)
  {
    double v4 = *(double *)&v2;
    *(void *)&long long v2 = 68289282;
    long long v8 = v2;
    do
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A58A8);
      }
      uint64_t v5 = v3 + 2;
      long long v6 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        int v7 = v3 + 2;
        if (*((char *)v3 + 39) < 0) {
          int v7 = (uint64_t *)*v5;
        }
        *(_DWORD *)uint64_t buf = v8;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        *(_WORD *)&unsigned char buf[18] = 2082;
        *(void *)&buf[20] = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"starting stopDetection in element (set fence and timer)\", \"Element ID\":%{public, location:escape_only}s}", buf, 0x1Cu);
      }
      if (*((char *)v3 + 39) < 0)
      {
        sub_1000DC48C(buf, (void *)v3[2], v3[3]);
      }
      else
      {
        *(_OWORD *)uint64_t buf = *(_OWORD *)v5;
        *(void *)&buf[16] = v3[4];
      }
      [v3[11] setFence:v8, v9, v10, v11, v12, v13];
      [(id)v3[12] setNextFireTime:v4 + *((double *)v3 + 6)];
      int v9 = _NSConcreteStackBlock;
      uint64_t v10 = 3321888768;
      uint64_t v11 = sub_100305F6C;
      int v12 = &unk_1022A5828;
      uint64_t v13 = a1;
      if ((buf[23] & 0x80000000) != 0)
      {
        sub_1000DC48C(&__p, *(void **)buf, *(unint64_t *)&buf[8]);
      }
      else
      {
        long long __p = *(_OWORD *)buf;
        uint64_t v15 = *(void *)&buf[16];
      }
      [(id)v3[12] setHandler:&v9];
      if (SHIBYTE(v15) < 0) {
        operator delete((void *)__p);
      }
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      uint64_t v3 = (uint64_t *)*v3;
    }
    while (v3);
  }
  sub_100306250(a1);
}

void sub_100305F2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
}

void sub_100305F6C(uint64_t a1)
{
  long long v2 = *(void **)(a1 + 32);
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();

  sub_100305FAC(v2, (const std::string *)(a1 + 40), Current_5);
}

void sub_100305FAC(void *a1, const std::string *a2, double a3)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A58A8);
  }
  long long v6 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v7 = a2;
    }
    else {
      int v7 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t buf = 68289282;
    int v17 = 0;
    __int16 v18 = 2082;
    BOOL v19 = "";
    __int16 v20 = 2082;
    long long v21 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"StopMotionDetectionBridge::onTimerTimeout\", \"fenceIdStr\":%{public, location:escape_only}s}", buf, 0x1Cu);
  }
  (*(void (**)(void *))(*a1 + 16))(a1);
  sub_10023DE60(v11);
  if (!sub_10025C930(6u)) {
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  }
  int v12 = 6;
  v14 |= 0xCu;
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v13, a2);
  uint64_t v8 = a1[2];
  int v10 = 0;
  sub_1001EE1F4(&v10);
  *(void *)&long long v15 = sub_1001EC8C4((ssize_t)&v10);
  *((void *)&v15 + 1) = v9;
  sub_10030350C(&v15, (uint64_t)v11, (uint64_t)buf, a3);
  (*(void (**)(uint64_t, uint8_t *))(*(void *)v8 + 32))(v8, buf);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v22);
  sub_1001EF3E8((unsigned int *)&v10);
  (*(void (**)(void, double))(*(void *)a1[2] + 16))(a1[2], a3);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)v11);
}

void sub_100306210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, char a12)
{
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)(v12 + 32));
  sub_1001EF3E8(&a11);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)&a12);
  _Unwind_Resume(a1);
}

void sub_100306250(uint64_t a1)
{
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  if (*(unsigned char *)(a1 + 136))
  {
    double v3 = Current_5;
    sub_100305614((void *)(a1 + 72), (uint64_t)__p);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A58A8);
    }
    double v4 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = __p;
      if (v8 < 0) {
        uint64_t v5 = (void **)__p[0];
      }
      *(_DWORD *)uint64_t buf = 68289282;
      int v10 = 0;
      __int16 v11 = 2082;
      uint64_t v12 = "";
      __int16 v13 = 2082;
      int v14 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"setting ongoing timer\", \"Element ID\":%{public, location:escape_only}s}", buf, 0x1Cu);
    }
    [*(id *)(a1 + 128) setNextFireTime:v3 + *(double *)(a1 + 80)];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    void v6[2] = sub_100306690;
    v6[3] = &unk_1022A3020;
    v6[4] = a1;
    [*(id *)(a1 + 128) setHandler:v6];
    if (v8 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_1003063E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100306408(void *result, __n128 a2)
{
  long long v2 = (uint64_t *)result[6];
  if (v2)
  {
    a2.n128_u64[0] = 68289282;
    __n128 v5 = a2;
    do
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A58A8);
      }
      double v3 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        double v4 = v2 + 2;
        if (*((char *)v2 + 39) < 0) {
          double v4 = (void *)*v4;
        }
        *(_DWORD *)uint64_t buf = v5.n128_u32[0];
        int v7 = 0;
        __int16 v8 = 2082;
        uint64_t v9 = "";
        __int16 v10 = 2082;
        __int16 v11 = v4;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"starting session for stopDetection element\", \"Element ID\":%{public, location:escape_only}s}", buf, 0x1Cu);
      }
      id result = [v2[11] startSession:*(_OWORD *)&v5];
      long long v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  return result;
}

void *sub_10030654C(void *result, __n128 a2)
{
  long long v2 = (uint64_t *)result[6];
  if (v2)
  {
    a2.n128_u64[0] = 68289282;
    __n128 v5 = a2;
    do
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A58A8);
      }
      double v3 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        double v4 = v2 + 2;
        if (*((char *)v2 + 39) < 0) {
          double v4 = (void *)*v4;
        }
        *(_DWORD *)uint64_t buf = v5.n128_u32[0];
        int v7 = 0;
        __int16 v8 = 2082;
        uint64_t v9 = "";
        __int16 v10 = 2082;
        __int16 v11 = v4;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"stopping session for stopDetection element\", \"Element ID\":%{public, location:escape_only}s}", buf, 0x1Cu);
      }
      id result = [v2[11] endSession:*(_OWORD *)&v5];
      long long v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  return result;
}

void sub_100306690(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();

  sub_1003066C8(v1, Current_5);
}

void sub_1003066C8(uint64_t a1, double a2)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A58A8);
  }
  double v4 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 68289026;
    int v13 = 0;
    __int16 v14 = 2082;
    long long v15 = "";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"StopMotionDetectionBridge::ongoingTimerTimeout\"}", buf, 0x12u);
  }
  sub_10023DE60(v8);
  if (!sub_10025C930(7u)) {
    __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
  }
  v10 |= 4u;
  int v9 = 7;
  uint64_t v5 = *(void *)(a1 + 16);
  int v7 = 0;
  sub_1001EE1F4(&v7);
  *(void *)&long long v11 = sub_1001EC8C4((ssize_t)&v7);
  *((void *)&v11 + 1) = v6;
  sub_10030350C(&v11, (uint64_t)v8, (uint64_t)buf, a2);
  (*(void (**)(uint64_t, uint8_t *))(*(void *)v5 + 32))(v5, buf);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v16);
  sub_1001EF3E8((unsigned int *)&v7);
  (*(void (**)(void, double))(**(void **)(a1 + 16) + 24))(*(void *)(a1 + 16), a2);
  sub_100306250(a1);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_1003068B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, char a12)
{
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)(v12 + 32));
  sub_1001EF3E8(&a11);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)&a12);
  _Unwind_Resume(a1);
}

void sub_1003068F0(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

double sub_100306920@<D0>(const __CFArray *a1@<X0>, uint64_t a2@<X8>)
{
  long long v5 = 0uLL;
  uint64_t v6 = 0;
  v7.length = CFArrayGetCount(a1);
  v7.location = 0;
  CFArrayApplyFunction(a1, v7, (CFArrayApplierFunction)sub_1003069A8, &v5);
  double result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(void *)(a2 + 16) = v6;
  return result;
}

void sub_10030698C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003069A8(const void *a1, uint64_t a2)
{
  sub_100218858(a1);
  uint64_t v4 = v3;
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 8);
  if ((unint64_t)v6 >= v5)
  {
    __int16 v8 = *(void **)a2;
    uint64_t v9 = ((uint64_t)v6 - *(void *)a2) >> 3;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 61) {
      sub_1001D7FD4();
    }
    uint64_t v11 = v5 - (void)v8;
    if (v11 >> 2 > v10) {
      unint64_t v10 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      int v13 = (char *)sub_1000DA54C(a2 + 16, v12);
      __int16 v8 = *(void **)a2;
      uint64_t v6 = *(void **)(a2 + 8);
    }
    else
    {
      int v13 = 0;
    }
    __int16 v14 = &v13[8 * v9];
    long long v15 = &v13[8 * v12];
    *(void *)__int16 v14 = v4;
    CFRange v7 = v14 + 8;
    while (v6 != v8)
    {
      uint64_t v16 = *--v6;
      *((void *)v14 - 1) = v16;
      v14 -= 8;
    }
    *(void *)a2 = v14;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v15;
    if (v8) {
      operator delete(v8);
    }
  }
  else
  {
    *uint64_t v6 = v3;
    CFRange v7 = v6 + 1;
  }
  *(void *)(a2 + 8) = v7;
}

double sub_100306A8C@<D0>(const __CFArray *a1@<X0>, uint64_t a2@<X8>)
{
  long long v5 = 0uLL;
  uint64_t v6 = 0;
  v7.length = CFArrayGetCount(a1);
  v7.location = 0;
  CFArrayApplyFunction(a1, v7, (CFArrayApplierFunction)sub_100306B14, &v5);
  double result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(void *)(a2 + 16) = v6;
  return result;
}

void sub_100306AF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100306B14(const void *a1, uint64_t a2)
{
  sub_100218858(a1);
  uint64_t v4 = v3;
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 8);
  if ((unint64_t)v6 >= v5)
  {
    __int16 v8 = *(void **)a2;
    uint64_t v9 = ((uint64_t)v6 - *(void *)a2) >> 3;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 61) {
      sub_1001D7FD4();
    }
    uint64_t v11 = v5 - (void)v8;
    if (v11 >> 2 > v10) {
      unint64_t v10 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      int v13 = (char *)sub_1000DA54C(a2 + 16, v12);
      __int16 v8 = *(void **)a2;
      uint64_t v6 = *(void **)(a2 + 8);
    }
    else
    {
      int v13 = 0;
    }
    __int16 v14 = &v13[8 * v9];
    long long v15 = &v13[8 * v12];
    *(void *)__int16 v14 = v4;
    CFRange v7 = v14 + 8;
    while (v6 != v8)
    {
      uint64_t v16 = *--v6;
      *((void *)v14 - 1) = v16;
      v14 -= 8;
    }
    *(void *)a2 = v14;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v15;
    if (v8) {
      operator delete(v8);
    }
  }
  else
  {
    *uint64_t v6 = v3;
    CFRange v7 = v6 + 1;
  }
  *(void *)(a2 + 8) = v7;
}

double sub_100306BF8@<D0>(const __CFArray *a1@<X0>, uint64_t a2@<X8>)
{
  long long v5 = 0uLL;
  uint64_t v6 = 0;
  v7.length = CFArrayGetCount(a1);
  v7.location = 0;
  CFArrayApplyFunction(a1, v7, (CFArrayApplierFunction)sub_100306C80, &v5);
  double result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(void *)(a2 + 16) = v6;
  return result;
}

void sub_100306C64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100306C80(const void *a1, uint64_t a2)
{
  sub_100218858(a1);
  uint64_t v4 = v3;
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 8);
  if ((unint64_t)v6 >= v5)
  {
    __int16 v8 = *(void **)a2;
    uint64_t v9 = ((uint64_t)v6 - *(void *)a2) >> 3;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 61) {
      sub_1001D7FD4();
    }
    uint64_t v11 = v5 - (void)v8;
    if (v11 >> 2 > v10) {
      unint64_t v10 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      int v13 = (char *)sub_1000DA54C(a2 + 16, v12);
      __int16 v8 = *(void **)a2;
      uint64_t v6 = *(void **)(a2 + 8);
    }
    else
    {
      int v13 = 0;
    }
    __int16 v14 = &v13[8 * v9];
    long long v15 = &v13[8 * v12];
    *(void *)__int16 v14 = v4;
    CFRange v7 = v14 + 8;
    while (v6 != v8)
    {
      uint64_t v16 = *--v6;
      *((void *)v14 - 1) = v16;
      v14 -= 8;
    }
    *(void *)a2 = v14;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v15;
    if (v8) {
      operator delete(v8);
    }
  }
  else
  {
    *uint64_t v6 = v3;
    CFRange v7 = v6 + 1;
  }
  *(void *)(a2 + 8) = v7;
}

double sub_100306D64@<D0>(const __CFArray *a1@<X0>, uint64_t a2@<X8>)
{
  long long v5 = 0uLL;
  uint64_t v6 = 0;
  v7.length = CFArrayGetCount(a1);
  v7.location = 0;
  CFArrayApplyFunction(a1, v7, (CFArrayApplierFunction)sub_100306DEC, &v5);
  double result = *(double *)&v5;
  *(_OWORD *)a2 = v5;
  *(void *)(a2 + 16) = v6;
  return result;
}

void sub_100306DD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100306DEC(const void *a1, uint64_t a2)
{
  sub_100218858(a1);
  uint64_t v4 = v3;
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 8);
  if ((unint64_t)v6 >= v5)
  {
    __int16 v8 = *(void **)a2;
    uint64_t v9 = ((uint64_t)v6 - *(void *)a2) >> 3;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 61) {
      sub_1001D7FD4();
    }
    uint64_t v11 = v5 - (void)v8;
    if (v11 >> 2 > v10) {
      unint64_t v10 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      int v13 = (char *)sub_1000DA54C(a2 + 16, v12);
      __int16 v8 = *(void **)a2;
      uint64_t v6 = *(void **)(a2 + 8);
    }
    else
    {
      int v13 = 0;
    }
    __int16 v14 = &v13[8 * v9];
    long long v15 = &v13[8 * v12];
    *(void *)__int16 v14 = v4;
    CFRange v7 = v14 + 8;
    while (v6 != v8)
    {
      uint64_t v16 = *--v6;
      *((void *)v14 - 1) = v16;
      v14 -= 8;
    }
    *(void *)a2 = v14;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v15;
    if (v8) {
      operator delete(v8);
    }
  }
  else
  {
    *uint64_t v6 = v3;
    CFRange v7 = v6 + 1;
  }
  *(void *)(a2 + 8) = v7;
}

uint64_t sub_100306ED0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 64) && *(unsigned char *)(a1 + 40) && *(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

uint64_t sub_100306F14(uint64_t a1)
{
  sub_100306F50(a1, *(void **)(a1 + 16));
  long long v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_100306F50(uint64_t a1, void *a2)
{
  if (a2)
  {
    long long v2 = a2;
    do
    {
      uint64_t v3 = (void *)*v2;
      sub_100306F94((uint64_t)(v2 + 2));
      operator delete(v2);
      long long v2 = v3;
    }
    while (v3);
  }
}

void sub_100306F94(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 64) && *(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    long long v2 = *(void **)a1;
    operator delete(v2);
  }
}

unsigned __int8 *sub_100306FF4(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4, long long *a5)
{
  unint64_t v10 = (void *)(a1 + 24);
  unint64_t v11 = sub_100103388(a1 + 24, (uint64_t)a2);
  unint64_t v12 = v11;
  unint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    unint64_t v15 = v14.u32[0];
    if (v14.u32[0] > 1uLL)
    {
      unint64_t v5 = v11;
      if (v11 >= v13) {
        unint64_t v5 = v11 % v13;
      }
    }
    else
    {
      unint64_t v5 = (v13 - 1) & v11;
    }
    uint64_t v16 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v5);
    if (v16)
    {
      for (uint64_t i = *v16; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v18 = *((void *)i + 1);
        if (v18 == v12)
        {
          if (sub_100103744(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v15 > 1)
          {
            if (v18 >= v13) {
              v18 %= v13;
            }
          }
          else
          {
            v18 &= v13 - 1;
          }
          if (v18 != v5) {
            break;
          }
        }
      }
    }
  }
  sub_100307290(a1, v12, a4, a5, (uint64_t)v28);
  float v19 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v20 = *(float *)(a1 + 32);
  if (!v13 || (float)(v20 * (float)v13) < v19)
  {
    BOOL v21 = 1;
    if (v13 >= 3) {
      BOOL v21 = (v13 & (v13 - 1)) != 0;
    }
    unint64_t v22 = v21 | (2 * v13);
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      size_t v24 = v23;
    }
    else {
      size_t v24 = v22;
    }
    sub_100100330(a1, v24);
    unint64_t v13 = *(void *)(a1 + 8);
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v12 >= v13) {
        unint64_t v5 = v12 % v13;
      }
      else {
        unint64_t v5 = v12;
      }
    }
    else
    {
      unint64_t v5 = (v13 - 1) & v12;
    }
  }
  CFStringRef v25 = *(void **)(*(void *)a1 + 8 * v5);
  if (v25)
  {
    *(void *)v28[0] = *v25;
    void *v25 = v28[0];
  }
  else
  {
    *(void *)v28[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v28[0];
    *(void *)(*(void *)a1 + 8 * v5) = a1 + 16;
    if (*(void *)v28[0])
    {
      unint64_t v26 = *(void *)(*(void *)v28[0] + 8);
      if ((v13 & (v13 - 1)) != 0)
      {
        if (v26 >= v13) {
          v26 %= v13;
        }
      }
      else
      {
        v26 &= v13 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v26) = v28[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v28[0];
  v28[0] = 0;
  ++*v10;
  sub_100307428((uint64_t)v28, 0);
  return i;
}

void sub_100307278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_100307428((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

char *sub_100307290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long **a3@<X3>, long long *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9 = a1 + 16;
  unint64_t v10 = operator new(0x68uLL);
  *(void *)a5 = v10;
  *(void *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 16) = 0;
  *(void *)unint64_t v10 = 0;
  *((void *)v10 + 1) = a2;
  unint64_t v11 = *a3;
  long long v13 = *a4;
  uint64_t v14 = *((void *)a4 + 2);
  unint64_t v15 = v11;
  double result = sub_10030732C((char *)v10 + 16, &v15, (long long **)&v13);
  *(unsigned char *)(a5 + 16) = 1;
  return result;
}

void sub_100307314(_Unwind_Exception *a1)
{
  sub_100307428(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_10030732C(char *__dst, long long **a2, long long **a3)
{
  unint64_t v5 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    sub_1000DC48C(__dst, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    *((void *)__dst + 2) = *((void *)v5 + 2);
    *(_OWORD *)__dst = v6;
  }
  long long v10 = **a3;
  sub_1000E3A78((uint64_t)__p, *a3 + 1);
  uint64_t v7 = *(void *)a3[1];
  uint64_t v8 = *(void *)a3[2];
  *(_OWORD *)(__dst + 24) = v10;
  sub_1000E3A78((uint64_t)(__dst + 40), (long long *)__p);
  *((void *)__dst + 9) = v7;
  *((void *)__dst + 10) = v8;
  if (v13 && v12 < 0) {
    operator delete(__p[0]);
  }
  return __dst;
}

void sub_1003073EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a17 && a16 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v17 + 23) < 0) {
    operator delete(*(void **)v17);
  }
  _Unwind_Resume(exception_object);
}

void sub_100307428(uint64_t a1, uint64_t a2)
{
  long long v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_100306F94((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

double sub_100307480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = a3;
  return result;
}

id sub_100307498(void *a1)
{
  if (a1[1]) {
    sub_101A5BC6C();
  }
  a1[1] = [objc_alloc((Class)BMBiomeScheduler) initWithIdentifier:@"com.apple.locationd.milo.nowplaying" targetQueue:a1[5] waking:0];
  id v2 = [[[[[(id)BiomeLibrary() Media] NowPlaying] DSLPublisher] subscribeOn:a1[1]];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  void v6[2] = sub_100307794;
  v6[3] = &unk_1022A5908;
  v6[4] = a1;
  a1[2] = [v2 sinkWithCompletion:&stru_1022A58E8 receiveInput:v6];
  if (a1[3]) {
    sub_101A5BAE8();
  }
  a1[3] = [objc_alloc((Class)BMBiomeScheduler) initWithIdentifier:@"com.apple.locationd.milo.appinfocus" targetQueue:a1[5] waking:0];
  id v3 = [[[objc_msgSend(objc_msgSend(objc_msgSend(objc_msgSend((id)BiomeLibrary(), "App"), "InFocus"), "DSLPublisher"), "subscribeOn:", a1[3])
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  _DWORD v5[2] = sub_100307B44;
  v5[3] = &unk_1022A5908;
  v5[4] = a1;
  id result = [v3 sinkWithCompletion:&stru_1022A5928 receiveInput:v5];
  a1[4] = result;
  return result;
}

void sub_10030760C(id a1, BPSCompletion *a2)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5948);
  }
  id v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "MiLo registration on NowPlaying completed", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5948);
    }
    id v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationBiomeMonitor::startMonitoringBiomeEvents()_block_invoke", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
}

void sub_100307794(uint64_t a1, void *a2)
{
  id v3 = *(uint64_t **)(a1 + 32);
  [a2 eventBody];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v4 = *v3;
    id v5 = [a2 eventBody];
    long long v6 = *(void (**)(uint64_t, id))(*(void *)v4 + 16);
    v6(v4, v5);
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5948);
    }
    uint64_t v7 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "received biome event data doesn't match event type BMNowPlayingEvent", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5948);
      }
      uint64_t v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationBiomeMonitor::startMonitoringBiomeEvents()_block_invoke", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
  }
}

void sub_1003079BC(id a1, BPSCompletion *a2)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5948);
  }
  id v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "MiLo registration on App InFocus completed", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5948);
    }
    id v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationBiomeMonitor::startMonitoringBiomeEvents()_block_invoke", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
}

void sub_100307B44(uint64_t a1, void *a2)
{
  id v3 = *(uint64_t **)(a1 + 32);
  [a2 eventBody];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v4 = *v3;
    id v5 = [a2 eventBody];
    long long v6 = *(void (**)(uint64_t, id))(*(void *)v4 + 24);
    v6(v4, v5);
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5948);
    }
    uint64_t v7 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "received biome event data doesn't match event type BMAppInFocus", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5948);
      }
      uint64_t v8 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationBiomeMonitor::startMonitoringBiomeEvents()_block_invoke", "%s\n", v8);
      if (v8 != (char *)buf) {
        free(v8);
      }
    }
  }
}

void sub_100307D6C(id *a1)
{
  a1[1] = 0;
  [a1[2] cancel];

  a1[2] = 0;
  a1[3] = 0;
  [a1[4] cancel];

  a1[4] = 0;
}

void sub_100307DCC(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_100307DFC(uint64_t a1)
{
  *(_DWORD *)a1 = 0x1000000;
  *(_WORD *)(a1 + 4) = 0;
  sub_100134750((void *)(a1 + 8), "unknown");
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  *(_DWORD *)(a1 + 60) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 68) = 16777473;
  *(unsigned char *)(a1 + 72) = 1;
  return a1;
}

void sub_100307E60(uint64_t a1, char a2)
{
  if (*(unsigned char *)(a1 + 4))
  {
    if (*(unsigned __int8 *)(a1 + 4) - 1 < 2)
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      uint64_t v4 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_FAULT))
      {
        sub_100275744(*(unsigned char *)(a1 + 4), __p);
        int v5 = v45;
        long long v6 = (void **)__p[0];
        sub_100275744(a2, v61);
        uint64_t v7 = __p;
        if (v5 < 0) {
          uint64_t v7 = v6;
        }
        if (v64 >= 0) {
          uint64_t v8 = v61;
        }
        else {
          uint64_t v8 = *(unsigned char **)v61;
        }
        *(_DWORD *)uint64_t buf = 68290051;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v51 = 2082;
        int v52 = "";
        __int16 v53 = 2082;
        long long v54 = v7;
        __int16 v55 = 2082;
        uint64_t v56 = v8;
        __int16 v57 = 2082;
        std::string v58 = "assert";
        __int16 v59 = 2081;
        char v60 = "false";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Can't set new activity\", \"currentActivity\":%{public, location:escape_only}s, \"providedNextActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x3Au);
        if (v64 < 0) {
          operator delete(*(void **)v61);
        }
        if (v45 < 0) {
          operator delete(__p[0]);
        }
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5DC0);
        }
      }
      uint64_t v9 = qword_102419458;
      if (os_signpost_enabled((os_log_t)qword_102419458))
      {
        sub_100275744(*(unsigned char *)(a1 + 4), __p);
        int v10 = v45;
        unint64_t v11 = (void **)__p[0];
        sub_100275744(a2, v61);
        char v12 = __p;
        if (v10 < 0) {
          char v12 = v11;
        }
        if (v64 >= 0) {
          char v13 = v61;
        }
        else {
          char v13 = *(unsigned char **)v61;
        }
        *(_DWORD *)uint64_t buf = 68290051;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v51 = 2082;
        int v52 = "";
        __int16 v53 = 2082;
        long long v54 = v12;
        __int16 v55 = 2082;
        uint64_t v56 = v13;
        __int16 v57 = 2082;
        std::string v58 = "assert";
        __int16 v59 = 2081;
        char v60 = "false";
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v9, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Can't set new activity", "{\"msg%{public}.0s\":\"Can't set new activity\", \"currentActivity\":%{public, location:escape_only}s, \"providedNextActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x3Au);
        if (v64 < 0) {
          operator delete(*(void **)v61);
        }
        if (v45 < 0) {
          operator delete(__p[0]);
        }
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5DC0);
        }
      }
      uint64_t v14 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
      {
        sub_100275744(*(unsigned char *)(a1 + 4), __p);
        int v15 = v45;
        uint64_t v16 = (void **)__p[0];
        sub_100275744(a2, v61);
        uint64_t v17 = __p;
        if (v15 < 0) {
          uint64_t v17 = v16;
        }
        if (v64 >= 0) {
          unint64_t v18 = v61;
        }
        else {
          unint64_t v18 = *(unsigned char **)v61;
        }
        *(_DWORD *)uint64_t buf = 68290051;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v51 = 2082;
        int v52 = "";
        __int16 v53 = 2082;
        long long v54 = v17;
        __int16 v55 = 2082;
        uint64_t v56 = v18;
        __int16 v57 = 2082;
        std::string v58 = "assert";
        __int16 v59 = 2081;
        char v60 = "false";
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Can't set new activity\", \"currentActivity\":%{public, location:escape_only}s, \"providedNextActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x3Au);
        if (v64 < 0) {
          operator delete(*(void **)v61);
        }
        if (v45 < 0) {
          operator delete(__p[0]);
        }
      }
      sub_101A5BE28();
      goto LABEL_105;
    }
  }
  else if ((a2 - 3) <= 0xFDu)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    unint64_t v29 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_FAULT))
    {
      sub_100275744(*(unsigned char *)(a1 + 4), __p);
      int v30 = v45;
      uint64_t v31 = (void **)__p[0];
      sub_100275744(a2, v61);
      uint64_t v32 = __p;
      if (v30 < 0) {
        uint64_t v32 = v31;
      }
      if (v64 >= 0) {
        char v33 = v61;
      }
      else {
        char v33 = *(unsigned char **)v61;
      }
      *(_DWORD *)uint64_t buf = 68290051;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v51 = 2082;
      int v52 = "";
      __int16 v53 = 2082;
      long long v54 = v32;
      __int16 v55 = 2082;
      uint64_t v56 = v33;
      __int16 v57 = 2082;
      std::string v58 = "assert";
      __int16 v59 = 2081;
      char v60 = "scanActivity == CLMicroLocationUtils::ScanActivity::Localizing || scanActivity == CLMicroLocationUtils::Scan"
            "Activity::Recording";
      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Can't set new activity\", \"currentActivity\":%{public, location:escape_only}s, \"providedNextActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x3Au);
      if (v64 < 0) {
        operator delete(*(void **)v61);
      }
      if (v45 < 0) {
        operator delete(__p[0]);
      }
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
    }
    double v34 = qword_102419458;
    if (os_signpost_enabled((os_log_t)qword_102419458))
    {
      sub_100275744(*(unsigned char *)(a1 + 4), __p);
      int v35 = v45;
      int v36 = (void **)__p[0];
      sub_100275744(a2, v61);
      uint64_t v37 = __p;
      if (v35 < 0) {
        uint64_t v37 = v36;
      }
      if (v64 >= 0) {
        uint64_t v38 = v61;
      }
      else {
        uint64_t v38 = *(unsigned char **)v61;
      }
      *(_DWORD *)uint64_t buf = 68290051;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v51 = 2082;
      int v52 = "";
      __int16 v53 = 2082;
      long long v54 = v37;
      __int16 v55 = 2082;
      uint64_t v56 = v38;
      __int16 v57 = 2082;
      std::string v58 = "assert";
      __int16 v59 = 2081;
      char v60 = "scanActivity == CLMicroLocationUtils::ScanActivity::Localizing || scanActivity == CLMicroLocationUtils::Scan"
            "Activity::Recording";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v34, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Can't set new activity", "{\"msg%{public}.0s\":\"Can't set new activity\", \"currentActivity\":%{public, location:escape_only}s, \"providedNextActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x3Au);
      if (v64 < 0) {
        operator delete(*(void **)v61);
      }
      if (v45 < 0) {
        operator delete(__p[0]);
      }
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
    }
    uint64_t v39 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
    {
      sub_100275744(*(unsigned char *)(a1 + 4), __p);
      int v40 = v45;
      id v41 = (void **)__p[0];
      sub_100275744(a2, v61);
      long long v42 = __p;
      if (v40 < 0) {
        long long v42 = v41;
      }
      if (v64 >= 0) {
        long long v43 = v61;
      }
      else {
        long long v43 = *(unsigned char **)v61;
      }
      *(_DWORD *)uint64_t buf = 68290051;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v51 = 2082;
      int v52 = "";
      __int16 v53 = 2082;
      long long v54 = v42;
      __int16 v55 = 2082;
      uint64_t v56 = v43;
      __int16 v57 = 2082;
      std::string v58 = "assert";
      __int16 v59 = 2081;
      char v60 = "scanActivity == CLMicroLocationUtils::ScanActivity::Localizing || scanActivity == CLMicroLocationUtils::Scan"
            "Activity::Recording";
      _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Can't set new activity\", \"currentActivity\":%{public, location:escape_only}s, \"providedNextActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x3Au);
      if (v64 < 0) {
        operator delete(*(void **)v61);
      }
      if (v45 < 0) {
        operator delete(__p[0]);
      }
    }
    sub_101A5BDF0();
LABEL_105:
    __break(1u);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  float v19 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    sub_100275744(*(unsigned char *)(a1 + 4), buf);
    int v20 = SBYTE3(v54);
    BOOL v21 = *(uint8_t **)buf;
    sub_100275744(a2, __p);
    unint64_t v22 = buf;
    if (v20 < 0) {
      unint64_t v22 = v21;
    }
    if (v45 >= 0) {
      unint64_t v23 = __p;
    }
    else {
      unint64_t v23 = (void **)__p[0];
    }
    *(_DWORD *)__int16 v61 = 136446466;
    *(void *)&v61[4] = v22;
    __int16 v62 = 2082;
    __int16 v63 = v23;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "Advanced from %{public}s to %{public}s", v61, 0x16u);
    if (v45 < 0) {
      operator delete(__p[0]);
    }
    if (SBYTE3(v54) < 0) {
      operator delete(*(void **)buf);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    sub_100275744(*(unsigned char *)(a1 + 4), __p);
    int v24 = v45;
    CFStringRef v25 = (void **)__p[0];
    sub_100275744(a2, v61);
    unint64_t v26 = __p;
    if (v24 < 0) {
      unint64_t v26 = v25;
    }
    if (v64 >= 0) {
      char v27 = v61;
    }
    else {
      char v27 = *(unsigned char **)v61;
    }
    int v46 = 136446466;
    id v47 = v26;
    __int16 v48 = 2082;
    uint64_t v49 = v27;
    uint64_t v28 = (char *)_os_log_send_and_compose_impl();
    if (v64 < 0) {
      operator delete(*(void **)v61);
    }
    if (v45 < 0) {
      operator delete(__p[0]);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::State::setScanActivity(CLMicroLocationUtils::ScanActivity)", "%s\n", v28);
    if (v28 != (char *)buf) {
      free(v28);
    }
  }
  *(unsigned char *)(a1 + 4) = a2;
}

void sub_1003087E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100308830(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 4))
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    char v12 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_FAULT))
    {
      sub_100275744(*(unsigned char *)(a1 + 4), __p);
      if (v19 >= 0) {
        char v13 = __p;
      }
      else {
        char v13 = (void **)__p[0];
      }
      *(_DWORD *)uint64_t v28 = 68289795;
      *(_DWORD *)&v28[4] = 0;
      __int16 v29 = 2082;
      int v30 = "";
      __int16 v31 = 2082;
      uint64_t v32 = v13;
      __int16 v33 = 2082;
      double v34 = "assert";
      __int16 v35 = 2081;
      int v36 = "false";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Can't clear current activity as it is already invalid\", \"currentActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v28, 0x30u);
      if (v19 < 0) {
        operator delete(__p[0]);
      }
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
    }
    uint64_t v14 = qword_102419458;
    if (os_signpost_enabled((os_log_t)qword_102419458))
    {
      sub_100275744(*(unsigned char *)(a1 + 4), __p);
      if (v19 >= 0) {
        int v15 = __p;
      }
      else {
        int v15 = (void **)__p[0];
      }
      *(_DWORD *)uint64_t v28 = 68289795;
      *(_DWORD *)&v28[4] = 0;
      __int16 v29 = 2082;
      int v30 = "";
      __int16 v31 = 2082;
      uint64_t v32 = v15;
      __int16 v33 = 2082;
      double v34 = "assert";
      __int16 v35 = 2081;
      int v36 = "false";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Can't clear current activity as it is already invalid", "{\"msg%{public}.0s\":\"Can't clear current activity as it is already invalid\", \"currentActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v28, 0x30u);
      if (v19 < 0) {
        operator delete(__p[0]);
      }
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
    }
    uint64_t v16 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
    {
      sub_100275744(*(unsigned char *)(a1 + 4), __p);
      uint64_t v17 = v19 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)uint64_t v28 = 68289795;
      *(_DWORD *)&v28[4] = 0;
      __int16 v29 = 2082;
      int v30 = "";
      __int16 v31 = 2082;
      uint64_t v32 = v17;
      __int16 v33 = 2082;
      double v34 = "assert";
      __int16 v35 = 2081;
      int v36 = "false";
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Can't clear current activity as it is already invalid\", \"currentActivity\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", v28, 0x30u);
      if (v19 < 0) {
        operator delete(__p[0]);
      }
    }
    abort_report_np();
    __break(1u);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  id v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    sub_100275744(*(unsigned char *)(a1 + 4), v28);
    int v3 = SBYTE3(v32);
    uint64_t v4 = *(uint8_t **)v28;
    sub_100275744(0, __p);
    int v5 = v28;
    if (v3 < 0) {
      int v5 = v4;
    }
    if (v19 >= 0) {
      long long v6 = __p;
    }
    else {
      long long v6 = (void **)__p[0];
    }
    *(_DWORD *)uint64_t buf = 136446466;
    *(void *)&uint8_t buf[4] = v5;
    __int16 v21 = 2082;
    unint64_t v22 = v6;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Reversed from %{public}s to %{public}s", buf, 0x16u);
    if (v19 < 0) {
      operator delete(__p[0]);
    }
    if (SBYTE3(v32) < 0) {
      operator delete(*(void **)v28);
    }
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(v28, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    sub_100275744(*(unsigned char *)(a1 + 4), __p);
    int v7 = v19;
    uint64_t v8 = (void **)__p[0];
    sub_100275744(0, buf);
    uint64_t v9 = __p;
    if (v7 < 0) {
      uint64_t v9 = v8;
    }
    if (v23 >= 0) {
      int v10 = buf;
    }
    else {
      int v10 = *(unsigned char **)buf;
    }
    int v24 = 136446466;
    CFStringRef v25 = v9;
    __int16 v26 = 2082;
    char v27 = v10;
    unint64_t v11 = (char *)_os_log_send_and_compose_impl();
    if (v23 < 0) {
      operator delete(*(void **)buf);
    }
    if (v19 < 0) {
      operator delete(__p[0]);
    }
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::State::clearScanActivity()", "%s\n", v11);
    if (v11 != (char *)v28) {
      free(v11);
    }
  }
  *(unsigned char *)(a1 + 4) = 0;
}

void sub_100308D94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100308DCC(uint64_t a1, int a2)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  uint64_t v4 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = "not running";
    v6[0] = 68289282;
    v6[1] = 0;
    __int16 v7 = 2082;
    uint64_t v8 = "";
    if (a2) {
      int v5 = "running";
    }
    __int16 v9 = 2082;
    int v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Rapport, setRapportSessionRunning\", \"session set to\":%{public, location:escape_only}s}", (uint8_t *)v6, 0x1Cu);
  }
  *(unsigned char *)(a1 + 5) = a2;
}

void sub_100308ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = off_1022A5978;
  *(void *)(a1 + 8) = off_1022A5B18;
  *(void *)(a1 + 16) = off_1022A5B90;
  *(void *)(a1 + 24) = off_1022A5BE0;
  *(void *)(a1 + 32) = off_1022A5C50;
  *(void *)(a1 + 40) = off_1022A5CA0;
  sub_100307DFC(a1 + 48);
  *(void *)(a1 + 128) = a4;
  *(unsigned char *)(a1 + 576) = 0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(unsigned char *)(a1 + 192) = 0;
  sub_1002FCB48(a1 + 584, a4);
  sub_1002EA200(a1 + 632, a1, *(void *)(a1 + 128));
}

void sub_1003091AC()
{
}

void sub_10030927C(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 48);
  sub_1000C7F88(buf);
  LOBYTE(v25[0]) = 0;
  CFStringRef v3 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsEnabled", 0x8000100u, kCFAllocatorNull);
  int v4 = sub_1000D29FC(*(uint64_t *)buf, (uint64_t)v3, (BOOL *)v25);
  CFRelease(v3);
  int v5 = LOBYTE(v25[0]);
  if (v36) {
    sub_1000DB0A0(v36);
  }
  if (v5) {
    int v6 = v4;
  }
  else {
    int v6 = 0;
  }
  int v7 = *(unsigned __int8 *)(a1 + 49);
  int v8 = *(unsigned __int8 *)(a1 + 50);
  int v9 = *(unsigned __int8 *)(a1 + 51);
  int v10 = *(unsigned __int8 *)(a1 + 118);
  if (v6 != 1 || v7 == 0 || v8 == 0)
  {
    int v13 = 0;
  }
  else
  {
    if (*(unsigned char *)(a1 + 51)) {
      BOOL v14 = v10 == 0;
    }
    else {
      BOOL v14 = 0;
    }
    int v13 = v14;
  }
  *(unsigned char *)(a1 + 48) = v13;
  sub_1002CCB94(a1 + 1808, v13, v10 != 0);
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  int v15 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 67241472;
    *(_DWORD *)&uint8_t buf[4] = v6;
    LOWORD(v36) = 1026;
    *(_DWORD *)((char *)&v36 + 2) = v7;
    HIWORD(v36) = 1026;
    int v37 = v8;
    __int16 v38 = 1026;
    int v39 = v9;
    __int16 v40 = 1026;
    int v41 = v10;
    __int16 v42 = 1026;
    int v43 = v13;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "Enabled state: microlocations defaults enabled: %{public}d; location services enabled: %{public}d; significant loc"
      "ations enabled: %{public}d; platform supported %{public}d; LowPowerMode %{public}d; overall enabled: %{public}d",
      buf,
      0x26u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    v25[0] = 67241472;
    v25[1] = v6;
    __int16 v26 = 1026;
    int v27 = v7;
    __int16 v28 = 1026;
    int v29 = v8;
    __int16 v30 = 1026;
    *(_DWORD *)__int16 v31 = v9;
    *(_WORD *)&uint8_t v31[4] = 1026;
    int v32 = v10;
    __int16 v33 = 1026;
    int v34 = v13;
    __int16 v21 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::updateEnabled()", "%s\n", v21);
    if (v21 != (char *)buf) {
      free(v21);
    }
  }
  if ((v13 & 1) != 0 || !v2)
  {
    if (!v2 && v13)
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      unint64_t v18 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "MicroLocations are now re-enabled. Clients should begin getting notifications again", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5DC0);
        }
        LOWORD(v25[0]) = 0;
        unint64_t v22 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::updateEnabled()", "%s\n", v22);
        if (v22 != (char *)buf) {
          free(v22);
        }
      }
      sub_100206EC0(*(void *)(a1 + 128));
    }
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    uint64_t v16 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "MicroLocations have been disabled. Clients will no longer get notifications until we are enabled again.", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      LOWORD(v25[0]) = 0;
      uint64_t v17 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::updateEnabled()", "%s\n", v17);
      if (v17 != (char *)buf) {
        free(v17);
      }
    }
  }
  if ((v2 != 0) != v13)
  {
    sub_10023E0C0((uint64_t)v25);
    BYTE2(v27) = v6;
    HIBYTE(v27) = v7;
    LOBYTE(v28) = v8;
    HIBYTE(v28) = v9;
    LOBYTE(v29) = v10;
    *(_DWORD *)&v31[2] |= 0x7Eu;
    BYTE1(v29) = v13;
    int v23 = 0;
    sub_1001EE1F4(&v23);
    *(void *)&long long v24 = sub_1001EC8C4((ssize_t)&v23);
    *((void *)&v24 + 1) = v19;
    double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
    sub_100312074(&v24, (uint64_t)v25, (uint64_t)buf, Current_5);
    (*(void (**)(uint64_t, uint8_t *))(*(void *)a1 + 152))(a1, buf);
    sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v42);
    sub_1001EF3E8((unsigned int *)&v23);
    sub_100269794((wireless_diagnostics::google::protobuf::MessageLite *)v25);
  }
}

void sub_100309878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, uint64_t a12, uint64_t a13, char a14)
{
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)(v14 + 32));
  sub_1001EF3E8(&a11);
  sub_100269794((wireless_diagnostics::google::protobuf::MessageLite *)&a14);
  _Unwind_Resume(a1);
}

void sub_1003098CC(uint64_t a1)
{
  sub_1000C7F88(&v7);
  CFArrayRef v6 = 0;
  CFStringRef v2 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAnchorDeviceModelAllowedList", 0x8000100u, kCFAllocatorNull);
  BOOL v3 = sub_1004D1D1C((uint64_t)v7, v2, (CFTypeRef *)&v6);
  CFRelease(v2);
  if (v3)
  {
    sub_100314AC8(v6, (uint64_t)&v4);
  }
  else
  {
    long long v4 = 0uLL;
    uint64_t v5 = 0;
    sub_100314C98(&v4, &off_1022A3960, &off_1022A3990, 6uLL);
  }
  if (v8) {
    sub_1000DB0A0(v8);
  }
  sub_100314FE8((uint64_t *)(a1 + 2584));
  *(_OWORD *)(a1 + 2584) = v4;
  *(void *)(a1 + 2600) = v5;
  uint64_t v5 = 0;
  long long v4 = 0uLL;
  int v7 = (void **)&v4;
  sub_1000A7B4C(&v7);
}

void sub_1003099C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_1000DB0A0(a14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003099DC(uint64_t a1)
{
  BOOL v3 = (void **)(a1 + 72);
  sub_1002334EC(&v3);
  BOOL v3 = (void **)(a1 + 48);
  sub_1002334EC(&v3);
  sub_1000D7D80(a1 + 8);
  return a1;
}

uint64_t sub_100309A30(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }

  return sub_100314F10(a1);
}

uint64_t sub_100309A74(uint64_t a1)
{
  sub_1003149F8(a1 + 56);
  BOOL v3 = (void **)(a1 + 32);
  sub_100314A44(&v3);
  BOOL v3 = (void **)(a1 + 8);
  sub_100221EA8(&v3);
  return a1;
}

uint64_t sub_100309ACC(uint64_t a1)
{
  *(void *)a1 = off_1022A5978;
  *(void *)(a1 + 8) = off_1022A5B18;
  *(void *)(a1 + 16) = off_1022A5B90;
  *(void *)(a1 + 24) = off_1022A5BE0;
  *(void *)(a1 + 32) = off_1022A5C50;
  *(void *)(a1 + 40) = off_1022A5CA0;
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  CFStringRef v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "CLMicroLocationLogic: DTOR", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    CFArrayRef v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "virtual CLMicroLocationLogic::~CLMicroLocationLogic()", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  sub_100331AC4(a1 + 1520);
  sub_1002EE6E0(a1 + 632);
  uint64_t v3 = *(void *)(a1 + 2552);
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  *(void *)uint64_t buf = a1 + 2584;
  sub_1000A7B4C((void ***)buf);
  sub_1002B7C28(a1 + 2056, v4);
  *(void *)(a1 + 1808) = off_1022A4928;
  sub_1002CDF4C((void *)(a1 + 2000));
  sub_100289BB4(a1 + 1960);
  sub_1000D7D80(a1 + 1872);
  sub_1002CDFF4((uint64_t *)(a1 + 1848));
  *(void *)uint64_t buf = a1 + 1824;
  sub_1000C5954((void ***)buf);
  *(void *)uint64_t buf = a1 + 1688;
  sub_1002334EC((void ***)buf);
  *(void *)uint64_t buf = a1 + 1664;
  sub_1002334EC((void ***)buf);
  sub_1000D7D80(a1 + 1624);
  if (*(char *)(a1 + 1591) < 0) {
    operator delete(*(void **)(a1 + 1568));
  }
  sub_100314F10(a1 + 1520);
  sub_1002EA470(a1 + 632);
  sub_1002FCC08(a1 + 584);
  sub_1003149F8(a1 + 192);
  *(void *)uint64_t buf = a1 + 168;
  sub_100314A44((void ***)buf);
  *(void *)uint64_t buf = a1 + 144;
  sub_100221EA8((void ***)buf);
  if (*(char *)(a1 + 79) < 0) {
    operator delete(*(void **)(a1 + 56));
  }
  return a1;
}

void sub_100309E54(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1001C7F8C(a1);
}

uint64_t sub_100309E64(uint64_t a1)
{
  return sub_100309ACC(a1 - 8);
}

uint64_t sub_100309E6C(uint64_t a1)
{
  return sub_100309ACC(a1 - 16);
}

uint64_t sub_100309E74(uint64_t a1)
{
  return sub_100309ACC(a1 - 24);
}

uint64_t sub_100309E7C(uint64_t a1)
{
  return sub_100309ACC(a1 - 32);
}

uint64_t sub_100309E84(uint64_t a1)
{
  return sub_100309ACC(a1 - 40);
}

void sub_100309E8C(uint64_t a1)
{
  sub_100309ACC(a1);

  operator delete();
}

void sub_100309EC4(uint64_t a1)
{
  sub_100309ACC(a1 - 8);

  operator delete();
}

void sub_100309F00(uint64_t a1)
{
  sub_100309ACC(a1 - 16);

  operator delete();
}

void sub_100309F3C(uint64_t a1)
{
  sub_100309ACC(a1 - 24);

  operator delete();
}

void sub_100309F78(uint64_t a1)
{
  sub_100309ACC(a1 - 32);

  operator delete();
}

void sub_100309FB4(uint64_t a1)
{
  sub_100309ACC(a1 - 40);

  operator delete();
}

uint64_t sub_10030A010(uint64_t a1, uint64_t a2)
{
  return sub_1002F0BEC(a1 + 632, a2);
}

uint64_t sub_10030A018(uint64_t a1, uint64_t a2)
{
  return sub_1002F0CA8(a1 + 632, a2);
}

uint64_t sub_10030A020(uint64_t a1, uint64_t a2)
{
  return sub_1002F0D64(a1 + 632, a2);
}

uint64_t sub_10030A028(uint64_t a1, uint64_t a2)
{
  return sub_1002F0E20(a1 + 632, a2);
}

uint64_t sub_10030A030(uint64_t a1, uint64_t a2)
{
  return sub_1002F0EDC(a1 + 632, a2);
}

id sub_10030A038(uint64_t a1, void *a2)
{
  return sub_1002B7CA8(a1 + 2056, a2);
}

void sub_10030A040(uint64_t a1)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  CFStringRef v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "CLMicroLocationLogic: Settings updated so updating wifi strategies, allowed anchor models, and checking enabled flags", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    uint64_t v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::reloadSettings()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  sub_1002EA4AC(a1 + 632);
  sub_1003098CC(a1);
  sub_10030927C(a1);
}

void sub_10030A1EC(uint64_t a1)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  CFStringRef v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = (void *)(a1 + 56);
    if (*(char *)(a1 + 79) < 0) {
      uint64_t v3 = (void *)*v3;
    }
    int v4 = *(unsigned __int8 *)(a1 + 48);
    uint64_t v5 = (char *)operator new(0x28uLL);
    *(_OWORD *)uint64_t v5 = 0u;
    *((_OWORD *)v5 + 1) = 0u;
    *(void *)(v5 + 29) = 0;
    sub_1001E0650(a1 + 80, v5);
    int v6 = *(unsigned __int8 *)(a1 + 49);
    int v7 = *(unsigned __int8 *)(a1 + 50);
    sub_100275744(*(unsigned char *)(a1 + 52), __p);
    if (v20 >= 0) {
      int v8 = __p;
    }
    else {
      int v8 = (void **)__p[0];
    }
    int v9 = *(_DWORD *)(a1 + 96);
    int v10 = *(_DWORD *)(a1 + 100);
    int v11 = *(unsigned __int8 *)(a1 + 104);
    int v12 = *(unsigned __int8 *)(a1 + 119);
    int v13 = *(unsigned __int8 *)(a1 + 116);
    int v14 = *(_DWORD *)(a1 + 108);
    int v15 = *(_DWORD *)(a1 + 112);
    int v16 = *(unsigned __int8 *)(a1 + 117);
    int v17 = *(unsigned __int8 *)(a1 + 118);
    BOOL v18 = *(unsigned char *)(a1 + 120) == 0;
    *(_DWORD *)uint64_t buf = 68293123;
    __int16 v23 = 2082;
    int v22 = 0;
    long long v24 = "";
    __int16 v25 = 1026;
    int v26 = v4;
    __int16 v27 = 2081;
    __int16 v28 = v3;
    __int16 v29 = 2081;
    __int16 v30 = v5;
    __int16 v31 = 1026;
    int v32 = v6;
    __int16 v33 = 1026;
    int v34 = v7;
    __int16 v35 = 2081;
    int v36 = v8;
    __int16 v37 = 1026;
    int v38 = v9;
    __int16 v39 = 1026;
    int v40 = v10;
    __int16 v41 = 1026;
    int v42 = v11;
    __int16 v43 = 1026;
    int v44 = v12;
    __int16 v45 = 1026;
    int v46 = v13;
    __int16 v47 = 1026;
    int v48 = v14;
    __int16 v49 = 1026;
    int v50 = v15;
    __int16 v51 = 1026;
    int v52 = v16;
    __int16 v53 = 1026;
    int v54 = v17;
    __int16 v55 = 1026;
    BOOL v56 = v18;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationLogic State\", \"enabled\":%{public}hhd, \"LOI Type\":%{private, location:escape_only}s, \"LOI ID\":%{private, location:escape_only}s, \"locationServicesEnabled\":%{public}hhd, \"significantLocationsEnabled\":%{public}hhd, \"ScanActivity\":%{private, location:escape_only}s, \"Localizing Counter\":%{public}d, \"Recording Counter\":%{public}d, \"displayOn\":%{public}hhd, \"isOnLockScreen\":%{public}hhd, \"isWiFiErrorRetryEnabled\":%{public}hhd, \"WiFi Error Retry Counter\":%{public}d, \"WiFi Error Retry Disabled Period Counter\":%{public}d, \"isLowNumberOfObservation\":%{public}hhd, \"isLowPowerMode\":%{public}hhd, \"isBluetoothDisabled\":%{public}hhd}", buf, 0x7Eu);
    if (v20 < 0) {
      operator delete(__p[0]);
    }
    operator delete(v5);
  }
  sub_1002CCA80(a1 + 1808);
}

void sub_10030A420(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10030A440(uint64_t a1)
{
  return a1 + 2584;
}

uint64_t sub_10030A448(uint64_t a1, const std::string *a2, void *a3, void *a4, void *a5)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  int v10 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v11 = a2;
    }
    else {
      int v11 = (const std::string *)a2->__r_.__value_.__r.__words[0];
    }
    v13[0] = 68289282;
    v13[1] = 0;
    __int16 v14 = 2082;
    int v15 = "";
    __int16 v16 = 2082;
    int v17 = v11;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationLogic: client request donate truth label (time window based)\", \"client\":%{public, location:escape_only}s}", (uint8_t *)v13, 0x1Cu);
  }
  return sub_1002FF73C(a1 + 584, a2, a3, a4, a5, a1 + 56);
}

std::string *sub_10030A578@<X0>(const std::string::value_type *a1@<X1>, uint64_t a2@<X8>)
{
  int v9 = 0;
  sub_1001EE1F4(&v9);
  *(void *)__s = sub_1001EC8C4((ssize_t)&v9);
  uint64_t v11 = v4;
  sub_1001EF3E8((unsigned int *)&v9);
  sub_10023D8C8((void *)a2);
  *(_DWORD *)(a2 + 44) |= 4u;
  uint64_t v5 = *(std::string **)(a2 + 16);
  if (v5 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::assign(v5, a1);
  if (!sub_10023E790(1)) {
    __assert_rtn("set_receivedeventactiontype", "microlocation.pb.h", 12856, "::CLMicroLocationProto::ReceivedEventActionType_IsValid(value)");
  }
  int v6 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 12) = 1;
  *(_DWORD *)(a2 + 44) = v6 | 0xA;
  int v7 = *(std::string **)(a2 + 24);
  if (v7 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  return std::string::assign(v7, __s, 0x10uLL);
}

void sub_10030A6D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10)
{
}

uint64_t sub_10030A6FC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 2560) + 112))();
}

uint64_t sub_10030A724(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 2552) + 112))();
}

BOOL sub_10030A74C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5 = (void *)(a1 + 56);
  int v6 = *(unsigned __int8 *)(a1 + 79);
  if (*(char *)(a1 + 79) < 0)
  {
    uint64_t v8 = *(void *)(a1 + 64);
    if (v8 != 6) {
      goto LABEL_35;
    }
    int v7 = (void *)*v5;
  }
  else
  {
    if (v6 == 4) {
      goto LABEL_37;
    }
    int v7 = (void *)(a1 + 56);
    if (v6 != 6) {
      return 0;
    }
  }
  int v9 = *(_DWORD *)v7;
  int v10 = *((unsigned __int16 *)v7 + 2);
  if (v9 == 1953723747 && v10 == 28015)
  {
    int v13 = *((char *)a2 + 23);
    if (v13 < 0)
    {
      if (a2[1] != 4) {
        goto LABEL_11;
      }
      __int16 v14 = (_DWORD *)*a2;
    }
    else
    {
      __int16 v14 = a2;
      if (v13 != 4) {
        goto LABEL_11;
      }
    }
    if (*v14 == 1701670760) {
      return 1;
    }
  }
LABEL_11:
  if ((v6 & 0x80) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 64);
    if (v8 != 6) {
      goto LABEL_35;
    }
    int v12 = (void *)*v5;
LABEL_20:
    int v15 = *(_DWORD *)v12;
    int v16 = *((unsigned __int16 *)v12 + 2);
    if (v15 != 1953723747 || v16 != 28015) {
      goto LABEL_24;
    }
    int v18 = *((char *)a2 + 23);
    if (v18 < 0)
    {
      if (a2[1] == 7)
      {
        uint64_t v19 = (int *)*a2;
        goto LABEL_55;
      }
    }
    else
    {
      uint64_t v19 = (int *)a2;
      if (v18 == 7)
      {
LABEL_55:
        int v24 = *v19;
        int v25 = *(int *)((char *)v19 + 3);
        BOOL v27 = v24 != 1852534389 || v25 != 1853321070;
        if (a5 == 2 && !v27) {
          return 1;
        }
      }
    }
LABEL_24:
    if ((v6 & 0x80) == 0)
    {
      if (v6 != 4) {
        return 0;
      }
      goto LABEL_37;
    }
    uint64_t v8 = *(void *)(a1 + 64);
LABEL_35:
    if (v8 != 4) {
      return 0;
    }
    uint64_t v5 = (void *)*v5;
    goto LABEL_37;
  }
  if (v6 != 4)
  {
    int v12 = (void *)(a1 + 56);
    if (v6 != 6) {
      return 0;
    }
    goto LABEL_20;
  }
LABEL_37:
  if (*(_DWORD *)v5 != 1701670760) {
    return 0;
  }
  int v21 = *((char *)a2 + 23);
  if (v21 < 0)
  {
    if (a2[1] != 7) {
      return 0;
    }
    a2 = (uint64_t *)*a2;
  }
  else if (v21 != 7)
  {
    return 0;
  }
  BOOL v23 = *(_DWORD *)a2 != 1852534389 || *(_DWORD *)((char *)a2 + 3) != 1853321070;
  return a5 == 11 && !v23;
}

void sub_10030A91C(uint64_t a1, uint64_t a2, char a3)
{
  if (*(unsigned char *)(a1 + 48))
  {
    if ((a3 - 3) > 0xFDu)
    {
      sub_1002E83D4(a2, &v8);
      if (*(char *)(a1 + 79) < 0)
      {
        sub_1000DC48C(__p, *(void **)(a1 + 56), *(void *)(a1 + 64));
      }
      else
      {
        *(_OWORD *)long long __p = *(_OWORD *)(a1 + 56);
        uint64_t v5 = *(void *)(a1 + 72);
      }
      long long v6 = v8;
      char v7 = v9;
      sub_1002FCC0C(a1 + 584, (uint64_t)__p);
    }
    sub_101A5C168();
  }
  sub_101A5BFEC();
}

void sub_10030AD20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  sub_10026633C(&a20);
  sub_10024DA38((wireless_diagnostics::google::protobuf::MessageLite *)(v20 - 192));
  _Unwind_Resume(a1);
}

uint64_t sub_10030AD68()
{
  sub_1000C7F88(&v5);
  BOOL v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsLocalizeWithRecordingMeasurements", 0x8000100u, kCFAllocatorNull);
  unsigned int v1 = sub_1000D29FC(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  BOOL v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v2) {
    return v1;
  }
  else {
    return 0;
  }
}

void sub_10030ADF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_10030AE14(uint64_t a1, uint64_t a2, char a3)
{
}

void sub_10030AE1C(uint64_t a1, uint64_t a2, int a3)
{
  sub_1002FE87C((uint64_t *)(a1 + 584), a2);
  if (a3)
  {
    sub_1002331F4(a1 + 1616, &v5);
    if (v6) {
      sub_100221350(a1 + 136, &v5);
    }
  }
}

void sub_10030AEA0(uint64_t a1, uint64_t a2, int a3)
{
}

void sub_10030AEA8(uint64_t a1, uint64_t a2)
{
}

void sub_10030AEB0(uint64_t a1, uint64_t a2)
{
}

void sub_10030AEB8(uint64_t a1, int a2)
{
  sub_1002EA4B4((unsigned char *)(a1 + 632));
  if (a2 == 2)
  {
    v7[0] = 0;
    v7[1] = 0;
    memset(v5, 0, sizeof(v5));
    char v6 = (uint64_t *)v7;
    int v8 = 3;
    int v4 = 3;
    sub_1000EDED4(&v6, &v4, &v4);
    sub_10030AF84(a1, (uint64_t)v5);
    sub_1000F5BB0((uint64_t)&v6, v7[0]);
  }
  else
  {
    sub_10030B334(a1, 2u);
  }
}

void sub_10030AF68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  sub_1000F5BB0(v14, a14);
  _Unwind_Resume(a1);
}

void sub_10030AF84(uint64_t a1, uint64_t a2)
{
  int v4 = [[CLOSTransaction alloc] initWithDescription:"com.apple.locationd.microlocation.stop-recording"];
  sub_1002EB68C(a1 + 632);
  sub_10030C614((unsigned __int8 *)a1);
  if (sub_1002E9B48(a1 + 640))
  {
    *(_DWORD *)uint64_t buf = 0;
    sub_1000EDED4((uint64_t **)(a2 + 24), (int *)buf, buf);
  }
  if (*(_DWORD *)(a2 + 48) == 4)
  {
    sub_10031DCB8((uint64_t *)buf);
    sub_1002FCEB8(a1 + 584, (unint64_t *)buf, a2);
    sub_1000D7D80((uint64_t)&v13);
  }
  if (sub_10030AD68())
  {
    sub_1002331F4(a1 + 1616, &v20);
    __n128 v18 = v20;
    char v19 = v21;
    *(void *)uint64_t buf = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    memset(v10, 0, 24);
    sub_10030BBA4(a1, (uint64_t)&v18, (uint64_t *)buf, (uint64_t *)v10, 0);
    long long __p = 0;
    int v16 = 0;
    uint64_t v17 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    *(void *)uint64_t buf = 0;
    unsigned int v14 = 0;
    if (!v21
      || (__n128 v5 = (uint64_t **)sub_1002CAC98(a1 + 1808), sub_10022097C((void *)(a1 + 136), &v20, v5, (uint64_t)buf), !v21))
    {
      sub_10020D700();
    }
    sub_1002CA930(a1 + 1808, (uint64_t *)buf, v20.n128_i64[0], v20.n128_i64[1]);
    sub_1002FD2EC(a1 + 584, v14, (int **)&__p);
    if (__p)
    {
      int v16 = __p;
      operator delete(__p);
    }
    v10[0] = (void **)buf;
    sub_100314DF4(v10);
  }
  sub_1002FCBAC(a1 + 584);
  *(_DWORD *)(a1 + 100) = 0;
  sub_100308830(a1 + 48);
  if (qword_102419460 != -1) {
    dispatch_once(&qword_102419460, &stru_1022A5DE0);
  }
  char v6 = qword_102419468;
  if (os_log_type_enabled((os_log_t)qword_102419468, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Recording stopped", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419460 != -1) {
      dispatch_once(&qword_102419460, &stru_1022A5DE0);
    }
    LOWORD(v10[0]) = 0;
    char v9 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::stopRecording(RecordingMetaInformation &)", "%s\n", v9);
    if (v9 != (char *)buf) {
      free(v9);
    }
  }
  sub_1002CC330(a1 + 1808, a2);
  sub_10023140C(a1 + 1616, *(_DWORD *)(a2 + 48) != 2, 5u);
  unsigned int v7 = *(_DWORD *)(a2 + 48) - 1;
  if (v7 > 3) {
    int v8 = 0;
  }
  else {
    int v8 = off_1022A5E00[v7];
  }
  (*(void (**)(void, __CFString *))(**(void **)(a1 + 2560) + 64))(*(void *)(a1 + 2560), v8);
}

void sub_10030B304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
}

void sub_10030B334(uint64_t a1, unsigned int a2)
{
  int v4 = [[CLOSTransaction alloc] initWithDescription:"com.apple.locationd.microlocation.stop-localizing"];
  sub_1002EB68C(a1 + 632);
  sub_1002331F4(a1 + 1616, &v35);
  sub_10030C614((unsigned __int8 *)a1);
  __n128 v33 = v35;
  char v34 = v36;
  *(void *)uint64_t buf = 0;
  long long v32 = 0uLL;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  sub_10030BBA4(a1, (uint64_t)&v33, (uint64_t *)buf, &v24, a2);
  long long __p = 0;
  __int16 v29 = 0;
  uint64_t v30 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v24 = 0;
  unsigned int v27 = 0;
  if (!v36) {
    goto LABEL_40;
  }
  __n128 v5 = (uint64_t **)sub_1002CAC98(a1 + 1808);
  sub_10022097C((void *)(a1 + 136), &v35, v5, (uint64_t)&v24);
  sub_1002FD2EC(a1 + 584, v27, (int **)&__p);
  *(_DWORD *)(a1 + 96) = 0;
  sub_100308830(a1 + 48);
  if (qword_102419460 != -1) {
    dispatch_once(&qword_102419460, &stru_1022A5DE0);
  }
  char v6 = qword_102419468;
  if (os_log_type_enabled((os_log_t)qword_102419468, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Localization stopped", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419460 != -1) {
      dispatch_once(&qword_102419460, &stru_1022A5DE0);
    }
    LOWORD(v23[0]) = 0;
    char v21 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::stopLocalizing(LocalizationStopReason)", "%s\n", v21);
    if (v21 != (char *)buf) {
      free(v21);
    }
  }
  BOOL v7 = sub_100231B0C(a1 + 1616);
  int v8 = sub_100231B2C(a1 + 1616);
  if (sub_10030C900(a1, (uint64_t)&v24, v7, v8))
  {
    if (sub_100231B34(a1 + 1616) && !sub_100275920(a2))
    {
      sub_1000C7F88(buf);
      v23[0] = 0;
      CFStringRef v10 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsLocalizationRescheduleDelay", 0x8000100u, kCFAllocatorNull);
      int v11 = sub_1000A6A10(*(uint64_t *)buf, (uint64_t)v10, v23);
      CFRelease(v10);
      double v12 = *(double *)v23;
      if ((void)v32) {
        sub_1000DB0A0((std::__shared_weak_count *)v32);
      }
      double v13 = *(double *)(a1 + 1720);
      double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
      double v15 = 5.0;
      if (v11) {
        double v15 = v12;
      }
      double v16 = (v15 - (Current_5 - v13)) * 1000.0;
      BOOL v17 = Current_5 - v13 < v15;
      double v18 = 0.0;
      if (v17) {
        double v18 = v16;
      }
      (*(void (**)(void, uint64_t))(**(void **)(a1 + 2560) + 128))(*(void *)(a1 + 2560), (uint64_t)v18);
      sub_10030A578("InternalClientLogic", (uint64_t)v23);
      sub_1002A5850((uint64_t)v23, 0, 0, 3u, (uint64_t)buf, Current_5);
      sub_100230044(a1 + 1616, (uint64_t)buf, 1);
      sub_10026633C(buf);
      sub_10024DA38((wireless_diagnostics::google::protobuf::MessageLite *)v23);
    }
    else
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      char v9 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        LOWORD(v32) = 2082;
        *(void *)((char *)&v32 + 2) = "";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"decided to reschedule a localization but not rescheduling because not spectating\"}", buf, 0x12u);
      }
    }
  }
  sub_1002FCBAC(a1 + 584);
  if (!v36) {
LABEL_40:
  }
    sub_10020D700();
  sub_1002CA930(a1 + 1808, &v24, v35.n128_i64[0], v35.n128_i64[1]);
  BOOL v19 = sub_100275920(a2);
  if ((sub_10023140C(a1 + 1616, !v19, 5u) & 1) == 0)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    __n128 v20 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEFAULT, "Cannot serve queued record requests because we're no longer enabled", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      LOWORD(v23[0]) = 0;
      int v22 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::stopLocalizing(LocalizationStopReason)", "%s\n", v22);
      if (v22 != (char *)buf) {
        free(v22);
      }
    }
    (*(void (**)(void, const __CFString *))(**(void **)(a1 + 2560) + 64))(*(void *)(a1 + 2560), @"requestMicroLocationRecordingScan failed internally, MicroLocation is not enabled");
  }

  if (__p)
  {
    __int16 v29 = __p;
    operator delete(__p);
  }
  *(void *)uint64_t buf = &v24;
  sub_100314DF4((void ***)buf);
}

void sub_10030B96C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_10030D160((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10030B9E4(uint64_t a1, int a2)
{
}

void sub_10030B9EC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  sub_1002331F4(a1 + 1616, &v14);
  if (v15)
  {
    __n128 v12 = v14;
    char v13 = v15;
    sub_10030BBA4(a1, (uint64_t)&v12, a2, a3, 0);
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    char v6 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
    {
      int v8 = 68289026;
      int v9 = 0;
      __int16 v10 = 2082;
      int v11 = "";
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"updateLocalizationConfidenceAndReasonsIfNeeded, no current localization\"}", (uint8_t *)&v8, 0x12u);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
    }
    BOOL v7 = qword_102419458;
    if (os_signpost_enabled((os_log_t)qword_102419458))
    {
      int v8 = 68289026;
      int v9 = 0;
      __int16 v10 = 2082;
      int v11 = "";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "updateLocalizationConfidenceAndReasonsIfNeeded, no current localization", "{\"msg%{public}.0s\":\"updateLocalizationConfidenceAndReasonsIfNeeded, no current localization\"}", (uint8_t *)&v8, 0x12u);
    }
  }
}

void sub_10030BBA4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, unsigned int a5)
{
  if (*(unsigned char *)(a2 + 16))
  {
    long long __p = 0;
    v85 = 0;
    v86 = 0;
    v81 = 0;
    v82 = 0;
    v83 = 0;
    if (sub_1002E9B48(a1 + 640))
    {
      uint64_t v10 = (v85 - (unsigned char *)__p) >> 2;
      unint64_t v11 = v10 + 1;
      if ((unint64_t)(v10 + 1) >> 62) {
        sub_1001D7FD4();
      }
      uint64_t v12 = v86 - (unsigned char *)__p;
      if ((v86 - (unsigned char *)__p) >> 1 > v11) {
        unint64_t v11 = v12 >> 1;
      }
      if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v13 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v13 = v11;
      }
      if (v13) {
        __n128 v14 = (char *)sub_10017EA34((uint64_t)&v86, v13);
      }
      else {
        __n128 v14 = 0;
      }
      char v15 = &v14[4 * v10];
      *(_DWORD *)char v15 = 0;
      long long __p = v15;
      v86 = &v14[4 * v13];
      v85 = v15 + 4;
      double v16 = v82;
      if (v82 >= v83)
      {
        double v18 = (char *)v81;
        uint64_t v19 = (v82 - (unsigned char *)v81) >> 2;
        unint64_t v20 = v19 + 1;
        if ((unint64_t)(v19 + 1) >> 62) {
          sub_1001D7FD4();
        }
        uint64_t v21 = v83 - (unsigned char *)v81;
        if ((v83 - (unsigned char *)v81) >> 1 > v20) {
          unint64_t v20 = v21 >> 1;
        }
        if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v22 = v20;
        }
        if (v22)
        {
          BOOL v23 = (char *)sub_10017EA34((uint64_t)&v83, v22);
          double v18 = (char *)v81;
          double v16 = v82;
        }
        else
        {
          BOOL v23 = 0;
        }
        uint64_t v24 = &v23[4 * v19];
        uint64_t v25 = &v23[4 * v22];
        *(_DWORD *)uint64_t v24 = 0;
        BOOL v17 = v24 + 4;
        while (v16 != v18)
        {
          int v26 = *((_DWORD *)v16 - 1);
          v16 -= 4;
          *((_DWORD *)v24 - 1) = v26;
          v24 -= 4;
        }
        v81 = v24;
        v82 = v17;
        v83 = v25;
        if (v18) {
          operator delete(v18);
        }
      }
      else
      {
        *(_DWORD *)v82 = 0;
        BOOL v17 = v16 + 4;
      }
      v82 = v17;
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      unsigned int v27 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        int v88 = 0;
        __int16 v89 = 2082;
        int v90 = "";
        _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"update confidence of localization request due to wifi scan error\"}", buf, 0x12u);
      }
    }
    if (a5)
    {
      if ((sub_1002758F8(a5) & 0xFF00000000) != 0)
      {
        __int16 v28 = v85;
        if (v85 >= v86)
        {
          long long v32 = (char *)__p;
          uint64_t v33 = (v85 - (unsigned char *)__p) >> 2;
          unint64_t v34 = v33 + 1;
          if ((unint64_t)(v33 + 1) >> 62) {
            sub_1001D7FD4();
          }
          uint64_t v35 = v86 - (unsigned char *)__p;
          if ((v86 - (unsigned char *)__p) >> 1 > v34) {
            unint64_t v34 = v35 >> 1;
          }
          if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v36 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v36 = v34;
          }
          if (v36)
          {
            __int16 v37 = (char *)sub_10017EA34((uint64_t)&v86, v36);
            long long v32 = (char *)__p;
            __int16 v28 = v85;
          }
          else
          {
            __int16 v37 = 0;
          }
          int v38 = &v37[4 * v33];
          __int16 v39 = &v37[4 * v36];
          *(_DWORD *)int v38 = 1;
          __int16 v29 = v38 + 4;
          while (v28 != v32)
          {
            int v40 = *((_DWORD *)v28 - 1);
            v28 -= 4;
            *((_DWORD *)v38 - 1) = v40;
            v38 -= 4;
          }
          long long __p = v38;
          v85 = v29;
          v86 = v39;
          if (v32) {
            operator delete(v32);
          }
        }
        else
        {
          *(_DWORD *)v85 = 1;
          __int16 v29 = v28 + 4;
        }
        v85 = v29;
        unint64_t v41 = sub_1002758F8(a5);
        int v42 = v41;
        if ((v41 & 0xFF00000000) == 0) {
          sub_10020D700();
        }
        __int16 v43 = v82;
        if (v82 >= v83)
        {
          __int16 v45 = (char *)v81;
          uint64_t v46 = (v82 - (unsigned char *)v81) >> 2;
          unint64_t v47 = v46 + 1;
          if ((unint64_t)(v46 + 1) >> 62) {
            sub_1001D7FD4();
          }
          uint64_t v48 = v83 - (unsigned char *)v81;
          if ((v83 - (unsigned char *)v81) >> 1 > v47) {
            unint64_t v47 = v48 >> 1;
          }
          if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v49 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v49 = v47;
          }
          if (v49)
          {
            int v50 = (char *)sub_10017EA34((uint64_t)&v83, v49);
            __int16 v45 = (char *)v81;
            __int16 v43 = v82;
          }
          else
          {
            int v50 = 0;
          }
          __int16 v51 = &v50[4 * v46];
          int v52 = &v50[4 * v49];
          *(_DWORD *)__int16 v51 = v42;
          int v44 = v51 + 4;
          while (v43 != v45)
          {
            int v53 = *((_DWORD *)v43 - 1);
            v43 -= 4;
            *((_DWORD *)v51 - 1) = v53;
            v51 -= 4;
          }
          v81 = v51;
          v82 = v44;
          v83 = v52;
          if (v45) {
            operator delete(v45);
          }
        }
        else
        {
          *(_DWORD *)v82 = v41;
          int v44 = v43 + 4;
        }
        v82 = v44;
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5DC0);
        }
        int v54 = qword_102419458;
        if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)uint64_t buf = 68289538;
          int v88 = 0;
          __int16 v89 = 2082;
          int v90 = "";
          __int16 v91 = 2050;
          uint64_t v92 = a5;
          __int16 v93 = 1026;
          int v94 = 1;
          _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"update confidence of localization request due to localization stop reason\", \"stopReason\":%{public}lu, \"confidence level\":%{public}d}", buf, 0x22u);
        }
      }
      else
      {
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5DC0);
        }
        uint64_t v30 = qword_102419458;
        if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)uint64_t buf = 68289282;
          int v88 = 0;
          __int16 v89 = 2082;
          int v90 = "";
          __int16 v91 = 2050;
          uint64_t v92 = a5;
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"stopReason != LocalizationStopReason::CompletedSuccessfully, but stopReasonToConfidenceReason returned nullopt! shouldn't happen\", \"stopReason\":%{public}lu}", buf, 0x1Cu);
          if (qword_102419450 != -1) {
            dispatch_once(&qword_102419450, &stru_1022A5DC0);
          }
        }
        __int16 v31 = qword_102419458;
        if (os_signpost_enabled((os_log_t)qword_102419458))
        {
          *(_DWORD *)uint64_t buf = 68289282;
          int v88 = 0;
          __int16 v89 = 2082;
          int v90 = "";
          __int16 v91 = 2050;
          uint64_t v92 = a5;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v31, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "stopReason != LocalizationStopReason::CompletedSuccessfully, but stopReasonToConfidenceReason returned nullopt! shouldn't happen", "{\"msg%{public}.0s\":\"stopReason != LocalizationStopReason::CompletedSuccessfully, but stopReasonToConfidenceReason returned nullopt! shouldn't happen\", \"stopReason\":%{public}lu}", buf, 0x1Cu);
        }
      }
    }
    uint64_t v56 = *a3;
    uint64_t v55 = a3[1];
    if (*a3 != v55 && v55 - v56 == a4[1] - *a4)
    {
      unint64_t v57 = 0;
      do
      {
        std::string v58 = v85;
        if (v85 >= v86)
        {
          char v60 = (char *)__p;
          uint64_t v61 = (v85 - (unsigned char *)__p) >> 2;
          unint64_t v62 = v61 + 1;
          if ((unint64_t)(v61 + 1) >> 62) {
            sub_1001D7FD4();
          }
          uint64_t v63 = v86 - (unsigned char *)__p;
          if ((v86 - (unsigned char *)__p) >> 1 > v62) {
            unint64_t v62 = v63 >> 1;
          }
          if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v64 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v64 = v62;
          }
          if (v64)
          {
            uint64_t v65 = (char *)sub_10017EA34((uint64_t)&v86, v64);
            char v60 = (char *)__p;
            std::string v58 = v85;
          }
          else
          {
            uint64_t v65 = 0;
          }
          id v66 = &v65[4 * v61];
          *(_DWORD *)id v66 = *(_DWORD *)(v56 + 4 * v57);
          __int16 v59 = v66 + 4;
          while (v58 != v60)
          {
            int v67 = *((_DWORD *)v58 - 1);
            v58 -= 4;
            *((_DWORD *)v66 - 1) = v67;
            v66 -= 4;
          }
          long long __p = v66;
          v85 = v59;
          v86 = &v65[4 * v64];
          if (v60) {
            operator delete(v60);
          }
        }
        else
        {
          *(_DWORD *)v85 = *(_DWORD *)(v56 + 4 * v57);
          __int16 v59 = v58 + 4;
        }
        v85 = v59;
        uint64_t v68 = *a4;
        v69 = v82;
        if (v82 >= v83)
        {
          int v71 = (char *)v81;
          uint64_t v72 = (v82 - (unsigned char *)v81) >> 2;
          unint64_t v73 = v72 + 1;
          if ((unint64_t)(v72 + 1) >> 62) {
            sub_1001D7FD4();
          }
          uint64_t v74 = v83 - (unsigned char *)v81;
          if ((v83 - (unsigned char *)v81) >> 1 > v73) {
            unint64_t v73 = v74 >> 1;
          }
          if ((unint64_t)v74 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v75 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v75 = v73;
          }
          if (v75)
          {
            v76 = (char *)sub_10017EA34((uint64_t)&v83, v75);
            int v71 = (char *)v81;
            v69 = v82;
          }
          else
          {
            v76 = 0;
          }
          int v77 = &v76[4 * v72];
          *(_DWORD *)int v77 = *(_DWORD *)(v68 + 4 * v57);
          int v70 = v77 + 4;
          while (v69 != v71)
          {
            int v78 = *((_DWORD *)v69 - 1);
            v69 -= 4;
            *((_DWORD *)v77 - 1) = v78;
            v77 -= 4;
          }
          v81 = v77;
          v82 = v70;
          v83 = &v76[4 * v75];
          if (v71) {
            operator delete(v71);
          }
        }
        else
        {
          *(_DWORD *)v82 = *(_DWORD *)(v68 + 4 * v57);
          int v70 = v69 + 4;
        }
        v82 = v70;
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5DC0);
        }
        uint64_t v79 = qword_102419458;
        if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
        {
          int v80 = *(_DWORD *)(*a3 + 4 * v57);
          *(_DWORD *)uint64_t buf = 68289282;
          int v88 = 0;
          __int16 v89 = 2082;
          int v90 = "";
          __int16 v91 = 1026;
          LODWORD(v92) = v80;
          _os_log_impl((void *)&_mh_execute_header, v79, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"update confidence of localization request\", \"confidence level\":%{public}d}", buf, 0x18u);
        }
        ++v57;
        uint64_t v56 = *a3;
      }
      while (v57 < (a3[1] - *a3) >> 2);
    }
    if (!*(unsigned char *)(a2 + 16)) {
      sub_10020D700();
    }
    sub_100220F50(a1 + 136, (void *)a2, (uint64_t *)&__p, &v81);
    if (v81)
    {
      v82 = (char *)v81;
      operator delete(v81);
    }
    if (__p)
    {
      v85 = (char *)__p;
      operator delete(__p);
    }
  }
}

void sub_10030C46C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  if (__p) {
    operator delete(__p);
  }
  if (a18) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

void sub_10030C4B4(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
}

uint64_t sub_10030C4BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 2560) + 128))();
}

uint64_t sub_10030C4E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 2552) + 128))();
}

void sub_10030C50C(uint64_t a1, int a2)
{
}

void sub_10030C514(uint64_t a1, int a2)
{
}

void sub_10030C51C(uint64_t a1)
{
  uint64_t v1 = a1 + 632;
  sub_1002EECD4((unsigned char *)(a1 + 632));

  sub_1002EEB24(v1, 0);
}

void sub_10030C55C(uint64_t a1)
{
  uint64_t v1 = a1 + 624;
  sub_1002EECD4((unsigned char *)(a1 + 624));

  sub_1002EEB24(v1, 0);
}

void sub_10030C59C(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(a1 + 632);
  sub_1002EE984(a1 + 632);

  sub_1002EEEA8(v1);
}

void sub_10030C5D8(uint64_t a1)
{
  uint64_t v1 = (unsigned char *)(a1 + 624);
  sub_1002EE984(a1 + 624);

  sub_1002EEEA8(v1);
}

uint64_t sub_10030C614(unsigned __int8 *a1)
{
  int v2 = a1[52];
  if (v2 == 1)
  {
    int v3 = 1;
  }
  else if (v2 == 2)
  {
    int v3 = sub_10030AD68();
  }
  else
  {
    int v3 = 0;
  }
  int v4 = a1[104];
  sub_1000C7F88(buf);
  unsigned int v13 = 0;
  CFStringRef v5 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsUwbRangeLocalizationMinValidSessionTime", 0x8000100u, kCFAllocatorNull);
  int v6 = sub_1004D08E4(*(uint64_t *)buf, (uint64_t)v5, &v13);
  CFRelease(v5);
  uint64_t v7 = v13;
  if (*(void *)v15) {
    sub_1000DB0A0(*(std::__shared_weak_count **)v15);
  }
  if (v6) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 2500;
  }
  uint64_t result = sub_1002F0B98((uint64_t)(a1 + 632), v8);
  int v10 = result;
  if (!v4 || !a1[120])
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    unint64_t v11 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)char v15 = 2082;
      *(void *)&v15[2] = "";
      __int16 v16 = 1026;
      BOOL v17 = v4 == 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Setting all BLE measurements as ignored\", \"displayStateOff\":%{public}hhd}", buf, 0x18u);
    }
    if (v3)
    {
      sub_1002331F4((uint64_t)(a1 + 1616), (__n128 *)buf);
      if (!v15[8]) {
        sub_10020D700();
      }
      sub_100220C48((uint64_t)(a1 + 136), buf);
    }
    uint64_t result = sub_1002FD284((uint64_t)(a1 + 584));
  }
  if (v10)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    uint64_t v12 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)char v15 = 2082;
      *(void *)&v15[2] = "";
      __int16 v16 = 1026;
      BOOL v17 = 1;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Setting all UWB measurements as ignored\", \"NI session not resumed\":%{public}hhd}", buf, 0x18u);
    }
    if (v3)
    {
      sub_1002331F4((uint64_t)(a1 + 1616), (__n128 *)buf);
      if (!v15[8]) {
        sub_10020D700();
      }
      sub_100220DCC((uint64_t)(a1 + 136), buf);
    }
    return sub_1002FD2B8((uint64_t)(a1 + 584));
  }
  return result;
}

void sub_10030C8DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10030C900(uint64_t a1, uint64_t a2, int a3, int a4)
{
  if (a4)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    int v4 = qword_102419458;
    BOOL v5 = os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT);
    uint64_t v6 = 0;
    if (v5)
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v48 = 2082;
      *(void *)&v48[2] = "";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, will not reschedule, currently in motion\"}", buf, 0x12u);
      return 0;
    }
    return v6;
  }
  int v8 = *(_DWORD *)(a2 + 24);
  int v10 = *(_DWORD **)(a2 + 32);
  int v9 = *(_DWORD **)(a2 + 40);
  if (v10 == v9)
  {
    int v13 = 0;
    goto LABEL_26;
  }
  unint64_t v11 = *(_DWORD **)(a2 + 32);
  do
  {
    if (*v11 == 1) {
      goto LABEL_11;
    }
    ++v11;
  }
  while (v11 != v9);
  unint64_t v11 = *(_DWORD **)(a2 + 40);
  do
  {
LABEL_11:
    if (*v10 <= 7u && ((1 << *v10) & 0x89) != 0)
    {
      int v13 = 1;
      goto LABEL_18;
    }
    ++v10;
  }
  while (v10 != v9);
  int v13 = 0;
LABEL_18:
  if (v8 == 3 || v11 == v9)
  {
    unsigned int v43 = 0;
  }
  else
  {
    if (a3)
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      __n128 v14 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)uint64_t v48 = 2082;
        *(void *)&v48[2] = "";
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, will not reschedule a motion trigger due to motion reason\"}", buf, 0x12u);
LABEL_26:
        unsigned int v43 = 0;
        goto LABEL_35;
      }
      int v16 = 0;
    }
    else
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      char v15 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)uint64_t v48 = 2082;
        *(void *)&v48[2] = "";
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, will reschedule a localization trigger due to motion during prediction\"}", buf, 0x12u);
      }
      int v16 = 1;
    }
    unsigned int v43 = v16;
  }
LABEL_35:
  BOOL v17 = sub_100231E78(a1 + 1616);
  if (((v8 != 3) & v13 & v17) != 1)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    BOOL v23 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289794;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v48 = 2082;
      *(void *)&v48[2] = "";
      __int16 v49 = 1026;
      *(_DWORD *)int v50 = v8 != 3;
      *(_WORD *)&v50[4] = 1026;
      *(_DWORD *)&v50[6] = v13;
      __int16 v51 = 1026;
      BOOL v52 = v17;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, result is valid or low latency mode is disabled, resetting retry states\", \"confidenceLevelAllowReschedule\":%{public}hhd, \"localizationRetryReasonExists\":%{public}hhd, \"isLowLatencyMode\":%{public}hhd}", buf, 0x24u);
    }
    *(_DWORD *)(a1 + 108) = 0;
    *(_DWORD *)(a1 + 112) = 0;
    *(unsigned char *)(a1 + 116) = 1;
    return v43;
  }
  double v18 = *(int **)(a2 + 32);
  for (uint64_t i = *(int **)(a2 + 40); v18 != i; ++v18)
  {
    int v20 = *v18;
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    uint64_t v21 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      sub_1002757B0(v20, __p);
      unint64_t v22 = __p;
      if (v46 < 0) {
        unint64_t v22 = (void **)__p[0];
      }
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v48 = 2082;
      *(void *)&v48[2] = "";
      __int16 v49 = 2082;
      *(void *)int v50 = v22;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, result contains reason:\", \"reason\":%{public, location:escape_only}s}", buf, 0x1Cu);
      if (v46 < 0) {
        operator delete(__p[0]);
      }
    }
  }
  if (!*(unsigned char *)(a1 + 116))
  {
    int v31 = *(_DWORD *)(a1 + 112);
    *(_DWORD *)(a1 + 112) = v31 + 1;
    sub_1000C7F88(buf);
    LODWORD(__p[0]) = 0;
    CFStringRef v32 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaximumLocalizeNumRetryDisabledDueToWiFiError", 0x8000100u, kCFAllocatorNull);
    int v33 = sub_10013E418(*(uint64_t *)buf, (uint64_t)v32, __p);
    CFRelease(v32);
    int v34 = (int)__p[0];
    if (*(void *)v48) {
      sub_1000DB0A0(*(std::__shared_weak_count **)v48);
    }
    if (v33) {
      int v35 = v34;
    }
    else {
      int v35 = 30;
    }
    if (v31 >= v35)
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      int v40 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
      {
        int v41 = *(_DWORD *)(a1 + 112) - 1;
        *(_DWORD *)uint64_t buf = 68289282;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)uint64_t v48 = 2082;
        *(void *)&v48[2] = "";
        __int16 v49 = 1026;
        *(_DWORD *)int v50 = v41;
        _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, reached invalid result retry disabled count limit\", \"retry disabled trigger count\":%{public}d}", buf, 0x18u);
      }
      *(unsigned char *)(a1 + 116) = 1;
      *(_DWORD *)(a1 + 112) = 0;
    }
    else
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      unint64_t v36 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
      {
        int v37 = *(_DWORD *)(a1 + 112);
        *(_DWORD *)uint64_t buf = 68289282;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)uint64_t v48 = 2082;
        *(void *)&v48[2] = "";
        __int16 v49 = 1026;
        *(_DWORD *)int v50 = v37;
        _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, will not retry\", \"retry disabled trigger count\":%{public}d}", buf, 0x18u);
      }
    }
    return v43;
  }
  int v24 = *(_DWORD *)(a1 + 108);
  *(_DWORD *)(a1 + 108) = v24 + 1;
  sub_1000C7F88(buf);
  LODWORD(__p[0]) = 0;
  CFStringRef v25 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaximumLocalizeNumRetryDueToWiFiError", 0x8000100u, kCFAllocatorNull);
  int v26 = sub_10013E418(*(uint64_t *)buf, (uint64_t)v25, __p);
  CFRelease(v25);
  int v27 = (int)__p[0];
  if (*(void *)v48) {
    sub_1000DB0A0(*(std::__shared_weak_count **)v48);
  }
  if (v26) {
    int v28 = v27;
  }
  else {
    int v28 = 5;
  }
  if (v24 >= v28)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    int v38 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
    {
      int v39 = *(_DWORD *)(a1 + 108) - 1;
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)uint64_t v48 = 2082;
      *(void *)&v48[2] = "";
      __int16 v49 = 1026;
      *(_DWORD *)int v50 = v39;
      _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, reached invalid result reschedule limit\", \"retried number\":%{public}d}", buf, 0x18u);
    }
    *(unsigned char *)(a1 + 116) = 0;
    *(_DWORD *)(a1 + 108) = 0;
    return v43;
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  __int16 v29 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    int v30 = *(_DWORD *)(a1 + 108);
    *(_DWORD *)uint64_t buf = 68289282;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)uint64_t v48 = 2082;
    *(void *)&v48[2] = "";
    __int16 v49 = 1026;
    *(_DWORD *)int v50 = v30;
    _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"shouldRescheduleLocalization, will reschedule a localization trigger due to invalid result\", \"retried count\":%{public}d}", buf, 0x18u);
  }
  return 1;
}

void sub_10030D134(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18)
{
  if (a18) {
    sub_1000DB0A0(a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10030D160(uint64_t a1)
{
  int v2 = *(void **)(a1 + 32);
  if (v2)
  {
    *(void *)(a1 + 40) = v2;
    operator delete(v2);
  }
  int v4 = (void **)a1;
  sub_100314DF4(&v4);
  return a1;
}

uint64_t *sub_10030D1A8(uint64_t *result, uint64_t *a2)
{
  int v3 = result;
  int v4 = *((unsigned __int8 *)result + 52);
  if (v4 == 1)
  {
    sub_1002FDAD0((uint64_t)&v5, 0);
    sub_1002FE83C((uint64_t)(v3 + 73), &v5, a2);
    return sub_10021EC14(v3 + 17, a2);
  }
  if (v4 == 2)
  {
    sub_1002FDAD0((uint64_t)&v6, 0);
    sub_1002FE83C((uint64_t)(v3 + 73), &v6, a2);
    uint64_t result = (uint64_t *)sub_10030AD68();
    if (result) {
      return sub_10021EC14(v3 + 17, a2);
    }
  }
  return result;
}

void sub_10030D248(unsigned __int8 *a1, NSObject *a2, double a3)
{
  int v15 = 0;
  sub_1001EE1F4(&v15);
  *(void *)&long long v16 = sub_1001EC8C4((ssize_t)&v15);
  *((void *)&v16 + 1) = v6;
  sub_10023DBB8((uint64_t)__p);
  sub_10030D6D4(&v16, (uint64_t)__p, (uint64_t)buf, a3);
  (*(void (**)(unsigned __int8 *, uint8_t *))(*(void *)a1 + 152))(a1, buf);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v18[24]);
  sub_1002569C8((wireless_diagnostics::google::protobuf::MessageLite *)__p);
  sub_1001EF3E8((unsigned int *)&v15);
  LODWORD(v7) = a1[52];
  if (v7 == 1)
  {
    sub_10030B334((uint64_t)a1, 0);
    goto LABEL_31;
  }
  if (v7 == 2) {
    goto LABEL_29;
  }
  if (!a1[52])
  {
    a1 = (unsigned __int8 *)&qword_102419000;
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    uint64_t v7 = &qword_102419000;
    int v8 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_FAULT))
    {
      sub_100275744(0, __p);
      if (v14 >= 0) {
        int v9 = __p;
      }
      else {
        int v9 = (void **)__p[0];
      }
      *(_DWORD *)uint64_t buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)double v18 = 2082;
      *(void *)&void v18[2] = "";
      *(_WORD *)&unsigned char v18[10] = 2082;
      *(void *)&v18[12] = v9;
      *(_WORD *)&v18[20] = 2082;
      *(void *)&v18[22] = "assert";
      *(_WORD *)&v18[30] = 2081;
      uint64_t v19 = "false";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Invalid MiLo current activity\", \"state\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
      if (v14 < 0) {
        operator delete(__p[0]);
      }
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
    }
    int v10 = qword_102419458;
    if (os_signpost_enabled((os_log_t)qword_102419458))
    {
      sub_100275744(0, __p);
      if (v14 >= 0) {
        unint64_t v11 = __p;
      }
      else {
        unint64_t v11 = (void **)__p[0];
      }
      *(_DWORD *)uint64_t buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)double v18 = 2082;
      *(void *)&void v18[2] = "";
      *(_WORD *)&unsigned char v18[10] = 2082;
      *(void *)&v18[12] = v11;
      *(_WORD *)&v18[20] = 2082;
      *(void *)&v18[22] = "assert";
      *(_WORD *)&v18[30] = 2081;
      uint64_t v19 = "false";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v10, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Invalid MiLo current activity", "{\"msg%{public}.0s\":\"Invalid MiLo current activity\", \"state\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
      if (v14 < 0) {
        operator delete(__p[0]);
      }
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
    }
    a2 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
    {
      a1 = (unsigned __int8 *)__p;
      sub_100275744(0, __p);
      if (v14 >= 0) {
        uint64_t v12 = __p;
      }
      else {
        uint64_t v12 = (void **)__p[0];
      }
      *(_DWORD *)uint64_t buf = 68289795;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)double v18 = 2082;
      *(void *)&void v18[2] = "";
      *(_WORD *)&unsigned char v18[10] = 2082;
      *(void *)&v18[12] = v12;
      *(_WORD *)&v18[20] = 2082;
      *(void *)&v18[22] = "assert";
      *(_WORD *)&v18[30] = 2081;
      uint64_t v19 = "false";
      _os_log_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Invalid MiLo current activity\", \"state\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
      if (v14 < 0) {
        operator delete(__p[0]);
      }
    }
    abort_report_np();
    __break(1u);
LABEL_29:
    *(void *)&v18[24] = 0;
    uint64_t v19 = 0;
    *(void *)uint64_t buf = 0;
    *(void *)double v18 = 0;
    *(void *)&v18[8] = 0;
    *(void *)&v18[16] = &v18[24];
    int v20 = 4;
    sub_10030AF84((uint64_t)a1, (uint64_t)buf);
    sub_1000F5BB0((uint64_t)&v18[16], *(void **)&v18[24]);
  }
LABEL_31:
  sub_10030D760((uint64_t)a1, (int)v7, (uint64_t)a2);
}

void sub_10030D680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23)
{
  sub_1000F5BB0(v23, a23);
  _Unwind_Resume(a1);
}

void sub_10030D6D4(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  sub_10023DF50((uint64_t)v8);
  sub_1002E7274((uint64_t)v8, a2);
  sub_10031A9F0(a3, a1, *(_DWORD *)(a2 + 8), (uint64_t)v8, a4);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_10030D74C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

double sub_10030D760(uint64_t a1, int a2, uint64_t a3)
{
  sub_100233408(a3, &__p);
  uint64_t v5 = sub_100232148((uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  memset(&__p, 0, sizeof(__p));
  v13[0] = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "TriggerType", sub_1002F1374((__n128 *)(a1 + 632), (__n128 *)&__p).n128_f64[0]);
  v14[0] = +[NSNumber numberWithInt:v5];
  v13[1] = +[NSString stringWithUTF8String:"NumLocalizations"];
  v14[1] = +[NSNumber numberWithBool:a2 == 1];
  _DWORD v13[2] = +[NSString stringWithUTF8String:"NumRecordings"];
  v14[2] = +[NSNumber numberWithBool:a2 == 2];
  void v13[3] = +[NSString stringWithUTF8String:"WiFiScanDuration"];
  v14[3] = +[NSNumber numberWithDouble:*(double *)&__p.__r_.__value_.__l.__data_];
  v13[4] = +[NSString stringWithUTF8String:"BTScanDuration"];
  v14[4] = +[NSNumber numberWithDouble:*(double *)&__p.__r_.__value_.__l.__size_];
  v13[5] = +[NSString stringWithUTF8String:"BleActiveScanRate"];
  v14[5] = +[NSNumber numberWithInt:LODWORD(__p.__r_.__value_.__r.__words[2])];
  uint64_t v6 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:6];
  LOBYTE(v11[0]) = 0;
  char v12 = 0;
  sub_100134750(v8, "ScanEvent");
  sub_1004DDCD0(a1 + 2048, (uint64_t)v11, (uint64_t)v8, (const __CFDictionary *)v6);
  if (v9 < 0) {
    operator delete(v8[0]);
  }
  if (v12) {
    sub_100314E8C(v11);
  }
  return sub_1002F1388(a1 + 632);
}

void sub_10030D994(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a25) {
    sub_100314E8C(&a21);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10030D9E8(uint64_t a1, double *a2, uint64_t a3, int a4, unsigned int a5)
{
  double v8 = *a2;
  sub_10030A578("InternalClientMotion", (uint64_t)v10);
  sub_1002A5850((uint64_t)v10, 0, 0, 3u, (uint64_t)v11, v8);
  sub_10024DA38((wireless_diagnostics::google::protobuf::MessageLite *)v10);
  sub_10022F1EC((unsigned __int8 *)(a1 + 1616), (uint64_t)v11, 1, a4, a5);
  return sub_10026633C(v11);
}

void sub_10030DA80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_10026633C(va);
  _Unwind_Resume(a1);
}

void sub_10030DAA4(uint64_t a1, int a2)
{
  sub_100221264(a1 + 136);
  uint64_t v4 = a1 + 1808;
  sub_1002CAA38(v4);
  sub_1000C7F88(&v14);
  BOOL v13 = 0;
  CFStringRef v5 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionStopDetectionModuleEnable", 0x8000100u, kCFAllocatorNull);
  char v6 = sub_1000D29FC(v14, (uint64_t)v5, &v13);
  CFRelease(v5);
  BOOL v7 = v13;
  if (v15) {
    sub_1000DB0A0(v15);
  }
  if (v7) {
    char v8 = 0;
  }
  else {
    char v8 = v6;
  }
  if ((v8 & 1) == 0)
  {
    sub_1000C7F88(&v14);
    BOOL v13 = 0;
    CFStringRef v9 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMotionInvalidateConfidenceOnMotion", 0x8000100u, kCFAllocatorNull);
    int v10 = sub_1000D29FC(v14, (uint64_t)v9, &v13);
    CFRelease(v9);
    BOOL v11 = v13;
    if (v15) {
      sub_1000DB0A0(v15);
    }
    int v12 = v10 ^ 1;
    if (v11) {
      int v12 = 1;
    }
    if (!a2)
    {
      if (v12) {
        sub_1002CAA74(v4, 1);
      }
    }
  }
}

void sub_10030DBE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_10030DC08(uint64_t a1, int a2)
{
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  double v18 = Current_5;
  int v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 192))(a1);
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  char v6 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)uint64_t buf = 68289282;
    int v21 = 0;
    __int16 v22 = 2082;
    uint64_t v23 = "";
    __int16 v24 = 1026;
    int v25 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"onInMotion - setting medium confidence and resetting localization error retries\", \"ScreenOn\":%{public}hhd}", buf, 0x18u);
  }
  *(_DWORD *)(a1 + 108) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 116) = 1;
  sub_10023DE60(v14);
  if (!sub_10025C930(0))
  {
    int v10 = "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)";
    int v11 = 17711;
    int v12 = "set_status";
    goto LABEL_16;
  }
  v17 |= 4u;
  int v15 = 0;
  if (v5) {
    unsigned int v7 = 1;
  }
  else {
    unsigned int v7 = 2;
  }
  if (!sub_10016E644(v7))
  {
    int v10 = "::CLMicroLocationProto::MotionEvent_ScreenStatus_IsValid(value)";
    int v11 = 17804;
    int v12 = "set_screenon";
LABEL_16:
    __assert_rtn(v12, "microlocation.pb.h", v11, v10);
  }
  v17 |= 0x10u;
  unsigned int v16 = v7;
  int v13 = 0;
  sub_1001EE1F4(&v13);
  *(void *)&long long v19 = sub_1001EC8C4((ssize_t)&v13);
  *((void *)&v19 + 1) = v8;
  sub_10030350C(&v19, (uint64_t)v14, (uint64_t)buf, Current_5);
  (*(void (**)(uint64_t, uint8_t *))(*(void *)a1 + 152))(a1, buf);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v26);
  sub_1001EF3E8((unsigned int *)&v13);
  sub_100231314(a1 + 1616);
  if (a2)
  {
    unsigned int v9 = a2 == 2;
  }
  else
  {
    sub_10030DAA4(a1, 0);
    unsigned int v9 = 0;
  }
  sub_10030D9E8(a1, &v18, 0, 1, v9);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)v14);
}

void sub_10030DE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11)
{
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)(v11 + 32));
  sub_1001EF3E8(&a10);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)&a11);
  _Unwind_Resume(a1);
}

void sub_10030DED8(uint64_t a1)
{
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  double v15 = Current_5;
  int v3 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 192))(a1);
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  uint64_t v4 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)uint64_t buf = 68289282;
    int v18 = 0;
    __int16 v19 = 2082;
    int v20 = "";
    __int16 v21 = 1026;
    int v22 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"onStopMotion\", \"ScreenOn\":%{public}hhd}", buf, 0x18u);
  }
  sub_10023DE60(v11);
  if (!sub_10025C930(1u))
  {
    unsigned int v7 = "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)";
    int v8 = 17711;
    unsigned int v9 = "set_status";
    goto LABEL_16;
  }
  v14 |= 4u;
  int v12 = 1;
  if (v3) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (!sub_10016E644(v5))
  {
    unsigned int v7 = "::CLMicroLocationProto::MotionEvent_ScreenStatus_IsValid(value)";
    int v8 = 17804;
    unsigned int v9 = "set_screenon";
LABEL_16:
    __assert_rtn(v9, "microlocation.pb.h", v8, v7);
  }
  v14 |= 0x10u;
  unsigned int v13 = v5;
  int v10 = 0;
  sub_1001EE1F4(&v10);
  *(void *)&long long v16 = sub_1001EC8C4((ssize_t)&v10);
  *((void *)&v16 + 1) = v6;
  sub_10030350C(&v16, (uint64_t)v11, (uint64_t)buf, Current_5);
  (*(void (**)(uint64_t, uint8_t *))(*(void *)a1 + 152))(a1, buf);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v23);
  sub_1001EF3E8((unsigned int *)&v10);
  sub_100231404(a1 + 1616);
  if (v3)
  {
    sub_100230FA8(a1 + 1616, 0);
    sub_10030D9E8(a1, &v15, 0, 0, 0);
  }
  else
  {
    sub_10030DAA4(a1, 0);
  }
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)v11);
}

void sub_10030E148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, char a11)
{
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)(v11 + 32));
  sub_1001EF3E8(&a10);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)&a11);
  _Unwind_Resume(a1);
}

void sub_10030E188(unsigned __int8 *a1)
{
  int v2 = (*(uint64_t (**)(unsigned __int8 *))(*(void *)a1 + 192))(a1);
  int v3 = a1 + 1616;
  if (sub_100231B34((uint64_t)v3) && v2)
  {
    sub_10023D900(&v7);
    v11 |= 4u;
    if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::assign(v9, "InternalClientMac");
    if (!sub_10023E7A0(1)) {
      __assert_rtn("set_recordingrequesttype", "microlocation.pb.h", 13116, "::CLMicroLocationProto::RecordingRequestType_IsValid(value)");
    }
    v11 |= 2u;
    int v8 = 1;
    v6[0] = 0;
    sub_1001EE1F4(v6);
    *(void *)__s = sub_1001EC8C4((ssize_t)v6);
    uint64_t v13 = v4;
    sub_1001EF3E8((unsigned int *)v6);
    v11 |= 8u;
    if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::assign(v10, __s, 0x10uLL);
    double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
    sub_1002C61B8((uint64_t)&v7, 0, 0, 3u, (uint64_t)v6, Current_5);
    sub_100230AA0(v3, (uint64_t)v6);
    sub_10026633C(v6);
    sub_10024E568((wireless_diagnostics::google::protobuf::MessageLite *)&v7);
  }
}

void sub_10030E354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_10026633C(&a9);
  sub_10024E568((wireless_diagnostics::google::protobuf::MessageLite *)(v9 - 88));
  _Unwind_Resume(a1);
}

void sub_10030E39C(uint64_t a1)
{
}

uint64_t sub_10030E3A8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = sub_10030E840();
  sub_1000C7F88(buf);
  v32[0] = 0;
  CFStringRef v7 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsScanDurationIncrement", 0x8000100u, kCFAllocatorNull);
  int v8 = sub_1004D08E4(*(uint64_t *)buf, (uint64_t)v7, v32);
  CFRelease(v7);
  uint64_t v9 = v32[0];
  if (*(void *)v34) {
    sub_1000DB0A0(*(std::__shared_weak_count **)v34);
  }
  if (!v8) {
    uint64_t v9 = 500;
  }
  if (!v9) {
    return 0;
  }
  int v10 = *(unsigned __int8 *)(a1 + 52);
  if (!*(unsigned char *)(a1 + 52))
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    __int16 v19 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Logic, shouldExtendWifiScan was called when activity is NotSet", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      LOWORD(v32[0]) = 0;
      int v31 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "cl::chrono::milliseconds CLMicroLocationLogic::requestWifiScanExtension(cl::chrono::milliseconds, size_t)", "%s\n", v31);
      if (v31 != (char *)buf) {
        free(v31);
      }
    }
    return 0;
  }
  signed int v11 = vcvtpd_s64_f64((double)a2 / (double)v9);
  if (v10 == 1)
  {
    sub_1000C7F88(buf);
    v32[0] = 0;
    CFStringRef v21 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsLocalizingDurationMaximumIncrements", 0x8000100u, kCFAllocatorNull);
    int v22 = sub_10013E418(*(uint64_t *)buf, (uint64_t)v21, v32);
    CFRelease(v21);
    int v23 = v32[0];
    if (*(void *)v34) {
      sub_1000DB0A0(*(std::__shared_weak_count **)v34);
    }
    if (v22) {
      int v24 = v23;
    }
    else {
      int v24 = 4;
    }
    int v25 = *(_DWORD *)(a1 + 96);
    int v17 = v24 - v25;
    if (v24 - v25 >= v11) {
      signed int v18 = v11;
    }
    else {
      signed int v18 = v24 - v25;
    }
    *(_DWORD *)(a1 + 96) = v18 + v25;
  }
  else if (v10 == 2)
  {
    sub_1000C7F88(buf);
    v32[0] = 0;
    CFStringRef v12 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsRecordingDurationMaximumIncrements", 0x8000100u, kCFAllocatorNull);
    int v13 = sub_10013E418(*(uint64_t *)buf, (uint64_t)v12, v32);
    CFRelease(v12);
    int v14 = v32[0];
    if (*(void *)v34) {
      sub_1000DB0A0(*(std::__shared_weak_count **)v34);
    }
    if (v13) {
      int v15 = v14;
    }
    else {
      int v15 = 4;
    }
    int v16 = *(_DWORD *)(a1 + 100);
    int v17 = v15 - v16;
    if (v15 - v16 >= v11) {
      signed int v18 = v11;
    }
    else {
      signed int v18 = v15 - v16;
    }
    *(_DWORD *)(a1 + 100) = v18 + v16;
  }
  else
  {
    int v17 = 0;
    signed int v18 = 0;
  }
  uint64_t v26 = v9 * v18;
  if (v6 > a3) {
    uint64_t v20 = v26;
  }
  else {
    uint64_t v20 = 0;
  }
  uint64_t v27 = *(unsigned __int8 *)(a1 + 52);
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  int v28 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
  {
    uint64_t v29 = sub_10030E840();
    *(_DWORD *)uint64_t buf = 68291074;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)int v34 = 2082;
    *(void *)&v34[2] = "";
    __int16 v35 = 1026;
    BOOL v36 = v6 <= a3;
    __int16 v37 = 2050;
    unint64_t v38 = a3;
    __int16 v39 = 2050;
    uint64_t v40 = v29;
    __int16 v41 = 2050;
    uint64_t v42 = a2;
    __int16 v43 = 2050;
    uint64_t v44 = v9;
    __int16 v45 = 2050;
    uint64_t v46 = v17;
    __int16 v47 = 2050;
    uint64_t v48 = v20;
    __int16 v49 = 2050;
    uint64_t v50 = v27;
    _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"CLMicroLocationLogic:requestWifiScanExtension\", \"requirement for min num measurements met\":%{public}hhd, \"Num measurements\":%{public}lu, \"Minimum num of measurements for scan extension\":%{public}lu, \"requestedExtension\":%{public}lld, \"singleScanIncrement\":%{public}lld, \"remainingExtensions\":%{public}lu, \"extendDuration\":%{public}lld, \"scanActivity\":%{public, location:CLMicroLocationUtils::ScanActivity}lld}", buf, 0x5Eu);
  }
  return v20;
}

void sub_10030E80C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    sub_1000DB0A0(a14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10030E840()
{
  sub_1000C7F88(&v5);
  unsigned int v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumWiFiNumberOfMeasurementsForScanExtension", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1004D08E4(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  uint64_t v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v1) {
    return v2;
  }
  else {
    return 2;
  }
}

void sub_10030E8D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_10030E8F0(uint64_t a1, std::string *a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)&long long v52 = a3;
  *((void *)&v52 + 1) = a4;
  sub_1000C7F88(&v53);
  memset(buf, 0, 24);
  CFStringRef v8 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsOverrideCurrentRTLOIType", 0x8000100u, kCFAllocatorNull);
  BOOL v9 = sub_1000A7CF8((uint64_t)v53.__r_.__value_.__l.__data_, (uint64_t)v8, (std::string *)buf);
  CFRelease(v8);
  if (v9)
  {
    if ((buf[23] & 0x80000000) != 0) {
      sub_1000DC48C(&__p, *(void **)buf, *(unint64_t *)&buf[8]);
    }
    else {
      std::string __p = *(std::string *)buf;
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_1000DC48C(&__str, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      std::string __str = __p;
    }
  }
  else
  {
    sub_100134750(&__str, "");
  }
  if ((buf[23] & 0x80000000) != 0) {
    operator delete(*(void **)buf);
  }
  if (v53.__r_.__value_.__l.__size_) {
    sub_1000DB0A0((std::__shared_weak_count *)v53.__r_.__value_.__l.__size_);
  }
  std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __str.__r_.__value_.__l.__size_;
  }
  if (size) {
    std::string::operator=(a2, &__str);
  }
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_1000DC48C(__dst, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
    std::string::size_type v43 = a2->__r_.__value_.__r.__words[2];
  }
  BOOL v13 = sub_10030A74C(a1, (uint64_t *)__dst, v10, v11, a5);
  if (SHIBYTE(v43) < 0) {
    operator delete(__dst[0]);
  }
  if (v13)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    int v14 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
    {
      memset(&v53, 0, sizeof(v53));
      if ((sub_1001E86C0(a1 + 80, &v53) & 1) == 0)
      {
        std::bad_cast::bad_cast((std::bad_cast *)&__p);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10229E8C8;
        sub_1001E91E8((uint64_t)&__p);
      }
      if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v15 = &v53;
      }
      else {
        int v15 = (std::string *)v53.__r_.__value_.__r.__words[0];
      }
      int v16 = (std::string *)(a1 + 56);
      if (*(char *)(a1 + 79) < 0) {
        int v16 = (std::string *)v16->__r_.__value_.__r.__words[0];
      }
      memset(&v41, 0, sizeof(v41));
      if ((sub_1001E86C0((uint64_t)&v52, &v41) & 1) == 0)
      {
        std::bad_cast::bad_cast((std::bad_cast *)&__p);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10229E8C8;
        sub_1001E91E8((uint64_t)&__p);
      }
      int v17 = &v41;
      if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v17 = (std::string *)v41.__r_.__value_.__r.__words[0];
      }
      signed int v18 = a2;
      if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
        signed int v18 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)uint64_t buf = 68290051;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&unsigned char buf[18] = 2081;
      *(void *)&buf[20] = v15;
      __int16 v46 = 2081;
      __int16 v47 = v16;
      __int16 v48 = 2081;
      __int16 v49 = v17;
      __int16 v50 = 2081;
      __int16 v51 = v18;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Not allowed to switch to new LOI\", \"Current LOI ID\":%{private, location:escape_only}s, \"Current LOI Type\":%{private, location:escape_only}s, \"New LOI ID\":%{private, location:escape_only}s, \"New LOI Type\":%{private, location:escape_only}s}", buf, 0x3Au);
      if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v41.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v53.__r_.__value_.__l.__data_);
      }
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
    }
    __int16 v19 = qword_102419458;
    if (os_signpost_enabled((os_log_t)qword_102419458))
    {
      memset(&v53, 0, sizeof(v53));
      if ((sub_1001E86C0(a1 + 80, &v53) & 1) == 0)
      {
        std::bad_cast::bad_cast((std::bad_cast *)&__p);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10229E8C8;
        sub_1001E91E8((uint64_t)&__p);
      }
      if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v20 = &v53;
      }
      else {
        uint64_t v20 = (std::string *)v53.__r_.__value_.__r.__words[0];
      }
      CFStringRef v21 = (std::string *)(a1 + 56);
      if (*(char *)(a1 + 79) < 0) {
        CFStringRef v21 = (std::string *)v21->__r_.__value_.__r.__words[0];
      }
      memset(&v41, 0, sizeof(v41));
      if ((sub_1001E86C0((uint64_t)&v52, &v41) & 1) == 0)
      {
        std::bad_cast::bad_cast((std::bad_cast *)&__p);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10229E8C8;
        sub_1001E91E8((uint64_t)&__p);
      }
      int v22 = &v41;
      if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        int v22 = (std::string *)v41.__r_.__value_.__r.__words[0];
      }
      if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
        a2 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)uint64_t buf = 68290051;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&unsigned char buf[18] = 2081;
      *(void *)&buf[20] = v20;
      __int16 v46 = 2081;
      __int16 v47 = v21;
      __int16 v48 = 2081;
      __int16 v49 = v22;
      __int16 v50 = 2081;
      __int16 v51 = a2;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v19, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Not allowed to switch to new LOI", "{\"msg%{public}.0s\":\"Not allowed to switch to new LOI\", \"Current LOI ID\":%{private, location:escape_only}s, \"Current LOI Type\":%{private, location:escape_only}s, \"New LOI ID\":%{private, location:escape_only}s, \"New LOI Type\":%{private, location:escape_only}s}", buf, 0x3Au);
      if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v41.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v53.__r_.__value_.__l.__data_);
      }
    }
  }
  else
  {
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_1000DC48C(v39, a2->__r_.__value_.__l.__data_, a2->__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)__int16 v39 = *(_OWORD *)&a2->__r_.__value_.__l.__data_;
      std::string::size_type v40 = a2->__r_.__value_.__r.__words[2];
    }
    std::string::size_type v23 = *(void *)(a1 + 72);
    long long v24 = *(_OWORD *)(a1 + 56);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v39;
    *(void *)(a1 + 72) = v40;
    *(_OWORD *)__int16 v39 = v24;
    std::string::size_type v40 = v23;
    if (SHIBYTE(v23) < 0) {
      operator delete(v39[0]);
    }
    *(_OWORD *)(a1 + 80) = v52;
    sub_10030F39C(a1);
    sub_1002CA578(a1 + 1808, (uint64_t *)a2, v52, *((uint64_t *)&v52 + 1));
    int v25 = sub_100231B34(a1 + 1616);
    sub_10023DED4((uint64_t)&__p);
    if (!sub_10023E7B0(a5)) {
      __assert_rtn("set_reason", "microlocation.pb.h", 18183, "::CLMicroLocationProto::ChangedLoiReason_IsValid(value)");
    }
    int v35 = a5;
    v38 |= 0x14u;
    if ((_UNKNOWN *)__p.__r_.__value_.__r.__words[2] == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=((std::string *)__p.__r_.__value_.__r.__words[2], a2);
    memset(&v53, 0, sizeof(v53));
    if ((sub_1001E86C0((uint64_t)&v52, &v53) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)buf);
      *(void *)uint64_t buf = &off_10229E8C8;
      sub_1001E91E8((uint64_t)buf);
    }
    v38 |= 8u;
    if (v36 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v36, &v53);
    if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v53.__r_.__value_.__l.__data_);
    }
    v38 |= 0x20u;
    char v37 = v25;
    LODWORD(v41.__r_.__value_.__l.__data_) = 0;
    sub_1001EE1F4((int *)&v41);
    v53.__r_.__value_.__r.__words[0] = sub_1001EC8C4((ssize_t)&v41);
    v53.__r_.__value_.__l.__size_ = v26;
    double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
    sub_10030FD54(&v53, (uint64_t)&__p, (uint64_t)buf, Current_5);
    (*(void (**)(uint64_t, unsigned char *))(*(void *)a1 + 152))(a1, buf);
    sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)((char *)&v47 + 2));
    sub_1001EF3E8((unsigned int *)&v41);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    int v28 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
        a2 = (std::string *)a2->__r_.__value_.__r.__words[0];
      }
      memset(&v41, 0, sizeof(v41));
      if ((sub_1001E86C0((uint64_t)&v52, &v41) & 1) == 0)
      {
        int v33 = std::bad_cast::bad_cast((std::bad_cast *)&v53);
        v53.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10229E8C8;
        sub_1001E91E8((uint64_t)v33);
      }
      int v29 = SHIBYTE(v41.__r_.__value_.__r.__words[2]);
      std::string::size_type v30 = v41.__r_.__value_.__r.__words[0];
      sub_1002E580C(a5, &v53);
      int v31 = &v41;
      if (v29 < 0) {
        int v31 = (std::string *)v30;
      }
      if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        CFStringRef v32 = &v53;
      }
      else {
        CFStringRef v32 = (std::string *)v53.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)uint64_t buf = 68290051;
      *(_DWORD *)&uint8_t buf[4] = 0;
      *(_WORD *)&uint8_t buf[8] = 2082;
      *(void *)&buf[10] = "";
      *(_WORD *)&unsigned char buf[18] = 2081;
      *(void *)&buf[20] = a2;
      __int16 v46 = 2081;
      __int16 v47 = v31;
      __int16 v48 = 2081;
      __int16 v49 = v32;
      __int16 v50 = 1025;
      LODWORD(v51) = v25;
      _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Set current LOI.\", \"type\":%{private, location:escape_only}s, \"id\":%{private, location:escape_only}s, \"reason\":%{private, location:escape_only}s, \"is spectating\":%{private}hhd}", buf, 0x36u);
      if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v53.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v41.__r_.__value_.__l.__data_);
      }
    }
    sub_10025DEF8((wireless_diagnostics::google::protobuf::MessageLite *)&__p);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_10030F248(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,std::bad_cast a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a49 < 0) {
    operator delete(a44.__vftable);
  }
  __int16 v51 = *(std::__shared_weak_count **)(v49 - 104);
  if (v51) {
    sub_1000DB0A0(v51);
  }
  _Unwind_Resume(exception_object);
}

void sub_10030F39C(uint64_t a1)
{
  long long v35 = *(_OWORD *)(a1 + 80);
  if (*(char *)(a1 + 79) < 0)
  {
    sub_1000DC48C(__dst, *(void **)(a1 + 56), *(void *)(a1 + 64));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)(a1 + 56);
    uint64_t v26 = *(void *)(a1 + 72);
  }
  sub_100201B98(*(void *)(a1 + 128), &v35, v32);
  if (!v34)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    uint64_t v2 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
    {
      memset(__p, 0, 24);
      if ((sub_1001E86C0((uint64_t)&v35, (std::string *)__p) & 1) == 0)
      {
        std::bad_cast::bad_cast((std::bad_cast *)v29);
        *(void *)int v29 = &off_10229E8C8;
        sub_1001E91E8((uint64_t)v29);
      }
      int v3 = __p;
      if (__p[23] < 0) {
        int v3 = *(unsigned char **)__p;
      }
      unsigned int v4 = __dst;
      if (v26 < 0) {
        unsigned int v4 = (void **)__dst[0];
      }
      *(_DWORD *)uint64_t buf = 136380931;
      *(void *)&uint8_t buf[4] = v3;
      *(_WORD *)&unsigned char buf[12] = 2081;
      *(void *)&buf[14] = v4;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Don't have a current wifi channel histogram for this LOI id %{private}s. Using histogram using LOI type only %{private}s.", buf, 0x16u);
      if ((__p[23] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(v29, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      sub_1002251D0((uint64_t)&v35, (std::string *)__p);
      if (__p[23] >= 0) {
        signed int v18 = __p;
      }
      else {
        signed int v18 = *(unsigned char **)__p;
      }
      __int16 v19 = __dst;
      if (v26 < 0) {
        __int16 v19 = (void **)__dst[0];
      }
      *(_DWORD *)uint64_t buf = 136380931;
      *(void *)&uint8_t buf[4] = v18;
      *(_WORD *)&unsigned char buf[12] = 2081;
      *(void *)&buf[14] = v19;
      uint64_t v20 = (char *)_os_log_send_and_compose_impl();
      if ((__p[23] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::reloadWifiChannelHistogram()", "%s\n", v20);
      if (v20 != (char *)v29) {
        free(v20);
      }
    }
    uint64_t v5 = *(void *)(a1 + 128);
    *(void *)std::string __p = 0;
    *(void *)&__p[8] = 0;
    sub_100201B98(v5, (long long *)__p, v29);
    sub_100288A94((uint64_t)v32, (uint64_t)v29);
    sub_100288C48((uint64_t)v29);
    if (!v34)
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      unint64_t v6 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
      {
        CFStringRef v7 = __dst;
        if (v26 < 0) {
          CFStringRef v7 = (void **)__dst[0];
        }
        *(_DWORD *)int v29 = 136380675;
        *(void *)&v29[4] = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Don't have wifi channel histogram for current LOI type %{private}s. Using default wifi histogram", v29, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(v29, 0x65CuLL);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5DC0);
        }
        CFStringRef v21 = __dst;
        if (v26 < 0) {
          CFStringRef v21 = (void **)__dst[0];
        }
        *(_DWORD *)std::string __p = 136380675;
        *(void *)&__p[4] = v21;
        int v22 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::reloadWifiChannelHistogram()", "%s\n", v22);
        if (v22 != (char *)v29) {
          free(v22);
        }
      }
    }
  }
  CFStringRef v8 = operator new(0x68uLL);
  *(void *)&buf[16] = (char *)v8 + 104;
  *CFStringRef v8 = xmmword_101D07BB0;
  v8[1] = xmmword_101D07BC0;
  void v8[2] = xmmword_101D07BD0;
  v8[3] = xmmword_101D07BE0;
  void v8[4] = xmmword_101D07BF0;
  void v8[5] = xmmword_101D07C00;
  *((void *)v8 + 12) = 13;
  *(void *)uint64_t buf = v8;
  *(void *)&uint8_t buf[8] = (char *)v8 + 104;
  if (v34)
  {
    sub_1002D11FC((uint64_t)&v33, (void **)v29);
    if (*(void *)buf)
    {
      *(void *)&uint8_t buf[8] = *(void *)buf;
      operator delete(*(void **)buf);
    }
    *(_OWORD *)uint64_t buf = *(_OWORD *)v29;
    *(void *)&buf[16] = v30[0];
  }
  sub_1002F0B18(a1 + 632, (uint64_t)buf);
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  BOOL v9 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Reloaded wifi channel histogram", v29, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(v29, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    *(_WORD *)std::string __p = 0;
    int v17 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::reloadWifiChannelHistogram()", "%s\n", v17);
    if (v17 != (char *)v29) {
      free(v17);
    }
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
  {
    sub_10010F274((uint64_t)v29);
    uint64_t v10 = *(void *)buf;
    for (uint64_t i = *(void *)&buf[8]; v10 != i; v10 += 8)
    {
      sub_100132EFC(v30, (uint64_t)"channel: ", 9);
      CFStringRef v12 = (void *)std::ostream::operator<<();
      sub_100132EFC(v12, (uint64_t)" count: ", 8);
      BOOL v13 = (void *)std::ostream::operator<<();
      sub_100132EFC(v13, (uint64_t)", ", 2);
    }
    std::stringbuf::str();
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    int v14 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
    {
      int v15 = &v23;
      if (v24 < 0) {
        int v15 = v23;
      }
      *(void *)std::string __p = 68289283;
      *(_WORD *)&__p[8] = 2082;
      *(void *)&__p[10] = "";
      *(_WORD *)&__p[18] = 2081;
      *(void *)&__p[20] = v15;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Wifi channel histogram:\", \"Histogram\":%{private, location:escape_only}s}", __p, 0x1Cu);
    }
    if (v24 < 0) {
      operator delete(v23);
    }
    v30[0] = v16;
    if (v31 < 0) {
      operator delete((void *)v30[9]);
    }
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    std::ios::~ios();
  }
  if (*(void *)buf)
  {
    *(void *)&uint8_t buf[8] = *(void *)buf;
    operator delete(*(void **)buf);
  }
  sub_100288C48((uint64_t)v32);
  if (SHIBYTE(v26) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_10030FCA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,std::bad_cast a33)
{
  sub_100288C48(v33 - 232);
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10030FD54(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  sub_10023DF50((uint64_t)v8);
  sub_1002E7B34((uint64_t)v8, a2);
  sub_10031A9F0(a3, a1, *(_DWORD *)(a2 + 24), (uint64_t)v8, a4);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_10030FDCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10030FDE0(uint64_t a1)
{
  uint64_t v2 = a1 + 1520;
  sub_100331FA4((std::string *)(a1 + 1520), (const std::string *)(a1 + 56));
  sub_100331FAC(v2, (__n128 *)(a1 + 80));
  if (*(unsigned char *)(a1 + 53))
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    int v3 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Rapport, rapport session already running", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      unsigned int v4 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::startRapportSessionIfStopped()", "%s\n", v4);
      if (v4 != (char *)buf) {
        free(v4);
      }
    }
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    uint64_t v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Rapport, start rapport session", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      unint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::startRapportSessionIfStopped()", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    (*(void (**)(void))(**(void **)(a1 + 2560) + 88))(*(void *)(a1 + 2560));
    sub_100308DCC(a1 + 48, 1);
  }
}

double sub_1003100F4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 53))
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    uint64_t v2 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Rapport, stopping rapport session", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      uint64_t v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::stopRapportSessionIfRunning()", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
    (*(void (**)(void))(**(void **)(a1 + 2560) + 96))(*(void *)(a1 + 2560));
    sub_100331AC4(a1 + 1520);
    sub_100331AC0(a1 + 1520);
    sub_100308DCC(a1 + 48, 0);
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    int v3 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Rapport, rapport session already stopped", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      unint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::stopRapportSessionIfRunning()", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
  }
  sub_100331FA4((std::string *)(a1 + 1520), (const std::string *)(a1 + 56));
  *(void *)&double result = sub_100331FAC(a1 + 1520, (__n128 *)(a1 + 80)).n128_u64[0];
  return result;
}

void sub_100310420(void **a1, int a2)
{
  uint64_t v4 = (uint64_t)(a1 + 202);
  int v5 = sub_100231B34((uint64_t)(a1 + 202));
  if (a2)
  {
    if ((v5 & 1) == 0) {
      (*(void (**)(void *))(*a1[320] + 72))(a1[320]);
    }
    sub_1002ED4E4((uint64_t)(a1 + 79));
    sub_1000C7F88(buf);
    v19[0] = 0;
    CFStringRef v6 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsRapportUsageEnabled", 0x8000100u, kCFAllocatorNull);
    char v7 = sub_1000D29FC(*(uint64_t *)buf, (uint64_t)v6, (BOOL *)v19);
    CFRelease(v6);
    int v8 = v19[0];
    if (v24) {
      sub_1000DB0A0(v24);
    }
    if (v8) {
      char v9 = 0;
    }
    else {
      char v9 = v7;
    }
    if (v9) {
      sub_1003100F4((uint64_t)a1);
    }
    else {
      sub_10030FDE0((uint64_t)a1);
    }
    sub_100231988(v4, 1);
    if (sub_100310A40())
    {
      ((void (*)(void **))(*a1)[36])(a1);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      BOOL v13 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Starting Motion Session MiLo is starting spectating", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5DC0);
        }
        *(_WORD *)__int16 v19 = 0;
        int v17 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMicroLocationLogic::onUpdateSpectating(BOOL)", "%s\n", v17);
        if (v17 != (char *)buf) {
          free(v17);
        }
      }
      sub_10023DE60(v19);
      if (!sub_10025C930(2u)) {
        __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
      }
      v21 |= 4u;
      int v20 = 2;
      int v18 = 0;
      sub_1001EE1F4(&v18);
      *(void *)&long long v22 = sub_1001EC8C4((ssize_t)&v18);
      *((void *)&v22 + 1) = v14;
      double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
      sub_10030350C(&v22, (uint64_t)v19, (uint64_t)buf, Current_5);
      ((void (*)(void **, uint8_t *))(*a1)[19])(a1, buf);
LABEL_30:
      sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v25);
      sub_1001EF3E8((unsigned int *)&v18);
      sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)v19);
    }
  }
  else
  {
    if (v5) {
      (*(void (**)(void *))(*a1[320] + 80))(a1[320]);
    }
    sub_1002EE2D4((uint64_t)(a1 + 79));
    sub_1002EE984((uint64_t)(a1 + 79));
    sub_1002EEEA8((unsigned char *)a1 + 632);
    sub_1003100F4((uint64_t)a1);
    sub_100310AEC((uint64_t)a1, 1u);
    sub_100221264((uint64_t)(a1 + 17));
    sub_100231988(v4, 0);
    if (sub_100310A40())
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      uint64_t v10 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Stopping PDR Fence because MiLo is no longer spectating", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5DC0);
        }
        *(_WORD *)__int16 v19 = 0;
        uint64_t v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "virtual void CLMicroLocationLogic::onUpdateSpectating(BOOL)", "%s\n", v16);
        if (v16 != (char *)buf) {
          free(v16);
        }
      }
      sub_10023DE60(v19);
      if (!sub_10025C930(3u)) {
        __assert_rtn("set_status", "microlocation.pb.h", 17711, "::CLMicroLocationProto::MotionEvent_Status_IsValid(value)");
      }
      v21 |= 4u;
      int v20 = 3;
      int v18 = 0;
      sub_1001EE1F4(&v18);
      *(void *)&long long v22 = sub_1001EC8C4((ssize_t)&v18);
      *((void *)&v22 + 1) = v11;
      double v12 = j__CFAbsoluteTimeGetCurrent_5();
      sub_10030350C(&v22, (uint64_t)v19, (uint64_t)buf, v12);
      ((void (*)(void **, uint8_t *))(*a1)[19])(a1, buf);
      goto LABEL_30;
    }
  }
}

void sub_1003109D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, char a12)
{
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)(v12 + 32));
  sub_1001EF3E8(&a11);
  sub_10025CB34((wireless_diagnostics::google::protobuf::MessageLite *)&a12);
  _Unwind_Resume(a1);
}

uint64_t sub_100310A40()
{
  sub_1000C7F88(&v5);
  BOOL v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsPedestrianFenceWhenSpectatingEnabled", 0x8000100u, kCFAllocatorNull);
  unsigned int v1 = sub_1000D29FC(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  BOOL v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v2) {
    return v1;
  }
  else {
    return 0;
  }
}

void sub_100310AD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_100310AEC(uint64_t a1, unsigned int a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 52);
  if (v3 == 2)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    uint64_t v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      LOWORD(v10) = 2082;
      *(void *)((char *)&v10 + 2) = "";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"interrupting an ongoing recording\"}", buf, 0x12u);
    }
    sub_1002EA4B4((unsigned char *)(a1 + 632));
    v12[0] = 0;
    v12[1] = 0;
    *(void *)uint64_t buf = 0;
    long long v10 = 0uLL;
    uint64_t v11 = (uint64_t *)v12;
    int v13 = 2;
    int v8 = 2;
    sub_1000EDED4(&v11, &v8, &v8);
    sub_10030AF84(a1, (uint64_t)buf);
    sub_1000F5BB0((uint64_t)&v11, v12[0]);
  }
  else if (v3 == 1)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    char v7 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)uint64_t buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      LOWORD(v10) = 2082;
      *(void *)((char *)&v10 + 2) = "";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"interrupting an ongoing localization\"}", buf, 0x12u);
    }
    sub_1002EA4B4((unsigned char *)(a1 + 632));
    sub_10030B334(a1, a2);
  }
  else if (!*(unsigned char *)(a1 + 52))
  {
    uint64_t v4 = a1 + 584;
    sub_1002FE90C(v4);
  }
}

void sub_100310D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  sub_1000F5BB0(v15, a15);
  _Unwind_Resume(a1);
}

void sub_100310D44(uint64_t a1, int a2)
{
}

void sub_100310D4C(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  if (sub_1001F8820(a3, (std::locale::__imp **)(a1 + 2584)))
  {
    sub_1003311B0(a1 + 1520, a2, a4);
  }
}

void sub_100310DB8(uint64_t a1, int a2)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  uint64_t v4 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v5 = "disabled";
    if (a2) {
      uint64_t v5 = "enabled";
    }
    *(_DWORD *)uint64_t buf = 136446210;
    int v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Location services set to %{public}s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    CFStringRef v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::setLocationServicesEnabled(BOOL)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  *(unsigned char *)(a1 + 49) = a2;
  sub_10030927C(a1);
}

void sub_100310FA4(uint64_t a1, int a2)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  uint64_t v4 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = "False";
    if (a2) {
      uint64_t v5 = "True";
    }
    *(_DWORD *)uint64_t buf = 136446210;
    int v8 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Platform support for milo is set to %{public}s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    CFStringRef v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::setPlatformSupport(BOOL)", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  *(unsigned char *)(a1 + 51) = a2;
}

void sub_100311188(uint64_t a1)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  BOOL v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Got request to reset Location data. Dropping microlocation tables", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    int v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::onResetLocationData()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  sub_1001F9F3C(*(void *)(a1 + 128));
  sub_1002918E0(buf, *(void *)(a1 + 128));
  sub_100293498((uint64_t)buf);
  sub_1002CA728((void *)(a1 + 1808));
}

void sub_100311340(uint64_t a1, uint64_t a2)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  uint64_t v4 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v5 = a2;
    }
    else {
      uint64_t v5 = *(void *)a2;
    }
    v6[0] = 68289283;
    v6[1] = 0;
    __int16 v7 = 2082;
    int v8 = "";
    __int16 v9 = 2081;
    uint64_t v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Got request to reset semi-supervised model related data for\", \"clientIdentifier\":%{private, location:escape_only}s}", (uint8_t *)v6, 0x1Cu);
  }
  sub_1001FCFF0(*(void *)(a1 + 128), a2);
  sub_1002CA728((void *)(a1 + 1808));
}

uint64_t sub_100311458(uint64_t a1, int a2, void *a3)
{
  *(unsigned char *)(a1 + 104) = a2;
  if (a2)
  {
    sub_1003114E0(a1, (uint64_t)"display on");
    sub_100311684(a1);
  }
  else
  {
    sub_100310AEC(a1, 4u);
  }
  sub_1002F0F98(a1 + 632, a2, a3);

  return sub_100232FFC(a1 + 1616, a2);
}

uint64_t sub_1003114E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned __int8 *)(a1 + 1616);
  uint64_t result = sub_100231B34(a1 + 1616);
  if (result && !*(unsigned char *)(a1 + 116))
  {
    *(_DWORD *)(a1 + 108) = 0;
    *(_DWORD *)(a1 + 112) = 0;
    *(unsigned char *)(a1 + 116) = 1;
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    CFStringRef v6 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)uint64_t buf = 68289282;
      int v10 = 0;
      __int16 v11 = 2082;
      uint64_t v12 = "";
      __int16 v13 = 2082;
      uint64_t v14 = a2;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"localization retries have been exhausted, reset counters and trying another localization\", \"reason\":%{public, location:escape_only}s}", buf, 0x1Cu);
    }
    double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
    sub_10030A578("InternalClientLogic", (uint64_t)v8);
    sub_1002A5850((uint64_t)v8, 0, 0, 3u, (uint64_t)buf, Current_5);
    sub_10024DA38((wireless_diagnostics::google::protobuf::MessageLite *)v8);
    sub_10022F1EC(v4, (uint64_t)buf, 1, 0, 0);
    return sub_10026633C(buf);
  }
  return result;
}

void sub_100311658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_10026633C(va);
  _Unwind_Resume(a1);
}

uint64_t sub_100311684(uint64_t a1)
{
  uint64_t v1 = a1 + 1616;
  uint64_t result = sub_100231B34(a1 + 1616);
  if (result)
  {
    double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
    sub_10030A578("InternalClientScreenOnFallback", (uint64_t)v4);
    sub_1002A5850((uint64_t)v4, 0, 0, 3u, (uint64_t)v5, Current_5);
    sub_10024DA38((wireless_diagnostics::google::protobuf::MessageLite *)v4);
    sub_100232C50(v1, (uint64_t)v5);
    return sub_10026633C(v5);
  }
  return result;
}

void sub_100311710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_10026633C(va);
  _Unwind_Resume(a1);
}

uint64_t sub_100311734(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 104);
}

uint64_t sub_10031173C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 96);
}

void sub_100311744(uint64_t a1, char a2)
{
  *(unsigned char *)(a1 + 118) = a2;
  sub_10030927C(a1);
}

void sub_10031174C()
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  CFStringRef v0 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "Models have been regenerated. Doing nothing", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    uint64_t v1 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::onModelGenerated(CLMicroLocationProto::Model::ModelType)", "%s\n", v1);
    if (v1 != (char *)buf) {
      free(v1);
    }
  }
}

void sub_1003118D4(uint64_t a1)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  BOOL v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Models have been regenerated, Letting service Manager know", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    int v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLogic::onLearningCompleted()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  sub_1003100F4(a1);
  sub_1002CCA24((void *)(a1 + 1808));
  sub_1002EE6E0(a1 + 632);
}

void sub_100311A84(uint64_t a1, uint64_t a2)
{
  int v3 = *(_DWORD *)(a2 + 40);
  if (*(unsigned char *)(a2 + 88)) {
    BOOL v4 = v3 < 1;
  }
  else {
    BOOL v4 = 1;
  }
  if (!v4)
  {
    if (*(unsigned char *)(a1 + 80))
    {
LABEL_6:
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      if (sub_100D550A4(v3)) {
        int v6 = 2;
      }
      else {
        int v6 = 5;
      }
      unsigned int v17 = v6;
      __int16 v7 = (void *)(a1 + 56);
      *(void *)uint64_t buf = j__CFAbsoluteTimeGetCurrent_5();
      char v16 = 1;
      __p.__r_.__value_.__r.__words[0] = *(void *)a2;
      uint64_t v19 = sub_100315024(&v18);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      __int16 v11 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        if (*(char *)(a1 + 79) < 0) {
          __int16 v7 = (void *)*v7;
        }
        uint64_t v12 = (char *)operator new(0x28uLL);
        *(void *)(v12 + 29) = 0;
        *(_OWORD *)uint64_t v12 = 0u;
        *((_OWORD *)v12 + 1) = 0u;
        sub_1001E0650(a1 + 80, v12);
        sub_10006DE8C(&__p);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        int v14 = *(_DWORD *)(a2 + 40);
        *(_DWORD *)uint64_t buf = 68290563;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v22 = 2082;
        std::string::size_type v23 = "";
        __int16 v24 = 2081;
        uint64_t v25 = v7;
        __int16 v26 = 2081;
        uint64_t v27 = v12;
        __int16 v28 = 1026;
        int v29 = 1;
        __int16 v30 = 2081;
        char v31 = p_p;
        __int16 v32 = 2050;
        uint64_t v33 = v17;
        __int16 v34 = 1026;
        int v35 = v14;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationLogic, onAssociatedState event\", \"currentRTLOIType\":%{private, location:escape_only}s, \"currentRtLoiId\":%{private, location:escape_only}s, \"IsAssociated\":%{public}hhd, \"MAC Address\":%{private, location:escape_only}s, \"Band\":%{public}lu, \"Channel\":%{public}d}", buf, 0x46u);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        operator delete(v12);
      }
      sub_100311E04(*(void *)(a1 + 128));
      *(void *)uint64_t buf = &v18;
      sub_10029C380((void ***)buf);
    }
    else
    {
      uint64_t v8 = 0;
      while (v8 != 15)
      {
        if (*(unsigned __int8 *)(a1 + 81 + v8++))
        {
          if ((unint64_t)(v8 - 1) < 0xF) {
            goto LABEL_6;
          }
          break;
        }
      }
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      int v10 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)uint64_t buf = 68289026;
        *(_DWORD *)&uint8_t buf[4] = 0;
        __int16 v22 = 2082;
        std::string::size_type v23 = "";
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationLogic, onAssociatedState event ignored - nil currentRtLoiId\"}", buf, 0x12u);
      }
    }
  }
}

void sub_100311DBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char *a17)
{
  operator delete(v17);
  a17 = &a14;
  sub_10029C380((void ***)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_100311E04(uint64_t a1)
{
  if (sub_10014C3C0(a1 + 72))
  {
    uint64_t v2 = *(void *)(a1 + 272);
    if (!v2) {
      operator new();
    }
    uint64_t v3 = sub_1003268F0(v2);
    sub_10031518C(a1);
    return v3;
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    uint64_t v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Can't insert because the database is invalid", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      int v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::insertOrReplace(const std::vector<TableEntry> &) [TableEntry = CLMicroLocationAssociatedStateTable::Entry]", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    return 0;
  }
}

void sub_100312038()
{
}

uint64_t sub_100312064(uint64_t a1, void *a2)
{
  return sub_1002B8088(a1 + 2056, a2);
}

void sub_10031206C(uint64_t a1)
{
}

void sub_100312074(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  sub_10023DF50((uint64_t)v8);
  sub_1002E7DB4((uint64_t)v8, a2);
  sub_10031A9F0(a3, a1, *(_DWORD *)(a2 + 8), (uint64_t)v8, a4);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)v8);
}

void sub_1003120EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100312100(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

BOOL sub_100312108(uint64_t a1)
{
  uint64_t v1 = (uint64_t *)(a1 + 56);
  int v2 = *(char *)(a1 + 79);
  if (v2 < 0)
  {
    if (*(void *)(a1 + 64) != 7) {
      return 0;
    }
    uint64_t v1 = (uint64_t *)*v1;
  }
  else if (v2 != 7)
  {
    return 0;
  }
  int v3 = *(_DWORD *)v1;
  int v4 = *(_DWORD *)((char *)v1 + 3);
  return v3 == 1852534389 && v4 == 1853321070;
}

uint64_t sub_100312160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = (uint64_t *)a2;
  sub_100205E7C(*(void *)(a1 + 128), a2, &v20);
  if (v21)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    int v6 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "CLMicroLocationLogic got previously stored LOI Group ID for LOI ID", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      LOWORD(__p) = 0;
      __int16 v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "boost::uuids::uuid CLMicroLocationLogic::getLoiGroupIdForLoi(const boost::uuids::uuid &, const std::vector<boost::uuids::uuid> &)", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
    if (!v21) {
      sub_10020D700();
    }
    return v20;
  }
  else
  {
    sub_1002061C4(*(void *)(a1 + 128), a3, &__p);
    if (v18 == __p)
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      __int16 v11 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "CLMicroLocationLogic never before seen LOI, so starting with this LOI ID as the group ID", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5DC0);
        }
        uint64_t v15 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "boost::uuids::uuid CLMicroLocationLogic::getLoiGroupIdForLoi(const boost::uuids::uuid &, const std::vector<boost::uuids::uuid> &)", "%s\n", v15);
        if (v15 != (char *)buf) {
          free(v15);
        }
      }
      int v10 = __p;
    }
    else
    {
      if ((unint64_t)(v18 - (unsigned char *)__p) >= 0x11)
      {
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5DC0);
        }
        uint64_t v8 = qword_102419458;
        if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)uint64_t buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "CLMicroLocationLogic received multiple Loi Group IDs for LOI -- this should never happen", buf, 2u);
        }
        if (sub_10013D1A0(115, 0))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419450 != -1) {
            dispatch_once(&qword_102419450, &stru_1022A5DC0);
          }
          char v16 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 0, "boost::uuids::uuid CLMicroLocationLogic::getLoiGroupIdForLoi(const boost::uuids::uuid &, const std::vector<boost::uuids::uuid> &)", "%s\n", v16);
          if (v16 != (char *)buf) {
            free(v16);
          }
        }
      }
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
      __int16 v9 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)uint64_t buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "CLMicroLocationNotifier got previously stored LOI Group ID for list of LOI IDs", buf, 2u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A5DC0);
        }
        int v14 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "boost::uuids::uuid CLMicroLocationLogic::getLoiGroupIdForLoi(const boost::uuids::uuid &, const std::vector<boost::uuids::uuid> &)", "%s\n", v14);
        if (v14 != (char *)buf) {
          free(v14);
        }
      }
      int v10 = __p;
      int v4 = (uint64_t *)__p;
    }
    uint64_t v7 = *v4;
    if (v10)
    {
      uint64_t v18 = v10;
      operator delete(v10);
    }
  }
  return v7;
}

void sub_100312704(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100312734(uint64_t a1, uint64_t a2, _OWORD *a3, const void **a4)
{
  v27[0] = sub_100312160(a1, (uint64_t)a3, (uint64_t)a4);
  v27[1] = v8;
  __int16 v9 = *a4;
  uint64_t v10 = (uint64_t)a4[1];
  unint64_t v11 = (v10 - (uint64_t)*a4) >> 4;
  uint64_t v25 = 0;
  unint64_t v26 = 0;
  std::string __p = 0;
  sub_10017C680(&__p, v9, v10, v11);
  uint64_t v12 = v25;
  if ((unint64_t)v25 >= v26)
  {
    uint64_t v14 = (v25 - (unsigned char *)__p) >> 4;
    unint64_t v15 = v14 + 1;
    if ((unint64_t)(v14 + 1) >> 60) {
      sub_1001D7FD4();
    }
    uint64_t v16 = v26 - (void)__p;
    if ((uint64_t)(v26 - (void)__p) >> 3 > v15) {
      unint64_t v15 = v16 >> 3;
    }
    if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v17 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v17 = v15;
    }
    if (v17) {
      uint64_t v18 = (char *)sub_1000C571C((uint64_t)&v26, v17);
    }
    else {
      uint64_t v18 = 0;
    }
    uint64_t v19 = &v18[16 * v14];
    uint64_t v20 = &v18[16 * v17];
    *(_OWORD *)uint64_t v19 = *a3;
    __int16 v13 = v19 + 16;
    __int16 v22 = (char *)__p;
    char v21 = v25;
    if (v25 != __p)
    {
      do
      {
        *((_OWORD *)v19 - 1) = *((_OWORD *)v21 - 1);
        v19 -= 16;
        v21 -= 16;
      }
      while (v21 != v22);
      char v21 = (char *)__p;
    }
    std::string __p = v19;
    uint64_t v25 = v13;
    unint64_t v26 = (unint64_t)v20;
    if (v21) {
      operator delete(v21);
    }
  }
  else
  {
    *(_OWORD *)uint64_t v25 = *a3;
    __int16 v13 = v12 + 16;
  }
  uint64_t v25 = v13;
  sub_10020650C(*(void *)(a1 + 128), (uint64_t)v27, (uint64_t)&__p, a2);
  if (__p)
  {
    uint64_t v25 = (char *)__p;
    operator delete(__p);
  }
  return v27[0];
}

void sub_1003128C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
}

uint64_t sub_1003128E8(uint64_t a1, uint64_t a2, _OWORD *a3, const void **a4)
{
  return sub_100312734(a1 - 32, a2, a3, a4);
}

void sub_1003128F0(uint64_t a1)
{
  sub_100206EC0(*(void *)(a1 + 128));
  if (sub_1002083F4(*(void *)(a1 + 128)))
  {
    sub_1002EE30C((uint64_t *)(a1 + 632));
  }
}

uint64_t sub_100312944@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>, double a5@<D0>)
{
  double v12 = a5;
  uint64_t v6 = a1 + 1520;
  sub_1003315C0(a1 + 1520, &v12, a2, a3, (uint64_t)v11);
  sub_100331AC4(v6);
  sub_100331AC0(v6);
  uint64_t v7 = (void *)v11[2];
  a4[1] = 0;
  a4[2] = 0;
  *a4 = 0;
  unint64_t v8 = 0;
  if (v7)
  {
    __int16 v9 = v7;
    do
    {
      ++v8;
      __int16 v9 = (void *)*v9;
    }
    while (v9);
  }
  sub_100315434(a4, v7, 0, v8);
  return sub_100314F10((uint64_t)v11);
}

void sub_1003129D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_1003129E8(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, double *a6)
{
  long long v21 = *a5;
  char v22 = *((unsigned char *)a5 + 16);
  id v9 = sub_1002E8284(1, a3, a4, (uint64_t)&v21);
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000DC48C(__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a2;
    uint64_t v15 = *(void *)(a2 + 16);
  }
  char v16 = 1;
  sub_1002E7EF4((uint64_t)__p, v9, (uint64_t)v17);
  if (v16 && SHIBYTE(v15) < 0) {
    operator delete(__p[0]);
  }
  int v13 = 0;
  sub_1001EE1F4(&v13);
  *(void *)&long long v18 = sub_1001EC8C4((ssize_t)&v13);
  *((void *)&v18 + 1) = v10;
  sub_1002A2A7C(&v18, (uint64_t)v17, (uint64_t)v19, *a6);
  (*(void (**)(unsigned __int8 *, unsigned char *))(*(void *)a1 + 152))(a1, v19);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v20);
  sub_1001EF3E8((unsigned int *)&v13);
  sub_1002C61B8((uint64_t)v17, 0, 0, 3u, (uint64_t)v19, *a6);
  int v11 = sub_100230AA0(a1 + 1616, (uint64_t)v19);
  sub_10026633C(v19);
  sub_10024E568((wireless_diagnostics::google::protobuf::MessageLite *)v17);
  return v11 != 5;
}

void sub_100312B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, char a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

BOOL sub_100312C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5, double *a6)
{
  return sub_1003129E8((unsigned __int8 *)(a1 - 24), a2, a3, a4, a5, a6);
}

void sub_100312C08(unsigned __int8 *a1@<X0>, const std::string *a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X5>, int a7@<W6>, __n128 *a8@<X8>)
{
  __s.n128_u64[0] = a3;
  __s.n128_u64[1] = a4;
  sub_10023D8C8(&v19);
  v24 |= 4u;
  if (v21 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v21, a2);
  if (!sub_10023E790(1)) {
    __assert_rtn("set_receivedeventactiontype", "microlocation.pb.h", 12856, "::CLMicroLocationProto::ReceivedEventActionType_IsValid(value)");
  }
  int v20 = 1;
  v24 |= 0xAu;
  if (v22 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::assign(v22, (const std::string::value_type *)&__s, 0x10uLL);
  if (*(unsigned char *)(a5 + 16))
  {
    v24 |= 0x10u;
    if (v23 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::assign(v23, (const std::string::value_type *)a5, 0x10uLL);
  }
  int v18 = 0;
  sub_1001EE1F4(&v18);
  *(void *)&long long v25 = sub_1001EC8C4((ssize_t)&v18);
  *((void *)&v25 + 1) = v14;
  sub_1002A2C58(&v25, (uint64_t)&v19, (uint64_t)v26, *a6);
  (*(void (**)(unsigned __int8 *, unsigned char *))(*(void *)a1 + 152))(a1, v26);
  sub_100260A2C((wireless_diagnostics::google::protobuf::MessageLite *)&v27);
  sub_1001EF3E8((unsigned int *)&v18);
  sub_1002A5850((uint64_t)&v19, 0, 0, 3u, (uint64_t)v26, *a6);
  uint64_t v15 = a1 + 1616;
  int v16 = sub_10022F1EC(v15, (uint64_t)v26, a7, 0, 0);
  if (v16 == 3)
  {
    sub_100233208((uint64_t)v15, a8);
LABEL_15:
    char v17 = 0;
    goto LABEL_16;
  }
  if (v16 != 4)
  {
    sub_1002331F4((uint64_t)v15, a8);
    goto LABEL_15;
  }
  *a8 = __s;
  char v17 = 1;
  a8[1].n128_u8[0] = 1;
LABEL_16:
  a8[1].n128_u8[1] = v17;
  sub_10026633C(v26);
  sub_10024DA38((wireless_diagnostics::google::protobuf::MessageLite *)&v19);
}

void sub_100312EBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10024DA38((wireless_diagnostics::google::protobuf::MessageLite *)va);
  _Unwind_Resume(a1);
}

void sub_100312F10(uint64_t a1@<X0>, const std::string *a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X5>, int a7@<W6>, __n128 *a8@<X8>)
{
}

uint64_t sub_100312F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v8[0] = a3;
  v8[1] = a4;
  v7[0] = a5;
  v7[1] = a6;
  return sub_1002FE9D0(a1 + 584, a2, [objc_alloc((Class)NSUUID) initWithUUIDBytes:v8], [objc_alloc((Class)NSUUID) initWithUUIDBytes:v7]);
}

uint64_t sub_100312FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100312F18(a1 - 24, a2, a3, a4, a5, a6);
}

uint64_t sub_100312FCC(uint64_t a1, const std::string *a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = [objc_alloc((Class)NSUUID) initWithUUIDBytes:a3];

  return sub_10030A448(a1, a2, v9, a4, a5);
}

uint64_t sub_100313048(uint64_t a1, const std::string *a2, uint64_t a3, void *a4, void *a5)
{
  return sub_100312FCC(a1 - 24, a2, a3, a4, a5);
}

uint64_t sub_100313050(uint64_t a1, const std::string *a2, _OWORD *a3, long long *a4)
{
  return sub_1002FED8C(a1 + 584, a2, a3, a4);
}

uint64_t sub_100313058(uint64_t a1, const std::string *a2, _OWORD *a3, long long *a4)
{
  return sub_1002FED8C(a1 + 560, a2, a3, a4);
}

BOOL sub_100313060(uint64_t a1, uint64_t *a2)
{
  int v17 = 1;
  int v4 = (unsigned __int8 *)(a1 + 1616);
  BOOL v5 = sub_100231E78(a1 + 1616);
  BOOL v6 = sub_100231B3C((uint64_t)v4, a2, &v17);
  if (!v6) {
    goto LABEL_15;
  }
  if (!v5)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    uint64_t v10 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      int v11 = (char *)operator new(0x28uLL);
      *(void *)(v11 + 29) = 0;
      *(_OWORD *)int v11 = 0u;
      *((_OWORD *)v11 + 1) = 0u;
      sub_1001E0650((uint64_t)a2, v11);
      *(_DWORD *)uint64_t buf = 68289282;
      int v19 = 0;
      __int16 v20 = 2082;
      long long v21 = "";
      __int16 v22 = 2082;
      std::string::size_type v23 = v11;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"first service to connect to low-latency: invalidating caches\", \"ServiceUUID\":%{public, location:escape_only}s}", buf, 0x1Cu);
      operator delete(v11);
    }
    sub_10030DAA4(a1, 1);
    goto LABEL_14;
  }
  BOOL v7 = sub_100313424(a1, *a2, a2[1]);
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  unint64_t v8 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = (char *)operator new(0x28uLL);
    *(void *)(v9 + 29) = 0;
    *(_OWORD *)id v9 = 0u;
    *((_OWORD *)v9 + 1) = 0u;
    sub_1001E0650((uint64_t)a2, v9);
    *(_DWORD *)uint64_t buf = 68289538;
    int v19 = 0;
    __int16 v20 = 2082;
    long long v21 = "";
    __int16 v22 = 2082;
    std::string::size_type v23 = v9;
    __int16 v24 = 1026;
    BOOL v25 = v7;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"service connects to low-latency while already in low-latency\", \"ServiceUUID\":%{public, location:escape_only}s, \"CachedLocalizationSuccess\":%{public}hhd}", buf, 0x22u);
    operator delete(v9);
  }
  if (!v7)
  {
LABEL_14:
    double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
    sub_10030A578("InternalClientLogic", (uint64_t)v16);
    sub_1002A5850((uint64_t)v16, 0, 0, 3u, (uint64_t)buf, Current_5);
    sub_10024DA38((wireless_diagnostics::google::protobuf::MessageLite *)v16);
    sub_10022F1EC(v4, (uint64_t)buf, 1, 0, 0);
    sub_10026633C(buf);
  }
LABEL_15:
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  int v13 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_INFO))
  {
    uint64_t v14 = (char *)operator new(0x28uLL);
    *(void *)(v14 + 29) = 0;
    *(_OWORD *)uint64_t v14 = 0u;
    *((_OWORD *)v14 + 1) = 0u;
    sub_1001E0650((uint64_t)a2, v14);
    *(_DWORD *)uint64_t buf = 68289539;
    int v19 = 0;
    __int16 v20 = 2082;
    long long v21 = "";
    __int16 v22 = 2081;
    std::string::size_type v23 = v14;
    __int16 v24 = 1025;
    BOOL v25 = v6;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Adding Low Latency policy to trigger manager\", \"\":%{private, location:escape_only}s, \"Success\":%{private}hhd}", buf, 0x22u);
    operator delete(v14);
  }
  return v6;
}

void sub_1003133D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  operator delete(v17);
  _Unwind_Resume(a1);
}

BOOL sub_100313424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v21[0] = a2;
  v21[1] = a3;
  uint64_t v4 = a1 + 1808;
  sub_1002CACA0(a1 + 1808, a2, a3, &v11);
  if (v11)
  {
    LOBYTE(v19[0]) = 0;
    char v20 = 0;
    std::string __p = 0;
    int v17 = 0;
    uint64_t v18 = 0;
    memset(v15, 0, 20);
    *(void *)uint64_t buf = 0;
    BOOL v5 = sub_1002201EC(a1 + 136, &v11, (uint64_t)v19, (uint64_t)buf);
    if (v5)
    {
      if (!v20) {
        sub_10020D700();
      }
      sub_1002CA930(v4, (uint64_t *)buf, v19[0], v19[1]);
    }
    if (__p)
    {
      int v17 = __p;
      operator delete(__p);
    }
    int v13 = buf;
    sub_100314DF4((void ***)&v13);
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    BOOL v6 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
    {
      BOOL v7 = (char *)operator new(0x28uLL);
      *(void *)(v7 + 29) = 0;
      *(_OWORD *)BOOL v7 = 0u;
      *((_OWORD *)v7 + 1) = 0u;
      sub_1001E0650((uint64_t)v21, v7);
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      LOWORD(v15[0]) = 2082;
      *(void *)((char *)v15 + 2) = "";
      WORD1(v15[1]) = 2082;
      *(void *)((char *)&v15[1] + 4) = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"calcCachedLocalizationResults, didn't find model for requested service\", \"Service Uuid\":%{public, location:escape_only}s}", buf, 0x1Cu);
      operator delete(v7);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A5DC0);
      }
    }
    unint64_t v8 = qword_102419458;
    if (os_signpost_enabled((os_log_t)qword_102419458))
    {
      id v9 = (char *)operator new(0x28uLL);
      *(void *)(v9 + 29) = 0;
      *(_OWORD *)id v9 = 0u;
      *((_OWORD *)v9 + 1) = 0u;
      sub_1001E0650((uint64_t)v21, v9);
      *(_DWORD *)uint64_t buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      LOWORD(v15[0]) = 2082;
      *(void *)((char *)v15 + 2) = "";
      WORD1(v15[1]) = 2082;
      *(void *)((char *)&v15[1] + 4) = v9;
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "calcCachedLocalizationResults, didn't find model for requested service", "{\"msg%{public}.0s\":\"calcCachedLocalizationResults, didn't find model for requested service\", \"Service Uuid\":%{public, location:escape_only}s}", buf, 0x1Cu);
      operator delete(v9);
    }
    BOOL v5 = 0;
  }
  if (v12) {
    sub_1000DB0A0(v12);
  }
  return v5;
}

void sub_1003136AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, char a13)
{
  operator delete(v13);
  if (a11) {
    sub_1000DB0A0(a11);
  }
  _Unwind_Resume(a1);
}

BOOL sub_1003136F4(uint64_t a1, uint64_t *a2)
{
  return sub_100313060(a1 - 24, a2);
}

BOOL sub_1003136FC(uint64_t a1, void *a2)
{
  return sub_100231C24(a1 + 1616, a2);
}

BOOL sub_100313704(uint64_t a1, void *a2)
{
  return sub_100231C24(a1 + 1592, a2);
}

void sub_10031370C(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10 = a1 + 1808;
  std::string __p = 0;
  double v12 = 0;
  uint64_t v13 = 0;
  sub_1001DD364(&__p, *(const void **)a4, *(void *)(a4 + 8), (uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 3);
  sub_1002C75EC(v10, a2, a3, (uint64_t)&__p, a5, a6);
  if (__p)
  {
    double v12 = __p;
    operator delete(__p);
  }
}

void sub_10031379C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003137B8(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X4>, __n128 *a6@<X8>)
{
  v29[0] = a3;
  v29[1] = a4;
  sub_1002C824C(a1 + 1808, a2, a3, a4, a5, a6);
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  id v9 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = (char)a2[23];
    uint64_t v11 = *(uint64_t **)a2;
    int v12 = (char)a5[23];
    uint64_t v13 = *(uint64_t **)a5;
    uint64_t v14 = (char *)operator new(0x28uLL);
    *(_OWORD *)uint64_t v14 = 0u;
    *((_OWORD *)v14 + 1) = 0u;
    *(void *)(v14 + 29) = 0;
    sub_1001E0650((uint64_t)v29, v14);
    unint64_t v15 = a6[2].n128_u64[1];
    if (v12 >= 0) {
      int v16 = (uint64_t *)a5;
    }
    else {
      int v16 = v13;
    }
    if (v10 >= 0) {
      int v17 = (uint64_t *)a2;
    }
    else {
      int v17 = v11;
    }
    v18[0] = 68290051;
    v18[1] = 0;
    __int16 v19 = 2082;
    char v20 = "";
    __int16 v21 = 2081;
    __int16 v22 = v17;
    __int16 v23 = 2081;
    __int16 v24 = v16;
    __int16 v25 = 2081;
    unint64_t v26 = v14;
    __int16 v27 = 1025;
    int v28 = v15;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationLogic::deleteService\", \"clientId\":%{private, location:escape_only}s, \"userId\":%{private, location:escape_only}s, \"serviceId\":%{private, location:escape_only}s, \"result\":%{private}d}", (uint8_t *)v18, 0x36u);
    operator delete(v14);
  }
}

void sub_100313944(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100313958(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void **a4@<X8>)
{
}

uint64_t sub_100313960(uint64_t a1, size_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const void **a7)
{
  return sub_1002C8584((uint64_t *)(a1 + 1808), a2, a3, a4, a5, a6, a7);
}

uint64_t sub_100313968(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 *a7)
{
  return sub_1002C9BD4((void *)(a1 + 1808), a2, a3, a4, a7);
}

uint64_t sub_100313974(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, uint64_t a5, int a6)
{
  return sub_1002CA844(a1 + 1808, a2, a3, a4, a5, a6);
}

uint64_t sub_10031397C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7)
{
  long long v8 = *a6;
  char v9 = *((unsigned char *)a6 + 16);
  return sub_1002CAAC4(a1 + 1808, a2, a3, a4, a5, (uint64_t)&v8, a7);
}

uint64_t sub_1003139E0(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 2560) + 16))(*(void *)(a1 + 2560));
  int v2 = *(uint64_t (**)(void))(**(void **)(a1 + 2568) + 16);

  return v2();
}

uint64_t sub_100313A74(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 2544) + 16))(*(void *)(a1 + 2544));
  int v2 = *(uint64_t (**)(void))(**(void **)(a1 + 2552) + 16);

  return v2();
}

uint64_t sub_100313B08(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 2560) + 24))(*(void *)(a1 + 2560));
  int v2 = *(uint64_t (**)(void))(**(void **)(a1 + 2568) + 24);

  return v2();
}

uint64_t sub_100313BB4(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 2544) + 24))(*(void *)(a1 + 2544));
  int v2 = *(uint64_t (**)(void))(**(void **)(a1 + 2552) + 24);

  return v2();
}

uint64_t sub_100313C60(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 2560) + 32))(*(void *)(a1 + 2560));
  int v2 = *(uint64_t (**)(void))(**(void **)(a1 + 2568) + 32);

  return v2();
}

uint64_t sub_100313D0C(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 2544) + 32))(*(void *)(a1 + 2544));
  int v2 = *(uint64_t (**)(void))(**(void **)(a1 + 2552) + 32);

  return v2();
}

uint64_t sub_100313DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  if (qword_102419460 != -1) {
    dispatch_once(&qword_102419460, &stru_1022A5DE0);
  }
  BOOL v5 = qword_102419468;
  if (os_log_type_enabled((os_log_t)qword_102419468, OS_LOG_TYPE_DEFAULT))
  {
    if (*((unsigned char *)a4 + 48)) {
      BOOL v6 = "YES";
    }
    else {
      BOOL v6 = "NO";
    }
    v52[0] = 0;
    v52[1] = 0;
    uint64_t v53 = 0;
    BOOL v7 = &v54;
    sub_10021FB74((char *)a4 + 56, (uint64_t)v52, (uint64_t)&v54);
    if (v55 < 0) {
      BOOL v7 = v54;
    }
    long long v8 = operator new(0x28uLL);
    __int16 v50 = v8;
    long long v51 = xmmword_101D048C0;
    *long long v8 = 0u;
    v8[1] = 0u;
    *(void *)((char *)v8 + 29) = 0;
    sub_1001E0650(a2, v8);
    if (v51 >= 0) {
      char v9 = &v50;
    }
    else {
      char v9 = (void **)v50;
    }
    int v10 = *(unsigned __int8 *)(a3 + 16);
    if (*(unsigned char *)(a3 + 16))
    {
      uint64_t v11 = (char *)operator new(0x28uLL);
      __int16 v48 = (void **)v11;
      long long v49 = xmmword_101D048C0;
      *(_OWORD *)uint64_t v11 = 0u;
      *((_OWORD *)v11 + 1) = 0u;
      *(void *)(v11 + 29) = 0;
      sub_1001E0650(a3, v11);
      int v12 = (void **)&v48;
      if (v49 < 0) {
        int v12 = v48;
      }
    }
    else
    {
      __p[0] = 0;
      __p[1] = 0;
      int v12 = __p;
      uint64_t v47 = 0;
    }
    uint64_t v13 = (a4[1] - *a4) >> 5;
    *(void *)uint64_t buf = 68290307;
    *(_WORD *)unint64_t v57 = 2082;
    *(void *)&v57[2] = "";
    __int16 v58 = 2081;
    __int16 v59 = (void *)v6;
    __int16 v60 = 2081;
    uint64_t v61 = v7;
    __int16 v62 = 2081;
    uint64_t v63 = v9;
    __int16 v64 = 2081;
    uint64_t v65 = v12;
    __int16 v66 = 2049;
    uint64_t v67 = v13;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Localizer results, model\", \"isStable\":%{private, location:escape_only}s, \"clientIdentifier\":%{private, location:escape_only}s, \"serviceUUID\":%{private, location:escape_only}s, \"requestId\":%{private, location:escape_only}s, \"numberOfMicroLocations\":%{private}lu}", buf, 0x44u);
    if (v10)
    {
      if (SHIBYTE(v49) < 0)
      {
        uint64_t v14 = v48;
LABEL_22:
        operator delete(v14);
      }
    }
    else if (SHIBYTE(v47) < 0)
    {
      uint64_t v14 = (void **)__p[0];
      goto LABEL_22;
    }
    if (SHIBYTE(v51) < 0) {
      operator delete(v50);
    }
    if (SHIBYTE(v55) < 0) {
      operator delete(v54);
    }
    if (SHIBYTE(v53) < 0) {
      operator delete(v52[0]);
    }
  }
  sub_1000C7F88(buf);
  LODWORD(v54) = 0;
  CFStringRef v15 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsNumberOfLoggedProbabilityResults", 0x8000100u, kCFAllocatorNull);
  int v16 = sub_1004D08E4(*(uint64_t *)buf, (uint64_t)v15, &v54);
  CFRelease(v15);
  unsigned int v17 = v54;
  if (*(void *)v57) {
    sub_1000DB0A0(*(std::__shared_weak_count **)v57);
  }
  unsigned int v18 = 0;
  if (v16) {
    unsigned int v19 = v17;
  }
  else {
    unsigned int v19 = 20;
  }
  uint64_t v20 = *a4;
  uint64_t v21 = a4[1];
  if (*a4 != v21 && v19)
  {
    unsigned int v18 = 0;
    uint64_t v22 = v20 + 32;
    do
    {
      if (qword_102419460 != -1) {
        dispatch_once(&qword_102419460, &stru_1022A5DE0);
      }
      __int16 v23 = qword_102419468;
      if (os_log_type_enabled((os_log_t)qword_102419468, OS_LOG_TYPE_DEFAULT))
      {
        __int16 v24 = operator new(0x28uLL);
        int v54 = v24;
        long long v55 = xmmword_101D048C0;
        _OWORD *v24 = 0u;
        v24[1] = 0u;
        *(void *)((char *)v24 + 29) = 0;
        sub_1001E0650(v22 - 32, v24);
        int v25 = SHIBYTE(v55);
        unint64_t v26 = (void **)v54;
        __int16 v27 = *(void **)(v22 - 16);
        __int16 v50 = 0;
        long long v51 = 0uLL;
        sub_10021FB74((char *)a4 + 56, (uint64_t)&v50, (uint64_t)v52);
        int v28 = &v54;
        if (v25 < 0) {
          int v28 = v26;
        }
        int v29 = v52;
        if (v53 < 0) {
          int v29 = (void **)v52[0];
        }
        *(void *)uint64_t buf = 68289795;
        *(_WORD *)unint64_t v57 = 2082;
        *(void *)&v57[2] = "";
        __int16 v58 = 2081;
        __int16 v59 = v28;
        __int16 v60 = 2049;
        uint64_t v61 = v27;
        __int16 v62 = 2081;
        uint64_t v63 = v29;
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Localizer results, cluster\", \"microLocationId\":%{private, location:escape_only}s, \"probability\":\"%{private}.6f\", \"clientIdentifier\":%{private, location:escape_only}s}", buf, 0x30u);
        if (SHIBYTE(v53) < 0) {
          operator delete(v52[0]);
        }
        if (SHIBYTE(v51) < 0) {
          operator delete(v50);
        }
        if (SHIBYTE(v55) < 0) {
          operator delete(v54);
        }
      }
      ++v18;
      if (v22 == v21) {
        break;
      }
      v22 += 32;
    }
    while (v18 < v19);
    uint64_t v20 = *a4;
    uint64_t v21 = a4[1];
  }
  unint64_t v30 = v18;
  if (v18 < (unint64_t)((v21 - v20) >> 5))
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v31 = *a4;
      if (v18 < (unint64_t)((a4[1] - *a4) >> 5))
      {
        unsigned int v32 = v18 + 1;
        do
        {
          if (qword_102419460 != -1) {
            dispatch_once(&qword_102419460, &stru_1022A5DE0);
          }
          uint64_t v33 = qword_102419468;
          if (os_log_type_enabled((os_log_t)qword_102419468, OS_LOG_TYPE_DEBUG))
          {
            __int16 v34 = operator new(0x28uLL);
            int v54 = v34;
            long long v55 = xmmword_101D048C0;
            *__int16 v34 = 0u;
            v34[1] = 0u;
            *(void *)((char *)v34 + 29) = 0;
            sub_1001E0650(v31 + 32 * v30, v34);
            int v35 = SHIBYTE(v55);
            BOOL v36 = (void **)v54;
            char v37 = *(void **)(v31 + 32 * v30 + 16);
            __int16 v50 = 0;
            long long v51 = 0uLL;
            sub_10021FB74((char *)a4 + 56, (uint64_t)&v50, (uint64_t)v52);
            int v38 = &v54;
            if (v35 < 0) {
              int v38 = v36;
            }
            __int16 v39 = v52;
            if (v53 < 0) {
              __int16 v39 = (void **)v52[0];
            }
            *(void *)uint64_t buf = 68289795;
            *(_WORD *)unint64_t v57 = 2082;
            *(void *)&v57[2] = "";
            __int16 v58 = 2081;
            __int16 v59 = v38;
            __int16 v60 = 2049;
            uint64_t v61 = v37;
            __int16 v62 = 2081;
            uint64_t v63 = v39;
            _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Localizer results, cluster\", \"microLocationId\":%{private, location:escape_only}s, \"probability\":\"%{private}.6f\", \"clientIdentifier\":%{private, location:escape_only}s}", buf, 0x30u);
            if (SHIBYTE(v53) < 0) {
              operator delete(v52[0]);
            }
            if (SHIBYTE(v51) < 0) {
              operator delete(v50);
            }
            if (SHIBYTE(v55) < 0) {
              operator delete(v54);
            }
          }
          unint64_t v30 = v32;
          uint64_t v31 = *a4;
          ++v32;
        }
        while (v30 < (a4[1] - *a4) >> 5);
      }
    }
  }
  (*(void (**)(void, uint64_t, uint64_t, uint64_t *, uint64_t))(**(void **)(a1 + 2560) + 40))(*(void *)(a1 + 2560), a2, a3, a4, a5);
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t *, uint64_t))(**(void **)(a1 + 2568) + 40))(*(void *)(a1 + 2568), a2, a3, a4, a5);
}

void sub_1003144D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  operator delete(v41);
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100314594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  return sub_100313DB8(a1 - 16, a2, a3, a4, a5);
}

uint64_t sub_10031459C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 2560) + 48))();
}

uint64_t sub_1003145C4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 2544) + 48))();
}

BOOL sub_1003145EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1002CAB44(a1 + 1808, a2, a3, a4, a5, a6, a7);
}

BOOL sub_1003145F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1002CABBC(a1 + 1808, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1003145FC(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  return sub_1002CCD8C((void *)(a1 + 1808), a2, a3, a4);
}

uint64_t sub_100314604(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 2560) + 56))(*(void *)(a1 + 2560));
  int v2 = *(uint64_t (**)(void))(**(void **)(a1 + 2568) + 56);

  return v2();
}

uint64_t sub_1003146A0(uint64_t a1)
{
  (*(void (**)(void))(**(void **)(a1 + 2544) + 56))(*(void *)(a1 + 2544));
  int v2 = *(uint64_t (**)(void))(**(void **)(a1 + 2552) + 56);

  return v2();
}

BOOL sub_10031473C(uint64_t a1)
{
  return sub_100231E78(a1 + 1616);
}

uint64_t sub_100314744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  return sub_1002CC864(a1 + 1808, a2, a3, a4, a5);
}

uint64_t sub_10031474C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 2560) + 104))();
}

uint64_t sub_100314774(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 2536) + 104))();
}

BOOL sub_10031479C(uint64_t a1, uint64_t *a2, int a3)
{
  return sub_1002CA8B0(a1 + 1808, a2, a3);
}

BOOL sub_1003147A4(uint64_t a1, uint64_t *a2)
{
  return sub_1002CA8F4(a1 + 1808, a2);
}

uint64_t sub_1003147AC(uint64_t a1, long long *a2)
{
  return -1;
}

uint64_t sub_1003147CC(uint64_t a1, long long *a2)
{
  return -1;
}

uint64_t sub_1003147EC(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v4 = a1 + 2056;
  uint64_t v5 = *(unsigned __int8 *)(a3 + 23);
  if ((v5 & 0x80u) == 0) {
    BOOL v6 = (unsigned __int8 *)a3;
  }
  else {
    BOOL v6 = *(unsigned __int8 **)a3;
  }
  if ((v5 & 0x80u) != 0) {
    uint64_t v5 = *(void *)(a3 + 8);
  }
  uint64_t v7 = sub_1001E70CC((uint64_t)&v10, v6, &v6[v5]);
  sub_1002B7F64(v4, v7, v8, a2);
  return -1;
}

void sub_10031485C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_1000DC48C(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  sub_10030E8F0(a1, &__p, a3, a4, a5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1003148EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100314908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
}

void sub_100314910(uint64_t a1, uint64_t a2)
{
}

void sub_100314918(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100314928(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 2560) + 136))();
}

uint64_t sub_100314950(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 2528) + 136))();
}

uint64_t sub_100314978(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 2560) + 144))();
}

uint64_t sub_1003149A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 2528) + 144))();
}

void sub_1003149C8(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_1003149F8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 384))
  {
    sub_10026633C(a1 + 248);
    sub_100216190(a1 + 48);
    int v2 = *(void **)(a1 + 24);
    if (v2)
    {
      *(void *)(a1 + 32) = v2;
      operator delete(v2);
    }
  }
  return a1;
}

void sub_100314A44(void ***a1)
{
  uint64_t v1 = *a1;
  int v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_10021E138(v4 - 192);
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_100314AC8(const __CFArray *a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = 0uLL;
  uint64_t v5 = 0;
  v7.length = CFArrayGetCount(a1);
  v7.location = 0;
  CFArrayApplyFunction(a1, v7, (CFArrayApplierFunction)sub_100314B74, &v4);
  *(_OWORD *)a2 = v4;
  *(void *)(a2 + 16) = v5;
  uint64_t v5 = 0;
  long long v4 = 0uLL;
  BOOL v6 = (void **)&v4;
  sub_1000A7B4C(&v6);
}

void sub_100314B54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_1000A7B4C(&a12);
  _Unwind_Resume(a1);
}

void sub_100314B74(void *a1, uint64_t *a2)
{
  sub_100314C34(a1, __p);
  unint64_t v3 = a2[1];
  if (v3 >= a2[2])
  {
    uint64_t v5 = sub_1016FD368(a2, (long long *)__p);
  }
  else
  {
    if (SHIBYTE(v7) < 0)
    {
      sub_1000DC48C((unsigned char *)a2[1], __p[0], (unint64_t)__p[1]);
    }
    else
    {
      long long v4 = *(_OWORD *)__p;
      *(void *)(v3 + 16) = v7;
      *(_OWORD *)unint64_t v3 = v4;
    }
    uint64_t v5 = v3 + 24;
    a2[1] = v3 + 24;
  }
  a2[1] = v5;
  if (SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100314C0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  *(void *)(v15 + 8) = v16;
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100314C34@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  CFTypeID v4 = CFGetTypeID(a1);
  if (v4 != CFStringGetTypeID()) {
    sub_101A5C2E4();
  }
  uint64_t v5 = (char *)[a1 UTF8String];

  return sub_100134750(a2, v5);
}

void *sub_100314C98(void *result, char **a2, char **a3, unint64_t a4)
{
  if (a4)
  {
    BOOL v6 = result;
    sub_1000DA584(result, a4);
    uint64_t result = sub_100314D20((uint64_t)(v6 + 2), a2, a3, (void *)v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_100314D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1000A7B4C(&a9);
  _Unwind_Resume(a1);
}

void *sub_100314D20(uint64_t a1, char **a2, char **a3, void *a4)
{
  CFTypeID v4 = a4;
  uint64_t v10 = a4;
  uint64_t v11 = a4;
  v8[0] = a1;
  v8[1] = &v10;
  void v8[2] = &v11;
  char v9 = 0;
  if (a2 != a3)
  {
    BOOL v6 = a2;
    do
    {
      sub_100134750(v4, *v6++);
      CFTypeID v4 = v11 + 3;
      v11 += 3;
    }
    while (v6 != a3);
  }
  char v9 = 1;
  sub_1000DC52C((uint64_t)v8);
  return v4;
}

void sub_100314DB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100314DC4(id a1)
{
  qword_102419468 = (uint64_t)os_log_create("com.apple.locationd.Position", "MicrolocationQE");
}

void sub_100314DF4(void ***a1)
{
  uint64_t v1 = *a1;
  int v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 216;
        sub_100223908((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_100314E8C(void *a1)
{
  int v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_100314F10(uint64_t a1)
{
  sub_100314F4C(a1, *(void **)(a1 + 16));
  int v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_100314F4C(uint64_t a1, void *a2)
{
  if (a2)
  {
    int v2 = a2;
    do
    {
      unint64_t v3 = (void *)*v2;
      sub_100314F90((uint64_t)(v2 + 2));
      operator delete(v2);
      int v2 = v3;
    }
    while (v3);
  }
}

void sub_100314F90(uint64_t a1)
{
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 39) < 0)
  {
    int v2 = *(void **)(a1 + 16);
    operator delete(v2);
  }
}

void sub_100314FE8(uint64_t *a1)
{
  if (*a1)
  {
    sub_1000A7BA0(a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t sub_100315024(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = 0x8E38E38E38E38E39 * ((a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x38E38E38E38E38ELL) {
    sub_1001D7FD4();
  }
  uint64_t v5 = (uint64_t)(a1 + 2);
  unint64_t v6 = 0x8E38E38E38E38E39 * ((a1[2] - v2) >> 3);
  if (2 * v6 > v4) {
    unint64_t v4 = 2 * v6;
  }
  if (v6 >= 0x1C71C71C71C71C7) {
    unint64_t v7 = 0x38E38E38E38E38ELL;
  }
  else {
    unint64_t v7 = v4;
  }
  uint64_t v15 = a1 + 2;
  if (v7) {
    uint64_t v8 = (char *)sub_10021D4B8(v5, v7);
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v11 = v8;
  int v12 = &v8[72 * v3];
  uint64_t v14 = &v8[72 * v7];
  sub_100325970(v12);
  uint64_t v13 = v12 + 72;
  sub_10029C654(a1, &v11);
  uint64_t v9 = a1[1];
  sub_10029C7FC((uint64_t)&v11);
  return v9;
}

void sub_100315178(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10029C7FC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10031518C(uint64_t a1)
{
  unsigned int v2 = sub_10020F788(a1);
  if (sub_100315384() > v2) {
    return 1;
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A5DC0);
  }
  unint64_t v3 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)uint64_t buf = 136446210;
    uint64_t v8 = "MicroLocationAssociatedState";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A5DC0);
    }
    unint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::freeSpaceIfFull() [Table = CLMicroLocationAssociatedStateTable]", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  uint64_t result = sub_100208064(a1);
  if (result)
  {
    if (*(uint64_t *)(a1 + 160) <= 0) {
      uint64_t v5 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v5 = *(void *)(a1 + 160);
    }
    sub_10003CC68(a1 + 72, v5);
    return 1;
  }
  return result;
}

uint64_t sub_100315384()
{
  sub_1000C7F88(&v5);
  unsigned int v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAssociatedStateTableMaxRows", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1004D08E4(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  unsigned int v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v1) {
    return v2;
  }
  else {
    return 1000;
  }
}

void sub_100315418(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100315434(void *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    sub_1002F3410(result, a4);
    uint64_t result = (void *)sub_1003154BC((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_10031549C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_10028E178(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1003154BC(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  void v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    unint64_t v6 = a2;
    do
    {
      sub_100315568(a1, v4, (uint64_t)(v6 + 2));
      unint64_t v6 = (void *)*v6;
      uint64_t v4 = v12 + 80;
      v12 += 80;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  sub_10031561C((uint64_t)v9);
  return v4;
}

void sub_100315554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

__n128 sub_100315568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a2 = *(_OWORD *)a3;
  uint64_t v5 = (unsigned char *)(a2 + 16);
  if (*(char *)(a3 + 39) < 0)
  {
    sub_1000DC48C(v5, *(void **)(a3 + 16), *(void *)(a3 + 24));
  }
  else
  {
    long long v6 = *(_OWORD *)(a3 + 16);
    *(void *)(a2 + 32) = *(void *)(a3 + 32);
    *(_OWORD *)uint64_t v5 = v6;
  }
  unint64_t v7 = (unsigned char *)(a2 + 40);
  if (*(char *)(a3 + 63) < 0)
  {
    sub_1000DC48C(v7, *(void **)(a3 + 40), *(void *)(a3 + 48));
  }
  else
  {
    long long v8 = *(_OWORD *)(a3 + 40);
    *(void *)(a2 + 56) = *(void *)(a3 + 56);
    *(_OWORD *)unint64_t v7 = v8;
  }
  __n128 result = *(__n128 *)(a3 + 64);
  *(__n128 *)(a2 + 64) = result;
  return result;
}

void sub_100315600(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031561C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100315654((uint64_t *)a1);
  }
  return a1;
}

void sub_100315654(uint64_t *a1)
{
  unsigned int v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 80;
      sub_10021D65C(v5, v3);
    }
    while (v3 != v4);
  }
}

uint64_t sub_1003156A8(void *a1, uint64_t *a2)
{
  *sub_1000E9174(a1) = &off_1022A5E30;
  int v5 = *((char *)a2 + 23);
  if (v5 >= 0) {
    long long v6 = a2;
  }
  else {
    long long v6 = (uint64_t *)*a2;
  }
  if (v5 >= 0) {
    uint64_t v7 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    uint64_t v7 = a2[1];
  }
  CFDictionaryRef v8 = +[NSJSONSerialization JSONObjectWithData:options:error:](NSJSONSerialization, "JSONObjectWithData:options:error:", +[NSData dataWithBytes:v6 length:v7], 0, 0);
  if (v8 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    sub_10013FA80((int)v10, v8);
    sub_1004CE5C0(v11, (uint64_t)v10);
    v11[0] = &off_1022A5E30;
    sub_1004CE798((uint64_t)a1, (uint64_t)v11);
    sub_10013F374(v11);
    sub_10013F3C4(v10);
    return (uint64_t)a1;
  }
  else
  {
    sub_101A5C458();
    uint64_t result = abort_report_np();
    __break(1u);
  }
  return result;
}

void sub_1003157F4(_Unwind_Exception *a1)
{
  sub_10013F374(v1);
  _Unwind_Resume(a1);
}

CFStringRef sub_100315838()
{
  return @"MicroLocationSettings";
}

void sub_100315844(void *a1)
{
  sub_10013F374(a1);

  operator delete();
}

void sub_10031587C(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_1003158AC(double *a1@<X1>, unsigned char *a2@<X8>)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6210);
  }
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v4 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Force Recording received", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6210);
      }
      v8[0] = 0;
      long long v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "std::tuple<BOOL, const CLMicroLocationProto::RecordingEvent> CLMicroLocationLegacyEventForcedRecording::handleEvent(const cl::chrono::CFAbsoluteTimeClock::time_point &)", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
  }
  double v5 = *a1;
  sub_10023DA1C((uint64_t)v7);
  sub_100315B08((uint64_t)v7, 0, 0, 3u, (uint64_t)v8, v5);
  buf[0] = 1;
  sub_1002660C8(v10);
  *a2 = buf[0];
  sub_1002660C8(a2 + 8);
  sub_10026633C(v10);
  sub_10026633C(v8);
  sub_100251208((wireless_diagnostics::google::protobuf::MessageLite *)v7);
}

void sub_100315ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  sub_10026633C(v4);
  sub_10026633C(va1);
  sub_100251208((wireless_diagnostics::google::protobuf::MessageLite *)va);
  _Unwind_Resume(a1);
}

void sub_100315B08(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  sub_10023DFC0(a5);
  unsigned int v12 = *(_DWORD *)(a1 + 8);
  if (!sub_10023E774(v12))
  {
    uint64_t v14 = "::CLMicroLocationProto::EventType_IsValid(value)";
    int v15 = 19803;
    uint64_t v16 = "set_eventtype";
    goto LABEL_6;
  }
  int v13 = *(_DWORD *)(a5 + 128);
  *(_DWORD *)(a5 + 72) = v12;
  *(double *)(a5 + 8) = a6;
  *(unsigned char *)(a5 + 77) = a2;
  *(_DWORD *)(a5 + 128) = v13 | 0x2803;
  *(unsigned char *)(a5 + 76) = a3;
  if ((sub_10023E744(a4) & 1) == 0)
  {
    uint64_t v14 = "::CLMicroLocationProto::ConfidenceLevel_IsValid(value)";
    int v15 = 20312;
    uint64_t v16 = "set_confidencelevel";
LABEL_6:
    __assert_rtn(v16, "microlocation.pb.h", v15, v14);
  }
  *(_DWORD *)(a5 + 128) |= 0x4000u;
  *(_DWORD *)(a5 + 120) = a4;
  sub_1002E6554(a5, a1);
}

void sub_100315BF0(_Unwind_Exception *a1)
{
  sub_10026633C(v1);
  _Unwind_Resume(a1);
}

void sub_100315C04(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_100315C34(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = 0;
  uint64_t v5 = 0;
  switch(*(_DWORD *)(a2 + 72))
  {
    case 1:
      if ((*(unsigned char *)(a2 + 128) & 4) == 0) {
        goto LABEL_6;
      }
      uint64_t v6 = *(void *)(a2 + 16);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_102489AC0 + 16);
      }
      if ((*(unsigned char *)(v6 + 44) & 2) == 0) {
        goto LABEL_6;
      }
      uint64_t v5 = 0;
      if (*(_DWORD *)(v6 + 12) == 3) {
        uint64_t v3 = 1;
      }
      else {
        uint64_t v3 = 2;
      }
      break;
    case 2:
      sub_1000C7F88(&v28);
      __int16 v34 = 0;
      CFStringRef v8 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAppLaunchReasonRecordingAllowedList", 0x8000100u, kCFAllocatorNull);
      BOOL v9 = sub_1004D1D1C((uint64_t)v28, v8, (CFTypeRef *)&v34);
      CFRelease(v8);
      if (v9)
      {
        sub_100316288((const __CFArray *)v34, (uint64_t)&v31);
      }
      else
      {
        uint64_t v31 = 0;
        uint64_t v32 = 0;
        uint64_t v33 = 0;
        sub_100314C98(&v31, &off_1022A3990, (char **)&stru_1022A39D8, 9uLL);
      }
      if (v29) {
        sub_1000DB0A0(v29);
      }
      uint64_t v14 = *(void *)(a2 + 24);
      if (!v14) {
        uint64_t v14 = *(void *)(qword_102489AC0 + 24);
      }
      uint64_t v15 = sub_1000A7C40(v31, v32, *(unsigned __int8 ***)(v14 + 24));
      if (v15 == v32) {
        uint64_t v5 = 0;
      }
      else {
        uint64_t v5 = 0x300000000;
      }
      sub_1000C7F88(&v34);
      CFArrayRef v36 = 0;
      CFStringRef v16 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAppLaunchLocalizationReasonDenyList", 0x8000100u, kCFAllocatorNull);
      BOOL v17 = sub_1004D1D1C((uint64_t)v34, v16, (CFTypeRef *)&v36);
      CFRelease(v16);
      if (v17)
      {
        sub_1003163F4(v36, (uint64_t)&v28);
      }
      else
      {
        int v28 = 0;
        int v29 = 0;
        uint64_t v30 = 0;
        sub_100314C98(&v28, &off_1022A6230, (char **)&stru_1022A6238, 1uLL);
      }
      if (v35) {
        sub_1000DB0A0(v35);
      }
      uint64_t v18 = *(void *)(a2 + 24);
      if (!v18) {
        uint64_t v18 = *(void *)(qword_102489AC0 + 24);
      }
      unsigned int v19 = (std::__shared_weak_count *)sub_1000A7C40((uint64_t)v28, (uint64_t)v29, *(unsigned __int8 ***)(v18 + 24));
      uint64_t v20 = *(void *)(a2 + 24);
      uint64_t v21 = v20;
      if (!v20) {
        uint64_t v21 = *(void *)(qword_102489AC0 + 24);
      }
      uint64_t v22 = *(void *)(v21 + 16);
      if (!v22) {
        uint64_t v22 = *(void *)(qword_1024899E0 + 16);
      }
      if (*(unsigned char *)(v22 + 8)) {
        goto LABEL_53;
      }
      if (!v20) {
        uint64_t v20 = *(void *)(qword_102489AC0 + 24);
      }
      uint64_t v23 = *(void *)(v20 + 16);
      if (!v23) {
        uint64_t v23 = *(void *)(qword_1024899E0 + 16);
      }
      uint64_t v3 = 0;
      if (*(unsigned char *)(v23 + 9))
      {
        if (a3 && v19 == v29)
        {
LABEL_53:
          sub_1000C7F88(&v34);
          LOBYTE(v36) = 0;
          CFStringRef v24 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsForceLocalizeOnAllowedApps", 0x8000100u, kCFAllocatorNull);
          unsigned __int8 v25 = sub_1000D29FC((uint64_t)v34, (uint64_t)v24, (BOOL *)&v36);
          CFRelease(v24);
          int v26 = v36;
          if (v35) {
            sub_1000DB0A0(v35);
          }
          if ((v25 & (v26 != 0)) != 0) {
            uint64_t v3 = 1;
          }
          else {
            uint64_t v3 = 2;
          }
        }
      }
      __int16 v34 = (void **)&v28;
      sub_1000A7B4C(&v34);
      int v28 = (void **)&v31;
      sub_1000A7B4C(&v28);
      break;
    case 3:
    case 6:
    case 8:
    case 0xB:
      return v5 | v3;
    case 4:
      uint64_t v5 = 0;
      uint64_t v3 = 3;
      break;
    case 5:
    case 0xC:
LABEL_6:
      uint64_t v5 = 0;
      uint64_t v3 = 2;
      break;
    case 7:
      uint64_t v3 = 0;
      uint64_t v5 = (uint64_t)&_mh_execute_header;
      break;
    case 9:
      uint64_t v10 = *(void *)(a2 + 56);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_102489AC0 + 56);
      }
      uint64_t v3 = 2 * *(unsigned __int8 *)(v10 + 68);
      int v11 = *(unsigned __int8 *)(v10 + 69);
      goto LABEL_17;
    case 0xA:
      uint64_t v12 = *(void *)(a2 + 64);
      if (!v12) {
        uint64_t v12 = *(void *)(qword_102489AC0 + 64);
      }
      uint64_t v3 = 2 * *(unsigned __int8 *)(v12 + 52);
      int v11 = *(unsigned __int8 *)(v12 + 53);
LABEL_17:
      if (v11) {
        uint64_t v5 = 0x300000000;
      }
      else {
        uint64_t v5 = 0;
      }
      break;
    case 0xD:
      uint64_t v13 = *(void *)(a2 + 88);
      if (!v13) {
        uint64_t v13 = *(void *)(qword_102489AC0 + 88);
      }
      uint64_t v3 = 0;
      if (*(_DWORD *)(v13 + 12) == 2) {
        uint64_t v5 = 0x200000000;
      }
      else {
        uint64_t v5 = 0x300000000;
      }
      break;
    default:
      uint64_t v5 = 0;
      break;
  }
  return v5 | v3;
}

void sub_100316038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17)
{
  if (a17) {
    sub_1000DB0A0(a17);
  }
  *(void *)(v17 - 56) = &a10;
  sub_1000A7B4C((void ***)(v17 - 56));
  a10 = (void **)&a13;
  sub_1000A7B4C(&a10);
  _Unwind_Resume(a1);
}

BOOL sub_1003160E8(double a1, double a2, uint64_t a3, int a4, uint64_t a5, unsigned __int8 a6)
{
  int v8 = a6;
  double v9 = a1 - *(double *)&a5;
  BOOL v10 = a1 - *(double *)&a5 < a2;
  if (!a6) {
    BOOL v10 = 0;
  }
  BOOL v11 = a4 == 3 && v10;
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6238);
  }
  uint64_t v12 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    unint64_t v13 = *(void *)&v9;
    __int16 v16 = 2082;
    v15[0] = 68290050;
    if (!v8) {
      unint64_t v13 = 0xBFF0000000000000;
    }
    v15[1] = 0;
    uint64_t v17 = "";
    __int16 v18 = 1026;
    int v19 = a4;
    __int16 v20 = 2050;
    unint64_t v21 = v13;
    __int16 v22 = 2050;
    double v23 = a2;
    __int16 v24 = 1026;
    BOOL v25 = v11;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"isThrottle\", \"type\":%{public}d, \"time since last allowed timestamp(sec)\":\"%{public}.2f\", \"throttle duration(sec)\":\"%{public}.2f\", \"isThrottle\":%{public}hhd}", (uint8_t *)v15, 0x32u);
  }
  return v11;
}

uint64_t sub_100316238(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (!*(unsigned char *)(result + 8)) {
    *(unsigned char *)(result + 8) = 1;
  }
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t sub_100316254(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (!*(unsigned char *)(result + 24)) {
    *(unsigned char *)(result + 24) = 1;
  }
  *(void *)(result + 16) = v2;
  return result;
}

uint64_t sub_100316270(uint64_t a1)
{
  return *(void *)a1;
}

uint64_t sub_10031627C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_100316288(const __CFArray *a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = 0uLL;
  uint64_t v5 = 0;
  v7.length = CFArrayGetCount(a1);
  v7.location = 0;
  CFArrayApplyFunction(a1, v7, (CFArrayApplierFunction)sub_100316334, &v4);
  *(_OWORD *)a2 = v4;
  *(void *)(a2 + 16) = v5;
  uint64_t v5 = 0;
  long long v4 = 0uLL;
  uint64_t v6 = (void **)&v4;
  sub_1000A7B4C(&v6);
}

void sub_100316314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_1000A7B4C(&a12);
  _Unwind_Resume(a1);
}

void sub_100316334(void *a1, uint64_t *a2)
{
  sub_100314C34(a1, __p);
  unint64_t v3 = a2[1];
  if (v3 >= a2[2])
  {
    uint64_t v5 = sub_1016FD368(a2, (long long *)__p);
  }
  else
  {
    if (SHIBYTE(v7) < 0)
    {
      sub_1000DC48C((unsigned char *)a2[1], __p[0], (unint64_t)__p[1]);
    }
    else
    {
      long long v4 = *(_OWORD *)__p;
      *(void *)(v3 + 16) = v7;
      *(_OWORD *)unint64_t v3 = v4;
    }
    uint64_t v5 = v3 + 24;
    a2[1] = v3 + 24;
  }
  a2[1] = v5;
  if (SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1003163CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  *(void *)(v15 + 8) = v16;
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003163F4(const __CFArray *a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = 0uLL;
  uint64_t v5 = 0;
  v7.length = CFArrayGetCount(a1);
  v7.location = 0;
  CFArrayApplyFunction(a1, v7, (CFArrayApplierFunction)sub_1003164A0, &v4);
  *(_OWORD *)a2 = v4;
  *(void *)(a2 + 16) = v5;
  uint64_t v5 = 0;
  long long v4 = 0uLL;
  uint64_t v6 = (void **)&v4;
  sub_1000A7B4C(&v6);
}

void sub_100316480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  a12 = (void **)&a9;
  sub_1000A7B4C(&a12);
  _Unwind_Resume(a1);
}

void sub_1003164A0(void *a1, uint64_t *a2)
{
  sub_100314C34(a1, __p);
  unint64_t v3 = a2[1];
  if (v3 >= a2[2])
  {
    uint64_t v5 = sub_1016FD368(a2, (long long *)__p);
  }
  else
  {
    if (SHIBYTE(v7) < 0)
    {
      sub_1000DC48C((unsigned char *)a2[1], __p[0], (unint64_t)__p[1]);
    }
    else
    {
      long long v4 = *(_OWORD *)__p;
      *(void *)(v3 + 16) = v7;
      *(_OWORD *)unint64_t v3 = v4;
    }
    uint64_t v5 = v3 + 24;
    a2[1] = v3 + 24;
  }
  a2[1] = v5;
  if (SHIBYTE(v7) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100316538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  *(void *)(v15 + 8) = v16;
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100316560(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_100316590(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419BF0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419BF0))
  {
    sub_1003199CC((std::string *)&xmmword_102419BD8);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_102419BD8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419BF0);
  }
  if (byte_102419BEF < 0)
  {
    sub_1000DC48C((unsigned char *)a1, (void *)xmmword_102419BD8, *((unint64_t *)&xmmword_102419BD8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_102419BD8;
    *(void *)(a1 + 16) = unk_102419BE8;
  }
}

void sub_10031664C(_Unwind_Exception *a1)
{
}

void sub_100316664(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419C10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419C10))
  {
    sub_100319B58((std::string *)&xmmword_102419BF8);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_102419BF8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419C10);
  }
  if (byte_102419C0F < 0)
  {
    sub_1000DC48C((unsigned char *)a1, (void *)xmmword_102419BF8, *((unint64_t *)&xmmword_102419BF8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_102419BF8;
    *(void *)(a1 + 16) = unk_102419C08;
  }
}

void sub_100316720(_Unwind_Exception *a1)
{
}

void sub_100316738(uint64_t *a1)
{
  BOOL v2 = sub_10014C3C0(*a1);
  *((unsigned char *)a1 + 8) = v2;
  if (v2)
  {
    sub_1005F7B0C(*a1, "MiLoCustomLoiTable", (const char **)&off_1022A6278, 0, 0);
    char v3 = sub_1005F93E4(*a1, "MiLoCustomLoiTable");
    *((unsigned char *)a1 + 8) = v3;
    if (v3)
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6258);
      }
      long long v4 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)uint64_t buf = 136315138;
        double v9 = "MiLoCustomLoiTable";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Sucessfully created table if necessary: %s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 == -1) {
          goto LABEL_16;
        }
        goto LABEL_28;
      }
    }
    else
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6258);
      }
      uint64_t v7 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)uint64_t buf = 136446210;
        double v9 = "MiLoCustomLoiTable";
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to create table: %{public}s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A6258);
        }
        uint64_t v6 = (uint8_t *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLMiLoCustomLoiTable::initTable()", "%s\n");
        goto LABEL_26;
      }
    }
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6258);
    }
    uint64_t v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "Database is not connected so we can't intialize our table", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 == -1)
      {
LABEL_16:
        uint64_t v6 = (uint8_t *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLMiLoCustomLoiTable::initTable()", "%s\n");
LABEL_26:
        if (v6 != buf) {
          free(v6);
        }
        return;
      }
LABEL_28:
      dispatch_once(&qword_102419450, &stru_1022A6258);
      goto LABEL_16;
    }
  }
}

uint64_t sub_100316B28(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 0;
  sub_100316738((uint64_t *)a1);
  return a1;
}

uint64_t sub_100316B58(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v1 = *(void *)a1;
    if (byte_10247A7B7 >= 0) {
      BOOL v2 = &xmmword_10247A7A0;
    }
    else {
      BOOL v2 = (long long *)xmmword_10247A7A0;
    }
    sub_10014D518(v1, (uint64_t)v2);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6258);
  }
  char v3 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't insert or replace", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6258);
    }
    uint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMiLoCustomLoiTable::insertOrReplace(const std::vector<CLMiLoCustomLoiTable::Entry> &)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  return 0;
}

void sub_1003171A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,std::bad_cast a31)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a28) {
    (*(void (**)(uint64_t))(*(void *)a28 + 8))(a28);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100317238(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  if (!sub_100317500(a1, a2, (uint64_t)a3)) {
    return 0;
  }
  memset(v15, 0, sizeof(v15));
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000DC48C(__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)a2;
    uint64_t v14 = *(void *)(a2 + 16);
  }
  uint64_t v8 = *a3;
  uint64_t v7 = a3[1];
  CFAbsoluteTime Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  if (SHIBYTE(v14) < 0)
  {
    sub_1000DC48C(__p, __dst[0], (unint64_t)__dst[1]);
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)__dst;
    uint64_t v17 = v14;
  }
  uint64_t v18 = v8;
  uint64_t v19 = v7;
  CFAbsoluteTime v20 = Current_5;
  sub_100317DA0(v15, (long long *)__p);
  if (SHIBYTE(v17) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst[0]);
  }
  uint64_t v6 = sub_100316B58((uint64_t)a1);
  if ((v6 & 1) == 0)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6258);
    }
    BOOL v10 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
    {
      LOWORD(__p[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "#Warning Failed to add Service Id to LOI Id mapping", (uint8_t *)__p, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(__p, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6258);
      }
      uint64_t v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLMiLoCustomLoiTable::addServiceToCustomLoiMapping(const std::string &, const boost::uuids::uuid &)", "%s\n", v12);
      if (v12 != (char *)__p) {
        free(v12);
      }
    }
  }
  __p[0] = v15;
  sub_100319CB0((void ***)__p);
  return v6;
}

void sub_1003174AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,char *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  std::string __p = &a19;
  sub_100319CB0((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t sub_100317500(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (*((unsigned char *)a1 + 8))
  {
    *((unsigned char *)&v42.__r_.__value_.__s + 23) = 12;
    strcpy((char *)&v42, "DELETE FROM ");
    uint64_t v6 = std::string::append(&v42, "MiLoCustomLoiTable");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    uint64_t v8 = std::string::append(&v43, " WHERE (");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    BOOL v10 = std::string::append(&v44, "ServiceId");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v45.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    char v41 = 2;
    strcpy(__s, "=\"");
    uint64_t v12 = std::string::append(&v45, __s, 2uLL);
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    int v14 = *(char *)(a2 + 23);
    if (v14 >= 0) {
      uint64_t v15 = (const std::string::value_type *)a2;
    }
    else {
      uint64_t v15 = *(const std::string::value_type **)a2;
    }
    if (v14 >= 0) {
      std::string::size_type v16 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::string::size_type v16 = *(void *)(a2 + 8);
    }
    uint64_t v17 = std::string::append(&v46, v15, v16);
    long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    char v39 = 6;
    strcpy(v38, "\" AND ");
    uint64_t v19 = std::string::append(&v47, v38, 6uLL);
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    unint64_t v21 = std::string::append(&v48, "LoiId");
    long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    char v37 = 2;
    strcpy(v36, "=\"");
    double v23 = std::string::append(&v49, v36, 2uLL);
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    memset(&__p, 0, sizeof(__p));
    if (sub_1001E86C0(a3, &__p))
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      __int16 v27 = std::string::append(&v50, (const std::string::value_type *)p_p, size);
      long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
      v51.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v28;
      v27->__r_.__value_.__l.__size_ = 0;
      v27->__r_.__value_.__r.__words[2] = 0;
      v27->__r_.__value_.__r.__words[0] = 0;
      HIBYTE(v56) = 2;
      strcpy(v54, "\")");
      int v29 = std::string::append(&v51, v54, 2uLL);
      long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
      int64_t v53 = v29->__r_.__value_.__r.__words[2];
      long long v52 = v30;
      v29->__r_.__value_.__l.__size_ = 0;
      v29->__r_.__value_.__r.__words[2] = 0;
      v29->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v56) < 0) {
        operator delete(*(void **)v54);
      }
      if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v51.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v50.__r_.__value_.__l.__data_);
      }
      if (v37 < 0) {
        operator delete(*(void **)v36);
      }
      if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v49.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v48.__r_.__value_.__l.__data_);
      }
      if (v39 < 0) {
        operator delete(*(void **)v38);
      }
      if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v47.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v46.__r_.__value_.__l.__data_);
      }
      if (v41 < 0) {
        operator delete(*(void **)__s);
      }
      if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v45.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v44.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v43.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v42.__r_.__value_.__l.__data_);
      }
      if (v53 >= 0) {
        uint64_t v31 = &v52;
      }
      else {
        uint64_t v31 = (long long *)v52;
      }
      sub_10014D518(*a1, (uint64_t)v31);
    }
    std::bad_cast::bad_cast((std::bad_cast *)v54);
    *(void *)int v54 = &off_10229E8C8;
    sub_1001E91E8((uint64_t)v54);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6258);
  }
  uint64_t v32 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v54 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so can't remove service to custom LOI mapping", (uint8_t *)v54, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(v54, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6258);
    }
    LOWORD(v52) = 0;
    __int16 v34 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMiLoCustomLoiTable::removeServiceToCustomLoiMapping(const std::string &, const boost::uuids::uuid &)", "%s\n", v34);
    if (v34 != v54) {
      free(v34);
    }
  }
  return 0;
}

void sub_100317BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,void *a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,uint64_t a57,uint64_t a58,void *a59,uint64_t a60,uint64_t a61,uint64_t a62,void *__p)
{
  if (v68) {
    (*(void (**)(uint64_t))(*(void *)v68 + 8))(v68);
  }
  if (a68 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100317DA0(uint64_t *a1, long long *a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(result - 8);
  if (v7 >= v6)
  {
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - *a1) >> 4);
    unint64_t v12 = v11 + 1;
    if (v11 + 1 > 0x555555555555555) {
      sub_1001D7FD4();
    }
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a1) >> 4);
    if (2 * v13 > v12) {
      unint64_t v12 = 2 * v13;
    }
    if (v13 >= 0x2AAAAAAAAAAAAAALL) {
      unint64_t v14 = 0x555555555555555;
    }
    else {
      unint64_t v14 = v12;
    }
    v19[4] = result;
    if (v14) {
      uint64_t v15 = (char *)sub_10014F86C(result, v14);
    }
    else {
      uint64_t v15 = 0;
    }
    std::string::size_type v16 = &v15[48 * v11];
    v19[0] = v15;
    v19[1] = v16;
    v19[3] = &v15[48 * v14];
    long long v17 = *a2;
    *((void *)v16 + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string::size_type v16 = v17;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v18 = *(long long *)((char *)a2 + 24);
    *((void *)v16 + 5) = *((void *)a2 + 5);
    *(_OWORD *)(v16 + 24) = v18;
    uint64_t v19[2] = v16 + 48;
    sub_100319D54(a1, v19);
    uint64_t v10 = a1[1];
    uint64_t result = sub_100319EFC((uint64_t)v19);
  }
  else
  {
    long long v8 = *a2;
    *(void *)(v7 + 16) = *((void *)a2 + 2);
    *(_OWORD *)unint64_t v7 = v8;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v9 = *(long long *)((char *)a2 + 24);
    *(void *)(v7 + 40) = *((void *)a2 + 5);
    *(_OWORD *)(v7 + 24) = v9;
    uint64_t v10 = v7 + 48;
    a1[1] = v7 + 48;
  }
  a1[1] = v10;
  return result;
}

void sub_100317EE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100319EFC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100317EFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  *((unsigned char *)&v30.__r_.__value_.__s + 23) = 7;
  strcpy((char *)&v30, "SELECT ");
  long long v4 = std::string::append(&v30, "ServiceId");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  char v29 = 6;
  strcpy(__s, " FROM ");
  unint64_t v6 = std::string::append(&v31, __s, 6uLL);
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  long long v8 = std::string::append(&v32, "MiLoCustomLoiTable");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  char v27 = 7;
  strcpy(v26, " WHERE ");
  uint64_t v10 = std::string::append(&v33, v26, 7uLL);
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  unint64_t v12 = std::string::append(&v34, "LoiId");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  char v25 = 2;
  strcpy(v24, "=\"");
  unint64_t v14 = std::string::append(&v35, v24, 2uLL);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  memset(&__p, 0, sizeof(__p));
  if (sub_1001E86C0(a2, &__p))
  {
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    long long v18 = std::string::append(&v36, (const std::string::value_type *)p_p, size);
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v45.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    HIBYTE(v44) = 1;
    strcpy(v42, "\"");
    long long v20 = std::string::append(&v45, v42, 1uLL);
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    int64_t v38 = v20->__r_.__value_.__r.__words[2];
    long long v37 = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v44) < 0) {
      operator delete(*(void **)v42);
    }
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v45.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v36.__r_.__value_.__l.__data_);
    }
    if (v25 < 0) {
      operator delete(*(void **)v24);
    }
    if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v35.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v34.__r_.__value_.__l.__data_);
    }
    if (v27 < 0) {
      operator delete(*(void **)v26);
    }
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v33.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v32.__r_.__value_.__l.__data_);
    }
    if (v29 < 0) {
      operator delete(*(void **)__s);
    }
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v31.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v30.__r_.__value_.__l.__data_);
    }
    if (v38 >= 0) {
      long long v22 = &v37;
    }
    else {
      long long v22 = (long long *)v37;
    }
    sub_10014D518(*a1, (uint64_t)v22);
  }
  std::bad_cast::bad_cast((std::bad_cast *)v42);
  *(void *)std::string v42 = &off_10229E8C8;
  sub_1001E91E8((uint64_t)v42);
}

void sub_1003183B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,uint64_t a61,std::bad_cast a62)
{
  if (a56 < 0) {
    operator delete(__p);
  }
  a62.__vftable = (std::bad_cast_vtbl *)&a58;
  sub_1000A7B4C((void ***)&a62);
  _Unwind_Resume(a1);
}

void sub_100318758(uint64_t a1@<X0>, unsigned int a2@<W1>, void *a3@<X8>)
{
  std::string v33 = 0;
  std::string v34 = 0;
  uint64_t v35 = 0;
  if (*(unsigned char *)(a1 + 8))
  {
    *((unsigned char *)&v26.__r_.__value_.__s + 23) = 16;
    strcpy((char *)&v26, "SELECT DISTINCT ");
    unint64_t v6 = std::string::append(&v26, "LoiId");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v27.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    long long v8 = std::string::append(&v27, " FROM ");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v28.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    uint64_t v10 = std::string::append(&v28, "MiLoCustomLoiTable");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v29.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    unint64_t v12 = std::string::append(&v29, " ORDER BY ");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    unint64_t v14 = std::string::append(&v30, "LastSeenTimeStamp");
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v36.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v16 = std::string::append(&v36, " DESC LIMIT ");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v37.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v25, a2);
    if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v18 = &v25;
    }
    else {
      long long v18 = (std::string *)v25.__r_.__value_.__r.__words[0];
    }
    if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v25.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v25.__r_.__value_.__l.__size_;
    }
    long long v20 = std::string::append(&v37, (const std::string::value_type *)v18, size);
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    int64_t v32 = v20->__r_.__value_.__r.__words[2];
    long long __p = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v25.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v37.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v36.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v30.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v29.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v28.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v27.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v26.__r_.__value_.__l.__data_);
    }
    if (v32 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = (long long *)__p;
    }
    sub_10014D518(*(void *)a1, (uint64_t)p_p);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6258);
  }
  double v23 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v37.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select distinct Custom Loi Ids", (uint8_t *)&v37, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v37, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6258);
    }
    LOWORD(__p) = 0;
    long long v24 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<boost::uuids::uuid> CLMiLoCustomLoiTable::getAllCustomLoiIds(uint32_t)", "%s\n", (const char *)v24);
    if (v24 != &v37) {
      free(v24);
    }
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  if (v33)
  {
    std::string v34 = v33;
    operator delete(v33);
  }
}

void sub_100318CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

#error "100318FA8: call analysis failed (funcsize=110)"

void sub_100318FD8()
{
}

void sub_100318FEC(void *a1, int a2)
{
  if (a2) {
    sub_1001C7F8C(a1);
  }
  JUMPOUT(0x100318DECLL);
}

void sub_100318FFC(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, void *a4@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v43 = 0;
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    *((unsigned char *)&v35.__r_.__value_.__s + 23) = 16;
    strcpy((char *)&v35, "SELECT DISTINCT ");
    long long v8 = std::string::append(&v35, "LoiId");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v36.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    uint64_t v10 = std::string::append(&v36, "\tFROM ");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v37.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    unint64_t v12 = std::string::append(&v37, "MiLoCustomLoiTable");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v38.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    unint64_t v14 = std::string::append(&v38, " \tWHERE ");
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v16 = std::string::append(&v39, "ServiceId");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    long long v18 = std::string::append(&v40, " IN (SELECT ServiceUUID FROM MiLoServices WHERE UserId==\"");
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    int v20 = *(char *)(a2 + 23);
    if (v20 >= 0) {
      long long v21 = (const std::string::value_type *)a2;
    }
    else {
      long long v21 = *(const std::string::value_type **)a2;
    }
    if (v20 >= 0) {
      std::string::size_type v22 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::string::size_type v22 = *(void *)(a2 + 8);
    }
    double v23 = std::string::append(&v47, v21, v22);
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    std::string v25 = std::string::append(&v46, "\") LIMIT ");
    long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v34, a3);
    if ((v34.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string v27 = &v34;
    }
    else {
      std::string v27 = (std::string *)v34.__r_.__value_.__r.__words[0];
    }
    if ((v34.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v34.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v34.__r_.__value_.__l.__size_;
    }
    std::string v29 = std::string::append(&__str, (const std::string::value_type *)v27, size);
    long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
    int64_t v42 = v29->__r_.__value_.__r.__words[2];
    long long __p = v30;
    v29->__r_.__value_.__l.__size_ = 0;
    v29->__r_.__value_.__r.__words[2] = 0;
    v29->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v34.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v46.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v40.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v39.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v38.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v37.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v36.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v35.__r_.__value_.__l.__data_);
    }
    if (v42 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = (long long *)__p;
    }
    sub_10014D518(*(void *)a1, (uint64_t)p_p);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6258);
  }
  int64_t v32 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__str.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select GroupIDs for current user", (uint8_t *)&__str, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&__str, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6258);
    }
    LOWORD(v46.__r_.__value_.__l.__data_) = 0;
    std::string v33 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<std::string> CLMiLoCustomLoiTable::selectLoiIdsForCurrentUser(const std::string &, uint32_t)", "%s\n", (const char *)v33);
    if (v33 != &__str) {
      free(v33);
    }
  }
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
}

void sub_100319608(_Unwind_Exception *a1)
{
}

void sub_10031999C(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

double sub_1003199CC@<D0>(std::string *a1@<X8>)
{
  memset(&v3, 0, sizeof(v3));
  sub_100319A30(&v3);
  double result = *(double *)&v3.__r_.__value_.__l.__data_;
  *a1 = v3;
  return result;
}

void sub_100319A14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100319A30(std::string *a1)
{
  sub_10021D87C(a1);
  sub_100319A78(a1);
  sub_10022CAC8(a1);

  return sub_10021D950(a1);
}

uint64_t sub_100319A78(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  BOOL v2 = std::string::append(&v7, "ServiceId");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    long long v4 = __p;
  }
  else {
    long long v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_100319B24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_100319B58@<D0>(std::string *a1@<X8>)
{
  sub_100134750(&v11, "VALUES (");
  uint64_t v2 = 4;
  do
  {
    if (v2 == 4)
    {
      *((unsigned char *)&v8.__r_.__value_.__s + 23) = 0;
      v8.__r_.__value_.__s.__data_[0] = 0;
    }
    else
    {
      *((unsigned char *)&v8.__r_.__value_.__s + 23) = 2;
      strcpy((char *)&v8, ", ");
    }
    long long v3 = std::string::append(&v8, "?");
    long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    int64_t v10 = v3->__r_.__value_.__r.__words[2];
    *(_OWORD *)long long __p = v4;
    v3->__r_.__value_.__l.__size_ = 0;
    v3->__r_.__value_.__r.__words[2] = 0;
    v3->__r_.__value_.__r.__words[0] = 0;
    if (v10 >= 0) {
      std::string::size_type v5 = __p;
    }
    else {
      std::string::size_type v5 = (void **)__p[0];
    }
    if (v10 >= 0) {
      std::string::size_type v6 = HIBYTE(v10);
    }
    else {
      std::string::size_type v6 = (std::string::size_type)__p[1];
    }
    std::string::append(&v11, (const std::string::value_type *)v5, v6);
    if (SHIBYTE(v10) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v8.__r_.__value_.__l.__data_);
    }
    --v2;
  }
  while (v2);
  std::string::append(&v11, ")");
  double result = *(double *)&v11.__r_.__value_.__l.__data_;
  *a1 = v11;
  return result;
}

void sub_100319C64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100319CB0(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_100319D04((uint64_t *)v2);
    long long v3 = **a1;
    operator delete(v3);
  }
}

void sub_100319D04(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 48)
  {
    if (*(char *)(i - 25) < 0) {
      operator delete(*(void **)(i - 48));
    }
  }
  a1[1] = v2;
}

uint64_t sub_100319D54(uint64_t *a1, void *a2)
{
  uint64_t result = sub_100319DCC((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100319DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  _DWORD v13[2] = &v16;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 48);
      *(void *)(v9 - 32) = *(void *)(a3 - 32);
      *(_OWORD *)(v9 - 48) = v10;
      *(void *)(a3 - 40) = 0;
      *(void *)(a3 - 32) = 0;
      *(void *)(a3 - 48) = 0;
      long long v11 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v11;
      v9 -= 48;
      v7 -= 48;
      a3 -= 48;
    }
    while (a3 != a5);
    *((void *)&v16 + 1) = v9;
  }
  char v14 = 1;
  sub_100319E7C((uint64_t)v13);
  return a6;
}

uint64_t sub_100319E7C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100319EB4(a1);
  }
  return a1;
}

void sub_100319EB4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 48;
  }
}

uint64_t sub_100319EFC(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100319F34(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 6;
      *(void *)(a1 + 16) = v2 - 6;
      if (*((char *)v2 - 25) < 0)
      {
        operator delete(*v5);
        uint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

uint64_t sub_100319F8C()
{
  v19.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
  *(_OWORD *)&v19.__r_.__value_.__r.__words[1] = xmmword_101D04970;
  strcpy(v19.__r_.__value_.__l.__data_, "INSERT OR REPLACE INTO ");
  CFStringRef v0 = std::string::append(&v19, "MiLoCustomLoiTable");
  long long v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v20.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  uint64_t v2 = std::string::append(&v20, " (");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  sub_100316590((uint64_t)v17);
  if ((v18 & 0x80u) == 0) {
    long long v4 = v17;
  }
  else {
    long long v4 = (void **)v17[0];
  }
  if ((v18 & 0x80u) == 0) {
    std::string::size_type v5 = v18;
  }
  else {
    std::string::size_type v5 = (std::string::size_type)v17[1];
  }
  uint64_t v6 = std::string::append(&v21, (const std::string::value_type *)v4, v5);
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v22.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  uint64_t v8 = std::string::append(&v22, ") ");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_100316664((uint64_t)__p);
  if ((v16 & 0x80u) == 0) {
    long long v10 = __p;
  }
  else {
    long long v10 = (void **)__p[0];
  }
  if ((v16 & 0x80u) == 0) {
    std::string::size_type v11 = v16;
  }
  else {
    std::string::size_type v11 = (std::string::size_type)__p[1];
  }
  unint64_t v12 = std::string::append(&v23, (const std::string::value_type *)v10, v11);
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  unk_10247A7B0 = *((void *)&v12->__r_.__value_.__l + 2);
  xmmword_10247A7A0 = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  if ((char)v16 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  if ((char)v18 < 0) {
    operator delete(v17[0]);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10247A7A0, (void *)&_mh_execute_header);
}

void sub_10031A184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v40 - 25) < 0) {
    operator delete(*(void **)(v40 - 48));
  }
  if (*(char *)(v40 - 57) < 0) {
    operator delete(*(void **)(v40 - 80));
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031A230(uint64_t *a1)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A63B0);
  }
  uint64_t v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
  {
    if (*((char *)a1 + 23) >= 0) {
      long long v3 = a1;
    }
    else {
      long long v3 = (uint64_t *)*a1;
    }
    *(_DWORD *)uint64_t buf = 136315138;
    long long v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "Microlocation error report: %s", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A63B0);
    }
    std::string::size_type v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "void CLMicroLocationErrorHandling::reportError(const std::string &)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  uint64_t result = sub_10031A45C();
  if (result) {
    return AnalyticsSendEventLazy();
  }
  return result;
}

uint64_t sub_10031A45C()
{
  sub_1000C7F88(&v5);
  BOOL v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAnalyticsSendEventEnabled", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1000D29FC(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  BOOL v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v2) {
    return 1;
  }
  else {
    return v1 ^ 1u;
  }
}

void sub_10031A4F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

NSDictionary *sub_10031A50C(uint64_t a1)
{
  CFStringRef v3 = @"errorType";
  int v1 = *(uint64_t **)(a1 + 32);
  if (*((char *)v1 + 23) < 0) {
    int v1 = (uint64_t *)*v1;
  }
  BOOL v4 = +[NSString stringWithUTF8String:v1];
  return +[NSDictionary dictionaryWithObjects:&v4 forKeys:&v3 count:1];
}

uint64_t sub_10031A59C(uint64_t a1)
{
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A63B0);
  }
  BOOL v2 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)uint64_t buf = 138412290;
    uint64_t v6 = a1;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "Microlocation error report: %@", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 0))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A63B0);
    }
    BOOL v4 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "void CLMicroLocationErrorHandling::reportError(NSString *)", "%s\n", v4);
    if (v4 != (char *)buf) {
      free(v4);
    }
  }
  uint64_t result = sub_10031A45C();
  if (result) {
    return AnalyticsSendEventLazy();
  }
  return result;
}

NSDictionary *sub_10031A7A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  CFStringRef v3 = @"errorType";
  uint64_t v4 = v1;
  return +[NSDictionary dictionaryWithObjects:&v4 forKeys:&v3 count:1];
}

void sub_10031A818(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_10031A848(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419C30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419C30))
  {
    sub_10031D6CC((std::string *)&xmmword_102419C18);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_102419C18, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419C30);
  }
  if (byte_102419C2F < 0)
  {
    sub_1000DC48C((unsigned char *)a1, (void *)xmmword_102419C18, *((unint64_t *)&xmmword_102419C18 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_102419C18;
    *(void *)(a1 + 16) = unk_102419C28;
  }
}

void sub_10031A904(_Unwind_Exception *a1)
{
}

void sub_10031A91C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419C50, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419C50))
  {
    sub_1001E8568((std::string *)&xmmword_102419C38);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_102419C38, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419C50);
  }
  if (byte_102419C4F < 0)
  {
    sub_1000DC48C((unsigned char *)a1, (void *)xmmword_102419C38, *((unint64_t *)&xmmword_102419C38 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_102419C38;
    *(void *)(a1 + 16) = unk_102419C48;
  }
}

void sub_10031A9D8(_Unwind_Exception *a1)
{
}

uint64_t sub_10031A9F0(uint64_t a1, _OWORD *a2, int a3, uint64_t a4, double a5)
{
  *(_OWORD *)a1 = *a2;
  *(double *)(a1 + 16) = a5;
  *(_DWORD *)(a1 + 24) = a3;
  sub_1002603DC(a1 + 32, a4);
  return a1;
}

void sub_10031AA30(uint64_t *a1)
{
  BOOL v2 = sub_10014C3C0(*a1);
  *((unsigned char *)a1 + 8) = v2;
  if (v2)
  {
    sub_10031AE70(a1);
    sub_1005F7B0C(*a1, "MicroLocationLoggedEvents", (const char **)&off_1022A63F0, 0, 0);
    char v3 = sub_1005F93E4(*a1, "MicroLocationLoggedEvents");
    *((unsigned char *)a1 + 8) = v3;
    if (v3)
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A63D0);
      }
      uint64_t v4 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)uint64_t buf = 136380675;
        long long v9 = "MicroLocationLoggedEvents";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Sucessfully created table if necessary: %{private}s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 == -1) {
          goto LABEL_16;
        }
        goto LABEL_28;
      }
    }
    else
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A63D0);
      }
      long long v7 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)uint64_t buf = 136446210;
        long long v9 = "MicroLocationLoggedEvents";
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to create table: %{public}s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A63D0);
        }
        uint64_t v6 = (uint8_t *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLMicroLocationLoggedEventsTable::initTable()", "%s\n");
        goto LABEL_26;
      }
    }
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A63D0);
    }
    uint64_t v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Database is not connected so we can't intialize our table", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 == -1)
      {
LABEL_16:
        uint64_t v6 = (uint8_t *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationLoggedEventsTable::initTable()", "%s\n");
LABEL_26:
        if (v6 != buf) {
          free(v6);
        }
        return;
      }
LABEL_28:
      dispatch_once(&qword_102419450, &stru_1022A63D0);
      goto LABEL_16;
    }
  }
}

uint64_t sub_10031AE40(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 0;
  sub_10031AA30((uint64_t *)a1);
  return a1;
}

uint64_t sub_10031AE70(uint64_t *a1)
{
  uint64_t result = sub_1005F93E4(*a1, "MicroLocationLoggedEvents");
  if (result)
  {
    uint64_t v3 = *a1;
    return sub_1001E1DE8(v3, (uint64_t *)&off_1022A63F0, 5, "MicroLocationLoggedEvents");
  }
  return result;
}

uint64_t sub_10031AED8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v1 = *(void *)a1;
    if (byte_10247A7CF >= 0) {
      BOOL v2 = &xmmword_10247A7B8;
    }
    else {
      BOOL v2 = (long long *)xmmword_10247A7B8;
    }
    sub_10014D518(v1, (uint64_t)v2);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A63D0);
  }
  uint64_t v3 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't insert or replace", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A63D0);
    }
    uint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationLoggedEventsTable::insertOrReplace(const std::vector<Entry> &)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  return 0;
}

void sub_10031B554(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,std::bad_cast a33)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  if (a30) {
    (*(void (**)(uint64_t))(*(void *)a30 + 8))(a30);
  }
  _Unwind_Resume(exception_object);
}

void sub_10031B5E8(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  *((unsigned char *)&v44.__r_.__value_.__s + 23) = 15;
  strcpy((char *)&v44, "SELECT * FROM (");
  char v43 = 7;
  strcpy(__s, "SELECT ");
  uint64_t v8 = std::string::append(&v44, __s, 7uLL);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v45.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_10031A848((uint64_t)__p);
  if ((v41 & 0x80u) == 0) {
    long long v10 = __p;
  }
  else {
    long long v10 = (void **)__p[0];
  }
  if ((v41 & 0x80u) == 0) {
    std::string::size_type v11 = v41;
  }
  else {
    std::string::size_type v11 = (std::string::size_type)__p[1];
  }
  unint64_t v12 = std::string::append(&v45, (const std::string::value_type *)v10, v11);
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v46.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  char v14 = std::string::append(&v46, " FROM ");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v47.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  int v16 = *(char *)(a2 + 23);
  if (v16 >= 0) {
    long long v17 = (const std::string::value_type *)a2;
  }
  else {
    long long v17 = *(const std::string::value_type **)a2;
  }
  if (v16 >= 0) {
    std::string::size_type v18 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    std::string::size_type v18 = *(void *)(a2 + 8);
  }
  std::string v19 = std::string::append(&v47, v17, v18);
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  v48.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  std::string v21 = std::string::append(&v48, " ORDER BY ");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v49.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  std::string v23 = std::string::append(&v49, "ReceivedTimestamp");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  v50.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  std::string v25 = std::string::append(&v50, " DESC LIMIT ");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v55.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&v39, a3);
  if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string v27 = &v39;
  }
  else {
    std::string v27 = (std::string *)v39.__r_.__value_.__r.__words[0];
  }
  if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v39.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v39.__r_.__value_.__l.__size_;
  }
  std::string v29 = std::string::append(&v55, (const std::string::value_type *)v27, size);
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v51.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  std::string v31 = std::string::append(&v51, ") ORDER BY ");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  v54.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  int v33 = *(char *)(a4 + 23);
  if (v33 >= 0) {
    std::string v34 = (const std::string::value_type *)a4;
  }
  else {
    std::string v34 = *(const std::string::value_type **)a4;
  }
  if (v33 >= 0) {
    std::string::size_type v35 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    std::string::size_type v35 = *(void *)(a4 + 8);
  }
  std::string v36 = std::string::append(&v54, v34, v35);
  long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
  int64_t v53 = v36->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long v52 = v37;
  v36->__r_.__value_.__l.__size_ = 0;
  v36->__r_.__value_.__r.__words[2] = 0;
  v36->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v54.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v51.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v39.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v55.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v50.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v49.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v48.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v47.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v46.__r_.__value_.__l.__data_);
  }
  if ((char)v41 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  if (v43 < 0) {
    operator delete(*(void **)__s);
  }
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v44.__r_.__value_.__l.__data_);
  }
  if (v53 >= 0) {
    std::string v38 = v52;
  }
  else {
    std::string v38 = (void **)v52[0];
  }
  sub_10014D518(a1, (uint64_t)v38);
}

void sub_10031BAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,void **buf)
{
  uint64_t buf = &a47;
  sub_10021A7F0(&buf);
  if (v58) {
    (*(void (**)(uint64_t))(*(void *)v58 + 8))(v58);
  }
  if (a56 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10031BE88(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int **a4@<X3>, unsigned int a5@<W4>, void *a6@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v74 = 0;
    unint64_t v75 = 0;
    unint64_t v76 = 0;
    if (*(unsigned char *)(a2 + 24))
    {
      sub_100134750(&v79, "ReceivedTimestamp");
      *((unsigned char *)&__s.__r_.__value_.__s + 23) = 3;
      strcpy((char *)&__s, " > ");
      unint64_t v12 = std::string::append(&v79, (const std::string::value_type *)&__s, 3uLL);
      long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
      v73.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v73.__r_.__value_.__l.__data_ = v13;
      v12->__r_.__value_.__l.__size_ = 0;
      v12->__r_.__value_.__r.__words[2] = 0;
      v12->__r_.__value_.__r.__words[0] = 0;
      if (!*(unsigned char *)(a2 + 24)) {
        sub_10020D700();
      }
      int v14 = *(char *)(a2 + 23);
      if (v14 >= 0) {
        long long v15 = (const std::string::value_type *)a2;
      }
      else {
        long long v15 = *(const std::string::value_type **)a2;
      }
      if (v14 >= 0) {
        std::string::size_type v16 = *(unsigned __int8 *)(a2 + 23);
      }
      else {
        std::string::size_type v16 = *(void *)(a2 + 8);
      }
      long long v17 = std::string::append(&v73, v15, v16);
      std::string::size_type v18 = v17->__r_.__value_.__r.__words[0];
      v77.__r_.__value_.__r.__words[0] = v17->__r_.__value_.__l.__size_;
      *(std::string::size_type *)((char *)v77.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v17->__r_.__value_.__r.__words[1] + 7);
      char v19 = HIBYTE(v17->__r_.__value_.__r.__words[2]);
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      long long v20 = v75;
      if ((unint64_t)v75 >= v76)
      {
        unint64_t v23 = 0xAAAAAAAAAAAAAAABLL * (v75 - v74);
        unint64_t v24 = v23 + 1;
        if (v23 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_1001D7FD4();
        }
        if (0x5555555555555556 * ((uint64_t)(v76 - (void)v74) >> 3) > v24) {
          unint64_t v24 = 0x5555555555555556 * ((uint64_t)(v76 - (void)v74) >> 3);
        }
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v76 - (void)v74) >> 3) >= 0x555555555555555) {
          unint64_t v25 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v25 = v24;
        }
        v82 = &v76;
        if (v25) {
          long long v26 = (char *)sub_1000DA5D8((uint64_t)&v76, v25);
        }
        else {
          long long v26 = 0;
        }
        std::string::size_type v27 = (std::string::size_type)&v26[24 * v23];
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v26;
        buf.__r_.__value_.__l.__size_ = v27;
        v81 = &v26[24 * v25];
        *(void *)std::string::size_type v27 = v18;
        *(void *)(v27 + 8) = v77.__r_.__value_.__r.__words[0];
        *(void *)(v27 + 15) = *(std::string::size_type *)((char *)v77.__r_.__value_.__r.__words + 7);
        *(unsigned char *)(v27 + 23) = v19;
        v77.__r_.__value_.__r.__words[0] = 0;
        *(std::string::size_type *)((char *)v77.__r_.__value_.__r.__words + 7) = 0;
        buf.__r_.__value_.__r.__words[2] = v27 + 24;
        sub_1001D7FEC((uint64_t *)&v74, &buf);
        std::string v21 = v75;
        sub_1001D8184((uint64_t)&buf);
      }
      else
      {
        *unint64_t v75 = v18;
        v20[1] = v77.__r_.__value_.__r.__words[0];
        *(std::string::size_type *)((char *)v20 + 15) = *(std::string::size_type *)((char *)v77.__r_.__value_.__r.__words
                                                                                  + 7);
        *((unsigned char *)v20 + 23) = v19;
        std::string v21 = v20 + 3;
      }
      unint64_t v75 = v21;
      if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v73.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__s.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v79.__r_.__value_.__l.__data_);
      }
    }
    if (*(unsigned char *)(a3 + 24))
    {
      sub_100134750(&v79, "ReceivedTimestamp");
      *((unsigned char *)&__s.__r_.__value_.__s + 23) = 3;
      strcpy((char *)&__s, "<= ");
      std::string v28 = std::string::append(&v79, (const std::string::value_type *)&__s, 3uLL);
      long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      v73.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v73.__r_.__value_.__l.__data_ = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      if (!*(unsigned char *)(a3 + 24)) {
        sub_10020D700();
      }
      int v30 = *(char *)(a3 + 23);
      if (v30 >= 0) {
        std::string v31 = (const std::string::value_type *)a3;
      }
      else {
        std::string v31 = *(const std::string::value_type **)a3;
      }
      if (v30 >= 0) {
        std::string::size_type v32 = *(unsigned __int8 *)(a3 + 23);
      }
      else {
        std::string::size_type v32 = *(void *)(a3 + 8);
      }
      int v33 = std::string::append(&v73, v31, v32);
      std::string::size_type v34 = v33->__r_.__value_.__r.__words[0];
      v77.__r_.__value_.__r.__words[0] = v33->__r_.__value_.__l.__size_;
      *(std::string::size_type *)((char *)v77.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v33->__r_.__value_.__r.__words[1] + 7);
      char v35 = HIBYTE(v33->__r_.__value_.__r.__words[2]);
      v33->__r_.__value_.__l.__size_ = 0;
      v33->__r_.__value_.__r.__words[2] = 0;
      v33->__r_.__value_.__r.__words[0] = 0;
      std::string v36 = v75;
      if ((unint64_t)v75 >= v76)
      {
        unint64_t v38 = 0xAAAAAAAAAAAAAAABLL * (v75 - v74);
        unint64_t v39 = v38 + 1;
        if (v38 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_1001D7FD4();
        }
        if (0x5555555555555556 * ((uint64_t)(v76 - (void)v74) >> 3) > v39) {
          unint64_t v39 = 0x5555555555555556 * ((uint64_t)(v76 - (void)v74) >> 3);
        }
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v76 - (void)v74) >> 3) >= 0x555555555555555) {
          unint64_t v40 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v40 = v39;
        }
        v82 = &v76;
        if (v40) {
          unsigned __int8 v41 = (char *)sub_1000DA5D8((uint64_t)&v76, v40);
        }
        else {
          unsigned __int8 v41 = 0;
        }
        std::string::size_type v42 = (std::string::size_type)&v41[24 * v38];
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v41;
        buf.__r_.__value_.__l.__size_ = v42;
        v81 = &v41[24 * v40];
        *(void *)std::string::size_type v42 = v34;
        *(void *)(v42 + 8) = v77.__r_.__value_.__r.__words[0];
        *(void *)(v42 + 15) = *(std::string::size_type *)((char *)v77.__r_.__value_.__r.__words + 7);
        *(unsigned char *)(v42 + 23) = v35;
        v77.__r_.__value_.__r.__words[0] = 0;
        *(std::string::size_type *)((char *)v77.__r_.__value_.__r.__words + 7) = 0;
        buf.__r_.__value_.__r.__words[2] = v42 + 24;
        sub_1001D7FEC((uint64_t *)&v74, &buf);
        long long v37 = v75;
        sub_1001D8184((uint64_t)&buf);
      }
      else
      {
        *unint64_t v75 = v34;
        v36[1] = v77.__r_.__value_.__r.__words[0];
        *(std::string::size_type *)((char *)v36 + 15) = *(std::string::size_type *)((char *)v77.__r_.__value_.__r.__words
                                                                                  + 7);
        *((unsigned char *)v36 + 23) = v35;
        long long v37 = v36 + 3;
      }
      unint64_t v75 = v37;
      if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v73.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__s.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v79.__r_.__value_.__l.__data_);
      }
    }
    std::string v44 = *a4;
    char v43 = a4[1];
    if (v44 != v43)
    {
      memset(&v73, 0, sizeof(v73));
      __s.__r_.__value_.__r.__words[0] = (std::string::size_type)&v73;
      do
      {
        std::to_string(&buf, *v44);
        sub_1002748CC((uint64_t **)&__s, (long long *)&buf);
        if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(buf.__r_.__value_.__l.__data_);
        }
        ++v44;
      }
      while (v44 != v43);
      sub_100134750(&v77, "EventType");
      char v71 = 5;
      strcpy(v70, " IN (");
      std::string v45 = std::string::append(&v77, v70, 5uLL);
      long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
      __s.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v46;
      v45->__r_.__value_.__l.__size_ = 0;
      v45->__r_.__value_.__r.__words[2] = 0;
      v45->__r_.__value_.__r.__words[0] = 0;
      sub_1001D4530(",", (uint64_t *)&v73, (uint64_t)__p);
      if ((v69 & 0x80u) == 0) {
        std::string v47 = __p;
      }
      else {
        std::string v47 = (void **)__p[0];
      }
      if ((v69 & 0x80u) == 0) {
        std::string::size_type v48 = v69;
      }
      else {
        std::string::size_type v48 = (std::string::size_type)__p[1];
      }
      std::string v49 = std::string::append(&__s, (const std::string::value_type *)v47, v48);
      long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
      v79.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v50;
      v49->__r_.__value_.__l.__size_ = 0;
      v49->__r_.__value_.__r.__words[2] = 0;
      v49->__r_.__value_.__r.__words[0] = 0;
      std::string v51 = std::string::append(&v79, ")");
      std::string::size_type v52 = v51->__r_.__value_.__r.__words[0];
      v78[0] = v51->__r_.__value_.__l.__size_;
      *(void *)((char *)v78 + 7) = *(std::string::size_type *)((char *)&v51->__r_.__value_.__r.__words[1] + 7);
      char v53 = HIBYTE(v51->__r_.__value_.__r.__words[2]);
      v51->__r_.__value_.__l.__size_ = 0;
      v51->__r_.__value_.__r.__words[2] = 0;
      v51->__r_.__value_.__r.__words[0] = 0;
      std::string v54 = v75;
      if ((unint64_t)v75 >= v76)
      {
        unint64_t v57 = 0xAAAAAAAAAAAAAAABLL * (v75 - v74);
        unint64_t v58 = v57 + 1;
        if (v57 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_1001D7FD4();
        }
        if (0x5555555555555556 * ((uint64_t)(v76 - (void)v74) >> 3) > v58) {
          unint64_t v58 = 0x5555555555555556 * ((uint64_t)(v76 - (void)v74) >> 3);
        }
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v76 - (void)v74) >> 3) >= 0x555555555555555) {
          unint64_t v59 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v59 = v58;
        }
        v82 = &v76;
        if (v59) {
          __int16 v60 = (char *)sub_1000DA5D8((uint64_t)&v76, v59);
        }
        else {
          __int16 v60 = 0;
        }
        std::string::size_type v61 = (std::string::size_type)&v60[24 * v57];
        buf.__r_.__value_.__r.__words[0] = (std::string::size_type)v60;
        buf.__r_.__value_.__l.__size_ = v61;
        v81 = &v60[24 * v59];
        uint64_t v62 = v78[0];
        *(void *)std::string::size_type v61 = v52;
        *(void *)(v61 + 8) = v62;
        *(void *)(v61 + 15) = *(void *)((char *)v78 + 7);
        *(unsigned char *)(v61 + 23) = v53;
        v78[0] = 0;
        *(void *)((char *)v78 + 7) = 0;
        buf.__r_.__value_.__r.__words[2] = v61 + 24;
        sub_1001D7FEC((uint64_t *)&v74, &buf);
        uint64_t v56 = v75;
        sub_1001D8184((uint64_t)&buf);
      }
      else
      {
        std::string::size_type v55 = v78[0];
        *unint64_t v75 = v52;
        v54[1] = v55;
        *(std::string::size_type *)((char *)v54 + 15) = *(void *)((char *)v78 + 7);
        *((unsigned char *)v54 + 23) = v53;
        uint64_t v56 = v54 + 3;
      }
      unint64_t v75 = v56;
      if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v79.__r_.__value_.__l.__data_);
      }
      if ((char)v69 < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__s.__r_.__value_.__l.__data_);
      }
      if (v71 < 0) {
        operator delete(*(void **)v70);
      }
      if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v77.__r_.__value_.__l.__data_);
      }
      buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&v73;
      sub_1000A7B4C((void ***)&buf);
    }
    sub_100134750(&buf, "");
    if (v74 != v75)
    {
      sub_1001D4530(" AND ", (uint64_t *)&v74, (uint64_t)&v73);
      uint64_t v63 = std::string::insert(&v73, 0, " WHERE ");
      std::string::size_type v64 = v63->__r_.__value_.__r.__words[0];
      v79.__r_.__value_.__r.__words[0] = v63->__r_.__value_.__l.__size_;
      *(std::string::size_type *)((char *)v79.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v63->__r_.__value_.__r.__words[1] + 7);
      char v65 = HIBYTE(v63->__r_.__value_.__r.__words[2]);
      v63->__r_.__value_.__l.__size_ = 0;
      v63->__r_.__value_.__r.__words[2] = 0;
      v63->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(buf.__r_.__value_.__l.__data_);
      }
      buf.__r_.__value_.__r.__words[0] = v64;
      buf.__r_.__value_.__l.__size_ = v79.__r_.__value_.__r.__words[0];
      *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v79.__r_.__value_.__r.__words + 7);
      *((unsigned char *)&buf.__r_.__value_.__s + 23) = v65;
      if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v73.__r_.__value_.__l.__data_);
      }
    }
    uint64_t v66 = *(void *)a1;
    std::operator+<char>();
    sub_100134750(&v79, "ReceivedTimestamp");
    sub_10031B5E8(v66, (uint64_t)&v73, a5, (uint64_t)&v79);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A63D0);
  }
  long long v22 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select", (uint8_t *)&buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A63D0);
    }
    LOWORD(v74) = 0;
    uint64_t v67 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<CLMicroLocationLoggedEventsTable::Entry> CLMicroLocationLoggedEventsTable::selectByFields(const std::optional<std::string> &, const std::optional<std::string> &, const std::vector<CLMicroLocationProto::EventType> &, uint32_t)", "%s\n", (const char *)v67);
    if (v67 != &buf) {
      free(v67);
    }
  }
  *a6 = 0;
  a6[1] = 0;
  a6[2] = 0;
}

void sub_10031C78C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,char *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,uint64_t a47,char **__p,uint64_t a49,int a50,__int16 a51,char a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,__int16 a58,char a59,char a60)
{
  if (a53 < 0) {
    operator delete(__p);
  }
  if (a16 < 0) {
    operator delete(a11);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a45 < 0) {
    operator delete(a40);
  }
  long long __p = &a30;
  sub_1000A7B4C((void ***)&__p);
  a30 = &a37;
  sub_1000A7B4C((void ***)&a30);
  _Unwind_Resume(a1);
}

void sub_10031C948(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int **a4@<X3>, unsigned int a5@<W4>, void *a6@<X8>)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000DC48C(__dst, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)a2;
    uint64_t v15 = *(void *)(a2 + 16);
  }
  char v16 = 1;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_1000DC48C(__p, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a3;
    uint64_t v12 = *(void *)(a3 + 16);
  }
  char v13 = 1;
  sub_10031BE88(a1, (uint64_t)__dst, (uint64_t)__p, a4, a5, a6);
  if (v13 && SHIBYTE(v12) < 0) {
    operator delete(__p[0]);
  }
  if (v16)
  {
    if (SHIBYTE(v15) < 0) {
      operator delete(__dst[0]);
    }
  }
}

void sub_10031CA40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a22)
  {
    if (a21 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10031CA84(uint64_t a1@<X0>, uint64_t a2@<X1>, int **a3@<X2>, uint64_t a4@<X8>)
{
  LOBYTE(v13[0]) = 0;
  char v15 = 0;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000DC48C(__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a2;
    uint64_t v11 = *(void *)(a2 + 16);
  }
  char v12 = 1;
  sub_10031BE88(a1, (uint64_t)v13, (uint64_t)__p, a3, 1u, v16);
  if (v12 && SHIBYTE(v11) < 0) {
    operator delete(__p[0]);
  }
  if (v15 && v14 < 0) {
    operator delete(v13[0]);
  }
  uint64_t v7 = v16[0];
  if (v16[0] == v16[1])
  {
    char v9 = 0;
    *(unsigned char *)a4 = 0;
  }
  else
  {
    long long v8 = *(_OWORD *)v16[0];
    *(_OWORD *)(a4 + 12) = *(_OWORD *)(v16[0] + 12);
    *(_OWORD *)a4 = v8;
    sub_1002603DC(a4 + 32, v7 + 32);
    char v9 = 1;
  }
  *(unsigned char *)(a4 + 336) = v9;
  v13[0] = v16;
  sub_10021A7F0((void ***)v13);
}

void sub_10031CB90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  if (a23)
  {
    if (a22 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031CBEC(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    *((unsigned char *)&v37.__r_.__value_.__s + 23) = 12;
    strcpy((char *)&v37, "DELETE FROM ");
    uint64_t v4 = std::string::append(&v37, "MicroLocationLoggedEvents");
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v38.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    uint64_t v6 = std::string::append(&v38, " WHERE ");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    long long v8 = std::string::append(&v39, "ReceivedTimestamp");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    long long v10 = std::string::append(&v40, " IN (");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    char v12 = std::string::append(&v41, "SELECT ");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v42.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    char v14 = std::string::append(&v42, "ReceivedTimestamp");
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    char v16 = std::string::append(&v43, " FROM ");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v18 = std::string::append(&v44, "MicroLocationLoggedEvents");
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v45.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    long long v20 = std::string::append(&v45, " ORDER BY ");
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    long long v22 = std::string::append(&v46, "ReceivedTimestamp");
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    unint64_t v24 = std::string::append(&v47, " LIMIT ");
    long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v36, a2);
    if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v26 = &v36;
    }
    else {
      long long v26 = (std::string *)v36.__r_.__value_.__r.__words[0];
    }
    if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v36.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v36.__r_.__value_.__l.__size_;
    }
    std::string v28 = std::string::append(&v48, (const std::string::value_type *)v26, size);
    long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    int v30 = std::string::append(&v51, ")");
    long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    int64_t v50 = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)long long __p = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v51.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v36.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v48.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v46.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v45.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v44.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v43.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v42.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v41.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v40.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v39.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v38.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v37.__r_.__value_.__l.__data_);
    }
    if (v50 >= 0) {
      std::string::size_type v32 = __p;
    }
    else {
      std::string::size_type v32 = (void **)__p[0];
    }
    sub_10014D518(*(void *)a1, (uint64_t)v32);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A63D0);
  }
  int v33 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v51.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't deleteOldestRows", (uint8_t *)&v51, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v51, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A63D0);
    }
    LOWORD(__p[0]) = 0;
    char v35 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationLoggedEventsTable::deleteOldestRows(uint64_t)", "%s\n", (const char *)v35);
    if (v35 != &v51) {
      free(v35);
    }
  }
  return 0;
}

void sub_10031D280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,void *__p,uint64_t a62,int a63)
{
  if (v66) {
    (*(void (**)(uint64_t))(*(void *)v66 + 8))(v66);
  }
  if (a66 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10031D428(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_10031D458@<X0>(sqlite3_stmt *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sqlite3_column_blob(a1, a2);
  int v7 = sqlite3_column_bytes(a1, a2);
  if (!v6) {
    sub_101A5C620();
  }
  int v8 = v7;
  sub_10023DF50(a3);
  uint64_t result = wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(v9, v6, v8);
  if ((result & 1) == 0)
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    sub_100134750(&v12, "Unable to parse protobuf");
    std::runtime_error::runtime_error(exception, &v12);
    exception->__vftable = (std::runtime_error_vtbl *)&off_10229F018;
  }
  return result;
}

void sub_10031D538(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_100260A2C(v15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

uint64_t sub_10031D580(uint64_t *a1, _OWORD *a2, uint64_t *a3, int *a4, uint64_t a5)
{
  uint64_t v6 = *a1;
  unint64_t v7 = 0xCF3CF3CF3CF3CF3DLL * ((a1[1] - *a1) >> 4);
  unint64_t v8 = v7 + 1;
  if (v7 + 1 > 0xC30C30C30C30C3) {
    sub_1001D7FD4();
  }
  uint64_t v13 = (uint64_t)(a1 + 2);
  unint64_t v14 = 0xCF3CF3CF3CF3CF3DLL * ((a1[2] - v6) >> 4);
  if (2 * v14 > v8) {
    unint64_t v8 = 2 * v14;
  }
  if (v14 >= 0x61861861861861) {
    unint64_t v15 = 0xC30C30C30C30C3;
  }
  else {
    unint64_t v15 = v8;
  }
  long long v25 = a1 + 2;
  if (v15) {
    char v16 = (char *)sub_10021AA20(v13, v15);
  }
  else {
    char v16 = 0;
  }
  int v17 = &v16[336 * v7];
  v22[0] = v16;
  v22[1] = v17;
  long long v23 = v17;
  unint64_t v24 = &v16[336 * v15];
  uint64_t v18 = *a3;
  int v19 = *a4;
  *(_OWORD *)int v17 = *a2;
  *((void *)v17 + 2) = v18;
  *((_DWORD *)v17 + 6) = v19;
  sub_1002603DC(v17 + 32, a5);
  v23 += 336;
  sub_10021A9A8(a1, v22);
  uint64_t v20 = a1[1];
  sub_10021AB1C((uint64_t)v22);
  return v20;
}

void sub_10031D6B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10021AB1C((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_10031D6CC@<D0>(std::string *a1@<X8>)
{
  memset(&v3, 0, sizeof(v3));
  sub_10031D730(&v3);
  double result = *(double *)&v3.__r_.__value_.__l.__data_;
  *a1 = v3;
  return result;
}

void sub_10031D714(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031D730(std::string *a1)
{
  sub_10031D780(a1);
  sub_1001E83A8(a1);
  sub_10031D854(a1);
  sub_10031D934(a1);

  return sub_1001E8488(a1);
}

uint64_t sub_10031D780(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 0;
  v7.__r_.__value_.__s.__data_[0] = 0;
  BOOL v2 = std::string::append(&v7, "EventUUID");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_10031D820(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031D854(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  BOOL v2 = std::string::append(&v7, "EventType");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_10031D900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031D934(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  BOOL v2 = std::string::append(&v7, "Event");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_10031D9E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031DA14()
{
  v19.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
  *(_OWORD *)&v19.__r_.__value_.__r.__words[1] = xmmword_101D04970;
  strcpy(v19.__r_.__value_.__l.__data_, "INSERT OR REPLACE INTO ");
  CFStringRef v0 = std::string::append(&v19, "MicroLocationLoggedEvents");
  long long v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v20.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  BOOL v2 = std::string::append(&v20, " (");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  sub_10031A848((uint64_t)v17);
  if ((v18 & 0x80u) == 0) {
    uint64_t v4 = v17;
  }
  else {
    uint64_t v4 = (void **)v17[0];
  }
  if ((v18 & 0x80u) == 0) {
    std::string::size_type v5 = v18;
  }
  else {
    std::string::size_type v5 = (std::string::size_type)v17[1];
  }
  uint64_t v6 = std::string::append(&v21, (const std::string::value_type *)v4, v5);
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v22.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  unint64_t v8 = std::string::append(&v22, ") ");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_10031A91C((uint64_t)__p);
  if ((v16 & 0x80u) == 0) {
    long long v10 = __p;
  }
  else {
    long long v10 = (void **)__p[0];
  }
  if ((v16 & 0x80u) == 0) {
    std::string::size_type v11 = v16;
  }
  else {
    std::string::size_type v11 = (std::string::size_type)__p[1];
  }
  std::string v12 = std::string::append(&v23, (const std::string::value_type *)v10, v11);
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  unk_10247A7C8 = *((void *)&v12->__r_.__value_.__l + 2);
  xmmword_10247A7B8 = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  if ((char)v16 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  if ((char)v18 < 0) {
    operator delete(v17[0]);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10247A7B8, (void *)&_mh_execute_header);
}

void sub_10031DC0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v40 - 25) < 0) {
    operator delete(*(void **)(v40 - 48));
  }
  if (*(char *)(v40 - 57) < 0) {
    operator delete(*(void **)(v40 - 80));
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

char *sub_10031DCB8@<X0>(uint64_t *a1@<X8>)
{
  long long v1 = a1;
  *a1 = sub_10031E13C();
  *((unsigned char *)v1 + 8) = sub_10031E1EC();
  char v2 = sub_10031E298();
  *((_OWORD *)v1 + 1) = 0u;
  v1 += 2;
  *((unsigned char *)v1 - 7) = v2;
  *((_OWORD *)v1 + 1) = 0u;
  uint64_t v34 = (uint64_t)v1;
  *((_DWORD *)v1 + 8) = 1065353216;
  char v3 = sub_10031E348();
  sub_1000C7F88(&v38);
  double v37 = 0.0;
  CFStringRef v4 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumWiFiDurationForFingerprintRecording", 0x8000100u, kCFAllocatorNull);
  int v5 = sub_1000A6A10((uint64_t)v38, (uint64_t)v4, &v37);
  CFRelease(v4);
  double v6 = v37;
  if (v39) {
    sub_1000DB0A0(v39);
  }
  if (!v5) {
    double v6 = 0.0;
  }
  sub_1000C7F88(&v38);
  LODWORD(v37) = 0;
  CFStringRef v7 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumWiFiNumberOfMeasurementsForFingerprintRecording", 0x8000100u, kCFAllocatorNull);
  int v8 = sub_1004D08E4((uint64_t)v38, (uint64_t)v7, &v37);
  CFRelease(v7);
  uint64_t v9 = LODWORD(v37);
  if (v39) {
    sub_1000DB0A0(v39);
  }
  if (v8) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 1;
  }
  uint64_t v33 = v10;
  uint64_t v32 = sub_10031E3F8();
  char v11 = sub_10031E4A8();
  sub_1000C7F88(&v38);
  double v37 = 0.0;
  CFStringRef v12 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumBleDurationForFingerprintRecording", 0x8000100u, kCFAllocatorNull);
  int v13 = sub_1000A6A10((uint64_t)v38, (uint64_t)v12, &v37);
  CFRelease(v12);
  double v14 = v37;
  if (v39) {
    sub_1000DB0A0(v39);
  }
  if (!v13) {
    double v14 = 0.0;
  }
  sub_1000C7F88(&v38);
  LODWORD(v37) = 0;
  CFStringRef v15 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumBleNumberOfMeasurementsForFingerprintRecording", 0x8000100u, kCFAllocatorNull);
  int v16 = sub_1004D08E4((uint64_t)v38, (uint64_t)v15, &v37);
  CFRelease(v15);
  uint64_t v17 = LODWORD(v37);
  if (v39) {
    sub_1000DB0A0(v39);
  }
  if (!v16) {
    uint64_t v17 = 0;
  }
  uint64_t v18 = sub_10031E558();
  if (sub_10031E608()) {
    char v19 = sub_10098AE84();
  }
  else {
    char v19 = 0;
  }
  sub_1000C7F88(&v38);
  double v37 = 0.0;
  CFStringRef v20 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumUwbRangeDurationForFingerprintRecording", 0x8000100u, kCFAllocatorNull);
  int v21 = sub_1000A6A10((uint64_t)v38, (uint64_t)v20, &v37);
  CFRelease(v20);
  double v22 = v37;
  if (v39) {
    sub_1000DB0A0(v39);
  }
  sub_1000C7F88(&v38);
  LODWORD(v37) = 0;
  CFStringRef v23 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumUwbNumberOfMeasurementsForFingerprintRecording", 0x8000100u, kCFAllocatorNull);
  int v24 = sub_1004D08E4((uint64_t)v38, (uint64_t)v23, &v37);
  CFRelease(v23);
  uint64_t v31 = LODWORD(v37);
  if (v39) {
    sub_1000DB0A0(v39);
  }
  uint64_t v25 = sub_10031E6B8();
  LODWORD(v37) = 1;
  std::string v38 = &v37;
  long long v26 = sub_100321CF4(v34, (unsigned int *)&v37, (uint64_t)&unk_101D0B290, (_DWORD **)&v38);
  v26[24] = v3;
  *(_DWORD *)(v26 + 25) = *(_DWORD *)v36;
  *((_DWORD *)v26 + 7) = *(_DWORD *)&v36[3];
  *((double *)v26 + 4) = v6;
  *((void *)v26 + 5) = v33;
  *((void *)v26 + 6) = v32;
  LODWORD(v37) = 5;
  std::string v38 = &v37;
  std::string::size_type v27 = sub_100321CF4(v34, (unsigned int *)&v37, (uint64_t)&unk_101D0B290, (_DWORD **)&v38);
  v27[24] = v11;
  *(_DWORD *)(v27 + 25) = *(_DWORD *)v35;
  *((_DWORD *)v27 + 7) = *(_DWORD *)&v35[3];
  *((double *)v27 + 4) = v14;
  *((void *)v27 + 5) = v17;
  *((void *)v27 + 6) = v18;
  LODWORD(v37) = 6;
  std::string v38 = &v37;
  double result = sub_100321CF4(v34, (unsigned int *)&v37, (uint64_t)&unk_101D0B290, (_DWORD **)&v38);
  uint64_t v29 = v31;
  if (!v24) {
    uint64_t v29 = 0;
  }
  double v30 = 0.0;
  result[24] = v19;
  if (v21) {
    double v30 = v22;
  }
  *((double *)result + 4) = v30;
  *((void *)result + 5) = v29;
  *((void *)result + 6) = v25;
  return result;
}

void sub_10031E0D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
}

uint64_t sub_10031E13C()
{
  sub_1000C7F88(&v5);
  unsigned int v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumTotalNumberOfMeasurementsForFingerprint", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1004D08E4(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  uint64_t v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v1) {
    return v2;
  }
  else {
    return 2;
  }
}

void sub_10031E1D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031E1EC()
{
  sub_1000C7F88(&v5);
  BOOL v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsProcessOffChannelRssiAP", 0x8000100u, kCFAllocatorNull);
  unsigned int v1 = sub_1000D29FC(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  BOOL v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v2) {
    return v1;
  }
  else {
    return 0;
  }
}

void sub_10031E27C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031E298()
{
  sub_1000C7F88(&v5);
  BOOL v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsProcessInvalidRssiAP", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1000D29FC(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  BOOL v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v2) {
    return 1;
  }
  else {
    return v1 ^ 1u;
  }
}

void sub_10031E32C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031E348()
{
  sub_1000C7F88(&v5);
  BOOL v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMeasurementProcessingWifiRssiEnable", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1000D29FC(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  BOOL v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v2) {
    return 1;
  }
  else {
    return v1 ^ 1u;
  }
}

void sub_10031E3DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031E3F8()
{
  sub_1000C7F88(&v5);
  unsigned int v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaximumNumberOfWifiRssiMeasurementsForFingerprint", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1004D08E4(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  uint64_t v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v1) {
    return v2;
  }
  else {
    return 100;
  }
}

void sub_10031E48C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031E4A8()
{
  sub_1000C7F88(&v5);
  BOOL v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMeasurementProcessingBleLeechEnable", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1000D29FC(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  BOOL v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v2) {
    return 1;
  }
  else {
    return v1 ^ 1u;
  }
}

void sub_10031E53C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031E558()
{
  sub_1000C7F88(&v5);
  unsigned int v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaximumNumberOfBleRssiMeasurementsForFingerprint", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1004D08E4(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  uint64_t v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v1) {
    return v2;
  }
  else {
    return 100;
  }
}

void sub_10031E5EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031E608()
{
  sub_1000C7F88(&v5);
  BOOL v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMeasurementProcessingUwbRangeEnable", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1000D29FC(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  BOOL v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v2) {
    return 1;
  }
  else {
    return v1 ^ 1u;
  }
}

void sub_10031E69C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031E6B8()
{
  sub_1000C7F88(&v5);
  unsigned int v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMaximumNumberOfUwbRangeMeasurementsForFingerprint", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1004D08E4(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  uint64_t v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v1) {
    return v2;
  }
  else {
    return 100;
  }
}

void sub_10031E74C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

char *sub_10031E768@<X0>(uint64_t *a1@<X8>)
{
  int v1 = a1;
  *a1 = sub_10031E13C();
  *((unsigned char *)v1 + 8) = sub_10031E1EC();
  char v2 = sub_10031E298();
  *((_OWORD *)v1 + 1) = 0u;
  v1 += 2;
  *((unsigned char *)v1 - 7) = v2;
  *((_OWORD *)v1 + 1) = 0u;
  uint64_t v34 = (uint64_t)v1;
  *((_DWORD *)v1 + 8) = 1065353216;
  char v3 = sub_10031E348();
  sub_1000C7F88(&v38);
  double v37 = 0.0;
  CFStringRef v4 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumWiFiDurationForFingerprintLocalizing", 0x8000100u, kCFAllocatorNull);
  int v5 = sub_1000A6A10((uint64_t)v38, (uint64_t)v4, &v37);
  CFRelease(v4);
  double v6 = v37;
  if (v39) {
    sub_1000DB0A0(v39);
  }
  if (!v5) {
    double v6 = 0.0;
  }
  sub_1000C7F88(&v38);
  LODWORD(v37) = 0;
  CFStringRef v7 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumWiFiNumberOfMeasurementsForFingerprintLocalizing", 0x8000100u, kCFAllocatorNull);
  int v8 = sub_1004D08E4((uint64_t)v38, (uint64_t)v7, &v37);
  CFRelease(v7);
  uint64_t v9 = LODWORD(v37);
  if (v39) {
    sub_1000DB0A0(v39);
  }
  if (v8) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 1;
  }
  uint64_t v33 = v10;
  uint64_t v32 = sub_10031E3F8();
  char v11 = sub_10031E4A8();
  sub_1000C7F88(&v38);
  double v37 = 0.0;
  CFStringRef v12 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumBleDurationForFingerprintLocalizing", 0x8000100u, kCFAllocatorNull);
  int v13 = sub_1000A6A10((uint64_t)v38, (uint64_t)v12, &v37);
  CFRelease(v12);
  double v14 = v37;
  if (v39) {
    sub_1000DB0A0(v39);
  }
  if (!v13) {
    double v14 = 0.0;
  }
  sub_1000C7F88(&v38);
  LODWORD(v37) = 0;
  CFStringRef v15 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumBleNumberOfMeasurementsForFingerprintLocalizing", 0x8000100u, kCFAllocatorNull);
  int v16 = sub_1004D08E4((uint64_t)v38, (uint64_t)v15, &v37);
  CFRelease(v15);
  uint64_t v17 = LODWORD(v37);
  if (v39) {
    sub_1000DB0A0(v39);
  }
  if (!v16) {
    uint64_t v17 = 0;
  }
  uint64_t v18 = sub_10031E558();
  if (sub_10031E608()) {
    char v19 = sub_10098AE84();
  }
  else {
    char v19 = 0;
  }
  sub_1000C7F88(&v38);
  double v37 = 0.0;
  CFStringRef v20 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumUwbRangeDurationForFingerprintLocalizing", 0x8000100u, kCFAllocatorNull);
  int v21 = sub_1000A6A10((uint64_t)v38, (uint64_t)v20, &v37);
  CFRelease(v20);
  double v22 = v37;
  if (v39) {
    sub_1000DB0A0(v39);
  }
  sub_1000C7F88(&v38);
  LODWORD(v37) = 0;
  CFStringRef v23 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsMinimumUwbNumberOfMeasurementsForFingerprintLocalizing", 0x8000100u, kCFAllocatorNull);
  int v24 = sub_1004D08E4((uint64_t)v38, (uint64_t)v23, &v37);
  CFRelease(v23);
  uint64_t v31 = LODWORD(v37);
  if (v39) {
    sub_1000DB0A0(v39);
  }
  uint64_t v25 = sub_10031E6B8();
  LODWORD(v37) = 1;
  std::string v38 = &v37;
  long long v26 = sub_100321CF4(v34, (unsigned int *)&v37, (uint64_t)&unk_101D0B290, (_DWORD **)&v38);
  v26[24] = v3;
  *(_DWORD *)(v26 + 25) = *(_DWORD *)v36;
  *((_DWORD *)v26 + 7) = *(_DWORD *)&v36[3];
  *((double *)v26 + 4) = v6;
  *((void *)v26 + 5) = v33;
  *((void *)v26 + 6) = v32;
  LODWORD(v37) = 5;
  std::string v38 = &v37;
  std::string::size_type v27 = sub_100321CF4(v34, (unsigned int *)&v37, (uint64_t)&unk_101D0B290, (_DWORD **)&v38);
  v27[24] = v11;
  *(_DWORD *)(v27 + 25) = *(_DWORD *)v35;
  *((_DWORD *)v27 + 7) = *(_DWORD *)&v35[3];
  *((double *)v27 + 4) = v14;
  *((void *)v27 + 5) = v17;
  *((void *)v27 + 6) = v18;
  LODWORD(v37) = 6;
  std::string v38 = &v37;
  double result = sub_100321CF4(v34, (unsigned int *)&v37, (uint64_t)&unk_101D0B290, (_DWORD **)&v38);
  uint64_t v29 = v31;
  if (!v24) {
    uint64_t v29 = 0;
  }
  double v30 = 0.0;
  result[24] = v19;
  if (v21) {
    double v30 = v22;
  }
  *((double *)result + 4) = v30;
  *((void *)result + 5) = v29;
  *((void *)result + 6) = v25;
  return result;
}

void sub_10031EB84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
}

uint64_t sub_10031EBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned int *)(a2 + 8);
  CFStringRef v4 = &v5;
  uint64_t v2 = *(unsigned int *)(a2 + 40);
  if (v2 == -1) {
    sub_1003217E4();
  }
  double v6 = &v4;
  ((void (*)(uint64_t ***, uint64_t))*(&off_1022A6510 + v2))(&v6, a2 + 16);
  return v5;
}

uint64_t sub_10031EC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(a2 + 8) == *(_DWORD *)(a3 + 8)) {
    return sub_1002FC7A4(a2 + 16, a3 + 16);
  }
  else {
    return 0;
  }
}

void *sub_10031EC70(uint64_t a1)
{
  v7[0] = off_1022A65B8;
  v7[3] = v7;
  v6[0] = off_1022A6648;
  v6[3] = v6;
  v5[0] = off_1022A66D8;
  void v5[3] = v5;
  sub_100322338((uint64_t)v8, (uint64_t)v7, (uint64_t)v6, (uint64_t)v5);
  sub_1003222B4(v5);
  sub_100322140(v6);
  sub_100321FF0(v7);
  uint64_t v2 = *(unsigned int *)(a1 + 40);
  if (v2 == -1) {
    sub_1003217E4();
  }
  CFStringRef v4 = v8;
  ((void (*)(void **, uint64_t))off_1022A6528[v2])(&v4, a1 + 16);
  sub_1003222B4(v10);
  sub_100322140(v9);
  return sub_100321FF0(v8);
}

void sub_10031EDB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v8 = va_arg(va2, void);
  uint64_t v10 = va_arg(va2, void);
  uint64_t v11 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  sub_1003222B4((uint64_t *)va);
  sub_100322140((uint64_t *)va1);
  sub_100321FF0(va2);
  _Unwind_Resume(a1);
}

void *sub_10031EDE4(void *a1)
{
  sub_1003222B4(a1 + 8);
  sub_100322140(a1 + 4);

  return sub_100321FF0(a1);
}

void *sub_10031EE28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10023D634((void *)a2);
  int v4 = *(_DWORD *)(a1 + 8);
  if (!sub_10023E734(v4)) {
    __assert_rtn("set_datatype", "microlocation.pb.h", 10856, "::CLMicroLocationProto::DataType_IsValid(value)");
  }
  int v5 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a2 + 16) = v4;
  *(void *)(a2 + 8) = *(void *)a1;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a2 + 36) = v5 | 0xF;
  uint64_t v6 = *(void *)(a2 + 24);
  if (!v6) {
    operator new();
  }
  v12[0] = off_1022A6768;
  v12[1] = v6;
  v12[3] = v12;
  v11[0] = off_1022A67F8;
  v11[1] = v6;
  v11[3] = v11;
  v10[0] = off_1022A6888;
  v10[1] = v6;
  v10[3] = v10;
  sub_100322AA4((uint64_t)v13, (uint64_t)v12, (uint64_t)v11, (uint64_t)v10);
  sub_100322A20(v10);
  sub_100322848(v11);
  sub_10032266C(v12);
  uint64_t v7 = *(unsigned int *)(a1 + 40);
  if (v7 == -1) {
    sub_1003217E4();
  }
  uint64_t v9 = v13;
  ((void (*)(void **, uint64_t))*(&off_1022A6540 + v7))(&v9, a1 + 16);
  sub_100322A20(v15);
  sub_100322848(v14);
  return sub_10032266C(v13);
}

void sub_10031EFF4()
{
}

void *sub_10031F05C(void *a1)
{
  sub_100322A20(a1 + 8);
  sub_100322848(a1 + 4);

  return sub_10032266C(a1);
}

uint64_t sub_10031F0A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = *(_DWORD *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 8);
  double v6 = sub_1002E86D0(a1);
  v16.__r_.__value_.__r.__words[0] = 0;
  int v17 = 0;
  switch(v4)
  {
    case 1:
      uint64_t v7 = *(void *)(a1 + 16);
      if (!v7) {
        uint64_t v7 = *(void *)(qword_102489958 + 16);
      }
      *(void *)&long long v18 = *(void *)(v7 + 24);
      sub_10031F318((uint64_t)&v16, &v18);
      break;
    case 2:
      uint64_t v8 = *(void *)(a1 + 24);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_102489958 + 24);
      }
      goto LABEL_15;
    case 3:
      uint64_t v8 = *(void *)(a1 + 32);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_102489958 + 32);
      }
      goto LABEL_15;
    case 4:
      uint64_t v8 = *(void *)(a1 + 40);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_102489958 + 40);
      }
      goto LABEL_15;
    case 5:
      uint64_t v8 = *(void *)(a1 + 48);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_102489958 + 48);
      }
      int v9 = *(_DWORD *)(v8 + 64);
      if ((v9 & 0x80) != 0)
      {
        sub_1002E594C(*(uint64_t ***)(v8 + 48), &v18);
        if (v19)
        {
LABEL_23:
          sub_10031F35C((uint64_t)&v16, &v18);
        }
        else
        {
          uint64_t v14 = *(void *)(a1 + 48);
          if (!v14) {
            uint64_t v14 = *(void *)(qword_102489958 + 48);
          }
          sub_100322CE4((uint64_t)&v16, &v16, *(std::string **)(v14 + 48));
        }
      }
      else if ((v9 & 8) != 0)
      {
LABEL_15:
        sub_100322CE4((uint64_t)&v16, &v16, *(std::string **)(v8 + 24));
      }
      break;
    case 6:
      uint64_t v10 = *(void *)(a1 + 56);
      if (!v10) {
        uint64_t v10 = *(void *)(qword_102489958 + 56);
      }
      sub_1002E594C(*(uint64_t ***)(v10 + 32), &v18);
      if (v19) {
        goto LABEL_23;
      }
      uint64_t v11 = *(void *)(a1 + 56);
      if (!v11) {
        uint64_t v11 = *(void *)(qword_102489958 + 56);
      }
      sub_100322CE4((uint64_t)&v16, &v16, *(std::string **)(v11 + 32));
      break;
    default:
      break;
  }
  sub_1001F073C((uint64_t)v15, (uint64_t)&v16);
  float v12 = v6;
  *(void *)a2 = v5;
  *(_DWORD *)(a2 + 8) = v4;
  *(float *)(a2 + 12) = v12;
  sub_100321B94(a2 + 16, (uint64_t)v15);
  sub_1001F014C((uint64_t)v15);
  return sub_1001F014C((uint64_t)&v16);
}

void sub_10031F2E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1001F014C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10031F318(uint64_t a1, void *a2)
{
  if (*(_DWORD *)(a1 + 24)) {
    sub_100322E44(a1, a2);
  }
  else {
    *(void *)a1 = *a2;
  }
  return a1;
}

uint64_t sub_10031F35C(uint64_t a1, _OWORD *a2)
{
  if (*(_DWORD *)(a1 + 24) == 1) {
    *(_OWORD *)a1 = *a2;
  }
  else {
    sub_100322EA8(a1, a2);
  }
  return a1;
}

uint64_t sub_10031F3A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = *(_DWORD *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 8);
  int v6 = *(_DWORD *)(a1 + 20);
  v16.__r_.__value_.__r.__words[0] = 0;
  int v17 = 0;
  uint64_t v7 = *(void *)(a1 + 24);
  if (!v7)
  {
    uint64_t v7 = *(void *)(qword_102489968 + 24);
    int v10 = *(_DWORD *)(v7 + 28);
    if ((v10 & 1) == 0)
    {
      if ((v10 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
LABEL_14:
    *(void *)std::string buf = *(void *)(v7 + 8);
    sub_10031F318((uint64_t)&v16, buf);
    goto LABEL_15;
  }
  int v8 = *(_DWORD *)(v7 + 28);
  if (v8) {
    goto LABEL_14;
  }
  if ((v8 & 2) == 0)
  {
LABEL_4:
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6570);
    }
    int v9 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Unknown device id", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6570);
      }
      __int16 v15 = 0;
      int v13 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "static CLMicroLocationFingerprint::Measurement CLMicroLocationFingerprint::Measurement::fromProtobuf(const CLMicroLocationProto::FingerprintMeasurement &)", "%s\n", v13);
      if (v13 != (char *)buf) {
        free(v13);
      }
    }
    sub_100322F18((uint64_t)&v16, &v16, "Unknown");
    goto LABEL_15;
  }
LABEL_12:
  sub_1002E594C(*(uint64_t ***)(v7 + 16), buf);
  if (buf[16])
  {
    sub_10031F35C((uint64_t)&v16, buf);
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 24);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_102489968 + 24);
    }
    sub_100322CE4((uint64_t)&v16, &v16, *(std::string **)(v12 + 16));
  }
LABEL_15:
  sub_1001F073C((uint64_t)v14, (uint64_t)&v16);
  *(void *)a2 = v5;
  *(_DWORD *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 12) = v6;
  sub_100321B94(a2 + 16, (uint64_t)v14);
  sub_1001F014C((uint64_t)v14);
  return sub_1001F014C((uint64_t)&v16);
}

void sub_10031F638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1001F014C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10031F654(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  *(_OWORD *)(a1 + 56) = 0u;
  int v4 = (void *)(a1 + 56);
  *(_OWORD *)(a1 + 72) = 0u;
  *(void *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 96) = 1065353216;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_DWORD *)(a1 + 136) = 1065353216;
  *(void *)(a1 + 144) = 0;
  uint64_t v5 = (_OWORD *)(a1 + 144);
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 160) = 0;
  int v6 = *(uint64_t **)(a2 + 56);
  int v7 = *((char *)v6 + 23);
  if ((v7 & 0x80000000) == 0)
  {
    if (v7 != 16) {
      goto LABEL_7;
    }
LABEL_6:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
    goto LABEL_12;
  }
  if (v6[1] == 16)
  {
    int v6 = (uint64_t *)*v6;
    goto LABEL_6;
  }
LABEL_7:
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6570);
  }
  int v8 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf) = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "#Warning The protobuf fingerprint does not have a valid recording uuid", (uint8_t *)&buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6570);
    }
    int v17 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLMicroLocationFingerprint::CLMicroLocationFingerprint(const CLMicroLocationProto::Fingerprint &)", "%s\n", v17);
    if (v17 != (char *)&buf) {
      free(v17);
    }
  }
LABEL_12:
  *uint64_t v5 = *(_OWORD *)(a2 + 40);
  uint64_t v9 = *(unsigned int *)(a2 + 16);
  if ((int)v9 < 1)
  {
    uint64_t v12 = *(int *)(a2 + 80);
    if (v12)
    {
      int v13 = *(uint64_t **)(a2 + 72);
      uint64_t v14 = 8 * v12;
      do
      {
        sub_10031F3A4(*v13, (uint64_t)&buf);
        sub_100322FD8(a1, (uint64_t)&buf, &buf);
        sub_1001F014C((uint64_t)v19);
        ++v13;
        v14 -= 8;
      }
      while (v14);
    }
  }
  else
  {
    int v10 = *(uint64_t **)(a2 + 8);
    uint64_t v11 = 8 * v9;
    do
    {
      sub_10031F0A0(*v10, (uint64_t)&buf);
      sub_100322FD8(a1, (uint64_t)&buf, &buf);
      sub_1001F014C((uint64_t)v19);
      ++v10;
      v11 -= 8;
    }
    while (v11);
  }
  for (uint64_t i = (void *)(a1 + 16); ; sub_10031F9C4(a1, i + 2))
  {
    uint64_t i = (void *)*i;
    if (!i) {
      break;
    }
  }
  if (*(unsigned char *)(a2 + 96)) {
    *v4 |= 0x20uLL;
  }
  if (*(unsigned char *)(a2 + 97)) {
    *v4 |= 0x40uLL;
  }
  return a1;
}

void sub_10031F968(_Unwind_Exception *a1)
{
  uint64_t v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 176) = v5;
    operator delete(v5);
  }
  sub_1000D7D80(v2);
  sub_1000D7D80(v1 + 64);
  sub_1001F00CC(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_10031F9C4(uint64_t a1, void *a2)
{
  int v4 = (unsigned int *)(a2 + 1);
  sub_1001F0928(a1 + 64, v4, v4);
  uint64_t v5 = (void *)(a1 + 104);
  if (sub_1001EF6E0(v5, v4))
  {
    double result = sub_1001EF6E0(v5, v4);
    double v7 = *(double *)a2;
    double v8 = *((double *)result + 3);
    if (*(double *)a2 < v8) {
      double v8 = *(double *)a2;
    }
    if (*((double *)result + 4) >= *(double *)a2) {
      double v7 = *((double *)result + 4);
    }
    *((double *)result + 3) = v8;
    *((double *)result + 4) = v7;
  }
  else
  {
    *(void *)&long long v9 = *a2;
    *((void *)&v9 + 1) = v9;
    return (uint64_t *)sub_100323E3C((uint64_t)v5, v4, v4, &v9);
  }
  return result;
}

void sub_10031FA78(void *a1, unint64_t a2, int a3)
{
  uint64_t v3 = (uint64_t *)a1[2];
  if (v3)
  {
    unint64_t v7 = 0;
    do
    {
      if (*((_DWORD *)v3 + 6) == a3) {
        ++v7;
      }
      uint64_t v3 = (uint64_t *)*v3;
    }
    while (v3);
    if (v7 > a2)
    {
      long long __p = 0;
      double v22 = 0;
      CFStringRef v23 = 0;
      sub_10031FC98(&__p, v7);
      for (uint64_t i = (uint64_t *)a1[2]; i; uint64_t i = (uint64_t *)*i)
      {
        if (*((_DWORD *)i + 6) == a3)
        {
          long long v9 = v22;
          if (v22 >= v23)
          {
            uint64_t v11 = (char *)__p;
            uint64_t v12 = (v22 - (unsigned char *)__p) >> 2;
            unint64_t v13 = v12 + 1;
            if ((unint64_t)(v12 + 1) >> 62) {
              sub_1001D7FD4();
            }
            uint64_t v14 = v23 - (unsigned char *)__p;
            if ((v23 - (unsigned char *)__p) >> 1 > v13) {
              unint64_t v13 = v14 >> 1;
            }
            if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v15 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v15 = v13;
            }
            if (v15)
            {
              std::string v16 = (char *)sub_10017EA34((uint64_t)&v23, v15);
              uint64_t v11 = (char *)__p;
              long long v9 = v22;
            }
            else
            {
              std::string v16 = 0;
            }
            int v17 = &v16[4 * v12];
            *(_DWORD *)int v17 = *((_DWORD *)i + 7);
            int v10 = v17 + 4;
            while (v9 != v11)
            {
              int v18 = *((_DWORD *)v9 - 1);
              v9 -= 4;
              *((_DWORD *)v17 - 1) = v18;
              v17 -= 4;
            }
            long long __p = v17;
            double v22 = v10;
            CFStringRef v23 = &v16[4 * v15];
            if (v11) {
              operator delete(v11);
            }
          }
          else
          {
            *(_DWORD *)double v22 = *((_DWORD *)i + 7);
            int v10 = v9 + 4;
          }
          double v22 = v10;
        }
      }
      if (((a3 - 2) & 0xFFFFFFFB) != 0) {
        sub_10031FD40(a1, (float **)&__p, a2, a3);
      }
      else {
        sub_10031FE08(a1, &__p, a2, a3);
      }
      char v19 = (uint64_t *)a1[2];
      if (!v19) {
        goto LABEL_36;
      }
      unint64_t v20 = 0;
      do
      {
        if (*((_DWORD *)v19 + 6) == a3) {
          ++v20;
        }
        char v19 = (uint64_t *)*v19;
      }
      while (v19);
      if (v20 > a2)
      {
        sub_101A5C7AC();
        abort_report_np();
        __break(1u);
      }
      else
      {
LABEL_36:
        if (__p)
        {
          double v22 = (char *)__p;
          operator delete(__p);
        }
      }
    }
  }
}

void sub_10031FC74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10031FC98(void **a1, unint64_t a2)
{
  int v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 2)
  {
    if (a2 >> 62) {
      sub_1001D7FD4();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    int v6 = (char *)sub_10017EA34(v3, a2);
    unint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFFCLL];
    long long v9 = &v6[4 * v8];
    int v10 = (char *)*a1;
    uint64_t v11 = (char *)a1[1];
    uint64_t v12 = v7;
    if (v11 != *a1)
    {
      uint64_t v12 = v7;
      do
      {
        int v13 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v12 - 1) = v13;
        v12 -= 4;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_10031FD40(void *a1, float **a2, uint64_t a3, int a4)
{
  uint64_t v8 = *a2;
  long long v9 = a2[1];
  unint64_t v10 = 126 - 2 * __clz(v9 - v8);
  if (v9 == v8) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v10;
  }
  sub_10032326C(v8, v9, (uint64_t)v15, v11, 1);
  uint64_t v12 = (uint64_t *)a1[2];
  if (v12)
  {
    float v13 = (*a2)[a3];
    do
    {
      while (*((_DWORD *)v12 + 6) != a4 || *((float *)v12 + 7) > v13)
      {
        uint64_t v12 = (uint64_t *)*v12;
        if (!v12) {
          return;
        }
      }
      uint64_t v14 = (uint64_t *)*v12;
      sub_10017FA3C(a1, v12, (uint64_t)v15);
      sub_1001F0858((uint64_t)v15, 0);
      uint64_t v12 = v14;
    }
    while (v14);
  }
}

void sub_10031FE08(void *a1, void *a2, uint64_t a3, int a4)
{
  std::__sort<std::__less<float,float> &,float *>();
  uint64_t v8 = (uint64_t *)a1[2];
  if (v8)
  {
    float v9 = *(float *)(*a2 + 4 * a3);
    do
    {
      while (*((_DWORD *)v8 + 6) != a4 || *((float *)v8 + 7) < v9)
      {
        uint64_t v8 = (uint64_t *)*v8;
        if (!v8) {
          return;
        }
      }
      unint64_t v10 = (uint64_t *)*v8;
      sub_10017FA3C(a1, v8, (uint64_t)v11);
      sub_1001F0858((uint64_t)v11, 0);
      uint64_t v8 = v10;
    }
    while (v10);
  }
}

uint64_t sub_10031FEB0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a5;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  *(_OWORD *)(a1 + 56) = 0u;
  unint64_t v58 = (void *)(a1 + 56);
  *(_OWORD *)(a1 + 72) = 0u;
  *(void *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 96) = 1065353216;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_DWORD *)(a1 + 136) = 1065353216;
  *(void *)(a1 + 168) = 0;
  unint64_t v59 = (void **)(a1 + 168);
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 160) = 0;
  long long v60 = 0u;
  long long v61 = 0u;
  int v62 = 1065353216;
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  if (*a2 == v10) {
    goto LABEL_21;
  }
  do
  {
    int v11 = sub_1002E90D4(v9) ^ 1;
    if (*(unsigned char *)(a3 + 9)) {
      int v12 = 1;
    }
    else {
      int v12 = v11;
    }
    int v14 = sub_1002E90F4(v9) ^ 1;
    if (*(unsigned char *)(a3 + 8)) {
      int v15 = 1;
    }
    else {
      int v15 = v14;
    }
    if (v12 & v15)
    {
      sub_10031F0A0(v9, (uint64_t)buf);
      sub_100324070(&v60, buf);
      sub_1001F014C((uint64_t)&buf[16]);
    }
    else
    {
      uint64_t v16 = *(void *)(v9 + 16);
      if (!v16) {
        uint64_t v16 = *(void *)(qword_102489958 + 16);
      }
      uint64_t v64 = nullsub_41(*(void *)(v16 + 24), v13);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6570);
      }
      int v17 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        sub_100B39278(&__p);
        p_p = &__p;
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)long long buf = 68289794;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)&uint8_t buf[8] = 2082;
        *(void *)&buf[10] = "";
        __int16 v66 = 2082;
        uint64_t v67 = p_p;
        __int16 v68 = 1026;
        int v69 = v12;
        __int16 v70 = 1026;
        int v71 = v15;
        _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"shouldProcess, ignore a measurement\", \"macAddress\":%{public, location:escape_only}s, \"shouldProcessPerInvalidRssiFlag\":%{public}hhd, \"shouldProcessPerOffChannelRssiFlag\":%{public}hhd}", buf, 0x28u);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
    }
    v9 += 88;
  }
  while (v9 != v10);
  uint64_t v5 = a5;
  if (!*((void *)&v61 + 1))
  {
LABEL_21:
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6570);
    }
    char v19 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#warning, this fingerprint does not have any measurements, all measurements might have been filtered out", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6570);
      }
      LOWORD(__p.__r_.__value_.__l.__data_) = 0;
      uint64_t v56 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLMicroLocationFingerprint::CLMicroLocationFingerprint(const std::vector<CLMiLoProtobufWrapper::Measurement> &, const CLMicroLocationFingerprintConfiguration &, const std::optional<CLMicroLocationProto::RecordingEvent> &, const std::optional<boost::uuids::uuid> &)", "%s\n", v56);
      if (v56 != buf) {
        free(v56);
      }
    }
  }
  if (*(unsigned char *)(v5 + 16))
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v5;
  }
  else
  {
    *(_DWORD *)long long buf = 0;
    sub_1001EE1F4((int *)buf);
    *(void *)(a1 + 40) = sub_1001EC8C4((ssize_t)buf);
    *(void *)(a1 + 48) = v20;
    sub_1001EF3E8((unsigned int *)buf);
  }
  int v21 = (uint64_t *)v61;
  if ((void)v61)
  {
    double v22 = 1.79769313e308;
    double v23 = 2.22507386e-308;
    do
    {
      int v24 = sub_1003245FC(&v60, (uint64_t)(v21 + 2));
      long long v26 = v25;
      *(_DWORD *)long long buf = *((_DWORD *)v21 + 6);
      std::string::size_type v27 = sub_1001EF6E0((void *)(a3 + 16), (unsigned int *)buf);
      std::string v28 = v27 + 3;
      if (!v27) {
        std::string v28 = &unk_101D0B460;
      }
      if (*v28) {
        BOOL v29 = v24 == v26;
      }
      else {
        BOOL v29 = 1;
      }
      if (!v29)
      {
        double v30 = 0.0;
        double v31 = 0.0;
        do
        {
          double v32 = *((double *)v24 + 2);
          sub_10031F9C4(a1, v24 + 2);
          if (v32 > v23) {
            double v23 = v32;
          }
          if (v32 < v22) {
            double v22 = v32;
          }
          double v31 = v31 + 1.0;
          double v30 = v30 + *((float *)v24 + 7);
          int v24 = (uint64_t *)*v24;
        }
        while (v24 != v26);
        if (v31 > 0.0)
        {
          *(_OWORD *)long long buf = *((_OWORD *)v21 + 1);
          sub_1001F073C((uint64_t)&buf[16], (uint64_t)(v21 + 4));
          float v33 = v30 / v31;
          *(float *)&unsigned char buf[12] = v33;
          sub_1001F043C(a1, (uint64_t)buf, buf);
          sub_1001F014C((uint64_t)&buf[16]);
        }
      }
      int v21 = v26;
    }
    while (v26);
  }
  else
  {
    double v23 = 2.22507386e-308;
    double v22 = 1.79769313e308;
  }
  *(double *)(a1 + 144) = v22;
  *(double *)(a1 + 152) = v23;
  for (uint64_t i = a1 + 80; ; sub_10031FA78((void *)a1, v36[3], *(_DWORD *)(i + 16)))
  {
    uint64_t i = *(void *)i;
    if (!i) {
      break;
    }
    *(_DWORD *)long long buf = *(_DWORD *)(i + 16);
    char v35 = sub_1001EF6E0((void *)(a3 + 16), (unsigned int *)buf);
    std::string v36 = v35 + 3;
    if (!v35) {
      std::string v36 = &unk_101D0B460;
    }
  }
  if (*(unsigned char *)(a4 + 136))
  {
    if (*(unsigned char *)(a4 + 77))
    {
      double v37 = *(uint64_t **)(a1 + 16);
      if (!v37) {
        goto LABEL_61;
      }
      uint64_t v38 = 0;
      do
      {
        if (*((_DWORD *)v37 + 6) == 5) {
          ++v38;
        }
        double v37 = (uint64_t *)*v37;
      }
      while (v37);
      if (!v38) {
LABEL_61:
      }
        *v58 |= 0x20uLL;
    }
    if (*(unsigned char *)(a4 + 76))
    {
      std::string v39 = *(uint64_t **)(a1 + 16);
      if (!v39) {
        goto LABEL_69;
      }
      uint64_t v40 = 0;
      do
      {
        if (*((_DWORD *)v39 + 6) == 6) {
          ++v40;
        }
        std::string v39 = (uint64_t *)*v39;
      }
      while (v39);
      if (!v40) {
LABEL_69:
      }
        *v58 |= 0x40uLL;
    }
    *(_DWORD *)(a1 + 160) = *(_DWORD *)(a4 + 120);
    LODWORD(v41) = *(_DWORD *)(a4 + 112);
    if ((int)v41 >= 1)
    {
      uint64_t v42 = 0;
      do
      {
        if (v42 >= (int)v41)
        {
          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)buf);
        }
        int v43 = *(_DWORD *)(*(void *)(a4 + 104) + 4 * v42);
        std::string v45 = *(char **)(a1 + 176);
        unint64_t v44 = *(void *)(a1 + 184);
        if ((unint64_t)v45 >= v44)
        {
          std::string v47 = (char *)*v59;
          uint64_t v48 = (v45 - (unsigned char *)*v59) >> 2;
          unint64_t v49 = v48 + 1;
          if ((unint64_t)(v48 + 1) >> 62) {
            sub_1001D7FD4();
          }
          uint64_t v50 = v44 - (void)v47;
          if (v50 >> 1 > v49) {
            unint64_t v49 = v50 >> 1;
          }
          if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v51 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v51 = v49;
          }
          if (v51)
          {
            std::string::size_type v52 = (char *)sub_10017EA34(a1 + 184, v51);
            std::string v47 = *(char **)(a1 + 168);
            std::string v45 = *(char **)(a1 + 176);
          }
          else
          {
            std::string::size_type v52 = 0;
          }
          char v53 = &v52[4 * v48];
          *(_DWORD *)char v53 = v43;
          std::string v46 = v53 + 4;
          while (v45 != v47)
          {
            int v54 = *((_DWORD *)v45 - 1);
            v45 -= 4;
            *((_DWORD *)v53 - 1) = v54;
            v53 -= 4;
          }
          *(void *)(a1 + 168) = v53;
          *(void *)(a1 + 176) = v46;
          *(void *)(a1 + 184) = &v52[4 * v51];
          if (v47) {
            operator delete(v47);
          }
        }
        else
        {
          *(_DWORD *)std::string v45 = v43;
          std::string v46 = v45 + 4;
        }
        *(void *)(a1 + 176) = v46;
        ++v42;
        uint64_t v41 = *(int *)(a4 + 112);
      }
      while (v42 < v41);
    }
  }
  sub_1001F00CC((uint64_t)&v60);
  return a1;
}

void sub_1003205C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void **a11, ...)
{
  va_start(va, a11);
  sub_1001F00CC((uint64_t)va);
  uint64_t v13 = *a11;
  if (*a11)
  {
    *(void *)(v11 + 176) = v13;
    operator delete(v13);
  }
  sub_1000D7D80(a5);
  sub_1000D7D80(v11 + 64);
  sub_1001F00CC(v11);
  _Unwind_Resume(a1);
}

void sub_100320670(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, unsigned char *a5@<X8>)
{
  memset(v12, 0, sizeof(v12));
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  int v15 = v12;
  while (v9 != v10)
  {
    int v11 = *(_DWORD *)(v9 + 112);
    sub_100243254(v13, v9 + 32);
    int v14 = v11;
    sub_1002F3700(&v15, (uint64_t)v13);
    sub_1002433A8((wireless_diagnostics::google::protobuf::MessageLite *)v13);
    v9 += 120;
  }
  sub_100320760(v12, a2, a3, a4, a5);
  v13[0] = (void **)v12;
  sub_100221EA8(v13);
}

void sub_100320730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v9 - 72) = &a9;
  sub_100221EA8((void ***)(v9 - 72));
  _Unwind_Resume(a1);
}

uint64_t *sub_100320760@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, unsigned char *a5@<X8>)
{
  *a5 = 0;
  a5[192] = 0;
  if (*result == result[1]) {
    return result;
  }
  sub_10031FEB0((uint64_t)v65, result, (uint64_t)a4, a2, a3);
  *(_DWORD *)long long buf = 1;
  int v6 = sub_1001EF6E0(a4 + 2, (unsigned int *)buf);
  if (v6) {
    unint64_t v7 = (double *)(v6 + 3);
  }
  else {
    unint64_t v7 = (double *)&unk_101D0B460;
  }
  *(_DWORD *)long long buf = 5;
  uint64_t v8 = sub_1001EF6E0(a4 + 2, (unsigned int *)buf);
  if (v8) {
    uint64_t v9 = (double *)(v8 + 3);
  }
  else {
    uint64_t v9 = (double *)&unk_101D0B460;
  }
  *(_DWORD *)long long buf = 6;
  uint64_t v10 = sub_1001EF6E0(a4 + 2, (unsigned int *)buf);
  if (v10) {
    int v11 = (double *)(v10 + 3);
  }
  else {
    int v11 = (double *)&unk_101D0B460;
  }
  *(_DWORD *)long long buf = 1;
  int v12 = sub_1001EF6E0(v69, (unsigned int *)buf);
  if (v12) {
    double v13 = *((double *)v12 + 4) - *((double *)v12 + 3);
  }
  else {
    double v13 = 0.0;
  }
  *(_DWORD *)long long buf = 5;
  int v14 = sub_1001EF6E0(v69, (unsigned int *)buf);
  if (v14) {
    double v15 = *((double *)v14 + 4) - *((double *)v14 + 3);
  }
  else {
    double v15 = 0.0;
  }
  *(_DWORD *)long long buf = 6;
  uint64_t v16 = sub_1001EF6E0(v69, (unsigned int *)buf);
  if (v16) {
    double v17 = *((double *)v16 + 4) - *((double *)v16 + 3);
  }
  else {
    double v17 = 0.0;
  }
  if (*(unsigned char *)v7) {
    BOOL v18 = v13 >= v7[1];
  }
  else {
    BOOL v18 = 1;
  }
  if (*(unsigned char *)v9) {
    BOOL v19 = v15 >= v9[1];
  }
  else {
    BOOL v19 = 1;
  }
  if (!*(unsigned char *)v11)
  {
    BOOL v20 = 1;
    if (v18) {
      goto LABEL_28;
    }
LABEL_30:
    int v21 = 0;
    goto LABEL_31;
  }
  BOOL v20 = v17 >= v11[1];
  if (!v18) {
    goto LABEL_30;
  }
LABEL_28:
  int v21 = v19 && v20;
LABEL_31:
  double v22 = v66;
  int v62 = a4 + 2;
  if (v66)
  {
    unint64_t v23 = 0;
    int v24 = v66;
    do
    {
      if (*((_DWORD *)v24 + 6) == 1) {
        ++v23;
      }
      int v24 = (uint64_t *)*v24;
    }
    while (v24);
    unint64_t v25 = 0;
    long long v26 = v66;
    do
    {
      if (*((_DWORD *)v26 + 6) == 5) {
        ++v25;
      }
      long long v26 = (uint64_t *)*v26;
    }
    while (v26);
    std::string::size_type v27 = 0;
    do
    {
      if (*((_DWORD *)v22 + 6) == 6) {
        std::string::size_type v27 = (_OWORD *)((char *)v27 + 1);
      }
      double v22 = (uint64_t *)*v22;
    }
    while (v22);
  }
  else
  {
    unint64_t v25 = 0;
    unint64_t v23 = 0;
    std::string::size_type v27 = 0;
  }
  if (*(unsigned char *)v7) {
    BOOL v28 = v23 >= *((void *)v7 + 2);
  }
  else {
    BOOL v28 = 1;
  }
  int v29 = v28;
  if (v29 == 1)
  {
    if (*(unsigned char *)v9) {
      BOOL v30 = v25 >= *((void *)v9 + 2);
    }
    else {
      BOOL v30 = 1;
    }
    int v31 = v30;
    if (*(unsigned char *)v11) {
      BOOL v32 = (unint64_t)v27 >= *((void *)v11 + 2);
    }
    else {
      BOOL v32 = 1;
    }
    if (!v32) {
      int v31 = 0;
    }
  }
  else
  {
    int v31 = 0;
  }
  unint64_t v33 = v67;
  unint64_t v34 = *a4;
  if (*a4 > v67) {
    int v31 = 0;
  }
  if (v21) {
    int v35 = v31;
  }
  else {
    int v35 = 0;
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6570);
  }
  std::string v36 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 68291842;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)uint64_t v74 = 2082;
    *(void *)&v74[2] = "";
    __int16 v75 = 2050;
    unint64_t v76 = v23;
    __int16 v77 = 2050;
    unint64_t v78 = v25;
    __int16 v79 = 2050;
    int v80 = v27;
    __int16 v81 = 2050;
    unint64_t v82 = v33;
    __int16 v83 = 2050;
    double v84 = v13;
    __int16 v85 = 1026;
    int v86 = v29;
    __int16 v87 = 1026;
    BOOL v88 = v34 <= v33;
    __int16 v89 = 1026;
    int v90 = v21;
    __int16 v91 = 1026;
    int v92 = v35;
    __int16 v93 = 2050;
    double v94 = v15;
    __int16 v95 = 2050;
    double v96 = v17;
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Fingerprint creation\", \"NumWiFiMeasurements\":%{public}lu, \"NumBLEMeasurements\":%{public}lu, \"NumUWBMeasurements\":%{public}lu, \"number of total measurements\":%{public}lu, \"WiFi RSSI duration_s\":\"%{public}.09f\", \"enough WiFi measurements\":%{public}hhd, \"enough total measurements\":%{public}hhd, \"isDurationValid\":%{public}hhd, \"isFingerprintValid\":%{public}hhd, \"BLE Duration_s\":\"%{public}.09f\", \"UWB Duration_s\":\"%{public}.09f\"}", buf, 0x70u);
  }
  if (v35)
  {
    *(_DWORD *)long long buf = 5;
    double v37 = sub_1001EF6E0(v62, (unsigned int *)buf);
    *(_DWORD *)long long buf = 6;
    uint64_t v38 = sub_1001EF6E0(v62, (unsigned int *)buf);
    unint64_t v39 = 0;
    uint64_t v40 = (unsigned __int8 *)(v37 + 3);
    if (!v37) {
      uint64_t v40 = (unsigned __int8 *)&unk_101D0B460;
    }
    uint64_t v41 = v38 + 3;
    if (!v38) {
      uint64_t v41 = &unk_101D0B460;
    }
    int v42 = *v40;
    int v43 = v66;
    if (v42 && v66)
    {
      unint64_t v39 = 0;
      unint64_t v44 = v66;
      do
      {
        if (*((_DWORD *)v44 + 6) == 5) {
          ++v39;
        }
        unint64_t v44 = (uint64_t *)*v44;
      }
      while (v44);
    }
    unint64_t v45 = 0;
    if (*v41) {
      BOOL v46 = v66 == 0;
    }
    else {
      BOOL v46 = 1;
    }
    if (!v46)
    {
      do
      {
        if (*((_DWORD *)v43 + 6) == 6) {
          ++v45;
        }
        int v43 = (uint64_t *)*v43;
      }
      while (v43);
    }
    sub_1000C7F88(buf);
    LODWORD(__p) = 0;
    CFStringRef v47 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsHighConfidenceBleSourceNumThreshold", 0x8000100u, kCFAllocatorNull);
    int v48 = sub_1004D08E4(*(uint64_t *)buf, (uint64_t)v47, &__p);
    CFRelease(v47);
    unint64_t v49 = __p;
    if (*(void *)v74) {
      sub_1000DB0A0(*(std::__shared_weak_count **)v74);
    }
    if (v48) {
      unint64_t v50 = v49;
    }
    else {
      unint64_t v50 = 1;
    }
    if (v39 < v50)
    {
      sub_1000C7F88(buf);
      LODWORD(__p) = 0;
      CFStringRef v51 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsHighConfidenceUwbSourceNumThreshold", 0x8000100u, kCFAllocatorNull);
      int v52 = sub_1004D08E4(*(uint64_t *)buf, (uint64_t)v51, &__p);
      CFRelease(v51);
      unint64_t v53 = __p;
      if (*(void *)v74) {
        sub_1000DB0A0(*(std::__shared_weak_count **)v74);
      }
      if (v52) {
        unint64_t v54 = v53;
      }
      else {
        unint64_t v54 = 1;
      }
      if (v45 < v54)
      {
        if (v70 >= 2) {
          int v55 = 2;
        }
        else {
          int v55 = v70;
        }
        int v70 = v55;
        uint64_t v56 = (char *)operator new(4uLL);
        *(_DWORD *)uint64_t v56 = 2;
        sub_1001E06C8((uint64_t)&v71, (uint64_t)__dst, v56, v56 + 4, 1);
        operator delete(v56);
        if (*(unsigned char *)(a3 + 16))
        {
          p_p = operator new(0x28uLL);
          std::string __p = p_p;
          long long v64 = xmmword_101D048C0;
          _OWORD *p_p = 0u;
          p_p[1] = 0u;
          *(void *)((char *)p_p + 29) = 0;
          sub_1001E0650(a3, p_p);
          char v58 = 0x80;
        }
        else
        {
          char v58 = 0;
          std::string __p = 0;
          long long v64 = 0uLL;
          p_p = &__p;
        }
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A6570);
        }
        unint64_t v59 = qword_102419458;
        if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 68290050;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)uint64_t v74 = 2082;
          *(void *)&v74[2] = "";
          __int16 v75 = 2050;
          unint64_t v76 = v39;
          __int16 v77 = 2050;
          unint64_t v78 = v45;
          __int16 v79 = 2082;
          int v80 = p_p;
          __int16 v81 = 1026;
          LODWORD(v82) = v55;
          _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"setting fingerprint confidence due to number of RF sources\", \"number of Ble measurements\":%{public}lu, \"number of Uwb measurements\":%{public}lu, \"Recording UUID\":%{public, location:escape_only}s, \"confidence level\":%{public}d}", buf, 0x36u);
          char v58 = HIBYTE(v64);
        }
        if (v58 < 0) {
          operator delete(__p);
        }
      }
    }
    sub_100320EA4((uint64_t)a5, (uint64_t)v65);
  }
  if (v71)
  {
    __dst = v71;
    operator delete(v71);
  }
  sub_1000D7D80((uint64_t)v69);
  sub_1000D7D80((uint64_t)&v68);
  return (uint64_t *)sub_1001F00CC((uint64_t)v65);
}

void sub_100320E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  operator delete(v40);
  sub_1001F0078((uint64_t)&a15);
  sub_100216190(a10);
  _Unwind_Resume(a1);
}

uint64_t sub_100320EA4(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 192))
  {
    if (a1 != a2)
    {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
      sub_10032477C((void *)a1, *(uint64_t **)(a2 + 16), 0);
      long long v4 = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = v4;
      *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
      sub_100324A50((void *)(a1 + 64), *(unsigned int **)(a2 + 80), 0);
      *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
      sub_100324F90((void *)(a1 + 104), *(uint64_t **)(a2 + 120), 0);
      long long v5 = *(_OWORD *)(a2 + 144);
      *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = v5;
      sub_1000FB43C((char *)(a1 + 168), *(char **)(a2 + 168), *(void *)(a2 + 176), (uint64_t)(*(void *)(a2 + 176) - *(void *)(a2 + 168)) >> 2);
    }
  }
  else
  {
    sub_100238C14(a1, a2);
    *(unsigned char *)(a1 + 192) = 1;
  }
  return a1;
}

BOOL sub_100320F70@<W0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1001F2358(a2);
  std::string __p = (void *)sub_1002D396C((uint64_t)a1);
  unint64_t v34 = v6;
  uint64_t v37 = sub_1002D3978(a1);
  uint64_t v38 = v7;
  while (sub_1002D37F4(&__p, &v37))
  {
    for (uint64_t i = *(uint64_t **)(sub_1002D3820(&__p) + 16); i; uint64_t i = (uint64_t *)*i)
      sub_1001F043C(a2, (uint64_t)(i + 2), (_OWORD *)i + 1);
    sub_1002D384C((uint64_t)&__p);
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v37 = sub_1002D396C((uint64_t)a1);
  uint64_t v38 = v9;
  v36[0] = sub_1002D3978(a1);
  v36[1] = v10;
  while (1)
  {
    BOOL result = sub_1002D37F4(&v37, v36);
    if (!result) {
      return result;
    }
    uint64_t v12 = sub_1002D3820(&v37);
    std::string __p = 0;
    unint64_t v34 = 0;
    int v35 = 0;
    double v13 = *(uint64_t **)(a2 + 16);
    if (v13)
    {
      int v14 = (void *)v12;
      do
      {
        double v15 = (float *)sub_1002D3074(v14, (uint64_t)(v13 + 2));
        if (v15)
        {
          double v16 = v15[7];
          double v17 = v34;
          if (v34 >= v35)
          {
            BOOL v18 = (double *)__p;
            uint64_t v19 = ((char *)v34 - (unsigned char *)__p) >> 3;
            unint64_t v20 = v19 + 1;
            if ((unint64_t)(v19 + 1) >> 61) {
              sub_1001D7FD4();
            }
            uint64_t v21 = (char *)v35 - (unsigned char *)__p;
            if (((char *)v35 - (unsigned char *)__p) >> 2 > v20) {
              unint64_t v20 = v21 >> 2;
            }
            if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v22 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v22 = v20;
            }
            if (v22)
            {
              unint64_t v23 = (char *)sub_1000DA54C((uint64_t)&v35, v22);
              BOOL v18 = (double *)__p;
              double v17 = v34;
            }
            else
            {
              unint64_t v23 = 0;
            }
            BOOL v28 = (double *)&v23[8 * v19];
            *BOOL v28 = v16;
            int v24 = v28 + 1;
            while (v17 != v18)
            {
              uint64_t v29 = *((void *)v17-- - 1);
              *((void *)v28-- - 1) = v29;
            }
LABEL_37:
            std::string __p = v28;
            unint64_t v34 = v24;
            int v35 = (double *)&v23[8 * v22];
            if (v18) {
              operator delete(v18);
            }
            goto LABEL_39;
          }
        }
        else
        {
          double v16 = sub_1002E887C(*((_DWORD *)v13 + 6));
          double v17 = v34;
          if (v34 >= v35)
          {
            BOOL v18 = (double *)__p;
            uint64_t v25 = ((char *)v34 - (unsigned char *)__p) >> 3;
            unint64_t v26 = v25 + 1;
            if ((unint64_t)(v25 + 1) >> 61) {
              sub_1001D7FD4();
            }
            uint64_t v27 = (char *)v35 - (unsigned char *)__p;
            if (((char *)v35 - (unsigned char *)__p) >> 2 > v26) {
              unint64_t v26 = v27 >> 2;
            }
            if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v22 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v22 = v26;
            }
            if (v22)
            {
              unint64_t v23 = (char *)sub_1000DA54C((uint64_t)&v35, v22);
              BOOL v18 = (double *)__p;
              double v17 = v34;
            }
            else
            {
              unint64_t v23 = 0;
            }
            BOOL v28 = (double *)&v23[8 * v25];
            *BOOL v28 = v16;
            int v24 = v28 + 1;
            while (v17 != v18)
            {
              uint64_t v30 = *((void *)v17-- - 1);
              *((void *)v28-- - 1) = v30;
            }
            goto LABEL_37;
          }
        }
        double *v17 = v16;
        int v24 = v17 + 1;
LABEL_39:
        unint64_t v34 = v24;
        double v13 = (uint64_t *)*v13;
      }
      while (v13);
    }
    unint64_t v31 = a3[1];
    if (v31 >= a3[2])
    {
      uint64_t v32 = sub_1001DD01C(a3, (uint64_t)&__p);
    }
    else
    {
      sub_100325128((uint64_t)a3, (uint64_t)&__p);
      uint64_t v32 = v31 + 24;
    }
    a3[1] = v32;
    if (__p)
    {
      unint64_t v34 = (double *)__p;
      operator delete(__p);
    }
    sub_1002D384C((uint64_t)&v37);
  }
}

void sub_100321230(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
}

uint64_t sub_100321280@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  long long v5 = *(double **)(a2 + 16);
  if (v5)
  {
    int v6 = *(double **)v5;
    if (*(void *)v5)
    {
      uint64_t v7 = *(double **)v5;
      uint64_t v8 = *(double **)(a2 + 16);
      do
      {
        if (v8[2] > v7[2]) {
          uint64_t v8 = v7;
        }
        uint64_t v7 = *(double **)v7;
      }
      while (v7);
      do
      {
        if (v6[2] > v5[2]) {
          long long v5 = v6;
        }
        int v6 = *(double **)v6;
      }
      while (v6);
    }
    else
    {
      uint64_t v8 = *(double **)(a2 + 16);
    }
  }
  else
  {
    uint64_t v8 = 0;
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v9 = *(double ***)result;
  uint64_t v10 = *(double ***)(result + 8);
  if (*(double ***)result != v10)
  {
    if (v8) {
      BOOL v11 = v5 == 0;
    }
    else {
      BOOL v11 = 1;
    }
    int v12 = !v11;
    do
    {
      if (*(void *)(a2 + 24) != v9[1] - *v9)
      {
        sub_101A5C910();
        abort_report_np();
        __break(1u);
      }
      sub_10023D660((uint64_t)v24);
      *(void *)std::string __s = 0;
      uint64_t v34 = 0;
      v22[0] = 0;
      sub_1001EE1F4(v22);
      *(void *)std::string __s = sub_1001EC8C4((ssize_t)v22);
      uint64_t v34 = v13;
      sub_1001EF3E8((unsigned int *)v22);
      v32 |= 0x10u;
      if (v27 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::assign(v27, __s, 0x10uLL);
      if (v12)
      {
        uint64_t v26 = *((void *)v8 + 2);
        int v14 = (uint64_t *)*((void *)v5 + 2);
        v32 |= 0xCu;
        uint64_t v25 = v14;
      }
      double v15 = *(void **)(a2 + 16);
      if (v15)
      {
        double v16 = *v9;
        do
        {
          if (v16 == v9[1]) {
            break;
          }
          sub_10031EE28((uint64_t)(v15 + 2), (uint64_t)v22);
          *(float *)&int v17 = *v16;
          v23 |= 4u;
          v22[5] = v17;
          int v18 = v30;
          uint64_t v19 = v29;
          if (v29 >= v30)
          {
            if (v30 == v31)
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)&v28, v30 + 1);
              int v18 = v30;
            }
            int v30 = v18 + 1;
            sub_100321C90();
          }
          ++v29;
          sub_10024525C(*(void *)(v28 + 8 * v19), (uint64_t)v22);
          sub_100244C2C((wireless_diagnostics::google::protobuf::MessageLite *)v22);
          ++v16;
          double v15 = (void *)*v15;
        }
        while (v15);
      }
      unint64_t v20 = a3[1];
      if (v20 >= a3[2])
      {
        uint64_t v21 = sub_10032517C(a3, (uint64_t)v24);
      }
      else
      {
        sub_10031F654(a3[1], (uint64_t)v24);
        uint64_t v21 = v20 + 192;
        a3[1] = v20 + 192;
      }
      a3[1] = v21;
      BOOL result = sub_100245708(v24);
      v9 += 3;
    }
    while (v9 != v10);
  }
  return result;
}

void sub_100321558(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_100245708((void ***)va);
  sub_1001F2FE8((void ***)va);
  _Unwind_Resume(a1);
}

void sub_1003215C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_10023D660(a3);
  for (uint64_t i = *(void **)(a1 + 16); i; uint64_t i = (void *)*i)
  {
    sub_10031EE28((uint64_t)(i + 2), (uint64_t)__p);
    int v7 = *(_DWORD *)(a3 + 84);
    uint64_t v8 = *(int *)(a3 + 80);
    if ((int)v8 >= v7)
    {
      if (v7 == *(_DWORD *)(a3 + 88))
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a3 + 72), v7 + 1);
        int v7 = *(_DWORD *)(a3 + 84);
      }
      *(_DWORD *)(a3 + 84) = v7 + 1;
      sub_100321C90();
    }
    uint64_t v9 = *(void *)(a3 + 72);
    *(_DWORD *)(a3 + 80) = v8 + 1;
    sub_10024525C(*(void *)(v9 + 8 * v8), (uint64_t)__p);
    sub_100244C2C((wireless_diagnostics::google::protobuf::MessageLite *)__p);
  }
  if (*(unsigned char *)(a2 + 16))
  {
    *((unsigned char *)&__p[0].__r_.__value_.__s + 23) = 16;
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = *(_OWORD *)a2;
    __p[0].__r_.__value_.__s.__data_[16] = 0;
    *(_DWORD *)(a3 + 104) |= 0x20u;
    uint64_t v10 = *(std::string **)(a3 + 64);
    if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v10, __p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
  }
  int v11 = *(_DWORD *)(a3 + 104);
  *(_OWORD *)(a3 + 40) = *(_OWORD *)(a1 + 144);
  *((unsigned char *)&__p[0].__r_.__value_.__s + 23) = 16;
  *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = *(_OWORD *)(a1 + 40);
  __p[0].__r_.__value_.__s.__data_[16] = 0;
  *(_DWORD *)(a3 + 104) = v11 | 0x1C;
  int v12 = *(std::string **)(a3 + 56);
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v12, __p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  char v13 = *(unsigned char *)(a1 + 56);
  int v14 = *(_DWORD *)(a3 + 104);
  *(unsigned char *)(a3 + 96) = (v13 & 0x20) != 0;
  *(_DWORD *)(a3 + 104) = v14 | 0x180;
  *(unsigned char *)(a3 + 97) = (v13 & 0x40) != 0;
}

void sub_1003217A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_100245708(v14);
  _Unwind_Resume(a1);
}

void sub_1003217E4()
{
  exception = __cxa_allocate_exception(8uLL);
}

void ***sub_100321834(void ***result, void *a2)
{
  ***BOOL result = 0xC6A4A7935BD1E995
            * ((0xC6A4A7935BD1E995 * ((0xC6A4A7935BD1E995 * *a2) ^ ((0xC6A4A7935BD1E995 * *a2) >> 47))) ^ ***result)
            + 3864292196u;
  return result;
}

void ***sub_100321878(void ***result, uint64_t a2)
{
  uint64_t v2 = 0;
  unint64_t v3 = 0;
  do
    v3 ^= (v3 << 6) + (v3 >> 2) + 2654435769u + *(unsigned __int8 *)(a2 + v2++);
  while (v2 != 16);
  ***BOOL result = 0xC6A4A7935BD1E995
            * ((0xC6A4A7935BD1E995 * ((0xC6A4A7935BD1E995 * v3) ^ ((0xC6A4A7935BD1E995 * v3) >> 47))) ^ ***result)
            + 3864292196u;
  return result;
}

unint64_t sub_1003218EC(uint64_t ***a1, char *a2)
{
  uint64_t v2 = **a1;
  uint64_t v3 = *v2;
  unint64_t result = sub_10011116C((uint64_t)&v5, a2);
  *uint64_t v2 = 0xC6A4A7935BD1E995
      * ((0xC6A4A7935BD1E995 * ((0xC6A4A7935BD1E995 * result) ^ ((0xC6A4A7935BD1E995 * result) >> 47))) ^ v3)
      + 3864292196u;
  return result;
}

uint64_t sub_100321960(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 24);
  if (!v1) {
    sub_10015E48C();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

uint64_t sub_1003219B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 56);
  if (!v1) {
    sub_10015E48C();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

uint64_t sub_100321A08(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 88);
  if (!v1) {
    sub_10015E48C();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

uint64_t sub_100321A68(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 24);
  if (!v1) {
    sub_10015E48C();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

uint64_t sub_100321ABC(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 56);
  if (!v1) {
    sub_10015E48C();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

uint64_t sub_100321B10(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 88);
  if (!v1) {
    sub_10015E48C();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void sub_100321B64(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_100321B94(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(_DWORD *)(a1 + 24) = -1;
  sub_100321BCC(a1, a2);
  return a1;
}

uint64_t sub_100321BCC(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(unsigned int *)(result + 24);
  if (v4 != -1) {
    unint64_t result = ((uint64_t (*)(char *, uint64_t))*(&off_1022A6558 + v4))(&v7, result);
  }
  *(_DWORD *)(v3 + 24) = -1;
  uint64_t v5 = *(unsigned int *)(a2 + 24);
  if (v5 != -1)
  {
    unint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))off_1022A6590[v5])(&v6, v3, a2);
    *(_DWORD *)(v3 + 24) = v5;
  }
  return result;
}

void sub_100321C5C(uint64_t a1, void *a2, void *a3)
{
  *a2 = *a3;
}

__n128 sub_100321C68(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  *a2 = *a3;
  return result;
}

__n128 sub_100321C74(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  a3->n128_u64[0] = 0;
  return result;
}

void sub_100321C90()
{
}

void sub_100321CD0()
{
}

char *sub_100321CF4(uint64_t a1, unsigned int *a2, uint64_t a3, _DWORD **a4)
{
  unint64_t v7 = *a2;
  unint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)v8);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
    uint64_t v10 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v10)
    {
      int v11 = (char *)*v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = *((void *)v11 + 1);
          if (v12 == v7)
          {
            if (*((_DWORD *)v11 + 4) == v7) {
              return v11;
            }
          }
          else
          {
            if (v9.u32[0] > 1uLL)
            {
              if (v12 >= v8) {
                v12 %= v8;
              }
            }
            else
            {
              v12 &= v8 - 1;
            }
            if (v12 != v4) {
              break;
            }
          }
          int v11 = *(char **)v11;
        }
        while (v11);
      }
    }
  }
  int v11 = (char *)operator new(0x38uLL);
  *(void *)int v11 = 0;
  *((void *)v11 + 1) = v7;
  *((_DWORD *)v11 + 4) = **a4;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  float v13 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v14 = *(float *)(a1 + 32);
  if (!v8 || (float)(v14 * (float)v8) < v13)
  {
    BOOL v15 = 1;
    if (v8 >= 3) {
      BOOL v15 = (v8 & (v8 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v8);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_100100330(a1, v18);
    unint64_t v8 = *(void *)(a1 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v8 <= v7) {
        unint64_t v4 = v7 % v8;
      }
      else {
        unint64_t v4 = v7;
      }
    }
    else
    {
      unint64_t v4 = (v8 - 1) & v7;
    }
  }
  uint64_t v19 = *(void *)a1;
  unint64_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  if (v20)
  {
    *(void *)int v11 = *v20;
LABEL_38:
    void *v20 = v11;
    goto LABEL_39;
  }
  *(void *)int v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v11;
  *(void *)(v19 + 8 * v4) = a1 + 16;
  if (*(void *)v11)
  {
    unint64_t v21 = *(void *)(*(void *)v11 + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v21 >= v8) {
        v21 %= v8;
      }
    }
    else
    {
      v21 &= v8 - 1;
    }
    unint64_t v20 = (void *)(*(void *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v11;
}

void sub_100321F10(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100321F28()
{
}

void *sub_100321F3C()
{
  __n128 result = operator new(0x10uLL);
  *__n128 result = off_1022A65B8;
  return result;
}

void sub_100321F74(uint64_t a1, void *a2)
{
  *a2 = off_1022A65B8;
}

uint64_t sub_100321F9C(uint64_t a1, uint64_t *a2)
{
  return sub_1002E87CC(*a2, (uint64_t)a2);
}

uint64_t sub_100321FA4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100321FE4()
{
}

void *sub_100321FF0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_100322078()
{
}

void *sub_10032208C()
{
  __n128 result = operator new(0x10uLL);
  *__n128 result = off_1022A6648;
  return result;
}

void sub_1003220C4(uint64_t a1, void *a2)
{
  *a2 = off_1022A6648;
}

unsigned char *sub_1003220EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_1002E8808(a1, a2);
}

uint64_t sub_1003220F4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100322134()
{
}

void *sub_100322140(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1003221C8()
{
}

void *sub_1003221DC()
{
  __n128 result = operator new(0x10uLL);
  *__n128 result = off_1022A66D8;
  return result;
}

void sub_100322214(uint64_t a1, void *a2)
{
  *a2 = off_1022A66D8;
}

void *sub_10032223C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (*(char *)(a1 + 23) < 0) {
    return sub_1000DC48C((unsigned char *)a2, *(void **)a1, *(void *)(a1 + 8));
  }
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = *(void *)(a1 + 16);
  return result;
}

uint64_t sub_100322268(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1003222A8()
{
}

void *sub_1003222B4(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_100322338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1003223B0(a1, a2);
  sub_100322448(v7 + 32, a3);
  sub_1003224E0(a1 + 64, a4);
  return a1;
}

void sub_10032238C(_Unwind_Exception *a1)
{
  sub_100322140(v2);
  sub_100321FF0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1003223B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_100322448(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1003224E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10032257C()
{
}

void *sub_100322590(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = off_1022A6768;
  result[1] = v3;
  return result;
}

uint64_t sub_1003225D8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022A6768;
  a2[1] = v2;
  return result;
}

uint64_t sub_100322604(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  uint64_t v3 = *a2;
  *(_DWORD *)(v2 + 28) |= 1u;
  *(void *)(v2 + 8) = v3;
  return result;
}

uint64_t sub_100322620(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100322660()
{
}

void *sub_10032266C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1003226F4()
{
}

void *sub_100322708(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = off_1022A67F8;
  result[1] = v3;
  return result;
}

uint64_t sub_100322750(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022A67F8;
  a2[1] = v2;
  return result;
}

std::string *sub_10032277C(uint64_t a1, std::string::value_type *__s)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(_DWORD *)(v2 + 28) |= 2u;
  uint64_t v3 = *(std::string **)(v2 + 16);
  if (v3 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }

  return std::string::assign(v3, __s, 0x10uLL);
}

uint64_t sub_1003227FC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10032283C()
{
}

void *sub_100322848(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1003228D0()
{
}

void *sub_1003228E4(uint64_t a1)
{
  __n128 result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *__n128 result = off_1022A6888;
  result[1] = v3;
  return result;
}

uint64_t sub_10032292C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022A6888;
  a2[1] = v2;
  return result;
}

std::string *sub_100322958(uint64_t a1, std::string *__str)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(_DWORD *)(v2 + 28) |= 2u;
  uint64_t v3 = *(std::string **)(v2 + 16);
  if (v3 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }

  return std::string::operator=(v3, __str);
}

uint64_t sub_1003229D4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100322A14()
{
}

void *sub_100322A20(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_100322AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100322B1C(a1, a2);
  sub_100322BB4(v7 + 32, a3);
  sub_100322C4C(a1 + 64, a4);
  return a1;
}

void sub_100322AF8(_Unwind_Exception *a1)
{
  sub_100322848(v2);
  sub_10032266C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100322B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_100322BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_100322C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100322CE4(uint64_t a1, std::string *this, std::string *__str)
{
  if (*(_DWORD *)(a1 + 24) == 2)
  {
    std::string::operator=(this, __str);
  }
  else
  {
    v3[0] = a1;
    v3[1] = (uint64_t)__str;
    sub_100322D3C(v3);
  }
}

void sub_100322D3C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  if (*(char *)(v1 + 23) < 0)
  {
    sub_1000DC48C(__p, *(void **)v1, *(void *)(v1 + 8));
  }
  else
  {
    long long v3 = *(_OWORD *)v1;
    uint64_t v5 = *(void *)(v1 + 16);
    *(_OWORD *)std::string __p = v3;
  }
  sub_100322DC4(v2, (long long *)__p);
  if (SHIBYTE(v5) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100322DA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100322DC4(uint64_t a1, long long *a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 24);
  if (v4 != -1) {
    ((void (*)(char *, uint64_t))*(&off_1022A6558 + v4))(&v7, a1);
  }
  *(_DWORD *)(a1 + 24) = -1;
  long long v5 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v5;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  *(_DWORD *)(a1 + 24) = 2;
  return a1;
}

uint64_t sub_100322E44(uint64_t a1, void *a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 24);
  if (v4 != -1) {
    ((void (*)(char *, uint64_t))*(&off_1022A6558 + v4))(&v6, a1);
  }
  *(void *)a1 = *a2;
  *(_DWORD *)(a1 + 24) = 0;
  return a1;
}

uint64_t sub_100322EA8(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(unsigned int *)(a1 + 24);
  if (v4 != -1) {
    ((void (*)(char *, uint64_t))*(&off_1022A6558 + v4))(&v6, a1);
  }
  *(_DWORD *)(a1 + 24) = -1;
  *(_OWORD *)a1 = *a2;
  *(_DWORD *)(a1 + 24) = 1;
  return a1;
}

void sub_100322F18(uint64_t a1, std::string *this, std::string::value_type *__s)
{
  if (*(_DWORD *)(a1 + 24) == 2)
  {
    std::string::assign(this, __s);
  }
  else
  {
    v3[0] = a1;
    v3[1] = __s;
    sub_100322F70((uint64_t)v3);
  }
}

void sub_100322F70(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  sub_100134750(__p, *(char **)(a1 + 8));
  sub_100322DC4(v1, (long long *)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
}

void sub_100322FBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100322FD8(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  unint64_t v7 = sub_10031EBEC(a1, a2);
  unint64_t v8 = v7;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v9) {
        unint64_t v3 = v7 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v7;
    }
    unint64_t v12 = *(uint64_t ***)(*(void *)a1 + 8 * v3);
    if (v12)
    {
      for (uint64_t i = *v12; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v14 = i[1];
        if (v14 == v8)
        {
          if (*((_DWORD *)i + 6) == *(_DWORD *)(a2 + 8) && (sub_1002FC7A4((uint64_t)(i + 4), a2 + 16) & 1) != 0) {
            return i;
          }
        }
        else
        {
          if (v11 > 1)
          {
            if (v14 >= v9) {
              v14 %= v9;
            }
          }
          else
          {
            v14 &= v9 - 1;
          }
          if (v14 != v3) {
            break;
          }
        }
      }
    }
  }
  BOOL v15 = operator new(0x40uLL);
  v25[0] = v15;
  v25[1] = a1 + 16;
  *BOOL v15 = 0;
  v15[1] = v8;
  *((_OWORD *)v15 + 1) = *a3;
  sub_100321B94((uint64_t)(v15 + 4), (uint64_t)(a3 + 1));
  char v26 = 1;
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    BOOL v18 = 1;
    if (v9 >= 3) {
      BOOL v18 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v9);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_100100330(a1, v21);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  unint64_t v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    void *v22 = v25[0];
  }
  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8);
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v23 >= v9) {
          v23 %= v9;
        }
      }
      else
      {
        v23 &= v9 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }
  uint64_t i = (uint64_t *)v25[0];
  v25[0] = 0;
  ++*(void *)(a1 + 24);
  sub_1001F0858((uint64_t)v25, 0);
  return i;
}

void sub_100323254(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001F0858((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

float *sub_10032326C(float *result, float *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint8x8_t v10 = result;
LABEL_2:
  unint64_t v11 = v10;
LABEL_3:
  uint64_t v12 = 1 - a4;
  while (1)
  {
    uint8x8_t v10 = v11;
    uint64_t v13 = v12;
    uint64_t v14 = (char *)a2 - (char *)v11;
    unint64_t v15 = a2 - v11;
    if (!(!v6 & v5))
    {
      switch(v15)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          float v22 = *(a2 - 1);
          float v23 = *v11;
          if (v22 > *v11)
          {
            *unint64_t v11 = v22;
            *(a2 - 1) = v23;
          }
          break;
        case 3uLL:
          float v24 = v11[1];
          float v25 = *(a2 - 1);
          if (v24 <= v25) {
            int v26 = *((_DWORD *)a2 - 1);
          }
          else {
            int v26 = *((_DWORD *)v11 + 1);
          }
          if (v24 > v25) {
            float v24 = *(a2 - 1);
          }
          *(a2 - 1) = v24;
          *((_DWORD *)v11 + 1) = v26;
          float v27 = *(a2 - 1);
          if (v27 <= *v11) {
            float v28 = *v11;
          }
          else {
            float v28 = *(a2 - 1);
          }
          if (v27 > *v11) {
            float v27 = *v11;
          }
          *(a2 - 1) = v27;
          int v30 = *(_DWORD *)v11;
          float v29 = v11[1];
          if (v28 <= v29)
          {
            int v30 = *((_DWORD *)v11 + 1);
            float v29 = v28;
          }
          *(_DWORD *)unint64_t v11 = v30;
          v11[1] = v29;
          break;
        case 4uLL:
          float v32 = v11[1];
          float v31 = v11[2];
          if (*v11 <= v31) {
            int v33 = *((_DWORD *)v11 + 2);
          }
          else {
            int v33 = *(_DWORD *)v11;
          }
          if (*v11 <= v31) {
            float v31 = *v11;
          }
          void v11[2] = v31;
          *(_DWORD *)unint64_t v11 = v33;
          float v34 = *(a2 - 1);
          if (v32 <= v34) {
            float v35 = *(a2 - 1);
          }
          else {
            float v35 = v32;
          }
          if (v32 <= v34) {
            float v34 = v32;
          }
          *(a2 - 1) = v34;
          float v36 = *v11;
          if (*v11 <= v35) {
            float v37 = v35;
          }
          else {
            float v37 = *v11;
          }
          if (*v11 > v35) {
            float v36 = v35;
          }
          *unint64_t v11 = v37;
          v11[1] = v36;
          float v38 = v11[2];
          float v39 = *(a2 - 1);
          if (v38 <= v39) {
            float v40 = *(a2 - 1);
          }
          else {
            float v40 = v11[2];
          }
          if (v38 > v39) {
            float v38 = *(a2 - 1);
          }
          *(a2 - 1) = v38;
          float v41 = v11[1];
          if (v41 <= v40) {
            float v42 = v40;
          }
          else {
            float v42 = v11[1];
          }
          if (v41 > v40) {
            float v41 = v40;
          }
          v11[1] = v42;
          void v11[2] = v41;
          break;
        case 5uLL:
          int v43 = *(_DWORD *)v11;
          float v44 = v11[1];
          if (*v11 <= v44) {
            int v45 = *((_DWORD *)v11 + 1);
          }
          else {
            int v45 = *(_DWORD *)v11;
          }
          if (*v11 > v44) {
            int v43 = *((_DWORD *)v11 + 1);
          }
          *(_DWORD *)unint64_t v11 = v45;
          *((_DWORD *)v11 + 1) = v43;
          float v46 = v11[3];
          float v47 = *(a2 - 1);
          if (v46 <= v47) {
            int v48 = *((_DWORD *)a2 - 1);
          }
          else {
            int v48 = *((_DWORD *)v11 + 3);
          }
          if (v46 > v47) {
            float v46 = *(a2 - 1);
          }
          *(a2 - 1) = v46;
          *((_DWORD *)v11 + 3) = v48;
          float v49 = *(a2 - 1);
          float v50 = v11[2];
          if (v49 <= v50) {
            float v51 = v11[2];
          }
          else {
            float v51 = *(a2 - 1);
          }
          if (v49 > v50) {
            float v49 = v11[2];
          }
          *(a2 - 1) = v49;
          int v53 = *((_DWORD *)v11 + 2);
          float v52 = v11[3];
          float v54 = v11[1];
          if (v51 <= v52)
          {
            int v53 = *((_DWORD *)v11 + 3);
            float v52 = v51;
          }
          *((_DWORD *)v11 + 2) = v53;
          v11[3] = v52;
          float v55 = *(a2 - 1);
          if (v54 <= v55) {
            float v56 = *(a2 - 1);
          }
          else {
            float v56 = v54;
          }
          if (v54 <= v55) {
            float v55 = v54;
          }
          *(a2 - 1) = v55;
          int v57 = *(_DWORD *)v11;
          float v59 = v11[2];
          float v58 = v11[3];
          if (v58 <= *v11) {
            float v60 = *v11;
          }
          else {
            float v60 = v11[3];
          }
          if (v58 > *v11) {
            float v58 = *v11;
          }
          if (v60 <= v59)
          {
            int v57 = *((_DWORD *)v11 + 2);
            float v59 = v60;
          }
          if (v58 <= v56) {
            float v61 = v56;
          }
          else {
            float v61 = v58;
          }
          if (v58 > v56) {
            float v58 = v56;
          }
          if (v61 <= v59) {
            float v56 = v59;
          }
          *(_DWORD *)unint64_t v11 = v57;
          v11[1] = v56;
          if (v61 <= v59) {
            float v62 = v61;
          }
          else {
            float v62 = v59;
          }
          void v11[2] = v62;
          v11[3] = v58;
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v14 <= 95) {
      break;
    }
    if (v13 == 1)
    {
      if (v11 != a2)
      {
        return sub_100323BAC(v11, a2, a2, a3);
      }
      return result;
    }
    unint64_t v16 = v15 >> 1;
    float v17 = &v11[v15 >> 1];
    if ((unint64_t)v14 >= 0x201)
    {
      sub_100323710(v11, &v11[v15 >> 1], a2 - 1);
      sub_100323710(v11 + 1, v17 - 1, a2 - 2);
      sub_100323710(v11 + 2, &v11[v16 + 1], a2 - 3);
      sub_100323710(v17 - 1, v17, &v11[v16 + 1]);
      float v18 = *v11;
      *unint64_t v11 = *v17;
      float *v17 = v18;
      if (a5) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_100323710(&v11[v15 >> 1], v11, a2 - 1);
      if (a5) {
        goto LABEL_14;
      }
    }
    if (*(v11 - 1) <= *v11)
    {
      __n128 result = sub_100323798(v11, a2);
      unint64_t v11 = result;
      goto LABEL_19;
    }
LABEL_14:
    unint64_t v19 = sub_100323848(v11, a2);
    if ((v20 & 1) == 0) {
      goto LABEL_17;
    }
    BOOL v21 = sub_1003238FC(v11, v19);
    unint64_t v11 = v19 + 1;
    __n128 result = (float *)sub_1003238FC(v19 + 1, a2);
    if (result)
    {
      a4 = -v13;
      a2 = v19;
      if (v21) {
        return result;
      }
      goto LABEL_2;
    }
    uint64_t v12 = v13 + 1;
    if (!v21)
    {
LABEL_17:
      __n128 result = (float *)sub_10032326C(v10, v19, a3, -v13, a5 & 1);
      unint64_t v11 = v19 + 1;
LABEL_19:
      a5 = 0;
      a4 = -v13;
      goto LABEL_3;
    }
  }
  uint64_t v63 = v11 + 1;
  BOOL v65 = v11 == a2 || v63 == a2;
  if (a5)
  {
    if (!v65)
    {
      uint64_t v66 = 0;
      unint64_t v67 = v11;
      do
      {
        float v69 = *v67;
        float v68 = v67[1];
        unint64_t v67 = v63;
        if (v68 > v69)
        {
          uint64_t v70 = v66;
          while (1)
          {
            *(float *)((char *)v11 + v70 + 4) = v69;
            if (!v70) {
              break;
            }
            float v69 = *(float *)((char *)v11 + v70 - 4);
            v70 -= 4;
            if (v68 <= v69)
            {
              int v71 = (float *)((char *)v11 + v70 + 4);
              goto LABEL_119;
            }
          }
          int v71 = v11;
LABEL_119:
          *int v71 = v68;
        }
        uint64_t v63 = v67 + 1;
        v66 += 4;
      }
      while (v67 + 1 != a2);
    }
  }
  else if (!v65)
  {
    do
    {
      float v73 = *v10;
      float v72 = v10[1];
      uint8x8_t v10 = v63;
      if (v72 > v73)
      {
        uint64_t v74 = v63;
        do
        {
          *uint64_t v74 = v73;
          float v73 = *(v74 - 2);
          --v74;
        }
        while (v72 > v73);
        *uint64_t v74 = v72;
      }
      ++v63;
    }
    while (v10 + 1 != a2);
  }
  return result;
}

uint64_t sub_100323710(float *a1, float *a2, float *a3)
{
  float v3 = *a2;
  float v4 = *a1;
  float v5 = *a3;
  if (*a2 > *a1)
  {
    if (v5 > v3)
    {
      *a1 = v5;
      *a3 = v4;
      return 1;
    }
    *a1 = v3;
    *a2 = v4;
    if (*a3 <= v4) {
      return 1;
    }
    *a2 = *a3;
    *a3 = v4;
    return 2;
  }
  if (v5 > v3)
  {
    *a2 = v5;
    *a3 = v3;
    float v6 = *a1;
    if (*a2 <= *a1) {
      return 1;
    }
    *a1 = *a2;
    *a2 = v6;
    return 2;
  }
  return 0;
}

float *sub_100323798(float *a1, float *a2)
{
  float v2 = *a1;
  if (*a1 <= *(a2 - 1))
  {
    float v5 = a1 + 1;
    do
    {
      float v3 = v5;
      if (v5 >= a2) {
        break;
      }
      ++v5;
    }
    while (v2 <= *v3);
  }
  else
  {
    float v3 = a1;
    do
    {
      float v4 = v3[1];
      ++v3;
    }
    while (v2 <= v4);
  }
  if (v3 < a2)
  {
    do
      float v6 = *--a2;
    while (v2 > v6);
  }
  if (v3 < a2)
  {
    float v7 = *v3;
    float v8 = *a2;
    do
    {
      *float v3 = v8;
      *a2 = v7;
      do
      {
        float v9 = v3[1];
        ++v3;
        float v7 = v9;
      }
      while (v2 <= v9);
      do
      {
        float v10 = *--a2;
        float v8 = v10;
      }
      while (v2 > v10);
    }
    while (v3 < a2);
  }
  if (v3 - 1 != a1) {
    *a1 = *(v3 - 1);
  }
  *(v3 - 1) = v2;
  return v3;
}

float *sub_100323848(float *a1, float *a2)
{
  uint64_t v2 = 0;
  float v3 = *a1;
  do
    float v4 = a1[++v2];
  while (v4 > v3);
  float v5 = &a1[v2];
  float v6 = &a1[v2 - 1];
  if (v2 == 1)
  {
    do
    {
      if (v5 >= a2) {
        break;
      }
      float v8 = *--a2;
    }
    while (v8 <= v3);
  }
  else
  {
    do
      float v7 = *--a2;
    while (v7 <= v3);
  }
  if (v5 < a2)
  {
    float v9 = *a2;
    float v10 = &a1[v2];
    unint64_t v11 = a2;
    do
    {
      float *v10 = v9;
      *unint64_t v11 = v4;
      do
      {
        float v12 = v10[1];
        ++v10;
        float v4 = v12;
      }
      while (v12 > v3);
      do
      {
        float v13 = *--v11;
        float v9 = v13;
      }
      while (v13 <= v3);
    }
    while (v10 < v11);
    float v6 = v10 - 1;
  }
  if (v6 != a1) {
    *a1 = *v6;
  }
  *float v6 = v3;
  return v6;
}

BOOL sub_1003238FC(float *a1, float *a2)
{
  BOOL v2 = 1;
  switch(a2 - a1)
  {
    case 0:
    case 1:
      return v2;
    case 2:
      float v3 = *(a2 - 1);
      float v4 = *a1;
      if (v3 > *a1)
      {
        *a1 = v3;
        *(a2 - 1) = v4;
      }
      break;
    case 3:
      float v20 = a1[1];
      float v21 = *(a2 - 1);
      if (v20 <= v21) {
        int v22 = *((_DWORD *)a2 - 1);
      }
      else {
        int v22 = *((_DWORD *)a1 + 1);
      }
      if (v20 > v21) {
        float v20 = *(a2 - 1);
      }
      *(a2 - 1) = v20;
      *((_DWORD *)a1 + 1) = v22;
      float v23 = *(a2 - 1);
      if (v23 <= *a1) {
        float v24 = *a1;
      }
      else {
        float v24 = *(a2 - 1);
      }
      if (v23 > *a1) {
        float v23 = *a1;
      }
      *(a2 - 1) = v23;
      float v26 = *a1;
      float v25 = a1[1];
      if (v24 <= v25)
      {
        float v26 = a1[1];
        float v25 = v24;
      }
      *a1 = v26;
      a1[1] = v25;
      break;
    case 4:
      float v48 = a1[1];
      float v47 = a1[2];
      if (*a1 <= v47) {
        float v49 = a1[2];
      }
      else {
        float v49 = *a1;
      }
      if (*a1 <= v47) {
        float v47 = *a1;
      }
      a1[2] = v47;
      *a1 = v49;
      float v50 = *(a2 - 1);
      if (v48 <= v50) {
        float v51 = *(a2 - 1);
      }
      else {
        float v51 = v48;
      }
      if (v48 <= v50) {
        float v50 = v48;
      }
      *(a2 - 1) = v50;
      float v52 = *a1;
      if (*a1 <= v51) {
        float v53 = v51;
      }
      else {
        float v53 = *a1;
      }
      if (*a1 > v51) {
        float v52 = v51;
      }
      *a1 = v53;
      a1[1] = v52;
      float v54 = a1[2];
      float v55 = *(a2 - 1);
      if (v54 <= v55) {
        float v56 = *(a2 - 1);
      }
      else {
        float v56 = a1[2];
      }
      if (v54 > v55) {
        float v54 = *(a2 - 1);
      }
      *(a2 - 1) = v54;
      float v57 = a1[1];
      if (v57 <= v56) {
        float v58 = v56;
      }
      else {
        float v58 = a1[1];
      }
      if (v57 > v56) {
        float v57 = v56;
      }
      a1[1] = v58;
      a1[2] = v57;
      break;
    case 5:
      float v27 = *a1;
      float v28 = a1[1];
      if (*a1 <= v28) {
        float v29 = a1[1];
      }
      else {
        float v29 = *a1;
      }
      if (*a1 > v28) {
        float v27 = a1[1];
      }
      *a1 = v29;
      a1[1] = v27;
      float v30 = a1[3];
      float v31 = *(a2 - 1);
      if (v30 <= v31) {
        int v32 = *((_DWORD *)a2 - 1);
      }
      else {
        int v32 = *((_DWORD *)a1 + 3);
      }
      if (v30 > v31) {
        float v30 = *(a2 - 1);
      }
      *(a2 - 1) = v30;
      *((_DWORD *)a1 + 3) = v32;
      float v33 = *(a2 - 1);
      float v34 = a1[2];
      if (v33 <= v34) {
        float v35 = a1[2];
      }
      else {
        float v35 = *(a2 - 1);
      }
      if (v33 > v34) {
        float v33 = a1[2];
      }
      *(a2 - 1) = v33;
      int v37 = *((_DWORD *)a1 + 2);
      float v36 = a1[3];
      float v38 = a1[1];
      if (v35 <= v36)
      {
        int v37 = *((_DWORD *)a1 + 3);
        float v36 = v35;
      }
      *((_DWORD *)a1 + 2) = v37;
      a1[3] = v36;
      float v39 = *(a2 - 1);
      if (v38 <= v39) {
        float v40 = *(a2 - 1);
      }
      else {
        float v40 = v38;
      }
      if (v38 <= v39) {
        float v39 = v38;
      }
      *(a2 - 1) = v39;
      float v41 = *a1;
      float v43 = a1[2];
      float v42 = a1[3];
      if (v42 <= *a1) {
        float v44 = *a1;
      }
      else {
        float v44 = a1[3];
      }
      if (v42 > *a1) {
        float v42 = *a1;
      }
      if (v44 <= v43)
      {
        float v41 = a1[2];
        float v43 = v44;
      }
      if (v42 <= v40) {
        float v45 = v40;
      }
      else {
        float v45 = v42;
      }
      if (v42 > v40) {
        float v42 = v40;
      }
      if (v45 <= v43) {
        float v40 = v43;
      }
      *a1 = v41;
      a1[1] = v40;
      if (v45 <= v43) {
        float v46 = v45;
      }
      else {
        float v46 = v43;
      }
      a1[2] = v46;
      a1[3] = v42;
      break;
    default:
      float v5 = a1 + 2;
      float v6 = a1[2];
      float v8 = *a1;
      float v7 = a1[1];
      if (v7 <= v6) {
        float v9 = a1[2];
      }
      else {
        float v9 = a1[1];
      }
      if (v7 <= v6) {
        float v6 = a1[1];
      }
      if (v6 <= v8) {
        float v10 = *a1;
      }
      else {
        float v10 = v6;
      }
      if (v6 > v8) {
        float v6 = *a1;
      }
      *float v5 = v6;
      if (v10 <= v9) {
        float v11 = v9;
      }
      else {
        float v11 = v8;
      }
      if (v10 > v9) {
        float v10 = v9;
      }
      *a1 = v11;
      a1[1] = v10;
      float v12 = a1 + 3;
      if (a1 + 3 == a2)
      {
LABEL_29:
        BOOL v2 = 1;
      }
      else
      {
        int v13 = 0;
        uint64_t v14 = 12;
        while (1)
        {
          float v15 = *v12;
          float v16 = *v5;
          if (*v12 > *v5)
          {
            uint64_t v17 = v14;
            while (1)
            {
              *(float *)((char *)a1 + v17) = v16;
              uint64_t v18 = v17 - 4;
              if (v17 == 4) {
                break;
              }
              float v16 = *(float *)((char *)a1 + v17 - 8);
              v17 -= 4;
              if (v15 <= v16)
              {
                unint64_t v19 = (float *)((char *)a1 + v18);
                goto LABEL_27;
              }
            }
            unint64_t v19 = a1;
LABEL_27:
            float *v19 = v15;
            if (++v13 == 8) {
              break;
            }
          }
          float v5 = v12;
          v14 += 4;
          if (++v12 == a2) {
            goto LABEL_29;
          }
        }
        BOOL v2 = v12 + 1 == a2;
      }
      break;
  }
  return v2;
}

float *sub_100323BAC(float *a1, float *a2, float *a3, uint64_t a4)
{
  if (a1 != a2)
  {
    float v6 = a2;
    uint64_t v8 = (char *)a2 - (char *)a1;
    uint64_t v9 = a2 - a1;
    if ((char *)a2 - (char *)a1 >= 5)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      float v12 = &a1[v10];
      do
      {
        sub_100323D80((uint64_t)a1, a4, v9, v12--);
        --v11;
      }
      while (v11);
    }
    int v13 = v6;
    if (v6 != a3)
    {
      uint64_t v14 = v6;
      do
      {
        float v15 = *v14;
        if (*v14 > *a1)
        {
          *uint64_t v14 = *a1;
          *a1 = v15;
          sub_100323D80((uint64_t)a1, a4, v9, a1);
        }
        ++v14;
      }
      while (v14 != a3);
      int v13 = a3;
    }
    if (v8 >= 5)
    {
      uint64_t v16 = (unint64_t)v8 >> 2;
      do
      {
        uint64_t v17 = 0;
        float v18 = *a1;
        unint64_t v19 = a1;
        do
        {
          float v20 = v19;
          v19 += v17 + 1;
          uint64_t v21 = 2 * v17;
          uint64_t v17 = (2 * v17) | 1;
          uint64_t v22 = v21 + 2;
          if (v22 < v16 && *v19 > v19[1])
          {
            ++v19;
            uint64_t v17 = v22;
          }
          float *v20 = *v19;
        }
        while (v17 <= (uint64_t)((unint64_t)(v16 - 2) >> 1));
        if (v19 != --v6)
        {
          float *v19 = *v6;
          *float v6 = v18;
          uint64_t v23 = (char *)v19 - (char *)a1 + 4;
          if (v23 < 5) {
            continue;
          }
          unint64_t v24 = (((unint64_t)v23 >> 2) - 2) >> 1;
          float v25 = &a1[v24];
          float v26 = *v25;
          float v18 = *v19;
          if (*v25 <= *v19) {
            continue;
          }
          do
          {
            float *v19 = v26;
            unint64_t v19 = v25;
            if (!v24) {
              break;
            }
            unint64_t v24 = (v24 - 1) >> 1;
            float v25 = &a1[v24];
            float v26 = *v25;
          }
          while (*v25 > v18);
        }
        float *v19 = v18;
      }
      while (v16-- > 2);
    }
    return v13;
  }
  return a3;
}

uint64_t sub_100323D80(uint64_t result, uint64_t a2, uint64_t a3, float *a4)
{
  if (a3 >= 2)
  {
    uint64_t v4 = (uint64_t)a4 - result;
    int64_t v5 = (unint64_t)(a3 - 2) >> 1;
    if (v5 >= ((uint64_t)a4 - result) >> 2)
    {
      uint64_t v6 = v4 >> 1;
      uint64_t v7 = (v4 >> 1) + 1;
      uint64_t v8 = (float *)(result + 4 * v7);
      uint64_t v9 = v6 + 2;
      if (v9 < a3 && *v8 > v8[1])
      {
        ++v8;
        uint64_t v7 = v9;
      }
      float v10 = *v8;
      float v11 = *a4;
      if (*v8 <= *a4)
      {
        do
        {
          *a4 = v10;
          a4 = v8;
          if (v5 < v7) {
            break;
          }
          uint64_t v12 = 2 * v7;
          uint64_t v7 = (2 * v7) | 1;
          uint64_t v8 = (float *)(result + 4 * v7);
          uint64_t v13 = v12 + 2;
          if (v13 < a3 && *v8 > v8[1])
          {
            ++v8;
            uint64_t v7 = v13;
          }
          float v10 = *v8;
        }
        while (*v8 <= v11);
        *a4 = v11;
      }
    }
  }
  return result;
}

char *sub_100323E3C(uint64_t a1, unsigned int *a2, _DWORD *a3, _OWORD *a4)
{
  unint64_t v8 = *a2;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v9 <= v8) {
        unint64_t v4 = v8 % v9;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
    float v11 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v11)
    {
      uint64_t v12 = (char *)*v11;
      if (*v11)
      {
        do
        {
          unint64_t v13 = *((void *)v12 + 1);
          if (v13 == v8)
          {
            if (*((_DWORD *)v12 + 4) == v8) {
              return v12;
            }
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9) {
                v13 %= v9;
              }
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v4) {
              break;
            }
          }
          uint64_t v12 = *(char **)v12;
        }
        while (v12);
      }
    }
  }
  uint64_t v12 = (char *)operator new(0x28uLL);
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = v8;
  *((_DWORD *)v12 + 4) = *a3;
  *(_OWORD *)(v12 + 24) = *a4;
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v9 || (float)(v15 * (float)v9) < v14)
  {
    BOOL v16 = 1;
    if (v9 >= 3) {
      BOOL v16 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v9);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    sub_100100330(a1, v19);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v9 <= v8) {
        unint64_t v4 = v8 % v9;
      }
      else {
        unint64_t v4 = v8;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
  }
  uint64_t v20 = *(void *)a1;
  uint64_t v21 = *(void **)(*(void *)a1 + 8 * v4);
  if (v21)
  {
    *(void *)uint64_t v12 = *v21;
LABEL_38:
    void *v21 = v12;
    goto LABEL_39;
  }
  *(void *)uint64_t v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  *(void *)(v20 + 8 * v4) = a1 + 16;
  if (*(void *)v12)
  {
    unint64_t v22 = *(void *)(*(void *)v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v22 >= v9) {
        v22 %= v9;
      }
    }
    else
    {
      v22 &= v9 - 1;
    }
    uint64_t v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v12;
}

void sub_10032405C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_100324070(void *a1, _OWORD *a2)
{
  sub_1003240DC((uint64_t)a1, a2, (uint64_t)v5);
  float v3 = sub_100324164(a1, v5[0]);
  v5[0] = 0;
  sub_1001F0858((uint64_t)v5, 0);
  return v3;
}

void sub_1003240C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001F0858((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_1003240DC@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 16;
  uint64_t v6 = operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((_OWORD *)v6 + 1) = *a2;
  uint64_t v7 = sub_100321B94((uint64_t)(v6 + 4), (uint64_t)(a2 + 1));
  *(unsigned char *)(a3 + 16) = 1;
  uint64_t result = sub_10031EBEC(v7, (uint64_t)(v6 + 2));
  v6[1] = result;
  return result;
}

void sub_10032414C(_Unwind_Exception *a1)
{
  sub_1001F0858(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_100324164(void *a1, void *a2)
{
  uint64_t v4 = (uint64_t)(a2 + 2);
  unint64_t v5 = sub_10031EBEC((uint64_t)a1, (uint64_t)(a2 + 2));
  a2[1] = v5;
  uint64_t v6 = sub_1003241C4((uint64_t)a1, v5, v4);
  sub_1000D8A74(a1, a2, v6);
  return a2;
}

void *sub_1003241C4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  float v7 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    BOOL v9 = 1;
    if (v6 >= 3) {
      BOOL v9 = (v6 & (v6 - 1)) != 0;
    }
    unint64_t v10 = v9 | (2 * v6);
    unint64_t v11 = vcvtps_u32_f32(v7 / v8);
    if (v10 <= v11) {
      size_t v12 = v11;
    }
    else {
      size_t v12 = v10;
    }
    sub_100324344(a1, v12);
    unint64_t v6 = *(void *)(a1 + 8);
  }
  uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v13.i16[0] = vaddlv_u8(v13);
  unint64_t v14 = v13.u32[0];
  if (v13.u32[0] > 1uLL)
  {
    unint64_t v15 = a2;
    if (v6 <= a2) {
      unint64_t v15 = a2 % v6;
    }
  }
  else
  {
    unint64_t v15 = (v6 - 1) & a2;
  }
  BOOL v16 = *(void **)(*(void *)a1 + 8 * v15);
  if (v16)
  {
    unint64_t v17 = (void *)*v16;
    if (*v16)
    {
      int v18 = 0;
      do
      {
        unint64_t v19 = v17[1];
        if (v14 > 1)
        {
          unint64_t v20 = v17[1];
          if (v19 >= v6) {
            unint64_t v20 = v19 % v6;
          }
        }
        else
        {
          unint64_t v20 = v19 & (v6 - 1);
        }
        if (v20 != v15) {
          break;
        }
        int v21 = v19 == a2 && *((_DWORD *)v17 + 6) == *(_DWORD *)(a3 + 8) ? sub_1002FC7A4((uint64_t)(v17 + 4), a3 + 16) : 0;
        if (v18 & (v21 ^ 1)) {
          break;
        }
        v18 |= v21;
        BOOL v16 = (void *)*v16;
        unint64_t v17 = (void *)*v16;
      }
      while (*v16);
    }
  }
  return v16;
}

void sub_100324344(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_100324434(a1, prime);
    }
  }
}

void sub_100324434(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_1001D7FA0();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(uint64_t **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      unint64_t v10 = v9.u32[0];
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      for (uint64_t i = *v7; *v7; uint64_t i = *v7)
      {
        unint64_t v13 = *(void *)(i + 8);
        if (v10 > 1)
        {
          if (v13 >= a2) {
            v13 %= a2;
          }
        }
        else
        {
          v13 &= a2 - 1;
        }
        if (v13 == v8)
        {
          uint64_t v7 = (uint64_t *)i;
        }
        else if (*(void *)(*(void *)a1 + 8 * v13))
        {
          unint64_t v14 = *(void **)i;
          if (*(void *)i)
          {
            unint64_t v15 = (void *)i;
            while (*(_DWORD *)(i + 24) == *((_DWORD *)v14 + 6))
            {
              int v16 = sub_1002FC7A4(i + 32, (uint64_t)(v14 + 4));
              unint64_t v17 = (void *)*v15;
              if (!v16)
              {
                unint64_t v14 = (void *)*v15;
                break;
              }
              unint64_t v14 = (void *)*v17;
              unint64_t v15 = (void *)*v15;
              if (!*v17) {
                goto LABEL_33;
              }
            }
            unint64_t v17 = v15;
          }
          else
          {
            unint64_t v17 = (void *)i;
          }
LABEL_33:
          *uint64_t v7 = (uint64_t)v14;
          void *v17 = **(void **)(*(void *)a1 + 8 * v13);
          **(void **)(*(void *)a1 + 8 * v13) = i;
        }
        else
        {
          *(void *)(*(void *)a1 + 8 * v13) = v7;
          uint64_t v7 = (uint64_t *)i;
          unint64_t v8 = v13;
        }
      }
    }
  }
  else
  {
    unint64_t v11 = *(void **)a1;
    *(void *)a1 = 0;
    if (v11) {
      operator delete(v11);
    }
    *(void *)(a1 + 8) = 0;
  }
}

uint64_t *sub_1003245FC(void *a1, uint64_t a2)
{
  float v3 = sub_100324670(a1, a2);
  int8x8_t v4 = v3;
  if (v3)
  {
    unint64_t v5 = v3;
    do
      unint64_t v5 = (uint64_t *)*v5;
    while (v5 && *((_DWORD *)v5 + 6) == *(_DWORD *)(a2 + 8) && (sub_1002FC7A4((uint64_t)(v5 + 4), a2 + 16) & 1) != 0);
  }
  return v4;
}

uint64_t *sub_100324670(void *a1, uint64_t a2)
{
  unint64_t v4 = sub_10031EBEC((uint64_t)a1, a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  unint64_t v10 = *(uint64_t ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  for (uint64_t i = *v10; i; uint64_t i = (uint64_t *)*i)
  {
    unint64_t v12 = i[1];
    if (v12 == v6)
    {
      if (*((_DWORD *)i + 6) == *(_DWORD *)(a2 + 8) && (sub_1002FC7A4((uint64_t)(i + 4), a2 + 16) & 1) != 0) {
        return i;
      }
    }
    else
    {
      if (v8 > 1)
      {
        if (v12 >= *(void *)&v5) {
          v12 %= *(void *)&v5;
        }
      }
      else
      {
        v12 &= *(void *)&v5 - 1;
      }
      if (v12 != v9) {
        return 0;
      }
    }
  }
  return i;
}

void sub_10032477C(void *a1, uint64_t *a2, uint64_t *a3)
{
  unint64_t v4 = a2;
  uint64_t v6 = a1[1];
  if (v6)
  {
    for (uint64_t i = 0; i != v6; ++i)
      *(void *)(*a1 + 8 * i) = 0;
    unint64_t v8 = (void *)a1[2];
    a1[2] = 0;
    a1[3] = 0;
    if (v8) {
      BOOL v9 = a2 == a3;
    }
    else {
      BOOL v9 = 1;
    }
    if (v9)
    {
      unint64_t v10 = v8;
    }
    else
    {
      do
      {
        *((_OWORD *)v8 + 1) = *((_OWORD *)v4 + 1);
        sub_100324880((uint64_t)(v8 + 4), (uint64_t)(v4 + 4));
        unint64_t v10 = (void *)*v8;
        sub_100324164(a1, v8);
        unint64_t v4 = (uint64_t *)*v4;
        if (v10) {
          BOOL v11 = v4 == a3;
        }
        else {
          BOOL v11 = 1;
        }
        unint64_t v8 = v10;
      }
      while (!v11);
    }
    sub_1001F0108((uint64_t)a1, v10);
  }
  while (v4 != a3)
  {
    sub_10032495C(a1, (_OWORD *)v4 + 1);
    unint64_t v4 = (uint64_t *)*v4;
  }
}

void sub_100324850(void *a1)
{
  __cxa_begin_catch(a1);
  sub_1001F0108(v1, v2);
  __cxa_rethrow();
}

void sub_10032486C(_Unwind_Exception *a1)
{
}

uint64_t sub_100324880(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(unsigned int *)(result + 24);
  uint64_t v4 = *(unsigned int *)(a2 + 24);
  if (v3 == -1)
  {
    if (v4 == -1) {
      return result;
    }
  }
  else if (v4 == -1)
  {
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))*(&off_1022A6558 + v3))(&v6, result, a2);
    *(_DWORD *)(v2 + 24) = -1;
    return result;
  }
  uint64_t v5 = result;
  return ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))*(&off_1022A6908 + v4))(&v5, result, a2);
}

uint64_t sub_100324910(uint64_t *a1, void *a2, void *a3)
{
  uint64_t result = *a1;
  if (*(_DWORD *)(result + 24)) {
    return sub_100322E44(result, a3);
  }
  *a2 = *a3;
  return result;
}

uint64_t sub_100324930(uint64_t *a1, _OWORD *a2, _OWORD *a3)
{
  uint64_t result = *a1;
  if (*(_DWORD *)(result + 24) != 1) {
    return sub_100322EA8(result, a3);
  }
  *a2 = *a3;
  return result;
}

void sub_100324954(uint64_t *a1, std::string *a2, std::string *a3)
{
}

void *sub_10032495C(void *a1, _OWORD *a2)
{
  sub_1003249C8((uint64_t)a1, a2, (uint64_t)v5);
  uint64_t v3 = sub_100324164(a1, v5[0]);
  v5[0] = 0;
  sub_1001F0858((uint64_t)v5, 0);
  return v3;
}

void sub_1003249B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001F0858((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_1003249C8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 16;
  char v6 = operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  *char v6 = 0;
  v6[1] = 0;
  *((_OWORD *)v6 + 1) = *a2;
  uint64_t v7 = sub_1001F073C((uint64_t)(v6 + 4), (uint64_t)(a2 + 1));
  *(unsigned char *)(a3 + 16) = 1;
  uint64_t result = sub_10031EBEC(v7, (uint64_t)(v6 + 2));
  v6[1] = result;
  return result;
}

void sub_100324A38(_Unwind_Exception *a1)
{
  sub_1001F0858(v1, 0);
  _Unwind_Resume(a1);
}

void sub_100324A50(void *a1, unsigned int *a2, uint64_t *a3)
{
  uint64_t v6 = a1[1];
  if (!v6) {
    goto LABEL_9;
  }
  for (uint64_t i = 0; i != v6; *(void *)(*a1 + 8 * i++) = 0)
    ;
  unint64_t v8 = (uint64_t *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v8)
  {
    while (a2 != (unsigned int *)a3)
    {
      unint64_t v9 = a2[4];
      *((_DWORD *)v8 + 4) = v9;
      unint64_t v10 = (uint64_t *)*v8;
      v8[1] = v9;
      BOOL v11 = (void *)sub_100324B5C((uint64_t)a1, v9, (_DWORD *)v8 + 4);
      sub_1000D8A74(a1, v8, v11);
      a2 = *(unsigned int **)a2;
      unint64_t v8 = v10;
      if (!v10) {
        goto LABEL_9;
      }
    }
    do
    {
      unint64_t v12 = (uint64_t *)*v8;
      operator delete(v8);
      unint64_t v8 = v12;
    }
    while (v12);
  }
  else
  {
LABEL_9:
    while (a2 != (unsigned int *)a3)
    {
      sub_100324F18(a1, a2 + 4);
      a2 = *(unsigned int **)a2;
    }
  }
}

void sub_100324B28(void *a1)
{
  __cxa_begin_catch(a1);
  do
  {
    uint64_t v2 = (void *)*v1;
    operator delete(v1);
    uint64_t v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_100324B48(_Unwind_Exception *a1)
{
}

uint64_t sub_100324B5C(uint64_t a1, unint64_t a2, _DWORD *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  float v7 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    uint64_t v9 = 2 * v6;
    BOOL v10 = v6 < 3 || (v6 & (v6 - 1)) != 0;
    size_t v11 = v10 | v9;
    unint64_t v12 = vcvtps_u32_f32(v7 / v8);
    if (v11 <= v12) {
      size_t v13 = v12;
    }
    else {
      size_t v13 = v11;
    }
    sub_100324CB4(a1, v13);
    unint64_t v6 = *(void *)(a1 + 8);
  }
  uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v14.i16[0] = vaddlv_u8(v14);
  if (v14.u32[0] > 1uLL)
  {
    unint64_t v15 = a2;
    if (v6 <= a2) {
      unint64_t v15 = a2 % v6;
    }
  }
  else
  {
    unint64_t v15 = (v6 - 1) & a2;
  }
  uint64_t v16 = *(void *)(*(void *)a1 + 8 * v15);
  if (!v16) {
    return 0;
  }
  int v17 = 0;
  do
  {
    uint64_t result = v16;
    uint64_t v16 = *(void *)v16;
    if (!v16) {
      break;
    }
    unint64_t v19 = *(void *)(v16 + 8);
    if (v14.u32[0] > 1uLL)
    {
      unint64_t v20 = *(void *)(v16 + 8);
      if (v19 >= v6) {
        unint64_t v20 = v19 % v6;
      }
    }
    else
    {
      unint64_t v20 = v19 & (v6 - 1);
    }
    if (v20 != v15) {
      break;
    }
    BOOL v21 = v19 == a2 && *(_DWORD *)(v16 + 16) == *a3;
    int v22 = v17 & !v21;
    v17 |= v21;
  }
  while (v22 != 1);
  return result;
}

void sub_100324CB4(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_100324DA4(a1, prime);
    }
  }
}

void sub_100324DA4(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_1001D7FA0();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(uint64_t ***)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = (unint64_t)v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      for (uint64_t i = *v7; *v7; uint64_t i = *v7)
      {
        unint64_t v12 = i[1];
        if (v9.u32[0] > 1uLL)
        {
          if (v12 >= a2) {
            v12 %= a2;
          }
        }
        else
        {
          v12 &= a2 - 1;
        }
        if (v12 == v8)
        {
          uint64_t v7 = (uint64_t **)i;
        }
        else
        {
          size_t v13 = i;
          if (*(void *)(*(void *)a1 + 8 * v12))
          {
            do
            {
              uint8x8_t v14 = v13;
              size_t v13 = (uint64_t *)*v13;
            }
            while (v13 && *((_DWORD *)i + 4) == *((_DWORD *)v13 + 4));
            *uint64_t v7 = v13;
            *uint8x8_t v14 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = i;
          }
          else
          {
            *(void *)(*(void *)a1 + 8 * v12) = v7;
            uint64_t v7 = (uint64_t **)i;
            unint64_t v8 = v12;
          }
        }
      }
    }
  }
  else
  {
    BOOL v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

_DWORD *sub_100324F18(void *a1, unsigned int *a2)
{
  int8x8_t v4 = operator new(0x18uLL);
  unint64_t v5 = *a2;
  v4[4] = v5;
  *(void *)int8x8_t v4 = 0;
  *((void *)v4 + 1) = v5;
  uint64_t v6 = (void *)sub_100324B5C((uint64_t)a1, v5, v4 + 4);
  sub_1000D8A74(a1, v4, v6);
  return v4;
}

void sub_100324F7C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100324F90(void *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = a1[1];
  if (!v6) {
    goto LABEL_9;
  }
  for (uint64_t i = 0; i != v6; *(void *)(*a1 + 8 * i++) = 0)
    ;
  unint64_t v8 = (uint64_t *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v8)
  {
    while (a2 != a3)
    {
      unint64_t v9 = *((unsigned int *)a2 + 4);
      *((_DWORD *)v8 + 4) = v9;
      *(_OWORD *)(v8 + 3) = *(_OWORD *)(a2 + 3);
      BOOL v10 = (uint64_t *)*v8;
      v8[1] = v9;
      size_t v11 = (void *)sub_100324B5C((uint64_t)a1, v9, (_DWORD *)v8 + 4);
      sub_1000D8A74(a1, v8, v11);
      a2 = (uint64_t *)*a2;
      unint64_t v8 = v10;
      if (!v10) {
        goto LABEL_9;
      }
    }
    do
    {
      unint64_t v12 = (uint64_t *)*v8;
      operator delete(v8);
      unint64_t v8 = v12;
    }
    while (v12);
  }
  else
  {
LABEL_9:
    while (a2 != a3)
    {
      sub_1003250A4(a1, (uint64_t)(a2 + 2));
      a2 = (uint64_t *)*a2;
    }
  }
}

void sub_100325070(void *a1)
{
  __cxa_begin_catch(a1);
  do
  {
    uint64_t v2 = (void *)*v1;
    operator delete(v1);
    uint64_t v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_100325090(_Unwind_Exception *a1)
{
}

unsigned int *sub_1003250A4(void *a1, uint64_t a2)
{
  int8x8_t v4 = (unsigned int *)operator new(0x28uLL);
  *((_OWORD *)v4 + 1) = *(_OWORD *)a2;
  *((void *)v4 + 4) = *(void *)(a2 + 16);
  unint64_t v5 = v4[4];
  *(void *)int8x8_t v4 = 0;
  *((void *)v4 + 1) = v5;
  uint64_t v6 = (void *)sub_100324B5C((uint64_t)a1, v5, v4 + 4);
  sub_1000D8A74(a1, v4, v6);
  return v4;
}

void sub_100325114(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_100325128(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a1 + 8);
  *uint64_t v3 = 0;
  v3[1] = 0;
  void v3[2] = 0;
  uint64_t result = sub_1001DD364(v3, *(const void **)a2, *(void *)(a2 + 8), (uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3);
  *(void *)(a1 + 8) = v3 + 3;
  return result;
}

void sub_100325174(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_10032517C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 6);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x155555555555555) {
    sub_1001D7FD4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 6);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0xAAAAAAAAAAAAAALL) {
    unint64_t v9 = 0x155555555555555;
  }
  else {
    unint64_t v9 = v5;
  }
  int v17 = a1 + 2;
  if (v9) {
    BOOL v10 = (char *)sub_10017EB28(v7, v9);
  }
  else {
    BOOL v10 = 0;
  }
  size_t v13 = v10;
  uint8x8_t v14 = &v10[192 * v4];
  uint64_t v16 = &v10[192 * v9];
  sub_10031F654((uint64_t)v14, a2);
  unint64_t v15 = v14 + 192;
  sub_1001F3530(a1, &v13);
  uint64_t v11 = a1[1];
  sub_1001F3774(&v13);
  return v11;
}

void sub_100325270(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001F3774((void **)va);
  _Unwind_Resume(a1);
}

void sub_100325284(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_signpost_emit_with_name_impl(a1, v9, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, a5, a6, &a9, 0x26u);
}

void sub_1003252B0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x26u);
}

void sub_1003252D0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_impl(a1, v9, OS_LOG_TYPE_INFO, a4, &a9, 0x26u);
}

void sub_1003252F0(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419C70, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419C70))
  {
    sub_100328294((std::string *)&xmmword_102419C58);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_102419C58, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419C70);
  }
  if (byte_102419C6F < 0)
  {
    sub_1000DC48C((unsigned char *)a1, (void *)xmmword_102419C58, *((unint64_t *)&xmmword_102419C58 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_102419C58;
    *(void *)(a1 + 16) = unk_102419C68;
  }
}

void sub_1003253AC(_Unwind_Exception *a1)
{
}

void sub_1003253C4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419C90, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419C90))
  {
    sub_100328894((std::string *)&xmmword_102419C78);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_102419C78, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419C90);
  }
  if (byte_102419C8F < 0)
  {
    sub_1000DC48C((unsigned char *)a1, (void *)xmmword_102419C78, *((unint64_t *)&xmmword_102419C78 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_102419C78;
    *(void *)(a1 + 16) = unk_102419C88;
  }
}

void sub_100325480(_Unwind_Exception *a1)
{
}

void sub_100325498(uint64_t *a1)
{
  BOOL v2 = sub_10014C3C0(*a1);
  *((unsigned char *)a1 + 8) = v2;
  if (v2)
  {
    sub_1005F7B0C(*a1, "MicroLocationAssociatedState", (const char **)&off_1022A6940, 0, 0);
    char v3 = sub_1005F93E4(*a1, "MicroLocationAssociatedState");
    *((unsigned char *)a1 + 8) = v3;
    if (v3)
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6920);
      }
      unint64_t v4 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)long long buf = 136380675;
        unint64_t v9 = "MicroLocationAssociatedState";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Sucessfully created table if necessary: %{private}s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 == -1) {
          goto LABEL_16;
        }
        goto LABEL_28;
      }
    }
    else
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6920);
      }
      uint64_t v7 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 136446210;
        unint64_t v9 = "MicroLocationAssociatedState";
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to create table: %{public}s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A6920);
        }
        uint64_t v6 = (uint8_t *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLMicroLocationAssociatedStateTable::initTable()", "%s\n");
        goto LABEL_26;
      }
    }
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6920);
    }
    unint64_t v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Database is not connected so we can't intialize our table", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 == -1)
      {
LABEL_16:
        uint64_t v6 = (uint8_t *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationAssociatedStateTable::initTable()", "%s\n");
LABEL_26:
        if (v6 != buf) {
          free(v6);
        }
        return;
      }
LABEL_28:
      dispatch_once(&qword_102419450, &stru_1022A6920);
      goto LABEL_16;
    }
  }
}

uint64_t sub_1003258A0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 0;
  sub_100325498((uint64_t *)a1);
  return a1;
}

char *sub_1003258D0(char *__dst, long long *a2, _OWORD *a3, void *a4, char a5, void *a6, int a7, int a8)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000DC48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v15 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__dst = v15;
  }
  *(_OWORD *)(__dst + 24) = *a3;
  *((void *)__dst + 5) = *a4;
  __dst[48] = a5;
  *((void *)__dst + 7) = *a6;
  *((_DWORD *)__dst + 16) = a7;
  *((_DWORD *)__dst + 17) = a8;
  return __dst;
}

void sub_100325974(uint64_t a1, uint64_t a2, unsigned int a3)
{
  strcpy((char *)&v41, "SELECT * FROM (SELECT ");
  *((unsigned char *)&v41.__r_.__value_.__s + 23) = 22;
  sub_1003252F0((uint64_t)__p);
  if ((v40 & 0x80u) == 0) {
    uint64_t v6 = __p;
  }
  else {
    uint64_t v6 = (void **)__p[0];
  }
  if ((v40 & 0x80u) == 0) {
    std::string::size_type v7 = v40;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)__p[1];
  }
  unint64_t v8 = std::string::append(&v41, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v42.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  uint64_t v10 = std::string::append(&v42, " FROM ");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v43.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  unint64_t v12 = std::string::append(&v43, "MicroLocationAssociatedState");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v44.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  uint8x8_t v14 = std::string::append(&v44, " ");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v45.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  int v16 = *(char *)(a2 + 23);
  if (v16 >= 0) {
    int v17 = (const std::string::value_type *)a2;
  }
  else {
    int v17 = *(const std::string::value_type **)a2;
  }
  if (v16 >= 0) {
    std::string::size_type v18 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    std::string::size_type v18 = *(void *)(a2 + 8);
  }
  unint64_t v19 = std::string::append(&v45, v17, v18);
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  v46.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  BOOL v21 = std::string::append(&v46, " ");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v47.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  uint64_t v23 = std::string::append(&v47, " ORDER BY ");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  v48.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  float v25 = std::string::append(&v48, "Timestamp");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v53.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  float v27 = std::string::append(&v53, " DESC LIMIT ");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  v54.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&v38, a3);
  if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    float v29 = &v38;
  }
  else {
    float v29 = (std::string *)v38.__r_.__value_.__r.__words[0];
  }
  if ((v38.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v38.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v38.__r_.__value_.__l.__size_;
  }
  float v31 = std::string::append(&v54, (const std::string::value_type *)v29, size);
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  v49.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  float v33 = std::string::append(&v49, ") ORDER BY ");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v52.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  float v35 = std::string::append(&v52, "Timestamp");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  int64_t v51 = v35->__r_.__value_.__r.__words[2];
  *(_OWORD *)float v50 = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v52.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v49.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v54.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v53.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v48.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v47.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v46.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v44.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v43.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
  if ((char)v40 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v41.__r_.__value_.__l.__data_);
  }
  if (v51 >= 0) {
    int v37 = v50;
  }
  else {
    int v37 = (void **)v50[0];
  }
  sub_10014D518(a1, (uint64_t)v37);
}

void sub_100325F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,void *__p,uint64_t a54,int a55,__int16 a56,char a57,char a58,uint64_t a59,void **buf)
{
  long long buf = &a49;
  sub_10029C380(&buf);
  if (v60) {
    (*(void (**)(uint64_t))(*(void *)v60 + 8))(v60);
  }
  if (a58 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10032631C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unsigned int a6@<W5>, void *a7@<X8>)
{
  v56[0] = a4;
  v56[1] = a5;
  if (*(unsigned char *)(a1 + 8))
  {
    *((unsigned char *)&v45.__r_.__value_.__s + 23) = 6;
    strcpy((char *)&v45, "WHERE ");
    unint64_t v12 = std::string::append(&v45, "Timestamp");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    uint8x8_t v14 = std::string::append(&v46, " > ");
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    int v16 = *(char *)(a2 + 23);
    if (v16 >= 0) {
      int v17 = (const std::string::value_type *)a2;
    }
    else {
      int v17 = *(const std::string::value_type **)a2;
    }
    if (v16 >= 0) {
      std::string::size_type v18 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::string::size_type v18 = *(void *)(a2 + 8);
    }
    unint64_t v19 = std::string::append(&v47, v17, v18);
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    BOOL v21 = std::string::append(&v48, " AND ");
    long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    uint64_t v23 = std::string::append(&v49, "Timestamp");
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    float v25 = std::string::append(&v50, "<= ");
    long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    int v27 = *(char *)(a3 + 23);
    if (v27 >= 0) {
      long long v28 = (const std::string::value_type *)a3;
    }
    else {
      long long v28 = *(const std::string::value_type **)a3;
    }
    if (v27 >= 0) {
      std::string::size_type v29 = *(unsigned __int8 *)(a3 + 23);
    }
    else {
      std::string::size_type v29 = *(void *)(a3 + 8);
    }
    float v30 = std::string::append(&v51, v28, v29);
    long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    v52.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    long long v32 = std::string::append(&v52, " AND ");
    long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
    v53.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v33;
    v32->__r_.__value_.__l.__size_ = 0;
    v32->__r_.__value_.__r.__words[2] = 0;
    v32->__r_.__value_.__r.__words[0] = 0;
    sub_100134750(v41, "LoiGroupId");
    sub_10022B538((const void **)v41, v56, (uint64_t)__p);
    if ((v44 & 0x80u) == 0) {
      long long v34 = __p;
    }
    else {
      long long v34 = (void **)__p[0];
    }
    if ((v44 & 0x80u) == 0) {
      std::string::size_type v35 = v44;
    }
    else {
      std::string::size_type v35 = (std::string::size_type)__p[1];
    }
    long long v36 = std::string::append(&v53, (const std::string::value_type *)v34, v35);
    long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
    std::string::size_type v55 = v36->__r_.__value_.__r.__words[2];
    long long buf = v37;
    v36->__r_.__value_.__l.__size_ = 0;
    v36->__r_.__value_.__r.__words[2] = 0;
    v36->__r_.__value_.__r.__words[0] = 0;
    if ((char)v44 < 0) {
      operator delete(__p[0]);
    }
    if (v42 < 0) {
      operator delete(v41[0]);
    }
    if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v53.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v52.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v51.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v50.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v48.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v46.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v45.__r_.__value_.__l.__data_);
    }
    uint64_t v38 = *(void *)a1;
    sub_100134750(&v53, "RowId");
    sub_100325974(v38, (uint64_t)&buf, a6);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6920);
  }
  float v39 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf) = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all", (uint8_t *)&buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6920);
    }
    LOWORD(v53.__r_.__value_.__l.__data_) = 0;
    unsigned __int8 v40 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<CLMicroLocationAssociatedStateTable::Entry> CLMicroLocationAssociatedStateTable::selectBetweenTimesAtLoi(const std::string &, const std::string &, boost::uuids::uuid, uint32_t)", "%s\n", v40);
    if (v40 != (char *)&buf) {
      free(v40);
    }
  }
  *a7 = 0;
  a7[1] = 0;
  a7[2] = 0;
}

void sub_1003267B0(_Unwind_Exception *a1)
{
}

void sub_1003268D8()
{
}

void sub_1003268E0()
{
}

void sub_1003268E8()
{
}

uint64_t sub_1003268F0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v1 = *(void *)a1;
    if (byte_10247A7E7 >= 0) {
      BOOL v2 = &xmmword_10247A7D0;
    }
    else {
      BOOL v2 = (long long *)xmmword_10247A7D0;
    }
    sub_10014D518(v1, (uint64_t)v2);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6920);
  }
  char v3 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't insert or replace", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6920);
    }
    unint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationAssociatedStateTable::insertOrReplace(const std::vector<Entry> &)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  return 0;
}

void sub_100326F5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  if (a32) {
    (*(void (**)(uint64_t))(*(void *)a32 + 8))(a32);
  }
  _Unwind_Resume(exception_object);
}

void sub_100326FEC(uint64_t a1@<X0>, unsigned int a2@<W1>, void *a3@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    long long v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    *((unsigned char *)&v28.__r_.__value_.__s + 23) = 16;
    strcpy((char *)&v28, "SELECT DISTINCT ");
    uint64_t v6 = std::string::append(&v28, "LoiGroupId");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v29.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    unint64_t v8 = std::string::append(&v29, " FROM ");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    uint64_t v10 = std::string::append(&v30, "MicroLocationAssociatedState");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    unint64_t v12 = std::string::append(&v31, " WHERE ");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    uint8x8_t v14 = std::string::append(&v32, "LoiGroupId");
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v33.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    int v16 = std::string::append(&v33, " != ''");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v18 = std::string::append(&v39, " LIMIT ");
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v27, a2);
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v20 = &v27;
    }
    else {
      long long v20 = (std::string *)v27.__r_.__value_.__r.__words[0];
    }
    if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v27.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v27.__r_.__value_.__l.__size_;
    }
    long long v22 = std::string::append(&v40, (const std::string::value_type *)v20, size);
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    int64_t v35 = v22->__r_.__value_.__r.__words[2];
    long long __p = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v27.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v40.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v39.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v33.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v32.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v31.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v30.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v29.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v28.__r_.__value_.__l.__data_);
    }
    if (v35 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = (long long *)__p;
    }
    sub_10014D518(*(void *)a1, (uint64_t)p_p);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6920);
  }
  float v25 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v40.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all client IDs", (uint8_t *)&v40, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v40, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6920);
    }
    LOWORD(v36) = 0;
    long long v26 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<boost::uuids::uuid> CLMicroLocationAssociatedStateTable::selectAllLoiGroupIds(uint32_t)", "%s\n", (const char *)v26);
    if (v26 != &v40) {
      free(v26);
    }
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
}

void sub_100327558(_Unwind_Exception *a1)
{
}

void sub_100327868()
{
}

void sub_10032787C(void *a1, int a2)
{
  if (a2) {
    sub_1001C7F8C(a1);
  }
  JUMPOUT(0x100327694);
}

uint64_t sub_10032788C(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    *((unsigned char *)&v37.__r_.__value_.__s + 23) = 12;
    strcpy((char *)&v37, "DELETE FROM ");
    unint64_t v4 = std::string::append(&v37, "MicroLocationAssociatedState");
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v38.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    uint64_t v6 = std::string::append(&v38, " WHERE ");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    unint64_t v8 = std::string::append(&v39, "Timestamp");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    uint64_t v10 = std::string::append(&v40, " IN (");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    unint64_t v12 = std::string::append(&v41, "SELECT ");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v42.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    uint8x8_t v14 = std::string::append(&v42, "Timestamp");
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    int v16 = std::string::append(&v43, " FROM ");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v18 = std::string::append(&v44, "MicroLocationAssociatedState");
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v45.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    long long v20 = std::string::append(&v45, " ORDER BY ");
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    long long v22 = std::string::append(&v46, "Timestamp");
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    long long v24 = std::string::append(&v47, " LIMIT ");
    long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v36, a2);
    if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v26 = &v36;
    }
    else {
      long long v26 = (std::string *)v36.__r_.__value_.__r.__words[0];
    }
    if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v36.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v36.__r_.__value_.__l.__size_;
    }
    std::string v28 = std::string::append(&v48, (const std::string::value_type *)v26, size);
    long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    std::string v30 = std::string::append(&v51, ")");
    long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    int64_t v50 = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)long long __p = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v51.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v36.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v48.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v46.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v45.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v44.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v43.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v42.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v41.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v40.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v39.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v38.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v37.__r_.__value_.__l.__data_);
    }
    if (v50 >= 0) {
      std::string v32 = __p;
    }
    else {
      std::string v32 = (void **)__p[0];
    }
    sub_10014D518(*(void *)a1, (uint64_t)v32);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6920);
  }
  std::string v33 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v51.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't deleteOldestRows", (uint8_t *)&v51, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v51, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6920);
    }
    LOWORD(__p[0]) = 0;
    int64_t v35 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationAssociatedStateTable::deleteOldestRows(uint64_t)", "%s\n", (const char *)v35);
    if (v35 != &v51) {
      free(v35);
    }
  }
  return 0;
}

void sub_100327F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,void *__p,uint64_t a62,int a63)
{
  if (v66) {
    (*(void (**)(uint64_t))(*(void *)v66 + 8))(v66);
  }
  if (a66 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1003280C8(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

BOOL sub_1003280F8(sqlite3_stmt *a1, int a2)
{
  unint64_t v2 = sqlite3_column_int64(a1, a2);
  if ((v2 & 0x8000000000000000) != 0) {
    sub_101A5CA74();
  }
  if (v2 >= 2) {
    sub_101A5CBEC();
  }
  return v2 != 0;
}

uint64_t sub_10032812C(uint64_t *a1, long long *a2, _OWORD *a3, void *a4, char *a5, void *a6, int *a7, int *a8)
{
  uint64_t v9 = *a1;
  unint64_t v10 = 0x8E38E38E38E38E39 * ((a1[1] - *a1) >> 3);
  unint64_t v11 = v10 + 1;
  if (v10 + 1 > 0x38E38E38E38E38ELL) {
    sub_1001D7FD4();
  }
  uint64_t v19 = (uint64_t)(a1 + 2);
  unint64_t v20 = 0x8E38E38E38E38E39 * ((a1[2] - v9) >> 3);
  if (2 * v20 > v11) {
    unint64_t v11 = 2 * v20;
  }
  if (v20 >= 0x1C71C71C71C71C7) {
    unint64_t v21 = 0x38E38E38E38E38ELL;
  }
  else {
    unint64_t v21 = v11;
  }
  long long v29 = a1 + 2;
  if (v21) {
    long long v22 = (char *)sub_10021D4B8(v19, v21);
  }
  else {
    long long v22 = 0;
  }
  long long v25 = v22;
  long long v26 = &v22[72 * v10];
  std::string v27 = v26;
  std::string v28 = &v22[72 * v21];
  sub_1003258D0(v26, a2, a3, a4, *a5, a6, *a7, *a8);
  std::string v27 = v26 + 72;
  sub_10029C654(a1, &v25);
  uint64_t v23 = a1[1];
  sub_10029C7FC((uint64_t)&v25);
  return v23;
}

void sub_100328280(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10029C7FC((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_100328294@<D0>(std::string *a1@<X8>)
{
  memset(&v3, 0, sizeof(v3));
  sub_1003282F8(&v3);
  double result = *(double *)&v3.__r_.__value_.__l.__data_;
  *a1 = v3;
  return result;
}

void sub_1003282DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003282F8(std::string *a1)
{
  sub_100328360(a1);
  sub_10022CBA8(a1);
  sub_100328434(a1);
  sub_100328514(a1);
  sub_1003285F4(a1);
  sub_1003286D4(a1);
  sub_1003287B4(a1);

  return sub_1001E8488(a1);
}

uint64_t sub_100328360(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 0;
  v7.__r_.__value_.__s.__data_[0] = 0;
  unint64_t v2 = std::string::append(&v7, "LoiType");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    unint64_t v4 = __p;
  }
  else {
    unint64_t v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_100328400(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100328434(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  unint64_t v2 = std::string::append(&v7, "Timestamp");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    unint64_t v4 = __p;
  }
  else {
    unint64_t v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_1003284E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100328514(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  unint64_t v2 = std::string::append(&v7, "IsAssociated");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    unint64_t v4 = __p;
  }
  else {
    unint64_t v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_1003285C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003285F4(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  unint64_t v2 = std::string::append(&v7, "MacAddress");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    unint64_t v4 = __p;
  }
  else {
    unint64_t v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_1003286A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003286D4(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  unint64_t v2 = std::string::append(&v7, "Band");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    unint64_t v4 = __p;
  }
  else {
    unint64_t v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_100328780(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003287B4(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  unint64_t v2 = std::string::append(&v7, "Channel");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    unint64_t v4 = __p;
  }
  else {
    unint64_t v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_100328860(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_100328894@<D0>(std::string *a1@<X8>)
{
  sub_100134750(&v11, "VALUES (");
  uint64_t v2 = 8;
  do
  {
    if (v2 == 8)
    {
      *((unsigned char *)&v8.__r_.__value_.__s + 23) = 0;
      v8.__r_.__value_.__s.__data_[0] = 0;
    }
    else
    {
      *((unsigned char *)&v8.__r_.__value_.__s + 23) = 2;
      strcpy((char *)&v8, ", ");
    }
    long long v3 = std::string::append(&v8, "?");
    long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    int64_t v10 = v3->__r_.__value_.__r.__words[2];
    *(_OWORD *)long long __p = v4;
    v3->__r_.__value_.__l.__size_ = 0;
    v3->__r_.__value_.__r.__words[2] = 0;
    v3->__r_.__value_.__r.__words[0] = 0;
    if (v10 >= 0) {
      std::string::size_type v5 = __p;
    }
    else {
      std::string::size_type v5 = (void **)__p[0];
    }
    if (v10 >= 0) {
      std::string::size_type v6 = HIBYTE(v10);
    }
    else {
      std::string::size_type v6 = (std::string::size_type)__p[1];
    }
    std::string::append(&v11, (const std::string::value_type *)v5, v6);
    if (SHIBYTE(v10) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v8.__r_.__value_.__l.__data_);
    }
    --v2;
  }
  while (v2);
  std::string::append(&v11, ")");
  double result = *(double *)&v11.__r_.__value_.__l.__data_;
  *a1 = v11;
  return result;
}

void sub_1003289A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003289EC()
{
  v19.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
  *(_OWORD *)&v19.__r_.__value_.__r.__words[1] = xmmword_101D04970;
  strcpy(v19.__r_.__value_.__l.__data_, "INSERT OR REPLACE INTO ");
  CFStringRef v0 = std::string::append(&v19, "MicroLocationAssociatedState");
  long long v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v20.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  uint64_t v2 = std::string::append(&v20, " (");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  sub_1003252F0((uint64_t)v17);
  if ((v18 & 0x80u) == 0) {
    long long v4 = v17;
  }
  else {
    long long v4 = (void **)v17[0];
  }
  if ((v18 & 0x80u) == 0) {
    std::string::size_type v5 = v18;
  }
  else {
    std::string::size_type v5 = (std::string::size_type)v17[1];
  }
  std::string::size_type v6 = std::string::append(&v21, (const std::string::value_type *)v4, v5);
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v22.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  std::string v8 = std::string::append(&v22, ") ");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_1003253C4((uint64_t)__p);
  if ((v16 & 0x80u) == 0) {
    int64_t v10 = __p;
  }
  else {
    int64_t v10 = (void **)__p[0];
  }
  if ((v16 & 0x80u) == 0) {
    std::string::size_type v11 = v16;
  }
  else {
    std::string::size_type v11 = (std::string::size_type)__p[1];
  }
  unint64_t v12 = std::string::append(&v23, (const std::string::value_type *)v10, v11);
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  unk_10247A7E0 = *((void *)&v12->__r_.__value_.__l + 2);
  xmmword_10247A7D0 = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  if ((char)v16 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  if ((char)v18 < 0) {
    operator delete(v17[0]);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10247A7D0, (void *)&_mh_execute_header);
}

void sub_100328BE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v40 - 25) < 0) {
    operator delete(*(void **)(v40 - 48));
  }
  if (*(char *)(v40 - 57) < 0) {
    operator delete(*(void **)(v40 - 80));
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

void sub_100328C90(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419CB0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419CB0))
  {
    sub_100330174((std::string *)&xmmword_102419C98);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_102419C98, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419CB0);
  }
  if (byte_102419CAF < 0)
  {
    sub_1000DC48C((unsigned char *)a1, (void *)xmmword_102419C98, *((unint64_t *)&xmmword_102419C98 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_102419C98;
    *(void *)(a1 + 16) = unk_102419CA8;
  }
}

void sub_100328D4C(_Unwind_Exception *a1)
{
}

void sub_100328D64(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419CD0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419CD0))
  {
    sub_100330408((std::string *)&xmmword_102419CB8);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_102419CB8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419CD0);
  }
  if (byte_102419CCF < 0)
  {
    sub_1000DC48C((unsigned char *)a1, (void *)xmmword_102419CB8, *((unint64_t *)&xmmword_102419CB8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_102419CB8;
    *(void *)(a1 + 16) = unk_102419CC8;
  }
}

void sub_100328E20(_Unwind_Exception *a1)
{
}

uint64_t sub_100328E38(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, long long *a6, uint64_t a7, uint64_t a8, double a9)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a9;
  long long v11 = *a4;
  *(void *)(a1 + 40) = *((void *)a4 + 2);
  *(_OWORD *)(a1 + 24) = v11;
  *((void *)a4 + 1) = 0;
  *((void *)a4 + 2) = 0;
  *(void *)a4 = 0;
  *(void *)(a1 + 48) = a7;
  *(void *)(a1 + 56) = a8;
  *(void *)(a1 + 64) = *(void *)(a5 + 8);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a5 + 72);
  sub_1002660C8(a1 + 80);
  long long v12 = *a6;
  *(unsigned char *)(a1 + 232) = *((unsigned char *)a6 + 16);
  *(_OWORD *)(a1 + 216) = v12;
  return a1;
}

void sub_100328EBC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100328EDC(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, int a5, double a6, double a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a6;
  long long v14 = *a4;
  *(void *)(a1 + 40) = *((void *)a4 + 2);
  *(_OWORD *)(a1 + 24) = v14;
  *((void *)a4 + 1) = 0;
  *((void *)a4 + 2) = 0;
  *(void *)a4 = 0;
  *(void *)(a1 + 48) = a11;
  *(void *)(a1 + 56) = a12;
  *(double *)(a1 + 64) = a7;
  *(_DWORD *)(a1 + 72) = a5;
  sub_1002660C8(a1 + 80);
  *(unsigned char *)(a1 + 216) = 0;
  *(unsigned char *)(a1 + 232) = 0;
  if ((*(char *)(a9 + 23) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(a9 + 23)) {
      return a1;
    }
    goto LABEL_5;
  }
  if (*(void *)(a9 + 8))
  {
LABEL_5:
    sub_1002E58D4(a9, (uint64_t)&v16);
    *(_OWORD *)(a1 + 216) = v16;
    *(unsigned char *)(a1 + 232) = v17;
  }
  return a1;
}

void sub_100328FC4(_Unwind_Exception *a1)
{
  sub_10026633C(v2);
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*(void **)(v1 + 24));
  }
  _Unwind_Resume(a1);
}

void sub_100328FF4(uint64_t *a1)
{
  BOOL v2 = sub_10014C3C0(*a1);
  *((unsigned char *)a1 + 8) = v2;
  if (v2)
  {
    sub_100329434(a1);
    sub_1005F7B0C(*a1, "MicroLocationRecordingEvents", (const char **)&off_1022A6B10, 0, 0);
    char v3 = sub_1005F93E4(*a1, "MicroLocationRecordingEvents");
    *((unsigned char *)a1 + 8) = v3;
    if (v3)
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6AF0);
      }
      long long v4 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)long long buf = 136380675;
        long long v9 = "MicroLocationRecordingEvents";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Sucessfully created table if necessary: %{private}s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 == -1) {
          goto LABEL_16;
        }
        goto LABEL_28;
      }
    }
    else
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6AF0);
      }
      long long v7 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 136446210;
        long long v9 = "MicroLocationRecordingEvents";
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to create table: %{public}s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A6AF0);
        }
        std::string::size_type v6 = (uint8_t *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLMicroLocationRecordingEventsTable::initTable()", "%s\n");
        goto LABEL_26;
      }
    }
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6AF0);
    }
    std::string::size_type v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Database is not connected so we can't intialize our table", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 == -1)
      {
LABEL_16:
        std::string::size_type v6 = (uint8_t *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationRecordingEventsTable::initTable()", "%s\n");
LABEL_26:
        if (v6 != buf) {
          free(v6);
        }
        return;
      }
LABEL_28:
      dispatch_once(&qword_102419450, &stru_1022A6AF0);
      goto LABEL_16;
    }
  }
}

uint64_t sub_100329404(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 0;
  sub_100328FF4((uint64_t *)a1);
  return a1;
}

uint64_t sub_100329434(uint64_t *a1)
{
  uint64_t result = sub_1005F93E4(*a1, "MicroLocationRecordingEvents");
  if (result)
  {
    uint64_t v3 = *a1;
    return sub_1001E1DE8(v3, (uint64_t *)&off_1022A6B10, 9, "MicroLocationRecordingEvents");
  }
  return result;
}

uint64_t sub_10032949C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v1 = *(void *)a1;
    if (byte_10247A7FF >= 0) {
      BOOL v2 = &xmmword_10247A7E8;
    }
    else {
      BOOL v2 = (long long *)xmmword_10247A7E8;
    }
    sub_10014D518(v1, (uint64_t)v2);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6AF0);
  }
  uint64_t v3 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't insert or replace", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6AF0);
    }
    std::string::size_type v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationRecordingEventsTable::insertOrReplace(const std::vector<Entry> &)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  return 0;
}

void sub_100329CDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,std::bad_cast a45)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a42) {
    (*(void (**)(uint64_t))(*(void *)a42 + 8))(a42);
  }
  _Unwind_Resume(exception_object);
}

void sub_100329DBC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  *((unsigned char *)&v44.__r_.__value_.__s + 23) = 15;
  strcpy((char *)&v44, "SELECT * FROM (");
  char v43 = 7;
  strcpy(__s, "SELECT ");
  std::string v8 = std::string::append(&v44, __s, 7uLL);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v45.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_100328C90((uint64_t)__p);
  if ((v41 & 0x80u) == 0) {
    int64_t v10 = __p;
  }
  else {
    int64_t v10 = (void **)__p[0];
  }
  if ((v41 & 0x80u) == 0) {
    std::string::size_type v11 = v41;
  }
  else {
    std::string::size_type v11 = (std::string::size_type)__p[1];
  }
  long long v12 = std::string::append(&v45, (const std::string::value_type *)v10, v11);
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v52.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  long long v14 = std::string::append(&v52, " FROM ");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v53.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  int v16 = *(char *)(a2 + 23);
  if (v16 >= 0) {
    char v17 = (const std::string::value_type *)a2;
  }
  else {
    char v17 = *(const std::string::value_type **)a2;
  }
  if (v16 >= 0) {
    std::string::size_type v18 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    std::string::size_type v18 = *(void *)(a2 + 8);
  }
  std::string v19 = std::string::append(&v53, v17, v18);
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  v54.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  std::string v21 = std::string::append(&v54, " ORDER BY ");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v46.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  std::string v23 = std::string::append(&v46, "RecordingTimestamp");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  v47.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  long long v25 = std::string::append(&v47, " DESC LIMIT ");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v55.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&v39, a3);
  if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string v27 = &v39;
  }
  else {
    std::string v27 = (std::string *)v39.__r_.__value_.__r.__words[0];
  }
  if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v39.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v39.__r_.__value_.__l.__size_;
  }
  long long v29 = std::string::append(&v55, (const std::string::value_type *)v27, size);
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v48.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  long long v31 = std::string::append(&v48, ") ORDER BY ");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  v51.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  int v33 = *(char *)(a4 + 23);
  if (v33 >= 0) {
    long long v34 = (const std::string::value_type *)a4;
  }
  else {
    long long v34 = *(const std::string::value_type **)a4;
  }
  if (v33 >= 0) {
    std::string::size_type v35 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    std::string::size_type v35 = *(void *)(a4 + 8);
  }
  std::string v36 = std::string::append(&v51, v34, v35);
  long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
  int64_t v50 = v36->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string v49 = v37;
  v36->__r_.__value_.__l.__size_ = 0;
  v36->__r_.__value_.__r.__words[2] = 0;
  v36->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v51.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v48.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v39.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v55.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v47.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v46.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v54.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v53.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v52.__r_.__value_.__l.__data_);
  }
  if ((char)v41 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  if (v43 < 0) {
    operator delete(*(void **)__s);
  }
  if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v44.__r_.__value_.__l.__data_);
  }
  if (v50 >= 0) {
    std::string v38 = v49;
  }
  else {
    std::string v38 = (void **)v49[0];
  }
  sub_10014D518(a1, (uint64_t)v38);
}

void sub_10032A384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void **buf)
{
  long long buf = &a35;
  sub_1001EF794(&buf);
  if (v46) {
    (*(void (**)(uint64_t))(*(void *)v46 + 8))(v46);
  }
  if (a44 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10032A7B0(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned int a3@<W2>, void *a4@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v7 = *a2;
    if (*a2 != a2[1])
    {
      *((unsigned char *)&v57.__r_.__value_.__s + 23) = 1;
      LOWORD(v57.__r_.__value_.__l.__data_) = 34;
      memset(&__p, 0, sizeof(__p));
      if (sub_1001E86C0(v7, &__p))
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = __p.__r_.__value_.__l.__size_;
        }
        std::string::size_type v11 = std::string::append(&v57, (const std::string::value_type *)p_p, size);
        long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
        v58.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v12;
        v11->__r_.__value_.__l.__size_ = 0;
        v11->__r_.__value_.__r.__words[2] = 0;
        v11->__r_.__value_.__r.__words[0] = 0;
        long long v13 = std::string::append(&v58, "\"");
        long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
        int64_t v60 = v13->__r_.__value_.__r.__words[2];
        *(_OWORD *)float v59 = v14;
        v13->__r_.__value_.__l.__size_ = 0;
        v13->__r_.__value_.__r.__words[2] = 0;
        v13->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v58.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v57.__r_.__value_.__l.__data_);
        }
        uint64_t v15 = a2[1];
        uint64_t v16 = *a2 + 16;
        v61.__r_.__value_.__r.__words[0] = (std::string::size_type)v59;
        while (v16 != v15)
        {
          sub_100330560((std::string **)&v61, v16);
          v16 += 16;
        }
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 14;
        strcpy((char *)&__p, "(SELECT *,MIN(");
        char v17 = std::string::append(&__p, "RowId");
        long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
        v57.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v18;
        v17->__r_.__value_.__l.__size_ = 0;
        v17->__r_.__value_.__r.__words[2] = 0;
        v17->__r_.__value_.__r.__words[0] = 0;
        *((unsigned char *)&__s.__r_.__value_.__s + 23) = 7;
        strcpy((char *)&__s, ") FROM ");
        std::string v19 = std::string::append(&v57, (const std::string::value_type *)&__s, 7uLL);
        long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
        v58.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v20;
        v19->__r_.__value_.__l.__size_ = 0;
        v19->__r_.__value_.__r.__words[2] = 0;
        v19->__r_.__value_.__r.__words[0] = 0;
        std::string v21 = std::string::append(&v58, "MicroLocationRecordingEvents");
        long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
        v61.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v61.__r_.__value_.__l.__data_ = v22;
        v21->__r_.__value_.__l.__size_ = 0;
        v21->__r_.__value_.__r.__words[2] = 0;
        v21->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v58.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__s.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v57.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        *((unsigned char *)&v53.__r_.__value_.__s + 23) = 7;
        strcpy((char *)&v53, " WHERE ");
        std::string v23 = std::string::append(&v53, "TriggerUUID");
        long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
        v54.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v24;
        v23->__r_.__value_.__l.__size_ = 0;
        v23->__r_.__value_.__r.__words[2] = 0;
        v23->__r_.__value_.__r.__words[0] = 0;
        char v52 = 4;
        strcpy(v51, " IN ");
        long long v25 = std::string::append(&v54, v51, 4uLL);
        long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
        __s.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v26;
        v25->__r_.__value_.__l.__size_ = 0;
        v25->__r_.__value_.__r.__words[2] = 0;
        v25->__r_.__value_.__r.__words[0] = 0;
        char v50 = 1;
        strcpy(v49, "(");
        std::string v27 = std::string::append(&__s, v49, 1uLL);
        long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
        __p.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v28;
        v27->__r_.__value_.__l.__size_ = 0;
        v27->__r_.__value_.__r.__words[2] = 0;
        v27->__r_.__value_.__r.__words[0] = 0;
        if (v60 >= 0) {
          long long v29 = v59;
        }
        else {
          long long v29 = (void **)v59[0];
        }
        if (v60 >= 0) {
          std::string::size_type v30 = HIBYTE(v60);
        }
        else {
          std::string::size_type v30 = (std::string::size_type)v59[1];
        }
        long long v31 = std::string::append(&__p, (const std::string::value_type *)v29, v30);
        long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
        v57.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v32;
        v31->__r_.__value_.__l.__size_ = 0;
        v31->__r_.__value_.__r.__words[2] = 0;
        v31->__r_.__value_.__r.__words[0] = 0;
        char v48 = 1;
        strcpy(v47, ")");
        int v33 = std::string::append(&v57, v47, 1uLL);
        long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
        v58.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v34;
        v33->__r_.__value_.__l.__size_ = 0;
        v33->__r_.__value_.__r.__words[2] = 0;
        v33->__r_.__value_.__r.__words[0] = 0;
        if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v35 = &v58;
        }
        else {
          std::string::size_type v35 = (std::string *)v58.__r_.__value_.__r.__words[0];
        }
        if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v36 = HIBYTE(v58.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v36 = v58.__r_.__value_.__l.__size_;
        }
        std::string::append(&v61, (const std::string::value_type *)v35, v36);
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v58.__r_.__value_.__l.__data_);
        }
        if (v48 < 0) {
          operator delete(*(void **)v47);
        }
        if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v57.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (v50 < 0) {
          operator delete(*(void **)v49);
        }
        if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__s.__r_.__value_.__l.__data_);
        }
        if (v52 < 0) {
          operator delete(*(void **)v51);
        }
        if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v54.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v53.__r_.__value_.__l.__data_);
        }
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 10;
        strcpy((char *)&__p, " GROUP BY ");
        long long v37 = std::string::append(&__p, "TriggerUUID");
        long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
        v57.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v38;
        v37->__r_.__value_.__l.__size_ = 0;
        v37->__r_.__value_.__r.__words[2] = 0;
        v37->__r_.__value_.__r.__words[0] = 0;
        std::string v39 = std::string::append(&v57, ")");
        long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
        v58.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v40;
        v39->__r_.__value_.__l.__size_ = 0;
        v39->__r_.__value_.__r.__words[2] = 0;
        v39->__r_.__value_.__r.__words[0] = 0;
        if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          unsigned __int8 v41 = &v58;
        }
        else {
          unsigned __int8 v41 = (std::string *)v58.__r_.__value_.__r.__words[0];
        }
        if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v42 = HIBYTE(v58.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v42 = v58.__r_.__value_.__l.__size_;
        }
        std::string::append(&v61, (const std::string::value_type *)v41, v42);
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v58.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v57.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        uint64_t v43 = *(void *)a1;
        sub_100134750(&v58, "TriggerUUID");
        sub_100329DBC(v43, (uint64_t)&v61, a3, (uint64_t)&v58);
      }
      std::bad_cast::bad_cast((std::bad_cast *)&v61);
      v61.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10229E8C8;
      sub_1001E91E8((uint64_t)&v61);
    }
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6AF0);
    }
    std::string v45 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v61.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "#Warning passed empty UUIDs so we can't select recording events", (uint8_t *)&v61, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_82;
    }
    bzero(&v61, 0x65CuLL);
    if (qword_102419450 == -1)
    {
LABEL_84:
      LOWORD(v59[0]) = 0;
      uint64_t v46 = (std::string *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<CLMicroLocationRecordingEventsTable::Entry> CLMicroLocationRecordingEventsTable::selectRecordingEventsFromUUIDs(const std::vector<boost::uuids::uuid> &, uint32_t) [UuidColumn_t = CLMicroLocationRecordingEventsTable::DatabaseColumns::TriggerUUID]", "%s\n", (const char *)v46);
      if (v46 != &v61) {
        free(v46);
      }
      goto LABEL_82;
    }
LABEL_87:
    dispatch_once(&qword_102419450, &stru_1022A6AF0);
    goto LABEL_84;
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6AF0);
  }
  std::string v44 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v61.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all", (uint8_t *)&v61, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v61, 0x65CuLL);
    if (qword_102419450 == -1) {
      goto LABEL_84;
    }
    goto LABEL_87;
  }
LABEL_82:
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
}

void sub_10032AFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  if (a44 < 0) {
    operator delete(__p);
  }
  if (a58 < 0) {
    operator delete(a53);
  }
  if (a51 < 0) {
    operator delete(a46);
  }
  _Unwind_Resume(a1);
}

void sub_10032B1CC(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned int a3@<W2>, void *a4@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v7 = *a2;
    if (*a2 != a2[1])
    {
      *((unsigned char *)&v57.__r_.__value_.__s + 23) = 1;
      LOWORD(v57.__r_.__value_.__l.__data_) = 34;
      memset(&__p, 0, sizeof(__p));
      if (sub_1001E86C0(v7, &__p))
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = __p.__r_.__value_.__l.__size_;
        }
        std::string::size_type v11 = std::string::append(&v57, (const std::string::value_type *)p_p, size);
        long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
        v58.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v12;
        v11->__r_.__value_.__l.__size_ = 0;
        v11->__r_.__value_.__r.__words[2] = 0;
        v11->__r_.__value_.__r.__words[0] = 0;
        long long v13 = std::string::append(&v58, "\"");
        long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
        int64_t v60 = v13->__r_.__value_.__r.__words[2];
        *(_OWORD *)float v59 = v14;
        v13->__r_.__value_.__l.__size_ = 0;
        v13->__r_.__value_.__r.__words[2] = 0;
        v13->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v58.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v57.__r_.__value_.__l.__data_);
        }
        uint64_t v15 = a2[1];
        uint64_t v16 = *a2 + 16;
        v61.__r_.__value_.__r.__words[0] = (std::string::size_type)v59;
        while (v16 != v15)
        {
          sub_100330560((std::string **)&v61, v16);
          v16 += 16;
        }
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 14;
        strcpy((char *)&__p, "(SELECT *,MIN(");
        char v17 = std::string::append(&__p, "RowId");
        long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
        v57.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v18;
        v17->__r_.__value_.__l.__size_ = 0;
        v17->__r_.__value_.__r.__words[2] = 0;
        v17->__r_.__value_.__r.__words[0] = 0;
        *((unsigned char *)&__s.__r_.__value_.__s + 23) = 7;
        strcpy((char *)&__s, ") FROM ");
        std::string v19 = std::string::append(&v57, (const std::string::value_type *)&__s, 7uLL);
        long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
        v58.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v20;
        v19->__r_.__value_.__l.__size_ = 0;
        v19->__r_.__value_.__r.__words[2] = 0;
        v19->__r_.__value_.__r.__words[0] = 0;
        std::string v21 = std::string::append(&v58, "MicroLocationRecordingEvents");
        long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
        v61.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v61.__r_.__value_.__l.__data_ = v22;
        v21->__r_.__value_.__l.__size_ = 0;
        v21->__r_.__value_.__r.__words[2] = 0;
        v21->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v58.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__s.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v57.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        *((unsigned char *)&v53.__r_.__value_.__s + 23) = 7;
        strcpy((char *)&v53, " WHERE ");
        std::string v23 = std::string::append(&v53, "RecordingUUID");
        long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
        v54.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v24;
        v23->__r_.__value_.__l.__size_ = 0;
        v23->__r_.__value_.__r.__words[2] = 0;
        v23->__r_.__value_.__r.__words[0] = 0;
        char v52 = 4;
        strcpy(v51, " IN ");
        long long v25 = std::string::append(&v54, v51, 4uLL);
        long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
        __s.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v26;
        v25->__r_.__value_.__l.__size_ = 0;
        v25->__r_.__value_.__r.__words[2] = 0;
        v25->__r_.__value_.__r.__words[0] = 0;
        char v50 = 1;
        strcpy(v49, "(");
        std::string v27 = std::string::append(&__s, v49, 1uLL);
        long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
        __p.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v28;
        v27->__r_.__value_.__l.__size_ = 0;
        v27->__r_.__value_.__r.__words[2] = 0;
        v27->__r_.__value_.__r.__words[0] = 0;
        if (v60 >= 0) {
          long long v29 = v59;
        }
        else {
          long long v29 = (void **)v59[0];
        }
        if (v60 >= 0) {
          std::string::size_type v30 = HIBYTE(v60);
        }
        else {
          std::string::size_type v30 = (std::string::size_type)v59[1];
        }
        long long v31 = std::string::append(&__p, (const std::string::value_type *)v29, v30);
        long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
        v57.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v32;
        v31->__r_.__value_.__l.__size_ = 0;
        v31->__r_.__value_.__r.__words[2] = 0;
        v31->__r_.__value_.__r.__words[0] = 0;
        char v48 = 1;
        strcpy(v47, ")");
        int v33 = std::string::append(&v57, v47, 1uLL);
        long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
        v58.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v34;
        v33->__r_.__value_.__l.__size_ = 0;
        v33->__r_.__value_.__r.__words[2] = 0;
        v33->__r_.__value_.__r.__words[0] = 0;
        if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v35 = &v58;
        }
        else {
          std::string::size_type v35 = (std::string *)v58.__r_.__value_.__r.__words[0];
        }
        if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v36 = HIBYTE(v58.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v36 = v58.__r_.__value_.__l.__size_;
        }
        std::string::append(&v61, (const std::string::value_type *)v35, v36);
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v58.__r_.__value_.__l.__data_);
        }
        if (v48 < 0) {
          operator delete(*(void **)v47);
        }
        if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v57.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (v50 < 0) {
          operator delete(*(void **)v49);
        }
        if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__s.__r_.__value_.__l.__data_);
        }
        if (v52 < 0) {
          operator delete(*(void **)v51);
        }
        if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v54.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v53.__r_.__value_.__l.__data_);
        }
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = 10;
        strcpy((char *)&__p, " GROUP BY ");
        long long v37 = std::string::append(&__p, "RecordingUUID");
        long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
        v57.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v38;
        v37->__r_.__value_.__l.__size_ = 0;
        v37->__r_.__value_.__r.__words[2] = 0;
        v37->__r_.__value_.__r.__words[0] = 0;
        std::string v39 = std::string::append(&v57, ")");
        long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
        v58.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v40;
        v39->__r_.__value_.__l.__size_ = 0;
        v39->__r_.__value_.__r.__words[2] = 0;
        v39->__r_.__value_.__r.__words[0] = 0;
        if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          unsigned __int8 v41 = &v58;
        }
        else {
          unsigned __int8 v41 = (std::string *)v58.__r_.__value_.__r.__words[0];
        }
        if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v42 = HIBYTE(v58.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v42 = v58.__r_.__value_.__l.__size_;
        }
        std::string::append(&v61, (const std::string::value_type *)v41, v42);
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v58.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v57.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        uint64_t v43 = *(void *)a1;
        sub_100134750(&v58, "RecordingUUID");
        sub_100329DBC(v43, (uint64_t)&v61, a3, (uint64_t)&v58);
      }
      std::bad_cast::bad_cast((std::bad_cast *)&v61);
      v61.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10229E8C8;
      sub_1001E91E8((uint64_t)&v61);
    }
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6AF0);
    }
    std::string v45 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v61.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, OS_LOG_TYPE_DEFAULT, "#Warning passed empty UUIDs so we can't select recording events", (uint8_t *)&v61, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_82;
    }
    bzero(&v61, 0x65CuLL);
    if (qword_102419450 == -1)
    {
LABEL_84:
      LOWORD(v59[0]) = 0;
      uint64_t v46 = (std::string *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<CLMicroLocationRecordingEventsTable::Entry> CLMicroLocationRecordingEventsTable::selectRecordingEventsFromUUIDs(const std::vector<boost::uuids::uuid> &, uint32_t) [UuidColumn_t = CLMicroLocationRecordingEventsTable::DatabaseColumns::RecordingUUID]", "%s\n", (const char *)v46);
      if (v46 != &v61) {
        free(v46);
      }
      goto LABEL_82;
    }
LABEL_87:
    dispatch_once(&qword_102419450, &stru_1022A6AF0);
    goto LABEL_84;
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6AF0);
  }
  std::string v44 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v61.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all", (uint8_t *)&v61, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v61, 0x65CuLL);
    if (qword_102419450 == -1) {
      goto LABEL_84;
    }
    goto LABEL_87;
  }
LABEL_82:
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
}

void sub_10032B9EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58)
{
  if (a44 < 0) {
    operator delete(__p);
  }
  if (a58 < 0) {
    operator delete(a53);
  }
  if (a51 < 0) {
    operator delete(a46);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10032BBE4(uint64_t a1, uint64_t *a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v4 = *a2;
    if (*a2 != a2[1])
    {
      *((unsigned char *)&v56.__r_.__value_.__s + 23) = 1;
      LOWORD(v56.__r_.__value_.__l.__data_) = 34;
      memset(&__p, 0, sizeof(__p));
      if (sub_1001E86C0(v4, &__p))
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = __p.__r_.__value_.__l.__size_;
        }
        uint64_t v7 = std::string::append(&v56, (const std::string::value_type *)p_p, size);
        long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
        v57.__r_.__value_.__r.__words[2] = v7->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v8;
        v7->__r_.__value_.__l.__size_ = 0;
        v7->__r_.__value_.__r.__words[2] = 0;
        v7->__r_.__value_.__r.__words[0] = 0;
        long long v9 = std::string::append(&v57, "\"");
        long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
        v52.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v10;
        v9->__r_.__value_.__l.__size_ = 0;
        v9->__r_.__value_.__r.__words[2] = 0;
        v9->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v57.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v56.__r_.__value_.__l.__data_);
        }
        uint64_t v11 = a2[1];
        for (uint64_t i = *a2 + 16; i != v11; i += 16)
        {
          *((unsigned char *)&v54.__r_.__value_.__s + 23) = 1;
          LOWORD(v54.__r_.__value_.__l.__data_) = 44;
          long long v13 = std::string::append(&v54, "\"");
          long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
          __p.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v14;
          v13->__r_.__value_.__l.__size_ = 0;
          v13->__r_.__value_.__r.__words[2] = 0;
          v13->__r_.__value_.__r.__words[0] = 0;
          memset(&v53, 0, sizeof(v53));
          if ((sub_1001E86C0(i, &v53) & 1) == 0)
          {
            std::bad_cast::bad_cast((std::bad_cast *)&v58);
            v58.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10229E8C8;
            sub_1001E91E8((uint64_t)&v58);
          }
          if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            uint64_t v15 = &v53;
          }
          else {
            uint64_t v15 = (std::string *)v53.__r_.__value_.__r.__words[0];
          }
          if ((v53.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v16 = HIBYTE(v53.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v16 = v53.__r_.__value_.__l.__size_;
          }
          char v17 = std::string::append(&__p, (const std::string::value_type *)v15, v16);
          long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
          v56.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v18;
          v17->__r_.__value_.__l.__size_ = 0;
          v17->__r_.__value_.__r.__words[2] = 0;
          v17->__r_.__value_.__r.__words[0] = 0;
          std::string v19 = std::string::append(&v56, "\"");
          long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
          v57.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v20;
          v19->__r_.__value_.__l.__size_ = 0;
          v19->__r_.__value_.__r.__words[2] = 0;
          v19->__r_.__value_.__r.__words[0] = 0;
          if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string v21 = &v57;
          }
          else {
            std::string v21 = (std::string *)v57.__r_.__value_.__r.__words[0];
          }
          if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v22 = HIBYTE(v57.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v22 = v57.__r_.__value_.__l.__size_;
          }
          std::string::append(&v52, (const std::string::value_type *)v21, v22);
          if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v57.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v56.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v53.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v54.__r_.__value_.__l.__data_);
          }
        }
        *((unsigned char *)&v50.__r_.__value_.__s + 23) = 12;
        strcpy((char *)&v50, "DELETE FROM ");
        std::string v23 = std::string::append(&v50, "MicroLocationRecordingEvents");
        long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
        v51.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v24;
        v23->__r_.__value_.__l.__size_ = 0;
        v23->__r_.__value_.__r.__words[2] = 0;
        v23->__r_.__value_.__r.__words[0] = 0;
        long long v25 = std::string::append(&v51, " WHERE ");
        long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
        v53.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v26;
        v25->__r_.__value_.__l.__size_ = 0;
        v25->__r_.__value_.__r.__words[2] = 0;
        v25->__r_.__value_.__r.__words[0] = 0;
        std::string v27 = std::string::append(&v53, "RecordingUUID");
        long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
        v54.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v28;
        v27->__r_.__value_.__l.__size_ = 0;
        v27->__r_.__value_.__r.__words[2] = 0;
        v27->__r_.__value_.__r.__words[0] = 0;
        char v49 = 4;
        strcpy(__s, " IN ");
        long long v29 = std::string::append(&v54, __s, 4uLL);
        long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
        __p.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v30;
        v29->__r_.__value_.__l.__size_ = 0;
        v29->__r_.__value_.__r.__words[2] = 0;
        v29->__r_.__value_.__r.__words[0] = 0;
        char v47 = 1;
        strcpy(v46, "(");
        long long v31 = std::string::append(&__p, v46, 1uLL);
        long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
        v56.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v32;
        v31->__r_.__value_.__l.__size_ = 0;
        v31->__r_.__value_.__r.__words[2] = 0;
        v31->__r_.__value_.__r.__words[0] = 0;
        if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v33 = &v52;
        }
        else {
          int v33 = (std::string *)v52.__r_.__value_.__r.__words[0];
        }
        if ((v52.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v34 = HIBYTE(v52.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type v34 = v52.__r_.__value_.__l.__size_;
        }
        std::string::size_type v35 = std::string::append(&v56, (const std::string::value_type *)v33, v34);
        long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
        v58.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v36;
        v35->__r_.__value_.__l.__size_ = 0;
        v35->__r_.__value_.__r.__words[2] = 0;
        v35->__r_.__value_.__r.__words[0] = 0;
        char v45 = 1;
        strcpy(v44, ")");
        long long v37 = std::string::append(&v58, v44, 1uLL);
        long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
        v57.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v38;
        v37->__r_.__value_.__l.__size_ = 0;
        v37->__r_.__value_.__r.__words[2] = 0;
        v37->__r_.__value_.__r.__words[0] = 0;
        if (v45 < 0) {
          operator delete(*(void **)v44);
        }
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v58.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v56.__r_.__value_.__l.__data_);
        }
        if (v47 < 0) {
          operator delete(*(void **)v46);
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (v49 < 0) {
          operator delete(*(void **)__s);
        }
        if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v54.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v53.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v51.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v50.__r_.__value_.__l.__data_);
        }
        if ((v57.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string v39 = &v57;
        }
        else {
          std::string v39 = (std::string *)v57.__r_.__value_.__r.__words[0];
        }
        sub_10014D518(*(void *)a1, (uint64_t)v39);
      }
      std::bad_cast::bad_cast((std::bad_cast *)&v58);
      v58.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_10229E8C8;
      sub_1001E91E8((uint64_t)&v58);
    }
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6AF0);
    }
    unsigned __int8 v41 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v58.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "#Warning No UUIDs are passed in to delete recording events", (uint8_t *)&v58, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      return 0;
    }
    bzero(&v58, 0x65CuLL);
    if (qword_102419450 == -1)
    {
LABEL_85:
      LOWORD(v57.__r_.__value_.__l.__data_) = 0;
      uint64_t v43 = (std::string *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationRecordingEventsTable::deleteRecordingEventsFromRecordingUUIDs(const std::vector<boost::uuids::uuid> &)", "%s\n", (const char *)v43);
      if (v43 != &v58) {
        free(v43);
      }
      return 0;
    }
LABEL_89:
    dispatch_once(&qword_102419450, &stru_1022A6AF0);
    goto LABEL_85;
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6AF0);
  }
  long long v40 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v58.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't delete recording events", (uint8_t *)&v58, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v58, 0x65CuLL);
    if (qword_102419450 == -1) {
      goto LABEL_85;
    }
    goto LABEL_89;
  }
  return 0;
}

void sub_10032C54C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,uint64_t a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  if (v55) {
    (*(void (**)(uint64_t))(*(void *)v55 + 8))(v55);
  }
  if (a55 < 0) {
    operator delete(__p);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(a1);
}

void sub_10032C75C(uint64_t *a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, unsigned char *a5@<X4>, void *a6@<X8>)
{
  if (*((unsigned char *)a1 + 8))
  {
    if (*(void *)a2 != *(void *)(a2 + 8))
    {
      sub_10032CDA8((int **)a2, &v49);
      if (a5[16])
      {
        *((unsigned char *)&v42.__r_.__value_.__s + 23) = 2;
        strcpy((char *)&v42, "))");
        char v41 = 5;
        strcpy(__s, " AND ");
        uint64_t v11 = std::string::append(&v42, __s, 5uLL);
        long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
        v43.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v12;
        v11->__r_.__value_.__l.__size_ = 0;
        v11->__r_.__value_.__r.__words[2] = 0;
        v11->__r_.__value_.__r.__words[0] = 0;
        sub_100134750(v36, "RtLoiGroupId");
        if (!a5[16]) {
          sub_10020D700();
        }
        sub_10022B538((const void **)v36, a5, (uint64_t)v38);
        if ((v39 & 0x80u) == 0) {
          long long v13 = v38;
        }
        else {
          long long v13 = (void **)v38[0];
        }
        if ((v39 & 0x80u) == 0) {
          std::string::size_type v14 = v39;
        }
        else {
          std::string::size_type v14 = (std::string::size_type)v38[1];
        }
        uint64_t v15 = std::string::append(&v43, (const std::string::value_type *)v13, v14);
        long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
        v44.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v16;
        v15->__r_.__value_.__l.__size_ = 0;
        v15->__r_.__value_.__r.__words[2] = 0;
        v15->__r_.__value_.__r.__words[0] = 0;
        char v35 = 10;
        strcpy((char *)v34, " GROUP BY ");
        char v17 = std::string::append(&v44, (const std::string::value_type *)v34, 0xAuLL);
        long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
        v45.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v18;
        v17->__r_.__value_.__l.__size_ = 0;
        v17->__r_.__value_.__r.__words[2] = 0;
        v17->__r_.__value_.__r.__words[0] = 0;
        std::string v19 = std::string::append(&v45, "RecordingUUID");
        long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
        v46.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v20;
        v19->__r_.__value_.__l.__size_ = 0;
        v19->__r_.__value_.__r.__words[2] = 0;
        v19->__r_.__value_.__r.__words[0] = 0;
        std::string v21 = std::string::append(&v46, ")");
        long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
        int64_t v48 = v21->__r_.__value_.__r.__words[2];
        long long __p = v22;
        v21->__r_.__value_.__l.__size_ = 0;
        v21->__r_.__value_.__r.__words[2] = 0;
        v21->__r_.__value_.__r.__words[0] = 0;
        if (v48 >= 0) {
          p_p = (const std::string::value_type *)&__p;
        }
        else {
          p_p = (const std::string::value_type *)__p;
        }
        if (v48 >= 0) {
          std::string::size_type v24 = HIBYTE(v48);
        }
        else {
          std::string::size_type v24 = *((void *)&__p + 1);
        }
        std::string::append(&v49, p_p, v24);
        if (SHIBYTE(v48) < 0) {
          operator delete((void *)__p);
        }
        if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v46.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v45.__r_.__value_.__l.__data_);
        }
        if (v35 < 0) {
          operator delete(v34[0]);
        }
        if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v44.__r_.__value_.__l.__data_);
        }
        if ((char)v39 < 0) {
          operator delete(v38[0]);
        }
        if (v37 < 0) {
          operator delete(v36[0]);
        }
        if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v43.__r_.__value_.__l.__data_);
        }
        if (v41 < 0) {
          operator delete(*(void **)__s);
        }
        if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
        {
          long long v25 = (void *)v42.__r_.__value_.__r.__words[0];
LABEL_55:
          operator delete(v25);
        }
      }
      else
      {
        *((unsigned char *)&v45.__r_.__value_.__s + 23) = 12;
        strcpy((char *)&v45, ")) GROUP BY ");
        std::string v27 = std::string::append(&v45, "RecordingUUID");
        long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
        v46.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v28;
        v27->__r_.__value_.__l.__size_ = 0;
        v27->__r_.__value_.__r.__words[2] = 0;
        v27->__r_.__value_.__r.__words[0] = 0;
        long long v29 = std::string::append(&v46, ")");
        long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
        int64_t v48 = v29->__r_.__value_.__r.__words[2];
        long long __p = v30;
        v29->__r_.__value_.__l.__size_ = 0;
        v29->__r_.__value_.__r.__words[2] = 0;
        v29->__r_.__value_.__r.__words[0] = 0;
        if (v48 >= 0) {
          long long v31 = (const std::string::value_type *)&__p;
        }
        else {
          long long v31 = (const std::string::value_type *)__p;
        }
        if (v48 >= 0) {
          std::string::size_type v32 = HIBYTE(v48);
        }
        else {
          std::string::size_type v32 = *((void *)&__p + 1);
        }
        std::string::append(&v49, v31, v32);
        if (SHIBYTE(v48) < 0) {
          operator delete((void *)__p);
        }
        if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v46.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0)
        {
          long long v25 = (void *)v45.__r_.__value_.__r.__words[0];
          goto LABEL_55;
        }
      }
      sub_100329DBC(*a1, (uint64_t)&v49, a3, a4);
    }
    sub_101A5CD64();
    __break(1u);
LABEL_62:
    dispatch_once(&qword_102419450, &stru_1022A6AF0);
LABEL_59:
    LOWORD(__p) = 0;
    int v33 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<CLMicroLocationRecordingEventsTable::Entry> CLMicroLocationRecordingEventsTable::selectRecordingEventTriggersForLearningMeasurements(const std::vector<CLMicroLocationProto::EventType> &, uint32_t, const std::string &, std::optional<boost::uuids::uuid>)", "%s\n", (const char *)v33);
    if (v33 != &v49) {
      free(v33);
    }
    goto LABEL_42;
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6AF0);
  }
  long long v26 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v49.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all", (uint8_t *)&v49, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v49, 0x65CuLL);
    if (qword_102419450 == -1) {
      goto LABEL_59;
    }
    goto LABEL_62;
  }
LABEL_42:
  *a6 = 0;
  a6[1] = 0;
  a6[2] = 0;
}

void sub_10032CC60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,void *__p,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
  if (a54 < 0) {
    operator delete(__p);
  }
  if (a47 < 0) {
    operator delete(a42);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  if (a61 < 0) {
    operator delete(a56);
  }
  _Unwind_Resume(a1);
}

void sub_10032CDA8(int **a1@<X0>, std::string *a2@<X8>)
{
  *((unsigned char *)&v76.__r_.__value_.__s + 23) = 14;
  strcpy((char *)&v76, "(SELECT *,MIN(");
  uint64_t v4 = std::string::append(&v76, "RowId");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v77.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v6 = std::string::append(&v77, ") FROM ");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v78.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  long long v8 = std::string::append(&v78, "MicroLocationRecordingEvents");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v79.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  long long v10 = std::string::append(&v79, " WHERE ");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v80.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v80.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  long long v12 = std::string::append(&v80, "RecordingUUID");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v81.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v14 = std::string::append(&v81, " IN (");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v82.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v82.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  long long v16 = std::string::append(&v82, "SELECT ");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v83.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v83.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  long long v18 = std::string::append(&v83, "RecordingUUID");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v84.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v84.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  long long v20 = std::string::append(&v84, " FROM ");
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v85.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v85.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  long long v22 = std::string::append(&v85, "MicroLocationRecordingEvents");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v86.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v86.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v24 = std::string::append(&v86, " WHERE ");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  v87.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v87.__r_.__value_.__l.__data_ = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  long long v26 = std::string::append(&v87, "EventType");
  long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  v88.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  long long v28 = std::string::append(&v88, "=");
  long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v89.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&__p, 1);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  std::string::size_type v32 = std::string::append(&v89, (const std::string::value_type *)p_p, size);
  long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
  v90.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v90.__r_.__value_.__l.__data_ = v33;
  v32->__r_.__value_.__l.__size_ = 0;
  v32->__r_.__value_.__r.__words[2] = 0;
  v32->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v34 = std::string::append(&v90, " AND HEX(");
  long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  v91.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v91.__r_.__value_.__l.__data_ = v35;
  v34->__r_.__value_.__l.__size_ = 0;
  v34->__r_.__value_.__r.__words[2] = 0;
  v34->__r_.__value_.__r.__words[0] = 0;
  long long v36 = std::string::append(&v91, "Event");
  long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
  v92.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v92.__r_.__value_.__l.__data_ = v37;
  v36->__r_.__value_.__l.__size_ = 0;
  v36->__r_.__value_.__r.__words[2] = 0;
  v36->__r_.__value_.__r.__words[0] = 0;
  long long v38 = std::string::append(&v92, ") LIKE ");
  long long v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
  v93.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v93.__r_.__value_.__l.__data_ = v39;
  v38->__r_.__value_.__l.__size_ = 0;
  v38->__r_.__value_.__r.__words[2] = 0;
  v38->__r_.__value_.__r.__words[0] = 0;
  long long v40 = std::string::append(&v93, "'080111________________1A021002%'");
  long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
  v94.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v94.__r_.__value_.__l.__data_ = v41;
  v40->__r_.__value_.__l.__size_ = 0;
  v40->__r_.__value_.__r.__words[2] = 0;
  v40->__r_.__value_.__r.__words[0] = 0;
  std::string v42 = std::string::append(&v94, ")");
  long long v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
  v95.__r_.__value_.__r.__words[2] = v42->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v95.__r_.__value_.__l.__data_ = v43;
  v42->__r_.__value_.__l.__size_ = 0;
  v42->__r_.__value_.__r.__words[2] = 0;
  v42->__r_.__value_.__r.__words[0] = 0;
  std::string v44 = std::string::append(&v95, " AND ");
  long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
  v96.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v96.__r_.__value_.__l.__data_ = v45;
  v44->__r_.__value_.__l.__size_ = 0;
  v44->__r_.__value_.__r.__words[2] = 0;
  v44->__r_.__value_.__r.__words[0] = 0;
  std::string v46 = std::string::append(&v96, "RecordingUUID");
  long long v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
  v97.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v97.__r_.__value_.__l.__data_ = v47;
  v46->__r_.__value_.__l.__size_ = 0;
  v46->__r_.__value_.__r.__words[2] = 0;
  v46->__r_.__value_.__r.__words[0] = 0;
  int64_t v48 = std::string::append(&v97, " IN (");
  long long v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
  v98.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v49;
  v48->__r_.__value_.__l.__size_ = 0;
  v48->__r_.__value_.__r.__words[2] = 0;
  v48->__r_.__value_.__r.__words[0] = 0;
  std::string v50 = std::string::append(&v98, "SELECT ");
  long long v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
  v99.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v99.__r_.__value_.__l.__data_ = v51;
  v50->__r_.__value_.__l.__size_ = 0;
  v50->__r_.__value_.__r.__words[2] = 0;
  v50->__r_.__value_.__r.__words[0] = 0;
  std::string v52 = std::string::append(&v99, "RecordingUUID");
  long long v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
  v100.__r_.__value_.__r.__words[2] = v52->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v100.__r_.__value_.__l.__data_ = v53;
  v52->__r_.__value_.__l.__size_ = 0;
  v52->__r_.__value_.__r.__words[2] = 0;
  v52->__r_.__value_.__r.__words[0] = 0;
  std::string v54 = std::string::append(&v100, " FROM ");
  long long v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
  v101.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v101.__r_.__value_.__l.__data_ = v55;
  v54->__r_.__value_.__l.__size_ = 0;
  v54->__r_.__value_.__r.__words[2] = 0;
  v54->__r_.__value_.__r.__words[0] = 0;
  std::string v56 = std::string::append(&v101, "MicroLocationRecordingEvents");
  long long v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
  v102.__r_.__value_.__r.__words[2] = v56->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v102.__r_.__value_.__l.__data_ = v57;
  v56->__r_.__value_.__l.__size_ = 0;
  v56->__r_.__value_.__r.__words[2] = 0;
  v56->__r_.__value_.__r.__words[0] = 0;
  std::string v58 = std::string::append(&v102, " WHERE ");
  long long v59 = *(_OWORD *)&v58->__r_.__value_.__l.__data_;
  v103.__r_.__value_.__r.__words[2] = v58->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v103.__r_.__value_.__l.__data_ = v59;
  v58->__r_.__value_.__l.__size_ = 0;
  v58->__r_.__value_.__r.__words[2] = 0;
  v58->__r_.__value_.__r.__words[0] = 0;
  int64_t v60 = std::string::append(&v103, "EventType");
  long long v61 = *(_OWORD *)&v60->__r_.__value_.__l.__data_;
  v104.__r_.__value_.__r.__words[2] = v60->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v104.__r_.__value_.__l.__data_ = v61;
  v60->__r_.__value_.__l.__size_ = 0;
  v60->__r_.__value_.__r.__words[2] = 0;
  v60->__r_.__value_.__r.__words[0] = 0;
  float v62 = std::string::append(&v104, " IN (");
  long long v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
  a2->__r_.__value_.__r.__words[2] = v62->__r_.__value_.__r.__words[2];
  *(_OWORD *)&a2->__r_.__value_.__l.__data_ = v63;
  v62->__r_.__value_.__l.__size_ = 0;
  v62->__r_.__value_.__r.__words[2] = 0;
  v62->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v104.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v103.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v102.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v101.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v101.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v100.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v99.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v99.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v98.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v97.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v96.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v95.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v94.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v93.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v93.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v92.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v91.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v90.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v90.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v89.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v89.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v88.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v87.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v86.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v85.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v84.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v83.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v82.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v81.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v80.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v79.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v78.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v77.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v76.__r_.__value_.__l.__data_);
  }
  std::to_string(&v104, **a1);
  if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v64 = &v104;
  }
  else {
    long long v64 = (std::string *)v104.__r_.__value_.__r.__words[0];
  }
  if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v65 = HIBYTE(v104.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v65 = v104.__r_.__value_.__l.__size_;
  }
  std::string::append(a2, (const std::string::value_type *)v64, v65);
  if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v104.__r_.__value_.__l.__data_);
  }
  uint64_t v66 = *a1;
  unint64_t v67 = a1[1];
  for (uint64_t i = v66 + 1; i != v67; ++i)
  {
    *((unsigned char *)&v103.__r_.__value_.__s + 23) = 2;
    strcpy((char *)&v103, ", ");
    std::to_string(&v102, *i);
    if ((v102.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      float v69 = &v102;
    }
    else {
      float v69 = (std::string *)v102.__r_.__value_.__r.__words[0];
    }
    if ((v102.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v70 = HIBYTE(v102.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v70 = v102.__r_.__value_.__l.__size_;
    }
    int v71 = std::string::append(&v103, (const std::string::value_type *)v69, v70);
    long long v72 = *(_OWORD *)&v71->__r_.__value_.__l.__data_;
    v104.__r_.__value_.__r.__words[2] = v71->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v104.__r_.__value_.__l.__data_ = v72;
    v71->__r_.__value_.__l.__size_ = 0;
    v71->__r_.__value_.__r.__words[2] = 0;
    v71->__r_.__value_.__r.__words[0] = 0;
    if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      float v73 = &v104;
    }
    else {
      float v73 = (std::string *)v104.__r_.__value_.__r.__words[0];
    }
    if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v74 = HIBYTE(v104.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v74 = v104.__r_.__value_.__l.__size_;
    }
    std::string::append(a2, (const std::string::value_type *)v73, v74);
    if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v104.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v102.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v103.__r_.__value_.__l.__data_);
    }
  }
}

void sub_10032D5A8(_Unwind_Exception *a1)
{
  if (*(char *)(v2 - 73) < 0) {
    operator delete(*(void **)(v2 - 96));
  }
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

void sub_10032D8EC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    std::string::size_type v6 = a2;
    if (*a2 != a2[1])
    {
      *((unsigned char *)&v76.__r_.__value_.__s + 23) = 7;
      strcpy((char *)&v76, " WHERE ");
      long long v10 = std::string::append(&v76, "RecordingTimestamp");
      long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
      v77.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v11;
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      v10->__r_.__value_.__r.__words[0] = 0;
      long long v12 = std::string::append(&v77, " > ");
      long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
      v78.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v13;
      v12->__r_.__value_.__l.__size_ = 0;
      v12->__r_.__value_.__r.__words[2] = 0;
      v12->__r_.__value_.__r.__words[0] = 0;
      int v14 = *(char *)(a3 + 23);
      if (v14 >= 0) {
        long long v15 = (const std::string::value_type *)a3;
      }
      else {
        long long v15 = *(const std::string::value_type **)a3;
      }
      if (v14 >= 0) {
        std::string::size_type v16 = *(unsigned __int8 *)(a3 + 23);
      }
      else {
        std::string::size_type v16 = *(void *)(a3 + 8);
      }
      long long v17 = std::string::append(&v78, v15, v16);
      long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
      v79.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v18;
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      long long v19 = std::string::append(&v79, " AND ");
      long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
      v80.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v80.__r_.__value_.__l.__data_ = v20;
      v19->__r_.__value_.__l.__size_ = 0;
      v19->__r_.__value_.__r.__words[2] = 0;
      v19->__r_.__value_.__r.__words[0] = 0;
      long long v21 = std::string::append(&v80, "RecordingTimestamp");
      long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
      v81.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v22;
      v21->__r_.__value_.__l.__size_ = 0;
      v21->__r_.__value_.__r.__words[2] = 0;
      v21->__r_.__value_.__r.__words[0] = 0;
      long long v23 = std::string::append(&v81, "<= ");
      long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
      v82.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v82.__r_.__value_.__l.__data_ = v24;
      v23->__r_.__value_.__l.__size_ = 0;
      v23->__r_.__value_.__r.__words[2] = 0;
      v23->__r_.__value_.__r.__words[0] = 0;
      int v25 = *(char *)(a4 + 23);
      if (v25 >= 0) {
        long long v26 = (const std::string::value_type *)a4;
      }
      else {
        long long v26 = *(const std::string::value_type **)a4;
      }
      if (v25 >= 0) {
        std::string::size_type v27 = *(unsigned __int8 *)(a4 + 23);
      }
      else {
        std::string::size_type v27 = *(void *)(a4 + 8);
      }
      long long v28 = std::string::append(&v82, v26, v27);
      long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      int64_t v84 = v28->__r_.__value_.__r.__words[2];
      long long __p = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v82.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v81.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v80.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v79.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v78.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v77.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v76.__r_.__value_.__l.__data_);
      }
      sub_10032CDA8((int **)v6, &v82);
      *((unsigned char *)&v69.__r_.__value_.__s + 23) = 1;
      LOWORD(v69.__r_.__value_.__l.__data_) = 41;
      long long v30 = std::string::append(&v69, " AND ");
      long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
      v70.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v70.__r_.__value_.__l.__data_ = v31;
      v30->__r_.__value_.__l.__size_ = 0;
      v30->__r_.__value_.__r.__words[2] = 0;
      v30->__r_.__value_.__r.__words[0] = 0;
      std::string::size_type v32 = std::string::append(&v70, "RecordingUUID");
      long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
      v71.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v71.__r_.__value_.__l.__data_ = v33;
      v32->__r_.__value_.__l.__size_ = 0;
      v32->__r_.__value_.__r.__words[2] = 0;
      v32->__r_.__value_.__r.__words[0] = 0;
      std::string::size_type v34 = std::string::append(&v71, " IN (");
      long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
      v72.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v72.__r_.__value_.__l.__data_ = v35;
      v34->__r_.__value_.__l.__size_ = 0;
      v34->__r_.__value_.__r.__words[2] = 0;
      v34->__r_.__value_.__r.__words[0] = 0;
      long long v36 = std::string::append(&v72, "SELECT ");
      long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
      v73.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v73.__r_.__value_.__l.__data_ = v37;
      v36->__r_.__value_.__l.__size_ = 0;
      v36->__r_.__value_.__r.__words[2] = 0;
      v36->__r_.__value_.__r.__words[0] = 0;
      long long v38 = std::string::append(&v73, "RecordingUUID");
      long long v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
      v74.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v74.__r_.__value_.__l.__data_ = v39;
      v38->__r_.__value_.__l.__size_ = 0;
      v38->__r_.__value_.__r.__words[2] = 0;
      v38->__r_.__value_.__r.__words[0] = 0;
      char v68 = 6;
      strcpy(__s, " FROM ");
      long long v40 = std::string::append(&v74, __s, 6uLL);
      long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
      v75.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v75.__r_.__value_.__l.__data_ = v41;
      v40->__r_.__value_.__l.__size_ = 0;
      v40->__r_.__value_.__r.__words[2] = 0;
      v40->__r_.__value_.__r.__words[0] = 0;
      std::string v42 = std::string::append(&v75, "MicroLocationRecordingEvents");
      long long v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
      v76.__r_.__value_.__r.__words[2] = v42->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v76.__r_.__value_.__l.__data_ = v43;
      v42->__r_.__value_.__l.__size_ = 0;
      v42->__r_.__value_.__r.__words[2] = 0;
      v42->__r_.__value_.__r.__words[0] = 0;
      if (v84 >= 0) {
        p_p = (const std::string::value_type *)&__p;
      }
      else {
        p_p = (const std::string::value_type *)__p;
      }
      if (v84 >= 0) {
        std::string::size_type v45 = HIBYTE(v84);
      }
      else {
        std::string::size_type v45 = *((void *)&__p + 1);
      }
      std::string v46 = std::string::append(&v76, p_p, v45);
      long long v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
      v77.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v47;
      v46->__r_.__value_.__l.__size_ = 0;
      v46->__r_.__value_.__r.__words[2] = 0;
      v46->__r_.__value_.__r.__words[0] = 0;
      int64_t v48 = std::string::append(&v77, "))");
      long long v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
      v78.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v49;
      v48->__r_.__value_.__l.__size_ = 0;
      v48->__r_.__value_.__r.__words[2] = 0;
      v48->__r_.__value_.__r.__words[0] = 0;
      char v66 = 10;
      strcpy((char *)v65, " GROUP BY ");
      std::string v50 = std::string::append(&v78, (const std::string::value_type *)v65, 0xAuLL);
      long long v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
      v79.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v51;
      v50->__r_.__value_.__l.__size_ = 0;
      v50->__r_.__value_.__r.__words[2] = 0;
      v50->__r_.__value_.__r.__words[0] = 0;
      std::string v52 = std::string::append(&v79, "RecordingUUID");
      long long v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
      v80.__r_.__value_.__r.__words[2] = v52->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v80.__r_.__value_.__l.__data_ = v53;
      v52->__r_.__value_.__l.__size_ = 0;
      v52->__r_.__value_.__r.__words[2] = 0;
      v52->__r_.__value_.__r.__words[0] = 0;
      std::string v54 = std::string::append(&v80, ")");
      long long v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      v81.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v55;
      v54->__r_.__value_.__l.__size_ = 0;
      v54->__r_.__value_.__r.__words[2] = 0;
      v54->__r_.__value_.__r.__words[0] = 0;
      if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string v56 = &v81;
      }
      else {
        std::string v56 = (std::string *)v81.__r_.__value_.__r.__words[0];
      }
      if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v81.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v81.__r_.__value_.__l.__size_;
      }
      std::string::append(&v82, (const std::string::value_type *)v56, size);
      if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v81.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v80.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v79.__r_.__value_.__l.__data_);
      }
      if (v66 < 0) {
        operator delete(v65[0]);
      }
      if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v78.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v77.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v76.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v75.__r_.__value_.__l.__data_);
      }
      if (v68 < 0) {
        operator delete(*(void **)__s);
      }
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v74.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v73.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v72.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v71.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v70.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v69.__r_.__value_.__l.__data_);
      }
      sub_1000C7F88(&v81);
      LODWORD(v80.__r_.__value_.__l.__data_) = 0;
      CFStringRef v58 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsDatabaseSelectionLimit", 0x8000100u, kCFAllocatorNull);
      int v59 = sub_1004D08E4((uint64_t)v81.__r_.__value_.__l.__data_, (uint64_t)v58, &v80);
      CFRelease(v58);
      unsigned int data = v80.__r_.__value_.__l.__data_;
      if (v81.__r_.__value_.__l.__size_) {
        sub_1000DB0A0((std::__shared_weak_count *)v81.__r_.__value_.__l.__size_);
      }
      uint64_t v61 = *(void *)a1;
      sub_100134750(&v81, "RecordingTimestamp");
      if (v59) {
        unsigned int v62 = data;
      }
      else {
        unsigned int v62 = 5000;
      }
      sub_100329DBC(v61, (uint64_t)&v82, v62, (uint64_t)&v81);
    }
    sub_101A5CED4();
    __break(1u);
  }
  else
  {
    std::string::size_type v6 = &qword_102419000;
    if (qword_102419450 == -1) {
      goto LABEL_78;
    }
  }
  dispatch_once(&qword_102419450, &stru_1022A6AF0);
LABEL_78:
  long long v63 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__p) = 0;
    _os_log_impl((void *)&_mh_execute_header, v63, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all", (uint8_t *)&__p, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&__p, 0x65CuLL);
    if (v6[138] != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6AF0);
    }
    LOWORD(v82.__r_.__value_.__l.__data_) = 0;
    long long v64 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<CLMicroLocationRecordingEventsTable::Entry> CLMicroLocationRecordingEventsTable::selectRecordingEventsWithScanMeasurementsBetweenTimes(const std::vector<CLMicroLocationProto::EventType> &, const std::string &, const std::string &)", "%s\n", v64);
    if (v64 != (char *)&__p) {
      free(v64);
    }
  }
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
}

void sub_10032E0C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,uint64_t a63)
{
  if (a70 < 0) {
    operator delete(__p);
  }
  if (a73 < 0) {
    operator delete(a72);
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete((void *)STACK[0x200]);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10032E32C(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    *((unsigned char *)&v37.__r_.__value_.__s + 23) = 12;
    strcpy((char *)&v37, "DELETE FROM ");
    uint64_t v4 = std::string::append(&v37, "MicroLocationRecordingEvents");
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v38.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v6 = std::string::append(&v38, " WHERE ");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    long long v8 = std::string::append(&v39, "ReceivedTimestamp");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    long long v10 = std::string::append(&v40, " IN (");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    long long v12 = std::string::append(&v41, "SELECT ");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v42.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    int v14 = std::string::append(&v42, "ReceivedTimestamp");
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v16 = std::string::append(&v43, " FROM ");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    long long v18 = std::string::append(&v44, "MicroLocationRecordingEvents");
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v45.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    long long v20 = std::string::append(&v45, " ORDER BY ");
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    long long v22 = std::string::append(&v46, "ReceivedTimestamp");
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    long long v24 = std::string::append(&v47, " LIMIT ");
    long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v36, a2);
    if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v26 = &v36;
    }
    else {
      long long v26 = (std::string *)v36.__r_.__value_.__r.__words[0];
    }
    if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v36.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v36.__r_.__value_.__l.__size_;
    }
    long long v28 = std::string::append(&v48, (const std::string::value_type *)v26, size);
    long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    long long v30 = std::string::append(&v51, ")");
    long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    int64_t v50 = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)long long __p = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v51.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v36.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v48.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v46.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v45.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v44.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v43.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v42.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v41.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v40.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v39.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v38.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v37.__r_.__value_.__l.__data_);
    }
    if (v50 >= 0) {
      std::string::size_type v32 = __p;
    }
    else {
      std::string::size_type v32 = (void **)__p[0];
    }
    sub_10014D518(*(void *)a1, (uint64_t)v32);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6AF0);
  }
  long long v33 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v51.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't deleteOldestRows", (uint8_t *)&v51, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v51, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6AF0);
    }
    LOWORD(__p[0]) = 0;
    long long v35 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationRecordingEventsTable::deleteOldestRows(uint64_t)", "%s\n", (const char *)v35);
    if (v35 != &v51) {
      free(v35);
    }
  }
  return 0;
}

void sub_10032E9C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,void *__p,uint64_t a62,int a63)
{
  if (v66) {
    (*(void (**)(uint64_t))(*(void *)v66 + 8))(v66);
  }
  if (a66 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10032EB68(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, unsigned int a5@<W4>, void *a6@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    *((unsigned char *)&v45.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&v45, " WHERE ");
    long long v12 = std::string::append(&v45, "RecordingTimestamp");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    int v14 = std::string::append(&v46, " > ");
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    int v16 = *(char *)(a2 + 23);
    if (v16 >= 0) {
      long long v17 = (const std::string::value_type *)a2;
    }
    else {
      long long v17 = *(const std::string::value_type **)a2;
    }
    if (v16 >= 0) {
      std::string::size_type v18 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::string::size_type v18 = *(void *)(a2 + 8);
    }
    long long v19 = std::string::append(&v47, v17, v18);
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    long long v21 = std::string::append(&v48, " AND ");
    long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    long long v23 = std::string::append(&v49, "RecordingTimestamp");
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    long long v25 = std::string::append(&v50, "<= ");
    long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    int v27 = *(char *)(a3 + 23);
    if (v27 >= 0) {
      long long v28 = (const std::string::value_type *)a3;
    }
    else {
      long long v28 = *(const std::string::value_type **)a3;
    }
    if (v27 >= 0) {
      std::string::size_type v29 = *(unsigned __int8 *)(a3 + 23);
    }
    else {
      std::string::size_type v29 = *(void *)(a3 + 8);
    }
    long long v30 = std::string::append(&v51, v28, v29);
    long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    v52.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v32 = std::string::append(&v52, " AND ");
    long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
    v53.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v33;
    v32->__r_.__value_.__l.__size_ = 0;
    v32->__r_.__value_.__r.__words[2] = 0;
    v32->__r_.__value_.__r.__words[0] = 0;
    sub_100134750(v41, "RtLoiGroupId");
    sub_10022B538((const void **)v41, a4, (uint64_t)__p);
    if ((v44 & 0x80u) == 0) {
      std::string::size_type v34 = __p;
    }
    else {
      std::string::size_type v34 = (void **)__p[0];
    }
    if ((v44 & 0x80u) == 0) {
      std::string::size_type v35 = v44;
    }
    else {
      std::string::size_type v35 = (std::string::size_type)__p[1];
    }
    std::string v36 = std::string::append(&v53, (const std::string::value_type *)v34, v35);
    long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
    std::string::size_type v55 = v36->__r_.__value_.__r.__words[2];
    long long buf = v37;
    v36->__r_.__value_.__l.__size_ = 0;
    v36->__r_.__value_.__r.__words[2] = 0;
    v36->__r_.__value_.__r.__words[0] = 0;
    if ((char)v44 < 0) {
      operator delete(__p[0]);
    }
    if (v42 < 0) {
      operator delete(v41[0]);
    }
    if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v53.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v52.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v51.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v50.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v48.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v46.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v45.__r_.__value_.__l.__data_);
    }
    uint64_t v38 = *(void *)a1;
    std::operator+<char>();
    sub_100134750(&v52, "RecordingTimestamp");
    sub_100329DBC(v38, (uint64_t)&v53, a5, (uint64_t)&v52);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6AF0);
  }
  std::string v39 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(buf) = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all", (uint8_t *)&buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6AF0);
    }
    LOWORD(v53.__r_.__value_.__l.__data_) = 0;
    std::string v40 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<CLMicroLocationRecordingEventsTable::Entry> CLMicroLocationRecordingEventsTable::selectRecordingEventsBetweenTimesAtLoi(const std::string &, const std::string &, const boost::uuids::uuid &, uint32_t)", "%s\n", v40);
    if (v40 != (char *)&buf) {
      free(v40);
    }
  }
  *a6 = 0;
  a6[1] = 0;
  a6[2] = 0;
}

void sub_10032F030(_Unwind_Exception *a1)
{
}

void sub_10032F170()
{
}

void sub_10032F178()
{
}

void sub_10032F180()
{
}

void sub_10032F188(uint64_t *a1)
{
  *((unsigned char *)&v9.__r_.__value_.__s + 23) = 11;
  strcpy((char *)&v9, "SELECT MIN(");
  uint64_t v2 = std::string::append(&v9, "RecordingTimestamp");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v13.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v13.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  uint64_t v4 = std::string::append(&v13, ") FROM ");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v12.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v12.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v6 = std::string::append(&v12, "MicroLocationRecordingEvents");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  int64_t v11 = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
  if (v11 >= 0) {
    long long v8 = __p;
  }
  else {
    long long v8 = (void **)__p[0];
  }
  sub_10014D518(*a1, (uint64_t)v8);
}

#error "10032F468: call analysis failed (funcsize=86)"

void sub_10032F558(uint64_t *a1)
{
  *((unsigned char *)&v13.__r_.__value_.__s + 23) = 7;
  strcpy((char *)&v13, " WHERE ");
  uint64_t v2 = std::string::insert(&v13, 0, "MicroLocationRecordingEvents");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v16.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  sub_100134750(v9, "RtLoiGroupId");
  v17[0] = 0;
  v17[1] = 0;
  sub_10022B538((const void **)v9, v17, (uint64_t)__p);
  if ((v12 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v12 & 0x80u) == 0) {
    std::string::size_type v5 = v12;
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::size_type v6 = std::string::append(&v16, (const std::string::value_type *)v4, v5);
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  std::string::size_type v15 = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)int v14 = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if ((char)v12 < 0) {
    operator delete(__p[0]);
  }
  if (v10 < 0) {
    operator delete(v9[0]);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  uint64_t v8 = *a1;
  sub_100134750(&v16, "RecordingTimestamp");
  sub_100329DBC(v8, (uint64_t)v14, 1u, (uint64_t)&v16);
}

void sub_10032F780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,uint64_t *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,uint64_t a47,void *__p,uint64_t a49,int a50,__int16 a51,char a52,char a53)
{
  if (a53 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (*(unsigned char *)(v53 + 64) && *(char *)(v53 + 63) < 0) {
    operator delete(*(void **)(v53 + 40));
  }
  a40 = &a27;
  sub_1001EF794((void ***)&a40);
  if (a38 < 0) {
    operator delete(a33);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10032F870(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v5 = *(void *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = v5;
  uint64_t v7 = a1 + 40;
  if (v4)
  {
    if (*(char *)(a1 + 63) < 0) {
      operator delete(*(void **)v7);
    }
    long long v8 = *(_OWORD *)(a2 + 40);
    *(void *)(v7 + 16) = *(void *)(a2 + 56);
    *(_OWORD *)uint64_t v7 = v8;
    *(unsigned char *)(a2 + 63) = 0;
    *(unsigned char *)(a2 + 40) = 0;
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)uint64_t v7 = v9;
    *(void *)(a2 + 48) = 0;
    *(void *)(a2 + 56) = 0;
    *(void *)(a2 + 40) = 0;
    *(unsigned char *)(a1 + 64) = 1;
  }
  return a1;
}

void sub_10032F908(uint64_t a1@<X0>, unsigned char *a2@<X1>, unsigned char *a3@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_100134750(&v19, "MicroLocationRecordingEvents");
    long long v6 = std::string::append(&v19, " WHERE ");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v20.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    sub_100134750(v15, "RtLoiGroupId");
    sub_10022B538((const void **)v15, a2, (uint64_t)__p);
    if ((v18 & 0x80u) == 0) {
      long long v8 = __p;
    }
    else {
      long long v8 = (void **)__p[0];
    }
    if ((v18 & 0x80u) == 0) {
      std::string::size_type v9 = v18;
    }
    else {
      std::string::size_type v9 = (std::string::size_type)__p[1];
    }
    char v10 = std::string::append(&v20, (const std::string::value_type *)v8, v9);
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    std::string::size_type v22 = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)long long buf = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    if ((char)v18 < 0) {
      operator delete(__p[0]);
    }
    if (v16 < 0) {
      operator delete(v15[0]);
    }
    if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v20.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v19.__r_.__value_.__l.__data_);
    }
    uint64_t v12 = *(void *)a1;
    sub_100134750(&v19, "RecordingTimestamp");
    sub_100329DBC(v12, (uint64_t)buf, 1u, (uint64_t)&v19);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6AF0);
  }
  std::string v13 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't get most recent recording for supplied LOI Group Id", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6AF0);
    }
    LOWORD(v20.__r_.__value_.__l.__data_) = 0;
    int v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::optional<CLMicroLocationRecordingEventsTable::Entry> CLMicroLocationRecordingEventsTable::getMostRecentRecordingForLoiGroupId(const boost::uuids::uuid &)", "%s\n", v14);
    if (v14 != (char *)buf) {
      free(v14);
    }
  }
  *a3 = 0;
  a3[240] = 0;
}

void sub_10032FC08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void **a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  a24 = &a30;
  sub_1001EF794(&a24);
  if (a42 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10032FCB8(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_10032FCE8@<X0>(sqlite3_stmt *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  long long v6 = sqlite3_column_blob(a1, a2);
  uint64_t v7 = sqlite3_column_bytes(a1, a2);
  if (!v6)
  {
    sub_101A5D140(v7);
LABEL_5:
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    sub_100134750(&v12, "Unable to parse protobuf");
    std::runtime_error::runtime_error(exception, &v12);
    exception->__vftable = (std::runtime_error_vtbl *)&off_10229F018;
  }
  int v8 = v7;
  sub_10023DFC0(a3);
  uint64_t result = wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(v9, v6, v8);
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  return result;
}

void sub_10032FDC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_10026633C(v15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

uint64_t sub_10032FE10(uint64_t *a1, uint64_t *a2, double *a3, uint64_t a4, double *a5, int *a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  unint64_t v10 = 0xEEEEEEEEEEEEEEEFLL * ((a1[1] - *a1) >> 4);
  unint64_t v11 = v10 + 1;
  if (v10 + 1 > 0x111111111111111) {
    sub_1001D7FD4();
  }
  if (0xDDDDDDDDDDDDDDDELL * ((a1[2] - *a1) >> 4) > v11) {
    unint64_t v11 = 0xDDDDDDDDDDDDDDDELL * ((a1[2] - *a1) >> 4);
  }
  if (0xEEEEEEEEEEEEEEEFLL * ((a1[2] - *a1) >> 4) >= 0x88888888888888) {
    unint64_t v19 = 0x111111111111111;
  }
  else {
    unint64_t v19 = v11;
  }
  long long v28 = a1 + 2;
  if (v19)
  {
    unint64_t v23 = v10;
    std::string v20 = (char *)sub_1001F2B9C((uint64_t)(a1 + 2), v19);
    unint64_t v10 = v23;
  }
  else
  {
    std::string v20 = 0;
  }
  long long v24 = v20;
  long long v25 = &v20[240 * v10];
  int v27 = &v20[240 * v19];
  sub_10032FF74((uint64_t)(a1 + 2), (uint64_t)v25, a2, a3, a4, a5, a6, a7, a8, a9);
  long long v26 = v25 + 240;
  sub_1001F2B24(a1, &v24);
  uint64_t v21 = a1[1];
  sub_1001F2D3C(&v24);
  return v21;
}

void sub_10032FF60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1001F2D3C((void **)va);
  _Unwind_Resume(a1);
}

void sub_10032FF74(uint64_t a1, uint64_t a2, uint64_t *a3, double *a4, uint64_t a5, double *a6, int *a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v14 = *a3;
  uint64_t v15 = a3[1];
  double v16 = *a4;
  if (*(char *)(a5 + 23) < 0)
  {
    sub_1000DC48C(__dst, *(void **)a5, *(void *)(a5 + 8));
  }
  else
  {
    *(_OWORD *)__dst = *(_OWORD *)a5;
    uint64_t v22 = *(void *)(a5 + 16);
  }
  double v17 = *a6;
  int v18 = *a7;
  if (*(char *)(a9 + 23) < 0)
  {
    sub_1000DC48C(__p, *(void **)a9, *(void *)(a9 + 8));
  }
  else
  {
    *(_OWORD *)long long __p = *(_OWORD *)a9;
    uint64_t v20 = *(void *)(a9 + 16);
  }
  sub_100328EDC(a2, v14, v15, (long long *)__dst, v18, v16, v17, a8, (uint64_t)__p, a8, *a10, a10[1]);
  if (SHIBYTE(v20) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v22) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_100330080(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003300B4(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  if (*((char *)a2 + 47) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 24), *((void **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v5 = *(long long *)((char *)a2 + 24);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(_OWORD *)(a1 + 24) = v5;
  }
  long long v6 = a2[3];
  *(_OWORD *)(a1 + 60) = *(long long *)((char *)a2 + 60);
  *(_OWORD *)(a1 + 48) = v6;
  sub_1002660C8(a1 + 80);
  long long v7 = *(long long *)((char *)a2 + 216);
  *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
  *(_OWORD *)(a1 + 216) = v7;
  *(unsigned char *)(a1 + 240) = 1;
  return a1;
}

void sub_100330158(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

double sub_100330174@<D0>(std::string *a1@<X8>)
{
  memset(&v3, 0, sizeof(v3));
  sub_1003301D8(&v3);
  double result = *(double *)&v3.__r_.__value_.__l.__data_;
  *a1 = v3;
  return result;
}

void sub_1003301BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003301D8(std::string *a1)
{
  sub_1002AE5B0(a1);
  sub_100330248(a1);
  sub_10021519C(a1);
  sub_1001E83A8(a1);
  sub_10031D854(a1);
  sub_10031D934(a1);
  sub_1001E8488(a1);
  sub_100330328(a1);

  return sub_10021535C(a1);
}

uint64_t sub_100330248(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  uint64_t v2 = std::string::append(&v7, "RecordingTimestamp");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    long long v4 = __p;
  }
  else {
    long long v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_1003302F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100330328(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  uint64_t v2 = std::string::append(&v7, "TriggerUUID");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    long long v4 = __p;
  }
  else {
    long long v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_1003303D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

double sub_100330408@<D0>(std::string *a1@<X8>)
{
  sub_100134750(&v11, "VALUES (");
  uint64_t v2 = 9;
  do
  {
    if (v2 == 9)
    {
      *((unsigned char *)&v8.__r_.__value_.__s + 23) = 0;
      v8.__r_.__value_.__s.__data_[0] = 0;
    }
    else
    {
      *((unsigned char *)&v8.__r_.__value_.__s + 23) = 2;
      strcpy((char *)&v8, ", ");
    }
    long long v3 = std::string::append(&v8, "?");
    long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    int64_t v10 = v3->__r_.__value_.__r.__words[2];
    *(_OWORD *)long long __p = v4;
    v3->__r_.__value_.__l.__size_ = 0;
    v3->__r_.__value_.__r.__words[2] = 0;
    v3->__r_.__value_.__r.__words[0] = 0;
    if (v10 >= 0) {
      std::string::size_type v5 = __p;
    }
    else {
      std::string::size_type v5 = (void **)__p[0];
    }
    if (v10 >= 0) {
      std::string::size_type v6 = HIBYTE(v10);
    }
    else {
      std::string::size_type v6 = (std::string::size_type)__p[1];
    }
    std::string::append(&v11, (const std::string::value_type *)v5, v6);
    if (SHIBYTE(v10) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v8.__r_.__value_.__l.__data_);
    }
    --v2;
  }
  while (v2);
  std::string::append(&v11, ")");
  double result = *(double *)&v11.__r_.__value_.__l.__data_;
  *a1 = v11;
  return result;
}

void sub_100330514(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100330560(std::string **a1, uint64_t a2)
{
  *((unsigned char *)&v16.__r_.__value_.__s + 23) = 1;
  LOWORD(v16.__r_.__value_.__l.__data_) = 44;
  long long v4 = std::string::append(&v16, "\"");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v17.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001E86C0(a2, &__p) & 1) == 0)
  {
    uint64_t v14 = std::bad_cast::bad_cast(&v21);
    v21.__vftable = (std::bad_cast_vtbl *)&off_10229E8C8;
    sub_1001E91E8((uint64_t)v14);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  std::string v8 = std::string::append(&v17, (const std::string::value_type *)p_p, size);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v18.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v18.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int64_t v10 = std::string::append(&v18, "\"");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  int64_t v20 = v10->__r_.__value_.__r.__words[2];
  long long v19 = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (v20 >= 0) {
    std::string v12 = (const std::string::value_type *)&v19;
  }
  else {
    std::string v12 = (const std::string::value_type *)v19;
  }
  if (v20 >= 0) {
    std::string::size_type v13 = HIBYTE(v20);
  }
  else {
    std::string::size_type v13 = *((void *)&v19 + 1);
  }
  std::string::append(*a1, v12, v13);
  if (SHIBYTE(v20) < 0) {
    operator delete((void *)v19);
  }
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
}

void sub_1003306F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0) {
    operator delete(*(void **)(v33 - 64));
  }
  if (a33 < 0) {
    operator delete(__p);
  }
  if (a14 < 0) {
    operator delete(a9);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100330780()
{
  v19.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
  *(_OWORD *)&v19.__r_.__value_.__r.__words[1] = xmmword_101D04970;
  strcpy(v19.__r_.__value_.__l.__data_, "INSERT OR REPLACE INTO ");
  CFStringRef v0 = std::string::append(&v19, "MicroLocationRecordingEvents");
  long long v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v20.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  uint64_t v2 = std::string::append(&v20, " (");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  sub_100328C90((uint64_t)v17);
  if ((v18 & 0x80u) == 0) {
    long long v4 = v17;
  }
  else {
    long long v4 = (void **)v17[0];
  }
  if ((v18 & 0x80u) == 0) {
    std::string::size_type v5 = v18;
  }
  else {
    std::string::size_type v5 = (std::string::size_type)v17[1];
  }
  std::string::size_type v6 = std::string::append(&v21, (const std::string::value_type *)v4, v5);
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v22.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  std::string v8 = std::string::append(&v22, ") ");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_100328D64((uint64_t)__p);
  if ((v16 & 0x80u) == 0) {
    int64_t v10 = __p;
  }
  else {
    int64_t v10 = (void **)__p[0];
  }
  if ((v16 & 0x80u) == 0) {
    std::string::size_type v11 = v16;
  }
  else {
    std::string::size_type v11 = (std::string::size_type)__p[1];
  }
  std::string v12 = std::string::append(&v23, (const std::string::value_type *)v10, v11);
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  unk_10247A7F8 = *((void *)&v12->__r_.__value_.__l + 2);
  xmmword_10247A7E8 = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  if ((char)v16 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  if ((char)v18 < 0) {
    operator delete(v17[0]);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10247A7E8, (void *)&_mh_execute_header);
}

void sub_100330978(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v40 - 25) < 0) {
    operator delete(*(void **)(v40 - 48));
  }
  if (*(char *)(v40 - 57) < 0) {
    operator delete(*(void **)(v40 - 80));
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100330A24(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *a1 = off_1022A6D00;
  a1[1] = 0;
  std::string::size_type v6 = a1 + 1;
  a1[2] = 0;
  a1[3] = 0;
  uint64_t v7 = *(void *)(a3 + 24);
  if (!v7) {
    sub_10015E48C();
  }
  (*(void (**)(unint64_t *__return_ptr))(*(void *)v7 + 48))(v22);
  std::string::size_type v11 = *(_OWORD **)a4;
  std::string v12 = *(_OWORD **)(a4 + 8);
  if (*(_OWORD **)a4 != v12)
  {
    while (1)
    {
      uint64_t v13 = *(void *)(a2 + 24);
      if (!v13) {
        sub_10015E48C();
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v13 + 48))(v13)) {
        break;
      }
      v26[0] = *v11;
      uint64_t v14 = operator new(0x10uLL);
      std::string::size_type v29 = v14 + 1;
      long long v30 = v14 + 1;
      *uint64_t v14 = v26[0];
      std::string __p = v14;
      sub_1001FFE00(a5, (uint64_t)&__p, v21);
      if (__p)
      {
        std::string::size_type v29 = __p;
        operator delete(__p);
      }
      sub_100215E60(v21, (uint64_t)v11);
      uint64_t v15 = v11 + 5;
      sub_1002660C8(v26);
      char v27 = 1;
      long long v24 = *(v15 - 5);
      char v25 = 1;
      sub_100320670(v21, (uint64_t)v26, (uint64_t)&v24, v22, &__p);
      if (v27) {
        sub_10026633C(v26);
      }
      if (v31)
      {
        unint64_t v16 = a1[2];
        if (v16 >= a1[3])
        {
          uint64_t v17 = sub_1003310A4(v6, (uint64_t)&__p);
        }
        else
        {
          sub_1001F3660((uint64_t)(a1 + 3), a1[2], (uint64_t)&__p);
          uint64_t v17 = v16 + 192;
        }
        a1[2] = v17;
      }
      sub_100216190((uint64_t)&__p);
      std::string __p = v21;
      sub_100216394((void ***)&__p);
      std::string::size_type v11 = v15 + 10;
      if (v11 == v12) {
        goto LABEL_21;
      }
    }
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6D38);
    }
    unsigned __int8 v18 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(__p) = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Data source cancelled learning", (uint8_t *)&__p, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(&__p, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6D38);
      }
      LOWORD(v26[0]) = 0;
      std::string v20 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CLMicroLocationFingerprintStdVectorSource::CLMicroLocationFingerprintStdVectorSource(CLMicroLocationFingerprintDataSources::ShouldCancelFunction, CLMicroLocationFingerprintDataSources::ConfigurationLoaderFunction, const std::vector<CLMicroLocationRecordingEventsTable::Entry> &, CLMicroLocationDatabase &)", "%s\n", v20);
      if (v20 != (char *)&__p) {
        free(v20);
      }
    }
  }
LABEL_21:
  sub_1000D7D80((uint64_t)&v23);
  return a1;
}

void sub_100330D8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,void *__p,uint64_t a44)
{
}

unint64_t sub_100330E24(uint64_t a1)
{
  return 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)(a1 + 8)) >> 6);
}

uint64_t sub_100330E40(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 8) + 192 * a2;
}

uint64_t sub_100330E50(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[3];
  uint64_t v3 = (uint64_t)(a1 + 3);
  unint64_t v5 = *(void *)(v3 - 8);
  if (v5 >= v4)
  {
    uint64_t result = sub_1001F3358(a1 + 1, a2);
  }
  else
  {
    sub_1001F3468(v3, *(void *)(v3 - 8), a2);
    uint64_t result = v5 + 192;
    a1[2] = v5 + 192;
  }
  a1[2] = result;
  return result;
}

void sub_100330EA8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 16) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100330EB0(uint64_t a1)
{
  *(void *)a1 = off_1022A6D00;
  uint64_t v3 = (void **)(a1 + 8);
  sub_1001F2FE8(&v3);
  return a1;
}

void sub_100330F08(uint64_t a1)
{
  *(void *)a1 = off_1022A6D00;
  uint64_t v1 = (void **)(a1 + 8);
  sub_1001F2FE8(&v1);
  operator delete();
}

void sub_100330F74(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

char *sub_100330FA4(void *a1, unint64_t a2)
{
  if (a2 >= 0x155555555555556) {
    sub_1001D7FD4();
  }
  uint64_t result = (char *)sub_10017EB28((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[192 * v4];
  return result;
}

uint64_t sub_100330FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  void v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_1001F3468(a1, v4, v6);
      v6 += 192;
      uint64_t v4 = v12 + 192;
      v12 += 192;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  sub_1002DD34C((uint64_t)v9);
  return v4;
}

void sub_100331090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1003310A4(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 6);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x155555555555555) {
    sub_1001D7FD4();
  }
  if (0x5555555555555556 * ((a1[2] - *a1) >> 6) > v4) {
    unint64_t v4 = 0x5555555555555556 * ((a1[2] - *a1) >> 6);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 6) >= 0xAAAAAAAAAAAAAALL) {
    unint64_t v6 = 0x155555555555555;
  }
  else {
    unint64_t v6 = v4;
  }
  uint64_t v14 = a1 + 2;
  if (v6) {
    uint64_t v7 = (char *)sub_10017EB28((uint64_t)(a1 + 2), v6);
  }
  else {
    uint64_t v7 = 0;
  }
  char v10 = v7;
  uint64_t v11 = &v7[192 * v3];
  uint64_t v13 = &v7[192 * v6];
  sub_1001F3660((uint64_t)(a1 + 2), (uint64_t)v11, a2);
  uint64_t v12 = v11 + 192;
  sub_1001F3530(a1, &v10);
  uint64_t v8 = a1[1];
  sub_1001F3774(&v10);
  return v8;
}

void sub_10033119C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001F3774((void **)va);
  _Unwind_Resume(a1);
}

void sub_1003311B0(uint64_t a1, uint64_t a2, long long *a3)
{
  if (*(void *)(a1 + 24) < *(void *)(a1 + 88))
  {
    sub_1002E58D4(a2, (uint64_t)&v34);
    if (v35)
    {
      sub_100332144((void *)a1, &v34, a3, (long long *)(a1 + 48), (_OWORD *)(a1 + 72));
      goto LABEL_31;
    }
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6D58);
    }
    unint64_t v16 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
    {
      uint64_t v17 = *(char *)(a2 + 23) >= 0 ? a2 : *(void *)a2;
      int v24 = 68289283;
      int v25 = 0;
      __int16 v26 = 2082;
      char v27 = "";
      __int16 v28 = 2081;
      uint64_t v29 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Rapport, rapport monitor buffered bad IDS UUID\", \"IDS\":%{private, location:escape_only}s}", (uint8_t *)&v24, 0x1Cu);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6D58);
      }
    }
    uint64_t v18 = qword_102419458;
    if (!os_signpost_enabled((os_log_t)qword_102419458)) {
      goto LABEL_31;
    }
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v19 = a2;
    }
    else {
      uint64_t v19 = *(void *)a2;
    }
    int v24 = 68289283;
    int v25 = 0;
    __int16 v26 = 2082;
    char v27 = "";
    __int16 v28 = 2081;
    uint64_t v29 = v19;
    uint64_t v12 = "Rapport, rapport monitor buffered bad IDS UUID";
    uint64_t v13 = "{\"msg%{public}.0s\":\"Rapport, rapport monitor buffered bad IDS UUID\", \"IDS\":%{private, location:escape_only}s}";
    uint64_t v14 = v18;
    uint32_t v15 = 28;
LABEL_30:
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v14, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, v12, v13, (uint8_t *)&v24, v15);
LABEL_31:
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6D58);
    }
    goto LABEL_33;
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6D58);
  }
  unint64_t v6 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
  {
    uint64_t v7 = *(char *)(a2 + 23) >= 0 ? a2 : *(void *)a2;
    uint64_t v8 = *(uint64_t **)(a1 + 24);
    int v24 = 68289539;
    int v25 = 0;
    __int16 v26 = 2082;
    char v27 = "";
    __int16 v28 = 2081;
    uint64_t v29 = v7;
    __int16 v30 = 2049;
    char v31 = v8;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Rapport, rapport monitor exceeded max entries\", \"IDS\":%{private, location:escape_only}s, \"Size\":%{private}lu}", (uint8_t *)&v24, 0x26u);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6D58);
    }
  }
  uint64_t v9 = qword_102419458;
  if (os_signpost_enabled((os_log_t)qword_102419458))
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v10 = a2;
    }
    else {
      uint64_t v10 = *(void *)a2;
    }
    uint64_t v11 = *(uint64_t **)(a1 + 24);
    int v24 = 68289539;
    int v25 = 0;
    __int16 v26 = 2082;
    char v27 = "";
    __int16 v28 = 2081;
    uint64_t v29 = v10;
    __int16 v30 = 2049;
    char v31 = v11;
    uint64_t v12 = "Rapport, rapport monitor exceeded max entries";
    uint64_t v13 = "{\"msg%{public}.0s\":\"Rapport, rapport monitor exceeded max entries\", \"IDS\":%{private, location:escape_onl"
          "y}s, \"Size\":%{private}lu}";
    uint64_t v14 = v9;
    uint32_t v15 = 38;
    goto LABEL_30;
  }
LABEL_33:
  std::string v20 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v21 = a2;
    }
    else {
      uint64_t v21 = *(void *)a2;
    }
    std::string v22 = *(uint64_t **)a3;
    if (*((char *)a3 + 23) >= 0) {
      std::string v22 = (uint64_t *)a3;
    }
    uint64_t v23 = (void *)(a1 + 48);
    if (*(char *)(a1 + 71) < 0) {
      uint64_t v23 = (void *)*v23;
    }
    int v24 = 68289795;
    int v25 = 0;
    __int16 v26 = 2082;
    char v27 = "";
    __int16 v28 = 2081;
    uint64_t v29 = v21;
    __int16 v30 = 2081;
    char v31 = v22;
    __int16 v32 = 2082;
    uint64_t v33 = v23;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"Rapport, buffered a found device\", \"Device IDS identifier\":%{private, location:escape_only}s, \"Device name\":%{private, location:escape_only}s, \"CoreRoutine LOI Type\":%{public, location:escape_only}s}", (uint8_t *)&v24, 0x30u);
  }
}

void sub_1003315C0(uint64_t a1@<X0>, double *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_OWORD *)a5 = 0u;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_DWORD *)(a5 + 32) = 1065353216;
  for (uint64_t i = *(void **)(a1 + 16); i; uint64_t i = (void *)*i)
  {
    if (i[10] == *(void *)a4 && i[11] == *(void *)(a4 + 8)) {
      sub_100332528(a5, (uint64_t)(i + 2), (uint64_t)(i + 2));
    }
  }
  std::to_string(&v31, *a2);
  std::to_string(&v30, 1.79769313e308);
  sub_10020256C(*(void *)(a1 + 40), (uint64_t)&v31, (uint64_t)&v30, (long long *)a4, &v28);
  if (*(_OWORD *)a4 != 0)
  {
    uint64_t v12 = *(void *)(a1 + 40);
    long long v44 = 0uLL;
    sub_10020256C(v12, (uint64_t)&v31, (uint64_t)&v30, &v44, buf);
    sub_10033280C(&v28, v29, *(uint64_t *)buf, *(uint64_t *)v33, 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)v33 - *(void *)buf) >> 4));
    *(void *)&long long v44 = buf;
    sub_100214F7C((void ***)&v44);
  }
  __int16 v26 = a3;
  uint64_t v13 = v29;
  if (v28 != v29)
  {
    uint64_t v14 = (uint64_t ***)(v28 + 64);
    do
    {
      sub_1002E594C(*(v14 - 3), &v44);
      if ((_BYTE)v45)
      {
        sub_100332144((void *)a5, &v44, (long long *)*(v14 - 2), (long long *)(v14 - 7), v14);
      }
      else
      {
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A6D58);
        }
        uint32_t v15 = qword_102419458;
        if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)uint64_t v33 = 2082;
          *(void *)&v33[2] = "";
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"Rapport, rapport monitor read bad IDS UUID from DB\"}", buf, 0x12u);
          if (qword_102419450 != -1) {
            dispatch_once(&qword_102419450, &stru_1022A6D58);
          }
        }
        unint64_t v16 = qword_102419458;
        if (os_signpost_enabled((os_log_t)qword_102419458))
        {
          *(_DWORD *)long long buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)uint64_t v33 = 2082;
          *(void *)&v33[2] = "";
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v16, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Rapport, rapport monitor read bad IDS UUID from DB", "{\"msg%{public}.0s\":\"Rapport, rapport monitor read bad IDS UUID from DB\"}", buf, 0x12u);
        }
      }
      uint64_t v17 = v14 + 2;
      v14 += 10;
    }
    while (v17 != (_OWORD *)v13);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6D58);
  }
  uint64_t v18 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v20 = v28;
    uint64_t v19 = v29;
    if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v21 = &v31;
    }
    else {
      uint64_t v21 = (std::string *)v31.__r_.__value_.__r.__words[0];
    }
    if (*((char *)v26 + 23) >= 0) {
      std::string v22 = v26;
    }
    else {
      std::string v22 = (uint64_t *)*v26;
    }
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001E86C0(a4, &__p) & 1) == 0)
    {
      int v25 = std::bad_cast::bad_cast((std::bad_cast *)&v44);
      *(void *)&long long v44 = &off_10229E8C8;
      sub_1001E91E8((uint64_t)v25);
    }
    uint64_t v23 = *(void *)(a5 + 24);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)long long buf = 68290306;
    *(_DWORD *)&uint8_t buf[4] = 0;
    *(_WORD *)uint64_t v33 = 2082;
    *(void *)&v33[2] = "";
    __int16 v34 = 2050;
    unint64_t v35 = 0xCCCCCCCCCCCCCCCDLL * ((v19 - v20) >> 4);
    __int16 v36 = 2082;
    long long v37 = v21;
    __int16 v38 = 2082;
    std::string v39 = v22;
    __int16 v40 = 2082;
    std::string v41 = p_p;
    __int16 v42 = 2050;
    uint64_t v43 = v23;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"RapportMonitor getDevicesSinceLearnEventTimeAtLoi\", \"Backup Entries\":%{public}lu, \"From time\":%{public, location:escape_only}s, \"LOI type\":%{public, location:escape_only}s, \"LOI id\":%{public, location:escape_only}s, \"Total number of devices\":%{public}lu}", buf, 0x44u);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  *(void *)long long buf = &v28;
  sub_100214F7C((void ***)buf);
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v30.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v31.__r_.__value_.__l.__data_);
  }
}

void sub_100331A1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,char *a34)
{
  std::bad_cast::~bad_cast((std::bad_cast *)(v35 - 128));
  if (a18 < 0) {
    operator delete(__p);
  }
  a34 = &a19;
  sub_100214F7C((void ***)&a34);
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  sub_100314F10(v34);
  _Unwind_Resume(a1);
}

void sub_100331AC4(uint64_t a1)
{
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  unint64_t v8 = 0;
  uint64_t v1 = *(uint64_t **)(a1 + 16);
  if (v1)
  {
    do
    {
      sub_10023E1E0(buf);
      v11 |= 1u;
      if (*(_UNKNOWN **)v10 == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::assign(*(std::string **)v10, (const std::string::value_type *)v1 + 16, 0x10uLL);
      v11 |= 2u;
      if (*(_UNKNOWN **)&v10[8] == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(*(std::string **)&v10[8], (const std::string *)(v1 + 4));
      unint64_t v3 = v7;
      if (v7 >= v8)
      {
        uint64_t v4 = sub_100332F70(&v6, (uint64_t)(v1 + 7), (uint64_t)buf, (_OWORD *)v1 + 5);
      }
      else
      {
        sub_100333098((uint64_t)&v8, v7, (uint64_t)(v1 + 7), (uint64_t)buf, (_OWORD *)v1 + 5);
        uint64_t v4 = v3 + 80;
      }
      unint64_t v7 = v4;
      sub_10026D820((wireless_diagnostics::google::protobuf::MessageLite *)buf);
      uint64_t v1 = (uint64_t *)*v1;
    }
    while (v1);
    if (v7 != v6)
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6D58);
      }
      unint64_t v5 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 68289282;
        *(_DWORD *)&uint8_t buf[4] = 0;
        *(_WORD *)uint64_t v10 = 2082;
        *(void *)&v10[2] = "";
        *(_WORD *)&v10[10] = 2050;
        *(void *)&v10[12] = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v7 - v6) >> 4);
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"Rapport, back up rapport monitor data to DB\", \"Num Entries\":%{public}lu}", buf, 0x1Cu);
      }
      sub_100331D44(*(void *)(a1 + 40));
    }
  }
  *(void *)long long buf = &v6;
  sub_100214F7C((void ***)buf);
}

void sub_100331D08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void **a13)
{
  a13 = (void **)&a10;
  sub_100214F7C(&a13);
  _Unwind_Resume(a1);
}

uint64_t sub_100331D44(uint64_t a1)
{
  if (sub_10014C3C0(a1 + 72))
  {
    uint64_t v2 = *(void *)(a1 + 256);
    if (!v2) {
      operator new();
    }
    uint64_t v3 = sub_100212774(v2);
    sub_100333144(a1);
    return v3;
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6D58);
    }
    unint64_t v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Can't insert because the database is invalid", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6D58);
      }
      uint64_t v6 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::insertOrReplace(const std::vector<TableEntry> &) [TableEntry = CLMicroLocationRapportTable::Entry]", "%s\n", v6);
      if (v6 != (char *)buf) {
        free(v6);
      }
    }
    return 0;
  }
}

void sub_100331F78()
{
}

std::string *sub_100331FA4(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 2, a2);
}

__n128 sub_100331FAC(uint64_t a1, __n128 *a2)
{
  __n128 result = *a2;
  *(__n128 *)(a1 + 72) = *a2;
  return result;
}

unint64_t sub_100331FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 0;
  unint64_t v3 = 0;
  do
    v3 ^= (v3 << 6) + 2654435769u + (v3 >> 2) + *(unsigned __int8 *)(a2 + v2++);
  while (v2 != 16);
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  do
    v5 ^= (v5 << 6) + 2654435769u + (v5 >> 2) + *(unsigned __int8 *)(a2 + 64 + v4++);
  while (v4 != 16);
  return 0xC6A4A7935BD1E995
       * ((0xC6A4A7935BD1E995 * ((0xC6A4A7935BD1E995 * v5) ^ ((0xC6A4A7935BD1E995 * v5) >> 47))) ^ v3)
       + 3864292196u;
}

BOOL sub_100332044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)a2 != *(void *)a3 || *(void *)(a2 + 8) != *(void *)(a3 + 8)) {
    return 0;
  }
  uint64_t v6 = *(unsigned __int8 *)(a2 + 39);
  size_t v7 = *(void *)(a2 + 24);
  if ((v6 & 0x80u) == 0) {
    uint64_t v8 = *(unsigned __int8 *)(a2 + 39);
  }
  else {
    uint64_t v8 = *(void *)(a2 + 24);
  }
  uint64_t v9 = *(unsigned __int8 *)(a3 + 39);
  int v10 = (char)v9;
  if ((v9 & 0x80u) != 0) {
    uint64_t v9 = *(void *)(a3 + 24);
  }
  if (v8 != v9) {
    return 0;
  }
  int v11 = (const void **)(a2 + 16);
  if (v10 >= 0) {
    uint64_t v12 = (unsigned __int8 *)(a3 + 16);
  }
  else {
    uint64_t v12 = *(unsigned __int8 **)(a3 + 16);
  }
  if ((v6 & 0x80) != 0)
  {
    if (!memcmp(*v11, v12, v7)) {
      return *(void *)(a2 + 64) == *(void *)(a3 + 64) && *(void *)(a2 + 72) == *(void *)(a3 + 72);
    }
    return 0;
  }
  if (v6)
  {
    while (*(unsigned __int8 *)v11 == *v12)
    {
      int v11 = (const void **)((char *)v11 + 1);
      ++v12;
      if (!--v6) {
        return *(void *)(a2 + 64) == *(void *)(a3 + 64) && *(void *)(a2 + 72) == *(void *)(a3 + 72);
      }
    }
    return 0;
  }
  return *(void *)(a2 + 64) == *(void *)(a3 + 64) && *(void *)(a2 + 72) == *(void *)(a3 + 72);
}

void sub_100332114(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void *sub_100332144(void *a1, _OWORD *a2, long long *a3, long long *a4, _OWORD *a5)
{
  sub_1003321BC((uint64_t)a1, a2, a3, a4, a5, (uint64_t)v9);
  uint64_t v6 = sub_100332264(a1, v9[0]);
  if (v7) {
    v9[0] = 0;
  }
  sub_1003324D0((uint64_t)v9, 0);
  return v6;
}

void sub_1003321A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003324D0((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

unint64_t sub_1003321BC@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, long long *a3@<X2>, long long *a4@<X3>, _OWORD *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = a1 + 16;
  uint64_t v12 = operator new(0x60uLL);
  *(void *)a6 = v12;
  *(void *)(a6 + 8) = v11;
  *(unsigned char *)(a6 + 16) = 0;
  *uint64_t v12 = 0;
  v12[1] = 0;
  uint64_t v13 = sub_1003322D4((uint64_t)(v12 + 2), a2, a3, a4, a5);
  *(unsigned char *)(a6 + 16) = 1;
  unint64_t result = sub_100331FB8(v13, v13);
  v12[1] = result;
  return result;
}

void sub_10033224C(_Unwind_Exception *a1)
{
  sub_1003324D0(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_100332264(void *a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = (uint64_t)(a2 + 2);
  unint64_t v5 = sub_100331FB8((uint64_t)a1, (uint64_t)(a2 + 2));
  v2[1] = v5;
  uint64_t v6 = sub_100332388((uint64_t)a1, v5, v4);
  if (v6) {
    return v6;
  }
  sub_1002F4C78(a1, v2);
  return v2;
}

uint64_t sub_1003322D4(uint64_t a1, _OWORD *a2, long long *a3, long long *a4, _OWORD *a5)
{
  *(_OWORD *)a1 = *a2;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000DC48C((unsigned char *)(a1 + 16), *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v8 = *a3;
    *(void *)(a1 + 32) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 16) = v8;
  }
  uint64_t v9 = (unsigned char *)(a1 + 40);
  if (*((char *)a4 + 23) < 0)
  {
    sub_1000DC48C(v9, *(void **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v10 = *a4;
    *(void *)(a1 + 56) = *((void *)a4 + 2);
    *(_OWORD *)uint64_t v9 = v10;
  }
  *(_OWORD *)(a1 + 64) = *a5;
  return a1;
}

void sub_10033236C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100332388(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = a1;
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint8x8_t v7 = (uint8x8_t)vcnt_s8((int8x8_t)v4);
    v7.i16[0] = vaddlv_u8(v7);
    unint64_t v8 = v7.u32[0];
    if (v7.u32[0] > 1uLL) {
      uint64_t v9 = v4 <= a2 ? a2 % v4 : a2;
    }
    else {
      uint64_t v9 = (v4 - 1) & a2;
    }
    long long v10 = *(void **)(*(void *)a1 + 8 * v9);
    if (v10)
    {
      uint64_t v11 = (void *)*v10;
      if (*v10)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v12 == a2)
          {
            LOBYTE(a1) = sub_100332044(a1, (uint64_t)(v11 + 2), a3);
            if (a1) {
              return v11;
            }
          }
          else
          {
            if (v8 > 1)
            {
              if (v12 >= v4) {
                v12 %= v4;
              }
            }
            else
            {
              v12 &= v4 - 1;
            }
            if (v12 != v9) {
              break;
            }
          }
          uint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
    }
  }
  float v13 = (float)(unint64_t)(*(void *)(v3 + 24) + 1);
  float v14 = *(float *)(v3 + 32);
  if (!v4 || (float)(v14 * (float)v4) < v13)
  {
    BOOL v15 = 1;
    if (v4 >= 3) {
      BOOL v15 = (v4 & (v4 - 1)) != 0;
    }
    unint64_t v16 = v15 | (2 * v4);
    unint64_t v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17) {
      size_t v18 = v17;
    }
    else {
      size_t v18 = v16;
    }
    sub_100100330(v3, v18);
  }
  return 0;
}

void sub_1003324D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_100314F90((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

void *sub_100332528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = sub_100331FB8(a1, a2);
  unint64_t v8 = v7;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v9) {
        unint64_t v3 = v7 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v7;
    }
    unint64_t v12 = *(void **)(*(void *)a1 + 8 * v3);
    if (v12)
    {
      float v13 = (void *)*v12;
      if (*v12)
      {
        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v8)
          {
            LOBYTE(v7) = sub_100332044(v7, (uint64_t)(v13 + 2), a2);
            if (v7) {
              return v13;
            }
          }
          else
          {
            if (v11 > 1)
            {
              if (v14 >= v9) {
                v14 %= v9;
              }
            }
            else
            {
              v14 &= v9 - 1;
            }
            if (v14 != v3) {
              break;
            }
          }
          float v13 = (void *)*v13;
        }
        while (v13);
      }
    }
  }
  sub_100332794(a1, v8, a3, (uint64_t)v24);
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v9 || (float)(v16 * (float)v9) < v15)
  {
    BOOL v17 = 1;
    if (v9 >= 3) {
      BOOL v17 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v9);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    sub_100100330(a1, v20);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v21 = *(void **)(*(void *)a1 + 8 * v3);
  if (v21)
  {
    *(void *)v24[0] = *v21;
    void *v21 = v24[0];
  }
  else
  {
    *(void *)v24[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v24[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v24[0])
    {
      unint64_t v22 = *(void *)(*(void *)v24[0] + 8);
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v22 >= v9) {
          v22 %= v9;
        }
      }
      else
      {
        v22 &= v9 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v22) = v24[0];
    }
  }
  float v13 = (void *)v24[0];
  v24[0] = 0;
  ++*(void *)(a1 + 24);
  sub_1003324D0((uint64_t)v24, 0);
  return v13;
}

void sub_10033277C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003324D0((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

void sub_100332794(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x60uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *unint64_t v8 = 0;
  v8[1] = a2;
  sub_100315568(v7, (uint64_t)(v8 + 2), a3);
  *(unsigned char *)(a4 + 16) = 1;
}

void sub_1003327F4(_Unwind_Exception *a1)
{
  sub_1003324D0(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_10033280C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a2;
  if (a5 >= 1)
  {
    uint64_t v7 = a3;
    uint64_t v11 = a1[2];
    uint64_t v9 = (uint64_t)(a1 + 2);
    uint64_t v10 = v11;
    unint64_t v12 = *(void *)(v9 - 8);
    if ((uint64_t)(0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v11 - v12) >> 4)) >= a5)
    {
      uint64_t v20 = v12 - a2;
      if ((uint64_t)(0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v12 - a2) >> 4)) >= a5)
      {
        uint64_t v21 = a3 + 80 * a5;
      }
      else
      {
        uint64_t v21 = a3 + 16 * ((uint64_t)(v12 - a2) >> 4);
        a1[1] = sub_100332B60(v9, v21, a4, *(void *)(v9 - 8));
        if (v20 < 1) {
          return v5;
        }
      }
      sub_100332A00((uint64_t)a1, v5, v12, v5 + 80 * a5);
      sub_100332DD0((uint64_t)v27, v7, v21, v5);
    }
    else
    {
      uint64_t v13 = *a1;
      unint64_t v14 = a5 - 0x3333333333333333 * ((uint64_t)(v12 - *a1) >> 4);
      if (v14 > 0x333333333333333) {
        sub_1001D7FD4();
      }
      unint64_t v15 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - v13) >> 4);
      unint64_t v16 = 0xCCCCCCCCCCCCCCCDLL * ((v10 - v13) >> 4);
      uint64_t v17 = 2 * v16;
      if (2 * v16 <= v14) {
        uint64_t v17 = v14;
      }
      if (v16 >= 0x199999999999999) {
        unint64_t v18 = 0x333333333333333;
      }
      else {
        unint64_t v18 = v17;
      }
      uint64_t v30 = v9;
      if (v18) {
        unint64_t v19 = (char *)sub_100214C7C(v9, v18);
      }
      else {
        unint64_t v19 = 0;
      }
      unint64_t v22 = &v19[80 * v15];
      v27[0] = v19;
      v27[1] = v22;
      uint64_t v28 = v22;
      uint64_t v29 = &v19[80 * v18];
      uint64_t v23 = 5 * a5;
      int v24 = &v22[80 * a5];
      uint64_t v25 = 16 * v23;
      do
      {
        sub_100332C0C(v30, (uint64_t)v22, v7);
        v22 += 80;
        v7 += 80;
        v25 -= 80;
      }
      while (v25);
      uint64_t v28 = v24;
      uint64_t v5 = sub_100332AAC(a1, (uint64_t)v27, v5);
      sub_100214F00(v27);
    }
  }
  return v5;
}

void sub_1003329D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v12 + 8) = v13;
  _Unwind_Resume(exception_object);
}

uint64_t sub_100332A00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = a2 + v6 - a4;
  uint64_t v8 = v6;
  if (v7 < a3)
  {
    unint64_t v10 = a2 + v6 - a4;
    uint64_t v8 = *(void *)(a1 + 8);
    do
    {
      sub_100332C0C(a1 + 16, v8, v10);
      v10 += 80;
      v8 += 80;
    }
    while (v10 < a3);
  }
  *(void *)(a1 + 8) = v8;
  return sub_100332D18((uint64_t)&v12, a2, v7, v6);
}

void sub_100332AA4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100332AAC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = (uint64_t)(a1 + 2);
  sub_100214CC4((uint64_t)(a1 + 2), a3, a3, *a1, *a1, v6, v6);
  *(void *)(a2 + 8) = v8;
  *(void *)(a2 + 16) = sub_100332E6C(v7, a3, a1[1], *(__n128 **)(a2 + 16));
  uint64_t v9 = *a1;
  *a1 = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v9;
  uint64_t v10 = a1[1];
  a1[1] = *(void *)(a2 + 16);
  *(void *)(a2 + 16) = v10;
  uint64_t v11 = a1[2];
  a1[2] = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = v11;
  *(void *)a2 = *(void *)(a2 + 8);
  return v6;
}

uint64_t sub_100332B60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  void v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_100332C0C(a1, v4, v6);
      v6 += 80;
      uint64_t v4 = v12 + 80;
      v12 += 80;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  sub_100332C8C((uint64_t)v9);
  return v4;
}

void sub_100332BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

__n128 sub_100332C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a2 = *(void *)a3;
  long long v5 = *(_OWORD *)(a3 + 8);
  *(void *)(a2 + 24) = *(void *)(a3 + 24);
  *(_OWORD *)(a2 + 8) = v5;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 8) = 0;
  sub_10026D81C(a2 + 32, a3 + 32);
  __n128 result = *(__n128 *)(a3 + 64);
  *(__n128 *)(a2 + 64) = result;
  return result;
}

void sub_100332C70(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100332C8C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100332CC4((uint64_t *)a1);
  }
  return a1;
}

void sub_100332CC4(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)a1[1];
  uint64_t v1 = (uint64_t *)a1[2];
  uint64_t v3 = *v1;
  uint64_t v4 = *v2;
  if (*v1 != *v2)
  {
    uint64_t v5 = *a1;
    do
    {
      v3 -= 80;
      sub_100214EB0(v5, v3);
    }
    while (v3 != v4);
  }
}

uint64_t sub_100332D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = a3 + v7;
      uint64_t v9 = a4 + v7;
      *(void *)(a4 + v7 - 80) = *(void *)(a3 + v7 - 80);
      char v10 = (void **)(a4 + v7 - 72);
      if (*(char *)(a4 + v7 - 49) < 0) {
        operator delete(*v10);
      }
      long long v11 = *(_OWORD *)(v8 - 72);
      *(void *)(a4 + v7 - 56) = *(void *)(v8 - 56);
      *(_OWORD *)char v10 = v11;
      *(unsigned char *)(v8 - 49) = 0;
      *(unsigned char *)(v8 - 72) = 0;
      sub_10026DD4C(v9 - 48, v8 - 48);
      *(_OWORD *)(v9 - 16) = *(_OWORD *)(v8 - 16);
      v7 -= 80;
    }
    while (a3 + v7 != a2);
  }
  return a3;
}

uint64_t sub_100332DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      *(void *)a4 = *(void *)v5;
      uint64_t v7 = (void **)(a4 + 8);
      if (*(char *)(a4 + 31) < 0) {
        operator delete(*v7);
      }
      long long v8 = *(_OWORD *)(v5 + 8);
      *(void *)(a4 + 24) = *(void *)(v5 + 24);
      *(_OWORD *)uint64_t v7 = v8;
      *(unsigned char *)(v5 + 31) = 0;
      *(unsigned char *)(v5 + 8) = 0;
      sub_10026DD4C(a4 + 32, v5 + 32);
      *(_OWORD *)(a4 + 64) = *(_OWORD *)(v5 + 64);
      a4 += 80;
      v5 += 80;
    }
    while (v5 != a3);
    return a3;
  }
  return v5;
}

__n128 *sub_100332E6C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 *a4)
{
  uint64_t v4 = a4;
  long long v11 = a4;
  uint64_t v12 = a4;
  v9[0] = a1;
  v9[1] = &v11;
  void v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    uint64_t v6 = a2;
    do
    {
      sub_100214D90(a1, v4, v6);
      v6 += 80;
      uint64_t v4 = v12 + 5;
      v12 += 5;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  sub_100332C8C((uint64_t)v9);
  return v4;
}

void sub_100332F04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100332F18(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    sub_100314F4C(a1, *(void **)(a1 + 16));
    *(void *)(a1 + 16) = 0;
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      for (uint64_t i = 0; i != v2; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0;
    }
    *(void *)(a1 + 24) = 0;
  }
}

uint64_t sub_100332F70(uint64_t *a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  unint64_t v5 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 4);
  unint64_t v6 = v5 + 1;
  if (v5 + 1 > 0x333333333333333) {
    sub_1001D7FD4();
  }
  if (0x999999999999999ALL * ((a1[2] - *a1) >> 4) > v6) {
    unint64_t v6 = 0x999999999999999ALL * ((a1[2] - *a1) >> 4);
  }
  if (0xCCCCCCCCCCCCCCCDLL * ((a1[2] - *a1) >> 4) >= 0x199999999999999) {
    unint64_t v10 = 0x333333333333333;
  }
  else {
    unint64_t v10 = v6;
  }
  unint64_t v18 = a1 + 2;
  if (v10) {
    long long v11 = (char *)sub_100214C7C((uint64_t)(a1 + 2), v10);
  }
  else {
    long long v11 = 0;
  }
  unint64_t v14 = v11;
  unint64_t v15 = &v11[80 * v5];
  uint64_t v17 = &v11[80 * v10];
  sub_100333098((uint64_t)(a1 + 2), (uint64_t)v15, a2, a3, a4);
  unint64_t v16 = v15 + 80;
  sub_100214C04(a1, &v14);
  uint64_t v12 = a1[1];
  sub_100214F00(&v14);
  return v12;
}

void sub_100333084(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100214F00((void **)va);
  _Unwind_Resume(a1);
}

void sub_100333098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  if (*(char *)(a3 + 23) < 0)
  {
    sub_1000DC48C(__p, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a3;
    uint64_t v10 = *(void *)(a3 + 16);
  }
  CFAbsoluteTime Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  sub_1002122E0(a2, (long long *)__p, a4, a5, &Current_5);
  if (SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100333128(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100333144(uint64_t a1)
{
  unsigned int v2 = sub_10020F054(a1);
  if (sub_10033333C() > v2) {
    return 1;
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6D58);
  }
  uint64_t v3 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 136446210;
    long long v8 = "MicroLocationRapport";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%{public}s has been written to more than expected. Clearing up disk space. If this log is seen often that indicates a serious problem", buf, 0xCu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6D58);
    }
    unint64_t v6 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationDatabase::freeSpaceIfFull() [Table = CLMicroLocationRapportTable]", "%s\n", v6);
    if (v6 != (char *)buf) {
      free(v6);
    }
  }
  uint64_t result = sub_100207B0C(a1);
  if (result)
  {
    if (*(uint64_t *)(a1 + 160) <= 0) {
      uint64_t v5 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v5 = *(void *)(a1 + 160);
    }
    sub_10003CC68(a1 + 72, v5);
    return 1;
  }
  return result;
}

uint64_t sub_10033333C()
{
  sub_1000C7F88(&v5);
  unsigned int v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsRapportTableMaxRows", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1004D08E4(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  unsigned int v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v1) {
    return v2;
  }
  else {
    return 1000;
  }
}

void sub_1003333D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003333EC()
{
  sub_1000C7F88(&v5);
  unsigned int v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAdaptiveAnchorsNumDaysToKeepEnabled", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1004D08E4(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  unsigned int v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v1) {
    return v2;
  }
  else {
    return 10;
  }
}

void sub_100333480(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10033349C()
{
  sub_1000C7F88(&v5);
  unsigned int v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAdaptiveAnchorsNumValidDaysForPurging", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1004D08E4(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  unsigned int v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v1) {
    return v2;
  }
  else {
    return 49;
  }
}

void sub_100333530(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10033354C()
{
  sub_1000C7F88(&v5);
  unsigned int v4 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsAdaptiveAnchorsMaxEntriesInAppearanceMap", 0x8000100u, kCFAllocatorNull);
  int v1 = sub_1004D08E4(v5, (uint64_t)v0, &v4);
  CFRelease(v0);
  uint64_t v2 = v4;
  if (v6) {
    sub_1000DB0A0(v6);
  }
  if (v1) {
    return v2;
  }
  else {
    return 256;
  }
}

void sub_1003335E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003335FC(uint64_t a1)
{
  int v2 = sub_1003333EC();
  int v3 = sub_10033349C();
  uint64_t v4 = sub_10033354C();
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  *(_DWORD *)(a1 + 40) = v2;
  *(_DWORD *)(a1 + 44) = v3;
  *(void *)(a1 + 48) = v4;
  return a1;
}

uint64_t sub_100333654(uint64_t a1, uint64_t a2)
{
  sub_1003335FC(a1);
  uint64_t v4 = *(int *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = 8 * v4;
    unint64_t v6 = *(uint64_t **)(a2 + 8);
    do
    {
      uint64_t v7 = *v6;
      long long v8 = *(uint64_t ***)(*v6 + 24);
      int v9 = *((char *)v8 + 23);
      if (v9 < 0)
      {
        if (v8[1] != (uint64_t *)16)
        {
LABEL_9:
          if (qword_102419450 != -1) {
            dispatch_once(&qword_102419450, &stru_1022A6D78);
          }
          uint64_t v12 = qword_102419458;
          if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
          {
            *(_WORD *)long long buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "#Warning The protobuf Anchor Appearance struct does not have a valid device ID", buf, 2u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419450 != -1) {
              dispatch_once(&qword_102419450, &stru_1022A6D78);
            }
            uint64_t v13 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "CLMicroLocationAnchorAppearanceMap::CLMicroLocationAnchorAppearanceMap(const CLMicroLocationProto::anchorAppearancesVector &)", "%s\n", v13);
            if (v13 != (char *)buf) {
              free(v13);
            }
          }
          goto LABEL_14;
        }
        long long v8 = (uint64_t **)*v8;
      }
      else if (v9 != 16)
      {
        goto LABEL_9;
      }
      long long v18 = *(_OWORD *)v8;
      int v10 = *(_DWORD *)(v7 + 32);
      long long v11 = *(_OWORD *)(v7 + 8);
      *(_OWORD *)long long buf = v18;
      long long v16 = v11;
      int v17 = v10;
      sub_1001EF484(a1, buf, (uint64_t)buf);
LABEL_14:
      ++v6;
      v5 -= 8;
    }
    while (v5);
  }
  return a1;
}

void sub_100333880(_Unwind_Exception *a1)
{
  sub_1000D7D80(v1);
  _Unwind_Resume(a1);
}

void sub_10033389C(uint64_t a1@<X0>, int *a2@<X8>)
{
  sub_10023D714((uint64_t)a2);
  for (uint64_t i = *(uint64_t **)(a1 + 16); i; uint64_t i = (uint64_t *)*i)
  {
    int v5 = a2[5];
    uint64_t v6 = a2[4];
    if ((int)v6 >= v5)
    {
      if (v5 == a2[6])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a2 + 2), v5 + 1);
        int v5 = a2[5];
      }
      a2[5] = v5 + 1;
      sub_1003361C8();
    }
    uint64_t v7 = *((void *)a2 + 1);
    a2[4] = v6 + 1;
    uint64_t v8 = *(void *)(v7 + 8 * v6);
    if (v8)
    {
      sub_10023D6E0((uint64_t)buf);
      long long v14 = *((_OWORD *)i + 2);
      int v9 = *((_DWORD *)i + 12);
      v16 |= 7u;
      int v15 = v9;
      sub_100247D48(v8, (uint64_t)buf);
      sub_100247744((wireless_diagnostics::google::protobuf::MessageLite *)buf);
      *(_DWORD *)(v8 + 40) |= 8u;
      int v10 = *(std::string **)(v8 + 24);
      if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::assign(v10, (const std::string::value_type *)i + 16, 0x10uLL);
    }
    else
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6D78);
      }
      long long v11 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)long long buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Got nullptr from CLMicroLocationProto add_anchorappearances", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A6D78);
        }
        uint64_t v12 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "CLMicroLocationProto::anchorAppearancesVector CLMicroLocationAnchorAppearanceMap::toProtobuf() const", "%s\n", v12);
        if (v12 != (char *)buf) {
          free(v12);
        }
      }
    }
  }
}

void sub_100333B5C(_Unwind_Exception *a1)
{
  sub_100247FA8(v1);
  _Unwind_Resume(a1);
}

double *sub_100333B88(void *a1, void *a2, double a3, double a4)
{
  uint64_t result = (double *)sub_1001EFDE4(a1, a2);
  if (result)
  {
    result[5] = a4;
    *((_DWORD *)result + 12) = 0;
  }
  else
  {
    long long v9 = *(_OWORD *)a2;
    double v10 = a3;
    double v11 = a4;
    int v12 = 0;
    return (double *)sub_1001EF484((uint64_t)a1, &v9, (uint64_t)&v9);
  }
  return result;
}

void sub_100333C24(uint64_t a1, void *a2, int a3, double a4, double a5)
{
  uint64_t v9 = *(void *)(a1 + 24);
  if (a3)
  {
    for (uint64_t i = *(void **)(a1 + 16); i; uint64_t i = (void *)*i)
    {
      if (!sub_100222004(a2, i + 2))
      {
        std::string __p = i + 2;
        double v11 = sub_1003363FC(a1, i + 2, (uint64_t)&unk_101D0B290, (long long **)&__p);
        ++*((_DWORD *)v11 + 12);
      }
    }
  }
  for (j = (void *)a2[2]; j; j = (void *)*j)
    sub_100333B88((void *)a1, j + 2, a4, a5);
  uint64_t v13 = *(void *)(a1 + 16);
  unint64_t v14 = *(void *)(a1 + 24);
  unint64_t v15 = v14;
  if (v13)
  {
    do
    {
      if (*(_DWORD *)(v13 + 48) >= *(_DWORD *)(a1 + 44)) {
        uint64_t v13 = sub_10017FB70((void *)a1, (uint64_t *)v13);
      }
      else {
        uint64_t v13 = *(void *)v13;
      }
    }
    while (v13);
    unint64_t v15 = *(void *)(a1 + 24);
  }
  unint64_t v16 = *(void *)(a1 + 48);
  uint64_t v17 = v15 - v16;
  if (v15 > v16 && v16 != 0)
  {
    std::string __p = 0;
    *(void *)std::string v41 = 0;
    *(void *)&v41[8] = 0;
    sub_100288630(&__p, v15);
    unint64_t v19 = *(void **)(a1 + 16);
    if (v19)
    {
      uint64_t v20 = *(char **)v41;
      do
      {
        if ((unint64_t)v20 >= *(void *)&v41[8])
        {
          unint64_t v22 = (char *)__p;
          uint64_t v23 = (v20 - (unsigned char *)__p) >> 3;
          unint64_t v24 = v23 + 1;
          if ((unint64_t)(v23 + 1) >> 61) {
            sub_1001D7FD4();
          }
          uint64_t v25 = *(void *)&v41[8] - (void)__p;
          if ((uint64_t)(*(void *)&v41[8] - (void)__p) >> 2 > v24) {
            unint64_t v24 = v25 >> 2;
          }
          if ((unint64_t)v25 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v26 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v26 = v24;
          }
          if (v26)
          {
            char v27 = (char *)sub_1000DA54C((uint64_t)&v41[8], v26);
            unint64_t v22 = (char *)__p;
            uint64_t v20 = *(char **)v41;
          }
          else
          {
            char v27 = 0;
          }
          uint64_t v28 = &v27[8 * v23];
          *(void *)uint64_t v28 = v19[5];
          uint64_t v21 = v28 + 8;
          while (v20 != v22)
          {
            uint64_t v29 = *((void *)v20 - 1);
            v20 -= 8;
            *((void *)v28 - 1) = v29;
            v28 -= 8;
          }
          std::string __p = v28;
          *(void *)std::string v41 = v21;
          *(void *)&v41[8] = &v27[8 * v26];
          if (v22) {
            operator delete(v22);
          }
        }
        else
        {
          *(void *)uint64_t v20 = v19[5];
          uint64_t v21 = v20 + 8;
        }
        *(void *)std::string v41 = v21;
        unint64_t v19 = (void *)*v19;
        uint64_t v20 = v21;
      }
      while (v19);
    }
    else
    {
      uint64_t v21 = *(char **)v41;
    }
    unint64_t v30 = 126 - 2 * __clz((v21 - (unsigned char *)__p) >> 3);
    if (v21 == __p) {
      uint64_t v31 = 0;
    }
    else {
      uint64_t v31 = v30;
    }
    sub_100336660((uint64_t)__p, (double *)v21, (uint64_t)&v39, v31, 1);
    __int16 v32 = __p;
    uint64_t v33 = *(void *)(a1 + 16);
    if (!v33 || !v17) {
      goto LABEL_54;
    }
    double v34 = *((double *)__p + *(void *)(a1 + 48) - 1);
    do
    {
      if (v34 < *(double *)(v33 + 40))
      {
        uint64_t v33 = *(void *)v33;
      }
      else
      {
        uint64_t v33 = sub_10017FB70((void *)a1, (uint64_t *)v33);
        --v17;
      }
      if (v33) {
        BOOL v35 = v17 == 0;
      }
      else {
        BOOL v35 = 1;
      }
    }
    while (!v35);
    __int16 v32 = __p;
    if (__p)
    {
LABEL_54:
      *(void *)std::string v41 = v32;
      operator delete(v32);
    }
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6D78);
  }
  __int16 v36 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v37 = a2[3];
    uint64_t v38 = *(void *)(a1 + 24);
    std::string __p = (void *)68290307;
    *(_WORD *)std::string v41 = 2082;
    *(void *)&v41[2] = "";
    *(_WORD *)&v41[10] = 2049;
    *(void *)&v41[12] = v9;
    __int16 v42 = 2049;
    uint64_t v43 = v37;
    __int16 v44 = 2049;
    unint64_t v45 = v14;
    __int16 v46 = 2049;
    unint64_t v47 = v15;
    __int16 v48 = 2049;
    uint64_t v49 = v38;
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"updateSeenAnchors\", \"Anchors map initial size\":%{private}lu, \"Received daily IDS ID set size\":%{private}lu, \"Size with new anchors\":%{private}lu, \"Size after purging\":%{private}lu, \"Size after max entries limit\":%{private}lu}", (uint8_t *)&__p, 0x44u);
  }
}

void sub_100333FB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100333FE4(uint64_t a1, uint64_t a2, double *a3)
{
  if ((*(_DWORD *)(a2 + 8) - 5) > 1) {
    return 1;
  }
  if (*(_DWORD *)(a2 + 40) != 1) {
    return 0;
  }
  long long v9 = *(_OWORD *)(a2 + 16);
  uint64_t result = (uint64_t)sub_100222004((void *)a1, &v9);
  if (!result) {
    return result;
  }
  if ((double v7 = *(double *)(result + 32), *(double *)a2 >= v7)
    && ((double v8 = *(double *)(result + 40), v8 >= *(double *)a2) || *(_DWORD *)(result + 48) < *(_DWORD *)(a1 + 40))
    && *a3 >= v7
    && (v8 >= *a3 || *(_DWORD *)(result + 48) < *(_DWORD *)(a1 + 40)))
  {
    return 1;
  }
  else
  {
    return 0;
  }
}

BOOL sub_1003340D8(uint64_t a1, uint64_t a2)
{
  v13[0] = off_1022A6DC0;
  void v13[3] = v13;
  v12[0] = off_1022A6E50;
  uint64_t v12[3] = v12;
  v11[0] = off_1022A6EE0;
  v11[3] = v11;
  sub_10033759C((uint64_t)v14, (uint64_t)v13, (uint64_t)v12, (uint64_t)v11);
  sub_100337518(v11);
  sub_1003373C4(v12);
  sub_100337274(v13);
  uint64_t v4 = *(unsigned int *)(a2 + 40);
  if (v4 == -1) {
    sub_1003217E4();
  }
  long long v9 = v14;
  v10[0] = ((uint64_t (*)(void **, uint64_t))off_1022A6D98[v4])(&v9, a2 + 16);
  v10[1] = v5;
  uint64_t v6 = (double *)sub_100222004((void *)a1, v10);
  BOOL v7 = v6 && *(double *)a2 >= v6[4] && (v6[5] >= *(double *)a2 || *((_DWORD *)v6 + 12) < *(_DWORD *)(a1 + 40));
  sub_100337518(v16);
  sub_1003373C4(v15);
  sub_100337274(v14);
  return v7;
}

void sub_100334270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_1003342A8((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_1003342A8(void *a1)
{
  sub_100337518(a1 + 8);
  sub_1003373C4(a1 + 4);

  return sub_100337274(a1);
}

void *sub_1003342EC(void *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    uint64_t v4 = (uint64_t)result;
    do
    {
      int v5 = *(_DWORD *)(v2 + 104);
      if ((v5 & 0x40) != 0)
      {
        uint64_t v8 = *(void *)(v2 + 80);
        if (!v8) {
          uint64_t v8 = *(void *)(qword_102489958 + 48);
        }
        if ((*(unsigned char *)(v8 + 64) & 0x80) == 0) {
          goto LABEL_15;
        }
        BOOL v7 = *(uint64_t ***)(v8 + 48);
      }
      else
      {
        if ((v5 & 0x80) == 0) {
          goto LABEL_15;
        }
        uint64_t v6 = *(void *)(v2 + 88);
        if (!v6) {
          uint64_t v6 = *(void *)(qword_102489958 + 56);
        }
        if ((*(unsigned char *)(v6 + 56) & 0x10) == 0) {
          goto LABEL_15;
        }
        BOOL v7 = *(uint64_t ***)(v6 + 32);
      }
      uint64_t result = sub_1002E594C(v7, &v9);
      if (v10) {
        uint64_t result = sub_1001EFB90(v4, &v9, &v9);
      }
LABEL_15:
      v2 += 120;
    }
    while (v2 != v3);
  }
  return result;
}

uint64_t sub_1003343D0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  uint64_t v3 = *(int *)(a2 + 16);
  if (v3)
  {
    uint64_t v4 = *(uint64_t **)(a2 + 8);
    int v5 = &v4[v3];
    do
    {
      uint64_t v6 = *v4;
      sub_1002E594C(*(uint64_t ***)(*v4 + 32), &v20);
      if (v21)
      {
        memset(buf, 0, sizeof(buf));
        int v19 = 1065353216;
        uint64_t v7 = *(int *)(v6 + 16);
        if (v7)
        {
          uint64_t v8 = *(uint64_t **)(v6 + 8);
          uint64_t v9 = 8 * v7;
          do
          {
            uint64_t v10 = *v8;
            double v11 = *(long long **)(*v8 + 24);
            if (*((char *)v11 + 23) < 0)
            {
              sub_1000DC48C(__p, *(void **)v11, *((void *)v11 + 1));
            }
            else
            {
              long long v12 = *v11;
              uint64_t v17 = *((void *)v11 + 2);
              *(_OWORD *)std::string __p = v12;
            }
            __n128 v15 = 0uLL;
            __n128 v15 = *(__n128 *)(v10 + 8);
            sub_1003377DC((uint64_t)buf, (unsigned __int8 *)__p, (uint64_t)__p, &v15);
            if (SHIBYTE(v17) < 0) {
              operator delete(__p[0]);
            }
            ++v8;
            v9 -= 8;
          }
          while (v9);
        }
        sub_100337B1C(a1, &v20, &v20, (uint64_t *)buf);
        sub_1002220F0((uint64_t)buf);
      }
      else
      {
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A6D78);
        }
        uint64_t v13 = qword_102419458;
        if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)long long buf = 68289026;
          *(_DWORD *)&uint8_t buf[4] = 0;
          *(_WORD *)&uint8_t buf[8] = 2082;
          *(void *)&buf[10] = "";
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#Warning, the protobuf ClusterAnchorValueStatistics struct doesn not have a valid cluster UUID\"}", buf, 0x12u);
        }
      }
      ++v4;
    }
    while (v4 != v5);
  }
  return a1;
}

void sub_1003345CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  sub_1002220F0((uint64_t)&a20);
  sub_100289AB8(v20);
  _Unwind_Resume(a1);
}

uint64_t sub_100334610(uint64_t a1, uint64_t a2, void *a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (sub_100278D98(a2))
  {
    long long v101 = 0u;
    long long v102 = 0u;
    int v103 = 1065353216;
    uint64_t v85 = a2;
    int v5 = *(void **)(a2 + 272);
    if (v5)
    {
      uint64_t v6 = 0;
      do
      {
        long long v98 = 0uLL;
        *(void *)&long long v99 = 0;
        uint64_t v8 = (void *)v5[4];
        uint64_t v7 = (void *)v5[5];
        while (v8 != v7)
        {
          sub_100238708(a3, v8, buf);
          if (v113)
          {
            uint64_t v9 = *((void *)&v98 + 1);
            if (*((void *)&v98 + 1) >= (unint64_t)v99)
            {
              uint64_t v10 = sub_1001F3358((uint64_t *)&v98, (uint64_t)buf);
            }
            else
            {
              sub_1001F3468((uint64_t)&v99, *((uint64_t *)&v98 + 1), (uint64_t)buf);
              uint64_t v10 = v9 + 192;
            }
            *((void *)&v98 + 1) = v10;
            ++v6;
          }
          sub_100216190((uint64_t)buf);
          v8 += 2;
        }
        *(void *)&v96[0] = v5 + 2;
        double v11 = (long long *)(sub_1001F3080((uint64_t)&v101, v5 + 2, (uint64_t)&unk_101D0B290, (_OWORD **)v96) + 4);
        if (v11 != &v98) {
          sub_100337DC4((uint64_t)v11, v98, *((uint64_t *)&v98 + 1), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v98 + 1) - v98) >> 6));
        }
        *(void *)long long buf = &v98;
        sub_1001F2FE8((void ***)buf);
        int v5 = (void *)*v5;
      }
      while (v5);
    }
    else
    {
      uint64_t v6 = 0;
    }
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6D78);
    }
    uint64_t v13 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = *(void *)(v85 + 280);
      *(_DWORD *)long long buf = 68289538;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v105 = 2082;
      int v106 = "";
      __int16 v107 = 2050;
      *(void *)int v108 = v14;
      *(_WORD *)&v108[8] = 2050;
      *(void *)&v108[10] = v6;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationAnchorValueStatisticsMap, start analysis\", \"Num Clusters\":%{public}lu, \"Num Found Fingerprints\":%{public}lu}", buf, 0x26u);
      uint64_t v15 = qword_102419450;
    }
    else
    {
      uint64_t v15 = -1;
    }
    long long v98 = 0u;
    long long v99 = 0u;
    int v100 = 1065353216;
    memset(v96, 0, sizeof(v96));
    int v97 = 1065353216;
    long long v93 = 0u;
    long long v94 = 0u;
    int v95 = 1065353216;
    if (v15 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6D78);
    }
    unint64_t v16 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v17 = *(void *)(v85 + 40);
      *(_DWORD *)long long buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v105 = 2082;
      int v106 = "";
      __int16 v107 = 2050;
      *(void *)int v108 = v17;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationAnchorValueStatisticsMap, anchorAppearanceMap\", \"Size\":%{public}lu}", buf, 0x1Cu);
    }
    long long v18 = (void *)v102;
    if ((void)v102)
    {
      do
      {
        uint64_t v20 = v18[4];
        uint64_t v19 = v18[5];
        std::string v83 = v18;
        uint64_t v84 = v19;
        while (v20 != v19)
        {
          for (uint64_t i = *(uint64_t **)(v20 + 16); i; uint64_t i = (uint64_t *)*i)
          {
            BOOL v22 = sub_1003340D8(v85 + 16, (uint64_t)(i + 2));
            if (v22) {
              sub_1001F043C((uint64_t)&v93, (uint64_t)(i + 2), (_OWORD *)i + 1);
            }
            if (qword_102419450 != -1) {
              dispatch_once(&qword_102419450, &stru_1022A6D78);
            }
            uint64_t v23 = qword_102419458;
            if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
            {
              sub_10031EC70((uint64_t)(i + 2));
              unint64_t v24 = __p;
              if (v92 < 0) {
                unint64_t v24 = (void **)__p[0];
              }
              uint64_t v25 = *((unsigned int *)i + 6);
              double v26 = *((float *)i + 7);
              *(_DWORD *)long long buf = 68290050;
              *(_DWORD *)&uint8_t buf[4] = 0;
              __int16 v105 = 2082;
              int v106 = "";
              __int16 v107 = 1026;
              *(_DWORD *)int v108 = v22;
              *(_WORD *)&v108[4] = 2082;
              *(void *)&v108[6] = v24;
              *(_WORD *)&v108[14] = 2050;
              *(void *)&v108[16] = v25;
              __int16 v109 = 2050;
              double v110 = v26;
              _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"measurement\", \"Inserted to set\":%{public}hhd, \"DeviceId\":%{public, location:escape_only}s, \"DataType\":%{public}lu, \"Measured Value\":\"%{public}.3f\"}", buf, 0x36u);
              if (v92 < 0) {
                operator delete(__p[0]);
              }
            }
          }
          v20 += 192;
          uint64_t v19 = v84;
        }
        long long v18 = (void *)*v83;
      }
      while (*v83);
    }
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6D78);
    }
    char v27 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 68289282;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v105 = 2082;
      int v106 = "";
      __int16 v107 = 2050;
      *(void *)int v108 = *((void *)&v94 + 1);
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"CLMicroLocationAnchorValueStatisticsMap, measurement set\", \"Size\":%{public}lu}", buf, 0x1Cu);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6D78);
      }
    }
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
    {
      for (j = (uint64_t *)v94; j; j = (uint64_t *)*j)
      {
        int v29 = *((_DWORD *)j + 6);
        sub_10031EC70((uint64_t)(j + 2));
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A6D78);
        }
        unint64_t v30 = qword_102419458;
        if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
        {
          if (v92 >= 0) {
            uint64_t v31 = __p;
          }
          else {
            uint64_t v31 = (void **)__p[0];
          }
          *(_DWORD *)long long buf = 68289539;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v105 = 2082;
          int v106 = "";
          __int16 v107 = 1026;
          *(_DWORD *)int v108 = v29;
          *(_WORD *)&v108[4] = 2081;
          *(void *)&v108[6] = v31;
          _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "{\"msg%{public}.0s\":\"unique valid anchor\", \"dataType\":%{public}d, \"deviceId\":%{private, location:escape_only}s}", buf, 0x22u);
        }
        if (v92 < 0) {
          operator delete(__p[0]);
        }
      }
    }
    sub_1003355B4();
    double v33 = v32;
    sub_100335670();
    BOOL v35 = (void *)v102;
    if ((void)v102)
    {
      double v36 = v34;
      while (1)
      {
        uint64_t v37 = (void *)v35[4];
        std::string v81 = v35;
        std::string v82 = (void *)v35[5];
        if (v37 != v82) {
          break;
        }
LABEL_127:
        BOOL v35 = (void *)*v81;
        if (!*v81) {
          goto LABEL_128;
        }
      }
      uint64_t v38 = v35 + 2;
      while (1)
      {
        char v39 = (uint64_t *)v94;
        if ((void)v94) {
          break;
        }
LABEL_126:
        v37 += 24;
        if (v37 == v82) {
          goto LABEL_127;
        }
      }
      uint64_t v86 = (uint64_t)(v37 + 5);
      while (1)
      {
        int v40 = *((_DWORD *)v39 + 6);
        sub_10031EC70((uint64_t)(v39 + 2));
        std::string v41 = (float *)sub_1002D3074(v37, (uint64_t)(v39 + 2));
        __int16 v42 = v41;
        if (v41)
        {
          if (v40 == 6)
          {
            float v52 = v41[7];
            *(void *)long long buf = v38;
            uint64_t v53 = sub_1003380AC((uint64_t)v96, v38, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
            *(void *)long long buf = __p;
            std::string v54 = sub_100338350((uint64_t)(v53 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101D0B290, (long long **)buf);
            *((double *)v54 + 5) = *((double *)v54 + 5) + v52;
            *(void *)long long buf = v38;
            std::string::size_type v55 = sub_1003380AC((uint64_t)v96, v38, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
            *(void *)long long buf = __p;
            unint64_t v47 = sub_100338350((uint64_t)(v55 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101D0B290, (long long **)buf);
LABEL_77:
            ++*((_DWORD *)v47 + 12);
LABEL_85:
            if (qword_102419450 != -1) {
              dispatch_once(&qword_102419450, &stru_1022A6D78);
            }
          }
          else
          {
            if (v40 == 5)
            {
              float v43 = v41[7];
              *(void *)long long buf = v38;
              __int16 v44 = sub_1003380AC((uint64_t)&v98, v38, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
              *(void *)long long buf = __p;
              unint64_t v45 = sub_100338350((uint64_t)(v44 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101D0B290, (long long **)buf);
              *((double *)v45 + 5) = *((double *)v45 + 5) + v43;
              *(void *)long long buf = v38;
              __int16 v46 = sub_1003380AC((uint64_t)&v98, v38, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
              *(void *)long long buf = __p;
              unint64_t v47 = sub_100338350((uint64_t)(v46 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101D0B290, (long long **)buf);
              goto LABEL_77;
            }
            if (qword_102419450 != -1) {
              dispatch_once(&qword_102419450, &stru_1022A6D78);
            }
            std::string v56 = qword_102419458;
            if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
            {
              *(_DWORD *)long long buf = 68289282;
              *(_DWORD *)&uint8_t buf[4] = 0;
              __int16 v105 = 2082;
              int v106 = "";
              __int16 v107 = 1026;
              *(_DWORD *)int v108 = v40;
              _os_log_impl((void *)&_mh_execute_header, v56, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"calculatePerClusterPerAnchorValueStatistics, received unhandled data type\", \"data type\":%{public}d}", buf, 0x18u);
              if (qword_102419450 != -1) {
                dispatch_once(&qword_102419450, &stru_1022A6D78);
              }
            }
            long long v57 = qword_102419458;
            if (os_signpost_enabled((os_log_t)qword_102419458))
            {
              *(_DWORD *)long long buf = 68289282;
              *(_DWORD *)&uint8_t buf[4] = 0;
              __int16 v105 = 2082;
              int v106 = "";
              __int16 v107 = 1026;
              *(_DWORD *)int v108 = v40;
              _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v57, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "calculatePerClusterPerAnchorValueStatistics, received unhandled data type", "{\"msg%{public}.0s\":\"calculatePerClusterPerAnchorValueStatistics, received unhandled data type\", \"data type\":%{public}d}", buf, 0x18u);
              goto LABEL_85;
            }
          }
          uint64_t v58 = qword_102419458;
          if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
          {
            sub_1002E8808((uint64_t)v38, (uint64_t)v89);
            int v59 = v90;
            int64_t v60 = (void **)v89[0];
            sub_1002E8808(v86, (uint64_t)v87);
            uint64_t v61 = v89;
            if (v59 < 0) {
              uint64_t v61 = v60;
            }
            unsigned int v62 = v87;
            if (v88 < 0) {
              unsigned int v62 = (void **)v87[0];
            }
            if (v92 >= 0) {
              long long v63 = __p;
            }
            else {
              long long v63 = (void **)__p[0];
            }
            double v64 = v42[7];
            *(_DWORD *)long long buf = 68290307;
            *(_DWORD *)&uint8_t buf[4] = 0;
            __int16 v105 = 2082;
            int v106 = "";
            __int16 v107 = 2081;
            *(void *)int v108 = v61;
            *(_WORD *)&v108[8] = 2082;
            *(void *)&v108[10] = v62;
            *(_WORD *)&v108[18] = 1026;
            *(_DWORD *)&v108[20] = v40;
            __int16 v109 = 2081;
            double v110 = *(double *)&v63;
            __int16 v111 = 2049;
            double v112 = v64;
            std::string::size_type v65 = v58;
            uint64_t v66 = "{\"msg%{public}.0s\":\"anchor statistics\", \"clusterId\":%{private, location:escape_only}s, \"fingerp"
                  "rint UUID\":%{public, location:escape_only}s, \"dataType\":%{public}d, \"deviceId\":%{private, locatio"
                  "n:escape_only}s, \"measured value\":\"%{private}f\"}";
LABEL_119:
            _os_log_impl((void *)&_mh_execute_header, v65, OS_LOG_TYPE_DEBUG, v66, buf, 0x40u);
            if (v88 < 0) {
              operator delete(v87[0]);
            }
            if (v90 < 0) {
              operator delete(v89[0]);
            }
            goto LABEL_123;
          }
          goto LABEL_123;
        }
        if (v40 == 5) {
          break;
        }
        if (v40 == 6)
        {
          *(void *)long long buf = v38;
          __int16 v48 = sub_1003380AC((uint64_t)v96, v38, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
          *(void *)long long buf = __p;
          uint64_t v49 = sub_100338350((uint64_t)(v48 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101D0B290, (long long **)buf);
          *((double *)v49 + 5) = v36 + *((double *)v49 + 5);
          *(void *)long long buf = v38;
          std::string v50 = sub_1003380AC((uint64_t)v96, v38, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
          *(void *)long long buf = __p;
          std::string v51 = sub_100338350((uint64_t)(v50 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101D0B290, (long long **)buf);
LABEL_97:
          ++*((_DWORD *)v51 + 12);
          goto LABEL_105;
        }
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A6D78);
        }
        std::string v70 = qword_102419458;
        if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 68289282;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v105 = 2082;
          int v106 = "";
          __int16 v107 = 1026;
          *(_DWORD *)int v108 = v40;
          _os_log_impl((void *)&_mh_execute_header, v70, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"calculatePerClusterPerAnchorValueStatistics (sentinel), received unhandled data type\", \"data type\":%{public}d}", buf, 0x18u);
          if (qword_102419450 != -1) {
            dispatch_once(&qword_102419450, &stru_1022A6D78);
          }
        }
        std::string v71 = qword_102419458;
        if (os_signpost_enabled((os_log_t)qword_102419458))
        {
          *(_DWORD *)long long buf = 68289282;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v105 = 2082;
          int v106 = "";
          __int16 v107 = 1026;
          *(_DWORD *)int v108 = v40;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v71, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "calculatePerClusterPerAnchorValueStatistics (sentinel), received unhandled data type", "{\"msg%{public}.0s\":\"calculatePerClusterPerAnchorValueStatistics (sentinel), received unhandled data type\", \"data type\":%{public}d}", buf, 0x18u);
LABEL_105:
          if (qword_102419450 != -1) {
            dispatch_once(&qword_102419450, &stru_1022A6D78);
          }
        }
        uint64_t v72 = qword_102419458;
        if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
        {
          sub_1002E8808((uint64_t)v38, (uint64_t)v89);
          int v73 = v90;
          std::string v74 = (void **)v89[0];
          sub_1002E8808(v86, (uint64_t)v87);
          std::string v75 = v89;
          if (v73 < 0) {
            std::string v75 = v74;
          }
          std::string v76 = v87;
          if (v88 < 0) {
            std::string v76 = (void **)v87[0];
          }
          if (v92 >= 0) {
            std::string v77 = __p;
          }
          else {
            std::string v77 = (void **)__p[0];
          }
          if (v40 == 5) {
            double v78 = v33;
          }
          else {
            double v78 = v36;
          }
          *(_DWORD *)long long buf = 68290307;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v105 = 2082;
          int v106 = "";
          __int16 v107 = 2081;
          *(void *)int v108 = v75;
          *(_WORD *)&v108[8] = 2082;
          *(void *)&v108[10] = v76;
          *(_WORD *)&v108[18] = 1026;
          *(_DWORD *)&v108[20] = v40;
          __int16 v109 = 2081;
          double v110 = *(double *)&v77;
          __int16 v111 = 2049;
          double v112 = v78;
          std::string::size_type v65 = v72;
          uint64_t v66 = "{\"msg%{public}.0s\":\"anchor statistics\", \"clusterId\":%{private, location:escape_only}s, \"fingerpri"
                "nt UUID\":%{public, location:escape_only}s, \"dataType\":%{public}d, \"deviceId\":%{private, location:es"
                "cape_only}s, \"setinel value\":\"%{private}f\"}";
          goto LABEL_119;
        }
LABEL_123:
        if (v92 < 0) {
          operator delete(__p[0]);
        }
        char v39 = (uint64_t *)*v39;
        if (!v39) {
          goto LABEL_126;
        }
      }
      *(void *)long long buf = v38;
      unint64_t v67 = sub_1003380AC((uint64_t)&v98, v38, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
      *(void *)long long buf = __p;
      char v68 = sub_100338350((uint64_t)(v67 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101D0B290, (long long **)buf);
      *((double *)v68 + 5) = v33 + *((double *)v68 + 5);
      *(void *)long long buf = v38;
      std::string v69 = sub_1003380AC((uint64_t)&v98, v38, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
      *(void *)long long buf = __p;
      std::string v51 = sub_100338350((uint64_t)(v69 + 4), (unsigned __int8 *)__p, (uint64_t)&unk_101D0B290, (long long **)buf);
      goto LABEL_97;
    }
LABEL_128:
    sub_100335728(a1, (uint64_t)&v98, 5);
    sub_100335728(a1, (uint64_t)v96, 6);
    sub_1001F00CC((uint64_t)&v93);
    sub_100289AB8((uint64_t)v96);
    sub_100289AB8((uint64_t)&v98);
    sub_1001F2F58((uint64_t)&v101);
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6D78);
    }
    long long v12 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)long long buf = 68289026;
      *(_DWORD *)&uint8_t buf[4] = 0;
      __int16 v105 = 2082;
      int v106 = "";
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"most recent model is not valid, will not calculate per cluster per anchor statistics\"}", buf, 0x12u);
    }
  }
  return a1;
}

void sub_1003354F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
}

void sub_1003355B4()
{
  sub_1000C7F88(&v2);
  uint64_t v1 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsClusterAnchorValueStatisticsBleRssiSentinelValue", 0x8000100u, kCFAllocatorNull);
  sub_1000A6A10(v2, (uint64_t)v0, &v1);
  CFRelease(v0);
  if (v3) {
    sub_1000DB0A0(v3);
  }
}

void sub_100335654(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_100335670()
{
  sub_1000C7F88(&v2);
  uint64_t v1 = 0;
  CFStringRef v0 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsClusterAnchorValueStatisticsUwbRangeSentinelValue", 0x8000100u, kCFAllocatorNull);
  sub_1000A6A10(v2, (uint64_t)v0, &v1);
  CFRelease(v0);
  if (v3) {
    sub_1000DB0A0(v3);
  }
}

void sub_10033570C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    sub_1000DB0A0(a12);
  }
  _Unwind_Resume(exception_object);
}

void sub_100335728(uint64_t a1, uint64_t a2, int a3)
{
  for (uint64_t i = *(void **)(a2 + 16); i; uint64_t i = (void *)*i)
  {
    for (j = (uint64_t *)i[6]; j; j = (uint64_t *)*j)
    {
      double v7 = *((double *)j + 5);
      int v8 = *((_DWORD *)j + 12);
      if (a3 == 6)
      {
        double v15 = v7 / (double)v8;
        *(void *)long long buf = i + 2;
        unint64_t v16 = sub_1003380AC(a1, i + 2, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
        *(void *)long long buf = j + 2;
        *((double *)sub_100338698((uint64_t)(v16 + 4), (unsigned __int8 *)j + 16, (uint64_t)&unk_101D0B290, (long long **)buf)+ 6) = v15;
        *(void *)long long buf = i + 2;
        uint64_t v17 = sub_1003380AC(a1, i + 2, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
        *(void *)long long buf = j + 2;
        if (*((double *)sub_100338698((uint64_t)(v17 + 4), (unsigned __int8 *)j + 16, (uint64_t)&unk_101D0B290, (long long **)buf)+ 5) == 0.0)
        {
          sub_1003355B4();
          uint64_t v19 = v18;
          *(void *)long long buf = i + 2;
          uint64_t v20 = sub_1003380AC(a1, i + 2, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
          *(void *)long long buf = j + 2;
          *((void *)sub_100338698((uint64_t)(v20 + 4), (unsigned __int8 *)j + 16, (uint64_t)&unk_101D0B290, (long long **)buf)+ 5) = v19;
        }
      }
      else if (a3 == 5)
      {
        double v9 = v7 / (double)v8;
        *(void *)long long buf = i + 2;
        uint64_t v10 = sub_1003380AC(a1, i + 2, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
        *(void *)long long buf = j + 2;
        *((double *)sub_100338698((uint64_t)(v10 + 4), (unsigned __int8 *)j + 16, (uint64_t)&unk_101D0B290, (long long **)buf)+ 5) = v9;
        *(void *)long long buf = i + 2;
        double v11 = sub_1003380AC(a1, i + 2, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
        *(void *)long long buf = j + 2;
        if (*((double *)sub_100338698((uint64_t)(v11 + 4), (unsigned __int8 *)j + 16, (uint64_t)&unk_101D0B290, (long long **)buf)+ 6) == 0.0)
        {
          sub_100335670();
          uint64_t v13 = v12;
          *(void *)long long buf = i + 2;
          uint64_t v14 = sub_1003380AC(a1, i + 2, (uint64_t)&unk_101D0B290, (_OWORD **)buf);
          *(void *)long long buf = j + 2;
          *((void *)sub_100338698((uint64_t)(v14 + 4), (unsigned __int8 *)j + 16, (uint64_t)&unk_101D0B290, (long long **)buf)+ 6) = v13;
        }
      }
      else
      {
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A6D78);
        }
        char v21 = qword_102419458;
        if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)long long buf = 68289282;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v24 = 2082;
          uint64_t v25 = "";
          __int16 v26 = 1026;
          int v27 = a3;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"calculatePerClusterPerAnchorValueStatistics, received unhandled data type\", \"data type\":%{public}d}", buf, 0x18u);
          if (qword_102419450 != -1) {
            dispatch_once(&qword_102419450, &stru_1022A6D78);
          }
        }
        BOOL v22 = qword_102419458;
        if (os_signpost_enabled((os_log_t)qword_102419458))
        {
          *(_DWORD *)long long buf = 68289282;
          *(_DWORD *)&uint8_t buf[4] = 0;
          __int16 v24 = 2082;
          uint64_t v25 = "";
          __int16 v26 = 1026;
          int v27 = a3;
          _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v22, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "calculatePerClusterPerAnchorValueStatistics, received unhandled data type", "{\"msg%{public}.0s\":\"calculatePerClusterPerAnchorValueStatistics, received unhandled data type\", \"data type\":%{public}d}", buf, 0x18u);
        }
      }
    }
  }
}

void sub_100335ACC(uint64_t a1@<X0>, int *a2@<X8>)
{
  sub_10023D7A4((uint64_t)a2);
  for (uint64_t i = *(const std::string::value_type **)(a1 + 16); i; uint64_t i = *(const std::string::value_type **)i)
  {
    int v5 = a2[5];
    uint64_t v6 = a2[4];
    if ((int)v6 >= v5)
    {
      if (v5 == a2[6])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a2 + 2), v5 + 1);
        int v5 = a2[5];
      }
      a2[5] = v5 + 1;
      sub_100336334();
    }
    uint64_t v7 = *((void *)a2 + 1);
    a2[4] = v6 + 1;
    uint64_t v8 = *(void *)(v7 + 8 * v6);
    if (v8)
    {
      *(_DWORD *)(v8 + 44) |= 2u;
      double v9 = *(std::string **)(v8 + 32);
      if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::assign(v9, i + 16, 0x10uLL);
      for (j = (uint64_t *)*((void *)i + 6); j; j = (uint64_t *)*j)
      {
        int v11 = *(_DWORD *)(v8 + 20);
        uint64_t v12 = *(int *)(v8 + 16);
        if ((int)v12 >= v11)
        {
          if (v11 == *(_DWORD *)(v8 + 24))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v8 + 8), v11 + 1);
            int v11 = *(_DWORD *)(v8 + 20);
          }
          *(_DWORD *)(v8 + 20) = v11 + 1;
          sub_100336398();
        }
        uint64_t v13 = *(void *)(v8 + 8);
        *(_DWORD *)(v8 + 16) = v12 + 1;
        uint64_t v14 = *(void *)(v13 + 8 * v12);
        if (v14)
        {
          *(_DWORD *)(v14 + 36) |= 4u;
          double v15 = *(std::string **)(v14 + 24);
          if (v15 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
            operator new();
          }
          std::string::operator=(v15, (const std::string *)(j + 2));
          *(_DWORD *)(v14 + 36) |= 3u;
          *(_OWORD *)(v14 + 8) = *(_OWORD *)(j + 5);
        }
        else
        {
          if (qword_102419450 != -1) {
            dispatch_once(&qword_102419450, &stru_1022A6D78);
          }
          unint64_t v16 = qword_102419458;
          if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)long long buf = 68289026;
            int v21 = 0;
            __int16 v22 = 2082;
            uint64_t v23 = "";
            _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"got nullptr from CLMicroLocationProto add_anchorvaluestatistics\"}", buf, 0x12u);
            if (qword_102419450 != -1) {
              dispatch_once(&qword_102419450, &stru_1022A6D78);
            }
          }
          uint64_t v17 = qword_102419458;
          if (os_signpost_enabled((os_log_t)qword_102419458))
          {
            *(_DWORD *)long long buf = 68289026;
            int v21 = 0;
            __int16 v22 = 2082;
            uint64_t v23 = "";
            _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v17, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "got nullptr from CLMicroLocationProto add_anchorvaluestatistics", "{\"msg%{public}.0s\":\"got nullptr from CLMicroLocationProto add_anchorvaluestatistics\"}", buf, 0x12u);
          }
        }
      }
    }
    else
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6D78);
      }
      uint64_t v18 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 68289026;
        int v21 = 0;
        __int16 v22 = 2082;
        uint64_t v23 = "";
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "{\"msg%{public}.0s\":\"got nullptr from CLMicroLocationProto add_clusteranchorvaluestatisticsvector\"}", buf, 0x12u);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A6D78);
        }
      }
      uint64_t v19 = qword_102419458;
      if (os_signpost_enabled((os_log_t)qword_102419458))
      {
        *(_DWORD *)long long buf = 68289026;
        int v21 = 0;
        __int16 v22 = 2082;
        uint64_t v23 = "";
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v19, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "got nullptr from CLMicroLocationProto add_clusteranchorvaluestatisticsvector", "{\"msg%{public}.0s\":\"got nullptr from CLMicroLocationProto add_clusteranchorvaluestatisticsvector\"}", buf, 0x12u);
      }
    }
  }
}

void sub_100335F18(_Unwind_Exception *a1)
{
  sub_1002494D0(v1);
  _Unwind_Resume(a1);
}

void sub_100335F38(uint64_t a1@<X0>, const std::string::value_type *a2@<X1>, uint64_t a3@<X8>)
{
  sub_10023E174((uint64_t)v11);
  v14 |= 4u;
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::assign(v13, a2, 0x10uLL);
  v14 |= 2u;
  uint64_t v6 = v12;
  if (!v12) {
    operator new();
  }
  sub_100335ACC(a1, (int *)v10);
  sub_10024992C(v6, (uint64_t)v10);
  sub_1002494D0(v10);
  double Current_5 = j__CFAbsoluteTimeGetCurrent_5();
  sub_1003360F0((uint64_t)v11, (uint64_t)v10, Current_5);
  sub_100134750(__p, "home");
  sub_1002245D8(a3, (long long *)__p, (uint64_t)v10, 0, 0);
  if (v9 < 0) {
    operator delete(__p[0]);
  }
  sub_10026CC30((wireless_diagnostics::google::protobuf::MessageLite *)v10);
  sub_10026C134((wireless_diagnostics::google::protobuf::MessageLite *)v11);
}

void sub_100336078(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
}

void sub_1003360F0(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  sub_10023E1B0(a2);
  unsigned int v6 = *(_DWORD *)(a1 + 24);
  if (!sub_10016E644(v6)) {
    __assert_rtn("set_type", "microlocation.pb.h", 21547, "::CLMicroLocationProto::ConfigurationType_IsValid(value)");
  }
  int v7 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a2 + 40) = v6;
  *(_DWORD *)(a2 + 48) = v7 | 3;
  *(double *)(a2 + 8) = a3;
  sub_1002E6874(a2, a1);
}

void sub_100336184(_Unwind_Exception *a1)
{
  sub_10026CC30(v1);
  _Unwind_Resume(a1);
}

void sub_100336198(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

void sub_1003361C8()
{
}

void sub_100336208()
{
}

uint64_t sub_100336238(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 24);
  if (!v1) {
    sub_10015E48C();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

uint64_t sub_10033628C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 56);
  if (!v1) {
    sub_10015E48C();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

uint64_t sub_1003362E0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 88);
  if (!v1) {
    sub_10015E48C();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

void sub_100336334()
{
}

void sub_100336374()
{
}

void sub_100336398()
{
}

void sub_1003363D8()
{
}

void *sub_1003363FC(uint64_t a1, void *a2, uint64_t a3, long long **a4)
{
  uint64_t v7 = 0;
  unint64_t v8 = 0;
  do
    v8 ^= (v8 << 6) + (v8 >> 2) + 2654435769u + *((unsigned __int8 *)a2 + v7++);
  while (v7 != 16);
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v4 = v8;
      if (v8 >= v9) {
        unint64_t v4 = v8 % v9;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
    int v11 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v11)
    {
      uint64_t v12 = *v11;
      if (*v11)
      {
        do
        {
          unint64_t v13 = v12[1];
          if (v13 == v8)
          {
            if (v12[2] == *a2 && v12[3] == a2[1]) {
              return v12;
            }
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9) {
                v13 %= v9;
              }
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v4) {
              break;
            }
          }
          uint64_t v12 = (void *)*v12;
        }
        while (v12);
      }
    }
  }
  uint64_t v12 = operator new(0x38uLL);
  *uint64_t v12 = 0;
  v12[1] = v8;
  long long v15 = **a4;
  v12[6] = 0;
  *((_OWORD *)v12 + 1) = v15;
  *((_OWORD *)v12 + 2) = xmmword_101D0BD20;
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    BOOL v18 = 1;
    if (v9 >= 3) {
      BOOL v18 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v9);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_100100330(a1, v21);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v4 = v8 % v9;
      }
      else {
        unint64_t v4 = v8;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
  }
  uint64_t v22 = *(void *)a1;
  uint64_t v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *uint64_t v12 = *v23;
LABEL_44:
    *uint64_t v23 = v12;
    goto LABEL_45;
  }
  *uint64_t v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v12;
  *(void *)(v22 + 8 * v4) = a1 + 16;
  if (*v12)
  {
    unint64_t v24 = *(void *)(*v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v24 >= v9) {
        v24 %= v9;
      }
    }
    else
    {
      v24 &= v9 - 1;
    }
    uint64_t v23 = (void *)(*(void *)a1 + 8 * v24);
    goto LABEL_44;
  }
LABEL_45:
  ++*(void *)(a1 + 24);
  return v12;
}

void sub_10033664C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100336660(uint64_t result, double *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint8x8_t v10 = (double *)result;
LABEL_2:
  int v11 = v10;
LABEL_3:
  uint64_t v12 = 1 - a4;
  while (1)
  {
    uint8x8_t v10 = v11;
    uint64_t v13 = v12;
    uint64_t v14 = (char *)a2 - (char *)v11;
    unint64_t v15 = a2 - v11;
    if (!(!v6 & v5))
    {
      switch(v15)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          double v22 = *v11;
          double v23 = *(a2 - 1);
          if (*v11 < v23)
          {
            *int v11 = v23;
            *(a2 - 1) = v22;
          }
          break;
        case 3uLL:
          uint64_t result = sub_100336A5C(v11, v11 + 1, a2 - 1);
          break;
        case 4uLL:
          uint64_t result = sub_100336DE8(v11, v11 + 1, v11 + 2, a2 - 1);
          break;
        case 5uLL:
          uint64_t result = sub_100336E6C(v11, v11 + 1, v11 + 2, v11 + 3, a2 - 1);
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v14 <= 191) {
      break;
    }
    if (v13 == 1)
    {
      if (v11 != a2)
      {
        return (uint64_t)sub_100336F14(v11, a2, a2, a3);
      }
      return result;
    }
    unint64_t v16 = v15 >> 1;
    float v17 = &v11[v15 >> 1];
    if ((unint64_t)v14 >= 0x401)
    {
      sub_100336A5C(v11, &v11[v15 >> 1], a2 - 1);
      sub_100336A5C(v11 + 1, v17 - 1, a2 - 2);
      sub_100336A5C(v11 + 2, &v11[v16 + 1], a2 - 3);
      sub_100336A5C(v17 - 1, v17, &v11[v16 + 1]);
      double v18 = *v11;
      *int v11 = *v17;
      double *v17 = v18;
      if (a5) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_100336A5C(&v11[v15 >> 1], v11, a2 - 1);
      if (a5) {
        goto LABEL_14;
      }
    }
    if (*v11 >= *(v11 - 1))
    {
      uint64_t result = (uint64_t)sub_100336AE4(v11, a2);
      int v11 = (double *)result;
      goto LABEL_19;
    }
LABEL_14:
    unint64_t v19 = sub_100336B9C(v11, a2);
    if ((v20 & 1) == 0) {
      goto LABEL_17;
    }
    BOOL v21 = sub_100336C58(v11, v19);
    int v11 = v19 + 1;
    uint64_t result = sub_100336C58(v19 + 1, a2);
    if (result)
    {
      a4 = -v13;
      a2 = v19;
      if (v21) {
        return result;
      }
      goto LABEL_2;
    }
    uint64_t v12 = v13 + 1;
    if (!v21)
    {
LABEL_17:
      uint64_t result = sub_100336660(v10, v19, a3, -v13, a5 & 1);
      int v11 = v19 + 1;
LABEL_19:
      a5 = 0;
      a4 = -v13;
      goto LABEL_3;
    }
  }
  unint64_t v24 = v11 + 1;
  BOOL v26 = v11 == a2 || v24 == a2;
  if (a5)
  {
    if (!v26)
    {
      uint64_t v27 = 0;
      uint64_t v28 = v11;
      do
      {
        double v30 = *v28;
        double v29 = v28[1];
        uint64_t v28 = v24;
        if (v30 < v29)
        {
          uint64_t v31 = v27;
          while (1)
          {
            *(double *)((char *)v11 + v31 + 8) = v30;
            if (!v31) {
              break;
            }
            double v30 = *(double *)((char *)v11 + v31 - 8);
            v31 -= 8;
            if (v30 >= v29)
            {
              double v32 = (double *)((char *)v11 + v31 + 8);
              goto LABEL_50;
            }
          }
          double v32 = v11;
LABEL_50:
          double *v32 = v29;
        }
        unint64_t v24 = v28 + 1;
        v27 += 8;
      }
      while (v28 + 1 != a2);
    }
  }
  else if (!v26)
  {
    do
    {
      double v34 = *v10;
      double v33 = v10[1];
      uint8x8_t v10 = v24;
      if (v34 < v33)
      {
        BOOL v35 = v24;
        do
        {
          double *v35 = v34;
          double v34 = *(v35 - 2);
          --v35;
        }
        while (v34 < v33);
        double *v35 = v33;
      }
      ++v24;
    }
    while (v10 + 1 != a2);
  }
  return result;
}

uint64_t sub_100336A5C(double *a1, double *a2, double *a3)
{
  double v3 = *a1;
  double v4 = *a2;
  double v5 = *a3;
  if (*a1 < *a2)
  {
    if (v4 < v5)
    {
      *a1 = v5;
      *a3 = v3;
      return 1;
    }
    *a1 = v4;
    *a2 = v3;
    if (v3 >= *a3) {
      return 1;
    }
    *a2 = *a3;
    *a3 = v3;
    return 2;
  }
  if (v4 < v5)
  {
    *a2 = v5;
    *a3 = v4;
    double v6 = *a1;
    if (*a1 >= *a2) {
      return 1;
    }
    *a1 = *a2;
    *a2 = v6;
    return 2;
  }
  return 0;
}

double *sub_100336AE4(double *a1, double *a2)
{
  double v2 = *a1;
  double v3 = *a1;
  if (*(a2 - 1) >= *a1)
  {
    double v6 = a1 + 1;
    do
    {
      double v4 = v6;
      if (v6 >= a2) {
        break;
      }
      ++v6;
    }
    while (*v4 >= v3);
  }
  else
  {
    double v4 = a1;
    do
    {
      double v5 = v4[1];
      ++v4;
    }
    while (v5 >= v3);
  }
  if (v4 < a2)
  {
    do
      double v7 = *--a2;
    while (v7 < v3);
  }
  if (v4 < a2)
  {
    double v8 = *v4;
    double v9 = *a2;
    do
    {
      *double v4 = v9;
      *a2 = v8;
      do
      {
        double v10 = v4[1];
        ++v4;
        double v8 = v10;
      }
      while (v10 >= v3);
      do
      {
        double v11 = *--a2;
        double v12 = v11;
      }
      while (v11 < v3);
      double v9 = v12;
    }
    while (v4 < a2);
  }
  if (v4 - 1 != a1) {
    *a1 = *(v4 - 1);
  }
  *(v4 - 1) = v2;
  return v4;
}

double *sub_100336B9C(double *a1, double *a2)
{
  uint64_t v2 = 0;
  double v3 = *a1;
  double v4 = *a1;
  do
    double v5 = a1[++v2];
  while (v5 > v4);
  double v6 = &a1[v2];
  double v7 = &a1[v2 - 1];
  if (v2 == 1)
  {
    do
    {
      if (v6 >= a2) {
        break;
      }
      double v9 = *--a2;
    }
    while (v9 <= v4);
  }
  else
  {
    do
      double v8 = *--a2;
    while (v8 <= v4);
  }
  if (v6 < a2)
  {
    double v10 = *a2;
    double v11 = &a1[v2];
    double v12 = a2;
    do
    {
      *double v11 = v10;
      *double v12 = v5;
      do
      {
        double v13 = v11[1];
        ++v11;
        double v5 = v13;
      }
      while (v13 > v4);
      do
      {
        double v14 = *--v12;
        double v15 = v14;
      }
      while (v14 <= v4);
      double v10 = v15;
    }
    while (v11 < v12);
    double v7 = v11 - 1;
  }
  if (v7 != a1) {
    *a1 = *v7;
  }
  *double v7 = v3;
  return v7;
}

BOOL sub_100336C58(double *a1, double *a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      double v6 = *a1;
      double v7 = *(a2 - 1);
      if (*a1 < v7)
      {
        *a1 = v7;
        *(a2 - 1) = v6;
      }
      return result;
    case 3:
      sub_100336A5C(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      sub_100336DE8(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      sub_100336E6C(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1);
      return 1;
    default:
      double v8 = a1 + 2;
      sub_100336A5C(a1, a1 + 1, a1 + 2);
      double v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    double v12 = *v8;
    double v13 = *v9;
    if (*v8 < *v9)
    {
      uint64_t v14 = v11;
      while (1)
      {
        *(double *)((char *)a1 + v14) = v12;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        double v12 = *(double *)((char *)a1 + v14 - 16);
        v14 -= 8;
        if (v12 >= v13)
        {
          unint64_t v16 = (double *)((char *)a1 + v15);
          goto LABEL_12;
        }
      }
      unint64_t v16 = a1;
LABEL_12:
      double *v16 = v13;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    double v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t sub_100336DE8(double *a1, double *a2, double *a3, double *a4)
{
  uint64_t result = sub_100336A5C(a1, a2, a3);
  double v9 = *a3;
  if (*a3 < *a4)
  {
    *a3 = *a4;
    *a4 = v9;
    double v10 = *a2;
    if (*a2 < *a3)
    {
      *a2 = *a3;
      *a3 = v10;
      double v11 = *a1;
      if (*a1 < *a2)
      {
        *a1 = *a2;
        *a2 = v11;
      }
    }
  }
  return result;
}

uint64_t sub_100336E6C(double *a1, double *a2, double *a3, double *a4, double *a5)
{
  uint64_t result = sub_100336DE8(a1, a2, a3, a4);
  double v11 = *a4;
  if (*a4 < *a5)
  {
    *a4 = *a5;
    *a5 = v11;
    double v12 = *a3;
    if (*a3 < *a4)
    {
      *a3 = *a4;
      *a4 = v12;
      double v13 = *a2;
      if (*a2 < *a3)
      {
        *a2 = *a3;
        *a3 = v13;
        double v14 = *a1;
        if (*a1 < *a2)
        {
          *a1 = *a2;
          *a2 = v14;
        }
      }
    }
  }
  return result;
}

double *sub_100336F14(double *a1, double *a2, double *a3, uint64_t a4)
{
  if (a1 != a2)
  {
    double v6 = a2;
    uint64_t v8 = (char *)a2 - (char *)a1;
    uint64_t v9 = a2 - a1;
    if ((char *)a2 - (char *)a1 >= 9)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      double v12 = &a1[v10];
      do
      {
        sub_1003370E8((uint64_t)a1, a4, v9, v12--);
        --v11;
      }
      while (v11);
    }
    double v13 = v6;
    if (v6 != a3)
    {
      double v14 = v6;
      do
      {
        double v15 = *v14;
        if (*a1 < *v14)
        {
          *double v14 = *a1;
          *a1 = v15;
          sub_1003370E8((uint64_t)a1, a4, v9, a1);
        }
        ++v14;
      }
      while (v14 != a3);
      double v13 = a3;
    }
    if (v8 >= 9)
    {
      uint64_t v16 = (unint64_t)v8 >> 3;
      do
      {
        uint64_t v17 = 0;
        double v18 = *a1;
        unint64_t v19 = a1;
        do
        {
          char v20 = v19;
          v19 += v17 + 1;
          uint64_t v21 = 2 * v17;
          uint64_t v17 = (2 * v17) | 1;
          uint64_t v22 = v21 + 2;
          if (v22 < v16 && v19[1] < *v19)
          {
            ++v19;
            uint64_t v17 = v22;
          }
          double *v20 = *v19;
        }
        while (v17 <= (uint64_t)((unint64_t)(v16 - 2) >> 1));
        if (v19 != --v6)
        {
          double *v19 = *v6;
          *double v6 = v18;
          uint64_t v23 = (char *)v19 - (char *)a1 + 8;
          if (v23 < 9) {
            continue;
          }
          unint64_t v24 = (((unint64_t)v23 >> 3) - 2) >> 1;
          uint64_t v25 = &a1[v24];
          double v18 = *v19;
          double v26 = *v25;
          if (*v19 >= *v25) {
            continue;
          }
          do
          {
            double *v19 = v26;
            unint64_t v19 = v25;
            if (!v24) {
              break;
            }
            unint64_t v24 = (v24 - 1) >> 1;
            uint64_t v25 = &a1[v24];
            double v26 = *v25;
          }
          while (*v25 > v18);
        }
        double *v19 = v18;
      }
      while (v16-- > 2);
    }
    return v13;
  }
  return a3;
}

uint64_t sub_1003370E8(uint64_t result, uint64_t a2, uint64_t a3, double *a4)
{
  if (a3 >= 2)
  {
    uint64_t v4 = (uint64_t)a4 - result;
    int64_t v5 = (unint64_t)(a3 - 2) >> 1;
    if (v5 >= ((uint64_t)a4 - result) >> 3)
    {
      uint64_t v6 = v4 >> 2;
      uint64_t v7 = (v4 >> 2) + 1;
      uint64_t v8 = (double *)(result + 8 * v7);
      uint64_t v9 = v6 + 2;
      if (v9 < a3 && v8[1] < *v8)
      {
        ++v8;
        uint64_t v7 = v9;
      }
      double v10 = *a4;
      double v11 = *v8;
      if (*a4 >= *v8)
      {
        do
        {
          *a4 = v11;
          a4 = v8;
          if (v5 < v7) {
            break;
          }
          uint64_t v12 = 2 * v7;
          uint64_t v7 = (2 * v7) | 1;
          uint64_t v8 = (double *)(result + 8 * v7);
          uint64_t v13 = v12 + 2;
          if (v13 < a3 && v8[1] < *v8)
          {
            ++v8;
            uint64_t v7 = v13;
          }
          double v11 = *v8;
        }
        while (*v8 <= v10);
        *a4 = v10;
      }
    }
  }
  return result;
}

void sub_1003371A8()
{
}

void *sub_1003371BC()
{
  uint64_t result = operator new(0x10uLL);
  *uint64_t result = off_1022A6DC0;
  return result;
}

void sub_1003371F4(uint64_t a1, void *a2)
{
  *a2 = off_1022A6DC0;
}

uint64_t sub_10033721C()
{
  return 0;
}

uint64_t sub_100337228(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100337268()
{
}

void *sub_100337274(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_1003372FC()
{
}

void *sub_100337310()
{
  uint64_t result = operator new(0x10uLL);
  *uint64_t result = off_1022A6E50;
  return result;
}

void sub_100337348(uint64_t a1, void *a2)
{
  *a2 = off_1022A6E50;
}

uint64_t sub_100337370(uint64_t a1, uint64_t a2)
{
  return *(void *)a2;
}

uint64_t sub_100337378(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1003373B8()
{
}

void *sub_1003373C4(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10033744C()
{
}

void *sub_100337460()
{
  uint64_t result = operator new(0x10uLL);
  *uint64_t result = off_1022A6EE0;
  return result;
}

void sub_100337498(uint64_t a1, void *a2)
{
  *a2 = off_1022A6EE0;
}

uint64_t sub_1003374C0()
{
  return 0;
}

uint64_t sub_1003374CC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10033750C()
{
}

void *sub_100337518(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_10033759C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100337614(a1, a2);
  sub_1003376AC(v7 + 32, a3);
  sub_100337744(a1 + 64, a4);
  return a1;
}

void sub_1003375F0(_Unwind_Exception *a1)
{
  sub_1003373C4(v2);
  sub_100337274(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100337614(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_1003376AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_100337744(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

unsigned __int8 *sub_1003377DC(uint64_t a1, unsigned __int8 *a2, uint64_t a3, __n128 *a4)
{
  uint64_t v9 = (void *)(a1 + 24);
  unint64_t v10 = sub_100103388(a1 + 24, (uint64_t)a2);
  unint64_t v11 = v10;
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    unint64_t v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v4 = v10;
      if (v10 >= v12) {
        unint64_t v4 = v10 % v12;
      }
    }
    else
    {
      unint64_t v4 = (v12 - 1) & v10;
    }
    double v15 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v15)
    {
      for (uint64_t i = *v15; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v17 = *((void *)i + 1);
        if (v17 == v11)
        {
          if (sub_100103744(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v14 > 1)
          {
            if (v17 >= v12) {
              v17 %= v12;
            }
          }
          else
          {
            v17 &= v12 - 1;
          }
          if (v17 != v4) {
            break;
          }
        }
      }
    }
  }
  sub_100337A64(a1, v11, a3, a4, (uint64_t)v27);
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v19 = *(float *)(a1 + 32);
  if (!v12 || (float)(v19 * (float)v12) < v18)
  {
    BOOL v20 = 1;
    if (v12 >= 3) {
      BOOL v20 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v12);
    unint64_t v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22) {
      size_t v23 = v22;
    }
    else {
      size_t v23 = v21;
    }
    sub_100100330(a1, v23);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12) {
        unint64_t v4 = v11 % v12;
      }
      else {
        unint64_t v4 = v11;
      }
    }
    else
    {
      unint64_t v4 = (v12 - 1) & v11;
    }
  }
  unint64_t v24 = *(void **)(*(void *)a1 + 8 * v4);
  if (v24)
  {
    *(void *)v27[0] = *v24;
    void *v24 = v27[0];
  }
  else
  {
    *(void *)v27[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v27[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v27[0])
    {
      unint64_t v25 = *(void *)(*(void *)v27[0] + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v25 >= v12) {
          v25 %= v12;
        }
      }
      else
      {
        v25 &= v12 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v25) = v27[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v27[0];
  ++*v9;
  return i;
}

void sub_100337A40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **__p, uint64_t a13)
{
  if (__p) {
    sub_10022251C((uint64_t)&a13, __p);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_100337A64@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = a1 + 16;
  unint64_t v10 = (char *)operator new(0x38uLL);
  *(void *)(a5 + 8) = v9;
  *(void *)a5 = v10;
  *(unsigned char *)(a5 + 16) = 0;
  *(void *)unint64_t v10 = 0;
  *((void *)v10 + 1) = a2;
  unint64_t v11 = v10 + 16;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_1000DC48C(v11, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)unint64_t v11 = *(_OWORD *)a3;
    *((void *)v10 + 4) = *(void *)(a3 + 16);
  }
  __n128 result = *a4;
  *(__n128 *)(v10 + 40) = *a4;
  *(unsigned char *)(a5 + 16) = 1;
  return result;
}

void sub_100337B00(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_10022251C(v3, v2);
  _Unwind_Resume(a1);
}

void *sub_100337B1C(uint64_t a1, void *a2, _OWORD *a3, uint64_t *a4)
{
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  do
    v9 ^= (v9 << 6) + (v9 >> 2) + 2654435769u + *((unsigned __int8 *)a2 + v8++);
  while (v8 != 16);
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
    unint64_t v12 = *(void **)(*(void *)a1 + 8 * v4);
    if (v12)
    {
      uint8x8_t v13 = (void *)*v12;
      if (*v12)
      {
        do
        {
          unint64_t v14 = v13[1];
          if (v14 == v9)
          {
            if (v13[2] == *a2 && v13[3] == a2[1]) {
              return v13;
            }
          }
          else
          {
            if (v11.u32[0] > 1uLL)
            {
              if (v14 >= v10) {
                v14 %= v10;
              }
            }
            else
            {
              v14 &= v10 - 1;
            }
            if (v14 != v4) {
              break;
            }
          }
          uint8x8_t v13 = (void *)*v13;
        }
        while (v13);
      }
    }
  }
  uint64_t v16 = a1 + 16;
  unint64_t v17 = operator new(0x48uLL);
  v27[0] = v17;
  v27[1] = a1 + 16;
  void *v17 = 0;
  v17[1] = v9;
  *((_OWORD *)v17 + 1) = *a3;
  sub_1000E2908((uint64_t)(v17 + 4), a4);
  char v28 = 1;
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v19 = *(float *)(a1 + 32);
  if (!v10 || (float)(v19 * (float)v10) < v18)
  {
    BOOL v20 = 1;
    if (v10 >= 3) {
      BOOL v20 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v10);
    unint64_t v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22) {
      size_t v23 = v22;
    }
    else {
      size_t v23 = v21;
    }
    sub_100100330(a1, v23);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
      else {
        unint64_t v4 = v9;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
  }
  unint64_t v24 = *(void **)(*(void *)a1 + 8 * v4);
  if (v24)
  {
    *(void *)v27[0] = *v24;
    void *v24 = v27[0];
  }
  else
  {
    *(void *)v27[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v27[0];
    *(void *)(*(void *)a1 + 8 * v4) = v16;
    if (*(void *)v27[0])
    {
      unint64_t v25 = *(void *)(*(void *)v27[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v25 >= v10) {
          v25 %= v10;
        }
      }
      else
      {
        v25 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v25) = v27[0];
    }
  }
  uint8x8_t v13 = (void *)v27[0];
  v27[0] = 0;
  ++*(void *)(a1 + 24);
  sub_1002CFA28((uint64_t)v27, 0);
  return v13;
}

void sub_100337DAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1002CFA28((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_100337DC4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  unint64_t v9 = *(void **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 6) < a4)
  {
    sub_100337F48((void **)a1);
    if (a4 > 0x155555555555555) {
      sub_1001D7FD4();
    }
    unint64_t v10 = 0x5555555555555556 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 6);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 6) >= 0xAAAAAAAAAAAAAALL) {
      unint64_t v11 = 0x155555555555555;
    }
    else {
      unint64_t v11 = v10;
    }
    sub_100330FA4((void *)a1, v11);
    uint64_t result = sub_100330FF8(v8, a2, a3, *(void *)(a1 + 8));
    goto LABEL_11;
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 6) < a4)
  {
    uint64_t v13 = a2 + ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 6 << 6);
    sub_100337FB8((uint64_t)&v17, a2, v13, (uint64_t)v9);
    uint64_t result = sub_100330FF8(v8, v13, a3, *(void *)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = result;
    return result;
  }
  uint64_t result = sub_100337FB8((uint64_t)&v18, a2, a3, (uint64_t)v9);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16 != v14)
  {
    do
    {
      v16 -= 192;
      uint64_t result = sub_1001F0024(v8, v16);
    }
    while (v16 != v15);
  }
  *(void *)(a1 + 8) = v15;
  return result;
}

void sub_100337F38(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_100337F40(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_100337F48(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    unint64_t v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 192;
        sub_1001F0024((uint64_t)(a1 + 2), v3);
      }
      while ((void *)v3 != v1);
      unint64_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t sub_100337FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == a3) {
    return a2;
  }
  uint64_t v6 = a3;
  uint64_t v7 = 0;
  do
  {
    if (a2 != a4)
    {
      uint64_t v8 = a4 + v7;
      *(_DWORD *)(a4 + v7 + 32) = *(_DWORD *)(a2 + v7 + 32);
      sub_10032477C((void *)(a4 + v7), *(uint64_t **)(a2 + v7 + 16), 0);
      long long v9 = *(_OWORD *)(a2 + v7 + 40);
      *(void *)(v8 + 56) = *(void *)(a2 + v7 + 56);
      *(_OWORD *)(v8 + 40) = v9;
      *(_DWORD *)(v8 + 96) = *(_DWORD *)(a2 + v7 + 96);
      sub_100324A50((void *)(a4 + v7 + 64), *(unsigned int **)(a2 + v7 + 80), 0);
      *(_DWORD *)(v8 + 136) = *(_DWORD *)(a2 + v7 + 136);
      sub_100324F90((void *)(a4 + v7 + 104), *(uint64_t **)(a2 + v7 + 120), 0);
      long long v10 = *(_OWORD *)(a2 + v7 + 144);
      *(_DWORD *)(v8 + 160) = *(_DWORD *)(a2 + v7 + 160);
      *(_OWORD *)(v8 + 144) = v10;
      sub_1000FB43C((char *)(a4 + v7 + 168), *(char **)(a2 + v7 + 168), *(void *)(a2 + v7 + 176), (uint64_t)(*(void *)(a2 + v7 + 176) - *(void *)(a2 + v7 + 168)) >> 2);
    }
    v7 += 192;
  }
  while (a2 + v7 != v6);
  return v6;
}

void *sub_1003380AC(uint64_t a1, void *a2, uint64_t a3, _OWORD **a4)
{
  uint64_t v7 = 0;
  unint64_t v8 = 0;
  do
    v8 ^= (v8 << 6) + (v8 >> 2) + 2654435769u + *((unsigned __int8 *)a2 + v7++);
  while (v7 != 16);
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v4 = v8;
      if (v8 >= v9) {
        unint64_t v4 = v8 % v9;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
    unint64_t v11 = *(void **)(*(void *)a1 + 8 * v4);
    if (v11)
    {
      unint64_t v12 = (void *)*v11;
      if (*v11)
      {
        do
        {
          unint64_t v13 = v12[1];
          if (v13 == v8)
          {
            if (v12[2] == *a2 && v12[3] == a2[1]) {
              return v12;
            }
          }
          else
          {
            if (v10.u32[0] > 1uLL)
            {
              if (v13 >= v9) {
                v13 %= v9;
              }
            }
            else
            {
              v13 &= v9 - 1;
            }
            if (v13 != v4) {
              break;
            }
          }
          unint64_t v12 = (void *)*v12;
        }
        while (v12);
      }
    }
  }
  uint64_t v15 = a1 + 16;
  uint64_t v16 = operator new(0x48uLL);
  v26[0] = v16;
  v26[1] = a1 + 16;
  void *v16 = 0;
  v16[1] = v8;
  *((_OWORD *)v16 + 1) = **a4;
  *((_OWORD *)v16 + 2) = 0u;
  *((_OWORD *)v16 + 3) = 0u;
  *((_DWORD *)v16 + 16) = 1065353216;
  char v27 = 1;
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v9 || (float)(v18 * (float)v9) < v17)
  {
    BOOL v19 = 1;
    if (v9 >= 3) {
      BOOL v19 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v9);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_100100330(a1, v22);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v4 = v8 % v9;
      }
      else {
        unint64_t v4 = v8;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
  }
  size_t v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    *size_t v23 = v26[0];
  }
  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v4) = v15;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8);
      if ((v9 & (v9 - 1)) != 0)
      {
        if (v24 >= v9) {
          v24 %= v9;
        }
      }
      else
      {
        v24 &= v9 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }
  unint64_t v12 = (void *)v26[0];
  v26[0] = 0;
  ++*(void *)(a1 + 24);
  sub_1002CFA28((uint64_t)v26, 0);
  return v12;
}

void sub_100338338(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1002CFA28((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_100338350(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  unint64_t v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_100103388(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    uint64_t v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (sub_100103744(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  sub_1003385E8(a1, v10, a4, (uint64_t)v26);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_100100330(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  size_t v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    *size_t v23 = v26[0];
  }
  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11) {
          v24 %= v11;
        }
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v26[0];
  ++*v8;
  return i;
}

void sub_1003385C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **__p, uint64_t a13)
{
  if (__p) {
    sub_10022251C((uint64_t)&a13, __p);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_1003385E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = (char *)operator new(0x38uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)unint64_t v8 = 0;
  *((void *)v8 + 1) = a2;
  uint64_t result = v8 + 16;
  unint64_t v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    uint64_t result = sub_1000DC48C(result, *(void **)v10, *((void *)v10 + 1));
  }
  else
  {
    long long v11 = *v10;
    *((void *)v8 + 4) = *((void *)v10 + 2);
    *(_OWORD *)uint64_t result = v11;
  }
  *((void *)v8 + 5) = 0;
  *((_DWORD *)v8 + 12) = 0;
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_10033867C(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_10022251C(v3, v2);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_100338698(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  unint64_t v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_100103388(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    uint64_t v14 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (sub_100103744(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  sub_100338930(a1, v10, a4, (uint64_t)v26);
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_100100330(a1, v22);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  size_t v23 = *(void **)(*(void *)a1 + 8 * v4);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    *size_t v23 = v26[0];
  }
  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v24 >= v11) {
          v24 %= v11;
        }
      }
      else
      {
        v24 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v26[0];
  ++*v8;
  return i;
}

void sub_10033890C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void **__p, uint64_t a13)
{
  if (__p) {
    sub_10022251C((uint64_t)&a13, __p);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_100338930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long **a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x38uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  *unint64_t v8 = 0;
  v8[1] = a2;
  uint64_t result = v8 + 2;
  unint64_t v10 = *a3;
  if (*((char *)*a3 + 23) < 0)
  {
    uint64_t result = sub_1000DC48C(result, *(void **)v10, *((void *)v10 + 1));
  }
  else
  {
    long long v11 = *v10;
    void v8[4] = *((void *)v10 + 2);
    *(_OWORD *)uint64_t result = v11;
  }
  void v8[5] = 0;
  v8[6] = 0;
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_1003389C0(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_10022251C(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1003389DC(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419CF0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419CF0))
  {
    sub_100340B08((std::string *)&xmmword_102419CD8);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_102419CD8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419CF0);
  }
  if (byte_102419CEF < 0)
  {
    sub_1000DC48C((unsigned char *)a1, (void *)xmmword_102419CD8, *((unint64_t *)&xmmword_102419CD8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_102419CD8;
    *(void *)(a1 + 16) = unk_102419CE8;
  }
}

void sub_100338A98(_Unwind_Exception *a1)
{
}

void sub_100338AB0(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_102419D10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_102419D10))
  {
    sub_1002E4DF8((std::string *)&xmmword_102419CF8);
    __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_102419CF8, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_102419D10);
  }
  if (byte_102419D0F < 0)
  {
    sub_1000DC48C((unsigned char *)a1, (void *)xmmword_102419CF8, *((unint64_t *)&xmmword_102419CF8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_102419CF8;
    *(void *)(a1 + 16) = unk_102419D08;
  }
}

void sub_100338B6C(_Unwind_Exception *a1)
{
}

uint64_t sub_100338B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a8;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a4 + 52);
  sub_10023D838(a1 + 32);
  *(unsigned char *)(a1 + 232) = 0;
  *(unsigned char *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = a6;
  *(void *)(a1 + 272) = a7;
  sub_10024D01C(v13, a4);
  if (!*(unsigned char *)(a5 + 24)) {
    goto LABEL_4;
  }
  if (*(char *)(a5 + 23) < 0)
  {
    if (*(void *)(a5 + 8)) {
      goto LABEL_4;
    }
  }
  else if (*(unsigned char *)(a5 + 23))
  {
LABEL_4:
    sub_1000D87AC((std::string *)(a1 + 232), (const std::string *)a5);
    return a1;
  }
  if (*(unsigned char *)(a1 + 256))
  {
    if (*(char *)(a1 + 255) < 0) {
      operator delete(*(void **)(a1 + 232));
    }
    *(unsigned char *)(a1 + 256) = 0;
  }
  return a1;
}

void sub_100338C50(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v1 + 256))
  {
    if (*(char *)(v1 + 255) < 0) {
      operator delete(*v3);
    }
  }
  sub_10024B47C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_100338C80(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = a2 + 32;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 84);
  uint64_t v5 = a1 + 32;
  sub_10023D838(a1 + 32);
  *(unsigned char *)(a1 + 232) = 0;
  *(unsigned char *)(a1 + 256) = 0;
  if (*(unsigned char *)(a2 + 256))
  {
    long long v6 = *(_OWORD *)(a2 + 232);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = v6;
    *(void *)(a2 + 240) = 0;
    *(void *)(a2 + 248) = 0;
    *(void *)(a2 + 232) = 0;
    *(unsigned char *)(a1 + 256) = 1;
  }
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  sub_10024D01C(v5, v4);
  return a1;
}

void sub_100338D30(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v2 + 256))
  {
    if (*(char *)(v2 + 255) < 0) {
      operator delete(*v3);
    }
  }
  sub_10024B47C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100338D60(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 84);
  sub_1002DCC4C(a1 + 232, (__n128 *)(a2 + 232));
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  sub_10024D01C(a1 + 32, a2 + 32);
  return a1;
}

void sub_100338DCC(uint64_t *a1)
{
  BOOL v2 = sub_10014C3C0(*a1);
  *((unsigned char *)a1 + 8) = v2;
  if (v2)
  {
    sub_10033920C(a1);
    sub_1005F7B0C(*a1, "MicroLocationModels", (const char **)&off_1022A6F80, 0, 0);
    char v3 = sub_1005F93E4(*a1, "MicroLocationModels");
    *((unsigned char *)a1 + 8) = v3;
    if (v3)
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6F60);
      }
      uint64_t v4 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)long long buf = 136446210;
        unint64_t v9 = "MicroLocationModels";
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Sucessfully created table if necessary: %{public}s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 == -1) {
          goto LABEL_16;
        }
        goto LABEL_28;
      }
    }
    else
    {
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6F60);
      }
      uint64_t v7 = qword_102419458;
      if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)long long buf = 136446210;
        unint64_t v9 = "MicroLocationModels";
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to create table: %{public}s", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419450 != -1) {
          dispatch_once(&qword_102419450, &stru_1022A6F60);
        }
        long long v6 = (uint8_t *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "void CLMicroLocationModelTable::initTable()", "%s\n");
        goto LABEL_26;
      }
    }
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6F60);
    }
    uint64_t v5 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "#Warning Database is not connected so we can't intialize our table", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 == -1)
      {
LABEL_16:
        long long v6 = (uint8_t *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLMicroLocationModelTable::initTable()", "%s\n");
LABEL_26:
        if (v6 != buf) {
          free(v6);
        }
        return;
      }
LABEL_28:
      dispatch_once(&qword_102419450, &stru_1022A6F60);
      goto LABEL_16;
    }
  }
}

uint64_t sub_1003391DC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = 0;
  sub_100338DCC((uint64_t *)a1);
  return a1;
}

uint64_t sub_10033920C(uint64_t *a1)
{
  uint64_t result = sub_1005F93E4(*a1, "MicroLocationModels");
  if (result)
  {
    uint64_t v3 = *a1;
    return sub_1001E1DE8(v3, (uint64_t *)&off_1022A6F80, 7, "MicroLocationModels");
  }
  return result;
}

uint64_t sub_100339274(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v1 = *(void *)a1;
    if (byte_10247A817 >= 0) {
      BOOL v2 = &xmmword_10247A800;
    }
    else {
      BOOL v2 = (long long *)xmmword_10247A800;
    }
    sub_10014D518(v1, (uint64_t)v2);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6F60);
  }
  uint64_t v3 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't insert or replace", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6F60);
    }
    uint64_t v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationModelTable::insertOrReplace(const std::vector<Entry> &)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
  return 0;
}

void sub_100339A28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,std::bad_cast a43)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  if (a39 < 0) {
    operator delete(a34);
  }
  if (a40) {
    (*(void (**)(uint64_t))(*(void *)a40 + 8))(a40);
  }
  _Unwind_Resume(exception_object);
}

void sub_100339B00(uint64_t a1, uint64_t a2, unsigned int a3)
{
  *((unsigned char *)&v45.__r_.__value_.__s + 23) = 15;
  strcpy((char *)&v45, "SELECT * FROM (");
  char v44 = 7;
  strcpy(__s, "SELECT ");
  long long v6 = std::string::append(&v45, __s, 7uLL);
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v46.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  sub_1003389DC((uint64_t)__p);
  if ((v42 & 0x80u) == 0) {
    unint64_t v8 = __p;
  }
  else {
    unint64_t v8 = (void **)__p[0];
  }
  if ((v42 & 0x80u) == 0) {
    std::string::size_type v9 = v42;
  }
  else {
    std::string::size_type v9 = (std::string::size_type)__p[1];
  }
  unint64_t v10 = std::string::append(&v46, (const std::string::value_type *)v8, v9);
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v47.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  uint8x8_t v12 = std::string::append(&v47, " FROM ");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v48.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  uint64_t v14 = std::string::append(&v48, "MicroLocationModels");
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v49.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  unint64_t v16 = std::string::append(&v49, " ");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v50.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  int v18 = *(char *)(a2 + 23);
  if (v18 >= 0) {
    BOOL v19 = (const std::string::value_type *)a2;
  }
  else {
    BOOL v19 = *(const std::string::value_type **)a2;
  }
  if (v18 >= 0) {
    std::string::size_type v20 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    std::string::size_type v20 = *(void *)(a2 + 8);
  }
  unint64_t v21 = std::string::append(&v50, v19, v20);
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v56.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  size_t v23 = std::string::append(&v56, " ");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  v57.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  unint64_t v25 = std::string::append(&v57, " ORDER BY ");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v58.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  char v27 = std::string::append(&v58, "GenerationTimestamp");
  long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
  v51.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v28;
  v27->__r_.__value_.__l.__size_ = 0;
  v27->__r_.__value_.__r.__words[2] = 0;
  v27->__r_.__value_.__r.__words[0] = 0;
  double v29 = std::string::append(&v51, " DESC LIMIT ");
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v59.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&v40, a3);
  if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v31 = &v40;
  }
  else {
    uint64_t v31 = (std::string *)v40.__r_.__value_.__r.__words[0];
  }
  if ((v40.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v40.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v40.__r_.__value_.__l.__size_;
  }
  double v33 = std::string::append(&v59, (const std::string::value_type *)v31, size);
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v52.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  BOOL v35 = std::string::append(&v52, ") ORDER BY ");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  v55.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  uint64_t v37 = std::string::append(&v55, "GenerationTimestamp");
  long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
  int64_t v54 = v37->__r_.__value_.__r.__words[2];
  *(_OWORD *)uint64_t v53 = v38;
  v37->__r_.__value_.__l.__size_ = 0;
  v37->__r_.__value_.__r.__words[2] = 0;
  v37->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v55.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v52.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v40.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v59.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v51.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v58.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v57.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v56.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v50.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v49.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v48.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v47.__r_.__value_.__l.__data_);
  }
  if ((char)v42 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v46.__r_.__value_.__l.__data_);
  }
  if (v44 < 0) {
    operator delete(*(void **)__s);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
  if (v54 >= 0) {
    char v39 = v53;
  }
  else {
    char v39 = (void **)v53[0];
  }
  sub_10014D518(a1, (uint64_t)v39);
}

void sub_10033A0FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,void **buf)
{
  long long buf = &a47;
  sub_1002898E8(&buf);
  if (v58) {
    (*(void (**)(uint64_t))(*(void *)v58 + 8))(v58);
  }
  if (a56 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10033A548(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, unsigned char *a4@<X3>, unsigned char *a5@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    *((unsigned char *)&v42.__r_.__value_.__s + 23) = 6;
    strcpy((char *)&v42, "WHERE ");
    unint64_t v10 = std::string::append(&v42, "ModelType");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    uint8x8_t v12 = std::string::append(&v43, "=");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v41, a2);
    if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v14 = &v41;
    }
    else {
      uint64_t v14 = (std::string *)v41.__r_.__value_.__r.__words[0];
    }
    if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v41.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v41.__r_.__value_.__l.__size_;
    }
    unint64_t v16 = std::string::append(&v44, (const std::string::value_type *)v14, size);
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v41.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v44.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v43.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v42.__r_.__value_.__l.__data_);
    }
    if (*(unsigned char *)(a3 + 24))
    {
      if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v18 = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v18 = __p[0].__r_.__value_.__l.__size_;
      }
      BOOL v19 = &v41;
      sub_1001110E4((uint64_t)&v41, v18 + 5);
      if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        BOOL v19 = (std::string *)v41.__r_.__value_.__r.__words[0];
      }
      if (v18)
      {
        if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type v20 = __p;
        }
        else {
          std::string::size_type v20 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
        }
        memmove(v19, v20, v18);
      }
      strcpy((char *)v19 + v18, " AND ");
      unint64_t v21 = std::string::append(&v41, "ClientID");
      long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
      v42.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v22;
      v21->__r_.__value_.__l.__size_ = 0;
      v21->__r_.__value_.__r.__words[2] = 0;
      v21->__r_.__value_.__r.__words[0] = 0;
      size_t v23 = std::string::append(&v42, "= \"");
      long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
      v43.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v24;
      v23->__r_.__value_.__l.__size_ = 0;
      v23->__r_.__value_.__r.__words[2] = 0;
      v23->__r_.__value_.__r.__words[0] = 0;
      if (!*(unsigned char *)(a3 + 24)) {
        sub_10020D700();
      }
      int v25 = *(char *)(a3 + 23);
      if (v25 >= 0) {
        long long v26 = (const std::string::value_type *)a3;
      }
      else {
        long long v26 = *(const std::string::value_type **)a3;
      }
      if (v25 >= 0) {
        std::string::size_type v27 = *(unsigned __int8 *)(a3 + 23);
      }
      else {
        std::string::size_type v27 = *(void *)(a3 + 8);
      }
      long long v28 = std::string::append(&v43, v26, v27);
      long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      v44.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      long long v30 = std::string::append(&v44, "\"");
      std::string::size_type v31 = v30->__r_.__value_.__r.__words[0];
      v45[0] = v30->__r_.__value_.__l.__size_;
      *(void *)((char *)v45 + 7) = *(std::string::size_type *)((char *)&v30->__r_.__value_.__r.__words[1] + 7);
      char v32 = HIBYTE(v30->__r_.__value_.__r.__words[2]);
      v30->__r_.__value_.__l.__size_ = 0;
      v30->__r_.__value_.__r.__words[2] = 0;
      v30->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      __p[0].__r_.__value_.__r.__words[0] = v31;
      __p[0].__r_.__value_.__l.__size_ = v45[0];
      *(std::string::size_type *)((char *)&__p[0].__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v45 + 7);
      *((unsigned char *)&__p[0].__r_.__value_.__s + 23) = v32;
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v44.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v43.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v42.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v41.__r_.__value_.__l.__data_);
      }
    }
    if (a4[16])
    {
      *((unsigned char *)&v43.__r_.__value_.__s + 23) = 5;
      strcpy((char *)&v43, " AND ");
      sub_100134750(&v41, "LoiGroupId");
      if (!a4[16]) {
        sub_10020D700();
      }
      sub_10022B538((const void **)&v41.__r_.__value_.__l.__data_, a4, (uint64_t)&v42);
      if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        double v33 = &v42;
      }
      else {
        double v33 = (std::string *)v42.__r_.__value_.__r.__words[0];
      }
      if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v34 = HIBYTE(v42.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v34 = v42.__r_.__value_.__l.__size_;
      }
      BOOL v35 = std::string::append(&v43, (const std::string::value_type *)v33, v34);
      long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
      v44.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v36;
      v35->__r_.__value_.__l.__size_ = 0;
      v35->__r_.__value_.__r.__words[2] = 0;
      v35->__r_.__value_.__r.__words[0] = 0;
      if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v37 = &v44;
      }
      else {
        uint64_t v37 = (std::string *)v44.__r_.__value_.__r.__words[0];
      }
      if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v38 = HIBYTE(v44.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v38 = v44.__r_.__value_.__l.__size_;
      }
      std::string::append(__p, (const std::string::value_type *)v37, v38);
      if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v44.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v42.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v41.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v43.__r_.__value_.__l.__data_);
      }
    }
    sub_100339B00(*(void *)a1, (uint64_t)__p, 1u);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6F60);
  }
  char v39 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__p[0].__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't get the most recent model", (uint8_t *)__p, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(__p, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6F60);
    }
    LOWORD(v44.__r_.__value_.__l.__data_) = 0;
    std::string v40 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::optional<CLMicroLocationModelTable::Entry> CLMicroLocationModelTable::getMostRecentModelOfModelTypeForClientAndForLoi(CLMicroLocationProto::Model::ModelType, std::optional<const std::string>, std::optional<boost::uuids::uuid>)", "%s\n", (const char *)v40);
    if (v40 != __p) {
      free(v40);
    }
  }
  *a5 = 0;
  a5[280] = 0;
}

void sub_10033AB00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
}

void sub_10033AC58(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5 = a3;
  *(void *)&long long v22 = a3;
  *((void *)&v22 + 1) = a4;
  LOBYTE(__p) = 0;
  char v16 = 0;
  long long v20 = v22;
  char v21 = 1;
  sub_10033A548(a1, a2, (uint64_t)&__p, &v20, (unsigned char *)a5);
  if (v16 && v15 < 0) {
    operator delete(__p);
  }
  if (v5)
  {
LABEL_5:
    if (!*(unsigned char *)(a5 + 280))
    {
      LOBYTE(v11) = 0;
      char v13 = 0;
      v17[0] = 0;
      v17[1] = 0;
      char v18 = 1;
      sub_10033A548(a1, a2, (uint64_t)&v11, v17, v19);
      sub_100289C68(a5, (uint64_t)v19);
      sub_1001EF39C((uint64_t)v19);
      if (v13 && v12 < 0) {
        operator delete(v11);
      }
      if (*(unsigned char *)(a5 + 280)) {
        *(_OWORD *)(a5 + 264) = v22;
      }
    }
  }
  else
  {
    uint64_t v9 = 1;
    while (v9 != 16)
    {
      if (*((unsigned __int8 *)&v22 + v9++))
      {
        if ((unint64_t)(v9 - 2) <= 0xE) {
          goto LABEL_5;
        }
        return;
      }
    }
  }
}

void sub_10033ADB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  sub_1001EF39C((uint64_t)&a27);
  if (a16)
  {
    if (a15 < 0) {
      operator delete(__p);
    }
  }
  sub_1001EF39C(v27);
  _Unwind_Resume(a1);
}

void sub_10033AE10(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000DC48C(v9, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)a2;
    uint64_t v10 = *(void *)(a2 + 16);
  }
  char v11 = 1;
  *(_OWORD *)std::string __p = *(_OWORD *)v9;
  uint64_t v13 = v10;
  v9[0] = 0;
  v9[1] = 0;
  uint64_t v10 = 0;
  char v14 = 1;
  v15[0] = a3;
  v15[1] = a4;
  char v16 = 1;
  sub_10033A548(a1, 0, (uint64_t)__p, v15, a5);
  if (v14 && SHIBYTE(v13) < 0) {
    operator delete(__p[0]);
  }
  if (v11)
  {
    if (SHIBYTE(v10) < 0) {
      operator delete(v9[0]);
    }
  }
}

void sub_10033AF28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (a19)
  {
    if (a18 < 0) {
      operator delete(__p);
    }
  }
  sub_101A5D2B0(v19, (uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10033AF60(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  v32[0] = a3;
  v32[1] = a4;
  if (*(unsigned char *)(a1 + 8))
  {
    *((unsigned char *)&v27.__r_.__value_.__s + 23) = 6;
    strcpy((char *)&v27, "WHERE ");
    unint64_t v8 = std::string::append(&v27, "ClientID");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v28.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    uint64_t v10 = std::string::append(&v28, "= \"");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v29.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    int v12 = *(char *)(a2 + 23);
    if (v12 >= 0) {
      uint64_t v13 = (const std::string::value_type *)a2;
    }
    else {
      uint64_t v13 = *(const std::string::value_type **)a2;
    }
    if (v12 >= 0) {
      std::string::size_type v14 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::string::size_type v14 = *(void *)(a2 + 8);
    }
    char v15 = std::string::append(&v29, v13, v14);
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    long long v17 = std::string::append(&v30, "\"");
    long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v30.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v29.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v28.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v27.__r_.__value_.__l.__data_);
    }
    *((unsigned char *)&v29.__r_.__value_.__s + 23) = 5;
    strcpy((char *)&v29, " AND ");
    sub_100134750(&v27, "LoiGroupId");
    sub_10022B538((const void **)&v27.__r_.__value_.__l.__data_, v32, (uint64_t)&v28);
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      BOOL v19 = &v28;
    }
    else {
      BOOL v19 = (std::string *)v28.__r_.__value_.__r.__words[0];
    }
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v28.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v28.__r_.__value_.__l.__size_;
    }
    char v21 = std::string::append(&v29, (const std::string::value_type *)v19, size);
    long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      size_t v23 = &v30;
    }
    else {
      size_t v23 = (std::string *)v30.__r_.__value_.__r.__words[0];
    }
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v24 = HIBYTE(v30.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v24 = v30.__r_.__value_.__l.__size_;
    }
    std::string::append(&v31, (const std::string::value_type *)v23, v24);
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v30.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v28.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v27.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v29.__r_.__value_.__l.__data_);
    }
    sub_100339B00(*(void *)a1, (uint64_t)&v31, 1u);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6F60);
  }
  int v25 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v31.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't get the most recent mode of client", (uint8_t *)&v31, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v31, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6F60);
    }
    LOWORD(v30.__r_.__value_.__l.__data_) = 0;
    long long v26 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::optional<CLMicroLocationModelTable::Entry> CLMicroLocationModelTable::getMostRecentModelByClientIdAndLocation(const std::string &, boost::uuids::uuid)", "%s\n", (const char *)v26);
    if (v26 != &v31) {
      free(v26);
    }
  }
  *a5 = 0;
  a5[280] = 0;
}

void sub_10033B3A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44)
{
}

void sub_10033B49C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  v37[0] = a3;
  v37[1] = a4;
  if (*(unsigned char *)(a1 + 8))
  {
    if (!(_BYTE)a3)
    {
      uint64_t v8 = 1;
      do
      {
        if (v8 == 16) {
          goto LABEL_38;
        }
      }
      while (!*((unsigned __int8 *)v37 + v8++));
      if ((unint64_t)(v8 - 2) >= 0xF)
      {
LABEL_38:
        sub_101A5D2DC();
        __break(1u);
      }
    }
    *((unsigned char *)&v29.__r_.__value_.__s + 23) = 6;
    strcpy((char *)&v29, "WHERE ");
    uint64_t v10 = std::string::append(&v29, "ClientID");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    int v12 = std::string::append(&v30, "= \"");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    int v14 = *(char *)(a2 + 23);
    if (v14 >= 0) {
      char v15 = (const std::string::value_type *)a2;
    }
    else {
      char v15 = *(const std::string::value_type **)a2;
    }
    if (v14 >= 0) {
      std::string::size_type v16 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::string::size_type v16 = *(void *)(a2 + 8);
    }
    long long v17 = std::string::append(&v31, v15, v16);
    long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    BOOL v19 = std::string::append(&v32, "\"");
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v33.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    char v21 = std::string::append(&v33, " AND ");
    long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    size_t v23 = std::string::append(&v34, "LoiGroupId");
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v36.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    int v25 = std::string::append(&v36, "= \"\"");
    long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    v35[2] = (void *)v25->__r_.__value_.__r.__words[2];
    *(_OWORD *)BOOL v35 = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v36.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v34.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v33.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v32.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v31.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v30.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v29.__r_.__value_.__l.__data_);
    }
    sub_100339B00(*(void *)a1, (uint64_t)v35, 1u);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6F60);
  }
  std::string v27 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v36.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't get the most recent mode of client", (uint8_t *)&v36, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v36, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6F60);
    }
    LOWORD(v35[0]) = 0;
    std::string v28 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::optional<CLMicroLocationModelTable::Entry> CLMicroLocationModelTable::getTransitionModelForClientAtLoi(const std::string &, boost::uuids::uuid)", "%s\n", (const char *)v28);
    if (v28 != &v36) {
      free(v28);
    }
  }
  *a5 = 0;
  a5[280] = 0;
}

void sub_10033B8E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42)
{
  a42 = &a31;
  sub_1002898E8((void ***)&a42);
  if (a40 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10033B9D0(uint64_t a1@<X0>, unsigned int a2@<W1>, void *a3@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    long long v32 = 0uLL;
    uint64_t v33 = 0;
    *((unsigned char *)&v26.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&v26, "SELECT ");
    long long v6 = std::string::append(&v26, "ModelUUID");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v27.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    uint64_t v8 = std::string::append(&v27, ",");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    uint64_t v10 = std::string::append(&v34, "ClientID");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v28.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    int v12 = std::string::append(&v28, " FROM ");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v29.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    int v14 = std::string::append(&v29, "MicroLocationModels");
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v36.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v16 = std::string::append(&v36, " LIMIT ");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v35.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v25, a2);
    if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v18 = &v25;
    }
    else {
      long long v18 = (std::string *)v25.__r_.__value_.__r.__words[0];
    }
    if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v25.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v25.__r_.__value_.__l.__size_;
    }
    long long v20 = std::string::append(&v35, (const std::string::value_type *)v18, size);
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    int64_t v31 = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string v30 = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v25.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v35.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v36.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v29.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v28.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v34.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v27.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v26.__r_.__value_.__l.__data_);
    }
    if (v31 >= 0) {
      long long v22 = v30;
    }
    else {
      long long v22 = (void **)v30[0];
    }
    sub_10014D518(*(void *)a1, (uint64_t)v22);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6F60);
  }
  size_t v23 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v35.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all Model IDs, Client IDs", (uint8_t *)&v35, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v35, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6F60);
    }
    LOWORD(v36.__r_.__value_.__l.__data_) = 0;
    long long v24 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<std::pair<std::string, std::string>> CLMicroLocationModelTable::selectAllModelIdsClientIds(uint32_t)", "%s\n", (const char *)v24);
    if (v24 != &v35) {
      free(v24);
    }
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
}

void sub_10033BEF8(_Unwind_Exception *a1)
{
}

uint64_t sub_10033C274(uint64_t *a1, long long *a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = a1 + 2;
  unint64_t v5 = v6;
  unint64_t v7 = *(v4 - 1);
  if (v7 >= v6)
  {
    unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - *a1) >> 4);
    unint64_t v12 = v11 + 1;
    if (v11 + 1 > 0x555555555555555) {
      sub_1001D7FD4();
    }
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a1) >> 4);
    if (2 * v13 > v12) {
      unint64_t v12 = 2 * v13;
    }
    if (v13 >= 0x2AAAAAAAAAAAAAALL) {
      unint64_t v14 = 0x555555555555555;
    }
    else {
      unint64_t v14 = v12;
    }
    v20[4] = v4;
    if (v14) {
      long long v15 = (char *)sub_10014F86C((uint64_t)v4, v14);
    }
    else {
      long long v15 = 0;
    }
    std::string::size_type v16 = &v15[48 * v11];
    v20[0] = v15;
    v20[1] = v16;
    v20[3] = &v15[48 * v14];
    long long v17 = *a2;
    *((void *)v16 + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string::size_type v16 = v17;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v18 = *(long long *)((char *)a2 + 24);
    *((void *)v16 + 5) = *((void *)a2 + 5);
    *(_OWORD *)(v16 + 24) = v18;
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 3) = 0;
    void v20[2] = v16 + 48;
    sub_100340FD8(a1, v20);
    uint64_t v10 = a1[1];
    sub_100341194(v20);
  }
  else
  {
    long long v8 = *a2;
    *(void *)(v7 + 16) = *((void *)a2 + 2);
    *(_OWORD *)unint64_t v7 = v8;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v9 = *(long long *)((char *)a2 + 24);
    *(void *)(v7 + 40) = *((void *)a2 + 5);
    *(_OWORD *)(v7 + 24) = v9;
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 3) = 0;
    uint64_t v10 = v7 + 48;
    a1[1] = v7 + 48;
  }
  a1[1] = v10;
  return v10 - 48;
}

void sub_10033C3D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100341194((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10033C3E4(uint64_t a1, unsigned int a2, unsigned int a3)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6F60);
    }
    uint64_t v4 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEBUG))
    {
      LODWORD(buf[0].__r_.__value_.__l.__data_) = 67240448;
      HIDWORD(buf[0].__r_.__value_.__r.__words[0]) = a3;
      LOWORD(buf[0].__r_.__value_.__r.__words[1]) = 1026;
      *(_DWORD *)((char *)&buf[0].__r_.__value_.__r.__words[1] + 2) = a2;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Keeping %{public}d models for LSL models, %{public}d models per other types", (uint8_t *)buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6F60);
      }
      LODWORD(__p[0]) = 67240448;
      HIDWORD(__p[0]) = a3;
      LOWORD(__p[1]) = 1026;
      *(_DWORD *)((char *)&__p[1] + 2) = a2;
      uint64_t v61 = (std::string *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationModelTable::deleteUnneededModels(uint32_t, uint32_t)", "%s\n", (const char *)v61);
      if (v61 != buf) {
        free(v61);
      }
    }
    char v5 = sub_10033D150((uint64_t *)a1);
    for (int i = 0; i != 4; ++i)
    {
      *((unsigned char *)&v68.__r_.__value_.__s + 23) = 12;
      if (i == 2) {
        unsigned int v7 = a3;
      }
      else {
        unsigned int v7 = a2;
      }
      strcpy((char *)&v68, "DELETE FROM ");
      long long v8 = std::string::append(&v68, "MicroLocationModels");
      long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
      v69.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v69.__r_.__value_.__l.__data_ = v9;
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      v8->__r_.__value_.__r.__words[0] = 0;
      uint64_t v10 = std::string::append(&v69, " WHERE ");
      long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
      v70.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v70.__r_.__value_.__l.__data_ = v11;
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      v10->__r_.__value_.__r.__words[0] = 0;
      unint64_t v12 = std::string::append(&v70, "ModelType");
      long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
      v71.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v71.__r_.__value_.__l.__data_ = v13;
      v12->__r_.__value_.__l.__size_ = 0;
      v12->__r_.__value_.__r.__words[2] = 0;
      v12->__r_.__value_.__r.__words[0] = 0;
      unint64_t v14 = std::string::append(&v71, "=");
      long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
      v72.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v72.__r_.__value_.__l.__data_ = v15;
      v14->__r_.__value_.__l.__size_ = 0;
      v14->__r_.__value_.__r.__words[2] = 0;
      v14->__r_.__value_.__r.__words[0] = 0;
      std::to_string(&v67, i);
      if ((v67.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v16 = &v67;
      }
      else {
        std::string::size_type v16 = (std::string *)v67.__r_.__value_.__r.__words[0];
      }
      if ((v67.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v67.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v67.__r_.__value_.__l.__size_;
      }
      long long v18 = std::string::append(&v72, (const std::string::value_type *)v16, size);
      long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
      v73.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v73.__r_.__value_.__l.__data_ = v19;
      v18->__r_.__value_.__l.__size_ = 0;
      v18->__r_.__value_.__r.__words[2] = 0;
      v18->__r_.__value_.__r.__words[0] = 0;
      long long v20 = std::string::append(&v73, " AND ");
      long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
      v74.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v74.__r_.__value_.__l.__data_ = v21;
      v20->__r_.__value_.__l.__size_ = 0;
      v20->__r_.__value_.__r.__words[2] = 0;
      v20->__r_.__value_.__r.__words[0] = 0;
      long long v22 = std::string::append(&v74, "ModelUUID");
      long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
      v75.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v75.__r_.__value_.__l.__data_ = v23;
      v22->__r_.__value_.__l.__size_ = 0;
      v22->__r_.__value_.__r.__words[2] = 0;
      v22->__r_.__value_.__r.__words[0] = 0;
      long long v24 = std::string::append(&v75, " NOT IN (");
      long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
      v76.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v76.__r_.__value_.__l.__data_ = v25;
      v24->__r_.__value_.__l.__size_ = 0;
      v24->__r_.__value_.__r.__words[2] = 0;
      v24->__r_.__value_.__r.__words[0] = 0;
      std::string v26 = std::string::append(&v76, " SELECT ");
      long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
      v77.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v27;
      v26->__r_.__value_.__l.__size_ = 0;
      v26->__r_.__value_.__r.__words[2] = 0;
      v26->__r_.__value_.__r.__words[0] = 0;
      std::string v28 = std::string::append(&v77, "ModelUUID");
      long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      v78.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      std::string v30 = std::string::append(&v78, " FROM ");
      long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
      v79.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v31;
      v30->__r_.__value_.__l.__size_ = 0;
      v30->__r_.__value_.__r.__words[2] = 0;
      v30->__r_.__value_.__r.__words[0] = 0;
      long long v32 = std::string::append(&v79, "MicroLocationModels");
      long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
      v80.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v80.__r_.__value_.__l.__data_ = v33;
      v32->__r_.__value_.__l.__size_ = 0;
      v32->__r_.__value_.__r.__words[2] = 0;
      v32->__r_.__value_.__r.__words[0] = 0;
      std::string v34 = std::string::append(&v80, " WHERE ");
      long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
      v81.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v35;
      v34->__r_.__value_.__l.__size_ = 0;
      v34->__r_.__value_.__r.__words[2] = 0;
      v34->__r_.__value_.__r.__words[0] = 0;
      std::string v36 = std::string::append(&v81, "ModelType");
      long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
      v82.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v82.__r_.__value_.__l.__data_ = v37;
      v36->__r_.__value_.__l.__size_ = 0;
      v36->__r_.__value_.__r.__words[2] = 0;
      v36->__r_.__value_.__r.__words[0] = 0;
      std::string::size_type v38 = std::string::append(&v82, "=");
      long long v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
      v83.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v83.__r_.__value_.__l.__data_ = v39;
      v38->__r_.__value_.__l.__size_ = 0;
      v38->__r_.__value_.__r.__words[2] = 0;
      v38->__r_.__value_.__r.__words[0] = 0;
      std::to_string(&v66, i);
      if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string v40 = &v66;
      }
      else {
        std::string v40 = (std::string *)v66.__r_.__value_.__r.__words[0];
      }
      if ((v66.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v41 = HIBYTE(v66.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v41 = v66.__r_.__value_.__l.__size_;
      }
      std::string v42 = std::string::append(&v83, (const std::string::value_type *)v40, v41);
      long long v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
      v84.__r_.__value_.__r.__words[2] = v42->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v84.__r_.__value_.__l.__data_ = v43;
      v42->__r_.__value_.__l.__size_ = 0;
      v42->__r_.__value_.__r.__words[2] = 0;
      v42->__r_.__value_.__r.__words[0] = 0;
      std::string v44 = std::string::append(&v84, " ORDER BY ");
      long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
      v85.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v85.__r_.__value_.__l.__data_ = v45;
      v44->__r_.__value_.__l.__size_ = 0;
      v44->__r_.__value_.__r.__words[2] = 0;
      v44->__r_.__value_.__r.__words[0] = 0;
      std::string v46 = std::string::append(&v85, "GenerationTimestamp");
      long long v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
      v86.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v86.__r_.__value_.__l.__data_ = v47;
      v46->__r_.__value_.__l.__size_ = 0;
      v46->__r_.__value_.__r.__words[2] = 0;
      v46->__r_.__value_.__r.__words[0] = 0;
      std::string v48 = std::string::append(&v86, " DESC ");
      long long v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
      v87.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v87.__r_.__value_.__l.__data_ = v49;
      v48->__r_.__value_.__l.__size_ = 0;
      v48->__r_.__value_.__r.__words[2] = 0;
      v48->__r_.__value_.__r.__words[0] = 0;
      std::string v50 = std::string::append(&v87, " LIMIT ");
      long long v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
      v88.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v51;
      v50->__r_.__value_.__l.__size_ = 0;
      v50->__r_.__value_.__r.__words[2] = 0;
      v50->__r_.__value_.__r.__words[0] = 0;
      std::to_string(&v65, v7);
      if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string v52 = &v65;
      }
      else {
        std::string v52 = (std::string *)v65.__r_.__value_.__r.__words[0];
      }
      if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v53 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v53 = v65.__r_.__value_.__l.__size_;
      }
      int64_t v54 = std::string::append(&v88, (const std::string::value_type *)v52, v53);
      long long v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      buf[0].__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&buf[0].__r_.__value_.__l.__data_ = v55;
      v54->__r_.__value_.__l.__size_ = 0;
      v54->__r_.__value_.__r.__words[2] = 0;
      v54->__r_.__value_.__r.__words[0] = 0;
      std::string v56 = std::string::append(buf, ")");
      long long v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
      int64_t v90 = v56->__r_.__value_.__r.__words[2];
      *(_OWORD *)std::string __p = v57;
      v56->__r_.__value_.__l.__size_ = 0;
      v56->__r_.__value_.__r.__words[2] = 0;
      v56->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(buf[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(buf[0].__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v65.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v88.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v87.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v86.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v85.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v84.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v66.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v83.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v83.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v82.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v81.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v80.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v79.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v78.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v77.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v76.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v75.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v74.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v73.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v67.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v67.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v72.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v71.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v70.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v69.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v69.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v68.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v68.__r_.__value_.__l.__data_);
        if (v5)
        {
LABEL_79:
          if (v90 >= 0) {
            uint64_t v58 = __p;
          }
          else {
            uint64_t v58 = (void **)__p[0];
          }
          sub_10014D518(*(void *)a1, (uint64_t)v58);
        }
      }
      else if (v5)
      {
        goto LABEL_79;
      }
      char v5 = 0;
      if (SHIBYTE(v90) < 0) {
        operator delete(__p[0]);
      }
    }
  }
  else
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6F60);
    }
    std::string v59 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf[0].__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v59, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't deleteUnneededModels()", (uint8_t *)buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6F60);
      }
      LOWORD(__p[0]) = 0;
      unsigned int v62 = (std::string *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationModelTable::deleteUnneededModels(uint32_t, uint32_t)", "%s\n", (const char *)v62);
      if (v62 != buf) {
        free(v62);
      }
    }
  }
  return 0;
}

void sub_10033CEA0(_Unwind_Exception *a1)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete((void *)STACK[0x300]);
  }
  _Unwind_Resume(a1);
}

void sub_10033D0D0()
{
}

void sub_10033D0D8()
{
}

void sub_10033D0E0()
{
}

void sub_10033D0E8()
{
}

void sub_10033D0F0()
{
}

void sub_10033D0F8()
{
}

void sub_10033D100()
{
}

void sub_10033D108()
{
}

void sub_10033D110()
{
}

void sub_10033D118()
{
}

void sub_10033D120()
{
}

void sub_10033D128()
{
}

void sub_10033D130()
{
}

void sub_10033D138()
{
}

void sub_10033D140()
{
}

void sub_10033D148()
{
}

uint64_t sub_10033D150(uint64_t *a1)
{
  sub_1000C7F88(&buf);
  LODWORD(v81.__r_.__value_.__l.__data_) = 0;
  CFStringRef v2 = CFStringCreateWithCStringNoCopy(0, "MicroLocationsDatabaseSelectionLimit", 0x8000100u, kCFAllocatorNull);
  int v3 = sub_1004D08E4((uint64_t)buf.__r_.__value_.__l.__data_, (uint64_t)v2, &v81);
  CFRelease(v2);
  unsigned int data = v81.__r_.__value_.__l.__data_;
  if (buf.__r_.__value_.__l.__size_) {
    sub_1000DB0A0((std::__shared_weak_count *)buf.__r_.__value_.__l.__size_);
  }
  if (v3) {
    unsigned int v5 = data;
  }
  else {
    unsigned int v5 = 5000;
  }
  memset(&v75, 0, sizeof(v75));
  uint64_t v72 = 0;
  uint64_t v73 = 0;
  uint64_t v74 = 0;
  uint64_t v69 = 0;
  uint64_t v70 = 0;
  uint64_t v71 = 0;
  memset(&v68, 0, sizeof(v68));
  sub_10033B9D0((uint64_t)a1, v5, &buf);
  sub_100341210((void **)&v75.__r_.__value_.__l.__data_);
  std::string v75 = buf;
  memset(&buf, 0, sizeof(buf));
  v81.__r_.__value_.__r.__words[0] = (std::string::size_type)&buf;
  sub_100340F40((void ***)&v81);
  std::string::size_type size = v75.__r_.__value_.__l.__size_;
  for (std::string::size_type i = v75.__r_.__value_.__r.__words[0]; i != size; i += 48)
  {
    sub_10023983C((const std::string *)(i + 24), &v81);
    if (v82)
    {
      sub_100340A70((char *)&buf, (long long *)i, (long long *)&v81);
      sub_10033C274(&v72, (long long *)&buf);
      if (v80 < 0) {
        operator delete(__p);
      }
      if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(buf.__r_.__value_.__l.__data_);
      }
      if (v82)
      {
        if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v81.__r_.__value_.__l.__data_);
        }
      }
    }
  }
  if (v72 != v73)
  {
    sub_10033DE70((uint64_t)a1, v5, &buf);
    sub_100314FE8((uint64_t *)&v68);
    std::string v68 = buf;
    memset(&buf, 0, sizeof(buf));
    v81.__r_.__value_.__r.__words[0] = (std::string::size_type)&buf;
    sub_1000A7B4C((void ***)&v81);
    uint64_t v8 = v72;
    uint64_t v9 = v73;
    v81.__r_.__value_.__r.__words[0] = (std::string::size_type)&v69;
    while (v8 != v9)
    {
      uint64_t v10 = sub_1000A7C40((uint64_t)v68.__r_.__value_.__l.__data_, v68.__r_.__value_.__l.__size_, (unsigned __int8 **)(v8 + 24));
      if (v10 == v68.__r_.__value_.__l.__size_) {
        sub_100341280((uint64_t **)&v81, (long long *)v8);
      }
      v8 += 48;
    }
  }
  if (v69 != v70)
  {
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6F60);
    }
    long long v11 = qword_102419458;
    if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(buf.__r_.__value_.__l.__data_) = 134217984;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = 0xAAAAAAAAAAAAAAABLL * ((v70 - v69) >> 4);
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Deleting %ld models which refer to deleted services", (uint8_t *)&buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(&buf, 0x65CuLL);
      if (qword_102419450 != -1) {
        dispatch_once(&qword_102419450, &stru_1022A6F60);
      }
      LODWORD(v81.__r_.__value_.__l.__data_) = 134217984;
      *(std::string::size_type *)((char *)v81.__r_.__value_.__r.__words + 4) = 0xAAAAAAAAAAAAAAABLL * ((v70 - v69) >> 4);
      int64_t v60 = (std::string *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationModelTable::deleteAllModelsOfDeletedServices()", "%s\n", (const char *)v60);
      if (v60 != &buf) {
        free(v60);
      }
    }
    *((unsigned char *)&v81.__r_.__value_.__s + 23) = 1;
    LOWORD(v81.__r_.__value_.__l.__data_) = 34;
    int v12 = *(char *)(v69 + 23);
    if (v12 >= 0) {
      long long v13 = (const std::string::value_type *)v69;
    }
    else {
      long long v13 = *(const std::string::value_type **)v69;
    }
    if (v12 >= 0) {
      std::string::size_type v14 = *(unsigned __int8 *)(v69 + 23);
    }
    else {
      std::string::size_type v14 = *(void *)(v69 + 8);
    }
    long long v15 = std::string::append(&v81, v13, v14);
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    buf.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    long long v17 = std::string::append(&buf, "\"");
    long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v67.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v67.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v81.__r_.__value_.__l.__data_);
    }
    uint64_t v19 = v70;
    for (uint64_t j = v69 + 48; j != v19; j += 48)
    {
      *((unsigned char *)&v76.__r_.__value_.__s + 23) = 1;
      LOWORD(v76.__r_.__value_.__l.__data_) = 44;
      long long v21 = std::string::append(&v76, "\"");
      long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
      v77.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v22;
      v21->__r_.__value_.__l.__size_ = 0;
      v21->__r_.__value_.__r.__words[2] = 0;
      v21->__r_.__value_.__r.__words[0] = 0;
      int v23 = *(char *)(j + 23);
      if (v23 >= 0) {
        long long v24 = (const std::string::value_type *)j;
      }
      else {
        long long v24 = *(const std::string::value_type **)j;
      }
      if (v23 >= 0) {
        std::string::size_type v25 = *(unsigned __int8 *)(j + 23);
      }
      else {
        std::string::size_type v25 = *(void *)(j + 8);
      }
      std::string v26 = std::string::append(&v77, v24, v25);
      long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
      v81.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v27;
      v26->__r_.__value_.__l.__size_ = 0;
      v26->__r_.__value_.__r.__words[2] = 0;
      v26->__r_.__value_.__r.__words[0] = 0;
      std::string v28 = std::string::append(&v81, "\"");
      long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      buf.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
      *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_std::string buf = &buf;
      }
      else {
        p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
      }
      if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v31 = HIBYTE(buf.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v31 = buf.__r_.__value_.__l.__size_;
      }
      std::string::append(&v67, (const std::string::value_type *)p_buf, v31);
      if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(buf.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v81.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v77.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v76.__r_.__value_.__l.__data_);
      }
    }
    *((unsigned char *)&v62.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&v62, " WHERE ");
    long long v32 = std::string::append(&v62, "ModelUUID");
    long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
    v63.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v63.__r_.__value_.__l.__data_ = v33;
    v32->__r_.__value_.__l.__size_ = 0;
    v32->__r_.__value_.__r.__words[2] = 0;
    v32->__r_.__value_.__r.__words[0] = 0;
    std::string v34 = std::string::append(&v63, " in ");
    long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
    v64.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v64.__r_.__value_.__l.__data_ = v35;
    v34->__r_.__value_.__l.__size_ = 0;
    v34->__r_.__value_.__r.__words[2] = 0;
    v34->__r_.__value_.__r.__words[0] = 0;
    std::string v36 = std::string::append(&v64, "(");
    long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
    v65.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v65.__r_.__value_.__l.__data_ = v37;
    v36->__r_.__value_.__l.__size_ = 0;
    v36->__r_.__value_.__r.__words[2] = 0;
    v36->__r_.__value_.__r.__words[0] = 0;
    if ((v67.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v38 = &v67;
    }
    else {
      std::string::size_type v38 = (std::string *)v67.__r_.__value_.__r.__words[0];
    }
    if ((v67.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v39 = HIBYTE(v67.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v39 = v67.__r_.__value_.__l.__size_;
    }
    std::string v40 = std::string::append(&v65, (const std::string::value_type *)v38, v39);
    long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
    v66.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v66.__r_.__value_.__l.__data_ = v41;
    v40->__r_.__value_.__l.__size_ = 0;
    v40->__r_.__value_.__r.__words[2] = 0;
    v40->__r_.__value_.__r.__words[0] = 0;
    std::string v42 = std::string::append(&v66, ") AND ");
    long long v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
    v76.__r_.__value_.__r.__words[2] = v42->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v76.__r_.__value_.__l.__data_ = v43;
    v42->__r_.__value_.__l.__size_ = 0;
    v42->__r_.__value_.__r.__words[2] = 0;
    v42->__r_.__value_.__r.__words[0] = 0;
    std::string v44 = std::string::append(&v76, "ModelType");
    long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
    v77.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v45;
    v44->__r_.__value_.__l.__size_ = 0;
    v44->__r_.__value_.__r.__words[2] = 0;
    v44->__r_.__value_.__r.__words[0] = 0;
    std::string v46 = std::string::append(&v77, "!=");
    long long v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
    buf.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
    *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v47;
    v46->__r_.__value_.__l.__size_ = 0;
    v46->__r_.__value_.__r.__words[2] = 0;
    v46->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v61, 0);
    if ((v61.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string v48 = &v61;
    }
    else {
      std::string v48 = (std::string *)v61.__r_.__value_.__r.__words[0];
    }
    if ((v61.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v49 = HIBYTE(v61.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v49 = v61.__r_.__value_.__l.__size_;
    }
    std::string v50 = std::string::append(&buf, (const std::string::value_type *)v48, v49);
    long long v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
    v81.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v81.__r_.__value_.__l.__data_ = v51;
    v50->__r_.__value_.__l.__size_ = 0;
    v50->__r_.__value_.__r.__words[2] = 0;
    v50->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v61.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v77.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v77.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v76.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v66.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v66.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v65.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v64.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v64.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v63.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v62.__r_.__value_.__l.__data_);
    }
    *((unsigned char *)&v76.__r_.__value_.__s + 23) = 12;
    strcpy((char *)&v76, "DELETE FROM ");
    std::string v52 = std::string::append(&v76, "MicroLocationModels");
    long long v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
    buf.__r_.__value_.__r.__words[2] = v52->__r_.__value_.__r.__words[2];
    *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v53;
    v52->__r_.__value_.__l.__size_ = 0;
    v52->__r_.__value_.__r.__words[2] = 0;
    v52->__r_.__value_.__r.__words[0] = 0;
    if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int64_t v54 = &v81;
    }
    else {
      int64_t v54 = (std::string *)v81.__r_.__value_.__r.__words[0];
    }
    if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v55 = HIBYTE(v81.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v55 = v81.__r_.__value_.__l.__size_;
    }
    std::string v56 = std::string::append(&buf, (const std::string::value_type *)v54, v55);
    long long v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
    v77.__r_.__value_.__r.__words[2] = v56->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v57;
    v56->__r_.__value_.__l.__size_ = 0;
    v56->__r_.__value_.__r.__words[2] = 0;
    v56->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v76.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v76.__r_.__value_.__l.__data_);
    }
    if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v58 = &v77;
    }
    else {
      uint64_t v58 = (std::string *)v77.__r_.__value_.__r.__words[0];
    }
    sub_10014D518(*a1, (uint64_t)v58);
  }
  buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&v68;
  sub_1000A7B4C((void ***)&buf);
  buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&v69;
  sub_100340F40((void ***)&buf);
  buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&v72;
  sub_100340F40((void ***)&buf);
  buf.__r_.__value_.__r.__words[0] = (std::string::size_type)&v75;
  sub_100340F40((void ***)&buf);
  return 1;
}

void sub_10033DBD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,void *a54,uint64_t a55,uint64_t a56,uint64_t a57,void *__p,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  if (v65) {
    (*(void (**)(uint64_t))(*(void *)v65 + 8))(v65);
  }
  if (a63 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v66 - 105) < 0) {
    operator delete(*(void **)(v66 - 128));
  }
  if (a38 < 0) {
    operator delete(a33);
  }
  a65 = &a40;
  sub_1000A7B4C((void ***)&a65);
  a65 = &a44;
  sub_100340F40((void ***)&a65);
  a65 = &a47;
  sub_100340F40((void ***)&a65);
  a65 = &a50;
  sub_100340F40((void ***)&a65);
  _Unwind_Resume(a1);
}

void sub_10033DE70(uint64_t a1@<X0>, unsigned int a2@<W1>, void *a3@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    long long v25 = 0uLL;
    uint64_t v26 = 0;
    *((unsigned char *)&v22.__r_.__value_.__s + 23) = 16;
    strcpy((char *)&v22, "SELECT DISTINCT ");
    unint64_t v6 = std::string::append(&v22, "ServiceUUID");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v28.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    uint64_t v8 = std::string::append(&v28, " FROM ");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v29.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    uint64_t v10 = std::string::append(&v29, "MiLoServices");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v27.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    int v12 = std::string::append(&v27, " LIMIT ");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v21, a2);
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v14 = &v21;
    }
    else {
      std::string::size_type v14 = (std::string *)v21.__r_.__value_.__r.__words[0];
    }
    if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v21.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v21.__r_.__value_.__l.__size_;
    }
    long long v16 = std::string::append(&v30, (const std::string::value_type *)v14, size);
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    int64_t v24 = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v21.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v30.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v27.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v29.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v28.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
    if (v24 >= 0) {
      long long v18 = __p;
    }
    else {
      long long v18 = (void **)__p[0];
    }
    sub_10014D518(*(void *)a1, (uint64_t)v18);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6F60);
  }
  uint64_t v19 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v30.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select all Service UUIDs", (uint8_t *)&v30, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v30, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6F60);
    }
    LOWORD(v27.__r_.__value_.__l.__data_) = 0;
    long long v20 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<std::string> CLMicroLocationModelTable::getAllServicesUUIDs(uint32_t)", "%s\n", (const char *)v20);
    if (v20 != &v30) {
      free(v20);
    }
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
}

void sub_10033E3C8(_Unwind_Exception *a1)
{
}

uint64_t sub_10033E700(uint64_t a1, unint64_t a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    *((unsigned char *)&v37.__r_.__value_.__s + 23) = 12;
    strcpy((char *)&v37, "DELETE FROM ");
    uint64_t v4 = std::string::append(&v37, "MicroLocationModels");
    long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
    v38.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v5;
    v4->__r_.__value_.__l.__size_ = 0;
    v4->__r_.__value_.__r.__words[2] = 0;
    v4->__r_.__value_.__r.__words[0] = 0;
    unint64_t v6 = std::string::append(&v38, " WHERE ");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    uint64_t v8 = std::string::append(&v39, "ModelUUID");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v40.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    uint64_t v10 = std::string::append(&v40, " IN (");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v41.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v41.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    int v12 = std::string::append(&v41, "SELECT ");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v42.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v14 = std::string::append(&v42, "ModelUUID");
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    long long v16 = std::string::append(&v43, " FROM ");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    long long v18 = std::string::append(&v44, "MicroLocationModels");
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v45.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v45.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    long long v20 = std::string::append(&v45, " ORDER BY ");
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v46.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v46.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    std::string v22 = std::string::append(&v46, "GenerationTimestamp");
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    int64_t v24 = std::string::append(&v47, " LIMIT ");
    long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v36, a2);
    if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v26 = &v36;
    }
    else {
      uint64_t v26 = (std::string *)v36.__r_.__value_.__r.__words[0];
    }
    if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v36.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v36.__r_.__value_.__l.__size_;
    }
    std::string v28 = std::string::append(&v48, (const std::string::value_type *)v26, size);
    long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    std::string v30 = std::string::append(&v51, ")");
    long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
    int64_t v50 = v30->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v31;
    v30->__r_.__value_.__l.__size_ = 0;
    v30->__r_.__value_.__r.__words[2] = 0;
    v30->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v51.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v36.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v48.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v46.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v45.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v44.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v43.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v42.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v41.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v41.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v40.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v39.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v38.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v37.__r_.__value_.__l.__data_);
    }
    if (v50 >= 0) {
      long long v32 = __p;
    }
    else {
      long long v32 = (void **)__p[0];
    }
    sub_10014D518(*(void *)a1, (uint64_t)v32);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6F60);
  }
  long long v33 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v51.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't deleteOldestRows", (uint8_t *)&v51, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v51, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6F60);
    }
    LOWORD(__p[0]) = 0;
    long long v35 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationModelTable::deleteOldestRows(uint64_t)", "%s\n", (const char *)v35);
    if (v35 != &v51) {
      free(v35);
    }
  }
  return 0;
}

void sub_10033ED94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,uint64_t a43,uint64_t a44,void *a45,uint64_t a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,uint64_t a56,void *a57,uint64_t a58,uint64_t a59,uint64_t a60,void *__p,uint64_t a62,int a63)
{
  if (v66) {
    (*(void (**)(uint64_t))(*(void *)v66 + 8))(v66);
  }
  if (a66 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10033EF3C(uint64_t a1, uint64_t *a2)
{
  if (*(unsigned char *)(a1 + 8))
  {
    CFStringRef v2 = a2;
    uint64_t v3 = *a2;
    if (*a2 != a2[1])
    {
      *((unsigned char *)&v58.__r_.__value_.__s + 23) = 1;
      LOWORD(v58.__r_.__value_.__l.__data_) = 34;
      int v5 = *(char *)(v3 + 23);
      if (v5 >= 0) {
        unint64_t v6 = (const std::string::value_type *)v3;
      }
      else {
        unint64_t v6 = *(const std::string::value_type **)v3;
      }
      if (v5 >= 0) {
        std::string::size_type v7 = *(unsigned __int8 *)(v3 + 23);
      }
      else {
        std::string::size_type v7 = *(void *)(v3 + 8);
      }
      uint64_t v8 = std::string::append(&v58, v6, v7);
      long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
      v59.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v9;
      v8->__r_.__value_.__l.__size_ = 0;
      v8->__r_.__value_.__r.__words[2] = 0;
      v8->__r_.__value_.__r.__words[0] = 0;
      uint64_t v10 = std::string::append(&v59, "\"");
      long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
      v55.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v11;
      v10->__r_.__value_.__l.__size_ = 0;
      v10->__r_.__value_.__r.__words[2] = 0;
      v10->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v59.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v58.__r_.__value_.__l.__data_);
      }
      uint64_t v12 = v2[1];
      for (uint64_t i = *v2 + 24; i != v12; i += 24)
      {
        *((unsigned char *)&v56.__r_.__value_.__s + 23) = 1;
        LOWORD(v56.__r_.__value_.__l.__data_) = 44;
        std::string::size_type v14 = std::string::append(&v56, "\"");
        long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
        v57.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v15;
        v14->__r_.__value_.__l.__size_ = 0;
        v14->__r_.__value_.__r.__words[2] = 0;
        v14->__r_.__value_.__r.__words[0] = 0;
        int v16 = *(char *)(i + 23);
        if (v16 >= 0) {
          long long v17 = (const std::string::value_type *)i;
        }
        else {
          long long v17 = *(const std::string::value_type **)i;
        }
        if (v16 >= 0) {
          std::string::size_type v18 = *(unsigned __int8 *)(i + 23);
        }
        else {
          std::string::size_type v18 = *(void *)(i + 8);
        }
        long long v19 = std::string::append(&v57, v17, v18);
        long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
        v58.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v20;
        v19->__r_.__value_.__l.__size_ = 0;
        v19->__r_.__value_.__r.__words[2] = 0;
        v19->__r_.__value_.__r.__words[0] = 0;
        long long v21 = std::string::append(&v58, "\"");
        long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
        v59.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v22;
        v21->__r_.__value_.__l.__size_ = 0;
        v21->__r_.__value_.__r.__words[2] = 0;
        v21->__r_.__value_.__r.__words[0] = 0;
        if ((v59.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          long long v23 = &v59;
        }
        else {
          long long v23 = (std::string *)v59.__r_.__value_.__r.__words[0];
        }
        if ((v59.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(v59.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = v59.__r_.__value_.__l.__size_;
        }
        std::string::append(&v55, (const std::string::value_type *)v23, size);
        if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v59.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v58.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v57.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v56.__r_.__value_.__l.__data_);
        }
      }
      *((unsigned char *)&v51.__r_.__value_.__s + 23) = 12;
      strcpy((char *)&v51, "DELETE FROM ");
      long long v25 = std::string::append(&v51, "MicroLocationModels");
      long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
      v52.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v26;
      v25->__r_.__value_.__l.__size_ = 0;
      v25->__r_.__value_.__r.__words[2] = 0;
      v25->__r_.__value_.__r.__words[0] = 0;
      std::string v27 = std::string::append(&v52, " WHERE ");
      long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
      v53.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v28;
      v27->__r_.__value_.__l.__size_ = 0;
      v27->__r_.__value_.__r.__words[2] = 0;
      v27->__r_.__value_.__r.__words[0] = 0;
      long long v29 = std::string::append(&v53, "ClientID");
      long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
      v54.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v30;
      v29->__r_.__value_.__l.__size_ = 0;
      v29->__r_.__value_.__r.__words[2] = 0;
      v29->__r_.__value_.__r.__words[0] = 0;
      char v50 = 4;
      strcpy(__s, " IN ");
      long long v31 = std::string::append(&v54, __s, 4uLL);
      long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
      v56.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v32;
      v31->__r_.__value_.__l.__size_ = 0;
      v31->__r_.__value_.__r.__words[2] = 0;
      v31->__r_.__value_.__r.__words[0] = 0;
      char v48 = 1;
      strcpy(v47, "(");
      long long v33 = std::string::append(&v56, v47, 1uLL);
      long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
      v57.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v34;
      v33->__r_.__value_.__l.__size_ = 0;
      v33->__r_.__value_.__r.__words[2] = 0;
      v33->__r_.__value_.__r.__words[0] = 0;
      if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        long long v35 = &v55;
      }
      else {
        long long v35 = (std::string *)v55.__r_.__value_.__r.__words[0];
      }
      if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v36 = HIBYTE(v55.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v36 = v55.__r_.__value_.__l.__size_;
      }
      std::string v37 = std::string::append(&v57, (const std::string::value_type *)v35, v36);
      long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
      v59.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v38;
      v37->__r_.__value_.__l.__size_ = 0;
      v37->__r_.__value_.__r.__words[2] = 0;
      v37->__r_.__value_.__r.__words[0] = 0;
      char v46 = 1;
      strcpy(v45, ")");
      std::string v39 = std::string::append(&v59, v45, 1uLL);
      long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
      v58.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v40;
      v39->__r_.__value_.__l.__size_ = 0;
      v39->__r_.__value_.__r.__words[2] = 0;
      v39->__r_.__value_.__r.__words[0] = 0;
      if (v46 < 0) {
        operator delete(*(void **)v45);
      }
      if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v59.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v57.__r_.__value_.__l.__data_);
      }
      if (v48 < 0) {
        operator delete(*(void **)v47);
      }
      if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v56.__r_.__value_.__l.__data_);
      }
      if (v50 < 0) {
        operator delete(*(void **)__s);
      }
      if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v54.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v53.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v52.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v51.__r_.__value_.__l.__data_);
      }
      if ((v58.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string v41 = &v58;
      }
      else {
        std::string v41 = (std::string *)v58.__r_.__value_.__r.__words[0];
      }
      sub_10014D518(*(void *)a1, (uint64_t)v41);
    }
    sub_101A5D44C();
    __break(1u);
  }
  else
  {
    CFStringRef v2 = &qword_102419000;
    if (qword_102419450 == -1) {
      goto LABEL_66;
    }
  }
  dispatch_once(&qword_102419450, &stru_1022A6F60);
LABEL_66:
  std::string v42 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v59.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't delete recording labels", (uint8_t *)&v59, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&v59, 0x65CuLL);
    if (v2[138] != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6F60);
    }
    LOWORD(v58.__r_.__value_.__l.__data_) = 0;
    std::string v44 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMicroLocationModelTable::deleteModelsForClients(const std::vector<std::string> &)", "%s\n", (const char *)v44);
    if (v44 != &v59) {
      free(v44);
    }
  }
  return 0;
}

void sub_10033F6A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,uint64_t a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  if (v55) {
    (*(void (**)(uint64_t))(*(void *)v55 + 8))(v55);
  }
  if (a55 < 0) {
    operator delete(__p);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  _Unwind_Resume(a1);
}

void sub_10033F868(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, void *a4@<X8>)
{
  if (*(unsigned char *)(a1 + 8))
  {
    long long v60 = 0uLL;
    uint64_t v61 = 0;
    *((unsigned char *)&v47.__r_.__value_.__s + 23) = 16;
    strcpy((char *)&v47, "SELECT DISTINCT ");
    uint64_t v8 = std::string::append(&v47, "LoiGroupId");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    char v46 = 6;
    strcpy(__s, " FROM ");
    uint64_t v10 = std::string::append(&v48, __s, 6uLL);
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    uint64_t v12 = std::string::append(&v49, "MicroLocationModels");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v14 = std::string::append(&v50, "    WHERE ");
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    int v16 = std::string::append(&v51, "ClientID");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v52.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v18 = std::string::append(&v52, " LIKE '%' || ");
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v53.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    long long v20 = std::string::append(&v53, "        (SELECT ");
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    v54.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    long long v22 = std::string::append(&v54, "ClientID");
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v55.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    int64_t v24 = std::string::append(&v55, " FROM ");
    long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
    v56.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v25;
    v24->__r_.__value_.__l.__size_ = 0;
    v24->__r_.__value_.__r.__words[2] = 0;
    v24->__r_.__value_.__r.__words[0] = 0;
    long long v26 = std::string::append(&v56, "MiLoServices");
    long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
    v57.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v27;
    v26->__r_.__value_.__l.__size_ = 0;
    v26->__r_.__value_.__r.__words[2] = 0;
    v26->__r_.__value_.__r.__words[0] = 0;
    long long v28 = std::string::append(&v57, " WHERE UserId==\"");
    long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v63.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v63.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    int v30 = *(char *)(a2 + 23);
    if (v30 >= 0) {
      long long v31 = (const std::string::value_type *)a2;
    }
    else {
      long long v31 = *(const std::string::value_type **)a2;
    }
    if (v30 >= 0) {
      std::string::size_type v32 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::string::size_type v32 = *(void *)(a2 + 8);
    }
    long long v33 = std::string::append(&v63, v31, v32);
    long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
    v62.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v62.__r_.__value_.__l.__data_ = v34;
    v33->__r_.__value_.__l.__size_ = 0;
    v33->__r_.__value_.__r.__words[2] = 0;
    v33->__r_.__value_.__r.__words[0] = 0;
    long long v35 = std::string::append(&v62, "\") || '%' LIMIT ");
    long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v36;
    v35->__r_.__value_.__l.__size_ = 0;
    v35->__r_.__value_.__r.__words[2] = 0;
    v35->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v44, a3);
    if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string v37 = &v44;
    }
    else {
      std::string v37 = (std::string *)v44.__r_.__value_.__r.__words[0];
    }
    if ((v44.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v44.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v44.__r_.__value_.__l.__size_;
    }
    std::string v39 = std::string::append(&__str, (const std::string::value_type *)v37, size);
    long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
    int64_t v59 = v39->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v40;
    v39->__r_.__value_.__l.__size_ = 0;
    v39->__r_.__value_.__r.__words[2] = 0;
    v39->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v44.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v62.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v63.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v63.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v57.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v56.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v55.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v54.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v53.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v52.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v51.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v50.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
    if (v46 < 0) {
      operator delete(*(void **)__s);
    }
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v48.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    if (v59 >= 0) {
      std::string v41 = __p;
    }
    else {
      std::string v41 = (void **)__p[0];
    }
    sub_10014D518(*(void *)a1, (uint64_t)v41);
  }
  if (qword_102419450 != -1) {
    dispatch_once(&qword_102419450, &stru_1022A6F60);
  }
  std::string v42 = qword_102419458;
  if (os_log_type_enabled((os_log_t)qword_102419458, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(__str.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_DEFAULT, "#Warning Table is not valid so we can't select GroupIDs for current user", (uint8_t *)&__str, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(&__str, 0x65CuLL);
    if (qword_102419450 != -1) {
      dispatch_once(&qword_102419450, &stru_1022A6F60);
    }
    LOWORD(v62.__r_.__value_.__l.__data_) = 0;
    std::string v43 = (std::string *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "std::vector<std::string> CLMicroLocationModelTable::selectLoiGroupIdsForCurrentUser(const std::string &, uint32_t)", "%s\n", (const char *)v43);
    if (v43 != &__str) {
      free(v43);
    }
  }
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
}

void sub_10033FFC4(_Unwind_Exception *a1)
{
}

void sub_1003403E0(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_100340410@<X0>(sqlite3_stmt *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sqlite3_column_blob(a1, a2);
  uint64_t v7 = sqlite3_column_bytes(a1, a2);
  if (!v6)
  {
    sub_101A5D5BC(v7);
LABEL_5:
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    sub_100134750(&v12, "Unable to parse protobuf");
    std::runtime_error::runtime_error(exception, &v12);
    exception->__vftable = (std::runtime_error_vtbl *)&off_10229F018;
  }
  int v8 = v7;
  sub_10023D838(a3);
  uint64_t result = wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(v9, v6, v8);
  if ((result & 1) == 0) {
    goto LABEL_5;
  }
  return result;
}

void sub_1003404F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v17 & 1) == 0)
    {
LABEL_6:
      sub_10024B47C(v15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v17)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v16);
  goto LABEL_6;
}

uint64_t sub_100340538(uint64_t *a1, uint64_t *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  unint64_t v7 = 0xAF8AF8AF8AF8AF8BLL * ((a1[1] - *a1) >> 3);
  unint64_t v8 = v7 + 1;
  if (v7 + 1 > 0xEA0EA0EA0EA0EALL) {
    sub_1001D7FD4();
  }
  if (0x5F15F15F15F15F16 * ((a1[2] - *a1) >> 3) > v8) {
    unint64_t v8 = 0x5F15F15F15F15F16 * ((a1[2] - *a1) >> 3);
  }
  if (0xAF8AF8AF8AF8AF8BLL * ((a1[2] - *a1) >> 3) >= 0x75075075075075) {
    unint64_t v14 = 0xEA0EA0EA0EA0EALL;
  }
  else {
    unint64_t v14 = v8;
  }
  long long v22 = a1 + 2;
  if (v14) {
    uint64_t v15 = (char *)sub_1003407E4((uint64_t)(a1 + 2), v14);
  }
  else {
    uint64_t v15 = 0;
  }
  std::string::size_type v18 = v15;
  long long v19 = &v15[280 * v7];
  long long v21 = &v15[280 * v14];
  sub_100340690((uint64_t)(a1 + 2), (uint64_t)v19, a2, a3, a4, a5, a6);
  long long v20 = v19 + 280;
  sub_10034076C(a1, &v18);
  uint64_t v16 = a1[1];
  sub_100340978(&v18);
  return v16;
}

void sub_10034067C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100340978((void **)va);
  _Unwind_Resume(a1);
}

void sub_100340690(uint64_t a1, uint64_t a2, uint64_t *a3, double *a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v10 = *a3;
  uint64_t v11 = a3[1];
  double v12 = *a4;
  if (*(char *)(a6 + 23) < 0)
  {
    sub_1000DC48C(__p, *(void **)a6, *(void *)(a6 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a6;
    uint64_t v14 = *(void *)(a6 + 16);
  }
  char v15 = 1;
  sub_100338B84(a2, v10, v11, a5, (uint64_t)__p, *a7, a7[1], v12);
  if (v15)
  {
    if (SHIBYTE(v14) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_100340748(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10034076C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_100340830((uint64_t)(a1 + 2), a1[1], (long long *)a1[1], *a1, (long long *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_1003407E4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xEA0EA0EA0EA0EBLL) {
    sub_1001D7FA0();
  }
  return operator new(280 * a2);
}

uint64_t sub_100340830(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, long long *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  char v13 = 0;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    long long v9 = a3;
    do
    {
      long long v9 = (long long *)((char *)v9 - 280);
      sub_1002896EC((_OWORD *)(v7 - 280), v9);
      uint64_t v7 = *((void *)&v15 + 1) - 280;
      *((void *)&v15 + 1) -= 280;
    }
    while (v9 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_1003408EC((uint64_t)v12);
  return v10;
}

void sub_1003408D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1003408EC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100340924((uint64_t *)a1);
  }
  return a1;
}

uint64_t *sub_100340924(uint64_t *result)
{
  uint64_t v1 = *(void *)(result[2] + 8);
  uint64_t v2 = *(void *)(result[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *result;
    do
    {
      uint64_t result = (uint64_t *)sub_10028989C(v3, v1);
      v1 += 280;
    }
    while (v1 != v2);
  }
  return result;
}

void **sub_100340978(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

uint64_t sub_1003409AC(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 8);
  uint64_t v1 = *(void *)(result + 16);
  if (v1 != v2)
  {
    uint64_t v3 = result;
    do
    {
      uint64_t v4 = *(void *)(v3 + 32);
      *(void *)(v3 + 16) = v1 - 280;
      uint64_t result = sub_10028989C(v4, v1 - 280);
      uint64_t v1 = *(void *)(v3 + 16);
    }
    while (v1 != v2);
  }
  return result;
}

uint64_t sub_1003409F4(uint64_t a1, long long *a2, long long *a3)
{
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  uint64_t v5 = a1 + 24;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000DC48C((unsigned char *)v5, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v6 = *a3;
    *(void *)(v5 + 16) = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v5 = v6;
  }
  return a1;
}

void sub_100340A54(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

char *sub_100340A70(char *__dst, long long *a2, long long *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000DC48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__dst = v5;
  }
  long long v6 = __dst + 24;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000DC48C(v6, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)long long v6 = v7;
  }
  return __dst;
}

void sub_100340AEC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

double sub_100340B08@<D0>(std::string *a1@<X8>)
{
  memset(&v3, 0, sizeof(v3));
  sub_100340B6C(&v3);
  double result = *(double *)&v3.__r_.__value_.__l.__data_;
  *a1 = v3;
  return result;
}

void sub_100340B50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100340B6C(std::string *a1)
{
  sub_100340BCC(a1);
  sub_100340CA0(a1);
  sub_100340D80(a1);
  sub_100340E60(a1);
  sub_1001E8488(a1);
  sub_1001E81E8(a1);

  return sub_10022CBA8(a1);
}

uint64_t sub_100340BCC(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 0;
  v7.__r_.__value_.__s.__data_[0] = 0;
  uint64_t v2 = std::string::append(&v7, "ModelUUID");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    long long v4 = __p;
  }
  else {
    long long v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_100340C6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100340CA0(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  uint64_t v2 = std::string::append(&v7, "GenerationTimestamp");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    long long v4 = __p;
  }
  else {
    long long v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_100340D4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100340D80(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  uint64_t v2 = std::string::append(&v7, "ModelType");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    long long v4 = __p;
  }
  else {
    long long v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_100340E2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100340E60(std::string *a1)
{
  *((unsigned char *)&v7.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v7, ", ");
  uint64_t v2 = std::string::append(&v7, "Model");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  int64_t v9 = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  if (v9 >= 0) {
    long long v4 = __p;
  }
  else {
    long long v4 = (void **)__p[0];
  }
  if (v9 >= 0) {
    std::string::size_type v5 = HIBYTE(v9);
  }
  else {
    std::string::size_type v5 = (std::string::size_type)__p[1];
  }
  std::string::append(a1, (const std::string::value_type *)v4, v5);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_100340F0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_100340F40(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    std::string::size_type v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 48;
        sub_10028B738((uint64_t)(v1 + 2), v4);
      }
      while ((void *)v4 != v2);
      std::string::size_type v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_100340FD8(uint64_t *a1, void *a2)
{
  uint64_t result = sub_100341050((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_100341050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  _DWORD v13[2] = &v16;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 48);
      *(void *)(v9 - 32) = *(void *)(a3 - 32);
      *(_OWORD *)(v9 - 48) = v10;
      *(void *)(a3 - 40) = 0;
      *(void *)(a3 - 32) = 0;
      *(void *)(a3 - 48) = 0;
      long long v11 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v11;
      v9 -= 48;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 48;
      a3 -= 48;
    }
    while (a3 != a5);
    *((void *)&v16 + 1) = v9;
  }
  char v14 = 1;
  sub_100341108((uint64_t)v13);
  return a6;
}

uint64_t sub_100341108(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100341140((uint64_t *)a1);
  }
  return a1;
}

void sub_100341140(uint64_t *a1)
{
  uint64_t v1 = *(void *)(a1[2] + 8);
  uint64_t v2 = *(void *)(a1[1] + 8);
  if (v1 != v2)
  {
    uint64_t v3 = *a1;
    do
    {
      sub_10028B738(v3, v1);
      v1 += 48;
    }
    while (v1 != v2);
  }
}

void **sub_100341194(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_1003411C8(void *a1)
{
  uint64_t v2 = a1[1];
  for (uint64_t i = a1[2]; i != v2; uint64_t i = a1[2])
  {
    uint64_t v4 = a1[4];
    a1[2] = i - 48;
    sub_10028B738(v4, i - 48);
  }
}

void sub_100341210(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    uint64_t v4 = *a1;
    if ((void *)v3 != v1)
    {
      do
      {
        v3 -= 48;
        sub_10028B738((uint64_t)(a1 + 2), v3);
      }
      while ((void *)v3 != v1);
      uint64_t v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t **sub_100341280(uint64_t **a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = (*a1)[1];
  if (v4 >= (*a1)[2])
  {
    uint64_t v5 = sub_1003412E4(*a1, a2);
  }
  else
  {
    sub_1003413EC((char *)(*a1)[1], a2);
    uint64_t v5 = v4 + 48;
    v3[1] = v4 + 48;
  }
  v3[1] = v5;
  return a1;
}

void sub_1003412DC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1003412E4(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 4);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x555555555555555) {
    sub_1001D7FD4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 4);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x2AAAAAAAAAAAAAALL) {
    unint64_t v9 = 0x555555555555555;
  }
  else {
    unint64_t v9 = v5;
  }
  int v17 = a1 + 2;
  if (v9) {
    long long v10 = (char *)sub_10014F86C(v7, v9);
  }
  else {
    long long v10 = 0;
  }
  char v13 = v10;
  char v14 = &v10[48 * v4];
  long long v16 = &v10[48 * v9];
  sub_1003413EC(v14, a2);
  long long v15 = v14 + 48;
  sub_100340FD8(a1, &v13);
  uint64_t v11 = a1[1];
  sub_100341194(&v13);
  return v11;
}

void sub_1003413D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100341194((void **)va);
  _Unwind_Resume(a1);
}

char *sub_1003413EC(char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000DC48C(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)__dst = v4;
  }
  unint64_t v5 = __dst + 24;
  if (*((char *)a2 + 47) < 0)
  {
    sub_1000DC48C(v5, *((void **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v6 = *(long long *)((char *)a2 + 24);
    *((void *)__dst + 5) = *((void *)a2 + 5);
    *(_OWORD *)unint64_t v5 = v6;
  }
  return __dst;
}

void sub_100341468(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100341484()
{
  v19.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x19uLL);
  *(_OWORD *)&v19.__r_.__value_.__r.__words[1] = xmmword_101D04970;
  strcpy(v19.__r_.__value_.__l.__data_, "INSERT OR REPLACE INTO ");
  CFStringRef v0 = std::string::append(&v19, "MicroLocationModels");
  long long v1 = *(_OWORD *)&v0->__r_.__value_.__l.__data_;
  v20.__r_.__value_.__r.__words[2] = v0->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v1;
  v0->__r_.__value_.__l.__size_ = 0;
  v0->__r_.__value_.__r.__words[2] = 0;
  v0->__r_.__value_.__r.__words[0] = 0;
  uint64_t v2 = std::string::append(&v20, " (");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  sub_1003389DC((uint64_t)v17);
  if ((v18 & 0x80u) == 0) {
    long long v4 = v17;
  }
  else {
    long long v4 = (void **)v17[0];
  }
  if ((v18 & 0x80u) == 0) {
    std::string::size_type v5 = v18;
  }
  else {
    std::string::size_type v5 = (std::string::size_type)v17[1];
  }
  long long v6 = std::string::append(&v21, (const std::string::value_type *)v4, v5);
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v22.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  unint64_t v8 = std::string::append(&v22, ") ");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  sub_100338AB0((uint64_t)__p);
  if ((v16 & 0x80u) == 0) {
    long long v10 = __p;
  }
  else {
    long long v10 = (void **)__p[0];
  }
  if ((v16 & 0x80u) == 0) {
    std::string::size_type v11 = v16;
  }
  else {
    std::string::size_type v11 = (std::string::size_type)__p[1];
  }
  double v12 = std::string::append(&v23, (const std::string::value_type *)v10, v11);
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  unk_10247A810 = *((void *)&v12->__r_.__value_.__l + 2);
  xmmword_10247A800 = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  if ((char)v16 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  if ((char)v18 < 0) {
    operator delete(v17[0]);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10247A800, (void *)&_mh_execute_header);
}

void sub_10034167C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v40 - 25) < 0) {
    operator delete(*(void **)(v40 - 48));
  }
  if (*(char *)(v40 - 57) < 0) {
    operator delete(*(void **)(v40 - 80));
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100341728(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  long long v4 = operator new(0xCuLL);
  *(void *)(a1 + 8) = v4 + 3;
  *(void *)(a1 + 16) = v4 + 3;
  *(void *)long long v4 = &_mh_execute_header;
  _DWORD v4[2] = 4;
  *(void *)a1 = v4;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  sub_100341F5C((void *)(a1 + 24), *a2, a2[1], 0x2E8BA2E8BA2E8BA3 * ((a2[1] - *a2) >> 3));
  *(_DWORD *)(a1 + 48) = 0;
  sub_1001EE1F4((int *)(a1 + 48));
  return a1;
}

void sub_1003417D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10029D4EC((void ***)va);
  long long v4 = *(void **)v2;
  if (*(void *)v2)
  {
    *(void *)(v2 + 8) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(a1);
}

BOOL sub_100341804(uint64_t a1, _DWORD *a2)
{
  int v2 = a2[20];
  if ((v2 & 0x200) == 0) {
    return 0;
  }
  std::string::size_type v5 = *(_DWORD **)a1;
  long long v4 = *(_DWORD **)(a1 + 8);
  if (*(_DWORD **)a1 != v4)
  {
    while (*v5 != a2[15])
    {
      if (++v5 == v4)
      {
        std::string::size_type v5 = *(_DWORD **)(a1 + 8);
        break;
      }
    }
  }
  BOOL result = 0;
  if ((v2 & 0x100) != 0 && v5 != v4) {
    return a2[14] == 0;
  }
  return result;
}

uint64_t sub_100341860(uint64_t a1)
{
  v3[0] = off_1022A7110;
  v3[1] = a1;
  v3[3] = v3;
  uint64_t v1 = sub_100341900(a1, (uint64_t)v3);
  sub_1003421A4(v3);
  return v1;
}

void sub_1003418EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003421A4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100341900(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v18 = 0;
  uint64_t v19 = 0;
  int v17 = (uint64_t *)&v18;
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v2 == v3)
  {
    long long v13 = 0;
    uint64_t v14 = 0;
  }
  else
  {
    ssize_t v5 = a1 + 48;
    do
    {
      uint64_t v6 = *(void *)(a2 + 24);
      if (!v6) {
        sub_10015E48C();
      }
      if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v6 + 48))(v6, v2))
      {
        if ((*(unsigned char *)(v2 + 81) & 8) != 0)
        {
          uint64_t v9 = *(void *)(v2 + 64);
          int v10 = *(char *)(v9 + 23);
          if (v10 >= 0) {
            std::string::size_type v11 = *(unsigned __int8 **)(v2 + 64);
          }
          else {
            std::string::size_type v11 = *(unsigned __int8 **)v9;
          }
          if (v10 >= 0) {
            uint64_t v12 = *(unsigned __int8 *)(v9 + 23);
          }
          else {
            uint64_t v12 = *(void *)(v9 + 8);
          }
          uint64_t v7 = sub_1001E70CC((uint64_t)&v16, v11, &v11[v12]);
        }
        else
        {
          uint64_t v7 = sub_1001EC8C4(v5);
        }
        *(void *)&long long v20 = v7;
        *((void *)&v20 + 1) = v8;
        sub_100342B48(&v17, (unint64_t *)&v20, &v20);
      }
      v2 += 88;
    }
    while (v2 != v3);
    long long v13 = v18;
    uint64_t v14 = v19;
  }
  sub_1000F5BB0((uint64_t)&v17, v13);
  return v14;
}

void sub_100341A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, void *a12)
{
}

uint64_t sub_100341A50(uint64_t a1)
{
  v3[0] = off_1022A71A0;
  v3[1] = a1;
  v3[3] = v3;
  uint64_t v1 = sub_100341900(a1, (uint64_t)v3);
  sub_1003421A4(v3);
  return v1;
}

void sub_100341ADC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003421A4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100341AF0(uint64_t a1)
{
  v3[0] = off_1022A7220;
  v3[1] = a1;
  v3[3] = v3;
  uint64_t v1 = sub_100341900(a1, (uint64_t)v3);
  sub_1003421A4(v3);
  return v1;
}

void sub_100341B7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003421A4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100341B90(uint64_t a1)
{
  v3[0] = off_1022A72A0;
  v3[1] = a1;
  v3[3] = v3;
  uint64_t v1 = sub_100341900(a1, (uint64_t)v3);
  sub_1003421A4(v3);
  return v1;
}

void sub_100341C1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003421A4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100341C30(uint64_t a1)
{
  v3[0] = off_1022A7320;
  v3[1] = a1;
  v3[3] = v3;
  uint64_t v1 = sub_100341900(a1, (uint64_t)v3);
  sub_1003421A4(v3);
  return v1;
}

void sub_100341CBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003421A4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100341CD0(uint64_t a1)
{
  v3[0] = off_1022A73A0;
  v3[1] = a1;
  v3[3] = v3;
  uint64_t v1 = sub_100341900(a1, (uint64_t)v3);
  sub_1003421A4(v3);
  return v1;
}

void sub_100341D5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003421A4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100341D70(uint64_t a1)
{
  v3[0] = off_1022A7420;
  v3[1] = a1;
  v3[3] = v3;
  uint64_t v1 = sub_100341900(a1, (uint64_t)v3);
  sub_1003421A4(v3);
  return v1;
}

void sub_100341DFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003421A4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100341E10(uint64_t a1, unsigned int a2)
{
  v4[0] = off_1022A74A0;
  v4[1] = a1;
  _DWORD v4[2] = a2;
  v4[3] = v4;
  uint64_t v2 = sub_100341900(a1, (uint64_t)v4);
  sub_1003421A4(v4);
  return v2;
}

void sub_100341EA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003421A4((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100341EB4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  v5[0] = off_1022A7520;
  v5[1] = a1;
  _DWORD v5[2] = a2 | (unint64_t)(a3 << 32);
  void v5[3] = v5;
  uint64_t v3 = sub_100341900(a1, (uint64_t)v5);
  sub_1003421A4(v5);
  return v3;
}

void sub_100341F48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003421A4((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_100341F5C(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_1000DA770(result, a4);
    BOOL result = (void *)sub_100341FE4((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_100341FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_10029D4EC(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100341FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_100267E74(a4 + v7, a2 + v7);
      v7 += 88;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_100342050(_Unwind_Exception *exception_object)
{
  if (v3) {
    sub_101A5D72C(v2, v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100342070()
{
}

void *sub_100342084(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *BOOL result = off_1022A7110;
  result[1] = v3;
  return result;
}

uint64_t sub_1003420CC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022A7110;
  a2[1] = v2;
  return result;
}

BOOL sub_1003420F8(uint64_t a1, _DWORD *a2)
{
  int v2 = a2[20];
  if ((v2 & 0x200) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v6 = *(_DWORD **)v4;
  ssize_t v5 = *(_DWORD **)(v4 + 8);
  if (v6 != v5)
  {
    while (*v6 != a2[15])
    {
      if (++v6 == v5)
      {
        uint64_t v6 = v5;
        break;
      }
    }
  }
  BOOL result = 0;
  if ((v2 & 0x100) != 0 && v6 != v5) {
    return a2[14] == 1;
  }
  return result;
}

uint64_t sub_100342158(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100342198()
{
}

void *sub_1003421A4(void *a1)
{
  int v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_10034222C()
{
}

void *sub_100342240(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *BOOL result = off_1022A71A0;
  result[1] = v3;
  return result;
}

uint64_t sub_100342288(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022A71A0;
  a2[1] = v2;
  return result;
}

BOOL sub_1003422B4(uint64_t a1, _DWORD *a2)
{
  return sub_100341804(*(void *)(a1 + 8), a2);
}

uint64_t sub_1003422BC(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_1003422FC()
{
}

void sub_10034230C()
{
}

void *sub_100342320(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *BOOL result = off_1022A7220;
  result[1] = v3;
  return result;
}

uint64_t sub_100342368(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022A7220;
  a2[1] = v2;
  return result;
}

BOOL sub_100342394(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_100341804(*(void *)(a1 + 8), (_DWORD *)a2);
  if (result) {
    return (*(unsigned char *)(a2 + 80) & 0x10) != 0 && sub_100232148(*(void *)(a2 + 32)) == 0;
  }
  return result;
}

uint64_t sub_1003423E0(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_100342420()
{
}

void sub_100342430()
{
}

void *sub_100342444(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *BOOL result = off_1022A72A0;
  result[1] = v3;
  return result;
}

uint64_t sub_10034248C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022A72A0;
  a2[1] = v2;
  return result;
}

BOOL sub_1003424B8(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_100341804(*(void *)(a1 + 8), (_DWORD *)a2);
  if (result) {
    return (*(unsigned char *)(a2 + 80) & 0x10) != 0
  }
        && !sub_100232148(*(void *)(a2 + 32))
        && *(_DWORD *)(a2 + 60) == 4;
  return result;
}

uint64_t sub_10034250C(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_10034254C()
{
}

void sub_10034255C()
{
}

void *sub_100342570(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *BOOL result = off_1022A7320;
  result[1] = v3;
  return result;
}

uint64_t sub_1003425B8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022A7320;
  a2[1] = v2;
  return result;
}

BOOL sub_1003425E4(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_100341804(*(void *)(a1 + 8), (_DWORD *)a2);
  if (result) {
    return (*(unsigned char *)(a2 + 80) & 0x10) != 0
  }
        && !sub_100232148(*(void *)(a2 + 32))
        && *(_DWORD *)(a2 + 60) != 4;
  return result;
}

uint64_t sub_100342638(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100342678()
{
}

void sub_100342688()
{
}

void *sub_10034269C(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *BOOL result = off_1022A73A0;
  result[1] = v3;
  return result;
}

uint64_t sub_1003426E4(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022A73A0;
  a2[1] = v2;
  return result;
}

BOOL sub_100342710(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_100341804(*(void *)(a1 + 8), (_DWORD *)a2);
  if (result) {
    return (*(unsigned char *)(a2 + 80) & 0x10) != 0 && sub_100232148(*(void *)(a2 + 32)) != 0;
  }
  return result;
}

uint64_t sub_10034275C(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_10034279C()
{
}

void sub_1003427AC()
{
}

void *sub_1003427C0(uint64_t a1)
{
  BOOL result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *BOOL result = off_1022A7420;
  result[1] = v3;
  return result;
}

uint64_t sub_100342808(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1022A7420;
  a2[1] = v2;
  return result;
}

BOOL sub_100342834(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_100341804(*(void *)(a1 + 8), (_DWORD *)a2);
  if (result) {
    return (*(unsigned char *)(a2 + 80) & 0x10) != 0 && sub_100232148(*(void *)(a2 + 32)) == 1;
  }
  return result;
}

uint64_t sub_100342880(uint64_t a1, uint64_t a2)
{
    return a1 + 8;
  else {
    return 0;
  }
}

_UNKNOWN **sub_1003428C0()
{
}

void sub_1003428D0()
{
}

__n128 sub_1003428E4(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = off_1022A74A0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_100342930(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022A74A0;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

BOOL sub_100342960(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_100341804(*(void *)(a1 + 8), (_DWORD *)a2);
  if (result) {
    return (*(unsigned char *)(a2 + 81) & 4) != 0 && *(_DWORD *)(a2 + 72) == *(_DWORD *)(a1 + 16);
  }
  return result;
}

uint64_t sub_1003429B0(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_1003429F0()
{
}

void sub_100342A00()
{
}

__n128 sub_100342A14(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = off_1022A7520;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_100342A60(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1022A7520;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

BOOL sub_100342A90(uint64_t a1, uint64_t a2)
{
  BOOL result = sub_100341804(*(void *)(a1 + 8), (_DWORD *)a2);
  if (result)
  {
    int v5 = *(_DWORD *)(a2 + 80);
    if ((v5 & 0x400) != 0)
    {
      BOOL result = 0;
      if ((v5 & 0x10) != 0 && *(_DWORD *)(a2 + 72) == *(_DWORD *)(a1 + 16)) {
        return sub_100232148(*(void *)(a2 + 32)) == *(_DWORD *)(a1 + 20);
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100342AFC(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_100342B3C()
{
}

char *sub_100342B48(uint64_t **a1, unint64_t *a2, _OWORD *a3)
{
  int v5 = (void **)sub_10027DBC4((uint64_t)a1, &v9, a2);
  uint64_t v6 = (char *)*v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    uint64_t v6 = (char *)operator new(0x30uLL);
    *(_OWORD *)(v6 + 25) = *a3;
    sub_1000EDF90(a1, v9, v7, (uint64_t *)v6);
  }
  return v6;
}

double sub_100342BCC(uint64_t a1, int a2)
{
  if (a2 >= 1) {
    sub_101A5D798();
  }
  uint64_t v4 = +[NSCalendar currentCalendar];
  id v5 = objc_alloc_init((Class)NSDateComponents);
  [v5 setDay:a2];
  CFDateRef v6 = [(NSCalendar *)v4 dateByAddingComponents:v5 toDate:a1 options:0];

  return CFDateGetAbsoluteTime(v6);
}

void sub_100342C5C(id a1)
{
  qword_102419458 = (uint64_t)os_log_create("com.apple.locationd.Position", "Microlocation");
}

uint64_t sub_100342C8C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100346AD4(v0, qword_10247A820);
  sub_10034696C(v0, (uint64_t)qword_10247A820);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100342D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;
  ObjCClassMetaunsigned int data = swift_getObjCClassMetadata();
  LOBYTE(a7) = a7(v8, v10, v11, v13, v14, v16, ObjCClassMetadata);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a7 & 1;
}

uint64_t sub_100342E28(uint64_t a1, unint64_t a2)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x100342F80);
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if (v4 > 27)
      {
        sub_1003469E8(a1, a2);
        sub_100343170(a1, a2);
        AES.GCM.SealedBox.init(combined:)();
        return sub_100346900(a1, a2);
      }
      else
      {
LABEL_7:
        uint64_t v8 = type metadata accessor for CryptoKitError();
        sub_100346C50(&qword_102419D58, (void (*)(uint64_t))&type metadata accessor for CryptoKitError);
        swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for CryptoKitError.incorrectParameterSize(_:), v8);
        swift_willThrow();
        return sub_100346900(a1, a2);
      }
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

Class sub_100342FA8(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t (*a5)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v11 = v10;

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  uint64_t v15 = a5(v9, v11, v12, v14);
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  sub_100346900(v9, v11);
  if (v17 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100346958(v15, v17);
  }

  return isa;
}

id sub_100343090()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id sub_1003430C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CLMicroLocationEncryption();
  return [super init];
}

id sub_100343138()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CLMicroLocationEncryption();
  return [super dealloc];
}

uint64_t sub_100343170(uint64_t a1, unint64_t a2)
{
  void v28[3] = &type metadata for Data;
  v28[4] = &protocol witness table for Data;
  v28[0] = a1;
  v28[1] = a2;
  uint64_t v4 = sub_100346A40(v28, (uint64_t)&type metadata for Data);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      sub_1003469E8(a1, a2);
      sub_1003469E8(v5, v6);
      id v8 = (unsigned char *)__DataStorage._bytes.getter();
      if (v8)
      {
        uint64_t v9 = __DataStorage._offset.getter();
        if (!__OFSUB__((int)v5, v9))
        {
          v8 += (int)v5 - v9;
          goto LABEL_7;
        }
LABEL_31:
        __break(1u);
      }
LABEL_7:
      uint64_t v10 = __DataStorage._length.getter();
      if (v10 >= (v5 >> 32) - (int)v5) {
        uint64_t v11 = (v5 >> 32) - (int)v5;
      }
      else {
        uint64_t v11 = v10;
      }
      uint64_t v12 = &v8[v11];
      if (v8) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      sub_100343424(v8, v13, &v27);
      sub_100346900(v5, v6);
LABEL_27:
      sub_100346900(a1, a2);
      uint64_t v24 = v27;
      sub_100346A84((uint64_t)v28);
      return v24;
    case 2uLL:
      uint64_t v14 = *(void *)(v5 + 16);
      uint64_t v15 = *(void *)(v5 + 24);
      sub_1003469E8(a1, a2);
      swift_retain();
      swift_retain();
      unint64_t v16 = (unsigned char *)__DataStorage._bytes.getter();
      if (!v16) {
        goto LABEL_17;
      }
      uint64_t v17 = __DataStorage._offset.getter();
      if (__OFSUB__(v14, v17)) {
        goto LABEL_30;
      }
      v16 += v14 - v17;
LABEL_17:
      BOOL v18 = __OFSUB__(v15, v14);
      uint64_t v19 = v15 - v14;
      if (v18) {
        goto LABEL_29;
      }
      uint64_t v20 = __DataStorage._length.getter();
      if (v20 >= v19) {
        uint64_t v21 = v19;
      }
      else {
        uint64_t v21 = v20;
      }
      std::string v22 = &v16[v21];
      if (v16) {
        std::string v23 = v22;
      }
      else {
        std::string v23 = 0;
      }
      sub_100343424(v16, v23, &v27);
      swift_release();
      swift_release();
      goto LABEL_27;
    case 3uLL:
      memset(v26, 0, 14);
      sub_1003469E8(a1, a2);
      id v7 = v26;
      goto LABEL_26;
    default:
      v26[0] = *v4;
      LOWORD(v26[1]) = v6;
      BYTE2(v26[1]) = BYTE2(v6);
      BYTE3(v26[1]) = BYTE3(v6);
      BYTE4(v26[1]) = BYTE4(v6);
      BYTE5(v26[1]) = BYTE5(v6);
      sub_1003469E8(a1, a2);
      id v7 = (char *)v26 + BYTE6(v6);
LABEL_26:
      sub_100343424(v26, v7, &v27);
      goto LABEL_27;
  }
}

unsigned char *sub_100343424@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    BOOL result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    BOOL result = (unsigned char *)sub_100345E5C(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    BOOL result = (unsigned char *)sub_100345F20((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    BOOL result = (unsigned char *)sub_100345F9C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_10034349C()
{
  if (&class metadata base offset for ArchiveEncryptionContext) {
    BOOL v0 = &type metadata accessor for ArchiveEncryptionContext == 0;
  }
  else {
    BOOL v0 = 1;
  }
  BOOL v3 = v0
    || &type metadata for ArchiveEncryptionContext == 0
    || &nominal type descriptor for ArchiveEncryptionContext == 0
    || &metaclass for ArchiveEncryptionContext == 0;
  if (v3
    || (&metaclass for ArchiveByteStream ? (BOOL v4 = &nominal type descriptor for ArchiveByteStream == 0) : (BOOL v4 = 1),
        !v4 ? (BOOL v5 = &type metadata for ArchiveByteStream == 0) : (BOOL v5 = 1),
        !v5 ? (BOOL v6 = &type metadata accessor for ArchiveByteStream == 0) : (BOOL v6 = 1),
        !v6 ? (BOOL v7 = &protocol witness table for ArchiveByteStream == 0) : (BOOL v7 = 1),
        !v7 ? (BOOL v8 = &protocol conformance descriptor for ArchiveByteStream == 0) : (BOOL v8 = 1),
        !v8 ? (BOOL v9 = &class metadata base offset for ArchiveByteStream == 0) : (BOOL v9 = 1),
        v9))
  {
    if (qword_10247A818 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_10034696C(v27, (uint64_t)qword_10247A820);
    long long v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v28, v29)) {
      goto LABEL_54;
    }
    int v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v30 = 0;
    long long v31 = "encryptFile: AppleArchive Library not loaded. method aborted.";
    goto LABEL_53;
  }
  if (&protocol conformance descriptor for SymmetricKey) {
    BOOL v10 = &type metadata accessor for SymmetricKey == 0;
  }
  else {
    BOOL v10 = 1;
  }
  if (v10 || &type metadata for SymmetricKey == 0 || &nominal type descriptor for SymmetricKey == 0)
  {
    if (qword_10247A818 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_10034696C(v32, (uint64_t)qword_10247A820);
    long long v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v28, v29)) {
      goto LABEL_54;
    }
    int v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v30 = 0;
    long long v31 = "encryptFile: CryptoKit Frameowrk not loaded. method aborted.";
LABEL_53:
    _os_log_impl((void *)&_mh_execute_header, v28, v29, v31, v30, 2u);
    swift_slowDealloc();
LABEL_54:

    return 0;
  }
  uint64_t v13 = type metadata accessor for FilePath();
  std::string v75 = v68;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v73 = v13;
  uint64_t v74 = v14;
  uint64_t v15 = *(void *)(v14 + 64);
  ((void (*)(void))__chkstk_darwin)();
  swift_bridgeObjectRetain();
  std::string v77 = (char *)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = FilePath.init(_:)();
  __chkstk_darwin(v16);
  swift_bridgeObjectRetain();
  std::string v76 = (char *)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  FilePath.init(_:)();
  uint64_t v17 = type metadata accessor for ArchiveEncryptionContext.Profile();
  __chkstk_darwin(v17 - 8);
  static ArchiveEncryptionContext.Profile.hkdf_sha256_aesctr_hmac__symmetric__none.getter();
  uint64_t v18 = type metadata accessor for ArchiveCompression();
  __chkstk_darwin(v18 - 8);
  static ArchiveCompression.lzfse.getter();
  type metadata accessor for ArchiveEncryptionContext();
  swift_allocObject();
  uint64_t v78 = ArchiveEncryptionContext.init(profile:compressionAlgorithm:compressionBlockSize:)();
  uint64_t v19 = type metadata accessor for SymmetricKey();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v72 = (char *)v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1003469A4(&qword_102419D40);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = [(id)swift_getObjCClassFromMetadata() retrieveSymmetricKey:v25];

  if (v26)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v79, 0, sizeof(v79));
  }
  sub_100346BE8((uint64_t)v79, (uint64_t)v80);
  if (!v80[3])
  {
    sub_100346B8C((uint64_t)v80, &qword_102419D48);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v24, 1, 1, v19);
    goto LABEL_60;
  }
  int v33 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v24, v33 ^ 1u, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v24, 1, v19) == 1)
  {
LABEL_60:
    sub_100346B8C((uint64_t)v24, &qword_102419D40);
    if (qword_10247A818 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_10034696C(v34, (uint64_t)qword_10247A820);
    long long v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v35, v36))
    {
      std::string v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)std::string v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Failed to retrieve symmetric key for file encryption", v37, 2u);
      swift_slowDealloc();
    }

    swift_release();
    uint64_t v38 = v73;
    std::string v39 = *(void (**)(char *, uint64_t))(v74 + 8);
    v39(v76, v73);
    v39(v77, v38);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v72, v24, v19);
  dispatch thunk of ArchiveEncryptionContext.setSymmetricKey(_:)();
  type metadata accessor for ArchiveByteStream();
  uint64_t v40 = static ArchiveByteStream.fileStream(path:mode:options:permissions:)();
  if (v40)
  {
    uint64_t v41 = v40;
    uint64_t v42 = static ArchiveByteStream.fileStream(path:mode:options:permissions:)();
    if (v42)
    {
      uint64_t v70 = v41;
      uint64_t v71 = v68;
      uint64_t v43 = v42;
      uint64_t v44 = type metadata accessor for ArchiveFlags();
      v68[2] = v68;
      uint64_t v45 = *(void *)(v44 - 8);
      __chkstk_darwin(v44);
      std::string v47 = (char *)v68 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
      v80[0] = &_swiftEmptyArrayStorage;
      uint64_t v69 = sub_100346C50(&qword_102419D70, (void (*)(uint64_t))&type metadata accessor for ArchiveFlags);
      sub_1003469A4(&qword_102419D78);
      sub_100346C98();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v69 = v43;
      uint64_t v48 = static ArchiveByteStream.encryptionStream(writingTo:encryptionContext:flags:threadCount:)();
      std::string v49 = v47;
      uint64_t v50 = v48;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v49, v44);
      if (v50)
      {
        static ArchiveByteStream.process(readingFrom:writingTo:)();
        dispatch thunk of ArchiveByteStream.close()();
        dispatch thunk of ArchiveByteStream.close()();
        dispatch thunk of ArchiveByteStream.close()();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v72, v19);
        uint64_t v65 = v73;
        uint64_t v66 = *(void (**)(char *, uint64_t))(v74 + 8);
        v66(v76, v73);
        v66(v77, v65);
        return 1;
      }
      if (qword_10247A818 != -1) {
        swift_once();
      }
      uint64_t v59 = type metadata accessor for Logger();
      sub_10034696C(v59, (uint64_t)qword_10247A820);
      long long v60 = Logger.logObject.getter();
      os_log_type_t v61 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v60, v61))
      {
        std::string v62 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)std::string v62 = 0;
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "Failed to create encryption stream", v62, 2u);
        swift_slowDealloc();
      }

      swift_release();
      swift_release();
    }
    else
    {
      if (qword_10247A818 != -1) {
        swift_once();
      }
      uint64_t v55 = type metadata accessor for Logger();
      sub_10034696C(v55, (uint64_t)qword_10247A820);
      std::string v56 = Logger.logObject.getter();
      os_log_type_t v57 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v56, v57))
      {
        std::string v58 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)std::string v58 = 0;
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "Failed to create output file stream for encryption", v58, 2u);
        swift_slowDealloc();
      }

      swift_release();
    }
  }
  else
  {
    if (qword_10247A818 != -1) {
      swift_once();
    }
    uint64_t v51 = type metadata accessor for Logger();
    sub_10034696C(v51, (uint64_t)qword_10247A820);
    std::string v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      std::string v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)std::string v54 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "Failed to create input file stream for encryption", v54, 2u);
      swift_slowDealloc();
    }
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v72, v19);
  uint64_t v63 = v73;
  std::string v64 = *(void (**)(char *, uint64_t))(v74 + 8);
  v64(v76, v73);
  v64(v77, v63);
  return 0;
}

uint64_t sub_100344550()
{
  if (&class metadata base offset for ArchiveEncryptionContext) {
    BOOL v0 = &type metadata accessor for ArchiveEncryptionContext == 0;
  }
  else {
    BOOL v0 = 1;
  }
  BOOL v3 = v0
    || &type metadata for ArchiveEncryptionContext == 0
    || &nominal type descriptor for ArchiveEncryptionContext == 0
    || &metaclass for ArchiveEncryptionContext == 0;
  if (v3
    || (&metaclass for ArchiveByteStream ? (BOOL v4 = &nominal type descriptor for ArchiveByteStream == 0) : (BOOL v4 = 1),
        !v4 ? (BOOL v5 = &type metadata for ArchiveByteStream == 0) : (BOOL v5 = 1),
        !v5 ? (BOOL v6 = &type metadata accessor for ArchiveByteStream == 0) : (BOOL v6 = 1),
        !v6 ? (BOOL v7 = &protocol witness table for ArchiveByteStream == 0) : (BOOL v7 = 1),
        !v7 ? (BOOL v8 = &protocol conformance descriptor for ArchiveByteStream == 0) : (BOOL v8 = 1),
        !v8 ? (BOOL v9 = &class metadata base offset for ArchiveByteStream == 0) : (BOOL v9 = 1),
        v9))
  {
    if (qword_10247A818 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_10034696C(v25, (uint64_t)qword_10247A820);
    id v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v26, v27)) {
      goto LABEL_54;
    }
    long long v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v28 = 0;
    os_log_type_t v29 = "decryptFile: AppleArchive Frameowrk not loaded. method aborted.";
    goto LABEL_53;
  }
  if (&protocol conformance descriptor for SymmetricKey) {
    BOOL v10 = &type metadata accessor for SymmetricKey == 0;
  }
  else {
    BOOL v10 = 1;
  }
  if (v10 || &type metadata for SymmetricKey == 0 || &nominal type descriptor for SymmetricKey == 0)
  {
    if (qword_10247A818 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_10034696C(v30, (uint64_t)qword_10247A820);
    id v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v26, v27)) {
      goto LABEL_54;
    }
    long long v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v28 = 0;
    os_log_type_t v29 = "decryptFile: CryptoKit Frameowrk not loaded. method aborted.";
LABEL_53:
    _os_log_impl((void *)&_mh_execute_header, v26, v27, v29, v28, 2u);
    swift_slowDealloc();
LABEL_54:

    return 0;
  }
  uint64_t v13 = type metadata accessor for FilePath();
  std::string v84 = &v73;
  uint64_t v81 = *(void *)(v13 - 8);
  uint64_t v82 = v13;
  uint64_t v14 = *(void *)(v81 + 64);
  __chkstk_darwin(v13);
  swift_bridgeObjectRetain();
  std::string v85 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = FilePath.init(_:)();
  std::string v83 = &v73;
  __chkstk_darwin(v15);
  uint64_t v16 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  FilePath.init(_:)();
  uint64_t v17 = type metadata accessor for SymmetricKey();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v80 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1003469A4(&qword_102419D40);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [(id)swift_getObjCClassFromMetadata() retrieveSymmetricKey:v23];

  if (v24)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v86, 0, sizeof(v86));
  }
  sub_100346BE8((uint64_t)v86, (uint64_t)v87);
  long long v31 = v85;
  if (!v87[3])
  {
    sub_100346B8C((uint64_t)v87, &qword_102419D48);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v22, 1, 1, v17);
    goto LABEL_62;
  }
  int v32 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v22, v32 ^ 1u, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v22, 1, v17) == 1)
  {
LABEL_62:
    sub_100346B8C((uint64_t)v22, &qword_102419D40);
    if (qword_10247A818 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_10034696C(v37, (uint64_t)qword_10247A820);
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Failed to retrieve symmetric key for file decryption", v40, 2u);
      swift_slowDealloc();
    }

    uint64_t v41 = v82;
    uint64_t v42 = *(void (**)(char *, uint64_t))(v81 + 8);
    v42(v16, v82);
    v42(v31, v41);
    return 0;
  }
  uint64_t v78 = &v73;
  std::string v79 = v16;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v80, v22, v17);
  type metadata accessor for ArchiveByteStream();
  uint64_t v33 = static ArchiveByteStream.fileStream(path:mode:options:permissions:)();
  if (v33)
  {
    uint64_t v34 = v33;
    type metadata accessor for ArchiveEncryptionContext();
    swift_allocObject();
    swift_retain();
    uint64_t v35 = ArchiveEncryptionContext.init(from:)();
    if (v35)
    {
      uint64_t v36 = v35;
      dispatch thunk of ArchiveEncryptionContext.setSymmetricKey(_:)();
      uint64_t v77 = v34;
      uint64_t v54 = type metadata accessor for ArchiveFlags();
      std::string v75 = &v73;
      uint64_t v74 = *(void *)(v54 - 8);
      __chkstk_darwin(v54);
      std::string v56 = (char *)&v73 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
      v87[0] = &_swiftEmptyArrayStorage;
      sub_100346C50(&qword_102419D70, (void (*)(uint64_t))&type metadata accessor for ArchiveFlags);
      uint64_t v76 = v36;
      sub_1003469A4(&qword_102419D78);
      sub_100346C98();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v57 = static ArchiveByteStream.decryptionStream(readingFrom:encryptionContext:flags:threadCount:)();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v56, v54);
      if (v57)
      {
        if (static ArchiveByteStream.fileStream(path:mode:options:permissions:)())
        {
          static ArchiveByteStream.process(readingFrom:writingTo:)();
          uint64_t v73 = v57;
          dispatch thunk of ArchiveByteStream.close()();
          dispatch thunk of ArchiveByteStream.close()();
          dispatch thunk of ArchiveByteStream.close()();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v18 + 8))(v80, v17);
          uint64_t v70 = v82;
          uint64_t v71 = *(void (**)(char *, uint64_t))(v81 + 8);
          v71(v79, v82);
          v71(v31, v70);
          return 1;
        }
        if (qword_10247A818 != -1) {
          swift_once();
        }
        uint64_t v63 = type metadata accessor for Logger();
        sub_10034696C(v63, (uint64_t)qword_10247A820);
        std::string v64 = Logger.logObject.getter();
        os_log_type_t v65 = static os_log_type_t.error.getter();
        BOOL v66 = os_log_type_enabled(v64, v65);
        std::string v47 = v79;
        if (v66)
        {
          std::string v67 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)std::string v67 = 0;
          _os_log_impl((void *)&_mh_execute_header, v64, v65, "Failed to create output file stream for decryption", v67, 2u);
          swift_slowDealloc();
        }
        swift_release();

        swift_release();
      }
      else
      {
        if (qword_10247A818 != -1) {
          swift_once();
        }
        uint64_t v58 = type metadata accessor for Logger();
        sub_10034696C(v58, (uint64_t)qword_10247A820);
        uint64_t v59 = Logger.logObject.getter();
        os_log_type_t v60 = static os_log_type_t.error.getter();
        BOOL v61 = os_log_type_enabled(v59, v60);
        std::string v47 = v79;
        if (v61)
        {
          std::string v62 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)std::string v62 = 0;
          _os_log_impl((void *)&_mh_execute_header, v59, v60, "Failed to create decryption stream", v62, 2u);
          swift_slowDealloc();
        }
        swift_release();
      }
      swift_release();
    }
    else
    {
      if (qword_10247A818 != -1) {
        swift_once();
      }
      uint64_t v49 = type metadata accessor for Logger();
      sub_10034696C(v49, (uint64_t)qword_10247A820);
      uint64_t v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.error.getter();
      BOOL v52 = os_log_type_enabled(v50, v51);
      std::string v47 = v79;
      if (v52)
      {
        os_log_type_t v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v53 = 0;
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "Failed to create archive context for decryption", v53, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
  }
  else
  {
    if (qword_10247A818 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    sub_10034696C(v43, (uint64_t)qword_10247A820);
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    BOOL v46 = os_log_type_enabled(v44, v45);
    std::string v47 = v79;
    if (v46)
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Failed to open source archive file for decryption", v48, 2u);
      swift_slowDealloc();
    }
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v80, v17);
  std::string v68 = *(void (**)(char *, uint64_t))(v81 + 8);
  uint64_t v69 = v82;
  v68(v47, v82);
  v68(v31, v69);
  return 0;
}

uint64_t sub_100345658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (&type metadata accessor for AES) {
    BOOL v4 = &type metadata for AES == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4
    || &nominal type descriptor for AES == 0
    || &protocol conformance descriptor for SymmetricKey == 0
    || &type metadata accessor for SymmetricKey == 0
    || &type metadata for SymmetricKey == 0
    || &nominal type descriptor for SymmetricKey == 0)
  {
    if (qword_10247A818 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10034696C(v10, (uint64_t)qword_10247A820);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v11, v12)) {
      goto LABEL_34;
    }
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    uint64_t v14 = "encryptData: CryptoKit Frameowrk not loaded. method aborted.";
    goto LABEL_33;
  }
  uint64_t v19 = type metadata accessor for SymmetricKey();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1003469A4(&qword_102419D40);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CLMicroLocationKeychain();
  sub_100347E60(a3, a4, (uint64_t)v46);
  if (!v46[3])
  {
    sub_100346B8C((uint64_t)v46, &qword_102419D48);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v25, 1, 1, v19);
    goto LABEL_29;
  }
  int v26 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v25, v26 ^ 1u, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v25, 1, v19) == 1)
  {
LABEL_29:
    sub_100346B8C((uint64_t)v25, &qword_102419D40);
    if (qword_10247A818 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_10034696C(v37, (uint64_t)qword_10247A820);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v11, v12)) {
      goto LABEL_34;
    }
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    uint64_t v14 = "Failed to retrieve symmetric key for data encryption";
LABEL_33:
    _os_log_impl((void *)&_mh_execute_header, v11, v12, v14, v13, 2u);
    swift_slowDealloc();
LABEL_34:

    return 0;
  }
  os_log_type_t v45 = &v40;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v25, v19);
  uint64_t v27 = type metadata accessor for AES.GCM.Nonce();
  uint64_t v44 = &v40;
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v40 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  AES.GCM.Nonce.init()();
  uint64_t v42 = type metadata accessor for AES.GCM.SealedBox();
  uint64_t v43 = &v40;
  uint64_t v41 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int v32 = (char *)&v40 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[0] = a1;
  v46[1] = a2;
  uint64_t v33 = sub_1003469A4(&qword_102419D60);
  double v34 = __chkstk_darwin(v33 - 8);
  uint64_t v36 = (char *)&v40 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t, double))(v28 + 16))(v36, v30, v27, v34);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v36, 0, 1, v27);
  sub_100346B38();
  static AES.GCM.seal<A>(_:using:nonce:)();
  sub_100346B8C((uint64_t)v36, &qword_102419D60);
  uint64_t v39 = AES.GCM.SealedBox.combined.getter();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v42);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  return v39;
}

uint64_t sub_100345E5C(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_100345F20(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for Data.RangeReference();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_100345F9C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_100346020(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (&type metadata accessor for AES) {
    BOOL v4 = &type metadata for AES == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4
    || &nominal type descriptor for AES == 0
    || &protocol conformance descriptor for SymmetricKey == 0
    || &type metadata accessor for SymmetricKey == 0
    || &type metadata for SymmetricKey == 0
    || &nominal type descriptor for SymmetricKey == 0)
  {
    if (qword_10247A818 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_10034696C(v10, (uint64_t)qword_10247A820);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "decryptData: CryptoKit Frameowrk not loaded. method aborted.", v13, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  else
  {
    uint64_t v19 = type metadata accessor for AES.GCM.SealedBox();
    os_log_type_t v45 = &v40;
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v41 = v19;
    uint64_t v42 = v20;
    uint64_t v21 = *(void *)(v20 + 64);
    __chkstk_darwin(v19);
    uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v23 = type metadata accessor for SymmetricKey();
    uint64_t v44 = &v40;
    uint64_t v24 = *(void *)(v23 - 8);
    __chkstk_darwin(v23);
    uint64_t v43 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v26 = sub_1003469A4(&qword_102419D40);
    __chkstk_darwin(v26 - 8);
    uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    type metadata accessor for CLMicroLocationKeychain();
    sub_100347E60(a3, a4, (uint64_t)v46);
    if (v46[3])
    {
      int v29 = swift_dynamicCast();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v28, v29 ^ 1u, 1, v23);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v28, 1, v23) != 1)
      {
        uint64_t v30 = v43;
        uint64_t v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v43, v28, v23);
        __chkstk_darwin(v31);
        int v32 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_1003469E8(a1, a2);
        sub_100342E28(a1, a2);
        uint64_t v38 = v41;
        uint64_t v37 = v42;
        (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v22, v32, v41);
        uint64_t v14 = static AES.GCM.open(_:using:)();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v23);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v38);
        return v14;
      }
    }
    else
    {
      sub_100346B8C((uint64_t)v46, &qword_102419D48);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v28, 1, 1, v23);
    }
    sub_100346B8C((uint64_t)v28, &qword_102419D40);
    if (qword_10247A818 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_10034696C(v33, (uint64_t)qword_10247A820);
    double v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Failed to retrieve symmetric key for data decryption", v36, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
}

uint64_t type metadata accessor for CLMicroLocationEncryption()
{
  return self;
}

uint64_t sub_100346900(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100346958(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100346900(a1, a2);
  }
  return a1;
}

uint64_t sub_10034696C(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1003469A4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1003469E8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

void *sub_100346A40(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100346A84(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t *sub_100346AD4(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t sub_100346B38()
{
  unint64_t result = qword_102419D68;
  if (!qword_102419D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_102419D68);
  }
  return result;
}

uint64_t sub_100346B8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1003469A4(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100346BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1003469A4(&qword_102419D48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100346C50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100346C98()
{
  unint64_t result = qword_102419D80;
  if (!qword_102419D80)
  {
    sub_100346CF4(&qword_102419D78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_102419D80);
  }
  return result;
}

uint64_t sub_100346CF4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100346D3C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100346AD4(v0, qword_10247A840);
  sub_10034696C(v0, (uint64_t)qword_10247A840);
  return Logger.init(subsystem:category:)();
}

void sub_100346DC0(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (&protocol conformance descriptor for SymmetricKey) {
    BOOL v4 = &type metadata accessor for SymmetricKey == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4 || &type metadata for SymmetricKey == 0 || &nominal type descriptor for SymmetricKey == 0)
  {
    if (qword_10247A838 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10034696C(v21, (uint64_t)qword_10247A840);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "getSymmetricKeyOrCreateNew: CryptoKit Frameowrk not loaded. method aborted.", v24, 2u);
      swift_slowDealloc();
    }

    *a3 = 0u;
    a3[1] = 0u;
    return;
  }
  OSStatus v61 = 0;
  uint64_t v9 = sub_1003469A4(&qword_102419D40);
  uint64_t v57 = &v49;
  uint64_t v10 = *(void *)(*(void *)(v9 - 8) + 64);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  os_log_type_t v12 = (char *)&v49 - v11;
  uint64_t v55 = a1;
  uint64_t v56 = a2;
  uint64_t v13 = sub_100347544(a1, a2, &v61, (uint64_t)&v49 - v11);
  uint64_t v58 = a3;
  __chkstk_darwin(v13);
  sub_10034A9B4((uint64_t)&v49 - v11, (uint64_t)&v49 - v11, &qword_102419D40);
  uint64_t v14 = type metadata accessor for SymmetricKey();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  unsigned int v17 = v16((char *)&v49 - v11, 1, v14);
  uint64_t v18 = sub_100348A20((uint64_t)&v49 - v11);
  uint64_t v19 = v58;
  if (v17 == 1 && v61 == -25300)
  {
    uint64_t v54 = (char *)&v49;
    __chkstk_darwin(v18);
    uint64_t v25 = type metadata accessor for SymmetricKeySize();
    __chkstk_darwin(v25 - 8);
    static SymmetricKeySize.bits256.getter();
    SymmetricKey.init(size:)();
    sub_100348A20((uint64_t)&v49 - v11);
    uint64_t v53 = v15;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))((char *)&v49 - v11, 0, 1, v14);
    uint64_t v26 = sub_100348AE4((uint64_t)&v49 - v11, (uint64_t)&v49 - v11);
    __chkstk_darwin(v26);
    sub_10034A9B4((uint64_t)&v49 - v11, (uint64_t)&v49 - v11, &qword_102419D40);
    unsigned int v27 = v16((char *)&v49 - v11, 1, v14);
    uint64_t v28 = sub_100348A20((uint64_t)&v49 - v11);
    if (v27 == 1)
    {
LABEL_24:
      if (qword_10247A838 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_10034696C(v29, (uint64_t)qword_10247A840);
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.error.getter();
      BOOL v32 = os_log_type_enabled(v30, v31);
      uint64_t v33 = v58;
      if (v32)
      {
        double v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)double v34 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Failed to generate a symmetric key", v34, 2u);
        swift_slowDealloc();
      }

      sub_100348A20((uint64_t)v12);
      *uint64_t v33 = 0u;
      v33[1] = 0u;
      return;
    }
    uint64_t v36 = v16;
    uint64_t v37 = v10;
    unint64_t v52 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
    __chkstk_darwin(v28);
    uint64_t v54 = (char *)&v49 - v11;
    sub_10034A9B4((uint64_t)&v49 - v11, (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_102419D40);
    if (v36((char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v14) != 1)
    {
      uint64_t v38 = v14;
      sub_100348B4C();
      dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
      uint64_t v40 = v59;
      unint64_t v39 = v60;
      uint64_t v41 = v53 + 8;
      uint64_t v42 = *(void (**)(char *, uint64_t))(v53 + 8);
      v42((char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v38);
      switch(v39 >> 62)
      {
        case 1uLL:
          uint64_t v50 = (uint64_t (*)(char *, uint64_t))v42;
          uint64_t v51 = v41;
          uint64_t v43 = sub_100346900(v40, v39);
          LODWORD(v44) = HIDWORD(v40) - v40;
          if (!__OFSUB__(HIDWORD(v40), v40))
          {
            uint64_t v14 = v38;
            uint64_t v44 = (int)v44;
LABEL_35:
            os_log_type_t v12 = v54;
            if (!v44) {
              goto LABEL_24;
            }
LABEL_39:
            __chkstk_darwin(v43);
            std::string v47 = (char *)&v49 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
            sub_10034A9B4((uint64_t)v12, (uint64_t)v47, &qword_102419D40);
            uint64_t v16 = v36;
            if (v36(v47, 1, v14) != 1)
            {
              BOOL v48 = sub_10034A158((uint64_t)v47, v55, v56);
              uint64_t v18 = v50(v47, v14);
              uint64_t v19 = v58;
              unint64_t v11 = v52;
              uint64_t v15 = v53;
              os_log_type_t v12 = v54;
              if (!v48)
              {
                sub_100348A20((uint64_t)v54);
                goto LABEL_17;
              }
              goto LABEL_15;
            }
LABEL_46:
            __break(1u);
            JUMPOUT(0x100347534);
          }
          __break(1u);
LABEL_44:
          __break(1u);
          break;
        case 2uLL:
          uint64_t v50 = (uint64_t (*)(char *, uint64_t))v42;
          uint64_t v51 = v41;
          uint64_t v49 = (uint64_t)&v49;
          uint64_t v46 = *(void *)(v40 + 16);
          uint64_t v45 = *(void *)(v40 + 24);
          uint64_t v43 = sub_100346900(v40, v39);
          if (__OFSUB__(v45, v46)) {
            goto LABEL_44;
          }
          uint64_t v14 = v38;
          os_log_type_t v12 = v54;
          if (v45 != v46) {
            goto LABEL_39;
          }
          goto LABEL_24;
        case 3uLL:
          sub_100346900(v40, v39);
          os_log_type_t v12 = v54;
          goto LABEL_24;
        default:
          uint64_t v50 = (uint64_t (*)(char *, uint64_t))v42;
          uint64_t v51 = v41;
          uint64_t v14 = v38;
          uint64_t v43 = sub_100346900(v40, v39);
          uint64_t v44 = BYTE6(v39);
          goto LABEL_35;
      }
    }
    __break(1u);
    goto LABEL_46;
  }
LABEL_15:
  __chkstk_darwin(v18);
  sub_10034A9B4((uint64_t)v12, (uint64_t)&v49 - v11, &qword_102419D40);
  if (v16((char *)&v49 - v11, 1, v14) == 1)
  {
    sub_100348A20((uint64_t)v12);
    sub_100348A20((uint64_t)&v49 - v11);
LABEL_17:
    _OWORD *v19 = 0u;
    v19[1] = 0u;
    return;
  }
  *((void *)v19 + 3) = v14;
  os_log_type_t v35 = sub_100348A80((uint64_t *)v19);
  (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 32))(v35, (char *)&v49 - v11, v14);
  sub_100348A20((uint64_t)v12);
}

uint64_t sub_100347544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, OSStatus *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v47 = a1;
  BOOL v48 = a3;
  uint64_t v45 = (char *)a4;
  uint64_t v46 = a2;
  sub_1003469A4(&qword_102419D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101D0CBB0;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString();
  *(void *)(inited + 40) = kSecClassKey;
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 72) = kSecUseDataProtectionKeychain;
  *(unsigned char *)(inited + 80) = 1;
  *(void *)(inited + 104) = &type metadata for Bool;
  *(void *)(inited + 112) = kSecAttrAccessible;
  *(void *)(inited + 120) = kSecAttrAccessibleWhenUnlocked;
  *(void *)(inited + 144) = v6;
  *(void *)(inited + 152) = kSecAttrSynchronizable;
  *(unsigned char *)(inited + 160) = 1;
  *(void *)(inited + 184) = &type metadata for Bool;
  *(void *)(inited + 192) = kSecAttrApplicationLabel;
  *(void *)(inited + 200) = v47;
  *(void *)(inited + 208) = a2;
  *(void *)(inited + 224) = &type metadata for String;
  *(void *)(inited + 232) = kSecReturnData;
  *(void *)(inited + 264) = &type metadata for Bool;
  *(unsigned char *)(inited + 240) = 1;
  CFStringRef v7 = (id)kSecClass;
  CFStringRef v8 = (id)kSecClassKey;
  CFStringRef v9 = (id)kSecUseDataProtectionKeychain;
  CFStringRef v10 = (id)kSecAttrAccessible;
  CFStringRef v11 = (id)kSecAttrAccessibleWhenUnlocked;
  CFStringRef v12 = (id)kSecAttrSynchronizable;
  CFStringRef v13 = (id)kSecAttrApplicationLabel;
  swift_bridgeObjectRetain();
  CFStringRef v14 = (id)kSecReturnData;
  sub_100347D30(inited);
  uint64_t v51 = 0;
  uint64_t v15 = sub_1003469A4(&qword_102419D40);
  uint64_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
  __chkstk_darwin(v15 - 8);
  unsigned int v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SymmetricKey();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v17, 1, 1, v18);
  sub_10034A54C();
  sub_10034A58C();
  CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OSStatus v21 = SecItemCopyMatching(isa, (CFTypeRef *)&v51);

  uint64_t v22 = v51;
  *BOOL v48 = v21;
  if (v21 == -25300)
  {
    if (qword_10247A838 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_10034696C(v25, (uint64_t)qword_10247A840);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "key not found in keychain", v28, 2u);
      swift_slowDealloc();
    }

    goto LABEL_24;
  }
  if (v21)
  {
    if (qword_10247A838 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10034696C(v29, (uint64_t)qword_10247A840);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      *(void *)&long long v50 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 67109378;
      LODWORD(v49) = v21;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v32 + 8) = 2080;
      CFStringRef v33 = SecCopyErrorMessageString(v21, 0);
      if (v33)
      {
        double v34 = (__CFString *)v33;
        uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v37 = v36;
      }
      else
      {
        LODWORD(v49) = v21;
        uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v37 = v42;
      }
      uint64_t v49 = sub_100348B98(v35, v37, (uint64_t *)&v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Failed to retrieve key from keychain, error %d, %s", (uint8_t *)v32, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    goto LABEL_24;
  }
  if (v22)
  {
    uint64_t v49 = v22;
    swift_unknownObjectRetain();
    uint64_t v23 = swift_dynamicCast();
    if (v23)
    {
      *(double *)&long long v24 = __chkstk_darwin(v23);
      long long v50 = v24;
      SymmetricKey.init<A>(data:)();
      sub_100348A20((uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      v19((char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v18);
      sub_100348AE4((uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
LABEL_24:
      sub_100348AE4((uint64_t)v17, (uint64_t)v45);
      return swift_unknownObjectRelease();
    }
  }
  if (qword_10247A838 != -1) {
    swift_once();
  }
  uint64_t v38 = type metadata accessor for Logger();
  sub_10034696C(v38, (uint64_t)qword_10247A840);
  unint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Failed to get key from keychain. Got invalid data", v41, 2u);
    swift_slowDealloc();
  }

  sub_100348A20((uint64_t)v17);
  v19(v45, 1, 1, v18);
  return swift_unknownObjectRelease();
}

unint64_t sub_100347D30(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1003469A4(&qword_102419E10);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10034A9B4(v6, (uint64_t)&v13, &qword_102419E18);
    uint64_t v7 = v13;
    unint64_t result = sub_1003491F0(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_10034AA18(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    void v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_100347E60(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (&protocol conformance descriptor for SymmetricKey) {
    BOOL v4 = &type metadata accessor for SymmetricKey == 0;
  }
  else {
    BOOL v4 = 1;
  }
  if (v4 || &type metadata for SymmetricKey == 0 || &nominal type descriptor for SymmetricKey == 0)
  {
    if (qword_10247A838 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10034696C(v14, (uint64_t)qword_10247A840);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v15, v16))
    {
      unsigned int v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "retrieveSymmetricKey: CryptoKit Frameowrk not loaded. method aborted.", v17, 2u);
      swift_slowDealloc();
    }

    goto LABEL_18;
  }
  OSStatus v20 = 0;
  uint64_t v9 = sub_1003469A4(&qword_102419D40);
  __chkstk_darwin(v9 - 8);
  BOOL v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100347544(a1, a2, &v20, (uint64_t)v11);
  uint64_t v12 = type metadata accessor for SymmetricKey();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_100348A20((uint64_t)v11);
LABEL_18:
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return;
  }
  *(void *)(a3 + 24) = v12;
  uint64_t v18 = sub_100348A80((uint64_t *)a3);
  (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
}

id sub_1003480E8()
{
  return sub_100348938(type metadata accessor for CLMicroLocationKeychain);
}

id sub_100348118()
{
  return sub_1003489E4(type metadata accessor for CLMicroLocationKeychain);
}

void sub_100348134(UInt8 *bytes@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (bytes) {
    CFIndex v4 = a2 - (void)bytes;
  }
  else {
    CFIndex v4 = 0;
  }
  CFDataRef v5 = CFDataCreateWithBytesNoCopy(0, bytes, v4, kCFAllocatorNull);
  if (v5)
  {
    CFDataRef v6 = v5;
    uint64_t v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    unint64_t v9 = 0xC000000000000000;
  }
  *a3 = v7;
  a3[1] = v9;
}

void sub_1003481BC()
{
  qword_10247A860 = (uint64_t)&_swiftEmptyDictionarySingleton;
}

uint64_t sub_1003481D0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v4 = result == 0x79656B5F6F6ELL && a2 == 0xE600000000000000;
  if (v4 || (uint64_t v6 = result, result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
  {
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  uint64_t v7 = type metadata accessor for SymmetricKey();
  v24[2] = v24;
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10247A858 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v11 = qword_10247A860;
  uint64_t v12 = sub_1003469A4(&qword_102419D40);
  v24[1] = v24;
  uint64_t v13 = *(void *)(*(void *)(v12 - 8) + 64);
  double v14 = __chkstk_darwin(v12 - 8);
  if (!*(void *)(v11 + 16))
  {
    unsigned int v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v8 + 56);
    v17((char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v7, v14);
LABEL_15:
    sub_100348A20((uint64_t)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    swift_endAccess();
    uint64_t v18 = type metadata accessor for SymmetricKeySize();
    __chkstk_darwin(v18 - 8);
    static SymmetricKeySize.bits256.getter();
    *(void *)(a3 + 24) = v7;
    uint64_t v19 = sub_100348A80((uint64_t *)a3);
    uint64_t v20 = SymmetricKey.init(size:)();
    double v21 = __chkstk_darwin(v20);
    (*(void (**)(char *, uint64_t *, uint64_t, double))(v8 + 16))((char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v7, v21);
    ((void (*)(char *, void, uint64_t, uint64_t))v17)((char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v7);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1003485F0((uint64_t)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v6, a2);
    return swift_endAccess();
  }
  swift_bridgeObjectRetain();
  unint64_t v15 = sub_100349234(v6, a2);
  if (v16)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))((char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v11 + 56) + *(void *)(v8 + 72) * v15, v7);
    unsigned int v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v8 + 56);
    ((void (*)(char *, void, uint64_t, uint64_t))v17)((char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v7);
  }
  else
  {
    unsigned int v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v8 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)((char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))((char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v7) == 1)goto LABEL_15; {
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  }
  v22(v10, (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_endAccess();
  *(void *)(a3 + 24) = v7;
  uint64_t v23 = sub_100348A80((uint64_t *)a3);
  return ((uint64_t (*)(uint64_t *, char *, uint64_t))v22)(v23, v10, v7);
}

uint64_t sub_1003485F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v4 = v3;
  uint64_t v8 = type metadata accessor for SymmetricKey();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1, 1, v8);
  if (v10 == 1)
  {
    sub_100348A20(a1);
    uint64_t v11 = sub_1003469A4(&qword_102419D40);
    __chkstk_darwin(v11 - 8);
    uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_10034949C(a2, a3, (uint64_t)v13);
    swift_bridgeObjectRelease();
    return sub_100348A20((uint64_t)v13);
  }
  else
  {
    double v15 = __chkstk_darwin(v10);
    unsigned int v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 32))(v17, a1, v8, v15);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v4;
    *BOOL v4 = 0x8000000000000000;
    sub_100349C4C((uint64_t)v17, a2, a3, isUniquelyReferenced_nonNull_native);
    *BOOL v4 = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

id sub_1003487D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, uint64_t))
{
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  a4(v14, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = v15;
  if (v15)
  {
    uint64_t v7 = sub_100346A40(v14, v15);
    uint64_t v8 = *(void *)(v6 - 8);
    double v9 = __chkstk_darwin(v7);
    uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    uint64_t v12 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    sub_100346A84((uint64_t)v14);
  }
  else
  {
    uint64_t v12 = 0;
  }

  return v12;
}

id sub_100348920()
{
  return sub_100348938(type metadata accessor for CLMicroLocationKeychainMock);
}

id sub_100348938(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super init];
}

id sub_100348988(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  v4.receiver = a1;
  v4.super_class = (Class)a3();
  return [super init];
}

id sub_1003489CC()
{
  return sub_1003489E4(type metadata accessor for CLMicroLocationKeychainMock);
}

id sub_1003489E4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t sub_100348A20(uint64_t a1)
{
  uint64_t v2 = sub_1003469A4(&qword_102419D40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_100348A80(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_100348AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1003469A4(&qword_102419D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100348B4C()
{
  unint64_t result = qword_102419D88;
  if (!qword_102419D88)
  {
    type metadata accessor for SymmetricKey();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_102419D88);
  }
  return result;
}

uint64_t sub_100348B98(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100348C6C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10034A954((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10034A954((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100346A84((uint64_t)v12);
  return v7;
}

uint64_t sub_100348C6C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100348E28(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_100348E28(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_100348EC0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1003490A0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1003490A0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_100348EC0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_100349038(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100349038(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_1003469A4(&qword_102419E08);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  _DWORD v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1003490A0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1003469A4(&qword_102419E08);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_1003491F0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_1003492AC(a1, v4);
}

unint64_t sub_100349234(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_1003493B8(a1, a2, v4);
}

unint64_t sub_1003492AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_10034A54C();
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = static NSObject.== infix(_:_:)();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = static NSObject.== infix(_:_:)();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1003493B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_10034949C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100349234(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100349E7C();
      uint64_t v11 = v21;
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for SymmetricKey();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a3, v12 + *(void *)(v20 + 72) * v8, v13);
    sub_100349A3C(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
    BOOL v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for SymmetricKey();
    BOOL v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_100349644(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1003469A4(&qword_102419E00);
  int v48 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v44 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 64);
    uint64_t v46 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    int64_t v45 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        int64_t v49 = v14;
        unint64_t v18 = v17 | (v14 << 6);
      }
      else
      {
        int64_t v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v45) {
          goto LABEL_34;
        }
        unint64_t v20 = v46[v19];
        int64_t v21 = v14 + 1;
        if (!v20)
        {
          int64_t v21 = v14 + 2;
          if (v14 + 2 >= v45) {
            goto LABEL_34;
          }
          unint64_t v20 = v46[v21];
          if (!v20)
          {
            uint64_t v22 = v14 + 3;
            if (v14 + 3 >= v45)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v44;
              if (v48)
              {
                uint64_t v43 = 1 << *(unsigned char *)(v5 + 32);
                if (v43 >= 64) {
                  bzero(v46, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v46 = -1 << v43;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v20 = v46[v22];
            if (!v20)
            {
              while (1)
              {
                int64_t v21 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v21 >= v45) {
                  goto LABEL_34;
                }
                unint64_t v20 = v46[v21];
                ++v22;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v21 = v14 + 3;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        int64_t v49 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = type metadata accessor for SymmetricKey();
      uint64_t v24 = *(void *)(v23 - 8);
      double v26 = __chkstk_darwin(v23);
      os_log_type_t v27 = (char *)&v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v28 = *(void *)(v5 + 56);
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v33 = *(void *)(v32 + 72);
      uint64_t v34 = v28 + v33 * v18;
      uint64_t v50 = v35;
      if (v48)
      {
        (*(void (**)(char *, uint64_t, uint64_t, double))(v24 + 32))((char *)&v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v23, v26);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, double))(v24 + 16))((char *)&v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v23, v26);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v36 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v37 = result & ~v36;
      unint64_t v38 = v37 >> 6;
      if (((-1 << v37) & ~*(void *)(v12 + 8 * (v37 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v37) & ~*(void *)(v12 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v39 = 0;
        unint64_t v40 = (unint64_t)(63 - v36) >> 6;
        do
        {
          if (++v38 == v40 && (v39 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v41 = v38 == v40;
          if (v38 == v40) {
            unint64_t v38 = 0;
          }
          v39 |= v41;
          uint64_t v42 = *(void *)(v12 + 8 * v38);
        }
        while (v42 == -1);
        unint64_t v15 = __clz(__rbit64(~v42)) + (v38 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = (void *)(*(void *)(v7 + 48) + 16 * v15);
      void *v16 = v31;
      v16[1] = v30;
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v24 + 32))(*(void *)(v7 + 56) + v33 * v15, v27, v23);
      ++*(void *)(v7 + 16);
      int64_t v14 = v49;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_100349A3C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
        uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1) {
          *uint64_t v12 = *v13;
        }
        uint64_t v14 = *(void *)(a2 + 56);
        uint64_t v15 = *(void *)(*(void *)(type metadata accessor for SymmetricKey() - 8) + 72);
        int64_t v16 = v15 * v3;
        uint64_t result = v14 + v15 * v3;
        int64_t v17 = v15 * v6;
        unint64_t v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v16 == v17) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    unint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  uint64_t *v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_100349C4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100349234(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_100349E7C();
      goto LABEL_7;
    }
    sub_100349644(v15, a4 & 1);
    unint64_t v26 = sub_100349234(a2, a3);
    if ((v16 & 1) == (v27 & 1))
    {
      unint64_t v12 = v26;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = type metadata accessor for SymmetricKey();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 40);
    uint64_t v23 = v20;
    uint64_t v24 = v19 + *(void *)(v21 + 72) * v12;
    return v22(v24, a1, v23);
  }
LABEL_13:
  sub_100349DCC(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_100349DCC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v8 = (void *)(a5[6] + 16 * a1);
  *unint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for SymmetricKey();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a4, v10);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

void *sub_100349E7C()
{
  sub_1003469A4(&qword_102419E00);
  uint64_t v34 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = static _DictionaryStorage.copy(original:)();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v38 = v2;
  if (!v3)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v33 = v38;
    uint64_t v32 = v34;
LABEL_28:
    uint64_t *v32 = v33;
    return result;
  }
  uint64_t v4 = v2;
  uint64_t result = (void *)(v2 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
  {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
    uint64_t v4 = v38;
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v37 = v1;
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  uint64_t v35 = v1 + 64;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v1;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v39 = v8;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v28);
    int64_t v30 = v8 + 1;
    if (!v29)
    {
      int64_t v30 = v28 + 1;
      if (v28 + 1 >= v36) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v35 + 8 * v30);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v29 - 1) & v29;
    int64_t v39 = v30;
    unint64_t v14 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    char v16 = (uint64_t *)(*(void *)(v12 + 48) + 16 * v14);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = type metadata accessor for SymmetricKey();
    uint64_t v20 = *(void *)(v19 - 8);
    double v21 = __chkstk_darwin(v19);
    uint64_t v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v25 = *(void *)(v24 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t, double))(v20 + 16))(v23, *(void *)(v12 + 56) + v25, v19, v21);
    uint64_t v26 = v38;
    char v27 = (void *)(*(void *)(v38 + 48) + v15);
    *char v27 = v18;
    v27[1] = v17;
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(*(void *)(v26 + 56) + v25, v23, v19);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    int64_t v8 = v39;
  }
  int64_t v31 = v28 + 2;
  if (v31 >= v36)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v32 = v34;
    uint64_t v33 = v38;
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v35 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

BOOL sub_10034A158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1003469A4(&qword_102419D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101D0CBB0;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString();
  *(void *)(inited + 40) = kSecClassKey;
  *(void *)(inited + 64) = v4;
  *(void *)(inited + 72) = kSecUseDataProtectionKeychain;
  *(unsigned char *)(inited + 80) = 1;
  *(void *)(inited + 104) = &type metadata for Bool;
  *(void *)(inited + 112) = kSecAttrAccessible;
  *(void *)(inited + 120) = kSecAttrAccessibleWhenUnlocked;
  *(void *)(inited + 144) = v4;
  *(void *)(inited + 152) = kSecAttrSynchronizable;
  *(unsigned char *)(inited + 160) = 1;
  *(void *)(inited + 184) = &type metadata for Bool;
  *(void *)(inited + 192) = kSecValueData;
  type metadata accessor for SymmetricKey();
  sub_100348B4C();
  CFStringRef v5 = (id)kSecClass;
  CFStringRef v6 = (id)kSecClassKey;
  CFStringRef v7 = (id)kSecUseDataProtectionKeychain;
  CFStringRef v8 = (id)kSecAttrAccessible;
  CFStringRef v9 = (id)kSecAttrAccessibleWhenUnlocked;
  CFStringRef v10 = (id)kSecAttrSynchronizable;
  CFStringRef v11 = (id)kSecValueData;
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
  *(_OWORD *)(inited + 200) = *(_OWORD *)v28;
  *(void *)(inited + 224) = &type metadata for Data;
  *(void *)(inited + 232) = kSecAttrApplicationLabel;
  *(void *)(inited + 264) = &type metadata for String;
  *(void *)(inited + 240) = a2;
  *(void *)(inited + 248) = a3;
  CFStringRef v12 = (id)kSecAttrApplicationLabel;
  swift_bridgeObjectRetain();
  sub_100347D30(inited);
  sub_10034A54C();
  sub_10034A58C();
  CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OSStatus v14 = SecItemAdd(isa, 0);

  if (v14)
  {
    if (qword_10247A838 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10034696C(v15, (uint64_t)qword_10247A840);
    char v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      v28[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 67109378;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 8) = 2080;
      CFStringRef v19 = SecCopyErrorMessageString(v14, 0);
      if (v19)
      {
        uint64_t v20 = (__CFString *)v19;
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v23 = v22;
      }
      else
      {
        uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v23 = v24;
      }
      sub_100348B98(v21, v23, v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to store key in keychain, error %d, %s", (uint8_t *)v18, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  return v14 == 0;
}

void type metadata accessor for CFString()
{
  if (!qword_102419DF8)
  {
    ForeignTypeMetaunsigned int data = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_102419DF8);
    }
  }
}

unint64_t sub_10034A54C()
{
  unint64_t result = qword_102419D98;
  if (!qword_102419D98)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_102419D98);
  }
  return result;
}

unint64_t sub_10034A58C()
{
  unint64_t result = qword_102419DA0;
  if (!qword_102419DA0)
  {
    sub_10034A54C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_102419DA0);
  }
  return result;
}

BOOL sub_10034A5E4(uint64_t a1, uint64_t a2)
{
  sub_1003469A4(&qword_102419D90);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101D0CBC0;
  *(void *)(inited + 32) = kSecClass;
  type metadata accessor for CFString();
  *(void *)(inited + 40) = kSecClassKey;
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = kSecUseDataProtectionKeychain;
  *(unsigned char *)(inited + 80) = 1;
  *(void *)(inited + 104) = &type metadata for Bool;
  *(void *)(inited + 112) = kSecAttrAccessible;
  *(void *)(inited + 120) = kSecAttrAccessibleAfterFirstUnlock;
  *(void *)(inited + 144) = v5;
  *(void *)(inited + 152) = kSecAttrSynchronizable;
  *(unsigned char *)(inited + 160) = 1;
  *(void *)(inited + 184) = &type metadata for Bool;
  *(void *)(inited + 192) = kSecAttrApplicationLabel;
  *(void *)(inited + 224) = &type metadata for String;
  *(void *)(inited + 200) = a1;
  *(void *)(inited + 208) = a2;
  CFStringRef v6 = (id)kSecClass;
  CFStringRef v7 = (id)kSecClassKey;
  CFStringRef v8 = (id)kSecUseDataProtectionKeychain;
  CFStringRef v9 = (id)kSecAttrAccessible;
  CFStringRef v10 = (id)kSecAttrAccessibleAfterFirstUnlock;
  CFStringRef v11 = (id)kSecAttrSynchronizable;
  CFStringRef v12 = (id)kSecAttrApplicationLabel;
  swift_bridgeObjectRetain();
  sub_100347D30(inited);
  sub_10034A54C();
  sub_10034A58C();
  CFDictionaryRef isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  OSStatus v14 = SecItemDelete(isa);

  if (v14)
  {
    if (qword_10247A838 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10034696C(v15, (uint64_t)qword_10247A840);
    char v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 67109378;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v18 + 8) = 2080;
      CFStringRef v19 = SecCopyErrorMessageString(v14, 0);
      if (v19)
      {
        uint64_t v20 = (__CFString *)v19;
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v23 = v22;
      }
      else
      {
        uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v23 = v24;
      }
      sub_100348B98(v21, v23, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to remove key from keychain, error %d, %s", (uint8_t *)v18, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  return v14 == 0;
}

uint64_t type metadata accessor for CLMicroLocationKeychain()
{
  return self;
}

uint64_t type metadata accessor for CLMicroLocationKeychainMock()
{
  return self;
}

uint64_t sub_10034A954(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_10034A9B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1003469A4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_OWORD *sub_10034AA18(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void *sub_10034AA2C(void *result)
{
  *unint64_t result = ++qword_10247A868;
  return result;
}

uint64_t sub_10034AA48(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  NDR_record_t v34 = NDR_record;
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = *(_DWORD *)&v34.mig_vers;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_10034ACA4(mach_port_t a1, unsigned int a2, long long *a3)
{
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  NDR_record_t v13 = NDR_record;
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_10034AE34(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  NDR_record_t v22 = NDR_record;
  *(_DWORD *)long long v23 = a2;
  *(_DWORD *)&int v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_10034B024(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_10034B1A0(uint64_t a1)
{
  uint64_t v1 = (uint64_t)*(&off_1022AC750
                + ((107 * ((qword_102419E28 + dword_102419E58) ^ 0x8A)) ^ byte_101D1BD20[byte_101D17CE0[(107 * ((qword_102419E28 + dword_102419E58) ^ 0x8A))] ^ 1])
                + 134);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = *(&off_1022AC750
       + (byte_101D17BE4[(byte_101D15180[(107 * ((qword_102419E28 - v2) ^ 0x8A))] ^ 0x34)
                                        - 4] ^ (107 * ((qword_102419E28 - v2) ^ 0x8A)))
       - 73);
  unint64_t v4 = v2 ^ (unint64_t)&v6 ^ *v3;
  *(void *)(v1 - 4) = (2119093099 * v4) ^ 0x22F8A8F5CDCFC8ALL;
  *uint64_t v3 = 2119093099 * (v4 ^ 0x22F8A8F5CDCFC8ALL);
  uint64_t v7 = a1;
  unsigned int v8 = 1755732067 * ((((&v7 | 0x8E3313F8) ^ 0xFFFFFFFE) - (~&v7 | 0x71CCEC07)) ^ 0xAF0A51DC)
     + 347;
  LOBYTE(v3) = 107 * (*(_DWORD *)(v1 - 4) ^ 0x8A ^ *(_DWORD *)v3);
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_1022AC750
                                                        + ((107
                                                                                         * ((qword_102419E28
                                                                                           + dword_102419E58) ^ 0x8A)) ^ byte_101D1BC20[byte_101D17AE0[(107 * ((qword_102419E28 + dword_102419E58) ^ 0x8A))] ^ 0x2C])
                                                        + 32)
                                              + 8
                                              * (byte_101D1BC24[(byte_101D17AEC[v3 - 12] ^ 0xB)
                                                                                             - 4] ^ v3)
                                              + 17556))(&v7);
}

uint64_t sub_10034B3A0(unsigned int a1)
{
  return byte_101D1BC24[(byte_101D17AEC[a1 - 12] ^ 0x4D) - 4] ^ a1;
}

uint64_t sub_10034B3D0(unsigned int a1)
{
  return byte_101D1BD20[byte_101D17CEC[a1 - 12] ^ 0x7D] ^ a1;
}

uint64_t sub_10034B3FC(char a1, unsigned int a2)
{
  return byte_101D11A24[(byte_101D1BF2C[a2 - 12] ^ a1) - 4] ^ a2;
}

uint64_t sub_10034B428(unsigned int a1)
{
  return byte_101D1C028[(byte_101D17EE0[a1] ^ 0x12) - 8] ^ a1;
}

uint64_t sub_10034B458(unsigned int a1)
{
  return byte_101D1C028[(byte_101D17EE0[a1] ^ 0xDB) - 8] ^ a1;
}

uint64_t sub_10034B488(unsigned int a1)
{
  return byte_101D1BC24[(byte_101D17AEC[a1 - 12] ^ 0xB) - 4] ^ a1;
}

uint64_t sub_10034B4B8(unsigned int a1)
{
  return byte_101D1BC24[(byte_101D17AEC[a1 - 12] ^ 0xCD) - 4] ^ a1;
}

uint64_t sub_10034B4E8(uint64_t a1)
{
  uint64_t v1 = *(&off_1022AC750
       + ((107 * (dword_102419E50 ^ 0x8A ^ qword_102419E28)) ^ byte_101D1BC20[byte_101D17AE0[(107 * (dword_102419E50 ^ 0x8A ^ qword_102419E28))] ^ 0x5B])
       - 164);
  unsigned __int8 v2 = 107 * ((qword_102419E28 + *v1) ^ 0x8A);
  uint64_t v3 = *(&off_1022AC750 + (byte_101D1BE20[byte_101D17DE4[v2 - 4] ^ 0xC5] ^ v2) + 4);
  uint64_t v4 = *v1 - (void)&v6 + *v3;
  void *v1 = 2119093099 * v4 + 0x6421A82FEAAAFBAELL;
  *uint64_t v3 = 2119093099 * (v4 ^ 0x22F8A8F5CDCFC8ALL);
  uint64_t v7 = a1;
  unsigned int v8 = (3804331 * (((&v7 | 0x78672C26) - &v7 + (&v7 & 0x8798D3D8)) ^ 0x6B209D0)) ^ 0x3A6;
  LOBYTE(v3) = 107 * ((*(_DWORD *)v3 - *(_DWORD *)v1) ^ 0x8A);
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_1022AC750
                                                        + ((107
                                                                                         * ((qword_102419E28
                                                                                           + dword_102419E50) ^ 0x8A)) ^ byte_101D17BE0[byte_101D15180[(107 * ((qword_102419E28 + dword_102419E50) ^ 0x8A))] ^ 0x9A])
                                                        + 29)
                                              + 8
                                              * (byte_101D1C028[(byte_101D17EE0[v3] ^ 0xDB)
                                                                                             - 8] ^ v3)
                                              + 16980))(&v7);
}

uint64_t sub_10034B6EC(char a1, unsigned int a2)
{
  return byte_101D1BC24[(byte_101D17AEC[a2 - 12] ^ a1) - 4] ^ a2;
}

uint64_t sub_10034B718(unsigned int a1)
{
  return byte_101D17BE4[(byte_101D15180[a1] ^ 0x34) - 4] ^ a1;
}

uint64_t sub_10034B748(char a1, unsigned int a2)
{
  return byte_101D1BE20[(byte_101D17DE4[a2 - 4] ^ a1)] ^ a2;
}

uint64_t sub_10034B774(unsigned int a1)
{
  return byte_101D11A24[(byte_101D1BF2C[a1 - 12] ^ 0x27) - 4] ^ a1;
}

uint64_t sub_10034B7A4(unsigned int a1)
{
  return byte_101D1BC24[(byte_101D17AEC[a1 - 12] ^ 0x5B) - 4] ^ a1;
}

uint64_t sub_10034B7D4(unsigned int a1)
{
  return byte_101D17BE4[(byte_101D15180[a1] ^ 0x9A) - 4] ^ a1;
}

uint64_t sub_10034B804(unsigned int a1)
{
  return byte_101D1BD20[byte_101D17CEC[a1 - 12] ^ 1] ^ a1;
}

uint64_t sub_10034B82C(unsigned int a1)
{
  return byte_101D1C028[(byte_101D17EE0[a1] ^ 0xB3) - 8] ^ a1;
}

uint64_t sub_10034B85C(uint64_t a1)
{
  uint64_t v1 = (uint64_t)*(&off_1022AC750
                + ((107 * ((qword_102419E28 + dword_10241A078) ^ 0x8A)) ^ byte_101D1BC20[byte_101D17AE0[(107 * ((qword_102419E28 + dword_10241A078) ^ 0x8A))] ^ 0xB])
                + 87);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = *(&off_1022AC750
       + (byte_101D17BE4[(byte_101D15180[(107 * ((qword_102419E28 - v2) ^ 0x8A))] ^ 0x34)
                                        - 4] ^ (107 * ((qword_102419E28 - v2) ^ 0x8A)))
       - 73);
  unint64_t v4 = (unint64_t)&v6[*v3 - v2];
  *(void *)(v1 - 4) = 2119093099 * v4 + 0x22F8A8F5CDCFC8ALL;
  *uint64_t v3 = 2119093099 * (v4 ^ 0x22F8A8F5CDCFC8ALL);
  unsigned int v8 = 1863 - 1759421093 * ((2 * (&v7 & 0xC091CA8) - &v7 + 1945559892) ^ 0xC08B5300);
  uint64_t v7 = a1;
  LOBYTE(v3) = 107 * ((*(_DWORD *)v3 - *(_DWORD *)(v1 - 4)) ^ 0x8A);
  (*(void (**)(uint64_t *))((char *)*(&off_1022AC750
                                              + ((107
                                                                               * ((qword_102419E28 - dword_10241A078) ^ 0x8A)) ^ byte_101D1BC20[byte_101D17AE0[(107 * ((qword_102419E28 - dword_10241A078) ^ 0x8A))] ^ 0xB])
                                              + 103)
                                    + 8
                                    * (byte_101D1BE20[byte_101D17DE4[v3 - 4] ^ 0xC5] ^ v3)
                                    + 17564))(&v7);
  return v9;
}

uint64_t sub_10034BA48(char a1, unsigned int a2)
{
  return byte_101D17BE4[(byte_101D15180[a2] ^ a1) - 4] ^ a2;
}

uint64_t sub_10034BA74(char a1, unsigned int a2)
{
  return byte_101D1BD20[(byte_101D17CEC[a2 - 12] ^ a1)] ^ a2;
}

uint64_t sub_10034BAA0(unsigned int a1)
{
  return byte_101D1BE20[byte_101D17DE4[a1 - 4] ^ 0x4A] ^ a1;
}

uint64_t sub_10034BACC(char a1, unsigned int a2)
{
  return byte_101D1C028[(byte_101D17EE0[a2] ^ a1) - 8] ^ a2;
}

uint64_t sub_10034BAF8(unsigned int a1)
{
  return byte_101D1C028[(byte_101D17EE0[a1] ^ 0xA3) - 8] ^ a1;
}

uint64_t sub_10034BB28(unsigned int a1)
{
  return byte_101D1BE20[byte_101D17DE4[a1 - 4] ^ 0xC5] ^ a1;
}

uint64_t sub_10034BB54(unsigned int a1)
{
  return byte_101D1C028[(byte_101D17EE0[a1] ^ 0xD0) - 8] ^ a1;
}

uint64_t sub_10034BB84(unsigned int a1)
{
  return byte_101D1BC24[(byte_101D17AEC[a1 - 12] ^ 0x2C) - 4] ^ a1;
}

void sub_10034BBB4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) - 1224239923 * ((-2 - ((a1 | 0xAACC30C4) + (~a1 | 0x5533CF3B))) ^ 0xA78032EC);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_10034BCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v10
                                                             + 8
                                                             * (int)(((((a7 - 370) | 0x49)
                                                                     + v7
                                                                     + ((a7 + 1234610901) & 0xFF7FD6D7))
                                                                    * ((v8 & 0x18) == 0)) ^ a7)))(a1, a2, (v9 - a2));
}

uint64_t sub_10034BD18(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((108 * (a8 + 1 == v9 + 32)) ^ a1)))();
}

uint64_t sub_10034BDE8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1594
                                * ((v6 & (2 * (*(unsigned __int8 *)(a2 + 5) - 242)))
                                 + ((v2 + v4 - 400) ^ 0x47F3FA33 ^ (*(unsigned __int8 *)(a2 + 5) - 242)) == v5)) ^ v4)))();
}

uint64_t sub_10034BE34()
{
  LODWORD(STACK[0x4EC]) = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (v0 ^ (8
                                     * ((v0 ^ 0x690u) - 23692131 + *(_DWORD *)(STACK[0x388] + 360) - 759 >= ((v0 - 577) | 0xD1u) - 759)))))();
}

uint64_t sub_10034BE84@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (v5 + a1 + 407)) = *(unsigned char *)(v4 + (v5 + a1 + 407))
                                                 - ((*(unsigned char *)(v4 + (v5 + a1 + 407)) << (-83 * (a2 ^ 0x58) - 89)) & 0x30)
                                                 + 24;
  return (*(uint64_t (**)(void))(v6 + 8 * ((254 * (a1 - 1 == a3)) ^ a2)))();
}

uint64_t sub_10034BEDC@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  *(int8x16_t *)(a1 + (a2 + 16)) = vaddq_s8(vsubq_s8(*v3, vandq_s8(vaddq_s8(*v3, *v3), v7)), v8);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == 16) * v5) ^ v2)))();
}

uint64_t sub_10034BEE8(uint64_t a1, int a2, uint64_t a3, int a4)
{
  *(void *)(v8 + (v5 + v4)) = *(void *)(v7 + (v5 + v4));
  return (*(uint64_t (**)(uint64_t, void))(v9 + 8 * (((a2 == 0) * a4) ^ v6)))(a1, (a2 + 8));
}

uint64_t sub_10034BF18(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((a7 ^ 0x9D0) - 1052) * ((a3 + a8 - 16) < 0xFFFFFFF0)) ^ a7)))();
}

uint64_t sub_10034BF50(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((299 * (*(_DWORD *)(v1 + 4 * v2) == a1 + v3 - 1065 + 7 * (v3 ^ 0x693) - 2218)) ^ v3)))();
}

uint64_t sub_10034BF94@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X6>, int a7@<W8>)
{
  BOOL v12 = a3 < v10;
  *(unsigned char *)(a6 + (a7 + a1)) = *(unsigned char *)(a5 + (v7 + v9))
                                           + ~(((v8 ^ a4) - 2) & (2 * *(unsigned char *)(a5 + (v7 + v9))))
                                           + 25;
  unsigned int v13 = v7 + 1 + a2;
  int v14 = v12 ^ (v13 < v10);
  BOOL v15 = v13 < a3;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((127 * !v12) ^ v8)))();
}

void sub_10034C008(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0x147CEA7F17742063) = v2;
  *(_DWORD *)(v1 + 32) = 605940026;
}

uint64_t sub_10034C068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)((((v8 - 1612717675) & 0xED23DBBF ^ (v6 + 566) ^ ((v8 - 911) | 0x180)) * (v7 == a6)) ^ v8)))();
}

uint64_t sub_10034C0B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((232 * (a2 + 1 == v4 + 64)) ^ v2)))();
}

uint64_t sub_10034C16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  if (a31 == 2) {
    return (*(uint64_t (**)(uint64_t))(v36
  }
                                              + 8
                                              * (((LODWORD(STACK[0x2C0]) == 606950823) * (((v37 - 16) | 0x49) ^ 0x96)) ^ (v37 + 57))))(a11);
  if (a31 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v36
  }
                                                       + 8
                                                       * ((326
                                                         * (((LODWORD(STACK[0x2C0]) == 606950823) ^ (v37 - 1)) & 1)) ^ (v37 + 134))))(a1, a11);
  unint64_t v39 = ((unint64_t)&a36 ^ 0xFFF7BFEDD7F0FFF5)
      + 0x7DFDDEF6B93F7F0BLL
      + (((void)&a36 << (v37 ^ 0x11u)) & 0xFFEF7FDBAFE1FFE0);
  LOBYTE(STACK[0x2BF]) = (v39 ^ 0xBA) * (v39 + 17);
  BOOL v40 = (((v37 ^ 0x227) - 567) | 0x10) == 107;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8 * ((v40 | (8 * v40)) ^ v37 ^ 0x227)))(a1, a11);
}

uint64_t sub_10034C2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((((a5 + a7 - 16) < 0xFFFFFFF0) ^ (a6 + 123)) & 1)
                                * (a6 - 1265)) | a6)))();
}

uint64_t sub_10034C320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((3193 * (((a5 - 288) & v6) == ((a5 + 420) ^ 0x2DC))) ^ (a5 + 761))))();
}

uint64_t sub_10034C360@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v19 = a1 + 647;
  *(void *)(v18 - 104) = a17;
  *(void *)(v18 - 128) = a17;
  *(void *)(v18 - 120) = a16;
  *(void *)(v18 - 144) = a15;
  *(void *)(v18 - 136) = a5;
  *(_DWORD *)(v18 - 112) = a1
                         + 1224239923
                         * ((1237618092
                           - ((v18 - 144) ^ 0x4DA515E4 | 0x49C48DAC)
                           + ((v18 - 144) ^ 0x4DA515E4 | 0xB63B7253)) ^ 0x92D9A60)
                         + 417;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (a1 + 2075)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((a14 - 1206753084 < ((v19 - 195) | 0x540u) + 2147481660) * (v19 - 739)) ^ (v19 - 272))))(v20);
}

uint64_t sub_10034C440@<X0>(int a1@<W1>, int a2@<W7>, int a3@<W8>)
{
  int v6 = *(_DWORD *)(v4 + v3 * (uint64_t)a2 + 36);
  BOOL v8 = (v6 - 875378353 > 1676350273 || v6 - 875378353 < SLODWORD(STACK[0x430])) && v6 != a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((v8 * (((a3 - 396) ^ 0xFFFFF851) + a3 - 1829)) | a3)))();
}

uint64_t sub_10034C4A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v28 = a8 + 1;
  *(unsigned char *)(v24 + (v20 + v28 + 168)) = *(unsigned char *)((v21 ^ v22) + a20 + v27 + v23)
                                                    - ((2 * *(unsigned char *)((v21 ^ v22) + a20 + v27 + v23)) & 0x30)
                                                    + 24;
  unint64_t v29 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((((a4 + v28 + 1) < 0x40) * v25) ^ v21));
  return v29(v29, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12);
}

uint64_t sub_10034C4AC@<X0>(int a1@<W2>, unsigned int a2@<W3>, uint64_t a3@<X8>, uint8x8_t a4@<D0>)
{
  a4.i32[0] = *(_DWORD *)(a3 + a2 + 1);
  *(_DWORD *)(a3 - 3 + (v5 + v4)) = vmovn_s16((int16x8_t)vmovl_u8(a4)).u32[0];
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 == 4) * ((((a1 | 0x12) - 1080) | 0x201) - 873)) ^ (a1 | 0x12))))();
}

uint64_t sub_10034C508()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0)
                                * (7 * (v3 ^ 0x356) + 2099)) ^ v3)))();
}

uint64_t sub_10034C54C@<X0>(uint64_t a1@<X8>)
{
  BOOL v8 = v4 > 0xE320CA94;
  *(unsigned char *)(a1 + (v6 - 1155520751)) = *(unsigned char *)(v1 + (v6 - 1155520751));
  if (v8 == v6 - 671130499 < v3) {
    BOOL v8 = v6 - 671130499 < v5;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v8 * ((v2 + 1058) ^ 0x6B5)) ^ v2)))();
}

void sub_10034C5BC(void *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  BOOL v19 = v8 > a2;
  uint64_t v20 = 4 * (v16 + ((v10 + 1326) ^ (v13 + 696)));
  int v21 = v7 + v15 + (*(_DWORD *)(*v11 + v20) ^ v17) + (*(_DWORD *)(*v12 + v20) ^ v17);
  *(_DWORD *)(*a1 + v20) = v21 + v17 - (v14 & (2 * v21));
  if (v19 == v16 + a6 < a7) {
    BOOL v19 = v16 + a6 < v9;
  }
  __asm { BRAA            X7, X17 }
}

uint64_t sub_10034CC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((181 * (v7 + a6 + v6 + ((v6 + 1962694640) & 0x8B03A1BF) - 2355 < 0x7FFFFF7D)) ^ v6)))();
}

uint64_t sub_10034CCB8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(unsigned __int8 *)(v2 + a1) == 152) * ((a2 ^ 0x140) + 2 * (a2 ^ 0x1BE) - 1701)) ^ a2)))();
}

uint64_t sub_10034CCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100367CD0(a1, a2, a3, a4, 704864277);
}

uint64_t sub_10034CD0C@<X0>(uint64_t a1@<X8>, uint64_t a2, char a3)
{
  unsigned int v8 = (v5 + 1298549710) & 0xB299AEE3;
  (*(void (**)(void, void, void))(v6 + 8 * (v5 ^ 0xF46)))(**(unsigned int **)(a1 + 8 * (v5 - 1919)), *v4, v8 + v3 + *(_DWORD *)(v7 - 0x38C18B7A1BA31324));
  unint64_t v9 = ((unint64_t)&a3 ^ 0x77CB3EFFB7FDDE6FLL)
     - 0x550008E1A524FF6FLL
     + ((2 * (void)&a3) & 0xEF967DFF6FFBBCD0);
  unint64_t v10 = (v8 - 855478997) & 0x32FD95DB ^ 0xFFFFFFFFFFFFFAB5;
  *(unsigned char *)(v7 - 0x38C18B7A1BA3132CLL + v10 + 32) = (v9 ^ 0xBA) * (v9 + 17);
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((((v10 == -32) << 9) | ((v10 == -32) << 10)) ^ v8)))();
}

uint64_t sub_10034CE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((v9 + 405) | 0x104 | (2
                                                     * (*(_DWORD *)(v10
                                                                  + (int)(((((v9 + 405) | 0x104) + 431) ^ 0xE7E7B2C1)
                                                                        + v8)
                                                                  * (uint64_t)a8) == (((v9 + 405) | 0x104) ^ 0x1FDD3406))))))();
}

uint64_t sub_10034CE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = *(void *)(v4 - 0x38C18B7A1BA3132CLL);
  int v8 = ((*(unsigned __int8 *)(v7 + (v3 - 1225318618)) ^ 0x18) << (((27 * (v6 ^ 0x6C)) ^ 0x74) + 45)) | ((*(unsigned __int8 *)(v7 + (v3 - 1225318619)) ^ 0x18) << 24) | ((*(unsigned __int8 *)(v7 + (v3 - 1225318617)) ^ 0x18) << 8) | *(unsigned __int8 *)(v7 + (v3 - 1225318616)) ^ 0x18;
  BOOL v9 = ((v8 + v2 - ((2 * v8) & 0x483BD274)) & 0xFFFFFF ^ 0x1DE93A) - (*(_DWORD *)(a1 + 32) ^ v5) != -108174678;
  return (*(uint64_t (**)(void))(a2 + 8 * ((v9 | (4 * v9)) ^ v6)))();
}

uint64_t sub_10034CF50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = 1759421093 * ((v18 + 479994984 - 2 * ((v18 - 136) & 0x1C9C24F0)) ^ 0xAFE194A4);
  *(void *)(v18 - 128) = v16;
  *(_DWORD *)(v18 - 120) = v15 - v19 + 985;
  *(_DWORD *)(v18 - 136) = v15 + 1310 - v19 + v17 + 1167019135;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x992)))(v18 - 136);
  *(void *)(v18 - 128) = a14;
  *(void *)(v18 - 112) = a13;
  *(_DWORD *)(v18 - 120) = v15
                         + 1310
                         + 1178560073 * (((~(v18 - 136) & 0xB317A894) - (~(v18 - 136) | 0xB317A895)) ^ 0x983D0F7)
                         - 612;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 1902)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((363 * (*(_DWORD *)(v18 - 136) > (((v15 - 324) | 0x288) ^ 0x5B89B73Eu))) ^ (v15 + 1310))))(v20);
}

void sub_10034D07C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) ^ (1225351577 * ((-2 - ((a1 | 0x21ABC784) + (~a1 | 0xDE54387B))) ^ 0xFDCEE06D));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10034D154()
{
  return sub_10035E0F8(-1633704640);
}

uint64_t sub_10034D1B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 < a4 - 1973) * (a4 - 1970)) ^ (a4 - 982))))();
}

uint64_t sub_10034D1E8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  v11.i64[0] = 0x1818181818181818;
  v11.i64[1] = 0x1818181818181818;
  uint64_t v12 = a1 + (((a6 - 1634) | 0x49) ^ v7);
  int8x16_t v13 = *(int8x16_t *)(v6 + v12 - 15);
  int8x16_t v14 = *(int8x16_t *)(v6 + v12 - 31);
  uint64_t v15 = v8 + v12;
  *(int8x16_t *)(v15 - 15) = veorq_s8(v13, v11);
  *(int8x16_t *)(v15 - 31) = veorq_s8(v14, v11);
  return (*(uint64_t (**)(void))(v10 + 8 * ((491 * ((v9 & 0xFFFFFFE0) != 32)) ^ (a6 - 1409))))();
}

uint64_t sub_10034D250()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 + 267) | 0xA5) ^ 0x4EA) * (v1 != v3)) ^ (v0 - 199))))();
}

uint64_t sub_10034D288()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((v0 - 369) ^ 0xBD3)))(1576, 3012117910);
  STACK[0x640] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * ((97 * (((v2 == 0) ^ (v0 + 112)) & 1)) | (v0 - 369))))();
}

void sub_10034D2F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 3804331 * (((a1 | 0x51A664) - (a1 & 0x51A664)) ^ 0x7E848392);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10034D3C0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(void *)(&a19 + a2 + a1) = 0x1818181818181818;
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((4001 * (((((v20 ^ 0xFA1) - 2018) ^ (((v20 ^ 0x35) & v19) == 8)) & 1) == 0)) ^ v20 ^ 0xFA1)))();
}

uint64_t sub_10034D42C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((251 * (a2 + 1 == v3 + 16)) ^ a1)))();
}

uint64_t sub_10034D50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  BOOL v17 = v14 + 1795159567 < (a14 + 1211964903);
  if ((a14 + 1211964903) < 0xC04B1B25 != (v14 + 1795159567) < 0xC04B1B25) {
    BOOL v17 = (a14 + 1211964903) < 0xC04B1B25;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15
                                                                                                  + 8 * ((v17 * (v16 - 137)) ^ v16)))(a1, 1795159567, a3, a4, a5, a6, a7);
}

uint64_t sub_10034D57C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  int v10 = v2 - 1310131017;
  unsigned int v11 = (v3 + 1539030756) & 0xA44441FD;
  uint64_t v12 = 4 * (v7 + v4);
  int v13 = (*(_DWORD *)(*(void *)(v9 - 0x1F010F7499D3F79ELL) + v12) ^ v5)
      - (*(_DWORD *)(*(void *)(a2 - 0x1F010F7499D3F79ELL) + v12) ^ v5);
  *(_DWORD *)(*(void *)(a1 - 0x1F010F7499D3F79ELL) + v12) = v13 + v5 - ((v13 << (((v11 + 34) & 0x7A) - 121)) & v8);
  BOOL v15 = v7 - 2031053192 > 837352630 || v7 - 2031053192 < v10;
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((1457 * v15) ^ v11)))();
}

void sub_10034D6B8(int a1@<W8>)
{
  int v5 = v3 + 472 - a1 + 1523177148;
  if (*v4 + 244880036 < 0) {
    int v5 = v1;
  }
  sub_10035C35C(v2 + *v4 + v5 + 47);
}

uint64_t sub_10034D6F4()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((546
                                * ((((*(unsigned __int8 *)(v2 + 4) - 247) << (v3 + 26)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v0) == (((v3 + 537) | 9) ^ (v0 - 761)))) ^ v3)))();
}

uint64_t sub_10034D748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, unsigned int a15, unsigned int a16, unsigned int a17, int a18)
{
  unsigned int v22 = (((&a13 | 0xAC92F452) - &a13 + (&a13 & 0x536D0BA8)) ^ 0xE004762F)
      * v21;
  a13 = &STACK[0x44D5F6D91B577B04];
  a14 = a12;
  a15 = v22 - 1444487276;
  a16 = v22 + v20 - 2024874649;
  a17 = 366164236 - v22;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v20 + 660)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((3618
                                              * (a18 == v18
                                                      + ((v20 - 1530) | 0x290)
                                                      + ((v20 + 1524650455) & 0xDFE)
                                                      - 2216)) ^ v20)))(v23);
}

uint64_t sub_10034D830()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((v0 - 380) ^ 0x5A7) + 32) ^ 0xFDA ^ (47 * ((v0 - 380) ^ 0x5A7))) * (v1 == v2)) ^ (v0 - 380))))();
}

void sub_10034D874()
{
  *int v0 = *(_DWORD *)(v1 - 0x38C18B7A1BA31314);
}

uint64_t sub_10034D8C4()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 + 698)))(32, 0x101004023FF3BD5) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((((((v1 ^ 0x11) + 1) ^ v2) & 1) * (v1 - 1540)) ^ v1)))();
}

uint64_t sub_10034D920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((1203 * ((a8 + 1 + v9) < 0x30)) ^ v8)))();
}

uint64_t sub_10034D9F4(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v2 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v1) == v1)
                                * (((2 * a1) ^ 0x6F5) + 866)) ^ a1)))();
}

uint64_t sub_10034DA3C()
{
  unsigned int v5 = *(unsigned __int8 *)(v2 + 1) + ((v3 - 729) ^ 0xFFFFFC73);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((3499 * ((v1 & (2 * v5)) + (v5 ^ v0) == ((v3 - 1213574635) & 0x4855A97F ^ (v0 - 339)))) ^ v3)))();
}

uint64_t sub_10034DAA0@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,int a22,int a23,int a24,uint64_t (*a25)(void))
{
  *(_DWORD *)(v27 - 180) = (a4 ^ v25) + (a19 ^ v25) + v25 - (v26 & (2 * ((a4 ^ v25) + (a19 ^ v25))));
  *(_DWORD *)(v27 - 176) = (a1 ^ v25) + (a20 ^ v25) + v25 - (v26 & (2 * ((a1 ^ v25) + (a20 ^ v25))));
  *(_DWORD *)(v27 - 172) = (a3 ^ v25) + (a22 ^ v25) + v25 - (v26 & (2 * ((a3 ^ v25) + (a22 ^ v25))));
  *(_DWORD *)(v27 - 168) = (a2 ^ v25) + (a24 ^ v25) + v25 - (v26 & (2 * ((a2 ^ v25) + (a24 ^ v25))));
  return a25();
}

void sub_10034DAC4()
{
}

uint64_t sub_10034DACC()
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * ((101
                                             * ((v3 ^ ((((47 * (v3 ^ 0x5AC)) ^ 0x21D) & v1) == 0)) & 1)) ^ v3)))((v0 - v2));
}

uint64_t sub_10034DB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,unsigned int a50,unsigned int a51,unsigned int a52,int a53,int a54,unsigned __int8 a55)
{
  return sub_100359930(a28, a3, a4, a5, a6, a7, a8, v55 + 19, a9, a10, a11, a12, (uint64_t)&a36, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_10034DB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  *(_DWORD *)(*(void *)(v33 + 96) + 1428) = 757585729;
  return sub_1003566C8(1948642754, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_10034DB50()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1325
                                * ((((*(unsigned __int8 *)(v2 + 3) - 134) << (((v3 + 33) | 0xF4) ^ 0xFD)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_10034DB9C(uint64_t a1)
{
  int v1 = (*(_DWORD *)a1 - 235795823 * ((a1 + 1658036232 - 2 * (a1 & 0x62D3A008)) ^ 0xF67EE951) - 532) | 3;
  signed int v2 = (v1 ^ 0x8E989213) + *(_DWORD *)(*(void *)(a1 + 8) - 0x1F010F7499D3F7A2);
  if (v2 < 0) {
    signed int v2 = -v2;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1022AC750 + v1 - 31)
                              + 8
                              * ((69
                                * (((v1 + 521) | 8)
                                 + (v2 ^ 0xF7FEFF73)
                                 + 765189840
                                 + ((2 * v2) & 0xEFFDFEE6)
                                 + (((v1 - 85) | 0x418) ^ 0xDA651A8E) < 0x7FFFFFFF)) ^ v1)
                              - 4))();
}

uint64_t sub_10034DCBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((41 * (((11 * (v13 ^ 0x218) + 334254200) & 0xEC13AB77 ^ 0x2008CAE8) + a13 > 0x7FFFFFFD)) ^ v13)))();
}

uint64_t sub_10034DD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v37 = *(unsigned __int8 *)(v36 - 156) ^ 0xCB;
  if (v37 == 1)
  {
    char v38 = a3 + a7 + 49;
    unsigned int v45 = *(_DWORD *)(v36 - 188);
    unsigned int v44 = *(_DWORD *)(v36 - 184);
    *(unsigned char *)(v36 - 196) = ((8 * v44) ^ 0xE0) - 16 * (v44 & 3) + 24;
    *(unsigned char *)(v36 - 195) = (v38 ^ (v44 >> 5) ^ 0xCF) - ((2 * (v38 ^ (v44 >> 5) ^ 0xCF)) & 0x30) + 24;
    *(unsigned char *)(v36 - 194) = ((v44 >> 13) ^ 0x8D) - ((2 * ((v44 >> 13) ^ 0x8D)) & 0x30) + 24;
    HIDWORD(v46) = v45 ^ 0x11;
    LODWORD(v46) = v44;
    *(unsigned char *)(v36 - 193) = ((v44 >> 21) ^ 0xB4) - 2 * (((v44 >> 21) ^ 0xB4) & 0x1A ^ (v44 >> 21) & 2) + 24;
    *(unsigned char *)(v36 - 192) = (v46 >> 29) - ((2 * (v46 >> 29)) & 0x30) + 24;
    *(unsigned char *)(v36 - 191) = ((v45 >> 5) ^ 0xC9) - 2 * (((v45 >> 5) ^ 0xC9) & 0x1A ^ (v45 >> 5) & 2) + 24;
    *(unsigned char *)(v36 - 190) = (~(v45 >> 12) | 0xCF) + (v45 >> 13) + 25;
    v45 >>= 21;
    char v42 = v45 ^ 0xE3;
    char v43 = 2 * v45;
    goto LABEL_5;
  }
  if (v37 == 2)
  {
    char v38 = a3 + a7 + 49;
    unsigned int v39 = *(_DWORD *)(v36 - 188);
    unsigned int v40 = *(_DWORD *)(v36 - 184);
    *(unsigned char *)(v36 - 196) = ((v39 >> 21) ^ 0xE3) + ~((v38 ^ 0xB2) & (2 * (v39 >> 21))) + 25;
    *(unsigned char *)(v36 - 195) = (v39 >> 13) - ((v39 >> 12) & 0x30) + 24;
    HIDWORD(v41) = v39 ^ 0x11;
    LODWORD(v41) = v40;
    *(unsigned char *)(v36 - 194) = ((v39 >> 5) ^ 0xC9) - 2 * (((v39 >> 5) ^ 0xC9) & 0x1C ^ (v39 >> 5) & 4) + 24;
    *(unsigned char *)(v36 - 193) = (v41 >> 29) - ((2 * (v41 >> 29)) & 0x30) + 24;
    *(unsigned char *)(v36 - 192) = ((v40 >> 21) ^ 0xB4) - ((2 * ((v40 >> 21) ^ 0xB4)) & 0x30) + 24;
    *(unsigned char *)(v36 - 191) = ((v40 >> 13) ^ 0x8D) - ((2 * ((v40 >> 13) ^ 0x8D)) & 0x30) + 24;
    *(unsigned char *)(v36 - 190) = ((v40 >> 5) ^ 0x4D) - ((2 * ((v40 >> 5) ^ 0x4D)) & 0x30) + 24;
    char v42 = (8 * v40) ^ 0xE0;
    char v43 = 16 * v40;
LABEL_5:
    *(unsigned char *)(v36 - 189) = v42 - (v43 & 0x30) + (v38 ^ (a7 + 126) ^ 0xF);
  }
  return sub_100378CE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_10034DF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((a5 - 1659291386) & 0x62E6C3F6) + ((a5 + 55) | 0xA) - 1301) * ((v5 & 0x18) == 0)) ^ a5)))();
}

uint64_t sub_10034DFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25)
{
  return sub_100362468(((a24 + v25 + 4) ^ 0xF93F79F7) + 267771902 + ((2 * (a24 + v25 + 4)) & 0xF27EF3EE), (2 * (a24 + v25 + 4)) & 0xF27EF3EE, 267771902, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_10034E0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * ((14 * (((v10 == 0) ^ (((v9 - 105) ^ 0xA4) + v9 - 105 + 1)) & 1)) ^ (v9 + 75))))(a1, a2, a3, a4, a5, a8, a7, v10);
}

uint64_t sub_10034E0F4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v9 = ((a6 + v7 + 22590531) ^ (v7 - 416)) + v6 >= v6 + a1;
  return (*(uint64_t (**)(void))(v8 + 8 * (((4 * v9) | (8 * v9)) ^ v7)))();
}

void sub_10034E148(uint64_t a1)
{
  int v1 = 1178560073 * ((-2 - ((a1 | 0x5A50E64C) + (~a1 | 0xA5AF19B3))) ^ 0x1F3B61D1);
  int v2 = *(_DWORD *)(a1 + 40) ^ v1;
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 64);
  int v5 = *(_DWORD *)(a1 + 24) + v1;
  qmemcpy(v8, "k|to\\mgq", sizeof(v8));
  BOOL v9 = &v10;
  if (v3 | v4) {
    BOOL v6 = v5 == 1308924072;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = !v6;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10034E2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)((((v7 - 907364397) ^ 0xF7F98EE7 ^ (v9 + 569) ^ (v7 - 907364397) & 0x361547E5)
                                     * (v8 == a7)) ^ v7)))();
}

uint64_t sub_10034E2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = STACK[0x270];
  STACK[0x628] = *(void *)(v3 + 8 * (v2 - 719));
  return sub_100375CF8(a1, a2, v4);
}

uint64_t sub_10034E32C(double a1)
{
  *(double *)(v4 + (v1 ^ 0x39A)) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 == 0) * v2) ^ v1)))();
}

uint64_t sub_10034E35C()
{
  LODWORD(STACK[0x43C]) = v0;
  STACK[0x288] = (unint64_t)&STACK[0x7DDA1A6497070011];
  *(void *)(v3 - 192) = &STACK[0x7DDA1A6497070011];
  *(unsigned char *)(v3 - 200) = (-85 * ((v3 + 56 - 2 * ((v3 + 56) & 0x14) + 20) ^ 0xE2)) ^ 0x16;
  *(_DWORD *)(v3 - 184) = 3804331 * ((v3 - 200 - 2 * ((v3 - 200) & 0x54A65C14) + 1420188692) ^ 0x2A7379E2) + v1 + 225;
  STACK[0x280] = (unint64_t)&STACK[0x6270735DB71EFEAF];
  *(void *)(v3 - 176) = &STACK[0x6270735DB71EFEAF];
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 ^ 0xC74)))(v3 - 200);
  int v5 = *(_DWORD *)(v3 - 180);
  LODWORD(STACK[0x48C]) = v5;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v5 == 605940026) * (((v1 ^ 0x4E2) + 901) ^ (37 * (v1 ^ 0x4E2)))) ^ v1)))(v4);
}

uint64_t sub_10034E454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  unsigned int v43 = (v39 ^ (a6 - 341)) + v41 + 877314810;
  unsigned int v44 = *(_DWORD *)(&a25 + (v43 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a4 + v43) = v44 ^ 0x7D;
  unsigned int v45 = v41 + v37;
  *(unsigned char *)(a4 + v45 + 1) = (BYTE2(v44) ^ 0x60) - ((v44 >> 15) & 0x30) + 24;
  *(unsigned char *)(a4 + v45) = (BYTE1(v44) ^ 0xAB) - ((2 * (BYTE1(v44) ^ 0xAB)) & 0x30) + 24;
  *(unsigned char *)(a4 + v45 + 2) = (HIBYTE(v44) ^ 0x46) + (~(v44 >> 23) | 0xCF) + 25;
  BOOL v46 = v41 - 1814392173 < (a37 - 1845078358);
  if (v41 - 1814392173 < v38 != a37 - 1845078358 < v38) {
    BOOL v46 = a37 - 1845078358 < v38;
  }
  return (*(uint64_t (**)(void))(v42 + 8 * ((v46 * v40) ^ v39)))();
}

uint64_t sub_10034E544(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v5 + 96) + 1428) = 757585717;
  return (*(uint64_t (**)(void))(v4 + 8 * ((472 * (*(_DWORD *)(a2 + 4) == v3 - 278 + v2 + (v3 ^ 0x2D))) ^ v3)))();
}

uint64_t sub_10034E59C(_DWORD *a1)
{
  unsigned int v1 = 1224239923 * (((a1 | 0x8C9528F6) - a1 + (a1 & 0x736AD709)) ^ 0x7E26D521);
  unsigned int v2 = a1[4] - v1;
  int v3 = *a1 ^ v1;
  unsigned int v5 = v3 - 884601868;
  BOOL v4 = v3 - 884601868 < 0;
  LODWORD(v6) = 884601868 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1022AC750 + (int)(v2 - 259))
                              + 8 * (int)((57 * (v6 != ((2 * v6) & 0x600B5A20))) ^ v2)
                              - 4))();
}

uint64_t sub_10034E650(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned int a22)
{
  if (a22 < 0x6BE6115F != v23 + 1282733605 < ((86 * (a7 ^ (a7 - 22))) ^ (7 * (a7 ^ (a7 + 37))) ^ 0x6BE61716u)) {
    BOOL v24 = v23 + 1282733605 < ((86 * (a7 ^ (a7 - 22))) ^ (7 * (a7 ^ (a7 + 37))) ^ 0x6BE61716u);
  }
  else {
    BOOL v24 = v23 + 1282733605 > a22;
  }
  return (*(uint64_t (**)(void))(v22 + 8 * ((171 * !v24) ^ (a3 + a7 - 46))))();
}

uint64_t sub_10034E6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  a13 = 108757529
      * (((&a12 | 0x7488BE6A) - &a12 + (&a12 & 0x8B774190)) ^ 0x9414DC41)
      - 504207030;
  uint64_t v15 = (*(uint64_t (**)(int *))(v14 + 17680))(&a12);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((1751 * (a12 == ((v13 + 597) ^ 0x2B5))) ^ 0x2CBu)))(v15);
}

uint64_t sub_10034E794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((89 * (*(_DWORD *)(a4 + 48 * (v7 + v4 + v5 + 366)) != (v5 ^ 0x19F31F1C))) ^ v5)))();
}

uint64_t sub_10034E7E0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1087
                                * ((v6 & (2 * (*(unsigned __int8 *)(a2 + 8) - 1)))
                                 + ((*(unsigned __int8 *)(a2 + 8) - 1) ^ (((v4 + 1019178044) & 0xDF5FD7FF) + a3)) == v5)) ^ v4)))();
}

uint64_t sub_10034E834@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v24 = 5 * (v16 ^ 0x281);
  int v25 = ((((v23 - 144) | 0xA1543A50) - (v23 - 144) + ((v23 - 144) & 0x5EABC5A8)) ^ 0x1BC04232) * v19;
  *(_DWORD *)(v23 - 140) = v16 - v25 + 967;
  *(_DWORD *)(v23 - 136) = v25 + v18 + 159275639 + v24;
  *(void *)(v23 - 128) = a1;
  *(void *)(v23 - 120) = v17;
  uint64_t v26 = v17;
  (*(void (**)(uint64_t))(v20 + 8 * (v16 ^ 0xAC8)))(v23 - 144);
  *(_DWORD *)(v23 - 128) = (v24 - 1131) ^ (628203409
                                         * ((((2 * (v23 - 144)) | 0xD665260C) - (v23 - 144) + 349007098) ^ 0x69BA9F35));
  *(void *)(v23 - 144) = a14;
  *(void *)(v23 - 136) = a15;
  (*(void (**)(uint64_t))(v20 + 8 * (v24 + 506)))(v23 - 144);
  *(void *)(v23 - 120) = a14;
  *(void *)(v23 - 112) = a16;
  *(_DWORD *)(v23 - 128) = (v24 - 1136) ^ (1178560073
                                         * ((((v23 - 144) | 0x21D009AC) - (v23 - 144) + ((v23 - 144) & 0xDE2FF650)) ^ 0x9B4471CE));
  *(void *)(v23 - 144) = a15;
  *(void *)(v23 - 136) = v26;
  (*(void (**)(uint64_t))(v20 + 8 * (v24 + 565)))(v23 - 144);
  *(_DWORD *)(v23 - 112) = v24 - 1122 + 1224239923 * ((v23 + 1260386870 - 2 * ((v23 - 144) & 0x4B1FFAC6)) ^ 0xB9AC0711);
  *(void *)(v23 - 144) = a15;
  *(void *)(v23 - 136) = a16;
  *(void *)(v23 - 104) = v22;
  *(void *)(v23 - 128) = a16;
  *(void *)(v23 - 120) = a14;
  (*(void (**)(uint64_t))(v20 + 8 * (v24 ^ 0xE18)))(v23 - 144);
  *(_DWORD *)(v23 - 120) = v24 - 892 + 1225351577 * ((v23 - 144) ^ 0x239AD816);
  *(void *)(v23 - 112) = a7;
  *(void *)(v23 - 104) = a14;
  *(void *)(v23 - 144) = a15;
  *(void *)(v23 - 136) = a16;
  *(void *)(v23 - 128) = a16;
  (*(void (**)(uint64_t))(v20 + 8 * (v24 + 534)))(v23 - 144);
  *(void *)(v23 - 144) = a10;
  *(void *)(v23 - 136) = a15;
  *(_DWORD *)(v23 - 128) = (v24 - 1131) ^ (628203409
                                         * (((v23 - 144) & 0xDBC4E177 | ~((v23 - 144) | 0xDBC4E177)) ^ 0xA6B312BB));
  (*(void (**)(uint64_t))(v20 + 8 * (v24 + 506)))(v23 - 144);
  *(_DWORD *)(v23 - 128) = (v24 - 1136) ^ (1178560073
                                         * ((-2
                                           - (((v23 - 144) ^ 0x9C01100 | 0x56112CF5)
                                            + ((v23 - 144) ^ 0x4002CC4 | 0xA9EED30A))) ^ 0x48ABBA59));
  *(void *)(v23 - 120) = a10;
  *(void *)(v23 - 112) = v21;
  *(void *)(v23 - 144) = a15;
  *(void *)(v23 - 136) = v26;
  (*(void (**)(uint64_t))(v20 + 8 * (v24 + 565)))(v23 - 144);
  *(void *)(v23 - 144) = a15;
  *(void *)(v23 - 136) = v21;
  *(void *)(v23 - 104) = v22;
  *(void *)(v23 - 128) = v21;
  *(void *)(v23 - 120) = a10;
  *(_DWORD *)(v23 - 112) = v24
                         - 1122
                         + 1224239923 * ((2 * ((v23 - 144) & 0x10151408) - (v23 - 144) - 269816843) ^ 0x1D591622);
  (*(void (**)(uint64_t))(v20 + 8 * (v24 + 536)))(v23 - 144);
  *(void *)(v23 - 136) = v21;
  *(void *)(v23 - 128) = v21;
  *(_DWORD *)(v23 - 120) = v24
                         - 892
                         + 1225351577 * ((2 * ((v23 - 144) & 0x7DE927C0) - (v23 - 144) - 2112432067) ^ 0xA18C002B);
  *(void *)(v23 - 112) = a8;
  *(void *)(v23 - 104) = a10;
  *(void *)(v23 - 144) = a15;
  (*(void (**)(uint64_t))(v20 + 8 * (v24 ^ 0xE1A)))(v23 - 144);
  *(void *)(v23 - 136) = v21;
  *(void *)(v23 - 128) = a16;
  *(_DWORD *)(v23 - 144) = v24
                         - 108757529
                         * ((((2 * ((v23 - 144) ^ 0x139270AD)) | 0xB81B59F6) - ((v23 - 144) ^ 0x139270AD) + 603083525) ^ 0x2F03BE7D)
                         - 191;
  (*(void (**)(uint64_t))(v20 + 8 * (v24 + 551)))(v23 - 144);
  *(void *)(v23 - 136) = v21;
  *(_DWORD *)(v23 - 140) = (v24 - 131) ^ (460628867
                                        * ((-1606058528 - ((v23 - 144) | 0xA0457DE0) + ((v23 - 144) | 0x5FBA821F)) ^ 0x132C0062));
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v24 ^ 0xE02)))(v23 - 144);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (((*(_DWORD *)(v23 - 144) < ((v24 - 818) ^ 0x650628DEu))
                                              * ((v24 - 818) ^ 0x24A)) ^ v24)))(v27);
}

uint64_t sub_10034ECFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((35 * ((a7 + 1 + v7) < 0x20)) ^ a3)))();
}

uint64_t sub_10034EDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  unsigned int v26 = (a23 ^ v25) - (((a23 ^ v25) << ((15 * a19) ^ 0x4A)) & 0x82B34678) - 1051090116;
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * ((431
                                * (((2 * v26) & 0xFBF79D7C ^ 0x82B30478) + (v26 ^ 0x3CA26D82) + 1719483894 == 1685654708)) ^ (v24 - 231))))();
}

uint64_t sub_10034EEA0@<X0>(int a1@<W0>, int a2@<W4>, int a3@<W5>, int a4@<W7>, uint64_t a5@<X8>)
{
  *(unsigned char *)(a5 + (a1 + a3)) = *(unsigned char *)(v5 + (a1 + a3));
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 - 1 == a2) * a4) ^ (v6 + 805))))();
}

uint64_t sub_10034EED0@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W8>)
{
  int v13 = v10 + a5 - 756;
  BOOL v14 = v7 < a2;
  *(unsigned char *)(v9 + (v5 + 1 + v11)) = *(unsigned char *)(v8 + (a4 + v13 + 757));
  unsigned int v15 = a3 + v13 + 311;
  int v16 = v14 ^ (v15 < a2);
  BOOL v17 = v15 < v7;
  if (!v16) {
    BOOL v14 = v17;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((v14 * a1) ^ v6)))();
}

void sub_10034EEE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10034EF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = (v17 - 1998202969) & 0x771A23F7;
  int v21 = 1759421093 * ((v19 + 1535345883 - 2 * ((v19 - 136) & 0x5B838563)) ^ 0xE8FE3537);
  *(void *)(v19 - 128) = v16;
  *(_DWORD *)(v19 - 120) = v17 - v21 - 662;
  *(_DWORD *)(v19 - 136) = v18 - v21 + (v20 ^ 0xEDCF0ADF);
  (*(void (**)(uint64_t))(v14 + 8 * (v17 + 291)))(v19 - 136);
  *(void *)(v19 - 112) = v15;
  *(void *)(v19 - 128) = a14;
  *(_DWORD *)(v19 - 120) = v20
                         + 1178560073
                         * ((((v19 - 136) | 0xAA3D338D) - (v19 - 136) + ((v19 - 136) & 0x55C2CC70)) ^ 0x10A94BEF)
                         + 172;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v20 ^ 0xBE0)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((15
                                              * ((((v20 - 202) ^ 0x669 ^ (*(_DWORD *)(v19 - 136) > 0x5B89B5B3u)) & 1) == 0)) ^ v20)))(v22);
}

uint64_t sub_10034F09C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((((v1 ^ 0x268) - 668) ^ 0x1BF) * ((a1 & 8) == 0)) ^ v1)))(a1);
}

void sub_10034F0D4()
{
  *int v0 = -605900061;
}

uint64_t sub_10034F11C()
{
  int v4 = v2 - 1558170891 + ((2 * v0) ^ 0x3D2);
  BOOL v6 = v4 > v0 + 1310235148 || v4 < v3 - 837248237;
  return (*(uint64_t (**)(void))(v1 + 8 * ((1023 * v6) ^ v0)))();
}

void sub_10034F174(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x2E910FB81C0D979FLL) = (*(_DWORD *)(a1 - 0x2E910FB81C0D979FLL) ^ 0x3C601931)
                                         + 1012930865
                                         - ((2 * (*(_DWORD *)(a1 - 0x2E910FB81C0D979FLL) ^ 0x3C601931) + 2) & 0x78C03262)
                                         + 1;
}

uint64_t sub_10034F1BC()
{
  *(_DWORD *)(*(void *)(v4 - 0x1F010F7499D3F79ELL) + 4 * ((((v2 - 1268) | 0x86) ^ v1) + v0)) = 1089336478;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((249 * (v1 + v0 + 45 < 0x7FFFFFFF)) ^ (v2 - 737))))(0x7FFFFFFFLL);
}

uint64_t sub_10034F228()
{
  BOOL v4 = v1 - 230195600 < (int)(v2 + 1707859365 + 17 * (v0 ^ 0x571));
  if (v2 > 0x1A341D2C != v1 - 230195600 < (int)((v0 - 676) ^ 0xE5CBE048)) {
    BOOL v4 = v2 > 0x1A341D2C;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((797 * v4) ^ v0)))();
}

uint64_t sub_10034F2A4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((a4 ^ 0x3DB) + 1422) ^ (5 * (a4 ^ 0x3DB))) * (v4 == a3)) ^ a4)))();
}

uint64_t sub_10034F2D4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((63 * (a2 + 1 == v4 + 48)) ^ v2)))();
}

uint64_t sub_10034F3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, int a13, unint64_t *a14, int a15)
{
  unsigned int v19 = 1755732067
      * (((&a11 | 0xA1ED4A11) - &a11 + (&a11 & 0x5E12B5E8)) ^ 0x7F2BF7CA);
  a13 = (v18 + 1085) ^ v19;
  a15 = v19 ^ 0x6FB949A;
  a11 = &STACK[0x1C320A2BCFF26981];
  a12 = v17;
  a14 = &STACK[0x752627A1EA5CFF38];
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v18 ^ 0x8A2)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v17 - 0x38C18B7A1BA31314) == v15)
                                              * (((v18 - 126) | 0x542) - 1111)) ^ v18)))(v20);
}

uint64_t sub_10034F48C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((225 * (*(_DWORD *)(v2 - 0x38C18B7A1BA31314) == v0 + 605939675)) ^ v0)))();
}

uint64_t sub_10034F4D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*(void *)(a2 + 96) + 24) = v3;
  int v4 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) + 712306420) & 0x6E10ACA4) + 1279446476;
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((11
                                             * (((2 * v4) & 0xD71EEB7A ^ 0x4610A820) + (v4 ^ 0xDC8723EF) - 1099699624 != 704864277)) ^ 0x7B1u)))(0);
}

uint64_t sub_10034F5BC(uint64_t a1)
{
  return sub_100385D8C(a1, 2457039158, 1880785756, 2457095123);
}

uint64_t sub_10034F5D0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((49 * (qword_102489BC0 == 0)) ^ v0)))();
}

uint64_t sub_10034F610(uint64_t a1)
{
  int v1 = 1374699841 * ((((2 * a1) | 0x4FD35BAC) - a1 + 1477857834) ^ 0xCA1DB5DF);
  int v2 = *(_DWORD *)a1 ^ v1;
  int v3 = *(_DWORD *)(a1 + 16) + v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x1F010F7499D3F7A2);
  unsigned int v6 = v4 - 1902603612;
  BOOL v5 = v4 - 1902603612 < 0;
  unsigned int v7 = 1902603612 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1022AC750 + (v2 ^ 0x5E))
                              + 8 * ((15 * (v3 >> 5 >= v7)) ^ v2)
                              - 4))();
}

uint64_t sub_10034F6C8@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(void *)(v8 + 16);
  uint64_t v4 = *(void *)(v8 + 40);
  BOOL v5 = (void *)(v2 - 184);
  *BOOL v5 = 0x1818181818181818;
  v5[1] = 0x1818181818181818;
  int v6 = 235795823 * (((v2 - 168) & 0xEF9CDC89 | ~((v2 - 168) | 0xEF9CDC89)) ^ 0x84CE6A2F);
  v5[7] = v2 + 0x5D591B602CF26C08;
  *(_DWORD *)(v2 - 132) = (a1 + 1973) ^ v6;
  *(_DWORD *)(v2 - 160) = v6 + 1285617507;
  _DWORD v5[2] = v3;
  void v5[4] = &v9;
  void v5[5] = v4;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 ^ 0x8E4)))(v2 - 168);
  *(_DWORD *)(v8 + 12) = *(_DWORD *)(v2 - 136);
  return result;
}

uint64_t sub_10034F7C0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((((a6 + 9) | 2) + 652) ^ (a6 + 644)) * (v6 == a2)) ^ a6)))();
}

uint64_t sub_10034F7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,_DWORD *a31)
{
  *a31 = 191590270;
  uint64_t v36 = (*v33 + 277873831);
  unint64_t v37 = 235795823 * ((v35 - 152 + v34 - 2 * ((v35 - 152) & v34)) ^ 0x9F58FF5CCD3DE25CLL);
  STACK[0x5D8] = v37 + 925807993;
  STACK[0x5C8] = v36 ^ v37;
  *(_DWORD *)(v35 - 152) = v37 ^ (v31 + 2107263296) ^ 0x6A;
  *(_DWORD *)(v35 - 148) = v31 + 2107263296 - v37;
  *(_DWORD *)(v35 - 144) = (v31 + 2107263385) ^ v37;
  *(_DWORD *)(v35 - 128) = -2047004545 - v37 + v31;
  *(_DWORD *)(v35 - 124) = v37 + 1;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v32 + 8 * (int)(v31 ^ 0xF774FB6A)))(v35 - 152);
  return (*(uint64_t (**)(uint64_t))(v32 + 8 * *(int *)(v35 - 112)))(v38);
}

uint64_t sub_10034F804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  LODWORD(a17) = HIDWORD(a13) + 1026220715;
  v44.i64[0] = 0x1818181818181818;
  v44.i64[1] = 0x1818181818181818;
  HIDWORD(v47) = v42 - 692;
  uint64_t v45 = (a6 - 50399049) & 0x59A4E75E;
  LODWORD(v47) = v45 ^ 0x3E3;
  return sub_100388A2C(*(double *)vdupq_n_s32(0x483BD274u).i64, *(double *)vdupq_n_s32(0x241DE93Au).i64, v44, a1, (const char *)&a24 + 4, a3, v45, (v45 + 618073253) & 0xDB28F5D3, a6, a7, a8, a9, a10, a11, a12, a13, a14, a3, a16,
           a17,
           a18,
           a19,
           a20,
           v47,
           v43 - 16,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_10034F8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((155 * (a6 + 1 == v9 + 32)) ^ a8)))();
}

void sub_10034F988(uint64_t a1)
{
  int v1 = 1374699841 * ((a1 - 1542394297 - 2 * (a1 & 0xA410EE47)) ^ 0xC9E4F64E);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_10034FA50(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v12 = *(_DWORD *)(v10 + v9 * (uint64_t)a8 + 32) != (((v8 ^ 0x20E) - 201) ^ (a2 - 124));
  return (*(uint64_t (**)(void))(v11 + 8 * ((4 * v12) | (8 * v12) | v8)))();
}

uint64_t sub_10034FA8C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v9 = (*v7 & (v4 ^ 0x7FFFFBBC) | v7[623] & 0x80000000) >> 1;
  v7[623] = v7[396] ^ a3 ^ *(_DWORD *)(v5 + 4 * ((*v7 & 1) == 0)) ^ ((v9 ^ ((v4 ^ 0x6B7) + a4))
                                                                     + v6
                                                                     - 2
                                                                     * ((v9 ^ ((v4 ^ 0x6B7) + a4)) & (v6 + 2) ^ v9 & 2));
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((2 * (LODWORD(STACK[0x444]) > 0x26F)) | (32 * (LODWORD(STACK[0x444]) > 0x26F))) ^ v4)))();
}

uint64_t sub_10034FB1C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((LODWORD(STACK[0x240]) - 978) & v1) == LODWORD(STACK[0x23C]) + 23691856) * v0) ^ LODWORD(STACK[0x240]))))();
}

uint64_t sub_10034FB54@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, unsigned int a5, uint64_t a6, unint64_t *a7, int a8, unint64_t *a9, char a10, int a11)
{
  uint64_t v14 = *(void *)(v11 + 8);
  unsigned int v15 = 1755732067 * (((&a4 | 0xA5D81ADF) - (&a4 | 0x5A27E520) + 1512564000) ^ 0x7B1EA704);
  a9 = &STACK[0xE249DD063F19B84];
  a4 = &STACK[0x164C0FDDF1987668];
  a10 = (99 * (((&a4 | 0xDF) - (&a4 | 0x20) + 32) ^ 4)) ^ 0x5E;
  a5 = ((a1 ^ 0x4D9B6EC9) + 2074864112 + ((a1 << ((v13 + 126) ^ 0x32)) & 0x99EF6DA0 ^ 0xC92020)) ^ v15;
  a8 = v15 + 1172343974 + v13;
  a6 = v14;
  a7 = &STACK[0x16DAB37677B31EBC];
  uint64_t v16 = (*(uint64_t (**)(unint64_t **))(v12 + 8 * (v13 + 837)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * ((672 * (a11 == 605940026)) ^ v13)))(v16);
}

uint64_t sub_10034FC9C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0;
}

void sub_10034FCB4(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_10034FD3C(_DWORD *a1@<X8>)
{
  int v4 = ((*v5 ^ 0x18) << 24) | ((v5[1] ^ 0x18) << 16) | ((v5[2] ^ 0x18) << 8) | (11 * (v1 ^ 0x8A)) ^ v5[3] ^ 0x4D;
  *(_DWORD *)(*(void *)(v2 + 8) - 0x2E91F1FE0AA58417) = v4 + v3 - ((2 * v4) & 0x483BD274);
  *(_DWORD *)(v2 + 4) = *a1;
}

uint64_t sub_10034FDF8()
{
  STACK[0x698] = 0x4F69F0B8D6614067;
  int v6 = *(_DWORD **)(v1 + 8 * (v0 - 597));
  STACK[0x3D0] = (unint64_t)v6;
  LODWORD(STACK[0x444]) = *v6 - 191590269;
  uint64_t v7 = *(unsigned int **)(v1 + 8 * (int)(v0 & 0xCD0F9420));
  STACK[0x3E0] = (unint64_t)v7;
  uint64_t v8 = *v7;
  unint64_t v9 = 1755732067 * ((v2 + 0x46E7E25FCDDF0095 - 2 * (v2 & 0x46E7E25FCDDF0095)) ^ 0x9B4C45601319BD4ELL);
  int v10 = 1755732067 * ((v2 - 841023339 - 2 * (v2 & 0xCDDF0095)) ^ 0x1319BD4E) + v0 + 519880481;
  *(_DWORD *)(v5 - 176) = v10 + 205;
  *(_DWORD *)(v5 - 160) = (v0 - 1689052259) ^ (1755732067 * ((v2 - 841023339 - 2 * (v2 & 0xCDDF0095)) ^ 0x1319BD4E));
  *(void *)(v5 - 184) = 647934162 - v9;
  *(_DWORD *)(v5 - 196) = 1755732067 * ((v2 - 841023339 - 2 * (v2 & 0xCDDF0095)) ^ 0x1319BD4E);
  *(_DWORD *)(v5 - 192) = v10 + 80;
  *(void *)(v5 - 168) = v8 + v9;
  *(_DWORD *)(v5 - 188) = (v0 + 519880481) ^ (1755732067 * ((v2 - 841023339 - 2 * (v2 & 0xCDDF0095)) ^ 0x1319BD4E));
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 ^ 0xA26)))(v5 - 200);
  uint64_t v12 = *(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v5 - 200));
  LODWORD(STACK[0x3D8]) = v3;
  return v12(v11);
}

uint64_t sub_10034FF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  BOOL v18 = *(_DWORD *)(*a14 + 4 * (v16 - 105293468 + ((v17 - 874115544) & 0x3419F1D7) + 411)) == v14;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v18 | (8 * v18)) ^ (v17 + 981))))();
}

uint64_t sub_10034FF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unint64_t a6)
{
  uint64_t v11 = (((v7 ^ a5) + 196) ^ a6) + v6;
  BOOL v13 = v8 != 35 && v11 != v9 + 200;
  return (*(uint64_t (**)(void))(v10 + 8 * ((56 * v13) ^ v7)))();
}

uint64_t sub_10034FF5C@<X0>(int a1@<W2>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((234 * (a3 - 1803655619 < ((v3 - a2 + 2164) ^ 0x84Cu))) ^ (a1 + v3 - 468))))();
}

uint64_t sub_10034FFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 == a5) ^ (a6 - 63)) & 1 | (a6 - 64))))();
}

uint64_t sub_10034FFE8(int a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(a4 + (v5 - 8)) = *(void *)(v6 + (v5 - 8));
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 == -8) * a2) ^ a5)))();
}

uint64_t sub_10034FFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  (*(void (**)(uint64_t, uint64_t))(v31 + 18024))(a30, 2965982036);
  int v34 = (*(uint64_t (**)(void))(v31 + 8 * (v30 - 143328258)))();
  unsigned int v35 = v34 + 1255822489 - ((2 * v34) & 0x95B4A932);
  unsigned int *v32 = v35;
  int v36 = (((v35 >> 30) ^ 1) + 1255822489 - 2 * (((v35 >> 30) ^ 1) & 1)) ^ v35;
  v32[1] = v33 + 1812433253 * v36 - ((2 - 670100790 * v36) & 0x95B4A932);
  return (*(uint64_t (**)(uint64_t))(v31 + 5304))(3624866506);
}

uint64_t sub_1003500F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, unsigned int a14, unsigned int a15, unsigned int a16, int a17)
{
  unsigned int v22 = ((818135048 - (&a12 | 0x30C3C008) + (&a12 | 0xCF3C3FF7)) ^ 0x83AABD8A) * v21;
  a14 = v22 - 354101443;
  a15 = v22 + v19 - 2024873408;
  a16 = 366164236 - v22;
  a12 = &STACK[0x44D5F6D91B577AFC];
  a13 = a11;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v18 + 8 * (v19 ^ 0x9F7)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1693 * (a17 == v17 + v20 - 715)) ^ v19)))(v23);
}

uint64_t sub_1003501C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  int v22 = (a17 - 1307) | 0x25;
  int v23 = v18 + v17;
  int v24 = v23 - 1574567908;
  if ((v23 - 1574567908) <= 0x40) {
    int v24 = 64;
  }
  BOOL v25 = __CFADD__(v23 + ((v22 - 314) ^ 0xA2260176), v20 + v19 + ((v22 + 442) ^ a5) + v24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * ((112 * v25) ^ v22)))(a1, a2, a3, 1107484483);
}

uint64_t sub_10035023C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  return (*(uint64_t (**)(void))(v35 + 8 * ((1919 * (a7 + 1 == v36)) ^ a35)))();
}

uint64_t sub_100350258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  BOOL v17 = a14 + a2 - (unint64_t)((((a6 + v15 + 2124674871) | 0x815C0304) ^ 0x3E8F9AE) + v14) > 0xF;
  return (*(uint64_t (**)(void))(v16 + 8 * ((v17 | (2 * v17)) ^ v15)))();
}

uint64_t sub_1003502B4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((1125 * (((v1 - 397) ^ 0x8810D8u) + a1 < 12 * (v1 ^ 0x21Au) + 2147482291)) ^ v1)))();
}

uint64_t sub_100350310()
{
  BOOL v5 = v0 != ((v1 + 789156825) & 0xD0F66FFE ^ 0x5EF77458);
  uint64_t v6 = *(uint64_t (**)(void))(v4 + 8 * ((v5 | (2 * v5)) ^ (v1 + 1355)));
  STACK[0x270] = v2;
  STACK[0x2D8] = v3;
  return v6();
}

uint64_t sub_100350378(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((((a3 + 194920205) & 0xF461BFBF)
                                      + 1354775897
                                      + ((a3 - 2145699173) | 0x2F24803D)
                                      + 2328)
                                     * ((v4 + v3 - 1804563901) > 7)) ^ a3)))();
}

uint64_t sub_100350404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38)
{
  return (*(uint64_t (**)(void))(v40
                              + 8
                              * ((22
                                * (v38 + (a38 ^ 0x23Du) - 1130567900 + ~(v39 + LODWORD(STACK[0x3E0]) - 757585697) < 3)) ^ a38)))();
}

void sub_10035049C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1003505A8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8 * ((25 * (v2 + v1 + (v4 ^ 0x733u) + 68158407 < 8)) ^ v4)))(a1, v3);
}

uint64_t sub_1003505F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,uint64_t a53)
{
  *(_DWORD *)(STACK[0x388] + 360) = 23692133;
  uint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *, unint64_t, void, uint64_t, unint64_t *, unint64_t *))(v58 + 8 * ((v53 + 661) ^ 0xBF7)))(v57, 2, &STACK[0x538], STACK[0x5F0], (v55 - 1791330438), v54, &STACK[0x578], &STACK[0x60C]);
  int v63 = ((2 * v60) & 0xEFE7F376) + (v60 ^ 0x77F3F9BB);
  int v64 = STACK[0x43C];
  if (v63 == -2014053954)
  {
    LODWORD(STACK[0x4EC]) = -605900286;
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v58
                                                                                  + 8
                                                                                  * (int)(((STACK[0x578] != 0)
                                                                                         * (a52
                                                                                          + ((v64 + 409) ^ 0xFFFFFDA7))) ^ (v64 + 1070))))(v60, STACK[0x578], v61, v62);
  }
  else if (v63 == 2012477883)
  {
    STACK[0x398] = STACK[0x578];
    LODWORD(STACK[0x390]) = STACK[0x60C];
    STACK[0x2C0] = STACK[0x2B8] + 2304;
    unsigned int v67 = (v64 - 568) ^ 0x680;
    LODWORD(STACK[0x5CC]) = 1070242702;
    unint64_t v68 = (unint64_t)&STACK[0x6B0] + v56 - 0x2500E162B343A671;
    STACK[0x2D8] = v56 + 4144;
    STACK[0x530] = v56 + 4144;
    *(void *)unint64_t v68 = 0x6370646600;
    *(unsigned char *)(v68 + 8) = 1;
    STACK[0x230] = v68;
    STACK[0x430] = STACK[0x4C0];
    STACK[0x3A0] = v68 + v67 + 115 + ((16 * ((_BYTE)v68 + ((v64 - 56) ^ 0x80) + 115) + 16) & 0x20) + 16;
    STACK[0x3A8] = v68 + 9;
    uint64_t v69 = *(uint64_t (**)(__n128))(v58
                                           + 8
                                           * (int)(((((v67 + 331869376) & 0xEC380FF7 ^ 0x2D5) == 32)
                                                  * (((v67 - 1580) | 0xAC) + 3438)) ^ v67));
    STACK[0x400] = (unint64_t)*(&off_1022AC750 + (int)(v67 - 1543));
    STACK[0x3F8] = (unint64_t)*(&off_1022AC750 + (int)(v67 - 1554));
    return v69((__n128)0);
  }
  else
  {
    int v65 = 1178560073 * ((2 * ((v59 - 200) & 0x36413638) - (v59 - 200) + 1237240260) ^ 0xF32AB1A6);
    *(_DWORD *)(v59 - 200) = v65 + v63 - ((2 * v63 + 270011530) & 0x483BD274) - 1406537857;
    *(_DWORD *)(v59 - 196) = v64 - v65 + 406;
    *(void *)(v59 - 192) = a53;
    uint64_t v66 = (*(uint64_t (**)(uint64_t))(v58 + 8 * a51))(v59 - 200);
    return (*(uint64_t (**)(uint64_t))(v58
                                              + 8
                                              * (int)(((STACK[0x578] != 0)
                                                     * (11 * (v64 ^ 0x252) + ((v64 + 409) ^ 0xFFFFFDA7))) ^ (v64 + 1070))))(v66);
  }
}

uint64_t sub_10035082C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v74 = STACK[0x270];
  *(void *)(v74 + 1560) = *(void *)STACK[0x570];
  *(_DWORD *)(v74 + 1552) = *(_DWORD *)STACK[0x4A0];
  unint64_t v75 = STACK[0x200];
  *(void *)(*(void *)(a72 + 96) + 488) = *(void *)(a72 + 8);
  *(_DWORD *)(*(void *)(a72 + 96) + 480) = *(_DWORD *)a72;
  *(unsigned char *)(STACK[0x208] + STACK[0x2D8]) = (STACK[0x210] ^ 0xBA) * v75;
  return (*(uint64_t (**)(void))(v73 + 8 * (v72 + 43)))();
}

uint64_t sub_1003508C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1194
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 4) - 147)))
                                 + ((*(unsigned __int8 *)(a2 + 4) - 147) ^ (((v3 + 402931580) | 0x41B04C0) + 1070430771)) == v4)) ^ v3)))();
}

uint64_t sub_100350920(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = v3 - ((2 * v2 + 712306420) & 0xEA303576) + 173183540;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                + 8
                                                                                * (v4 ^ (125
                                                                                       * (((((v4 + 314619686) & 0xED3F4EFF)
                                                                                          - 366997869) ^ (2 * v6) & 0xFF6E97FA)
                                                                                        + (v6 ^ 0xAAF5146)
                                                                                        - 93390872 == 2049328101)))))(a1, a2, 2049327152, 2245639194, 700);
}

uint64_t sub_1003509DC()
{
  int v6 = *(unsigned __int8 *)(*(void *)(v1 + 8) + v0 - 0x754201F2FB1789D6)
     - *(unsigned __int8 *)(v5 + v0 - 0x754201F2FB1789D6);
  uint64_t v7 = v0 + 1;
  BOOL v9 = (v6 ^ 0x7F9BFFFB) - 218235616 + ((((v4 - 1324) | 0x1C) ^ 0xFF37FFC9) & (2 * v6)) != 1922694427 || v7 == v2 + 16;
  return (*(uint64_t (**)(void))(v3 + 8 * ((562 * v9) ^ v4)))();
}

uint64_t sub_100350A68@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((229
                                * (LODWORD(STACK[0x478]) == (((((a2 ^ 0x264) + 368) | 0x470) - 892) ^ a1 ^ 0x6AC58801))) ^ (((a2 ^ 0x264) + 368) | 0x470))))();
}

uint64_t sub_100350ABC@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((134 * (v1 == 1791330438)) ^ 0x64u)))();
}

uint64_t sub_100350AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  unint64_t v18 = STACK[0x458];
  STACK[0x648] -= 32;
  *(unsigned char *)(v18 + 335) = *(unsigned char *)(a13 + 335) ^ (15 * ((a17 - 80) ^ 0x75)) ^ *((unsigned char *)*(&off_1022AC750 + a17 - 865)
                                                                               + 3) ^ *((unsigned char *)*(&off_1022AC750
                                                                                                 + (a17 ^ 0x32B))
                                                                                      + 13) ^ *((unsigned char *)*(&off_1022AC750 + (a17 ^ 0x330))
                                                                                              + 6) ^ 0x18;
  return (*(uint64_t (**)(_UNKNOWN **, uint64_t))(v17 + 8 * a17))(&off_1022AC750, 3689067235);
}

uint64_t sub_100350BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * ((((v4 ^ 0x189) - 1448) * (v5 == 63)) ^ v4)))(a1, a2, a3, a4, 106998629);
}

uint64_t sub_100350C00(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((218 * ((a6 + 1 + v6) < 0x10)) ^ (a1 + 1139))))();
}

uint64_t sub_100350D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  *(_DWORD *)(a41 + 4 * v41) ^= a34;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 8 * ((75 * (v42 == 1)) ^ 0x63B)))(a1, 2511644978, 1255822489);
}

uint64_t sub_100350D88()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((31 * (STACK[0x518] == 0)) ^ (v0 + 1328))))();
}

uint64_t sub_100350DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned char *a18, uint64_t a19, int a20,char a21,unsigned int a22,char *a23,unsigned char *a24)
{
  int v30 = (v26 - 1193) | 0x69;
  a22 = (v26 - 980) ^ ((((&a22 | 0x3D62B3F9) - (&a22 & 0x3D62B3F9)) ^ 0x5096ABF0) * v27);
  a23 = &a21 + v25;
  a24 = a18;
  (*(void (**)(unsigned int *))(v29 + 8 * (v26 + 921)))(&a22);
  a22 = (v30 + 108) ^ ((((&a22 ^ 0xF12FB018 | 0xF7130791)
                       - (&a22 ^ 0xF12FB018)
                       + ((&a22 ^ 0xF12FB018) & 0x8ECF868)) ^ 0x6BC8AF80)
                     * v27);
  a23 = v28;
  a24 = a18;
  (*(void (**)(unsigned int *))(v29 + 8 * (v30 ^ 0x82B)))(&a22);
  unsigned int v31 = 2 * &a22;
  a22 = (v30 + 108) ^ ((((v31 | 0x6C375C36) - &a22 - 907783707) ^ 0x5BEFB612) * v27);
  a23 = v24;
  a24 = a18;
  (*(void (**)(unsigned int *))(v29 + 8 * (v30 ^ 0x82B)))(&a22);
  a22 = (v30 + 1947) ^ (1755732067 * (((v31 | 0x580604F2) - &a22 + 1409088903) ^ 0x72C5BFA2));
  a23 = a18;
  uint64_t v32 = (*(uint64_t (**)(unsigned int *))(v29 + 8 * (v30 ^ 0x82A)))(&a22);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * ((569
                                              * (a24 == ((((v30 + 61) | 0xC0) + 605940622) ^ (551 * (v30 ^ 0xEB))))) ^ v30)))(v32);
}

uint64_t sub_100350E20(uint64_t a1, int a2, int a3, int a4, int a5)
{
  *(unsigned char *)(a1 + (v6 + a4)) = *(unsigned char *)(v7 + (v6 + a4));
  return (*(uint64_t (**)(void))(v8 + 8 * ((112 * (v6 - 1 == (v5 ^ a5) * a2 + a3)) ^ (v5 - 77))))();
}

uint64_t sub_100350E60@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18)
{
  BOOL v19 = v18 - 364775684 < (int)(a18 + 1671807596);
  if (a18 > 0x1C5A3D93 != v18 - 364775684 < 49 * (a1 ^ 0x253) - 475676591) {
    BOOL v19 = a18 > 0x1C5A3D93;
  }
  return (*(uint64_t (**)(void))(a16 + 8 * ((267 * v19) ^ a1)))();
}

uint64_t sub_100350EE0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1971
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == ((v3 - 1906430443) & 0x71A1D3FF ^ (v0 - 716)))) ^ v3)))();
}

uint64_t sub_100350F34()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((v0 + 458394180) & 0xE4AD75BB ^ 0xFFFFFF95) + ((v0 + 125) | 0x20)) ^ (v0 + 167))))();
}

uint64_t sub_100350F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  int v37 = 628203409 * ((~((v36 - 128) | 0xCDC17F34) + ((v36 - 128) & 0xCDC17F34)) ^ 0xB0B68CF8);
  *(_DWORD *)(v36 - 120) = v37 + a5 + 672;
  *(_DWORD *)(v36 - 116) = a14 - v37 + ((a5 + 806486822) | 0x40088008) + 1365351954;
  *(void *)(v36 - 128) = a11;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (a5 ^ 0x8E9)))(v36 - 128);
  unsigned int v39 = a35 & 0x3F ^ (a5 + 14);
  *(&a26 + v39) = -104;
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * ((1389 * (v39 > 0x37)) ^ a5)))(v38);
}

uint64_t sub_10035109C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26)
{
  return (*(uint64_t (**)(void))(v27 + 8 * (a26 ^ (43 * (v26 - v28 == -1004221661)))))();
}

uint64_t sub_10035110C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  *(_DWORD *)(*v8 + 4 * (a5 + v6 + 1)) = a2;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8 * ((30 * (v9 != ((7 * (v10 ^ a3)) ^ a4 ^ v7))) ^ v10)))(a1, 1089336478);
}

uint64_t sub_100351164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, unsigned int a15, unsigned int a16)
{
  if (a16 < a15 != a13 - 962320553 < ((v17 + 424) ^ 0x17459CFDu)) {
    BOOL v18 = a13 - 962320553 < ((v17 + 424) ^ 0x17459CFDu);
  }
  else {
    BOOL v18 = a13 - 962320553 > a16;
  }
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((253 * !v18) ^ (v17 + 334))))(2148926359);
}

uint64_t sub_100351170()
{
  int v4 = v0 - 1363;
  int v5 = 628203409 * ((2 * ((v3 - 200) & 0x1B344E80) - (v3 - 200) - 456412801) ^ 0x6643BD4C);
  *(void *)(v3 - 160) = STACK[0x3F8];
  *(void *)(v3 - 176) = STACK[0x3C8];
  *(void *)(v3 - 200) = STACK[0x3C0];
  *(void *)(v3 - 192) = STACK[0x3B0];
  *(_DWORD *)(v3 - 184) = v0 - 1363 - v5 + 1651;
  *(_DWORD *)(v3 - 180) = v1 - v5 + ((v0 - 1363) ^ 0x271) - 536576705;
  *(void *)(v3 - 152) = STACK[0x3B8];
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * ((v0 - 1363) ^ 0x851)))(v3 - 200);
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v2
                                                             + 8
                                                             * (((*(_DWORD *)(v3 - 168) == 605940026) * (v4 + 1612)) ^ v4)))(v6, 404244978, (__n128)0);
}

uint64_t sub_100351264()
{
  BOOL v4 = v1[5] == 0x57DF31776D855C81 || (*v1 | v1[3]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (((v0 ^ 0x27D) + 487) ^ 0x56F)) ^ v0)))();
}

void sub_1003512C0()
{
}

void sub_1003512CC(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1755732067 * (((a1 | 0xFD508F6) - a1 + (a1 & 0xF02AF709)) ^ 0xD113B52D);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1003513D4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8
                                            * (((((v6 == v8) ^ (a4 + a6 - 37)) & 1) * (a4 + a6 + 12)) ^ (a4 + a6 + 969))))(a1);
}

uint64_t sub_10035141C@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W8>)
{
  BOOL v12 = a4 < a2;
  *(unsigned char *)(a5 + (a7 + v9)) = *(unsigned char *)(v11 + (v7 + a1))
                                           - ((2 * *(unsigned char *)(v11 + (v7 + a1))) & 0x30)
                                           + 24;
  unsigned int v13 = a3 + v7 + 83;
  int v14 = v12 ^ (v13 < a2);
  BOOL v15 = v13 < a4;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((v12 * a6) ^ v8)))();
}

uint64_t sub_100351494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((((((v17 - 1543803868) & 0x5C04973D) - 815) ^ ((v17 - 959) | 0x148))
                                * (*(_DWORD *)(a16 + 4 * (v18 + v19)) == v16)) ^ (v17 - 631))))();
}

void sub_1003514F0(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100351560(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8 * (int)(((v6 + 1 + v7 < (v9 ^ v8) - 1653) * ((v9 ^ v8 ^ v4) * a4 - 1057)) ^ v9 ^ v8)))();
}

uint64_t sub_100351570(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1888 * (a1 + 1 == v3 + 44)) ^ v1)))();
}

uint64_t sub_10035163C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((205 * (((v0 - v4) ^ 0x2A78B525u) + *(_DWORD *)(v1 + 48 * v3 + 36) < 0x80000004)) ^ v0)))();
}

uint64_t sub_100351694@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((((v1 - 1151485983) & 0xEDFE67F4 ^ 0xA95C268A) + (v1 ^ 0x219))
                                                   * (a1 == 1791330447)) ^ v1)))(4294925278);
}

void sub_1003516F4(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_100351738()
{
}

uint64_t sub_100351740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(*(void *)(v9 - 0x1F010F7499D3F79ELL) + 4 * (v7 + v5)) = a5;
  return (*(uint64_t (**)(void))(v8 + 8 * (v6 ^ (8 * (v7 + v5 + ((v6 - 1995062242) & 0x76EA38FE) - 223 >= 0)))))();
}

uint64_t sub_10035179C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 + 783) * (v1 == v3)) ^ (v0 - 721))))();
}

uint64_t sub_1003517C0@<X0>(uint64_t a1@<X0>, char a2@<W2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  uint64_t v36 = (v34 + a3);
  unsigned int v37 = *(_DWORD *)(&a20 + v36 + 72);
  *(unsigned char *)(a1 + v36) = v37 ^ 0x7D;
  *(unsigned char *)(a1 + (v36 + 2)) = (BYTE2(v37) ^ 0x60) - ((v37 >> 15) & 0x30) + 24;
  *(unsigned char *)(a1 + (v36 + 3)) = (HIBYTE(v37) ^ 0x46) + (~(v37 >> 23) | 0xCF) + 25;
  *(unsigned char *)(a1 + (v36 + 1)) = (BYTE1(v37) ^ 0xAB)
                                           - ((((v37 >> 8) ^ 0xFFFFFFAB) << (a2 + v33 + 68)) & 0x30)
                                           + 24;
  BOOL v38 = v34 + 1322649051 < (a32 + 1072885712);
  if (v34 + 1322649051 < v32 != a32 + 1072885712 < v32) {
    BOOL v38 = a32 + 1072885712 < v32;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((248 * !v38) ^ v33)))();
}

void sub_1003518AC(uint64_t a1)
{
  int v1 = 1178560073 * ((-2 - ((a1 | 0x20C3A6CC) + (~a1 | 0xDF3C5933))) ^ 0x65A82151);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100351964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v35 = 1759421093 * ((~((v34 - 128) | 0x20BB190F) + ((v34 - 128) & 0x20BB190F)) ^ 0x6C3956A4);
  *(_DWORD *)(v34 - 112) = v31 - v35 - 277;
  *(_DWORD *)(v34 - 128) = (v31 ^ 0x29D) - v35 + v28 + 1749296652;
  *(void *)(v34 - 120) = v32;
  (*(void (**)(uint64_t))(v29 + 8 * (v31 + 676)))(v34 - 128);
  *(void *)(v34 - 120) = a28;
  *(void *)(v34 - 104) = a26;
  *(_DWORD *)(v34 - 112) = (v31 ^ 0x29D)
                         + ((2 * ((v34 - 128) & 0x1C7E0D30) - (v34 - 128) + 1669460682) ^ 0xD9158AA8) * v33
                         - 167;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v29 + 8 * ((v31 ^ 0x29D) + 1037)))(v34 - 128);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * ((7 * (((((v31 ^ 0x29D) - 106) ^ (*(_DWORD *)(v34 - 128) > v30)) & 1) == 0)) ^ v31 ^ 0x29D)))(v36);
}

uint64_t sub_100351A8C()
{
  BOOL v3 = (((((v1 - 1852208710) & 0x6E6671FF) - 698) ^ ((v1 - 1358) | 0x108)) & v0) != 23692132;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 | (4 * v3)) ^ v1)))();
}

uint64_t sub_100351AE4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((88
                                * (v3 - a2 - 0x2E910FB81C0D97DFLL + (unint64_t)(v2 - 1865178843) < (((a1 ^ 0x6F8u) + 139) ^ 0x1FFuLL))) ^ a1)))();
}

uint64_t sub_100351B4C()
{
  int v4 = (v2 + 318) | 0x48;
  unsigned int v10 = (v2 + 16) ^ (1374699841 * ((&v10 + 1878396432 - 2 * (&v10 & 0x6FF60E10)) ^ 0x2021619));
  BOOL v12 = &STACK[0x2E91F1FE0AA58393];
  unsigned int v13 = v7;
  (*(void (**)(unsigned int *))(v1 + 8 * (v2 ^ 0x987)))(&v10);
  unsigned int v10 = (v2 + 1855) ^ (1755732067
                     * (((&v10 | 0x414B933F) - &v10 + (&v10 & 0xBEB46CC0)) ^ 0x9F8D2EE4));
  BOOL v12 = v7;
  (*(void (**)(unsigned int *))(v1 + 8 * (v2 ^ 0x986)))(&v10);
  if (v13 == (v4 ^ (v0 + 695))) {
    int v5 = v8;
  }
  else {
    int v5 = (int)v13;
  }
  unsigned int v11 = v2 + ((2 * (&v10 & 0x11E9380) - &v10 + 2128702589) ^ 0x74156252) * v3 + 1612;
  BOOL v12 = v7;
  (*(void (**)(unsigned int *))(v1 + 8 * (v2 + 1924)))(&v10);
  unsigned int v11 = v4 + ((((2 * &v10) | 0x72A8ABE4) - &v10 - 961828338) ^ 0x33A05BDD) * v3 + 1222;
  BOOL v12 = v9;
  (*(void (**)(unsigned int *))(v1 + 8 * (v4 ^ 0xA02)))(&v10);
  return v5 ^ v0;
}

uint64_t sub_100351D38(double a1)
{
  *int v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

uint64_t sub_100351D5C@<X0>(int a1@<W3>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((42 * ((((unint64_t)(a3 - a2 - 1452) < 0x20) ^ (a1 - 59)) & 1)) ^ a1)))();
}

uint64_t sub_100351D9C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8 * (((a8 + 1 == (((((v8 + 150) | a2) - 599) | a5) ^ a6)) * a7) ^ ((v8 + 150) | a2))))();
}

uint64_t sub_100351DF4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((v0 + 799) ^ (4 * (v2 + v1 - 2113858301 < ((v0 + 1325646443) & 0xB0FC3DF5) - 1449)))))();
}

void sub_100351E4C(int a1@<W8>)
{
  **(_DWORD **)(v1 - 0x1F010F7499D3F79ELL) = (v2 - 1341805296) ^ 0xF0E8598E;
  sub_10035DB24(a1 + 1);
}

uint64_t sub_100351E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v8 = STACK[0x5D0];
  STACK[0x600] = *(void *)(v7 + 8 * (v6 - 686));
  STACK[0x5E0] = v8;
  STACK[0x5D8] = STACK[0x3F8];
  uint64_t v9 = *(_DWORD *)(v8 - 0x2E910FB81C0D979BLL) & (v6 + 344 + ((v6 - 225) | 0xE1u) - 1795);
  *(unsigned char *)(v8 - 0x2E910FB81C0D97DFLL + (v9 ^ 0x3C)) = -104;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * ((1237 * ((v9 ^ 0x3C) > 0x37)) ^ (v6 - 736))))(a1, a2, a3, a4, a5, a6, 3689067235, 756);
}

uint64_t sub_100351F48(int a1, int a2, int8x8_t a3, int8x8_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = v6 - 8 + ((a2 + 1258) | v9);
  int8x8_t v12 = vrev64_s8(*(int8x8_t *)(v8 + v11));
  *(int8x8_t *)(a6 + v11) = vrev64_s8(vadd_s8(vsub_s8(v12, vand_s8(vadd_s8(v12, v12), a3)), a4));
  return (*(uint64_t (**)(void))(v10 + 8 * (((v7 == -8) * a1) ^ a2)))();
}

uint64_t sub_100351F54(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((244 * (v2 + v1 + a1 - 1314 + (a1 ^ 0x94708E95) < 8)) ^ a1)))();
}

uint64_t sub_100351FB0()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 - 69337263) ^ 0xAD7E2116) + ((v2 - 69337263) & 0xAD7E2365)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_100351FF4()
{
  return sub_10036D748();
}

uint64_t sub_100352014(double a1, int8x16_t a2)
{
  int v5 = 3 * (v2 ^ 0x3D0);
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32((const float *)v3);
  v7.i64[0] = 0x8000000080000000;
  v7.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(void *)(v3 + 4);
  a2.i32[2] = *(_DWORD *)(v3 + 12);
  int8x16_t v8 = vextq_s8(v6, a2, 0xCuLL);
  int8x16_t v9 = a2;
  v9.i32[3] = *(_DWORD *)(v3 + 16);
  int32x4_t v10 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v9, *(int8x16_t *)&STACK[0x360]), vandq_s8(v8, v7)), 1uLL), *(int8x16_t *)&STACK[0x350]);
  v11.i32[0] = *((_DWORD *)&STACK[0x698] + ((*(_DWORD *)(v3 + 4) & 1) == 0));
  v11.i32[1] = *((_DWORD *)&STACK[0x698] + ((*(_DWORD *)(v3 + 8) & 1) == 0));
  v11.i32[2] = *((_DWORD *)&STACK[0x698] + (*(unsigned int *)(v3 + 12) & ((181 * (v5 ^ 0x36Au)) ^ 0x388) ^ 1));
  v11.i32[3] = *((_DWORD *)&STACK[0x698] + ((v9.i8[12] & 1) == 0));
  *(int8x16_t *)uint64_t v3 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v3 + 1588), v11), *(int8x16_t *)&STACK[0x320]), (int8x16_t)vaddq_s32(vsubq_s32(v10, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v10, v10), *(int8x16_t *)&STACK[0x340])), *(int32x4_t *)&STACK[0x330]));
  return (*(uint64_t (**)(void))(v4 + 8 * v5))();
}

uint64_t sub_100352020()
{
  STACK[0x538] = 0xCC245F99C49480;
  unint64_t v5 = 1755732067
     * (((~(v4 - 152) | 0xE37AC892F3081DB0) + ((v4 - 152) | 0x1C85376D0CF7E24FLL)) ^ 0xC12E9052D2315F95);
  STACK[0x5C8] = *v3 - v5;
  *(_DWORD *)(v4 - 148) = v5;
  *(_DWORD *)(v4 - 144) = ((v0 - 1529397907) ^ 0x6E) + v5;
  *(_DWORD *)(v4 - 112) = (v0 - 1545721141) ^ v5;
  STACK[0x5D8] = v5 + v1;
  *(_DWORD *)(v4 - 128) = ((v0 - 1529397907) ^ 0x79) + v5;
  *(_DWORD *)(v4 - 140) = (v0 - 1529397907) ^ v5;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 143332620)))(v4 - 152);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v4 - 152)))(v6);
}

uint64_t sub_100352130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                                           + 8
                                           * (((v7 < ((a7 - 993951313) & 0x3B3E7FC7u) - 1382)
                                             * (((a7 - 267) | 0x30) ^ 0x32A)) ^ a7)))(0);
}

uint64_t sub_10035217C@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v7 = (v4 - 176) | 0x40u;
  *(_OWORD *)(v2 + v1 + v5 + 3 * (v7 ^ 0x1E2)) = *a1;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6
                                                     + 8
                                                     * (int)((400 * (((v7 + 0x1FFFFFEFCLL) & (v3 + 1)) != 16)) ^ v7)))(v1 + v5, 16);
}

uint64_t sub_1003521F4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v7
                                                    + 8
                                                    * ((58
                                                      * (((a4 + 57) ^ (((((a4 - 159211823) & 0x97D6677)
                                                                                        - 1599) & v4) == 0)) & 1)) ^ a4)))(a1, (v5 - v6));
}

uint64_t sub_100352240()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 ^ 0x5A3) - 500) ^ 0x55D) * (v0 == v1)) ^ v2)))();
}

void sub_100352274(int a1@<W4>, _DWORD *a2@<X8>)
{
  if (v2 == ((269 * ((a1 - 1894) ^ 0x76)) ^ (v5 - 2024))) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = v6;
  }
  *(void *)(v3 - 0x79008787D20F56D3) = v7;
  *int v4 = *a2;
}

uint64_t sub_1003522EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, uint64_t a4@<X8>)
{
  *(void *)(a4 - 7 + (v8 + v7 + v10 - a3)) = *(void *)(v5 - 7 + (v8 + v7 + v10 - a3));
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v4
                                                                     + 8
                                                                     * (int)(((a3 - (v6 & 0xFFFFFFF8) == -8) * (a1 - 319)) ^ a1)))(a1, a2, v9 - (v6 & 0xFFFFFFF8), a3 - (v6 & 0xFFFFFFF8) + 16);
}

uint64_t sub_100352340(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((((v1 - 1333948164) > 0x37) * (v2 + 982)) ^ (v2 + 484))))(a1, -1333948164);
}

uint64_t sub_100352380()
{
  unsigned int v3 = (((v1 - 67) | 0x235) ^ 0xB96BD7) + v0;
  BOOL v4 = v1 + 2102540801 < v3;
  if ((v1 + 2102540801) < 0x7D523B04 != v3 < 0x7D523B04) {
    BOOL v4 = v3 < 0x7D523B04;
  }
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((1540 * v4) | v1)))(53);
}

uint64_t sub_10035238C()
{
  STACK[0x4C8] = *(void *)(v1 + 8 * (v0 - 752));
  return sub_10036CF70();
}

uint64_t sub_1003523A0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((3877 * (STACK[0x4E0] == 0)) ^ (v0 + 1138))))();
}

uint64_t sub_1003523D0@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

uint64_t sub_1003523E8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((a8 + (((a2 - 1136) | 0x10) ^ (a5 + 1456)) > 0xFFFFFFEF) * (a2 - 1283)) ^ (a2 - 1099))))();
}

void sub_100352428()
{
  uint64_t v0 = __chkstk_darwin();
  if (*(void *)(v0 + 24)) {
    BOOL v2 = *(void *)(v0 + 8) == 0x44D5F6D91B577AFCLL;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  int v1 = *(_DWORD *)(v0 + 16) ^ (1755732067 * ((2 * (v0 & 0x47DE7202) - v0 - 1205760515) ^ 0x66E73026));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10035259C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v9 = 3 * (a5 ^ 0x1A4);
  *int v6 = v5;
  uint64_t v15 = v12;
  unsigned int v14 = v9
      + (((v13 | 0x3211D2A2) - v13 + (v13 & 0xCDEE2D58)) ^ 0x38E5DC8D) * v7
      + 1556;
  (*(void (**)(unsigned char *))(v8 + 8 * (v9 ^ 0x9B4)))(v13);
  unsigned int v14 = v9 + 250 + ((v13 + 581886662 - 2 * ((unint64_t)v13 & 0x22AEE2C6)) ^ 0x285AECE9) * v7 + 1306;
  uint64_t v15 = v11;
  (*(void (**)(unsigned char *))(v8 + 8 * ((v9 + 250) ^ 0xABE)))(v13);
  return 0;
}

uint64_t sub_1003526B4(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  *(_DWORD *)(v63 - 128) = v60;
  unsigned int v64 = v60 & 0xFFFFFFF8;
  *(_DWORD *)(v63 - 136) = v64;
  int v65 = -a4;
  char v66 = v61 + a2 + a1;
  uint64_t v67 = (a2 + a1 + a3 + v65);
  v69.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3 + (_BYTE)v65) & 0xF;
  v69.val[0].i64[1] = (v66 + 9 + (_BYTE)v65) & 0xF;
  v69.val[1].i64[0] = (v66 + 8 + (_BYTE)v65) & 0xF;
  v69.val[1].i64[1] = (v59 + (_BYTE)v65 + (((a7 - 60) | 0xB) ^ 8)) & 0xF;
  v69.val[2].i64[0] = (v66 + 6 + (_BYTE)v65) & 0xF;
  v69.val[2].i64[1] = (v66 + 5 + (_BYTE)v65) & 0xF;
  v69.val[3].i64[0] = (v66 + 4 + (_BYTE)v65) & 0xF;
  v69.val[3].i64[1] = (v66 + 3 + (_BYTE)v65) & 0xF;
  *(int8x8_t *)(v62 - 7 + v67) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v62 - 7 + v67), *(int8x8_t *)(v57 + (v67 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v56 + (v67 & 0xF) - 7), *(int8x8_t *)(v58 + (v67 & 0xF) - 7)))), (int8x8_t)0x1818181818181818), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v69, (int8x16_t)xmmword_101D1C130), (int8x8_t)0x505050505050505)));
  return (*(uint64_t (**)(__n128))(a56 + 8 * (a7 | (8 * (8 - v64 == v65)))))((__n128)xmmword_101D1C130);
}

uint64_t sub_1003527E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(a9 + v11) = v13;
  return (*(uint64_t (**)(void))(v12 + 8 * ((((v10 & 0xFFFFFFFFFFFFFFF8) == 8) * (v9 ^ 0x709)) ^ v9)))();
}

uint64_t sub_10035282C()
{
  int v3 = (v2 - 473) | 0x413;
  int v4 = -489760072 - v1;
  if (v1 + 244880036 <= (int)(v3 ^ 0xFFFFFBEC)) {
    int v4 = v1;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((((int)((v3 ^ 0x8E9896B0) + v4) >= 0) * ((v3 ^ 0x10) - 858)) ^ v3)))();
}

void sub_1003528CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned char *a22,uint64_t a23,unsigned char *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unsigned char *a30,uint64_t a31,uint64_t a32,unsigned char *a33,unsigned char *a34,uint64_t a35,unsigned char *a36,unsigned char *a37,uint64_t a38,unsigned char *a39,unsigned char *a40,unsigned char *a41,unsigned char *a42)
{
  uint64_t v47 = a5 ^ ((v44 ^ 0x334u) + 1498) ^ 0x31687BFE82C5075CLL;
  unint64_t v48 = (v47 - 0x23B904CB0D834A34 - ((2 * v47) & 0xB88DF669E4F96B98)) ^ v45;
  uint64_t v49 = v42 ^ (((a10 - 40020362) | (unint64_t)(a11 << 32))
             + 0x22308499DE023972
             - 2
             * (((a10 - 40020362) | (unint64_t)(a11 << 32)) & 0x22308499DE02397FLL ^ (a10 - 40020362) & 0xDLL));
  unint64_t v50 = v49 ^ 0xA173397C065C8DEALL;
  uint64_t v51 = v49 ^ 0x5E8CC683F9A37215;
  uint64_t v52 = ((v49 ^ 0x5E8CC683F9A37215)
       + 0x3AC75C5FABFFD319
       - ((2 * (v49 ^ 0x5E8CC683F9A37215)) & 0x758EB8BF57FFA632)) ^ v46;
  uint64_t v53 = v52 ^ 0x629A61E2FE92CDE4;
  unint64_t v54 = v48 ^ 0x8ABB7B075CE8A96ELL;
  unint64_t v55 = v48 ^ 0x8ABB7B075CE8A96ELL ^ (v52 ^ 0x629A61E2FE92CDE4) & v50;
  unint64_t v56 = (v52 ^ 0x9D659E1D016D321BLL) & (v43 ^ 0x6493CC595E7AF9E8) ^ v51 ^ v55;
  *((void *)&v57 + 1) = v56 ^ 0xABEF87C8808CCB5;
  *(void *)&long long v57 = v56 ^ 0x8000000000000000;
  uint64_t v58 = v56 ^ __ROR8__(v56, 39) ^ (v57 >> 61);
  uint64_t v59 = (v48 ^ 0x754484F8A3175691) & v51;
  uint64_t v60 = v55 ^ 0xF38BFF733C051F6;
  uint64_t v61 = v47 ^ v43 ^ 0x6493CC595E7AF9E8;
  unint64_t v62 = v59 ^ v61;
  unint64_t v63 = ((v59 ^ v61) & 0x200000000 ^ 0xE37DEE8FFFFBEB95) + 2 * ((v59 ^ v61) & 0x200000000);
  unint64_t v64 = v63 + 0x1C8211700004146BLL;
  unint64_t v65 = v63 + 0x7FD3FFF46B76DF7FLL;
  unint64_t v66 = 0x46CFDD146B6EB6A9 - v63;
  if ((v64 & v60) == 0) {
    unint64_t v66 = v65;
  }
  unint64_t v67 = ((v60 + v66 - 0x6351EE846B72CB14) ^ (0x6351EE846B72CB14 - (v60 + v66)) ^ ((v62 & 0xFFFFFFFDFFFFFFFFLL)
                                                                                    - ((v60 + v66 - 0x6351EE846B72CB14) ^ v62 & 0xFFFFFFFDFFFFFFFFLL)))
      + (v62 & 0xFFFFFFFDFFFFFFFFLL);
  unint64_t v68 = v67 - ((2 * v67) & 0xB239C28FF8BCAD24) - 0x26E31EB803A1A96ELL;
  *((void *)&v69 + 1) = v68 ^ 0x65692;
  *(void *)&long long v69 = v68 ^ 0xD91CE147FC580000;
  uint64_t v70 = ((v69 >> 19) - ((2 * (v69 >> 19)) & 0xB239C28FF8BCAD24) - 0x26E31EB803A1A96ELL) ^ v68;
  unint64_t v71 = v70 & 0x88A7E47BC54E7E29 ^ ((v68 >> 28) ^ 0xD91CE147FLL) & 0xBC54E7E29 | v70 & 0x77581B843AB181D6 ^ ((v68 >> 28) ^ 0xD91CE147FLL) & 0x43AB181D6;
  unint64_t v72 = ((v62 >> 41) | (v62 << 57)) ^ (v62 >> 7);
  unint64_t v73 = v62 ^ 0x8E1203C6B788CBF8 ^ ((v72 ^ (v62 << 23) ^ 0x1EC655AF97FB0312)
                                    - 2 * ((v72 ^ (v62 << 23) ^ 0x1EC655AF97FB0312) & 0x392B2431E7C70B0BLL ^ v72 & 1)
                                    + 0x392B2431E7C70B0ALL);
  unint64_t v74 = v73 ^ (v68 << 36) ^ v71;
  unint64_t v75 = v61 & (v43 ^ 0x9B6C33A6A1850617) ^ v53;
  unint64_t v76 = v75 ^ v43 ^ 0x6493CC595E7AF9E8 ^ v54 & ~v61;
  unint64_t v77 = v76 ^ 0xD682245F8949D84ELL ^ ((((v76 >> 10) ^ (v76 >> 17) | (v76 << 54)) ^ 0xF5EC3F377C10F093)
                                    - 2
                                    * ((((v76 >> 10) ^ (v76 >> 17) | (v76 << 54)) ^ 0xF5EC3F377C10F093) & 0x671DC66BA2DCBFBDLL ^ ((v76 >> 10) ^ (v76 >> 17)) & 0x24)
                                    + 0x671DC66BA2DCBF99);
  unint64_t v78 = v77 & 0x4C1D4E44A4B3031DLL ^ ((v76 << 47) ^ 0xB3EB800000000000) & 0x4C1D000000000000 | v77 & 0xB3E2B1BB5B4CFCE2 ^ ((v76 << 47) ^ 0xB3EB800000000000) & 0xB3E2800000000000;
  unint64_t v79 = v78 - ((2 * v78) & 0xF6B3A151938FD11ELL) + 0x7B59D0A8C9C7E88FLL;
  unint64_t v80 = v79 ^ (v73 - ((2 * v73) & 0xF6B3A151938FD11ELL) + 0x7B59D0A8C9C7E88FLL);
  unint64_t v81 = v74 ^ 0xC5E5692000000000;
  *((void *)&v69 + 1) = ~v75;
  *(void *)&long long v69 = v75 ^ 0x92CFC162FD513142;
  unint64_t v82 = v75 ^ 0x8F350AEA5A071754 ^ (((v75 << 58) ^ 0xC00000000000000)
                                    - ((2 * ((v75 << 58) ^ 0xC00000000000000)) & 0x3800000000000000)
                                    + 0x1DFACB88A7562617);
  unint64_t v83 = v82 - ((2 * v82) & 0xDF20225EC04EE610) + 0x6F90112F60277308;
  uint64_t v84 = v58 ^ 0x1C3EF8CA833AC24DLL;
  uint64_t v85 = ((v75 ^ 0x92CFC162FD513166) >> (v62 & 6 ^ 2) >> (v62 & 6 ^ 4)) ^ (v69 >> 1) ^ v58 ^ 0x1C3EF8CA833AC24DLL ^ v83;
  unint64_t v86 = (v79 ^ 0x84A62F5736381770) & v73 ^ v85;
  unint64_t v87 = v86 ^ v79 ^ (((v74 ^ 0xC5E5692000000000) & ~v80)
                   - ((2 * ((v74 ^ 0xC5E5692000000000) & ~v80)) & 0xF6B3A151938FD11ELL)
                   + 0x7B59D0A8C9C7E88FLL);
  unint64_t v88 = ((v87 >> 10) & 0x2000000000000 ^ 0xEB96FAD3FBFBB2E5) + 2 * ((v87 >> 10) & 0x2000000000000);
  BOOL v89 = ((v88 + 0x1469052C04044D1BLL) & (v87 ^ 0x28E000000000000)) == 0;
  unint64_t v90 = (v74 ^ 0x3A1A96DFFFFFFFFFLL) & (v58 ^ 0x73AEE9E5E31DB145) ^ v80;
  unint64_t v91 = ((v90 >> 41) ^ (v90 >> 7) | (v90 << 57)) ^ (v90 << 23) ^ 0xF774B04353CE1CF4;
  uint64_t v92 = v91 - ((2 * v91) & 0x57FDF7E316AF5A86) + 0x2BFEFBF18B57AD43;
  unint64_t v93 = v88 + 0x3DED3DEEFF3E6DFFLL;
  unint64_t v94 = 0x151B3396F735D3C9 - v88;
  if (!v89) {
    unint64_t v93 = v94;
  }
  unint64_t v95 = (v87 >> 10) & 0xFFFDFFFFFFFFFFFFLL ^ 0xA3E966F75234 ^ ((v87 ^ 0x28FA59BDD48D0B6) - 0x298438C2FB3A20E4 + v93);
  uint64_t v96 = ((v95 >> 38) & 0x2A35FE4) + (v95 >> 39) - 2 * ((v95 >> 38) & 0x2A35FE4) + 0x61376A34D751AFF2;
  *((void *)&v97 + 1) = v87 ^ 0xD0B6;
  *(void *)&long long v97 = v87 ^ 0x28FA59BDD480000;
  uint64_t v98 = (((v96 << 39) ^ (v87 << 54)) & 0xFFFFFF8000000000 | ((v96 ^ (v95 << 25)) >> 25)) ^ (v97 >> 17);
  unint64_t v99 = v81 ^ v85 & (v58 ^ 0x8C51161A1CE24EBALL);
  unint64_t v100 = (((v79 ^ 0x7B59D0A8C9C7E88FLL) & ~v85)
        - ((2 * ((v79 ^ 0x7B59D0A8C9C7E88FLL) & ~v85)) & 0xDF20225EC04EE610)
        + 0x6F90112F60277308) ^ v84 ^ v99;
  unint64_t v101 = (8 * v100) ^ (v100 >> 39) ^ 0xBA3E0AB73A03F932 ^ ((*(unsigned char *)(a20
                                                                                        + (((v100 >> 57) ^ 0x2B) & 0x70 ^ 0xFE)) ^ ((((v100 >> 57) ^ 0x2B) & 0x70 ^ 0xDE) + (((v100 >> 57) ^ 0x2B) & 0x70 ^ 0x4B)) ^ 0xA1)
                                                                            - 122);
  unint64_t v102 = v100 ^ 0x9B130DB03AA05594 ^ (v101 - ((2 * v101) & 0x98A999CDBBEBF684) - 0x33AB3319220A04BELL);
  unint64_t v103 = v102 + ((v100 << 25) ^ 0xADCEAB5DAC000000) - 2 * (v102 & ((v100 << 25) ^ 0xADCEAB5DAC000000));
  unint64_t v104 = v92 ^ v90;
  unint64_t v105 = v90 ^ v99;
  *(void *)&long long v97 = __ROR8__(__ROR8__(v105 ^ 0x787EEEF1A7EE72F1, 16) ^ 0x1712D402E105A6CBLL, 48);
  unint64_t v106 = v105 ^ 0xAC7C0FF4012565E3 ^ ((v105 ^ 0xAC7C0FF4012565E3) >> 19) ^ ((unint64_t)v97 >> 28) ^ ((void)v97 << 36) ^ ((void)v97 << 45) ^ v92 ^ v90;
  *((void *)&v97 + 1) = v106 ^ 6;
  *(void *)&long long v97 = v106 ^ 0xB1C6C7090AD7D800;
  unint64_t v107 = v103 - ((2 * v103) & 0xD434F68A42BA6CF2) + 0x6A1A7B45215D3679;
  unint64_t v108 = v98 ^ 0x8557F9309BB51A6BLL ^ v104;
  unint64_t v109 = v108 ^ 0xB1C6C7090AD7D806 ^ (v107 ^ 0x6A1A7B45215D3679) & ((((unint64_t)(v97 >> 9) ^ 0x284B28057C49B8D1) >> (v75 & 0x37 ^ 3) >> (v75 & 0x37 ^ 0x34)) ^ (((unint64_t)(v97 >> 9) ^ 0x284B28057C49B8D1) << 9) ^ 0x69AFF5076C8E5DAFLL);
  *((void *)&v97 + 1) = v109 ^ 0x118501E2B14;
  *(void *)&long long v97 = v109 ^ 0x26974A0000000000;
  uint64_t v110 = (v97 >> 41) ^ (v109 << 57) ^ 0x2800000000000000;
  uint64_t v111 = v109 ^ 0x126131A07E40BB31 ^ (v110 - ((2 * v110) & 0x69ECF5705CBD204ALL) + 0x34F67AB82E5E9025);
  uint64_t v112 = v111 + ((v109 >> 7) ^ 0x4D2E9630A03C56) - 2 * (v111 & ((v109 >> 7) ^ 0x4D2E9630A03C56));
  unint64_t v113 = (v86 >> 1) ^ (v86 >> 6) ^ (v86 << 58) ^ 0xDE1FAE11AA0A9F1DLL;
  unint64_t v114 = v86 ^ 0xA3EA201D88DA7FA3 ^ (v113 - ((2 * v113) & 0x995EAF04430B7F32) - 0x3350A87DDE7A4067);
  unint64_t v115 = v114 & 0xF47FF077890F9720 ^ (v86 << 63) | v114 & 0xB800F8876F068DFLL;
  unint64_t v116 = ((v108 ^ 0x4E3938F6F52827F9) & (v106 ^ 0xB1C6C7090AD7D806))
       - ((2 * ((v108 ^ 0x4E3938F6F52827F9) & (v106 ^ 0xB1C6C7090AD7D806))) & 0x9B547208D290547CLL);
  unint64_t v117 = v107 ^ (v115 - ((2 * v115) & 0xD434F68A42BA6CF2) + 0x6A1A7B45215D3679);
  unint64_t v118 = (v108 ^ 0xB1C6C7090AD7D806) & (v98 ^ 0x7AA806CF644AE594) ^ v117;
  unint64_t v119 = v118 ^ v98 ^ 0x8557F9309BB51A6BLL ^ (v116 - 0x3255C6FB96B7D5C2);
  *((void *)&v97 + 1) = v119 ^ 0x108;
  *(void *)&long long v97 = v119 ^ 0xBEDA956C3978E000;
  uint64_t v120 = v119 ^ 0xCDAA390469482A3ELL ^ ((v119 ^ 0xCDAA390469482A3ELL) >> 17) ^ (v97 >> 10) ^ ((v119 ^ 0xCDAA390469482A3ELL) << 47);
  unint64_t v121 = v106 ^ 0x47FF9C1B68A70781 ^ (((v107 ^ 0x95E584BADEA2C986) & v115)
                                      - ((2 * ((v107 ^ 0x95E584BADEA2C986) & v115)) & 0xEC72B624C4E1BF0ELL)
                                      - 0x9C6A4ED9D8F2079);
  unint64_t v122 = ((v121 ^ (v98 ^ 0x8557F9309BB51A6BLL) & ~v117)
        - ((2 * (v121 ^ (v98 ^ 0x8557F9309BB51A6BLL) & ~v117)) & 0xD434F68A42BA6CF2)
        + 0x6A1A7B45215D3679) ^ v107;
  *((void *)&v97 + 1) = v122 ^ 0x38FE43D2BCLL;
  *(void *)&long long v97 = v122 ^ 0x3278F80000000000;
  uint64_t v123 = (v120 ^ 0x16EB95D00604E32ELL) + v112 - 2 * ((v120 ^ 0x16EB95D00604E32ELL) & v112);
  unint64_t v124 = __ROR8__(v122, 61) ^ (v122 << 25) ^ __ROR8__((v97 >> 38) ^ (v122 >> 39 << 26) ^ 0xC258A8B62E885BC3, 26);
  *((void *)&v97 + 1) = v118 ^ 0x548B80C;
  *(void *)&long long v97 = v118 ^ 0x7955EAEC48000000;
  unint64_t v125 = ((v118 & 0x3F) << 31) ^ 0xE04699B10F1F629ALL ^ (v97 >> 27);
  unint64_t v126 = (v118 >> 6) ^ (v118 >> 1) ^ (((v125 << 27) ^ (v118 << 63)) & 0xFFFFFFFFF8000000 | (v125 >> 37));
  unint64_t v127 = v124 ^ v126;
  unint64_t v128 = v124 ^ v126 ^ 0xC51AEF5B5CC303B1;
  unint64_t v129 = v123 & (v120 ^ 0xE9146A2FF9FB1CD1) ^ v128;
  unint64_t v130 = (v129 >> 1) ^ (v129 >> 6);
  unint64_t v131 = (v130 | (v129 << 63)) ^ (v129 << 58) ^ 0x82A267617DDD3C0DLL;
  uint64_t v132 = v131 - 2 * (v131 & 0x474CACDFC757C7BBLL ^ v130 & 0x10) + 0x474CACDFC757C7ABLL;
  unint64_t v133 = (v126 ^ 0x853759C940934A2BLL) + (v128 | v124 ^ 0xBFD2496DE3AFB665) + 1;
  unint64_t v134 = v121 ^ v109;
  uint64_t v135 = (v134 >> 19) ^ (v134 << 36) ^ (v134 << 45) ^ 0x2A792D60982B22B5;
  uint64_t v136 = (v134 >> 28) ^ 0x6E04C1591;
  unint64_t v137 = v134 ^ 0xFFF7571D69EA808FLL ^ (v135 - ((2 * v135) & 0x23E72C88F8820D0ALL) - 0x6E0C69BB83BEF97BLL);
  unint64_t v138 = (v137 & 0x26452CB7C950B7B6 ^ v136 & 0x7C950B7B6 | v137 & 0xD9BAD34836AF4849 ^ v136 & 0x836AF4849) ^ v112;
  if ((v133 & 1 & v138) != 0) {
    unint64_t v139 = v138 - (v133 & 1) - ((2 * (v138 - (v133 & 1))) & 0x70803666C62DE880) - 0x47BFE4CC9CE90BC0;
  }
  else {
    unint64_t v139 = v138 ^ 0xB8401B336316F440 ^ v133 & 1;
  }
  unint64_t v140 = v139 ^ ((v133 & 0xFFFFFFFFFFFFFFFELL) - ((2 * v133) & 0x70803666C62DE880) - 0x47BFE4CC9CE90BC0);
  uint64_t v141 = (v127 ^ 0x3AE510A4A33CFC4ELL) & (v120 ^ 0x16EB95D00604E32ELL);
  uint64_t v142 = v124 ^ 0x402DB6921C50499ALL;
  unint64_t v143 = v141 ^ v124 ^ 0x402DB6921C50499ALL ^ v140;
  unint64_t v144 = ((8 * v143) ^ 0x12BB25DAC3BED128) & (v143 ^ 0x425764BB5877DA20) ^ __ROR8__(v143, 39) ^ (v143 ^ 0xCDF1DB9E53F6C70FLL ^ (((v143 >> 61) ^ 2) - ((2 * ((v143 >> 61) ^ 2)) & 4) - 0x705940DAF47EE2D6) | (8 * v143) ^ 0x12BB25DAC3BED128);
  unint64_t v145 = v132 ^ v129 ^ 0x9496B2ECA7E84391;
  uint64_t v146 = (v132 ^ v129) & 0x20;
  uint64_t v147 = v145 & 0x48369FDD8225CE6FLL ^ v146;
  uint64_t v148 = v145 & 0x8369FDD8225CE6FLL ^ v146;
  v145 += 0x48369FDD8225CE4FLL;
  uint64_t v149 = v144 ^ 0x3E867069C8A16086 ^ (v145 - 2 * v147);
  unint64_t v150 = v149 & 0xA9AD36174A77719DLL | (v144 ^ 0x3E867069C8A16086 ^ (v145 - 2 * v148)) & 0x5652C9E8B5888E62;
  unint64_t v151 = v150 - 2 * (v150 & 0x5E717E44C3DE993DLL ^ v149 & 5);
  unint64_t v152 = v142 & ~v138 ^ v123;
  unint64_t v153 = ((v152 + (v152 ^ 0x8F38572C0C9BC202) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v152;
  unint64_t v154 = v153 - ((2 * v153) & 0xBEF705866FDA7728);
  unint64_t v155 = v154 - 0x20847D3CC812C46CLL;
  unint64_t v156 = ((0x20847D3CC812C46BLL - v154) & 0x10000000000000 ^ 0xE7FFEFB3FBCFFBD3)
       + 2 * ((0x20847D3CC812C46BLL - v154) & 0x10000000000000);
  unint64_t v157 = v156 + 0x104C0430042DLL;
  unint64_t v158 = v156 + 0x3DBEDF5E17FBEEBELL;
  unint64_t v159 = 0xDBEBEC60F9BE664 - v156;
  uint64_t v160 = (v155 >> 7) ^ 0x1BEF705866FDA77;
  if ((v157 & v160) == 0) {
    unint64_t v159 = v158;
  }
  unint64_t v161 = v155 & 0xFFEFFFFFFFFFFFFFLL ^ (v155 >> 41) ^ (v160 - 0x25BECF1213CBEA91 + v159);
  unint64_t v162 = (v155 << 23) ^ (v155 << 57) ^ 0x96F0745EFD828655 ^ v161;
  unint64_t v163 = v161 & 0x22;
  unint64_t v164 = v129 ^ v120 ^ ((v138 & ~v123) - ((2 * (v138 & ~v123)) & 0x7F8CCECDA91C9C8ELL) - 0x403998992B71B1B9);
  unint64_t v165 = (v164 & 0x1000000000 | (v164 << 47)) ^ v164 & 0xFFFFFFEFFFFFFFFFLL ^ ((v164 >> 10) ^ (v164 >> 17) | (v164 << 54));
  *((void *)&v166 + 1) = v165 ^ 0x3C95706050;
  *(void *)&long long v166 = v165 ^ 0xF4A5A80000000000;
  unint64_t v167 = v151 - 0x218E81BB3C2166C8;
  uint64_t v168 = v165 ^ 0x255FB5D391389B15;
  uint64_t v169 = (v162 - 2 * (v162 & 0x51FA1DEF0448FB67 ^ v163) - 0x2E05E210FBB704BBLL) ^ v165 ^ 0x255FB5D391389B15;
  uint64_t v170 = (v151 - 0x218E81BB3C2166C8) ^ v169 & (__ROR8__((v166 >> 38) ^ 0xE2AAF8192B2B27F8, 26) ^ 0x353601C75541F9B5);
  uint64_t v171 = ((v170 ^ 0x4C4A7AB0E8DE9983) + 0x6DC4FB0BD4FFFF45) ^ ((v170 ^ 0x218E81BB3C2166C7) + 1);
  v170 ^= 0xDF08B05A638913EBLL;
  uint64_t v172 = (v171 - ((2 * v171) & 0x2F39C3D40AF15A6) + 0x179CE1EA0578AD3) ^ v170;
  unint64_t v173 = v172 - ((2 * v172 + 0x1B89F617A9FFFE88) & 0x126F8422A02CAA30) - 0x90342E2DAE9ABA4;
  *((void *)&v166 + 1) = (v172 - ((2 * v172 - 1442840952) & 0xA02CAA30) + 622220380) ^ 0x18;
  *(void *)&long long v166 = v173 ^ 0x8937C21150165500;
  uint64_t v174 = (((v166 >> 6) ^ (v173 >> 1) ^ ((v172 << 63) | 0x449BE108A80B2A8CLL))
        - 0x76C83DEEAFE9AB00
        - 2
        * (((v166 >> 6) ^ (v173 >> 1) ^ ((v172 << 63) | 0x449BE108A80B2A8CLL)) & 0x937C21150165538 ^ ((v166 >> 6) ^ (v173 >> 1)) & 0x20)
        + 24) ^ v173;
  unint64_t v175 = (((2 * v167) ^ 0x431D03767842CD8FLL) + (v167 ^ 0xDE717E44C3DE9938)) & (v165 ^ 0xF4A5A83C95706050);
  unint64_t v176 = (v140 - ((2 * v140) & 0xCF182DF6FD08E87ALL) + 0x678C16FB7E84743DLL) ^ v152;
  uint64_t v177 = ((v176 ^ 0x678C16FB7E84743DLL) << 45) ^ ((v176 ^ 0x678C16FB7E84743DLL) << 36) ^ v162 ^ __ROR8__(((v176 << 34) & 0xC000000000000000 | ((v176 ^ 0x678C16FB7E84743DLL) >> 30)) ^ __ROR8__(v176 ^ 0x24F93B29F4982B17 ^ (((v176 >> 19) ^ 0x1E0F5623D10DLL) - ((2 * ((v176 >> 19) ^ 0x1E0F5623D10DLL)) & 0x146EF9E95540) - 0x2B7C75C8830B5560), 2) ^ 0xA6115EFD9A53B36ELL, 62);
  unint64_t v178 = (v167 ^ 0xDE717E44C3DE9938) & (v144 ^ 0x894F104BB57B5136) ^ v177 ^ 0xE87B635F1624B3E6;
  unint64_t v179 = v178 ^ v144 ^ 0x3E867069C8A16086 ^ (v175 - ((2 * v175) & 0x906D3FBB044B9C9ELL) + 0x48369FDD8225CE4FLL);
  *((void *)&v166 + 1) = v179 ^ 0x5BE354A5BB0B2;
  *(void *)&long long v166 = v179 ^ 0x6000000000000000;
  uint64_t v180 = v179 ^ __ROR8__(v179, 39) ^ (v166 >> 61);
  unint64_t v181 = ((v177 ^ 0x3D9656FDEA6A2FLL ^ -(v177 ^ 0x3D9656FDEA6A2FLL) ^ ((v177 ^ 0xE87B635F1624B3E6)
                                                                     + 0x17B90AF614312637))
        + 0x17B90AF614312636) & (v144 ^ 0x76B0EFB44A84AEC9) ^ v169;
  unint64_t v182 = v181 ^ 0x2DB5B6AF87F64351 ^ ((v181 ^ 0x2DB5B6AF87F64351) >> 7) ^ ((v181 ^ 0x2DB5B6AF87F64351) << 23) ^ (((v181 ^ 0x2DB5B6AF87F64351) >> 41) | ((v181 ^ 0x2DB5B6AF87F64351) << 57));
  unint64_t v183 = (((v177 ^ 0xE87B635F1624B3E6) & ~v169)
        - ((2 * ((v177 ^ 0xE87B635F1624B3E6) & ~v169)) & 0xA3F43BDE0891F68ALL)
        - 0x2E05E210FBB704BBLL) ^ v168;
  unint64_t v184 = (v183 - ((2 * v183) & 0x2F39C3D40AF15A6) + 0x179CE1EA0578AD3) ^ v170;
  unint64_t v185 = v184 ^ (v184 << 54) ^ (v184 << 47) ^ (v184 >> 10) ^ (v184 >> 17);
  unint64_t v186 = v181 ^ __ROR8__(__ROR8__(v178, 61) ^ 0x500CB82D79BEE91BLL, 3);
  uint64_t v187 = ((v186 >> 19) ^ (v186 >> 28) | (v186 << 45)) ^ 0x21278C61855392E3;
  unint64_t v188 = v186 ^ (v186 << 36) ^ v182 ^ (v187 - ((2 * v187) & 0xBC19D8B0E33DF886) - 0x21F313A78E6103BDLL);
  uint64_t v189 = v185 ^ 0xC3B271969E22B3CLL;
  unint64_t v190 = v185 ^ 0xC3B271969E22B3CLL ^ (v182 - ((2 * v182) & 0xA2244715D42D3E22) - 0x2EEDDC7515E960EFLL);
  unint64_t v191 = (v188 ^ 0x6DE34213A200A80) & (v180 ^ 0xA9109542E9BBBCELL) ^ v190;
  unint64_t v192 = v174 & (v180 ^ 0xF56EF6ABD1644431) ^ v188 ^ 0xF921CBDEC5DFF57FLL;
  *((void *)&v166 + 1) = v192 ^ v191 ^ 0x62F93;
  *(void *)&long long v166 = v192 ^ v191 ^ 0x69309AC4CA80000;
  uint64_t v193 = v192 ^ v191 ^ 0x119906433112939 ^ (((v166 >> 19) ^ ((v192 ^ v191) << 36) ^ 0xCAE2F93000000000)
                                            - 2
                                            * (((v166 >> 19) ^ ((v192 ^ v191) << 36) ^ 0xCAE2F93000000000) & 0x78A99C87FBF06ABLL ^ (v166 >> 19) & 1)
                                            + 0x78A99C87FBF06AALL);
  uint64_t v194 = (v193 ^ -v193 ^ ((((v192 ^ v191) >> 28) ^ 0x69309AC4) - (v193 ^ ((v192 ^ v191) >> 28) ^ 0x69309AC4)))
       + (((v192 ^ v191) >> 28) ^ 0x69309AC4);
  unint64_t v195 = v194 - 0x23B904CB0D834A34 - ((2 * v194) & 0xB88DF669E4F96B98);
  char v196 = *(unsigned char *)(a29 + ((v194 - 52 - ((2 * v194) & 0x98)) ^ 0x8ALL));
  *a36 = BYTE1(v195) ^ 0xB5;
  a24[5] = ((v196 ^ 0x94) >> 6) | (4 * (v196 ^ 0x94));
  uint64_t v197 = (v195 >> 12) & 0xF0 | (v195 >> 20) & 0xF;
  LOBYTE(v175) = ((v195 >> 12) & 0xF0 | (v195 >> 20) & 0xF) ^ 0x39;
  *a37 = (*(unsigned char *)(a20 + (v197 ^ 0x39)) ^ 0xA1)
       + (v197 ^ 0x8C)
       + (v197 ^ 0x19)
       - 2 * (((v197 ^ 0x8C) + (v197 ^ 0x19)) & (*(unsigned char *)(a20 + (v197 ^ 0x39)) ^ 0xA1))
       - 122;
  LOBYTE(v178) = *(unsigned char *)(a29 + (((v194 - 226708020 - ((2 * v194) & 0xE4F96B98)) >> 24) ^ 0xB4)) ^ 0x94;
  *a39 = (v178 >> 6) | (4 * v178);
  v180 ^= 0x2FDE8EA1655DA5BFuLL;
  uint64_t v198 = (v174 - ((2 * v174) & 0x4A9F0FEA978C3CE2) + 0x254F87F54BC61E71) ^ v180;
  unint64_t v199 = (((v185 ^ 0xDD29049383F4B42DLL) & ~v198 ^ v192)
        - ((2 * ((v185 ^ 0xDD29049383F4B42DLL) & ~v198 ^ v192)) & 0x4A9F0FEA978C3CE2)
        + 0x254F87F54BC61E71) ^ v180;
  *(void *)&long long v166 = __ROR8__((v199 >> 13) & 0x7000000000000 ^ __ROR8__(v199 ^ 0x83C2CE3F370BF54BLL ^ (((8 * v199) ^ (v199 << 25) ^ 0xBF0681A6CFCC6AD0)- ((2* ((8 * v199) ^ (v199 << 25) ^ 0xBF0681A6CFCC6AD0)) & 0xC38380D170E4F020)- 0x1E3E3F97478D87EFLL), 16) ^ 0x59AF12027FFB7224, 48);
  uint64_t v200 = (v166 ^ -(uint64_t)v166 ^ (((v199 >> 39) ^ 0xC4061C) - (v166 ^ (v199 >> 39) ^ 0xC4061C)))
       + ((v199 >> 39) ^ 0xC4061C);
  LODWORD(v192) = *(unsigned __int8 *)(a18
                                     + ((((v195 >> 31) & 0xB8 ^ 0x28) + (BYTE4(v195) ^ 0xE8)) ^ 0x77));
  DWORD1(v166) = (v192 >> 6) ^ 0x7F ^ -((v192 >> 6) ^ 0x7F) ^ (((v192 >> 6) | (8 * v192))
                                                                                         - 127);
  LODWORD(v166) = (DWORD1(v166) + 4 * v192) << 24;
  a24[1] = v200 ^ 0xAC;
  a30[6] = (BYTE6(v195) ^ 0x46) - 2 * ((BYTE6(v195) ^ 0x46) & 0x6C ^ BYTE6(v195) & 8) - 28;
  a24[4] = BYTE2(v200) ^ 0x24;
  *a40 = (unint64_t)v166 >> 26;
  unint64_t v201 = v198 ^ (v185 ^ 0x22D6FB6C7C0B4BD2) & v182;
  unint64_t v202 = (v201 >> 1) ^ (v201 >> 6) ^ ((v201 << 58) ^ 0xB800000000000000) & 0xE7FFFFFFFFFFFFFFLL ^ (((v201 << 58) ^ 0xB800000000000000) & 0x1800000000000000 ^ v201 & 0x183B3BDBC4516A26 | v201 & 0xE7C4C4243BAE95D9 ^ (v201 << 63));
  a30[12] = (BYTE3(v200) ^ 0x72) - ((2 * (BYTE3(v200) ^ 0x72)) & 0xC8) - 28;
  *(unsigned char *)(a32 + 29) = HIBYTE(v195) ^ 0xDC;
  a30[13] = (BYTE5(v195) ^ 0xFB) - ((2 * (BYTE5(v195) ^ 0xFB)) & 0xC8) - 28;
  a22[6] = (v200 ^ 0x12027FFB722459ACuLL) >> (v175 & 8) >> (~(_BYTE)v175 & 8);
  LODWORD(v195) = *(unsigned __int8 *)(a18 + (((BYTE4(v200) ^ 0xFB) - 36) ^ 0x77));
  a22[4] = BYTE6(v200) ^ 2;
  *a24 = HIBYTE(v200) ^ 0x12;
  a22[2] = ((unsigned __int16)((v201 >> 1) ^ (v201 >> 6) ^ v201) >> 8) ^ 5;
  *a42 = BYTE5(v200) ^ 0x7F;
  LODWORD(v175) = (((v201 >> 1) ^ (v201 >> 6) ^ v201) >> 16);
  a24[2] = (v201 >> 1) ^ (v201 >> 6) ^ v201 ^ 0xDB;
  *a22 = ((((v195 >> 6) | (4 * v195)) ^ 0x7F) >> 2) | ((((v195 >> 6) | (4 * v195)) ^ 0x7F) << 6);
  char v203 = *(unsigned char *)(a13
                  + (((v175 ^ 0x76) + (v175 ^ 0xFFFFFFAA) + 1) ^ 0xFFFFFFFE)
                  + (v175 ^ 0x76));
  *a41 = (((v201 >> 1) ^ (v201 >> 6) ^ v201) >> 24) ^ 0x87;
  unint64_t v204 = ((v201 ^ (v188 ^ 0xF921CBDEC5DFF57FLL) & ~v190)
        - ((2 * (v201 ^ (v188 ^ 0xF921CBDEC5DFF57FLL) & ~v190)) & 0xA2244715D42D3E22)
        - 0x2EEDDC7515E960EFLL) ^ v189;
  unint64_t v205 = v204
       - ((2 * v204) & 0x9E2B77E5823BC0A6)
       + 0x4F15BBF2C11DE053
       - ((2 * (v204 - ((2 * v204) & 0x9E2B77E5823BC0A6) + 0x4F15BBF2C11DE053)) & 0xD15120A565D4AB80)
       - 0x17576FAD4D15AA40;
  unint64_t v206 = v191 ^ (v191 << 23) ^ ((v191 >> 7) ^ (v191 >> 41) | (v191 << 57));
  unint64_t v207 = v205 ^ (v205 << 47) ^ (v205 >> 10) ^ (v205 << 54);
  unint64_t v208 = v207 ^ (v205 >> 17);
  a24[3] = BYTE6(v202) ^ 0x5D;
  unsigned __int8 v209 = (v203 ^ 0xF2 ^ (16 * v203) & 0x40) & 7 ^ 0x35 ^ ((unint64_t)((v203 ^ 0xF2 ^ (16 * v203) & 0x40) >> 3) << ((v200 ^ 0xAC) & (v200 ^ 0x50)) << ((v200 ^ 0xAC) & (v200 ^ 0x50) ^ 3));
  a24[11] = v208 ^ 0x20;
  *(unsigned char *)(a32 + 28) = BYTE5(v202) ^ 0x22;
  a24[13] = ((v209 >> 3) | (32 * v209)) ^ 0xA6;
  *a33 = BYTE2(v208) ^ 0x6F;
  a30[8] = (HIBYTE(v202) ^ 0xA1) - ((2 * (HIBYTE(v202) ^ 0xA1)) & 0xC8) - 28;
  uint64_t v210 = (v208 >> 20) & 0xF0 | (v208 >> 28);
  a30[17] = (BYTE4(v202) ^ 0x3C) - 2 * ((BYTE4(v202) ^ 0x3C) & 0x66 ^ BYTE4(v202) & 2) - 28;
  a30[11] = (BYTE1(v208) ^ 0xB6) - ((2 * (BYTE1(v208) ^ 0xB6)) & 0xC8) - 28;
  LOBYTE(v202) = *(unsigned char *)(a20 + (v210 ^ 0x10));
  *(unsigned char *)a32 = BYTE6(v207) ^ 0x72;
  LOBYTE(v182) = v202 ^ ((v210 ^ 0x30) + (v210 ^ 0xA5)) ^ 0xA1;
  *a34 = BYTE5(v208) ^ 0xCE;
  *(unsigned char *)(a32 + 15) = ((v191 ^ (v191 << 23) ^ (v191 >> 7) ^ (v191 >> 41)) >> 24) ^ 0x79;
  a30[19] = v191 ^ (v191 >> 7) ^ (v191 >> 41) ^ 0x76;
  a22[5] = ((unsigned __int16)(v191 ^ (v191 >> 7) ^ (v191 >> 41)) >> 8) ^ 0x3D;
  a24[8] = ((v191 ^ (v191 << 23) ^ (v191 >> 7) ^ (v191 >> 41)) >> 16) ^ 3;
  a30[18] = v182 + (~(2 * v182 + 12) | 0x37) + 107;
  a24[6] = BYTE4(v208) ^ 0x22;
  a22[7] = HIBYTE(v207) ^ 0xB2;
  LOBYTE(v194) = *(unsigned char *)(a29 + (BYTE4(v206) ^ 0x19)) ^ 0x94;
  *(unsigned char *)(a32 + 14) = BYTE5(v206) ^ 0x49;
  a22[3] = HIBYTE(v206) ^ 0xBE;
  a22[1] = BYTE6(v206) ^ 0x75;
  *(unsigned char *)(a32 + 16) = (v194 >> 6) | (4 * v194);
  *(_DWORD *)(a32 + 4) = a17 - 2142738362;
  JUMPOUT(0x100354B34);
}

uint64_t sub_100354B8C(uint64_t a1)
{
  unint64_t v12 = a1 - 0x6F059C107AC82C34 + v9 + (*(_DWORD *)(v1 + 4 * v3) ^ v4);
  *(_DWORD *)(v1 + 4 * v3) = v12 + ((v9 + 155) ^ v5 ^ v6) - ((2 * v12) & 0x81DBE93C);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((126 * ((v7 ^ HIDWORD(v12)) + (v8 & (v12 >> 31)) + v10 != v11)) ^ (v9 + 155))))();
}

uint64_t sub_100354C10(uint64_t a1, uint64_t a2)
{
  int v6 = v3 + *(unsigned __int8 *)(a2 + 3) - 537;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1632 * ((v5 & (2 * v6)) + (v6 ^ v4) == v4)) | v3)))();
}

uint64_t sub_100354C4C(uint64_t result)
{
  return sub_10035FEE0(result);
}

uint64_t sub_100354CA0(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((a2 + a1 + (((v2 ^ 0x1B1) + 1886) ^ 0x70B0031Cu) > 7) * (14 * (v2 ^ 0x1B1) - 1430)) ^ v2)))();
}

uint64_t sub_100354D18(double a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int8x16_t a19, int32x4_t a20,int8x16_t a21,int8x16_t a22,int8x16_t a23)
{
  int v27 = -143328491 - v23;
  int8x16_t v28 = (int8x16_t)vld1q_dup_f32((const float *)v25);
  v29.i64[0] = 0x8000000080000000;
  v29.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(void *)(v25 + 4);
  a2.i32[2] = *(_DWORD *)(v25 + 12);
  int8x16_t v30 = vextq_s8(v28, a2, 0xCuLL);
  int8x16_t v31 = a2;
  v31.i32[3] = *(_DWORD *)(v25 + 16);
  int32x4_t v32 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v31, a23), vandq_s8(v30, v29)), 1uLL), a22);
  v33.i32[0] = *(_DWORD *)(v26 + 4 * (*(_DWORD *)(v25 + 4) & ((v27 ^ 0x2E7u) - 1448) ^ 1));
  v33.i32[1] = *(_DWORD *)(v26 + 4 * ((*(_DWORD *)(v25 + 8) & 1) == 0));
  v33.i32[2] = *(_DWORD *)(v26 + 4 * (~*(_DWORD *)(v25 + 12) & 1));
  v33.i32[3] = *(_DWORD *)(v26 + 4 * ((v31.i8[12] & 1) == 0));
  *(int8x16_t *)uint64_t v25 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v25 + 1588), v33), a19), (int8x16_t)vaddq_s32(vsubq_s32(v32, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v32, v32), a21)), a20));
  return (*(uint64_t (**)(void))(v24 + 8 * (v27 ^ 0x25)))();
}

uint64_t sub_100354D24()
{
  *(_DWORD *)(v2 - 116) = (v1 - 242) ^ (460628867
                                      * ((((v2 - 120) | 0x4AD97D05) - (v2 - 120) + ((v2 - 120) & 0xB52682F8)) ^ 0x64FFF78));
  *(void *)(v2 - 112) = v4;
  (*(void (**)(uint64_t))(v0 + 8 * (v1 ^ 0xFF1)))(v2 - 120);
  *(void *)(v2 - 112) = v5;
  *(_DWORD *)(v2 - 116) = (v1 - 242) ^ (460628867
                                      * ((2 * ((v2 - 120) & 0x3DE95DA0) - (v2 - 120) - 1038704038) ^ 0x8E802027));
  (*(void (**)(uint64_t))(v0 + 8 * (v1 ^ 0xFF1)))(v2 - 120);
  *(_DWORD *)(v2 - 104) = v1
                        + 1374699841 * ((((v2 - 120) | 0x312B6D0F) - ((v2 - 120) & 0x312B6D0F)) ^ 0x5CDF7506)
                        - 1385;
  *(void *)(v2 - 120) = v6;
  *(void *)(v2 - 112) = v5;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0xFF4)))(v2 - 120);
}

uint64_t sub_100354EC8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v0) == v0)
                                * ((v3 + 402) ^ 0x693)) ^ v3)))();
}

uint64_t sub_100354F08(uint64_t result)
{
  *(_DWORD *)(result + 24) = -1697513532;
  return result;
}

void sub_100354F14(_DWORD *a1@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(*(void *)(v3 + 24) - 0x56530F603BC303ACLL) = v1;
  *(_DWORD *)(v4 - 0x765012DCA7D4077ELL) = v2;
  *(_DWORD *)uint64_t v3 = *a1;
}

uint64_t sub_100354F80@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((465
                                * (a1 + 635 * (v4 ^ 0x525) + 49 + ((635 * (v4 ^ 0x525) - 3261) ^ v3) + v2 - 1320 <= (int)((635 * (v4 ^ 0x525) + 1165673169) & 0xBA853FFE ^ 0xFFFFF839))) ^ (635 * (v4 ^ 0x525)))))();
}

uint64_t sub_100354FEC(uint64_t a1, uint64_t a2, int a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, _DWORD *a17, int a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30)
{
  int v36 = ((v30 - 1176) ^ (v31 + 147) ^ *a30) + a18 * (*(_DWORD *)(*a20 + 4 * (v34 - 2036583280)) ^ v31);
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                                         + 8
                                                                                         * (v30 ^ (227 * (v33 < 2)))))(((v36 + a3 - ((2 * v36) & 0x42748744u)) ^ a4)+ ((v36 + a3 - ((2 * v36) & 0x42748744)) ^ a4)* (*a17 - 379116712)* (unint64_t)(**v35 ^ v31), 1491193923, 2178672956, a14, 0x7821CCB1A13A43A2);
}

void sub_100355018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned char *a9)
{
  unsigned int v12 = v10 - ((2 * v10 + 726303490) & 0xDEC41458) - 2063119443;
  *a9 = ((v11 + 21) & 0xEF ^ HIBYTE(v12) ^ 0x42) - ((2 * ((v11 + 21) & 0xEF ^ HIBYTE(v12))) & 0x30) + 24;
  a9[1] = (BYTE2(v12) ^ 0x62) - ((v12 >> 15) & 0x30) + 24;
  a9[2] = (BYTE1(v12) ^ 0xA) - 2 * ((BYTE1(v12) ^ 0xA) & 0x1D ^ BYTE1(v12) & 5) + 24;
  a9[3] = v12 ^ 0x34;
  uint64_t v13 = v9 - ((2 * v9) & 0xA7CEE2F0768C92ALL) - 0x7AC188E87C4B9B6BLL;
  a9[4] = (HIBYTE(v13) ^ 0x85) - ((2 * HIBYTE(v13)) & 0x30) + 24;
  a9[5] = (BYTE6(v13) ^ 0x3E) - 2 * ((BYTE6(v13) ^ 0x3E) & 0x99 ^ BYTE6(v13) & 1) + 24;
  a9[6] = (BYTE5(v13) ^ 0x77) - ((2 * (BYTE5(v13) ^ 0x77)) & 0x30) + 24;
  a9[7] = (BYTE4(v13) ^ 0x17) + (~(2 * (BYTE4(v13) ^ 0x17)) | 0xCF) + 25;
  a9[8] = (((v9 - ((2 * v9) & 0x768C92A) - 2085329771) >> 24) ^ 0x83)
        - ((2 * ((v9 - ((2 * v9) & 0x768C92A) - 2085329771) >> 24)) & 0x30)
        + 24;
  a9[9] = (BYTE2(v13) ^ 0xB4) - 2 * ((BYTE2(v13) ^ 0xB4) & 0x99 ^ BYTE2(v13) & 1) + 24;
  a9[10] = (BYTE1(v13) ^ 0x64) + (~(2 * BYTE1(v13)) | 0xCF) + 25;
  a9[11] = v13 ^ 0x8D;
  sub_10038E4FC();
}

uint64_t sub_1003551F0@<X0>(int a1@<W2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v5 - 252 + a3 + a2) = 24;
  return (*(uint64_t (**)(void))(v4 + 8 * ((744 * ((unint64_t)(a3 + 1 + a2) < 0x38)) ^ (a1 + v3 - 227))))();
}

uint64_t sub_100355230(char a1, char a2, uint64_t a3, int a4, int a5, int8x16_t a6, int8x8_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v56 = a4 - 8;
  uint64_t v57 = (v49 + v56);
  v59.val[0].i64[0] = ((_BYTE)v49 + (_BYTE)v56) & 0xF;
  v59.val[0].i64[1] = (v52 + (_BYTE)v56) & 0xF;
  v59.val[1].i64[0] = (v55 + (_BYTE)v56) & 0xF;
  v59.val[1].i64[1] = (v54 + (_BYTE)v56) & 0xF;
  v59.val[2].i64[0] = (v53 + (_BYTE)v56) & 0xF;
  v59.val[2].i64[1] = (v51 + (_BYTE)v56) & 0xF;
  v59.val[3].i64[0] = (a2 + (_BYTE)v56) & 0xF;
  v59.val[3].i64[1] = (a1 + (_BYTE)v56) & 0xF;
  *(int8x8_t *)(a3 + v57) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v48 + (v57 & 0xF) - 7), *(int8x8_t *)(a3 + v57)), veor_s8(*(int8x8_t *)((v57 & 0xF) + v47 - 5), *(int8x8_t *)((v57 & 0xF) + v46 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v59, a6), a7)));
  return (*(uint64_t (**)(void))(a46 + 8 * (((v50 == v56) * a5) ^ a9)))();
}

uint64_t sub_100355238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, void))(v9 + 8 * (((v6 + (a6 ^ (v7 + 536)) + 244) * (v8 < 0x20)) ^ a6)))(a1, 0);
}

uint64_t sub_10035526C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v22 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * ((v21 - 1922) ^ (2163 * ((a20 & 0x20000000) == 0))));
  return v22(a1, v22, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_10035529C@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W5>, uint64_t a4@<X8>)
{
  HIDWORD(v8) = a3 ^ 1;
  LODWORD(v8) = a3 ^ a1;
  return (*(uint64_t (**)(void))(v4 + 8 * ((28 * (a4 + 1 == v7 + 24)) ^ a2)))((v8 >> 2) + v6 - (v5 & (2 * (v8 >> 2))));
}

uint64_t sub_100355358()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((440 * (v1 - 1206753085 < 3 * (v0 ^ 0x535u) + 2147482486)) ^ v0)))();
}

uint64_t sub_1003553A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(*(void *)(a8 + 96) + 1544) = *(void *)(v9 + 8);
  *(_DWORD *)(*(void *)(a8 + 96) + 1536) = *(_DWORD *)(v9 + 4);
  return v8 ^ 0x241DE93Au;
}

uint64_t sub_100355400()
{
  unsigned int v4 = (((v1 ^ 0x984) - 534) ^ 0x95F07196) + v2;
  BOOL v5 = v4 < (((v1 ^ 0x984) - 1668) ^ 0xD2810B4E);
  BOOL v6 = v3 - 763295027 < v4;
  if (v3 > 0x2D7EF532 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((28 * v6) ^ v1 ^ 0x984)))();
}

uint64_t sub_100355480(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(unsigned char *)(*v14 + (v12 + a8)) = *(unsigned char *)(*v14 + (v9 + a1));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v10 + 518 + v8 != 1619226866) * v13) ^ v10)))();
}

uint64_t sub_1003554D4(uint64_t a1)
{
  uint64_t v9 = (v5 + v4 + v3 - v7 + 1350);
  *(void *)(a1 - 7 + v9) = *(void *)(v1 - 7 + v9);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 - (v2 & 0xFFFFFFF8) == -8) * (31 * (v6 ^ 0x651) - 43)) ^ v6)))();
}

uint64_t sub_100355538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = v6 + v9;
  *(unsigned char *)(a5 + v11) = v7;
  return (*(uint64_t (**)(void))(v10 + 8 * ((((unint64_t)(v11 + 1) < 0x38) * v8) ^ v5)))();
}

uint64_t sub_10035556C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v7 = (a5 - 1702) ^ 0x4A7;
  void *v10 = a1;
  *uint64_t v11 = (v5 + a5 - 1702 - 233) ^ v14;
  int v8 = (v7 - 1054) | 0x100;
  unsigned int v16 = v7 + 535753261 * ((2 * (v15 & 0x29CE5148) - v15 + 1446096563) ^ 0x5CC5A09C) + 835;
  uint64_t v17 = v13;
  (*(void (**)(unsigned char *))(v6 + 8 * ((a5 - 1702) ^ 0x820)))(v15);
  unsigned int v16 = v8
      + 535753261
      * (((v15 | 0xE9025295) - v15 + (v15 & 0x16FDAD68)) ^ 0xE3F65CBA)
      + 1633;
  uint64_t v17 = v12;
  (*(void (**)(unsigned char *))(v6 + 8 * (v8 + 1945)))(v15);
  return v5 ^ 0x241DE93Au;
}

uint64_t sub_1003556AC@<X0>(int a1@<W3>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a2 - 256899874);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v6 + (v8 & 0xF)) ^ *(unsigned char *)((v8 & 0xF) + v5 + 2) ^ *(unsigned char *)((v8 & 0xF) + v4 + 4) ^ (119 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((2 * (a2 - 1 != v3)) | (16 * (a2 - 1 != v3)) | (a1 - 1860))))();
}

uint64_t sub_100355718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char v28 = *(unsigned char *)(v27 + ((v22 + v23) & v25 ^ (v24 - 59)) + v20);
  *(unsigned char *)(a5 + v21) = v28 + (a1 ^ (2 * v28) | 0xCF) + 25;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((210 * (v21 == 63)) ^ v22)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20);
}

uint64_t sub_100355774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v17 = (a8 + v10);
  *(unsigned char *)(v15 + v17) = *(unsigned char *)(v13 + (v17 & 0xF)) ^ *(unsigned char *)(v8 + v17) ^ *(unsigned char *)(v11
                                                                                          + (v17 & 0xF)
                                                                                          + ((v14 + 311) ^ 0x576)) ^ *(unsigned char *)((v17 & 0xF) + v12 + 3) ^ (-121 * (v17 & 0xF));
  return (*(uint64_t (**)(void))(v16 + 8 * ((226 * (a8 - 1 == v9 + 1394)) ^ (v14 + 553))))();
}

uint64_t sub_1003557E8(uint64_t a1, int a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((22 * (((v5 < a4) ^ (-107 * (a2 ^ 0xC8))) & 1)) ^ a2)))();
}

uint64_t sub_100355820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v7
                                                                      + 8
                                                                      * (int)((((((a6 + 862315295) & 0xCC9A1BDE) - 27) ^ 0x75)
                                                                             * ((v6 & 0x18) != 0)) ^ (a6 + 1204))))(a1, a2, a3, (a1 - a3));
}

uint64_t sub_100355868@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(_DWORD *)(v1 + 4 * (a1 + v4 + 1195)) == v2) * ((v3 ^ 0x6CA) - 1091)) ^ (v3 - 69))))();
}

uint64_t sub_1003558A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((v7 - a7 + 518) | 0x80) ^ 0x2AE) * ((a2 & 0xFFFFFFFFFFFFFFFLL) != 0)) ^ (v8 - 311))))();
}

uint64_t sub_1003558E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v27 = v24 + 1;
  int v28 = (*v21 - 379116712) * (*(_DWORD *)(a17 + 4 * (v27 - 1903769751)) ^ 0x40EDF49E);
  int v29 = 1755732067 * (((v23 | v22) - (v22 & v23)) ^ 0x78951F55);
  *(void *)(v26 - 104) = a15;
  *(_DWORD *)(v26 - 128) = v25 - v29 + 933;
  *(_DWORD *)(v26 - 112) = (v27 - 1166139) ^ v29;
  *(_DWORD *)(v26 - 108) = (v28 ^ v18) - v29 + ((2 * v28) & 0xFFF5DF9E) + 1448607488;
  *(void *)(v26 - 120) = a14;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v25 + 1265)))(v26 - 128);
  BOOL v31 = v27 - 883414962 < v17;
  if (a13 > v20 != v27 - 883414962 < -1127128860) {
    BOOL v31 = a13 > v20;
  }
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((703 * v31) ^ v25)))(v30);
}

uint64_t sub_1003558EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,char a36)
{
  return sub_10035591C(a1, a2, a3, a17, a5, a6, &STACK[0x264], &a36);
}

uint64_t sub_10035591C()
{
  BOOL v2 = ((2 * LODWORD(STACK[0x2A8])) & 0x4A ^ 0x48) + (STACK[0x2A8] & 0x3F ^ 0x5DD9FFD9u) - 1574567969 > 0xFFFFFFBF;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (((2 * v2) | (32 * v2)) ^ (v1 + 643))))(4294967235);
}

uint64_t sub_100355A40(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32)
{
  BOOL v34 = a3 + a32 + 75 < (v33 - 21);
  return (*(uint64_t (**)(void))(v32
                              + 8
                              * (((2 * ((v34 ^ (v33 - 1)) & 1)) & 0xF7 | (8 * ((v34 ^ (v33 - 1)) & 1))) ^ (v33 + 1702))))();
}

uint64_t sub_100355A90()
{
  return 4294925273;
}

uint64_t sub_100355A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X6>, _OWORD *a5@<X7>, int a6@<W8>)
{
  *(_OWORD *)(a4 + (a6 - 1556690660)) = *a5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                       + 8
                                                                       * ((91
                                                                         * (((541 * (v8 ^ 0x463u)) ^ 0x42ALL) != (((541 * (v8 ^ 0x463u)) ^ 0x1FFFFFBCALL) & ((v7 ^ 0x2A6) + v6)))) ^ (541 * (v8 ^ 0x463)))))(a1, a2, a3, 711);
}

uint64_t sub_100355B28@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v17 = 127 * (a1 ^ 0x3BA);
  int v18 = ((((v16 - 144) | 0x314D4C0E) - ((v16 - 144) & 0x314D4C0E)) ^ 0x8BD9346C) * v15;
  *(void *)(v16 - 136) = v14;
  *(void *)(v16 - 128) = v13;
  *(_DWORD *)(v16 - 144) = v18 + a1 + 825;
  *(_DWORD *)(v16 - 116) = v18 + v10 + (v17 ^ 0xF173D5DA);
  (*(void (**)(uint64_t))(v11 + 8 * (a1 ^ 0xB65)))(v16 - 144);
  *(_DWORD *)(v16 - 128) = (v17 + 345) ^ (628203409 * ((v16 + 69161144 - 2 * ((v16 - 144) & 0x41F5148)) ^ 0x86975D7B));
  *(void *)(v16 - 144) = v12;
  *(void *)(v16 - 136) = a7;
  (*(void (**)(uint64_t))(v11 + 8 * (v17 ^ 0x842)))(v16 - 144);
  *(void *)(v16 - 112) = v13;
  *(void *)(v16 - 104) = v12;
  *(_DWORD *)(v16 - 128) = v17
                         + 1374699841 * ((((v16 - 144) | 0xD1E85911) - ((v16 - 144) & 0xD1E85911)) ^ 0xBC1C4118)
                         + 952;
  *(void *)(v16 - 144) = a6;
  *(void *)(v16 - 136) = a7;
  *(void *)(v16 - 120) = a8;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v11 + 8 * (v17 ^ 0x807)))(v16 - 144);
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * (((v17 ^ 0x11B) * (a10 == 0)) ^ v17)))(v19);
}

uint64_t sub_100355CBC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((14 * (v2 ^ 0x5AB) + 1131660463) & 0xBC8C37FF ^ 0xFFFFFFCA)
                                      + 14 * (v2 ^ 0x5AB)
                                      - 895)
                                     * (v1 != 996572258)) | (14 * (v2 ^ 0x5AB)))))();
}

uint64_t sub_100355D24@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W4>, int a4@<W8>, int8x16_t a5@<Q4>, int8x16_t a6@<Q5>)
{
  uint64_t v10 = a1 - 32 + ((v8 + a4) & a3);
  int8x16_t v11 = vrev64q_s8(*(int8x16_t *)(v7 + v10 - 15));
  int8x16_t v12 = vextq_s8(v11, v11, 8uLL);
  int8x16_t v13 = vrev64q_s8(*(int8x16_t *)(v7 + v10 - 31));
  int8x16_t v14 = vextq_s8(v13, v13, 8uLL);
  uint64_t v15 = v6 + v10;
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), a5)), a6));
  *(int8x16_t *)(v15 - 15) = vextq_s8(v16, v16, 8uLL);
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v14, vandq_s8(vaddq_s8(v14, v14), a5)), a6));
  *(int8x16_t *)(v15 - 31) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v9 + 8 * ((454 * (a2 == 32)) ^ v8)))();
}

uint64_t sub_100355D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v25 - 128) = a22;
  *(void *)(v25 - 120) = v22;
  *(_DWORD *)(v25 - 112) = v23
                         + 1374699841
                         * ((((v25 - 128) | 0x7984BEEA) - (v25 - 128) + ((v25 - 128) & 0x867B4110)) ^ 0x1470A6E3)
                         - 1194;
  (*(void (**)(uint64_t))(v24 + 8 * (v23 ^ 0xEB7)))(v25 - 128);
  *(void *)(v25 - 104) = a20;
  *(void *)(v25 - 120) = a22;
  *(_DWORD *)(v25 - 112) = v23 + 1178560073 * ((v25 - 128) ^ 0xBA947862) - 623;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v23 ^ 0xEC5)))(v25 - 128);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((181 * ((*(_DWORD *)(v25 - 128) - 1535751604) < 0xC029A128)) ^ v23)))(v26);
}

void sub_100355E44()
{
}

uint64_t sub_100355E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11, unint64_t *a12, uint64_t a13, unsigned int a14)
{
  unsigned int v17 = 3804331 * ((-1461682303 - (&a10 | 0xA8E07F81) + (&a10 | 0x571F807E)) ^ 0x29CAA588);
  a10 = v17 + 296806368;
  a11 = v17 + v14 - 646;
  a12 = &STACK[0x3B6240245EEB6D72];
  a13 = v15;
  a14 = v17 + 115270171;
  uint64_t v18 = (*(uint64_t (**)(unsigned int *))(v16 + 8 * (v14 + 1200)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((436 * (*(_DWORD *)(v15 - 0x38C18B7A1BA31314) == 605940026)) ^ v14)))(v18);
}

uint64_t sub_100355F2C(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v15 = a8 - 292;
  v24.val[1].i64[0] = ((_BYTE)v11 + 8) & 0xF;
  v24.val[1].i64[1] = ((_BYTE)v11 + 7) & 0xF;
  v24.val[2].i64[0] = ((_BYTE)v11 + 6) & 0xF;
  v24.val[2].i64[1] = ((_BYTE)v11 + 5) & 0xF;
  v24.val[3].i64[0] = ((_BYTE)v11 + 4) & 0xF;
  v24.val[3].i64[1] = ((_BYTE)v11 + 3) & 0xF;
  v25.val[0].i64[0] = ((_BYTE)v11 + 2) & 0xF;
  v25.val[0].i64[1] = ((_BYTE)v11 + 1) & 0xF;
  v25.val[1].i64[0] = v11 & 0xF;
  v25.val[1].i64[1] = (v11 - 1) & 0xF;
  v25.val[2].i64[0] = (v11 + 14) & 0xF;
  v25.val[2].i64[1] = ((_BYTE)v11 + 13) & 0xF;
  v25.val[3].i64[0] = ((_BYTE)v11 + 12) & 0xF;
  v25.val[3].i64[1] = ((_BYTE)v11 + 11) & 0xF;
  unsigned int v16 = a2 + a1 + a3;
  v17.i64[0] = 0x505050505050505;
  v17.i64[1] = 0x505050505050505;
  v18.i64[0] = 0x1818181818181818;
  v18.i64[1] = 0x1818181818181818;
  uint64_t v19 = v16 & ((v15 + 365) - 1381);
  v24.val[0].i64[0] = v19;
  v24.val[0].i64[1] = ((_BYTE)v11 + 9) & 0xF;
  v20.i64[0] = vqtbl4q_s8(v24, (int8x16_t)xmmword_101D1C120).u64[0];
  v20.i64[1] = vqtbl4q_s8(v25, (int8x16_t)xmmword_101D1C120).u64[0];
  int8x16_t v21 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v13 - 15 + v16), *(int8x16_t *)(v9 + v19 - 15)), veorq_s8(*(int8x16_t *)(v8 + v19 - 15), *(int8x16_t *)(v10 + v19 - 15))));
  int8x16_t v22 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v21, v21, 8uLL), v18), vmulq_s8(v20, v17)));
  *(int8x16_t *)(v13 - 15 + v16) = vextq_s8(v22, v22, 8uLL);
  return (*(uint64_t (**)(void))(v14 + 8 * ((488 * ((v12 & 0xFFFFFFF0) == 16)) ^ v15)))();
}

uint64_t sub_10035608C(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (a1 ^ (15 * ((v1 - 143196291) < 0x7FFFFFFF)))))();
}

uint64_t sub_1003560E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = 628203409 * ((((v18 - 152) | 0x81E41E6B) - ((v18 - 152) & 0x81E41E6B)) ^ 0x36C1258);
  *(void *)(v18 - 144) = a11;
  *(void *)(v18 - 152) = a13;
  *(void *)(v18 - 128) = a14;
  *(_DWORD *)(v18 - 136) = v15 - v19 + 1379;
  *(_DWORD *)(v18 - 132) = v17
                         - v19
                         + ((((v15 + 1476291041) ^ 0x57FE6DAC) - 1215241593) ^ (v15 + 1476291041) & 0xFF95FDDE);
  *(void *)(v18 - 112) = v14;
  *(void *)(v18 - 104) = a12;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v15 ^ 0x941)))(v18 - 152);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((1746 * (*(_DWORD *)(v18 - 120) == 605940026)) ^ v15)))(v20);
}

void sub_1003561DC()
{
}

uint64_t sub_100356258()
{
  unsigned int v3 = v0 + *(_DWORD *)(v2 - 0x38C18B7A1BA3131CLL) + 1721065590;
  unsigned int v4 = *(_DWORD *)(v2 - 0x38C18B7A1BA31320) - 2122880533;
  BOOL v5 = v4 < 0xAF9E42B0;
  BOOL v6 = v3 < v4;
  if (v3 < 0xAF9E42B0 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((566 * v6) ^ v0)))();
}

uint64_t sub_1003562E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 != a7) * (v8 - 1920)) ^ v8)))();
}

uint64_t sub_100356318()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 | (8
                                     * (((v1 << (((v0 - 68) | 0x45) - 84)) & 0xFBFDD5FA ^ 0x5A9D54FA)
                                      + ((v0 + 1387351086) ^ v1)
                                      - 19398673 == 2094459628)))))();
}

uint64_t sub_100356384(uint64_t a1, uint64_t a2)
{
  if (**(unsigned char **)(a2 + 8)) {
    char v2 = 53;
  }
  else {
    char v2 = 52;
  }
  *(unsigned char *)(a1 + 88) = v2;
  return 0;
}

uint64_t sub_1003563A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(void *)(&a19 + a2 + a1) = 0x1818181818181818;
  return (*(uint64_t (**)(void))(v21 + 8 * ((((v19 & 0x38) == 8) * (v20 - 411)) ^ (v20 - 290))))();
}

uint64_t sub_1003563F0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a2 ^ (14 * ((unint64_t)(v4 - v2 + 4) < 0x20)))))();
}

uint64_t sub_100356428()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v1 == (v2 ^ 0x7AF)) * (v2 - 1877)) ^ v2)))();
}

uint64_t sub_100356458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  return sub_10037AA3C(3658457652, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_10035648C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,int a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,int a59,int a60)
{
  unsigned int v61 = a22 - (a25 & 0x8573CB48) + 131455152 + (a60 ^ 0xD6D);
  return (*(uint64_t (**)(void))(v60
                              + 8
                              * ((1004
                                * (((v61 << (105 * (a60 ^ 0xE7) - 58)) & 0xBBFF8FEE ^ 0x81738B48)
                                 + (v61 ^ 0x9F462253)
                                 + 1878883326 == 1308443637)) ^ a60)))();
}

uint64_t sub_100356560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * (((((a8 - 1323) | 0x240) - 501) * (v8 > 0xF)) ^ a8)))(a1, a2, a3, 0);
}

uint64_t sub_100356598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((3535 * (a1 + 1 == v6 + 16)) ^ a5)))();
}

uint64_t sub_10035667C@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W5>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * ((((a4 - 1424257457) < 0x38)
                                                       * (106 * (v5 ^ (a2 - 8)) + 1659)) ^ (a3 + v5 + 420))))(a1, -1424257457);
}

uint64_t sub_1003566C8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  *(_DWORD *)(v29 - 104) = v28
                         - 1178560073 * ((v29 + 32226232 - 2 * ((v29 - 120) & 0x1EBBC30)) ^ 0xBB7FC452)
                         - 1882357907;
  *(void *)(v29 - 112) = &STACK[0x2E910FB81C0D985B];
  *(_DWORD *)(v29 - 120) = -1178560073 * ((v29 + 32226232 - 2 * ((v29 - 120) & 0x1EBBC30)) ^ 0xBB7FC452)
                         - 1152583235 * a1
                         - ((379188090 * a1 + 4950930) & 0x1A5C2C1A)
                         + 492035030;
  (*(void (**)(uint64_t))(v26 + 8 * (v28 + 1812)))(v29 - 120);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((914
                                              * (*v27
                                               + 1494435459
                                               + ((2 * (a26 & ((v28 - 61) ^ 0x141))) ^ 0x78)
                                               + (a26 & ((v28 - 61) ^ 0x141) ^ 0x2EDEBBC3u) < 0xFFFFFFC0)) ^ v28)))(2863979242);
}

uint64_t sub_100356860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, int8x16_t *a3@<X6>, int a4@<W8>)
{
  *a3 = vaddq_s8(vsubq_s8(*(int8x16_t *)(a2 + (v4 + v5)), vandq_s8(vaddq_s8(*(int8x16_t *)(a2 + (v4 + v5)), *(int8x16_t *)(a2 + (v4 + v5))), v7)), v8);
  return (*(uint64_t (**)(uint64_t, void))(v6 + 8 * (a4 + 2009)))(a1, (v4 + 64));
}

uint64_t sub_1003568AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,_DWORD *a41)
{
  int v46 = v41 ^ (v42 + 565);
  uint64_t v47 = (*(uint64_t (**)(uint64_t, void))(v43 + 8 * (v41 ^ 0xEB4)))(a10, 0);
  unsigned int v48 = LODWORD(STACK[0x578]) + 1255822489 - ((2 * LODWORD(STACK[0x578])) & 0x95B4A932);
  LODWORD(STACK[0x568]) = LODWORD(STACK[0x570]) + 1255822489 - ((v46 ^ 0x62C05AF5) & (2 * LODWORD(STACK[0x570])));
  LODWORD(STACK[0x564]) = v48;
  int v49 = (*(uint64_t (**)(uint64_t))(v43 + 8 * (v41 ^ 0xEEB)))(v47);
  LODWORD(STACK[0x56C]) = v49 + 1255822489 - ((2 * v49) & 0x95B4A932);
  int v50 = (*(uint64_t (**)(void))(v43 + 8 * (v41 ^ 0xEEB)))();
  LODWORD(STACK[0x560]) = v50 + 1255822489 - ((2 * v50) & 0x95B4A932);
  unsigned int v51 = (((*v44 >> 30) ^ 1) + 1255822489 + ((*v44 >> 29) | 0xFFFFFFFD) + 1) ^ *v44;
  unsigned int v52 = (*a41 ^ 0x4ADA5499) + ((1664525 * v51 + 1255822489 - ((3329050 * v51) & 0x95B4A932)) ^ v44[1]);
  v44[1] = v52 + 1255822489 - ((2 * v52) & 0x95B4A932);
  unint64_t v53 = 1374699841 * ((0x8D0CAE00BE507B8ELL - (a40 | 0x8D0CAE00BE507B8ELL) + a39) ^ 0x640140C937A88B27);
  *(_DWORD *)(v45 - 112) = (v46 + 374452917) ^ v53;
  STACK[0x5C0] = v53 + 2399398064u;
  STACK[0x5C8] = v53 ^ 0x8F03E8B2;
  *(_DWORD *)(v45 - 124) = (v46 + 374452806) ^ v53;
  *(_DWORD *)(v45 - 120) = (v46 + 374452809) ^ v53;
  *(_DWORD *)(v45 - 152) = v53 + v46 - 1358355483;
  *(_DWORD *)(v45 - 128) = -1374699841 * ((-1102021746 - (a40 | 0xBE507B8E) + a39) ^ 0x37A88B27);
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(a37 + 8 * (v46 + 143332672)))(v45 - 152);
  return (*(uint64_t (**)(uint64_t))(a37 + 8 * *(int *)(v45 - 116)))(v54);
}

uint64_t sub_100356B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned int a19, uint64_t a20,unsigned int a21,uint64_t a22)
{
  unsigned int v26 = 1178560073 * ((&a18 & 0xF7FDE8F6 | ~(&a18 | 0xF7FDE8F6)) ^ 0xB2966F6B);
  a19 = v24 - ((2 * v24) & 0x279D5C7E) - 1815171521 + v26;
  a20 = a13;
  a21 = v26 ^ 0x43D;
  (*(void (**)(int *))(v25 + 17496))(&a18);
  unsigned int v27 = 1178560073 * ((2 * (&a18 & 0x2A659790) - &a18 + 1436182632) ^ 0xEF0E100A);
  a22 = v22;
  a20 = a13;
  a21 = v27 ^ ((v23 ^ 0xEBDBBE7F) + 2122252288 + ((2 * v23) & 0xD7B77CFE));
  a19 = v27 + 173;
  (*(void (**)(int *))(v25 + 17832))(&a18);
  unsigned int v28 = 1178560073
      * (((&a18 | 0xF00BCE5A) - &a18 + (&a18 & 0xFF431A0)) ^ 0x4A9FB638);
  a22 = a11;
  a20 = a13;
  a19 = v28 + 173;
  a21 = v28 ^ ((a10 ^ 0x7E7EFE7F) - 337920385 + ((2 * a10) & 0xFCFDFCFE) + 385);
  uint64_t v29 = (*(uint64_t (**)(int *))(v25 + 17832))(&a18);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((1943 * (a18 == 605940026)) ^ 0xA5u)))(v29);
}

uint64_t sub_100356CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                       + 8
                                                                       * ((((v8 - 666) ^ (v8 - 362)) * (v6 == v7)) ^ v8)))(a1, a2, a3, a6);
}

uint64_t sub_100356D10(_DWORD *a1)
{
  unsigned int v5 = *(_DWORD *)(v3 + 352);
  unsigned int v6 = (*a1 ^ v1) - 875980378;
  if (v5 > 0xBB0CFFAB != v6 < 0x44F30054) {
    BOOL v7 = v5 > 0xBB0CFFAB;
  }
  else {
    BOOL v7 = v5 + 1156776020 > v6;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v7 * ((v4 ^ 0x575) - 794)) ^ v4)))();
}

uint64_t sub_100356D84(uint64_t a1, int a2, int a3, int a4, int a5, int a6, unint64_t a7)
{
  int v16 = v12 + 1;
  uint64_t v17 = 4 * (v16 + a4);
  unint64_t v18 = (*(_DWORD *)(*v11 + v17) ^ v10) + HIDWORD(a7);
  *(_DWORD *)(*v11 + v17) = v13 + (a2 | a3) + v18 - (v15 & (2 * v18)) - 1117;
  BOOL v19 = v16 + a5 < v9;
  if (v9 < v8 != v16 + a5 < v8) {
    BOOL v19 = v9 < v8;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((v19 * a6) ^ (v7 + 726))))();
}

uint64_t sub_100356D90(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v3 + v2 - 1804563901 < (((a2 + 84114198) | 0x8800411C) ^ 0x8D03C137))
                                * (((a2 + 131) | 0x29) - 1431)) ^ a2)))();
}

uint64_t sub_100356E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  *(void *)(v26 - 104) = v24;
  *(void *)(v26 - 144) = v25;
  *(void *)(v26 - 136) = a15;
  *(_DWORD *)(v26 - 112) = (v23 ^ 0x52D) + 1224239923 * ((v26 - 144) ^ 0xF2B3FDD7) + 417;
  *(void *)(v26 - 128) = v24;
  *(void *)(v26 - 120) = v22;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v23 ^ 0xD48)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (((v20 + a20 + 2 < ((419 * (v23 ^ 0x590) - 195) | 0x540u) + 2147481660)
                                              * (419 * (v23 ^ 0x590) - 739)) ^ (419 * (v23 ^ 0x590) - 272))))(v27);
}

uint64_t sub_100356EBC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1676
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v0) == ((v0 + ((v3 - 302) | 0x108) - 1468) ^ (7 * (v3 ^ 0x356))))) ^ v3)))();
}

void sub_100356F18()
{
}

void sub_100356F38()
{
}

uint64_t sub_100356FA8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((545
                                * ((((*(unsigned __int8 *)(v2 + 1) - 134) << (v3 ^ 0xE6)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_100356FEC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 - 1438) ^ 0x3CF ^ ((v1 - 1111) | 0x140)) * (a1 == v2)) ^ v1)))();
}

uint64_t sub_10035702C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v18.i64[0] = 0x3030303030303030;
  v18.i64[1] = 0x3030303030303030;
  v19.i64[0] = 0x1818181818181818;
  v19.i64[1] = 0x1818181818181818;
  *(int8x16_t *)(v13 + a6 + ((v11 - 895) ^ v10)) = vaddq_s8(vsubq_s8(*v17, vandq_s8(vaddq_s8(*v17, *v17), v18)), v19);
  int v20 = *(uint64_t (**)(uint64_t, int8x16_t *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8 * ((324 * (((v14 + v15 + v12 - 1318) & 0x1FFFFFFF0) == 16)) ^ v11));
  return v20(324, v17 + 1, v20, a1, a2, a3, a4, a5, a7, a8, a9, a10);
}

uint64_t sub_1003570A4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  unsigned int v19 = (a1 + 561646240) & 0xDE85F7E6;
  *(void *)(v18 - 104) = a17;
  *(void *)(v18 - 128) = a17;
  *(void *)(v18 - 120) = a16;
  *(_DWORD *)(v18 - 112) = a1
                         + 1224239923 * ((((2 * (v18 - 144)) | 0xB88E5138) - (v18 - 144) - 1548167324) ^ 0xAEF4D54B)
                         + 417;
  *(void *)(v18 - 144) = a15;
  *(void *)(v18 - 136) = a6;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (a1 ^ 0x865)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (int)(((a14 - 1206753084 < ((v19 - 195) | 0x540) + 2147481660)
                                                   * (v19 - 739)) ^ (v19 - 272))))(v20);
}

uint64_t sub_100357184()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1918 * ((v0 ^ 0x4C1) + 101289058 != v1)) ^ v0)))();
}

uint64_t sub_1003571D0()
{
  uint64_t v14 = v8;
  uint64_t v15 = 0x79008787D20F56D3;
  unsigned int v16 = v5
      - 108757529 * ((&v11 & 0x46C0678E | ~(&v11 | 0x46C0678E)) ^ 0x59A3FA5A)
      + (v4 & 0xC35EDE3B)
      + 2152;
  uint64_t v13 = v1;
  (*(void (**)(unsigned int *))(v3 + 8 * (int)(v4 & 0xC35EDE3B ^ (v0 + 70))))(&v11);
  unsigned int v6 = (v5 + (v4 & 0xC35EDE3B) + 688) | 4;
  uint64_t v13 = v8;
  unsigned int v11 = (v5 + (v4 & 0xC35EDE3B) + 2180) ^ (1755732067
                                         * (((&v11 ^ 0x49B1FB56) & 0xF0AC0744 | ~(&v11 ^ 0x49B1FB56 | 0xF0AC0744)) ^ 0x9824BE36));
  (*(void (**)(unsigned int *))(v3 + 8 * (int)(v4 & 0xC35EDE3B ^ 0xC35E94FA)))(&v11);
  uint64_t v13 = v8;
  unsigned int v12 = v5
      + (v4 & 0xC35EDE3B)
      + 535753261 * (((&v11 | 0xF1F5A552) - (&v11 & 0xF1F5A552)) ^ 0xFB01AB7D)
      + 1937;
  (*(void (**)(unsigned int *))(v3 + 8 * (int)(v4 & 0xC35EDE3B ^ 0xC35E94F0)))(&v11);
  uint64_t v13 = v10;
  unsigned int v12 = v6 + 535753261 * (&v11 ^ 0xAF40E2F) + 1245;
  (*(void (**)(unsigned int *))(v3 + 8 * (int)(v6 + 1557)))(&v11);
  return v9 ^ v2;
}

uint64_t sub_1003573B4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 >> (v3 + 31)) & 1) == 0) * v4) ^ v1)))();
}

uint64_t sub_1003573DC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int8x16_t *a27)
{
  unsigned int v31 = a1 ^ 0x573;
  uint64_t v32 = (const float *)(v29 + 908);
  int8x16_t v33 = (int8x16_t)vld1q_dup_f32(v32);
  uint64_t v34 = (346 * (v31 ^ 0xAC)) ^ 0x4EBLL;
  v35.i64[0] = 0x8000000080000000;
  v35.i64[1] = 0x8000000080000000;
  v36.i64[0] = 0x200000002;
  v36.i64[1] = 0x200000002;
  v30.i32[0] = a27->i32[1];
  v30.i32[1] = *(_DWORD *)(v29 + 4 * v34);
  v30.i32[2] = a27->i32[3];
  int8x16_t v37 = vextq_s8(v33, v30, 0xCuLL);
  int8x16_t v38 = v30;
  v38.i32[3] = a27[1].i32[0];
  int8x16_t v39 = (int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v38, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v37, v35)), 1uLL);
  int32x4_t v40 = (int32x4_t)veorq_s8(v39, (int8x16_t)vdupq_n_s32(0x256D2A4Cu));
  int32x4_t v41 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)v40, (int8x16_t)vdupq_n_s32(0x4ADA549Bu)), vandq_s8(v39, v36));
  int8x16_t v42 = (int8x16_t)vaddq_s32(vsubq_s32(v40, vaddq_s32(v41, v41)), vdupq_n_s32(0x4ADA5499u));
  v40.i32[0] = *(_DWORD *)(v27 + 4 * ((a27->i32[1] & 1) == 0));
  v40.i32[1] = *(_DWORD *)(v27 + 4 * ((*(_DWORD *)(v29 + 4 * v34) & 1) == 0));
  v40.i32[2] = *(_DWORD *)(v27 + 4 * (~a27->i32[3] & 1));
  v40.i32[3] = *(_DWORD *)(v27 + 4 * (~v38.i32[3] & 1));
  *a27 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)((char *)a27 - 908), (int8x16_t)v40), (int8x16_t)vdupq_n_s32(0xD31EC019)), v42);
  return (*(uint64_t (**)(void))(v28 + 8 * v31))();
}

uint64_t sub_10035751C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * (v6 ^ (1995 * (v5 == 0)))))(a1, a2, a3, a4, a5);
}

uint64_t sub_100357554(uint64_t result)
{
  *(_DWORD *)(result + 4) = v1;
  return result;
}

uint64_t sub_10035755C()
{
  if (v0 == (((v1 + 1895833176) | 0xC40102) ^ 0x55D9C82D)) {
    int v3 = -605900060;
  }
  else {
    int v3 = v0;
  }
  return v3 ^ v2;
}

void sub_1003575D8(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x1F010F7499D3F7A2) = (((v3 + v2) * (v1 - 1694903118)) ^ 0xFF7F7F7C)
                                         + 1911025120
                                         + ((2 * (v3 + v2) * (v1 - 1694903118)) & 0xFEFEFEF8);
}

uint64_t sub_1003576B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *int v6 = a1;
  *int v5 = (v7 + a5 + 767 - 1421) ^ v11;
  int v9 = (a5 + 178) ^ 0x135;
  uint64_t v16 = v12;
  unsigned int v15 = a5
      + 178
      + 535753261 * ((2 * (v14 & 0x4F0B3D8) - v14 + 2064600101) ^ 0x71FB420A)
      + 1105;
  (*(void (**)(unsigned char *))(v8 + 8 * (a5 + 1595)))(v14);
  uint64_t v16 = v13;
  unsigned int v15 = v9
      + 535753261
      * ((((2 * (v14 ^ 0x671CEF6C)) | 0xF1532BEC) - (v14 ^ 0x671CEF6C) + 123103754) ^ 0x954174B5)
      + 1308;
  (*(void (**)(unsigned char *))(v8 + 8 * (v9 + 1620)))(v14);
  return 0;
}

void sub_1003577F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)(a3 + v4) = v3;
  sub_100373E14();
}

uint64_t sub_100357800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v21 = 1759421093
      * ((~((v20 - 128) ^ 0xEC288126 | 0x638D1C10) + (((v20 - 128) ^ 0xEC288126) & 0x638D1C10)) ^ 0xC327D29D);
  *(_DWORD *)(v20 - 112) = v16 - v21 + 200;
  *(_DWORD *)(v20 - 128) = v15 - v21 + (v16 ^ 0x56F4FA92);
  *(void *)(v20 - 120) = v19;
  (*(void (**)(uint64_t))(v14 + 8 * (v16 + 1153)))(v20 - 128);
  *(void *)(v20 - 104) = a13;
  *(void *)(v20 - 120) = a14;
  *(_DWORD *)(v20 - 112) = (v16 ^ 0x7C5)
                         + ((~((v20 - 128) | 0x7B656A90) + ((v20 - 128) & 0x7B656A90)) ^ 0x3E0EED0D) * v18
                         + 100;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v14 + 8 * ((v16 ^ 0x7C5) + 1304)))(v20 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((35
                                              * ((((v16 ^ 0xC5) + 14) ^ (*(_DWORD *)(v20 - 128) > (v16 ^ 0x7C5u) - 699 + v17)) & 1)) ^ v16 ^ 0x7C5)))(v22);
}

uint64_t sub_10035792C@<X0>(int a1@<W8>)
{
  uint64_t v7 = v2 - 1;
  *(unsigned char *)(v4 + v7) = ((v1 - 68) ^ v3) * (v1 - 51);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 != 0) * v5) ^ a1)))();
}

void sub_100357938()
{
}

void sub_100357ABC()
{
  *(_DWORD *)(v0 + 20) = -605900286;
}

uint64_t sub_100357AC8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(a7 + v7 + v9) = v13;
  return (*(uint64_t (**)(void))(v12 + 8 * (((v9 + v10 - 2049 == v11) * a1) ^ v8)))();
}

uint64_t sub_100357AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  return (*(uint64_t (**)(void))(v22 + 8 * ((1989 * (a20 == v20 + ((v21 - 486) | 0xDD) - 221)) ^ v21)))();
}

void sub_100357B30(int a1@<W8>)
{
  if (v1 + a1 >= ((v4 - 813941307) & 0x3083C6F3u) + 2147481870) {
    int v5 = -489760072 - v3;
  }
  else {
    int v5 = v3;
  }
  *uint64_t v2 = v5;
  JUMPOUT(0x100357B78);
}

uint64_t sub_100357B88(uint64_t a1, int a2, int a3)
{
  unsigned int v9 = a3 + v6 + a2 + 825;
  v10.i64[0] = 0x3030303030303030;
  v10.i64[1] = 0x3030303030303030;
  v11.i64[0] = 0x1818181818181818;
  v11.i64[1] = 0x1818181818181818;
  uint64_t v12 = v7 + v9;
  int8x16_t v13 = vrev64q_s8(*(int8x16_t *)(v12 - 15));
  int8x16_t v14 = vextq_s8(v13, v13, 8uLL);
  int8x16_t v15 = vrev64q_s8(*(int8x16_t *)(v12 - 31));
  int8x16_t v16 = vextq_s8(v15, v15, 8uLL);
  uint64_t v17 = v3 + v9;
  int8x16_t v18 = vrev64q_s8(vaddq_s8(vsubq_s8(v14, vandq_s8(vaddq_s8(v14, v14), v10)), v11));
  *(int8x16_t *)(v17 - 15) = vextq_s8(v18, v18, 8uLL);
  int8x16_t v19 = vrev64q_s8(vaddq_s8(vsubq_s8(v16, vandq_s8(vaddq_s8(v16, v16), v10)), v11));
  *(int8x16_t *)(v17 - 31) = vextq_s8(v19, v19, 8uLL);
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((v4 & 0xFFFFFFE0) == 32) * ((v5 - 537621162) & 0x200B6FBD ^ 0x2B1)) ^ (v5 - 494))))();
}

uint64_t sub_100357C44@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W6>, int a4@<W8>)
{
  *(unsigned char *)(a2 + v5) = *(unsigned char *)(v9 + (v4 + a1))
                      + (v7 ^ (2 * *(unsigned char *)(v9 + (v4 + a1))) | 0xCF)
                      + 25;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 == 63) * v8) ^ (a3 + a4 + 178))))();
}

uint64_t sub_100357C90(uint64_t a1, int a2)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 0;
  }
  int v4 = !v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((11 * v4) | 0x2B4u)))();
}

uint64_t sub_100357CD4@<X0>(char a1@<W2>, int a2@<W8>)
{
  uint64_t v8 = v3 - 1;
  *(unsigned char *)(v6 + v8) = ((v2 + 123) ^ v5) * (a1 + v2 + 1 + v4 + 123);
  return (*(uint64_t (**)(void))(v7 + 8 * ((31 * (v8 != 0)) ^ a2)))();
}

uint64_t sub_100357CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_DWORD *a26)
{
  *a26 = 1089336478;
  signed int v29 = ((v27 + 764) ^ 0xC4CAB189) + 1719390788;
  BOOL v30 = v29 < -1421441099;
  BOOL v31 = v29 > (int)(((v27 - 28) ^ 0x2B468656) + v26);
  if (v26 > 0x54B9784A != v30) {
    BOOL v32 = v30;
  }
  else {
    BOOL v32 = v31;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * ((28 * !v32) ^ (v27 - 28))))(a1, 3301618057, 1719390788, 2873526197);
}

uint64_t sub_100357DC8@<X0>(int a1@<W1>, int a2@<W8>)
{
  unsigned int v6 = ((v5 ^ 0x69A) + 605540807) & 0xDBE82DDF;
  int v7 = a2 + v3;
  int v8 = (v6 ^ 0xDD) + v3;
  *(_DWORD *)(*(void *)(v4 - 0x1F010F7499D3F79ELL) + 4 * (v7 + 1)) = a1;
  *(_DWORD *)(v4 - 0x1F010F7499D3F7A2) = v8;
  int v9 = (v6 ^ 0xA ^ (a2 - 49)) + v8;
  if (v9 < 0) {
    int v9 = -v9;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((int)((v9 ^ 0xF7E7FF7E) + 2038394334 + ((2 * v9) & 0xEFCFFEFC) + a2) >= 0)
                                     * ((v6 ^ 0x2E4) + 896)) ^ v6 ^ 0xA)))();
}

uint64_t sub_100357EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100389804(a1, a2, a3, a4, a5);
}

uint64_t sub_100357EBC@<X0>(uint64_t a1@<X3>, int a2@<W6>, unsigned int a3@<W8>)
{
  uint64_t v5 = a1 + a3;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((14 * (v6 - a3 + (unint64_t)(a2 + (v3 ^ 0xD9Fu) - 1515) - 105023316 > 7)) ^ v3)))();
}

uint64_t sub_100357F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v30 = (v25 - 566) | 0x482;
  *(void *)(v29 - 136) = a23;
  *(void *)(v29 - 128) = a24;
  *(_DWORD *)(v29 - 144) = (v30 - 715) ^ (1225351577
                                        * ((((2 * (v29 - 144)) | 0x628C293A) - (v29 - 144) - 826676381) ^ 0x12DCCC8B));
  *(void *)(v29 - 120) = a24;
  *(void *)(v29 - 112) = a22;
  (*(void (**)(uint64_t))(v27 + 8 * (v30 ^ 0xD44)))(v29 - 144);
  *(_DWORD *)(v29 - 144) = (v30 - 715) ^ (1225351577
                                        * ((((v29 - 144) | 0x56677DED) - ((v29 - 144) & 0x56677DED)) ^ 0x75FDA5FB));
  *(void *)(v29 - 120) = a24;
  *(void *)(v29 - 112) = a22;
  *(void *)(v29 - 136) = a23;
  *(void *)(v29 - 128) = a24;
  (*(void (**)(uint64_t))(v27 + 8 * (v30 + 836)))(v29 - 144);
  int v31 = 1374699841 * ((~((v29 - 144) | 0x16B4FC58) + ((v29 - 144) & 0x16B4FC58)) ^ 0x84BF1BAE);
  *(_DWORD *)(v29 - 128) = v26 - v31 + v28 + 1;
  *(_DWORD *)(v29 - 144) = (v30 - 1228) ^ v31;
  *(void *)(v29 - 136) = a25;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v30 + 845)))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (((*(_DWORD *)(v29 - 140) == ((v30 - 1388) | 0x99) - 1045335227)
                                              * (v30 ^ 0x59D)) ^ v30)))(v32);
}

uint64_t sub_1003580B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unsigned int v17 = v12 + 940844058;
  if (v17 <= 0x40) {
    unsigned int v17 = 64;
  }
  uint64_t v18 = (a6 - v13 - v14);
  int8x16_t v19 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8 * (v15 ^ 0x5E2 | (16 * (v18 + v17 < 0xF))));
  return v19(940844058, v19, 64, v18, 3188991647, a6, a7, 1211880052, a9, a10, a11, a12);
}

uint64_t sub_100358140@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unint64_t a31,uint64_t a32,unint64_t a33)
{
  uint64_t v38 = 4 * (v36 - 569625295);
  unsigned int v39 = *(_DWORD *)(v35 + 4 * (v36 - 569625296));
  unsigned int v40 = (a2 + ((v39 >> 30) ^ 1) + ((v39 >> 29) | 0xFFFFFFFD) + 1) ^ v39;
  int v41 = ((a2 + 1566083941 * v40 - ((-1162799414 * v40) & a1)) ^ *(_DWORD *)(v35 + v38)) - v36;
  *(_DWORD *)(v35 + v38) = v41 - ((2 * v41 + 1139250590) & a1) + 1825447784;
  *(_DWORD *)(v37 - 124) = (a3 - 2117363408) ^ a31;
  *(_DWORD *)(v37 - 120) = (a3 - 2117363408) & 0x795C8CBE ^ a31;
  STACK[0x5C8] = (v36 + 503147622) ^ a31;
  STACK[0x5C0] = a33;
  *(_DWORD *)(v37 - 112) = (a3 - 2117363493) ^ a31;
  *(_DWORD *)(v37 - 152) = a31 + a3 - 1358355483;
  *(_DWORD *)(v37 - 128) = -(int)a31;
  uint64_t v42 = (*(uint64_t (**)(uint64_t))(v34 + 8 * (a3 ^ (v33 + 1785))))(v37 - 152);
  return (*(uint64_t (**)(uint64_t))(v34 + 8 * *(int *)(v37 - 116)))(v42);
}

uint64_t sub_100358278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  int v38 = 628203409 * ((((v37 - 120) | 0x434F6F97) - ((v37 - 120) & 0x434F6F97)) ^ 0xC1C763A4);
  *(void *)(v37 - 120) = a11;
  *(_DWORD *)(v37 - 112) = v38 + v36 + 690;
  *(_DWORD *)(v37 - 108) = a14 - v38 - 1048829586;
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v36 ^ 0x8DB)))(v37 - 120);
  unsigned int v40 = a35 & 0x3F ^ (((v36 - 75599918) & 0xADDDB355) + 1453579512);
  *(&a26 + v40) = -104;
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * ((195 * (v40 > ((v36 + 133) | 0x406u) - 1136)) ^ v36)))(v39);
}

uint64_t sub_10035839C()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (v1 + 28 * (((v0 == 3 * (v1 ^ 0x195)) ^ (v1 + 1)) & 1))))(814);
}

uint64_t sub_1003583F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * (int)((((a4 - 775580907) & 0x2E3A6B6F ^ (a4 + 443313625) & 0xE59395F3 ^ 0x3E7)
                                                                              * (v4 == v5)) ^ a4)))(a1, a2, a3, 4180070958);
}

uint64_t sub_100358454@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  int v23 = (a1 - 1829799832) & 0x6D1083E6 ^ 0x633;
  unsigned int v24 = ((v23 - 1565) ^ 0xC29794A8) + a21;
  int v25 = (v24 < 0x9E10E87E) ^ ((v22 + 860577784) < 0x9E10E87E);
  BOOL v26 = v24 < v22 + 860577784;
  if (v25) {
    BOOL v26 = (v22 + 860577784) < 0x9E10E87E;
  }
  return (*(uint64_t (**)(void))(v21 + 8 * ((433 * v26) ^ v23)))();
}

void sub_100358484()
{
}

uint64_t sub_100358494@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v4 + v5)) = *(unsigned char *)(v3 + (v4 + v5));
  return (*(uint64_t (**)(void))(v1 + 8 * (((2 * (v5 - 1 == v2)) | (4 * (v5 - 1 == v2))) ^ v6)))(0);
}

void sub_1003584C8()
{
  if (v0 == 1377131517) {
    int v1 = 605940026;
  }
  else {
    int v1 = -605900062;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_10035852C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 1424) = (a7 ^ 0x7FE ^ (v7 + 299)) + *(_DWORD *)(a2 + 4) - 1787050549;
  *(void *)(*(void *)(a1 + 96) + 520) = *(void *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_100358578@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a3 ^ 0x117u) + a2 - 1529644911) = *(unsigned char *)(v4 + (a3 ^ 0x117u) + a2 - 1529644911);
  return (*(uint64_t (**)(void))(v5 + 8 * ((124 * (a2 - 1 != a4)) ^ a3 ^ 0x7C)))();
}

void sub_1003585C0()
{
  *int v0 = -146208675;
}

void sub_1003585CC()
{
}

uint64_t sub_10035863C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 != 0) * (((2 * v0) ^ 0x55A) - 1846)) | v0)))();
}

uint64_t sub_100358664()
{
  return sub_10035866C();
}

uint64_t sub_10035866C(int8x16_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v49 = *(void *)(v45 + 8 * v37);
  uint64_t v50 = *(unsigned int *)(v48 - 180);
  uint64_t v51 = *(unsigned int *)(v48 - 176);
  uint64_t v52 = *(unsigned int *)(v48 - 168);
  HIDWORD(a22) = *(unsigned __int8 *)(v48 - 156) ^ 0xFFFFFFCB;
  int v53 = *(unsigned char *)(v48 - 156) ^ 0xCB;
  if (v53 == 2)
  {
    HIDWORD(a23) = *(_DWORD *)(v48 - 180);
    LODWORD(a24) = *(_DWORD *)(v48 - 176);
    LODWORD(a25) = *(_DWORD *)(v48 - 172);
    LODWORD(a26) = *(_DWORD *)(v48 - 168);
    int8x16x4_t v80 = vld4q_s8(v39);
    HIDWORD(a20) = *(_DWORD *)(v48 - 164);
    uint8x16_t v68 = (uint8x16_t)veorq_s8(v80.val[1], a1);
    _Q22 = vmovl_u8(*(uint8x8_t *)v68.i8);
    _Q21 = vmovl_high_u8(v68);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    unint64_t v73 = (_DWORD *)(v42 + 4 * (v41 + 484369551));
    int v74 = *(v73 - 8) ^ *(v73 - 3);
    uint64_t v75 = *(v73 - 16);
    int v76 = v75 ^ *(v73 - 14) ^ (v74 + v43 - (a9 & (2 * v74)));
    HIDWORD(v77) = v76 ^ v43;
    LODWORD(v77) = v76;
    *unint64_t v73 = (v77 >> 31) + v43 - (a9 & (2 * (v77 >> 31)));
    unint64_t v78 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8 * ((7 * (v44 != 484369488)) ^ v38));
    return v78(v78, v75, a4, v50, v51, v52, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             v49,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37);
  }
  else
  {
    if (v53 != 1) {
      JUMPOUT(0x100358AE0);
    }
    HIDWORD(a23) = *(_DWORD *)(v48 - 180);
    LODWORD(a24) = *(_DWORD *)(v48 - 176);
    LODWORD(a25) = *(_DWORD *)(v48 - 172);
    LODWORD(a26) = *(_DWORD *)(v48 - 168);
    int8x16x4_t v79 = vld4q_s8(v39);
    uint64_t v54 = (a4 + a8 + 162);
    uint8x16_t v55 = (uint8x16_t)veorq_s8(v79.val[2], a1);
    _Q26 = vmovl_high_u8(v55);
    _Q25 = vmovl_u8(*(uint8x8_t *)v55.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    uint64_t v62 = v54 ^ 0x9C;
    int v63 = (HIDWORD(a23) ^ (v46 + v62 - 623))
        + ((a25 ^ v46) & (v51 ^ v46) | (v52 ^ v46) & (v51 ^ 0xB99F549A))
        - 1155739989
        + *((_DWORD *)*(&off_1022AC750 + (int)(v54 ^ 0x258)) + v40 + v41)
        + (*(_DWORD *)(v42 + 4
                           * (*((unsigned char *)*(&off_1022AC750 + (int)v54 - 570) + v40 + v41 - 8) - 61)) ^ v43);
    uint64_t v64 = (uint64_t)*(&off_1022AC750 + (int)(v54 ^ 0x2EC));
    unsigned int v65 = (v63 + v46 - (v47 & (2 * v63))) ^ v46;
    int v66 = ((v65 << (*(unsigned char *)(v64 + v40 + v41) - 19)) | (v65 >> (19 - *(unsigned char *)(v64 + v40 + v41)))) + (v51 ^ v46);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8 * (int)((498 * (v40 + 1 == v44)) ^ v54)))(v64, v62, v54, -(*(unsigned char *)(v64 + v40 + v41) - 19), v66 + v46 - (v47 & (2 * v66)), v52, &off_1022AC750, v51, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             v49,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37);
  }
}

void sub_100358A78(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  *(_DWORD *)(v23 - 164) = (v20 ^ v21)
                         + (a20 ^ v21)
                         - (v22 & (2 * ((v20 ^ v21) + (a20 ^ v21))))
                         + ((a3 + 1610881958) | 0x11C00007)
                         - 727938482;
  JUMPOUT(0x100358ADCLL);
}

uint64_t sub_100358B64(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1863
                                * (((v5 + v3 - 400) & (2 * (*(unsigned __int8 *)(a2 + 1) - 146)))
                                 + ((*(unsigned __int8 *)(a2 + 1) - 146) ^ v4) == v4)) ^ v3)))();
}

uint64_t sub_100358BA4(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a3 - 464) | 0x200) ^ ((a3 - 349) | 0x35) ^ 0x187) * (v3 != a1)) ^ a3)))();
}

uint64_t sub_100358C38@<X0>(int a1@<W5>, int a2@<W8>)
{
  if ((v2 - 1210380900) <= 0x12 && ((1 << (v2 - 100)) & 0x40425) != 0)
  {
    uint64_t v8 = a2 & 0xFFFFFFFFFFFFFFFLL;
    if (v8)
    {
      if (v8 == 3)
      {
        int v9 = (*(uint64_t (**)())(v3 + 48 * a2 + 8))();
        __asm { BRAA            X8, X17 }
      }
      __asm { BRAA            X2, X17 }
    }
    __asm { BRAA            X11, X17 }
  }
  return a1 ^ 0xDBE2B2E4;
}

uint64_t sub_100358F3C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((v2 - 229) | (16 * ((((v2 - 683) ^ (((a2 - (v3 & 3)) & 0xFFFFFFFC) > a2 + 3)) & 1) == 0)))))();
}

uint64_t sub_100358F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  return (*(uint64_t (**)(void))(v35 + 8 * ((55 * (v33 < (a33 & 0x43292676u) + 1072771344)) ^ (v34 + 143330514))))();
}

uint64_t sub_100358FE8@<X0>(uint64_t a1@<X8>)
{
  unsigned int v5 = v2 - ((v4 + 749500532) & 0xC22E45A4) + ((v3 - 423330227) & 0x193B8523) - 143828502;
  unsigned int v6 = 108757529 * ((((&v8 | 0xF1EE4D96) ^ 0xFFFFFFFE) - (~&v8 | 0xE11B269)) ^ 0xEE8DD042);
  int v8 = v6 + v3 + 923;
  uint64_t v9 = v1;
  int v10 = v5 ^ v6;
  return (*(uint64_t (**)(int *))(a1 + 8 * (v3 + 1877)))(&v8);
}

uint64_t sub_1003590BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                         + 8
                                                                                         * (((((v9 + 302) | 0x149) ^ 0x15B)
                                                                                           * (a8 > 0)) ^ v9)))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_100359118@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, void *a6@<X7>, int a7@<W8>)
{
  unint64_t v18 = a1
      - 0x6F059C107AC82C34
      + (v11 ^ 0x40EDF49Eu)
      + v12 * (unint64_t)((v10 + v13) & v14 ^ (v11 - 46) ^ *(_DWORD *)(*a6 + 4 * a3))
      + 546;
  *(_DWORD *)(v7 + 4 * v9) = v18 + v11 - ((2 * v18) & 0x81DBE93C);
  int v19 = a3 + 1 + a4;
  BOOL v21 = v19 > a7 || v19 < a5;
  return (*(uint64_t (**)(unint64_t))(v8 + 8 * (v10 ^ (v21 * a2))))((v15 ^ HIDWORD(v18))
                                                                                     + (v16 & (v18 >> 31)) + v17);
}

uint64_t sub_100359124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,unsigned int a55,uint64_t a56,int a57,int a58,int a59,int a60,int a61,int a62)
{
  *(_DWORD *)(v62 - 136) = a59 ^ 0x229224C6;
  *(_DWORD *)(v62 - 160) = a61 ^ 0x3E7F8A94;
  *(_DWORD *)(v62 - 144) = a62 ^ 0x143E0F44;
  *(_DWORD *)(v62 - 152) = a60 ^ 0x8EEA3CAB;
  return sub_100382514(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_100359178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, uint64_t, uint64_t))(v54 + 8 * ((a17 + ((2 * (a53 & 0x1F)) ^ 0x38) + (a53 & 0x3F ^ 0x67E6CDE3u) >= a15) ^ (v53 + 833))))(4198314077, a30, 2317026272, 2653025880, &a44, &a38, 1567855103, 2653026728);
}

uint64_t sub_100359234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v6 = LOBYTE(STACK[0x2C4]) ^ 0xCB;
  if (v6 == 1)
  {
    unsigned int v13 = STACK[0x2A8];
    unsigned int v14 = STACK[0x2A4];
    int v15 = (LODWORD(STACK[0x2A8]) >> 5) ^ 0x4D;
    LOBYTE(STACK[0x29C]) = ((8 * LOBYTE(STACK[0x2A8])) ^ 0xE0) - ((v5 ^ 0x20) & (16 * LOBYTE(STACK[0x2A8]))) + 24;
    LOBYTE(STACK[0x29D]) = v15 - ((2 * v15) & 0x30) + 24;
    LOBYTE(STACK[0x29E]) = ((v13 >> 13) ^ 0x8D) - ((2 * ((v13 >> 13) ^ 0x8D)) & 0x30) + 24;
    char v7 = v5 ^ 0xFE;
    LOBYTE(STACK[0x29F]) = ((v13 >> 21) ^ 0xB4) - ((2 * ((v13 >> 21) ^ 0xB4)) & 0x30) + 24;
    HIDWORD(v16) = v14 ^ 0x11;
    LODWORD(v16) = v13;
    LOBYTE(STACK[0x2A0]) = (v16 >> 29) - ((2 * (v16 >> 29)) & 0x30) + 24;
    LOBYTE(STACK[0x2A1]) = ((v14 >> 5) ^ 0xC9) - ((2 * ((v14 >> 5) ^ 0xC9)) & 0x30) + 24;
    LOBYTE(STACK[0x2A2]) = (v14 >> 13) - ((v14 >> 12) & 0x30) + 24;
    v14 >>= 21;
    char v11 = v14 ^ 0xE3;
    char v12 = 2 * v14;
    goto LABEL_5;
  }
  if (v6 == 2)
  {
    char v7 = v5 - 34;
    unsigned int v8 = STACK[0x2A4];
    unsigned int v9 = STACK[0x2A8];
    LOBYTE(STACK[0x29C]) = ((LODWORD(STACK[0x2A4]) >> 21) ^ 0xE3)
                         - (((v5 - 34) ^ 0xDE) & (2 * (LODWORD(STACK[0x2A4]) >> 21)))
                         + 24;
    LOBYTE(STACK[0x29D]) = (v8 >> 13) - ((v8 >> 12) & 0x30) + 24;
    LOBYTE(STACK[0x29E]) = ((v8 >> 5) ^ 0xC9) - ((2 * ((v8 >> 5) ^ 0xC9)) & 0x30) + 24;
    HIDWORD(v10) = v8 ^ 0x11;
    LODWORD(v10) = v9;
    LOBYTE(STACK[0x29F]) = (v10 >> 29) - ((2 * (v10 >> 29)) & 0x30) + 24;
    LOBYTE(STACK[0x2A0]) = ((v9 >> 21) ^ 0xB4) + (~(2 * ((v9 >> 21) ^ 0xB4)) | 0xCF) + 25;
    LOBYTE(STACK[0x2A1]) = ((v9 >> 13) ^ 0x8D) + (~(2 * ((v9 >> 13) ^ 0x8D)) | 0xCF) + 25;
    LOBYTE(STACK[0x2A2]) = ((v9 >> 5) ^ 0x4D) - ((2 * ((v9 >> 5) ^ 0x4D)) & 0x30) + 24;
    char v11 = (8 * v9) ^ 0xE0;
    char v12 = 16 * v9;
LABEL_5:
    LOBYTE(STACK[0x2A3]) = v11 - (((v7 - 51) & 0x54 | 0x20) & v12) + 24;
  }
  return sub_100389804(a1, a2, a3, a4, a5);
}

uint64_t sub_100359450@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xED8));
  return v3(v1);
}

uint64_t sub_100359484(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(a7 + v8) = *(unsigned char *)(a5 + (v7 + v11))
                      - ((2 * *(unsigned char *)(a5 + (v7 + v11))) & 0x30)
                      + 24;
  return (*(uint64_t (**)(void))(v13 + 8 * (((v8 + 1 == ((v9 + v10) & v12) + 48) * a1) ^ v9)))();
}

uint64_t sub_1003594D4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((14 * (qword_102489BC0 != 0)) ^ 0x2A3u)))();
}

uint64_t sub_100359504(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((2 * (v6 != v8)) | (16 * (v6 != v8))) ^ (a4 + a6 + 253))))();
}

uint64_t sub_10035952C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, int a4@<W3>, unsigned int a5@<W4>, int a6@<W5>, unsigned int a7@<W6>, uint64_t a8@<X8>)
{
  unsigned int v13 = a7;
  unsigned int v14 = a7 + 1;
  LOBYTE(v13) = *(unsigned char *)(*(void *)(a2 + 8) + v13);
  *(unsigned char *)(a1 + (v8 + v11) + 4) = (v13 ^ v12) + (a3 & (2 * v13)) - 72;
  unsigned int v15 = *(_DWORD *)(a2 + 4) + a4;
  BOOL v16 = v15 < v9;
  BOOL v17 = v14 + v9 < v15;
  if (v14 > a5 != v16) {
    BOOL v17 = v16;
  }
  return (*(uint64_t (**)(void))(a8 + 8 * ((v17 * a6) ^ v10)))();
}

uint64_t sub_100359534(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((((((v5 + 1905874733) & 0x8E66AD5F) - 247) ^ 0x323) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_100359574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  *(_DWORD *)(v32 - 112) = v29
                         + ((2088843006 - ((v32 - 128) | 0x7C8136FE) + ((v32 - 128) | 0x837EC901)) ^ 0x39EAB163) * v31
                         - 557;
  *(void *)(v32 - 104) = v30;
  *(void *)(v32 - 120) = a28;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v29 ^ 0xE87)))(v32 - 128);
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * ((7
                                              * (((v29 + 1137459071) & 0xBC33BEFA) - 1535752799 + *(_DWORD *)(v32 - 128) >= (((v29 - 553) | 0x230) ^ 0xFB98935B))) | v29)))(v33);
}

uint64_t sub_100359644@<X0>(unsigned int a1@<W5>, int a2@<W8>)
{
  BOOL v7 = v2 < v3;
  unsigned int v8 = v5 + a2 + 1279;
  int v9 = v7 ^ (v8 < ((v6 - 188) | a1) + v5);
  BOOL v10 = v8 < v2;
  if (!v9) {
    BOOL v7 = v10;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * (((2 * !v7) | (32 * !v7)) ^ (v6 - 612))))();
}

uint64_t sub_10035964C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  BOOL v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * (int)(a8 ^ ((32 * (a20 < 2)) | ((a20 < 2) << 6))));
  return v21(a1, a2, a3, a4, v21, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_100359668(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a2 - 768) ^ 0x428) + ((a2 - 768) | 0x29) + 248) * (v2 == v3)) ^ a2)))();
}

uint64_t sub_1003596A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                         + 8
                                                                                         * ((54 * (v4 <= 0x27FA3C13)) ^ (v5 + 143331836))))(a1, a2, 4151636935, a4, 2511644978, 1255822489);
}

void sub_1003596FC(_DWORD *a1, int a2, int a3)
{
  *((unsigned char *)a1 + v5 + 4) = v9;
  int v10 = v8 + v4;
  *a1 = (((a3 ^ (v6 - 368)) + 469761652) | 0x1F45C8) + v10 - 975177185;
  int v11 = a1 + 1;
  *((unsigned char *)v11 + (a2 + v4)) = v7;
  *((unsigned char *)v11 + (v3 + v4 - 2)) = 82;
  *((unsigned char *)v11 + (v10 - 1524414650)) = 96;
  *((unsigned char *)v11 + (v10 - 1524414649)) = 35;
  JUMPOUT(0x10036B6D8);
}

uint64_t sub_10035977C(uint64_t a1, int a2)
{
  BOOL v5 = a2 + v3 + v2 - 1876666005 >= ((v2 - 811) ^ 0x4A4u);
  return (*(uint64_t (**)(void))(v4 + 8 * (((8 * v5) | (32 * v5)) ^ v2)))();
}

uint64_t sub_1003597D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,long long a38)
{
  uint64_t v42 = *(void *)(a18 + 24);
  *(void *)((char *)&a38 + 4) = 0x1818181818181818;
  *(void *)((char *)&a38 + 12) = 0x1818181818181818;
  int v43 = 235795823 * ((2 * ((v41 - 168) & 0x1ABDAF30) - (v41 - 168) + 1698844877) ^ 0xF1EF1994);
  *(void *)(v41 - 128) = &STACK[0x5D591B602CF26DAC];
  *(_DWORD *)(v41 - 132) = (v38 + 1880) ^ v43;
  *(void *)(v41 - 152) = &a36;
  *(void *)(v41 - 144) = v42;
  *(void *)(v41 - 168) = v41 - 184;
  *(_DWORD *)(v41 - 160) = v43 + 1285617507;
  uint64_t v44 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (v38 ^ 0x899)))(v41 - 168);
  return (*(uint64_t (**)(uint64_t))(v39
                                            + 8
                                            * (int)(((*(_DWORD *)(v41 - 136) == v40)
                                                   * ((v38 + 1756179682) & 0x9752D7FF ^ 0x6D)) ^ v38)))(v44);
}

uint64_t sub_1003598E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  return (*(uint64_t (**)(void))(v24
                              + 8 * ((1246 * ((v23 ^ 0x5B886B40) + a22 - *(_DWORD *)(v25 + 4) == -868468822)) ^ v22)))();
}

uint64_t sub_100359930@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,unsigned int a50,unsigned int a51,unsigned int a52,int a53,int a54,unsigned __int8 a55)
{
  return sub_10037CC5C(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a1,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_10035993C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1999 * (a2 + 1 != v4 + 24)) ^ v2)))();
}

uint64_t sub_1003599EC@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  *(unsigned char *)(v6 + ((v5 + a1 + 2000) ^ (v4 + 73)) + a2) = *(unsigned char *)(v3
                                                                                + ((v5 + a1 + 2000) ^ (v4 + 73))
                                                                                + a2);
  return (*(uint64_t (**)(void))(v7 + 8 * ((v5 + a1 + 2294) | (32 * (a2 - 1 != a3)))))();
}

uint64_t sub_100359A28@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((107 * (v3 != a1 + a2 + 969 - 2048)) ^ a2)))();
}

uint64_t sub_100359A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, unsigned int a19, uint64_t a20,int a21,int a22)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((457 * ((((49 * (a19 ^ 0x2C9) - 1586102818) ^ (a22 == 1210381050)) & 1) == 0)) ^ a19)))();
}

uint64_t sub_100359AD8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2336 * (a1 + 1 == v3 + 48)) ^ v1)))();
}

uint64_t sub_100359BAC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((290 * (((9 * (v0 ^ 0x253)) ^ (v2 - 349)) + v1 < 0x7FFFFFFF)) ^ v0)))();
}

uint64_t sub_100359BEC(uint64_t a1, int a2, int a3, int a4)
{
  int v8 = v6 + v7 + a2 + 499026337;
  int v9 = a4 - 1409;
  unsigned int v10 = a3 + v8 + 1409771299;
  unsigned int v11 = v4 - 457788745;
  BOOL v12 = v10 < ((a4 - 1099870001) & 0x418EA9BF ^ 0x2F80BAF7u);
  int v13 = (v11 < 0x2F80BB71) ^ v12;
  BOOL v14 = v10 > v11;
  if (v13) {
    BOOL v14 = v12;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((240 * v14) ^ v9)))();
}

uint64_t sub_100359C8C@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a1 + a2 + v4) = v3;
  BOOL v6 = a2 + 1 + v4 >= (unint64_t)(v2 - 1222) + 48;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v6 | (32 * v6)) ^ v2)))();
}

uint64_t sub_100359CC0()
{
  int v5 = 535753261 * ((1097295581 - ((v4 - 144) | 0x416766DD) + ((v4 - 144) | 0xBE989922)) ^ 0xB46C970D);
  *(void *)(v4 - 144) = v9;
  *(void *)(v4 - 128) = v3;
  *(_DWORD *)(v4 - 136) = (v0 + 232) ^ v5;
  *(_DWORD *)(v4 - 120) = v5 + v8 - 575480494 + 3 * (v0 ^ 0x4E8);
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1238)))(v4 - 144);
  *(_DWORD *)(v7 - 0x57DF31776D855C81) = v8;
  *(_DWORD *)(v1 + 64) = 605940026;
  return result;
}

uint64_t sub_100359DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  return (*(uint64_t (**)(void))(v23 + 8 * ((464 * (a21 == v21 + 1210380764)) ^ v22)))();
}

uint64_t sub_100359DF8()
{
  *(_DWORD *)(v3 - 112) = v1
                        + 1374699841 * ((((v3 - 128) | 0x24434647) + (~(v3 - 128) | 0xDBBCB9B8)) ^ 0x49B75E4F)
                        - 1172;
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 120) = v5;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 617)))(v3 - 128);
}

uint64_t sub_100359E90(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v44 = v41 ^ (a3 + 9);
  *(_DWORD *)uint64_t v43 = -891661159;
  (*(void (**)(uint64_t))(v42 + 8 * (v41 + 2257)))(a41);
  int v45 = (v44 - 364182880) & 0x1E400FDD;
  int8x16_t v46 = (int8x16_t)vld1q_dup_f32((const float *)v43);
  uint64_t v47 = (v45 + 1441880474) & 0x2A0EA5FC;
  v48.i64[0] = 0x8000000080000000;
  v48.i64[1] = 0x8000000080000000;
  v49.i64[0] = *(void *)(v43 + 4);
  v49.i32[2] = *(_DWORD *)(v43 + 4 * (v47 ^ 0x5DF));
  int8x16_t v50 = vextq_s8(v46, v49, 0xCuLL);
  int8x16_t v51 = v49;
  v51.i32[3] = *(_DWORD *)(v43 + 16);
  int32x4_t v52 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v51, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v50, v48)), 1uLL), (int8x16_t)vdupq_n_s32(0x256D2A4Cu));
  v53.i32[0] = *((_DWORD *)&STACK[0x538] + ((*(_DWORD *)(v43 + 4) & 1) == 0));
  v53.i32[1] = *((_DWORD *)&STACK[0x538] + (~*(_DWORD *)(v43 + 8) & 1));
  v53.i32[2] = *((_DWORD *)&STACK[0x538] + (~*(_DWORD *)(v43 + 4 * (v47 ^ 0x5DF)) & 1));
  v53.i32[3] = *((_DWORD *)&STACK[0x538] + (~v51.i32[3] & 1));
  *(int8x16_t *)uint64_t v43 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v43 + 1588), v53), (int8x16_t)vdupq_n_s32(0xD31EC019)), (int8x16_t)vaddq_s32(vsubq_s32(v52, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v52, v52), (int8x16_t)vdupq_n_s32(0x95B4A932))), vdupq_n_s32(0x4ADA5499u)));
  return (*(uint64_t (**)(void))(v42 + 8 * (v45 ^ 0x17u)))();
}

uint64_t sub_10035A054(uint64_t a1, uint64_t a2, int a3, unsigned int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, uint64_t a17, int a18, unsigned int a19)
{
  if (a19 < a4 != a16 + 619167049 < (a18 & 0x105167A7 ^ (a4 + 127))) {
    BOOL v20 = a16 + 619167049 < (a18 & 0x105167A7 ^ (a4 + 127));
  }
  else {
    BOOL v20 = a16 + 619167049 > a19;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((!v20 * (((a18 + 273768487) | 0xB1) - 163)) ^ (a6 + a3 + 1846))))();
}

uint64_t sub_10035A060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,uint64_t a36,uint64_t a37,_DWORD *a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  if (v49 <= 0x372EC978) {
    int v53 = *v51 + 1;
  }
  else {
    int v53 = 647934162;
  }
  *int8x16_t v51 = v53;
  int v54 = (((v48 >> 11) ^ 0x95B4A) - ((2 * ((v48 >> 11) ^ 0x95B4A)) & 0x34A932) + 1255822489) ^ v48;
  unsigned int v55 = (((v54 << 7) & 0x9D2C5680 ^ v54) << 15) & 0xEFC60000 ^ (v54 << 7) & 0x9D2C5680 ^ v54;
  unsigned int v56 = v55 ^ 0xA609BEA0 ^ (v55 >> 18);
  uint64_t v57 = &a48 + (a35 - 1750894168);
  unsigned int v58 = -1636250663 * ((*(_DWORD *)(*v52 + (*a38 & 0x71AAB13C)) ^ v57) & 0x7FFFFFFF);
  unint64_t v59 = -1636250663 * (HIWORD(v58) ^ v58);
  char v60 = byte_101D16948[(v59 >> 24) - 8];
  char v61 = byte_101D18D30[v59 >> 24] ^ byte_101D16420[(v59 >> 24) + 4];
  LOBYTE(v59) = v59 ^ (-71 * BYTE3(v59));
  *uint64_t v57 = v60 ^ v56 ^ 0xA0 ^ v61 ^ v59;
  return (*(uint64_t (**)(void))(v50
                              + 8
                              * ((2037
                                * (a35 - (((v60 ^ v56 ^ 0xA0 ^ v61) ^ v59) != 0) == 1750894167)) ^ 0x1F2)))();
}

uint64_t sub_10035A214@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v6)) = *(unsigned char *)(v1 + (v7 + v6)) ^ *(unsigned char *)(v4
                                                                                                 + ((v7 + v6) & 0xFLL)) ^ *(unsigned char *)(v3 + (((_BYTE)v7 + (_BYTE)v6) & 0xF)) ^ *(unsigned char *)(v2 + (((_BYTE)v7 + (_BYTE)v6) & 0xF)) ^ (97 * ((v7 + v6) & 0xF)) ^ 0x18;
  return (*(uint64_t (**)(void))(v9 + 8 * ((2041 * (v7 - 1 == ((v8 - 1878345814) & 0x6FF5469C) + v5)) ^ (v8 - 1737))))();
}

uint64_t sub_10035A290@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  uint64_t v11 = ((v6 + 1033269798) & 0xC26987BF) + 4294966873;
  v12.i64[0] = 0x3030303030303030;
  v12.i64[1] = 0x3030303030303030;
  v13.i64[0] = 0x1818181818181818;
  v13.i64[1] = 0x1818181818181818;
  *(int8x16_t *)(v8 + (v11 & (a5 + v5))) = vaddq_s8(vsubq_s8(*v10, vandq_s8(vaddq_s8(*v10, *v10), v12)), v13);
  BOOL v14 = *(uint64_t (**)(uint64_t, uint64_t, int8x16_t *, void, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((4081 * (((v7 + 1) & 0x1FFFFFFF0) == 16)) ^ v6));
  return v14(v11, 4081, v10 + 1, v14, a1, a2, a3, a4);
}

uint64_t sub_10035A31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v17 - 128) = a14;
  *(void *)(v17 - 112) = v15;
  *(_DWORD *)(v17 - 120) = v16 + 1178560073 * ((v17 + 2054243637 - 2 * ((v17 - 136) & 0x7A7145BD)) ^ 0xC0E53DDF) - 949;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v16 + 255)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (v16 ^ (4
                                                    * (*(_DWORD *)(v17 - 136) + ((v16 - 1121) ^ 0xA476491C) < 0xCE10D943)))))(v18);
}

uint64_t sub_10035A3C0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((*(_DWORD *)(v2 - 0x38C18B7A1BA31318) & 1) == ((v0 - 398) ^ 0x220))
                                * (((v0 - 875) | 0x200) ^ 0x56A)) ^ v0)))();
}

uint64_t sub_10035A410@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = a1;
  uint64_t v6 = v2;
  unsigned int v7 = v3 + 1374699841 * (&v5 ^ 0x6DF41809) + 55;
  return (*(uint64_t (**)(uint64_t *))(v1 + 8 * (v3 + 1844)))(&v5);
}

uint64_t sub_10035A450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v17 - 136) = v16 - 108757529 * ((v17 + 1319072145 - 2 * ((v17 - 136) & 0x4E9F7219)) ^ 0xAE031032) + 1286;
  *(void *)(v17 - 128) = a13;
  *(void *)(v17 - 120) = v14;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v16 ^ 0x814)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * ((((((v16 - 245) | 0x141) + 1629) ^ ((v16 - 253) | 0x149))
                                              * (v15 == 605712609)) ^ v16)))(v18);
}

uint64_t sub_10035A500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v35 = (_DWORD *)(a24 + 24 * v29);
  _DWORD *v35 = v33;
  v35[1] = v31;
  *(void *)(v30 + 24 * v29 + 16) = v34;
  v35[4] = HIDWORD(a27);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * ((1130 * (((v28 + 1371537514) | 0x20042015u) - 546875633 + *(_DWORD *)(a4 + 48 * (int)a2 + 32) < 0x80000003)) ^ v28)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10035A588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 128) = a24;
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a22;
  *(_DWORD *)(v28 - 144) = ((v27 ^ 0x1CC) - 761) ^ (1225351577
                                                  * ((((v28 - 144) | 0xEB6A4A73) - ((v28 - 144) & 0xEB6A4A73)) ^ 0xC8F09265));
  (*(void (**)(uint64_t))(v25 + 8 * ((v27 ^ 0x1CC) + 790)))(v28 - 144);
  *(_DWORD *)(v28 - 144) = ((v27 ^ 0x1CC) - 761) ^ (1225351577
                                                  * ((((2 * ((v28 - 144) ^ 0xD905522F)) | 0xC140BE6C)
                                                    - ((v28 - 144) ^ 0xD905522F)
                                                    + 526360778) ^ 0x1A3FD50F));
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 128) = a24;
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a22;
  (*(void (**)(uint64_t))(v25 + 8 * (v27 ^ 0xCDA)))(v28 - 144);
  *(_DWORD *)(v28 - 144) = ((v27 ^ 0x1CC) - 761) ^ (1225351577
                                                  * ((((v28 - 144) | 0x6AD1AA95) - ((v28 - 144) & 0x6AD1AA95)) ^ 0x494B7283));
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 128) = a24;
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a22;
  (*(void (**)(uint64_t))(v25 + 8 * ((v27 ^ 0x1CC) + 790)))(v28 - 144);
  int v29 = (v27 ^ 0x1CC) - 1274;
  int v30 = 1374699841 * ((-42916828 - ((v28 - 144) | 0xFD712424) + ((v28 - 144) | 0x28EDBDB)) ^ 0x6F7AC3D2);
  *(_DWORD *)(v28 - 128) = -1206753086 - v30 + v26 + 1;
  *(_DWORD *)(v28 - 144) = v29 ^ v30;
  *(void *)(v28 - 136) = a25;
  (*(void (**)(uint64_t))(v25 + 8 * (v27 ^ 0xCD3)))(v28 - 144);
  BOOL v31 = *(_DWORD *)(v28 - 140) == -1045335036;
  int v32 = 1374699841 * ((v28 - 144) ^ 0x6DF41809);
  *(_DWORD *)(v28 - 144) = v29 ^ v32;
  *(_DWORD *)(v28 - 128) = -1206753086 - v32 + v26;
  *(void *)(v28 - 136) = a25;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v27 ^ 0xCD3)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((1002 * (((11 * (v27 ^ 0xA)) ^ 0x1F ^ v31) & 1)) ^ v27 ^ 0x1CC)))(v33);
}

uint64_t sub_10035A7DC(uint64_t a1, int a2, int a3)
{
  BOOL v10 = v5 < v3;
  if (v10 == v8 + v9 < ((((a3 + 562) ^ v4) * v6) ^ (v3 + 521))) {
    BOOL v10 = v5 > v8 + v9;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v10 * a2) ^ (a3 + 562))))();
}

uint64_t sub_10035A7E4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((111
                                * (((((v0 ^ 0x694) - 1159) ^ (((2 * v1) & 0xFDFFD9F6 ^ 0xC1301A0)
                                                            + (v1 ^ 0x78F67D2F)
                                                            - 1611156459
                                                            + 904 == (((v0 ^ 0x694) + 906631251) & 0xC9F5E5F7)
                                                                   + 519544614)) & 1) == 0)) ^ v0 ^ 0x694)))();
}

uint64_t sub_10035A878(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18)
{
  *a4 = 0;
  *a5 = 0;
  a18 = 108757529
      * ((((&a17 | 0xC8548EC6) ^ 0xFFFFFFFE) - (~&a17 | 0x37AB7139)) ^ 0xD7371312)
      - 504207030;
  uint64_t v20 = (*(uint64_t (**)(int *))(v18 + 17680))(&a17);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1301 * (a17 == v19)) ^ 0x275u)))(v20);
}

uint64_t sub_10035A914()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v1 + 112)))(v0 ^ (v2 + 320) ^ (v1 - 1309), 1523128792) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * (((v1 - 2129) | 0x282) - 614)) ^ v1)))();
}

uint64_t sub_10035A974@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W4>, unint64_t a4@<X8>)
{
  uint64_t v9 = (a2 + a1 + v7);
  unint64_t v10 = v9 + a4 + 1;
  uint64_t v11 = (((a3 + 185487660) & 0xF4F1AFD5) - 1974) & v9;
  unint64_t v12 = v6 + v11 - v9;
  unint64_t v13 = v11 + v6 + 1;
  unint64_t v14 = v11 + v5 - v9 + 2;
  unint64_t v15 = v11 + v5 + 3;
  uint64_t v16 = v11 + v4;
  unint64_t v17 = v16 - v9 + 4;
  unint64_t v18 = v16 + 5;
  BOOL v20 = v13 > a4 && v12 < v10;
  if (v15 > a4 && v14 < v10) {
    BOOL v20 = 1;
  }
  int v23 = v18 > a4 && v17 < v10 || v20;
  return (*(uint64_t (**)(void))(v8 + 8 * ((38 * v23) ^ a3)))();
}

uint64_t sub_10035AA14@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(_DWORD *)(a10 + 4 * (v10 + a2)) = a1;
  BOOL v17 = v10 + v12 > v13 || v10 + v12 < v14;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v17 * (((v11 - 658821999) & 0x2744D3D6) - 952)) ^ v11)))();
}

uint64_t sub_10035AA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(void *)(v25 - 120) = a20;
  *(void *)(v25 - 112) = v24;
  *(_DWORD *)(v25 - 128) = v23 - 108757529 * ((v25 - 1980855625 - 2 * ((v25 - 128) & 0x89EE8B37)) ^ 0x6972E91C) + 541;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v23 ^ 0xB0F)))(v25 - 128);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (((2 * ((((v23 + 430) ^ v23 ^ (v22 == v20)) & 1) == 0)) & 0xEF | (16 * ((((v23 - 82) ^ v23) ^ ~(v22 == v20)) & 1))) ^ v23)))(v26);
}

uint64_t sub_10035AB14(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v2
                                                    + 8
                                                    * (((*(_DWORD *)(v3 - 0x38C18B7A1BA31320) == 774297797)
                                                      * ((v1 + 89) ^ ((v1 - 480) | 0x23F))) ^ v1)))(a1, *(void *)(v3 - 0x38C18B7A1BA3132CLL));
}

uint64_t sub_10035AB80@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((79 * (((v1 + 1283) | 0x52) ^ 0x67B)) ^ 0x2E1)
                                * ((v2 + a1) < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_10035ABCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((55
                                              * (a20 - v20 - a2 - 0x4BD26FD1213425A1 >= ((((v22 ^ 0x204) * v23 - 848) | 0x104u) ^ 0x344uLL))) ^ v22)))(v21);
}

uint64_t sub_10035AC30(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 == 24) * (((a4 - 842) | 0x409) ^ 0x91C)) ^ a4)))();
}

uint64_t sub_10035AC68@<X0>(int a1@<W3>, int a2@<W8>)
{
  uint64_t v9 = (void *)(v7 - 0x1F010F7499D3F79ELL);
  unsigned int v10 = ((2 * (*(_DWORD *)(*v9 + 4 * (a2 + 143196290)) ^ v3)) << (v2 ^ 0x1F)) | ((*(_DWORD *)(*v9
                                                                                              + 4 * (a2 + 143196289)) ^ v3) >> v2);
  *(_DWORD *)(*v9 + 4 * (((v5 - 618) | 0x20) - 160)) = v10 + v3 - (v4 & (2 * v10));
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8 * ((890 * ((int)((a1 ^ 0xEA2A3312) + v6) > -223136715)) ^ (v5 + 554))))(3294802245);
}

uint64_t sub_10035AD34@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*v3 + 4 * (v7 + v6)) = *(_DWORD *)(*v4 + 4 * (v7 + v6));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v5 + v7 - 457 == v1) * v8) ^ v2)))();
}

uint64_t sub_10035AD74()
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((20 * (v1 ^ 0x5EF) - 1911) * (v0 != 1619224925)) ^ v1)))(3658457652);
}

uint64_t sub_10035ADBC()
{
  unsigned int v4 = (~v3 | 0xBF2A2A63) + v1 + (((v2 ^ 0x7AD) + 720) ^ 0xE06AED95);
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((98
                                * (((2 * v4) & 0x60A57EFE ^ 0x4085549C) + (v4 ^ 0xD03855B1) - 268448294 == 542281049)) ^ v2)))();
}

uint64_t sub_10035AE44@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9, uint64_t a10, unsigned int a11, char *a12, unsigned char *a13, uint64_t a14, unsigned int a15)
{
  a11 = (v16 - 450) ^ (((2 * (&a11 & 0x4D616598) - &a11 - 1298228633) ^ 0xDF6A826E) * v17);
  a12 = &a9 + a1;
  a13 = a4;
  (*(void (**)(unsigned int *))(v18 + 8 * (v16 + 1451)))(&a11);
  a15 = (v16 - 242) ^ (1225351577 * ((&a11 & 0xCCC3A33D | ~(&a11 | 0xCCC3A33D)) ^ 0x10A684D4));
  a13 = v19;
  a14 = v20;
  a12 = a4;
  (*(void (**)(unsigned int *))(v18 + 8 * ((v16 - 332) ^ 0x8CB)))(&a11);
  a12 = v15;
  a13 = a4;
  a11 = (v16 - 450) ^ (((&a11 & 0x960CB73F | ~(&a11 | 0x960CB73F)) ^ 0x40750C9) * v17);
  (*(void (**)(unsigned int *))(v18 + 8 * (v16 + 1451)))(&a11);
  a12 = a4;
  a11 = (v16 + 1389) ^ (1755732067 * (&a11 ^ 0xDEC6BDDB));
  uint64_t v21 = (*(uint64_t (**)(unsigned int *))(v18 + 8 * (v16 + 1452)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (((a13 == ((v16 - 971580702) & 0x39E926BF ^ 0x241DED83))
                                              * (v16 + 120)) ^ (v16 - 332))))(v21);
}

uint64_t sub_10035AEB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = a1 + 1;
  *int v2 = ((v3 + v7) ^ v5) * (v4 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * (((4 * (v7 != 91)) | (32 * (v7 != 91))) ^ v1)))();
}

uint64_t sub_10035AEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  return (*(uint64_t (**)(void))(v28
                              + 8
                              * ((((unint64_t)(&a25 + a14 + (v26 + v25 - 1)) < (unint64_t)((v27 ^ 0x7D4) + 1387) - 1379)
                                * ((248 * (v27 ^ 0x7D4)) ^ 0x7FC)) ^ v27)))();
}

uint64_t sub_10035AF08@<X0>(int a1@<W7>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v17 = v15 > v9;
  uint64_t v18 = 4 * (v13 + v10);
  int v19 = v5 + v12 + (*(_DWORD *)(*(void *)(a5 - 0x1F010F7499D3F79ELL) + v18) ^ v14);
  *(_DWORD *)(*(void *)(a2 - 0x1F010F7499D3F79ELL) + v18) = v19 + v14 - ((v19 << (((v7 + 90) | 0x13) ^ 0x9A)) & v11);
  LODWORD(v18) = v13 + 1 + v6;
  int v20 = v17 ^ ((int)v18 < a1 + 651);
  BOOL v21 = (int)v18 < v8;
  if (!v20) {
    BOOL v17 = v21;
  }
  return (*(uint64_t (**)(void))(v16 + 8 * (!v17 | (16 * !v17) | v7)))();
}

uint64_t sub_10035AFEC@<X0>(int a1@<W4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  return (*(uint64_t (**)(void))(v15 + 8 * ((((a2 - 1441540181) & 0x55EC2765 ^ 0x447) * (a15 == a1)) | a2)))();
}

void sub_10035B02C()
{
  uint64_t v3 = *(void *)(v0 + 8);
  *(_DWORD *)(*(void *)(v0 + 24) - 0x6270735DB71EF9AFLL) = *v1;
  *(_DWORD *)(v3 - 0x7DDA1A649706FB9DLL) = *v2;
  JUMPOUT(0x10035B06CLL);
}

uint64_t sub_10035B0A8(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  *(void *)(a3 + (a1 + v6)) = *(void *)(v8 + (a1 + v6));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a6 == 0) * v7) ^ a4)))((a1 - 8));
}

void sub_10035B0D8()
{
}

uint64_t sub_10035B4D0()
{
  int v5 = ((v3 - 1506216972) & 0x59C70BD1) + *(unsigned __int8 *)(v2 + 5) - 734;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((58 * (((43 * (v3 ^ 0x18)) ^ ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) & 1)) ^ v3)))();
}

uint64_t sub_10035B538(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1 + 8
                                   * (((((v2 - 1010) ^ 0x68F) - 664) * (a1 == 0x6F059C107AC82A12)) ^ (v2 - 1010))))();
}

uint64_t sub_10035B590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,unsigned int a24,uint64_t a25)
{
  unsigned int v32 = 1178560073 * (&a21 ^ 0xBA947862);
  a23 = a16;
  a24 = (v30 - 17) ^ v32;
  a22 = v29 - 1815171825 - ((2 * v29) & 0x279D5C7E) + v32 + 304;
  (*(void (**)(int *))(v31 + 8 * (v30 + 1085)))(&a21);
  a23 = a16;
  a25 = v28;
  a24 = v30
      + 1224239923 * ((((2 * &a21) | 0xDE3FB10) - &a21 + 2030961272) ^ 0x7442005F)
      + 780;
  (*(void (**)(int *))(v31 + 8 * (v30 + 1198)))(&a21);
  unsigned int v33 = 1178560073 * ((&a21 - 256234305 - 2 * (&a21 & 0xF0BA2CBF)) ^ 0x4A2E54DD);
  a24 = (v30 - 17) ^ v33;
  a23 = a16;
  a22 = v27 - ((2 * v27) & 0x279D5C7E) + ((v30 - 1418643224) & 0x548EC3F9) - 1815171825 + v33;
  (*(void (**)(int *))(v31 + 8 * (v30 + 1085)))(&a21);
  unsigned int v34 = 1178560073 * ((1273442814 - (&a21 | 0x4BE731FE) + (&a21 | 0xB418CE01)) ^ 0xE8CB663);
  a23 = a16;
  a22 = v34 + v30 - 929;
  a24 = v34 ^ ((v26 ^ 0x7B7ABFFF) - 287310208 + ((2 * v26) & 0xF6F57FFE));
  a25 = v25;
  uint64_t v35 = (*(uint64_t (**)(int *))(v31 + 8 * (v30 ^ 0xCFB)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v31 + 8 * ((26 * (a21 == 605940026)) ^ v30)))(v35);
}

uint64_t sub_10035B7B4@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v6 + v3)) = *(unsigned char *)(v2 + (v6 + v3));
  return (*(uint64_t (**)(void))(v1 + 8 * ((v6 - 1 == v5) | (2 * (v6 - 1 == v5)) | v4)))(0);
}

uint64_t sub_10035B7E8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v2 == 1064857036) ^ (a1 - 74)) & 1) * (a1 - 1748)) ^ (a1 - 74))))();
}

uint64_t sub_10035B840(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((93 * (v4 < 3 * (a4 ^ 0xA1C) + ((a4 - 1039441116) & 0x3DF497FF) - 2396)) ^ a4)))();
}

uint64_t sub_10035B890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * ((((v14 - 54) ^ 0x27E)
                                * ((a13 ^ 0x5FF3337F) - 1409421888 + ((2 * a13) & 0xBFE666FE) - 200352065 > 0x7FFFFFFD)) ^ v14)))();
}

void sub_10035B910()
{
}

uint64_t sub_10035BAF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W5>, int a5@<W6>, int a6@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * ((((a6 - 753493622) < 0x38)
                                                                         * (47 * (v7 ^ (a4 + 3)) + 1158)) ^ (a5 + v7 + 352))))(a1, a2, -753493622, a3);
}

uint64_t sub_10035BB44(uint64_t a1, int a2, int a3)
{
  BOOL v6 = ((a3 + v4 + 1278270754) & 0x43B49C5F ^ (a2 + 1012)) + v3 < v3 + a2;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v6 | (2 * v6)) ^ v4)))();
}

uint64_t sub_10035BB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,unint64_t a40)
{
  int v47 = v41 + v40 - 1259;
  *uint64_t v43 = v43[623];
  int v48 = (v41 + v40 + 1132232418) ^ v44;
  *(_DWORD *)(v46 - 112) = v48 ^ 0x3D;
  STACK[0x5C8] = (v45 - 191172970) ^ v44;
  STACK[0x5C0] = a40;
  *(_DWORD *)(v46 - 124) = v48;
  *(_DWORD *)(v46 - 120) = (v47 + 1132233739) ^ v44;
  *(_DWORD *)(v46 - 152) = v44 + v47 - 1358355483;
  *(_DWORD *)(v46 - 128) = -(int)v44;
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v42 + 8 * (v47 ^ (v41 + 1785))))(v46 - 152);
  return (*(uint64_t (**)(uint64_t))(v42 + 8 * *(int *)(v46 - 116)))(v49);
}

uint64_t sub_10035BC40(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (535753261 * ((1711628207 - (a1 | 0x66055FAF) + (a1 | 0x99FAA050)) ^ 0x930EAE7F));
  uint64_t v3 = *(void *)((char *)*(&off_1022AC750 + (int)(v1 ^ 0x7F7DFDCE)) - 4);
  unsigned int v4 = (3804331
      * ((((2 * (&v3 ^ 0x109B3193)) | 0x30565004) - (&v3 ^ 0x109B3193) - 405481474) ^ 0x76653C67)) ^ (v1 - 2138962426);
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_1022AC750 + (int)(v1 ^ 0x7F7DFD38))
                                              + 8 * (int)(v1 ^ 0x7F7DF54B)
                                              - 4))(&v3);
}

uint64_t sub_10035BD70(uint64_t a1)
{
  int v2 = 460628867 * (((a1 | 0x167EA26) - a1 + (a1 & 0xFE9815D9)) ^ 0x4DF1685B);
  int v3 = *(_DWORD *)(a1 + 20) - v2;
  int v4 = *(_DWORD *)(a1 + 16) - v2;
  int v5 = *(_DWORD *)(a1 + 24) + v2;
  uint64_t v6 = *(void *)a1;
  unsigned int v7 = 1755732067
     * (((&v9 ^ 0x591711CD) & 0xA483E257 | ~(&v9 ^ 0x591711CD | 0xA483E257)) ^ 0xDCADB1BE);
  uint64_t v12 = *(void *)(a1 + 8);
  int v13 = (v4 - 2 * ((v4 + 99420440) & 0x68F2D18D ^ v4 & 4) - 287319391) ^ v7;
  int v11 = v7 ^ (v3 + 2024873840);
  unsigned int v9 = (v5 ^ 0xE9246EEE) + v7 + 2080112288 + ((2 * v5) & 0xF9EEAFC6 ^ 0x29A62202);
  uint64_t v10 = v6;
  uint64_t result = (*(uint64_t (**)(unsigned int *))((char *)*(&off_1022AC750 + (int)(v3 ^ 0x874EE31D))
                                                     + 8 * (int)(v3 ^ 0x874EEA9E)
                                                     - 4))(&v9);
  *(_DWORD *)(a1 + 28) = v14;
  return result;
}

uint64_t sub_10035BF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v12 + 8 * ((1731 * (a12 - 1590291840 + (v13 ^ 0x7Bu) + 586 < 0x7FFFFFFF)) ^ v13)))();
}

uint64_t sub_10035BF6C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((31 * ((((v0 & 8) == ((v1 - 130) ^ 0x7C5)) ^ (v1 - 72)) & 1)) ^ (v1 - 1596))))();
}

void sub_10035BFC8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((2 * (a1 & 0x878F6F35) - a1 + 2020643018) ^ 0xC2E4E8A8));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10035C0A4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  BOOL v16 = a1 != 87424923 && a11 - v14 == 1890831304;
  return (*(uint64_t (**)(void))(v12 + 8 * ((v16 * (((v11 ^ (v13 - 148)) - v13 + 620) ^ 0x214)) ^ v11)))();
}

void sub_10035C0FC(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (235795823 * ((-127693918 - (a1 | 0xF8638BA2) + (a1 | 0x79C745D)) ^ 0x93313D04));
  __asm { BRAA            X10, X17 }
}

void sub_10035C1D0()
{
}

uint64_t sub_10035C1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(&a25 + v25 + a2) = 24;
  return (*(uint64_t (**)(void))(v27
                              + 8
                              * ((82 * (v25 + 1 + a2 < (unint64_t)((v26 ^ 0x52u) - a6 - 655) - 1880785692)) ^ v26 ^ 0x52)))();
}

uint64_t sub_10035C230()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x38C18B7A1BA3131CLL)
     - ((2 * *(_DWORD *)(v1 - 0x38C18B7A1BA3131CLL) + 1844330058) & 0xEA303576)
     + 739195360;
  BOOL v4 = ((2 * v3) & 0xFF6E97FA ^ 0xEA201572) + (v3 ^ 0xAAF5146) - 93390872 == 2049328101;
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v4) | (8 * v4)) ^ v0)))();
}

uint64_t sub_10035C2E0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((119 * (v0 - 100 < ((v1 - 893) | 0x108u) - 685)) ^ v1)))();
}

uint64_t sub_10035C320()
{
  return sub_10035C35C();
}

void sub_10035C35C(int a1@<W8>)
{
  _DWORD *v1 = a1;
}

void sub_10035C39C(uint64_t a1)
{
  uint64_t v2 = (unint64_t *)*(&off_1022AC750
                           + ((107 * (dword_10241A030 ^ 0x8A ^ qword_102419E28)) ^ byte_101D1BE20[byte_101D17DE0[(107 * (dword_10241A030 ^ 0x8A ^ qword_102419E28))] ^ 0x4A])
                           + 29);
  unsigned int v3 = (unint64_t *)*(&off_1022AC750
                           + ((107 * (*v2 ^ qword_102419E28 ^ 0x8A)) ^ byte_101D1BC20[byte_101D17AE0[(107 * (*v2 ^ qword_102419E28 ^ 0x8A))] ^ 0xCD])
                           - 104);
  unint64_t v4 = 2119093099 * ((unint64_t)&v6[*v3 - *v2] ^ 0x22F8A8F5CDCFC8ALL);
  *uint64_t v2 = v4;
  *unsigned int v3 = v4;
  LOBYTE(v3) = *(_DWORD *)v2;
  int v5 = (char *)*(&off_1022AC750
               + ((107 * ((qword_102419E28 - dword_10241A030) ^ 0x8A)) ^ byte_101D1BE20[byte_101D17DE0[(107 * ((qword_102419E28 - dword_10241A030) ^ 0x8A))] ^ 0x4A])
               + 63)
     - 4;
  (*(void (**)(void, uint64_t (*)()))&v5[8
                                                   * (byte_101D11A24[(byte_101D1BF2C[(107 * ((v4 - (_BYTE)v3) ^ 0x8A)) - 12] ^ 0x27)
                                                                                    - 4] ^ (107
                                                                                          * ((v4 - (_BYTE)v3) ^ 0x8A)))
                                                   + 17664])(*(&off_1022AC750+ (byte_101D17BE4[(byte_101D15180[(107 * ((v4 + (_BYTE)v3) ^ 0x8A))] ^ 0x9A)- 4] ^ (107 * ((v4 + (_BYTE)v3) ^ 0x8A)))+ 43), sub_10035ECA0);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10035C578(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v5 + 8 * (((((a4 + 44) | 0x120) + 838) * (v4 == a3)) ^ a4)))(a1, (a4 - 461));
}

uint64_t sub_10035C5B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = v3 + 34;
  *(_DWORD *)(*(void *)(a1 + 96) + 800) = 1869905003;
  *(_DWORD *)(*(void *)(a1 + 96) + 804) = 1902603612;
  *(void *)(*(void *)(a1 + 96) + 808) = *(void *)(a1 + 96) + 816;
  uint64_t v5 = *(void *)(a1 + 96) + 0x1F010F7499D3FAC6;
  uint64_t v6 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v4);
  unsigned int v7 = 1178560073
     * (((&v9 | 0x33FBA1D0) - &v9 + (&v9 & 0xCC045E28)) ^ 0x896FD9B2);
  unsigned int v13 = v7 + v4 - 726473402;
  uint64_t v10 = v6;
  uint64_t v11 = v5;
  unsigned int v9 = v7 + 1777;
  (*(void (**)(unsigned int *))(a3 + 18152))(&v9);
  return (-497596534 - 618185883 * v12);
}

uint64_t sub_10035C5C4(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((a1 - 712) ^ 0x4D5 ^ (2 * a1) ^ 0xC4E) * ((v2 + v1 - 810729343) > 7)) ^ a1)))();
}

uint64_t sub_10035C620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v17 - 104) = v12;
  *(void *)(v17 - 144) = v14;
  *(void *)(v17 - 136) = a11;
  *(_DWORD *)(v17 - 112) = v11
                         + 1224239923 * (((~(v17 - 144) & 0x674EBBD0) - (~(v17 - 144) | 0x674EBBD1)) ^ 0x95FD4606)
                         - 582;
  *(void *)(v17 - 128) = v12;
  *(void *)(v17 - 120) = v13;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v11 + 1076)))(v17 - 144);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)((440
                                                   * (v15 - 1206753085 < 3 * ((v11 + 1052056408) & 0xC14AE4B7 ^ 0x535)
                                                                       + 2147482486)) ^ (v11 + 1052056408) & 0xC14AE4B7)))(v18);
}

uint64_t sub_10035C6E4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((700
                                * ((int)((v3 ^ 0xDDFB73B5) + 2143726971 + (v0 & 0xBBF6E76A) - 1573004530 + (v1 ^ 0x745)) > (int)((v1 + 23) ^ 0xFFFFFB64))) ^ v1)))();
}

uint64_t sub_10035C780(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0xC21FEC2B) - (a1 & 0xC21FEC2B)) ^ 0x4097E018);
  int v2 = *(_DWORD *)(a1 + 8) - v1;
  unsigned int v3 = v1 + *(_DWORD *)(a1 + 12) - 965353132;
  unsigned int v4 = (*(_DWORD *)(*(void *)a1 - 0x2E910FB81C0D979BLL) ^ 0x1691A9BC) + v3;
  int v5 = v4 - ((2 * v4) & 0x2D235378) + 378644924;
  *(_DWORD *)(*(void *)a1 - 0x2E910FB81C0D979BLL) = v5;
  return (*(uint64_t (**)(void))((char *)*(&off_1022AC750 + v2 - 566) + 8 * ((308 * ((v5 ^ 0x1691A9BCu) < v3)) ^ v2) - 4))();
}

uint64_t sub_10035C844()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1959
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v0) == v0 + ((v2 - 737) | 0x281) - 721)) ^ v2)))();
}

void sub_10035C88C(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10035C900()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((106
                                * (((2 * ((((v0 - 521) | 0x840) ^ 0xB7085EE4) - 54)) & 0xD71EEB7A ^ 0x4610A820)
                                 + (((((v0 - 521) | 0x840) ^ 0xB7085EE4) - 54) ^ 0xDC8723EF)
                                 - 1099699624 != 704864277)) ^ v0)))();
}

void sub_10035C90C()
{
}

uint64_t sub_10035C920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8 * ((3268 * ((v15 ^ 0x416 ^ (v12 - 70)) + v14 < 0x7FFFFFFF)) ^ v15)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_10035C95C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 - 1747) | 0x371) - 842) * ((v1 + v0 - 2142718973) < 8)) ^ v2)))();
}

uint64_t sub_10035C9A4()
{
  int v2 = (LODWORD(STACK[0x238]) - 114) | 0xE;
  int v3 = (*(unsigned char *)(STACK[0x4E0] + 1516) ^ ((v2 - 44) | 0x90) ^ 0xAA)
     - (*(unsigned char *)STACK[0x468] - 126);
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((2 * v3) & 0xB97FFF9E) + (v3 ^ 0xDCBFFFCF) == -591396913)
                                * ((v2 - 1979358551) & 0x75FA9FFD ^ v0)) ^ v2)))();
}

uint64_t sub_10035CA40()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((**(void **)(v2 + 8 * (v1 ^ 0x335)) == 0) * (v1 + 528)) ^ v1)))();
}

uint64_t sub_10035CA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v19 = 628203409 * ((v18 + 2099313430 - 2 * ((v18 - 152) & 0x7D20FBAE)) ^ 0xFFA8F79D);
  *(_DWORD *)(v18 - 136) = v14 - v19 + 1631;
  *(_DWORD *)(v18 - 132) = v17 - v19 - 536575948;
  *(void *)(v18 - 152) = a12;
  *(void *)(v18 - 144) = a10;
  *(void *)(v18 - 128) = a13;
  *(void *)(v18 - 112) = v16;
  *(void *)(v18 - 104) = a11;
  (*(void (**)(uint64_t))(v15 + 8 * (v14 + 2109)))(v18 - 152);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 120) == v13 + v14 - 152) * ((v14 + 128) ^ 0x37A)) | v14)))(785680345);
}

uint64_t sub_10035CB5C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v6 = (a2 - 1119) | 0x265;
  (*(void (**)(void, uint64_t, void))(v4 + 8 * (a2 + 1000)))(*v8, a1, (v6 ^ 0x8F874AE4) + v3);
  *(_DWORD *)(v5 - 200) = (v6 + 2138962603) ^ (535753261
                                             * ((((v5 - 200) | 0x6983BC26) - ((v5 - 200) & 0x6983BC26)) ^ 0x6377B209));
  uint64_t result = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v6 + 1521)))(v5 - 200);
  *(_DWORD *)(v2 + 36) = v9;
  return result;
}

uint64_t sub_10035CC44()
{
  LODWORD(STACK[0x638]) = v0;
  LODWORD(STACK[0x524]) = v3;
  LODWORD(STACK[0x634]) = v1;
  LODWORD(STACK[0x4B0]) = v4;
  LODWORD(STACK[0x598]) = v6 + 80;
  unint64_t v9 = STACK[0x680];
  int v10 = *(_DWORD *)(STACK[0x680] - 0x2E910FB81C0D9787);
  LODWORD(STACK[0x4D4]) = v2;
  *(_DWORD *)(v9 - 0x2E910FB81C0D9787) = (v10 ^ v7)
                                         + (v2 ^ v7)
                                         + v7
                                         - ((((v10 ^ v7) + (v2 ^ v7)) << (v5 ^ 0x6D)) & v8);
  unint64_t v11 = STACK[0x530];
  int v12 = (*(_DWORD *)(v9 - 0x2E910FB81C0D9797) ^ v7) + (v0 ^ v7);
  *(_DWORD *)(v9 - 0x2E910FB81C0D9797) = v12 + v7 - (v8 & (2 * v12));
  int v13 = (*(_DWORD *)(v9 - 0x2E910FB81C0D9793) ^ v7) + (v3 ^ v7);
  *(_DWORD *)(v9 - 0x2E910FB81C0D9793) = v13 + v7 - (v8 & (2 * v13));
  int v14 = (*(_DWORD *)(v9 - 0x2E910FB81C0D978FLL) ^ v7) + (v1 ^ v7);
  *(_DWORD *)(v9 - 0x2E910FB81C0D978FLL) = v14 + v7 - (v8 & (2 * v14));
  int v15 = (*(_DWORD *)(v9 - 0x2E910FB81C0D978BLL) ^ v7) + (v4 ^ v7);
  *(_DWORD *)(v9 - 0x2E910FB81C0D978BLL) = v15 + v7 - (v8 & (2 * v15));
  STACK[0x530] = v11 - 320;
  return ((uint64_t (*)(void))STACK[0x540])();
}

uint64_t sub_10035CD94()
{
  int v4 = (v0 - 660) | 0x582;
  STACK[0x430] = (*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8 * (v0 + 1496)))(STACK[0x2D0], 2965982036);
  int v5 = (*(uint64_t (**)(void))(v3 + 8 * SLODWORD(STACK[0x2CC])))();
  unsigned int v6 = v5 + 1255822489 - ((v2 + v4 - 1507) & (2 * v5));
  unsigned int *v1 = v6;
  int v7 = (((v6 >> ((((v0 + 108) | 0x82) ^ 0x56) + 105)) ^ 1)
      + 1255822489
      - 2 * (((v6 >> ((((v0 + 108) | 0x82) ^ 0x56) + 105)) ^ 1) & 1)) ^ v6;
  v1[1] = 1812433253 * v7 - ((2 - 670100790 * v7) & v2) + 1255822490;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (v4 ^ 0x13)))(3624866506);
}

uint64_t sub_10035CE70(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * ((38 * (v19 == (v18 ^ 0x882))) ^ v18)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, *a1, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_10035CEC4()
{
  ++*(_DWORD *)(v1 + 52);
  STACK[0x530] = ((v0 - 1096245320) & 0x415763E7 ^ 0xFFFFFFFFFFFFF561) + v2;
  LODWORD(STACK[0x48C]) = v4;
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((205 * (((37 * (v0 ^ 0x42)) ^ (STACK[0x4D8] == 0)) & 1)) ^ v0)))();
}

uint64_t sub_10035CF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  LODWORD(STACK[0x5CC]) = 1070242422;
  LODWORD(STACK[0x618]) = 128;
  int v61 = 1178560073 * ((((v60 - 200) | 0xC385703) - (v60 - 200) + ((v60 - 200) & 0xF3C7A8F8)) ^ 0xB6AC2F61);
  *(_DWORD *)(v60 - 160) = (v58 - 119) ^ v61;
  *(_DWORD *)(v60 - 176) = 1308924200 - v61;
  *(void *)(v60 - 168) = 0;
  *(void *)(v60 - 152) = 0;
  *(void *)(v60 - 144) = a48;
  *(void *)(v60 - 184) = v57 + 0x1F010F7499D3FA36;
  *(void *)(v60 - 192) = a57;
  *(void *)(v60 - 136) = v57;
  *(void *)(v60 - 128) = v57 + 0x1F010F7499D3FB46;
  uint64_t v62 = (*(uint64_t (**)(uint64_t))(v59 + 8 * (v58 ^ 0xAC8)))(v60 - 200);
  return (*(uint64_t (**)(uint64_t))(v59
                                            + 8
                                            * (((*(_DWORD *)(v60 - 200) == ((v58 + 1025419933) & 0xC2E153CF) + 605939820)
                                              * (((v58 - 60) | 0xD0) + 312)) ^ v58)))(v62);
}

uint64_t sub_10035D06C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  BOOL v8 = v4 > v7;
  int v9 = ((a4 + 191) ^ 0xF4AB3F8D) + a3;
  int v10 = v8 ^ (v9 < -784476422);
  BOOL v11 = v9 < v6;
  if (!v10) {
    BOOL v8 = v11;
  }
  return (*(uint64_t (**)(uint64_t, void))(v5 + 8 * ((818 * v8) ^ a4)))(a1, 0);
}

uint64_t sub_10035D0D4(uint64_t a1)
{
  int v3 = (*(uint64_t (**)(void))(v1 + 18632))();
  if (v3 == 16) {
    unsigned int v4 = -42029;
  }
  else {
    unsigned int v4 = -42030;
  }
  if (v3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  (*(void (**)(uint64_t))(v1 + 18240))(a1);
  return v5;
}

uint64_t sub_10035D11C@<X0>(int a1@<W2>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((v3 ^ (a2 + 634)) - 698298013) ^ a3) == v4 - 452140548) * (a1 + a2 + v3 - 646 + 487)) | v3)))();
}

uint64_t sub_10035D174(uint64_t a1, int a2)
{
  BOOL v7 = *v4 != 1388428834 || v3 != a2;
  return (*(uint64_t (**)(void))(v5 + 8
                                   * (int)((v7 * ((((v2 + 247) | 0xB1) + 72) ^ (v2 + 66508336) & 0xFC092FBF)) ^ v2)))();
}

_DWORD *sub_10035D1E0(_DWORD *result)
{
  *uint64_t result = ((v2 - 16) ^ 0xB7136F6B) - v1;
  return result;
}

uint64_t sub_10035D1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17
                                                                                         + 8
                                                                                         * (((*(_DWORD *)(a17 - 0x38C18B7A1BA31314) == 20 * ((v18 - 1523) ^ 0x1C0) + 605938086)
                                                                                           * (74
                                                                                            * ((v18 - 1523) ^ 0x1A4)
                                                                                            + 192)) ^ (v18 - 1523))))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10035D268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * ((239
                                              * ((((a5 - 734) ^ ((unint64_t)(a2 - v7 - a4) < 0x20)) & 1) == 0)) ^ a5)))(v5);
}

uint64_t sub_10035D2BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(*a1 - 0x1C320A2BCFF26981) = 0;
  return (*(uint64_t (**)(void))(a2 + 8 * ((367 * (*v2 == v3 + v4 - 227)) ^ v4)))();
}

uint64_t sub_10035D304()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((v2 - 363) | 0x31) ^ 0x3B5) * (v1 == v3)) | v2)))((v0 - v3));
}

_DWORD *sub_10035D338@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  if (a2 + v2 - 1 >= ((v5 - 806) | 0x302u) + 2147481693) {
    int v6 = -489760072 - v4;
  }
  else {
    int v6 = v4;
  }
  *int v3 = v6;
  *uint64_t result = 1852763086;
  return result;
}

uint64_t sub_10035D390(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(a4 + v7) = *(void *)(v6 + v7);
  return (*(uint64_t (**)(uint64_t, void))(v8 + 8 * (((a2 == 0) * v5) ^ a5)))(a1, (a2 + 8));
}

uint64_t sub_10035D3C0@<X0>(uint64_t a1@<X8>, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6)
{
  a5 = a1;
  a6 = a2;
  a3 = (v9 - 1528) ^ (((&a3 - 1361229690 - 2 * ((unint64_t)&a3 & 0xAEDD4886)) ^ 0xC329508F) * v7);
  uint64_t v10 = (*(uint64_t (**)(int *))(v8 + 8 * (v9 ^ 0xF8F)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * (((a4 == ((v9 + 162780266) & 0xF64C2769 ^ (v6 + 225)))
                                              * (((v9 - 1356) | 0x120) - 762)) ^ v9)))(v10);
}

uint64_t sub_10035D470@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((490 * (*v1 != ((a1 - 718) | 0x43) - 99)) ^ a1)))();
}

uint64_t sub_10035D4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, int a7)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((v7 != ((((v8 ^ v11) + v9) & v10 ^ 0x24) + (((v8 ^ v11) + 54) | a6)))
                                * a7) ^ v8 ^ v11)))();
}

uint64_t sub_10035D4E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v12 = *(unsigned __int8 *)(v7 + (a6 + v10 + 1783)) | (a3 << 8);
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8 + 8 * ((1099 * (v9 - 1 == a7)) ^ v11)))(a1, a2, ((v12 + 980908544) ^ 0xFBEFB8A6) + 1859506144 + (((v11 + 1241) ^ 0xF7DF77BB) & (2 * (v12 + 980908544))));
}

uint64_t sub_10035D55C(uint64_t a1, int a2, int a3, int a4, uint64_t a5, int a6)
{
  int v9 = v7 + v6;
  int v10 = v9 - 1865178842;
  if ((v9 - 1865178842) <= 0x40) {
    int v10 = 64;
  }
  BOOL v11 = __CFADD__(v9 + (((a2 - 1022) | 0x14F) ^ 0x90D3A0CA), a3 + a6 + a4 + v10 + ((a2 + 610) | 0x9C));
  return (*(uint64_t (**)(void))(v8 + 8 * ((93 * v11) ^ a2)))();
}

uint64_t sub_10035D5D8@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((a1 + ((a2 - 117706189) & 0x771E8F7C) + ((a2 - 364) | 0x282) + 121) * (v3 == v2)) ^ a2)))();
}

void sub_10035D624()
{
}

uint64_t sub_10035D62C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v11 = a1 + 64;
  int v12 = (a1 - 85) | 0xA0;
  int v13 = (a1 - 337) | 0x151;
  unsigned int v14 = 1755732067 * ((((2 * &a4) | 0x816F4332) - &a4 - 1085776281) ^ 0x9E711C42);
  a6 = (a1 + 870) ^ v14;
  a7 = &STACK[0x752627A1EA5CFF30];
  a8 = v14 ^ 0x76DB6AE;
  a4 = &STACK[0x1C320A2BCFF26989];
  a5 = v10;
  uint64_t v15 = (*(uint64_t (**)(unint64_t **))(v9 + 8 * ((a1 + 64) ^ 0x949)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v10 - 0x38C18B7A1BA31314) == (v12 ^ (v8 - 160)))
                                              * (v13 ^ 0x15D)) | v11)))(v15);
}

uint64_t sub_10035D730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                + 8
                                                                                * (((v6 ^ 0x62D ^ (316 * (v6 ^ 0x450)))
                                                                                  * (v4 == 285368842)) | v6 ^ 0x5DA)))(a1, a2, a3, a4, 1779522747);
}

uint64_t sub_10035D780(uint64_t a1, int a2)
{
  return sub_10036359C(a1, a2);
}

uint64_t sub_10035D7A0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((int)((a2 ^ 0x8E98936C) + v3) >= 0) * ((a2 ^ 0x5CC) - 858)) ^ a2 ^ 0x5DC)))();
}

uint64_t sub_10035D7EC@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W6>, uint64_t a5@<X8>)
{
  uint64_t v10 = (a3 + a2 + a1 + 1296) + a5;
  uint64_t v11 = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a1 + 16) & 0xF;
  unint64_t v12 = v11 + v8 - v10;
  unint64_t v13 = (v11 | v7) - v10;
  unint64_t v14 = (v11 | v6) - v10;
  BOOL v18 = (unint64_t)(v5 - a5) > 0xF && v12 > 0xF && v13 >= (((a4 + 145) | 0x80u) ^ 0x1D1uLL) && v14 > 0xF;
  return (*(uint64_t (**)(void))(v9 + 8 * ((v18 * (a4 ^ 0x10A)) ^ a4)))();
}

uint64_t sub_10035D86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  BOOL v16 = a13 < 0x1BAEAA2C;
  unsigned int v17 = v14 - 643 + v13 + 270772143;
  int v18 = v16 ^ (v17 < 0x1BAEAA2C);
  BOOL v19 = v17 < a13;
  if (!v18) {
    BOOL v16 = v19;
  }
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((54 * v16) ^ v14)))(4101307861);
}

uint64_t sub_10035D8E4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((531 * ((((v0 - 1045540140) & 0x3E51AEF5u) - 752) * v2 + 4 == v1 - 1791330438)) ^ v0)))();
}

uint64_t sub_10035D934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, _DWORD *a17)
{
  int v22 = 535753261 * ((v21 - 144) ^ 0xAF40E2F);
  *(void *)(v21 - 120) = v19;
  *(_DWORD *)(v21 - 128) = v20 - v22 - 679;
  *(_DWORD *)(v21 - 144) = (((v20 - 1668) ^ 0xC2FDC917) + v17) ^ v22;
  *(void *)(v21 - 136) = a9;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v20 ^ 0xE0B)))(v21 - 144);
  return sub_10036E364(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_10035D9A0()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((*(_DWORD *)(*v0 + 4 * v1) != 1089336478) * (((2 * v2) ^ 0x3CC) - 320)) | v2)))();
}

uint64_t sub_10035D9E0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1513 * (v0 + 1 == v2 + 4)) ^ v1)))();
}

uint64_t sub_10035DAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2;
  unint64_t v6 = ((v3 + 609) ^ (unint64_t)(a2 + 400)) + v2;
  if (v6 <= 0x38) {
    unint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((v3 + 503) | (16 * (v6 - v5 + 83 * ((v3 + 503) ^ 0x208u) + 1333946919 > 7)))))();
}

uint64_t sub_10035DB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,unsigned int a50,unsigned int a51,unsigned int a52,int a53,int a54,unsigned __int8 a55)
{
  return sub_100359930(a2, a3, a4, a5, a6, a7, a8, v55, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

void sub_10035DB24(int a1@<W8>)
{
  *(_DWORD *)(v1 - 0x1F010F7499D3F7A2) = a1;
}

uint64_t sub_10035DB40()
{
  unint64_t v5 = STACK[0x388];
  int v6 = *(_DWORD *)(STACK[0x388] + 52);
  int v7 = 3804331 * (v1 ^ 0x7ED525F6);
  *(_DWORD *)(v4 - 200) = (v0 - 95) ^ v7;
  *(_DWORD *)(v4 - 196) = v2 - v7 - 1422717781;
  *(void *)(v4 - 184) = &STACK[0x1920];
  *(_DWORD *)(v4 - 192) = LODWORD(STACK[0x2B4]) ^ v7;
  *(_DWORD *)(v4 - 176) = v7 + v0 + 646 + v0 + 536 + v6 - 645992553;
  *(void *)(v4 - 168) = STACK[0x378];
  *(void *)(v4 - 160) = v5 + 0x1E6EF7153090DE6;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 2213)))(v4 - 200);
  int v9 = *(_DWORD *)(v4 - 188);
  LODWORD(STACK[0x48C]) = v9;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((549 * (v9 == 605940026)) ^ v0)))(v8);
}

uint64_t sub_10035DC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((30 * (v9 != ((7 * (v10 ^ a6)) ^ a7 ^ v8))) ^ v10)))();
}

uint64_t sub_10035DC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * ((3808
                                                                                  * (v4 - 603303756 < ((v5 - 464) ^ 0x11Du))) ^ (v5 + 1005))))(a1, 24, 58, a4, 106998629);
}

uint64_t sub_10035DCA8()
{
  BOOL v4 = v0 < 0x7669B180;
  unint64_t v5 = v1 - 0x5709FBB7BA540E4BLL + (v2 ^ 0x276u);
  int v6 = v4 ^ (v5 < 0x7669B180);
  BOOL v7 = v5 < v0;
  if (!v6) {
    LOBYTE(v4) = v7;
  }
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * (((2 * (((v2 + 83) ^ v4) & 1)) & 0xF7 | (8 * (((v2 + 83) ^ v4) & 1))) ^ v2)))((v2 - 685) | 0x108u);
}

uint64_t sub_10035DD20()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((19 * (v0 <= v1 + 623)) ^ (LODWORD(STACK[0x43C]) + 846))))();
}

uint64_t sub_10035DD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, int a13, unsigned int a14)
{
  a14 = v15
      - 460628867
      * ((((2 * (&a12 ^ 0x326B2B15)) | 0xB22CC208) - (&a12 ^ 0x326B2B15) + 652844796) ^ 0xA7EBC86C)
      + 974;
  a12 = &STACK[0x216229CD9A8FA121];
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v14 + 8 * (v15 ^ 0xA59)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8 * ((126 * (a13 != ((v16 + (v15 ^ 0x3F0) + 368) ^ 0xE3261D69))) ^ v15)))(v17);
}

uint64_t sub_10035DE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,char a36)
{
  return sub_10035DE58(2727111354, a2, a3, a4, a5, &a36, 1567855103, 2653026728);
}

uint64_t sub_10035DE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *))(v51
                                                                               + 8
                                                                               * ((579
                                                                                 * (((2 * (a50 & 0x3F)) ^ 0x78)
                                                                                  + (a50 & 0x3F ^ 0x75E6FC83u)
                                                                                  - 1978072315 < 0xFFFFFFC0)) ^ (v50 + 1448))))(a1, a2, 2317026272, 2653025880, &a41);
}

uint64_t sub_10035DF98()
{
  LODWORD(STACK[0x48C]) = v0 + 129;
  return sub_100375B88();
}

uint64_t sub_10035DFAC@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(void *)(*a1 - 0x1C320A2BCFF26981) = v6 + v5 + a2 - 219;
  return (*(uint64_t (**)(void))(a3 + 8 * (int)((367 * (*v3 == v4 + a2 - 227)) ^ a2)))();
}

uint64_t sub_10035E004()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v1 + 16) != 0x7A1D52918E41690)
                                * (v0 - 748 + ((v0 - 70274390) & 0x4304DB5) - 2031)) ^ v0)))();
}

uint64_t sub_10035E058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v30 = v28 - 1978072254;
  if ((v28 - 1978072254) <= 0x40) {
    int v30 = 64;
  }
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (int)(((1978070602 - v26 - v27 + (v25 ^ 0x52Du) + v30 < 0xF) * (((v25 + 851698081) & 0xCD3C1FBD) - 1175)) ^ v25)))(-v27, 1641940568, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_10035E0F8@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W5>, unsigned __int8 **a4@<X8>)
{
  uint64_t v13 = (a2 + a3 + v5 - 688 + 925) | 0x3C0u;
  uint64_t v14 = v6 + a1 + v13;
  BOOL v16 = (v13 ^ v8 ^ (**a4 - (*v4 ^ 0x18))) + (v9 & (2 * (**a4 - (*v4 ^ 0x18)))) + v7 != v11 || v14 == 0;
  return (*(uint64_t (**)(void))(v10 + 8 * (int)((v16 * v12) ^ v13)))();
}

uint64_t sub_10035E160@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W8>)
{
  *(unsigned char *)(v9 - 252 + (a3 - 1105975649)) = *(unsigned char *)(v8 + (v4 + a2))
                                                         - ((2 * *(unsigned char *)(v8 + (v4 + a2))) & 0x30)
                                                         + 24;
  unsigned int v10 = a1 + v4 + 27;
  int v11 = (v3 < v5) ^ (v10 < v5);
  BOOL v12 = v10 < v3;
  if (v11) {
    BOOL v12 = v3 < v5;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((!v12 | (2 * !v12)) ^ v6)))();
}

uint64_t sub_10035E1E8@<X0>(unsigned int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  BOOL v11 = v8 > 0x6FF;
  *(unsigned char *)(a3 + (a2 + v7 + 1791)) = (v9 + 63) ^ *(unsigned char *)(v3 + (a2 + v7 + 1791)) ^ *(unsigned char *)(v6 + ((a2 + v7 + 1791) & 0xFLL)) ^ *(unsigned char *)(v5 + (((_BYTE)a2 + (_BYTE)v7 - 1) & 0xF)) ^ *(unsigned char *)(v4 + (((_BYTE)a2 + (_BYTE)v7 - 1) & 0xF)) ^ (97 * ((a2 + v7 - 1) & 0xF)) ^ 0x14;
  if (v11 == (a2 + v7) < 0xFFFFF900) {
    BOOL v11 = a2 + v7 < a1;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((802 * v11) ^ v9)))();
}

uint64_t sub_10035E270()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((223 * ((((v0 + 1496) | 1) ^ (v2 + 1230)) + v1 < 0x7FFFFFFF)) ^ v0)))();
}

uint64_t sub_10035E2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v29 - 120) = a24;
  *(_DWORD *)(v29 - 112) = v24
                         + ((((v29 - 128) | 0xD0AEAF12) - (v29 - 128) + ((v29 - 128) & 0x2F5150E8)) ^ 0x6A3AD770) * v28
                         - 371;
  *(void *)(v29 - 104) = v27;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v24 ^ 0xDC1)))(v29 - 128);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * (((*(_DWORD *)(v29 - 128) > v26) * (v24 - 511)) ^ v24)))(v30);
}

uint64_t sub_10035E33C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((58
                                * (((*(_DWORD *)(v1 - 0x38C18B7A1BA3131CLL) == ((4 * v0) ^ 0x4908F1FF)) ^ v0) & 1)) ^ v0)))();
}

void sub_10035E390()
{
}

uint64_t sub_10035E39C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  *(unsigned char *)(v9 + (v8 + a4 + 433)) = *(unsigned char *)(v7 + (v8 + a4 + 433)) ^ 0x18;
  return (*(uint64_t (**)(void))(v10 + 8 * ((1584 * (a4 + 5 * (a6 ^ 0x106) - 2021 == v6)) ^ a6)))();
}

uint64_t sub_10035E3E4()
{
  STACK[0x378] = STACK[0x4D8];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2020
                                * (((37 * (((v0 + 788) | 0x41) ^ 0x3E2) - 113) & v1) != ((((v0 + 788) | 0x41)
                                                                                        + 1532809502) & 0xA4A32B6F)
                                                                                      + 23692021)) ^ ((v0 + 788) | 0x41))))();
}

uint64_t sub_10035E464()
{
  STACK[0x398] = STACK[0x300];
  return sub_1003741E8();
}

void sub_10035E47C()
{
}

uint64_t sub_10035E528(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((v4 == a4) ^ (v5 + 1)) & 1 | (8
                                                                                * (((v4 == a4) ^ (v5 + 1)) & 1))) ^ v5)))();
}

void sub_10035E550(int a1@<W8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v9 = 3804331 * ((2 * (&a3 & 0x2B756E88) - &a3 - 729116298) ^ 0xAA5FB480);
  a7 = v9 + 112004103;
  a5 = 0x3B6240245EEB6D72;
  a6 = v7;
  a3 = v9 + 296806364;
  a4 = v9 + a1 - 1443;
  (*(void (**)(unsigned int *))(v8 + 8 * (a1 ^ 0xFB7)))(&a3);
  sub_10034D874();
}

void sub_10035E5E4()
{
}

uint64_t sub_10035E674@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((v2 - 1543803237) & 0x5C04973D) - 815) ^ ((v2 - 328) | 0x148))
                                * (*(_DWORD *)(a1 + 4 * (v3 + v4)) == v1)) ^ v2)))();
}

uint64_t sub_10035E6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v16 = v11 ^ (v11 + 1020);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8 * (v11 ^ (v11 + 1859))))(a11, 2965982036);
  int v17 = (*(uint64_t (**)(void))(v12 + 8 * (v13 - 143328258)))();
  unsigned int v18 = v17 + 1255822489 - ((v17 << (v16 ^ 5)) & 0x95B4A932);
  *uint64_t v14 = v18;
  int v19 = (((v18 >> 30) ^ 1) + 1255822489 + 319 * (v16 ^ 0x401) - 2 * (((v18 >> 30) ^ 1) & 1) - 1595) ^ v18;
  v14[1] = v15 + 1812433253 * v19 - ((2 - 670100790 * v19) & 0x95B4A932);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * v16))(3624866506, 1812433253, 1025, 319);
}

uint64_t sub_10035E7E0(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, unsigned int a12, uint64_t a13, int a14)
{
  int v20 = *a1 - v18 + *(_DWORD *)(v14 - 0x38C18B7A1BA3131CLL) - 296806356;
  unsigned int v21 = 1759421093
      * ((2 * ((&a11 ^ 0x852F369) & 0x163ED650) - (&a11 ^ 0x852F369) + 1774266795) ^ 0xD2EE6A96);
  a14 = v19 - v21 + 993;
  a11 = ((v19 + 18) ^ 0x32F20D4A) - v21 + v20;
  a12 = v21 + 1845490069;
  a13 = v14;
  uint64_t v22 = (*(uint64_t (**)(unsigned int *))(v17 + 8 * (v19 ^ 0x8B6)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((1314 * (*v16 == v15)) ^ v19)))(v22);
}

uint64_t sub_10035E8D4@<X0>(char a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v7 = v3 + v5;
  *(unsigned char *)(a3 + v7) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v7 + 1) < 0x38) * a2) ^ (5 * (v4 ^ 0x41E)))))();
}

uint64_t sub_10035E914()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1523)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((146 * (STACK[0x550] == 0)) ^ (v0 + 1310))))();
}

uint64_t sub_10035E95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v18 = a16 - 1902603612;
  if (a16 - 1902603612 < 0) {
    int v18 = 1902603612 - a16;
  }
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((35
                                              * ((((int)((v17 ^ 0x77FFEFB8 ^ v18) + ((2 * v18) & 0xEFFFDEB8) - 2013261661) >= 0) ^ ((v17 ^ 0xB6) + 41)) & 1)) ^ v17 ^ 0x6BC)))(1089336478);
}

uint64_t sub_10035E9FC()
{
  return sub_10035EA10(v0 - (v1 & 0xFFFFFFF8));
}

uint64_t sub_10035EA10@<X0>(int a1@<W1>, int a2@<W2>, uint64_t a3@<X4>, int a4@<W8>)
{
  uint64_t v11 = (v8 + v4 - v5 + 75);
  int8x8_t v12 = vrev64_s8(*(int8x8_t *)(v6 + v11));
  *(int8x8_t *)(a3 + v11) = vrev64_s8(vadd_s8(vsub_s8(v12, vand_s8(vadd_s8(v12, v12), v9)), v10));
  return (*(uint64_t (**)(void))(v7 + 8 * ((1299 * (v5 + (a4 ^ (4 * a1)) - 528 == a2)) ^ a1)))();
}

uint64_t sub_10035EA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + v5) = *(void *)(v4 + v5);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 == 0) * v3) ^ v6)))();
}

uint64_t sub_10035EA98(uint64_t a1, int a2)
{
  BOOL v5 = v4 + 210765831 > (v2 - 1656794215);
  if ((v4 + 210765831) < 0xE8095C53 != v2 - 1656794215 < (a2 ^ 0x70Du) - 402041508) {
    BOOL v5 = (v4 + 210765831) < 0xE8095C53;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((1007 * !v5) ^ a2)))();
}

uint64_t sub_10035EB14@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((120 * (a1 != ((v1 + 172) | 0x2C) + 87424303)) ^ v1)))();
}

uint64_t sub_10035EB58()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v4 + ((v2 - 372) | 0xD9) + ((v2 + 370419568) | 0x41804050) + 1166)
                                * (v0 - v1 == 728803687)) ^ v2)))();
}

uint64_t sub_10035EBC4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((26 * (v1 != 1791330438)) ^ 0x169u)))();
}

uint64_t sub_10035EBF8()
{
  int v8 = v0 ^ (v1 + 916);
  *BOOL v5 = v5[623];
  STACK[0x5C8] = v6 ^ 3;
  STACK[0x5D8] = (v2 + 1) + v6;
  *(_DWORD *)(v7 - 148) = v8 + 577799047 - v6;
  *(_DWORD *)(v7 - 144) = v6 ^ (v8 + 577799047) ^ 0x7F;
  *(_DWORD *)(v7 - 128) = -2047004545 - v6 + v8;
  *(_DWORD *)(v7 - 124) = v6 + 1;
  *(_DWORD *)(v7 - 152) = (v8 + 577799083) ^ v6;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v4 + v8 + 2068)))(v7 - 152);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v7 - 112)))(v9);
}

uint64_t sub_10035ECA0()
{
  uint64_t v0 = (uint64_t)*(&off_1022AC750
                + (byte_101D1C020[byte_101D17EE0[(107
                                                                                  * ((qword_102419E28 - dword_10241A028) ^ 0x8A))] ^ 0xD0] ^ (107 * ((qword_102419E28 - dword_10241A028) ^ 0x8A)))
                - 109);
  uint64_t v1 = *(void *)(v0 - 4);
  int v2 = *(&off_1022AC750
       + (byte_101D17BE4[(byte_101D15180[(107 * ((qword_102419E28 + v1) ^ 0x8A))] ^ 0x9A)
                                        - 4] ^ (107 * ((qword_102419E28 + v1) ^ 0x8A)))
       - 33);
  unint64_t v3 = (unint64_t)&v6[v1 + *v2];
  *(void *)(v0 - 4) = 2119093099 * v3 + 0x22F8A8F5CDCFC8ALL;
  *int v2 = 2119093099 * (v3 ^ 0x22F8A8F5CDCFC8ALL);
  unsigned int v8 = 1863
     - 1759421093
     * ((2 * ((&v7 ^ 0x24E4C56D) & 0x13C2A2D) - (&v7 ^ 0x24E4C56D) + 2126763472) ^ 0xE95AA0E9);
  uint64_t v7 = (uint64_t)*(&off_1022AC750
                + ((107 * (*(_DWORD *)(v0 - 4) ^ 0x8A ^ *(_DWORD *)v2)) ^ byte_101D1C020[byte_101D17EE0[(107 * (*(_DWORD *)(v0 - 4) ^ 0x8A ^ *(_DWORD *)v2))] ^ 0xD0])
                - 84);
  unsigned __int8 v4 = 107 * (*(_DWORD *)(v0 - 4) ^ 0x8A ^ *(_DWORD *)v2);
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_1022AC750
                                                        + ((107
                                                                           * ((qword_102419E28 - dword_10241A028) ^ 0x8A)) ^ byte_101D1C020[byte_101D17EE0[(107 * ((qword_102419E28 - dword_10241A028) ^ 0x8A))] ^ 0xB3])
                                                        - 5)
                                              + 8
                                              * (byte_101D1BC24[(byte_101D17AEC[v4 - 12] ^ 0x4D)
                                                                                             - 4] ^ v4)
                                              + 16652))(&v7);
}

uint64_t sub_10035EEDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,unint64_t *a23,unint64_t *a24,unsigned int a25)
{
  a22 = a18;
  a23 = &STACK[0x765012DCA7D407D2];
  a24 = &STACK[0x56530F603BC303EC];
  a25 = (v25 - 772) ^ (1225351577
                     * (((&a21 | 0xC4A46F41) - (&a21 & 0xC4A46F41)) ^ 0xE73EB757));
  uint64_t v27 = (*(uint64_t (**)(char *))(v26 + 8 * (v25 + 983)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * (((v25 - 363) * (a11 < 0x63FF01F3)) ^ v25)))(v27);
}

uint64_t sub_10035EFC4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((((2 * a1) | 0x340440B2) - a1 + 1711136679) ^ 0xF7F63850);
  return (*(uint64_t (**)(void))((char *)*(&off_1022AC750 + (v1 ^ 0x150))
                              + 8 * (((*(void *)a1 == *(void *)(a1 + 8)) * (((v1 - 444) | 0x200) - 522)) ^ v1)
                              - 4))();
}

void sub_10035F040()
{
}

uint64_t sub_10035F060@<X0>(int a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, unint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  BOOL v38 = v24 > v37;
  int v39 = v36 + a4;
  int v40 = v36 + 1;
  uint64_t v41 = 4 * (v40 + a4);
  unint64_t v42 = (*(_DWORD *)(a23 + v41) ^ v23) + (a2 ^ HIDWORD(v29));
  unint64_t v43 = (a5 >> (v27 + 100))
      + v35 * (unint64_t)(*(_DWORD *)(*v33 + v41) ^ v23)
      + ((v42 + a1 - ((2 * v42) & v32)) ^ a3);
  *(_DWORD *)(a23 + 4 * v39) = v43 + v23 - (v25 & (2 * v43));
  if (v38 == v40 + v31 < v28) {
    BOOL v38 = v40 + v31 < v34;
  }
  return (*(uint64_t (**)(void))(v30 + 8 * ((!v38 * v26) ^ v27)))();
}

uint64_t sub_10035F10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (int)((((((v27 - 888) | 8) ^ 0xFFFFFC0B) + v27 + 320) * (v25 == v26)) ^ v27)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_10035F14C()
{
  return sub_100389318();
}

void sub_10035F178()
{
  *(_DWORD *)(v0 - 0x38C18B7A1BA31314) = -605900050;
  JUMPOUT(0x100360EACLL);
}

uint64_t sub_10035F198()
{
  STACK[0x518] = 0;
  LODWORD(STACK[0x53C]) = 1791330438;
  STACK[0x460] = 0;
  LODWORD(STACK[0x4FC]) = 1791330438;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((11 * (v0 ^ 0x4FB) - 1186543632) ^ 0x9A) & 0xBF) == (*(unsigned char *)(v1 - 0x2EA5C8ED901E2B89) - *(unsigned char *)*(&off_1022AC750 + v0 - 1014) + 20))
                                * ((22 * (v0 ^ 0x4FB)) ^ 0x836)) ^ (11 * (v0 ^ 0x4FB)))))();
}

void sub_10035F264()
{
  *int v0 = v1 + 1;
}

uint64_t sub_10035F26C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((172 * (v2 == ((v0 + 1213769706) & 0xB7A755FB) + ((v0 - 203) ^ 0x6DFFE8D4))) ^ v0)))();
}

void sub_10035F2BC(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1374699841 * ((((2 * a1) | 0x97E9331C) - a1 + 873162354) ^ 0xA6008187));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10035F390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  int v23 = v18 - v20 + 507;
  int v24 = 2 * (v18 ^ (v20 + 74));
  int v25 = v22 + v18 + 227;
  BOOL v26 = a18 - 832017747 < (v21 + 1058813557);
  if ((a18 - 832017747) < 0xA9E1BEFB != v21 + 1058813557 < ((v24 - 1444823700) ^ v23)) {
    BOOL v26 = v21 + 1058813557 < ((v24 - 1444823700) ^ v23);
  }
  return (*(uint64_t (**)(void))(v19 + 8 * (v25 ^ (8 * !v26))))();
}

uint64_t sub_10035F3A0()
{
  LODWORD(STACK[0x664]) = v0;
  return sub_100362C38();
}

uint64_t sub_10035F3BC@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,uint64_t a41,uint64_t a42)
{
  return sub_10038C08C(a1, v42 ^ 0x4E5236B8u, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_10035F3F0@<X0>(int a1@<W8>)
{
  uint64_t v6 = 4 * (v1 - 423990108);
  unsigned int v7 = *(_DWORD *)(v2 + 4 * (v1 - 423990109));
  int v8 = (((v7 >> 30) ^ 1) + 1255822489 - 2 * (((v7 >> 30) ^ 1) & 1)) ^ v7;
  int v9 = ((1566083941 * v8 + 1255822489 - ((-1162799414 * v8) & 0x95B4A932)) ^ *(_DWORD *)(v2 + v6)) - v1;
  *(_DWORD *)(v2 + v6) = v9 - ((2 * v9 + 847980216) & 0x95B4A932) + 1679812597;
  unint64_t v10 = STACK[0x410];
  int v11 = (a1 + 1473597032) ^ STACK[0x410];
  *(_DWORD *)(v5 - 160) = (a1 + 1473596949) ^ STACK[0x410];
  *(_DWORD *)(v5 - 172) = v11;
  *(_DWORD *)(v5 - 168) = v11 ^ v3;
  *(_DWORD *)(v5 - 200) = v10 + a1 - 1501686601;
  *(_DWORD *)(v5 - 176) = -(int)v10;
  *(void *)(v5 - 192) = STACK[0x408];
  *(void *)(v5 - 184) = (v1 + 1599767435) ^ v10;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (a1 ^ 0xBF2)))(v5 - 200);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v5 - 164)))(v12);
}

uint64_t sub_10035F514@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  int v10 = v5 + v6 - 620;
  *(_DWORD *)(*v8 + 4 * (a4 + v7 + v10 + a1)) = *(_DWORD *)(*v8 + 4 * (v4 + v10 + 2235));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v4 + v10 + 2234 < a2) * a3) ^ v7)))();
}

uint64_t sub_10035F520(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v14 = v8 + a1 + v11 + v10 - a5 + ((a6 - 1724) ^ v7);
  *(void *)(v12 - 7 + v14) = *(void *)(v6 - 7 + v14);
  return (*(uint64_t (**)(void))(v13
                                           + 8
                                           * (((2 * (a5 - (v9 & 0xFFFFFFF8) == -8)) | (4 * (a5 - (v9 & 0xFFFFFFF8) == -8))) ^ a6)))(a5 - (v9 & 0xFFFFFFF8) + 16);
}

uint64_t sub_10035F580()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 ^ 0x7C6) + 4035) * (v0 == 63)) ^ v1)))();
}

void sub_10035F5B4()
{
  int v0 = *(&off_1022AC750
       + ((107 * (dword_102419E40 ^ 0x8A ^ qword_102419E28)) ^ byte_101D1C020[byte_101D17EE0[(107 * (dword_102419E40 ^ 0x8A ^ qword_102419E28))] ^ 0x12])
       + 14);
  unsigned __int8 v1 = 107 * ((qword_102419E28 + *v0) ^ 0x8A);
  uint64_t v2 = *(&off_1022AC750 + (byte_101D1BD20[byte_101D17CEC[v1 - 12] ^ 1] ^ v1) + 78);
  unint64_t v3 = (*v2 - *v0) ^ (unint64_t)&v5;
  *int v0 = 2119093099 * v3 - 0x22F8A8F5CDCFC8ALL;
  *uint64_t v2 = 2119093099 * (v3 ^ 0x22F8A8F5CDCFC8ALL);
  v6[1] = 108757529
        * (((v6 | 0x51085D1D) - v6 + (v6 & 0xAEF7A2E0)) ^ 0xB1943F36)
        - 504207030;
  LODWORD(v2) = 2119093099 * ((*(_DWORD *)v2 + *(_DWORD *)v0) ^ 0x5CDCFC8A);
  int v4 = (char *)*(&off_1022AC750
               + ((107 * (dword_102419E40 ^ 0x8A ^ qword_102419E28)) ^ byte_101D1BC20[byte_101D17AE0[(107 * (dword_102419E40 ^ 0x8A ^ qword_102419E28))] ^ 0xCD])
               - 42)
     - 4;
  (*(void (**)(_DWORD *))&v4[8
                                      * (byte_101D1C028[(byte_101D17EE0[v2] ^ 0x12)
                                                                       - 8] ^ v2)
                                      + 17560])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10035F7E8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((114
                                * (*(_DWORD *)(a19 + 4 * (a1 + v21 + 2)) == v19
                                                                                          + (v20 ^ 0x3DA)
                                                                                          + 1365
                                                                                          - 1650)) ^ (v20 - 426))))();
}

uint64_t sub_10035F834@<X0>(char a1@<W1>, int a2@<W4>, int a3@<W5>, int a4@<W8>, int8x16_t a5@<Q0>, int8x8_t a6@<D1>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  int v63 = a3 - 8;
  uint64_t v64 = (a2 + v63 + 8);
  v66.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)v63 + 8) & 0xF;
  v66.val[0].i64[1] = (a1 + (_BYTE)v63 + 10 * v61 + 8) & 0xF;
  v66.val[1].i64[0] = (v60 + (_BYTE)v63 + 8) & 0xF;
  v66.val[1].i64[1] = (v59 + (_BYTE)v63 + 8) & 0xF;
  v66.val[2].i64[0] = (v58 + (_BYTE)v63 + 8) & 0xF;
  v66.val[2].i64[1] = (*(_DWORD *)(v62 - 160) + (_BYTE)v63 + 8) & 0xF;
  v66.val[3].i64[0] = (*(_DWORD *)(v62 - 152) + (_BYTE)v63 + 8) & 0xF;
  v66.val[3].i64[1] = (v57 + (_BYTE)v63 + 8) & 0xF;
  *(int8x8_t *)(*(void *)(v62 - 136) + v64) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v56 + (v64 & 0xF) - 7), *(int8x8_t *)(*(void *)(v62 - 128) + v64)), veor_s8(*(int8x8_t *)((v64 & 0xF) + v54 - 3), *(int8x8_t *)((v64 & 0xF) + v55 - 4))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v66, a5), a6)));
  return (*(uint64_t (**)(void))(a54 + 8 * ((1473 * (*(_DWORD *)(v62 - 144) == v63)) ^ a4)))();
}

uint64_t sub_10035F83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  a20 = a9 - 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * ((26 * ((((int)a7 + *(&a20 + 6 * (a9 - 87424924) + 2) + 2157) & 0xFFFFFFFFFFFFFFELL) == ((v20 - 329) ^ 0x121))) ^ v20)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_10035F8EC(int *a1)
{
  unsigned int v2 = a1[1] - 108757529 * (a1 ^ 0xE09C622B);
  uint64_t result = (*(uint64_t (**)(char *, void (*)()))((char *)*(&off_1022AC750 + (int)(v2 ^ 0xE1F269D2))
                                                         + 8 * (int)(v2 ^ 0xE1F2619E)
                                                         - 4))((char *)*(&off_1022AC750 + (int)(v2 ^ 0xE1F26979)) - 4, sub_10036DB24);
  int v4 = *(_DWORD *)*(&off_1022AC750 + (int)(v2 + 504207064));
  if (result) {
    int v4 = -605899900;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_10035F9A8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                 + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ v0) == v0)
                                * ((v3 - 1633821080) & 0x616222F1 ^ 0x1F5)) ^ v3)))();
}

void sub_10035FA00(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a1 + a2) = 1902603612;
  JUMPOUT(0x100359E54);
}

uint64_t sub_10035FA10(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32)
{
  return (*(uint64_t (**)(void))(v33 + 8 * ((14 * ((v32 ^ 0x3B4u) + a4 + a32 < 0xFFFFFFFB)) ^ (v32 + 1958))))();
}

uint64_t sub_10035FA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44 = BYTE4(a36) ^ 0xCB;
  if (v44 == 1)
  {
    BYTE4(a31) = ((8 * a33) ^ 0xE0) - 16 * (a33 & 3) + 24;
    BYTE5(a31) = ((a33 >> 5) ^ 0x4D)
               - ((((a33 >> 5) ^ 0x4D) << (((a3 + 99) & 0x7F) - 62)) & 0x30)
               + 24;
    BYTE6(a31) = ((a33 >> 13) ^ 0x8D) - ((2 * ((a33 >> 13) ^ 0x8D)) & 0x30) + 24;
    HIBYTE(a31) = ((a33 >> 21) ^ 0xB4)
                - 2 * (((a33 >> 21) ^ 0xB4) & 0x1B ^ (a33 >> 21) & 3)
                + 24;
    HIDWORD(v47) = HIDWORD(a32) ^ 0x11;
    LODWORD(v47) = a33;
    LOBYTE(a32) = (v47 >> 29) + (~(2 * (v47 >> 29)) | 0xCF) + 25;
    BYTE1(a32) = ((HIDWORD(a32) >> 5) ^ 0xC9) - ((2 * ((HIDWORD(a32) >> 5) ^ 0xC9)) & 0x30) + 24;
    BYTE2(a32) = (~(HIDWORD(a32) >> 12) | 0xCF) + (HIDWORD(a32) >> 13) + 25;
    unsigned int v46 = ((HIDWORD(a32) >> 21) ^ 0xFFFFFFE3) - ((HIDWORD(a32) >> 20) & 0x30) + 24;
    goto LABEL_5;
  }
  if (v44 == 2)
  {
    BYTE4(a31) = ((a6 + a3 + 62) ^ (HIDWORD(a32) >> 21) ^ 0xDC) - ((HIDWORD(a32) >> 20) & 0x30) + 24;
    BYTE5(a31) = (HIDWORD(a32) >> 13) - ((HIDWORD(a32) >> 12) & 0x30) + 24;
    BYTE6(a31) = ((HIDWORD(a32) >> 5) ^ 0xC9) - 2 * (((HIDWORD(a32) >> 5) ^ 0xC9) & 0x1E ^ (HIDWORD(a32) >> 5) & 6) + 24;
    HIDWORD(v45) = HIDWORD(a32) ^ 0x11;
    LODWORD(v45) = a33;
    HIBYTE(a31) = (v45 >> 29) - ((2 * (v45 >> 29)) & 0x30) + 24;
    LOBYTE(a32) = ((a33 >> 21) ^ 0xB4) - ((2 * ((a33 >> 21) ^ 0xB4)) & 0x30) + 24;
    BYTE1(a32) = ((a33 >> 13) ^ 0x8D) - ((2 * ((a33 >> 13) ^ 0x8D)) & 0x30) + 24;
    BYTE2(a32) = ((a33 >> 5) ^ 0x4D) - ((2 * ((a33 >> 5) ^ 0x4D)) & 0x30) + 24;
    LOBYTE(v46) = ((8 * a33) ^ 0xE0) + (~(16 * a33) | 0xCF) + 25;
LABEL_5:
    BYTE3(a32) = v46;
  }
  return sub_100385D8C(a1, 2457039158, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

void sub_10035FCA0(uint64_t a1)
{
  int v1 = 235795823 * (((a1 | 0x1A7DF74B) - (a1 | 0xE58208B4) - 444462924) ^ 0x8ED0BE12);
  int v2 = *(_DWORD *)(a1 + 40) ^ v1;
  int v3 = *(_DWORD *)a1 ^ v1;
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 56);
  int v6 = *(_DWORD *)(a1 + 64) - v1;
  unsigned int v7 = 1374699841 * ((&v9 & 0xD57671FD | ~(&v9 | 0xD57671FD)) ^ 0x477D960B);
  uint64_t v15 = *(void *)(a1 + 8);
  int v10 = v7 ^ (v2 + 1695026651);
  unsigned int v16 = v6 - v7 - ((2 * v6 - 1059869988) & 0x8BCC65CA) + 642779219;
  int v14 = (v3 - ((2 * v3 + 50601734) & 0x6F8E752) - 2063695060) ^ v7;
  uint64_t v11 = v5;
  uint64_t v13 = v4;
  uint64_t v9 = v5;
  int v8 = (char *)*(&off_1022AC750 + (v2 ^ 0x3B9)) - 4;
  (*(void (**)(uint64_t *))&v8[8 * v2 + 12160])(&v9);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10035FE60@<X0>(int a1@<W0>, int a2@<W3>, uint64_t a3@<X8>)
{
  int v11 = v8 + v7 + v6 - a1;
  *(void *)(v3 - 7 + v11 + ((a2 - 462) ^ v4)) = *(void *)(a3 - 7 + v11 + ((a2 - 462) ^ v4));
  return (*(uint64_t (**)(void, void))(v10 + 8 * ((1473 * (a1 - (v5 & 0xFFFFFFF8) == -8)) ^ a2)))((v11 - 8), v9 - (v5 & 0xFFFFFFF8));
}

uint64_t sub_10035FEBC()
{
  return sub_10035FEE0();
}

uint64_t sub_10035FEE0(uint64_t result)
{
  *(_DWORD *)(*(void *)(result + 8) - 0x41C0C6A038046E59) = v1;
  return result;
}

uint64_t sub_10035FEFC(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (1755732067 * ((a1 & 0xECFD530 | ~(a1 | 0xECFD530)) ^ 0x2FF69714));
  return (*(uint64_t (**)(void))((char *)*(&off_1022AC750 + v1 - 2028)
                              + 8 * (((*(void *)(a1 + 8) != 0x38C18B7A1BA3132CLL) * ((v1 - 1829) ^ 0x148)) ^ v1)
                              - 4))();
}

uint64_t sub_10035FF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                               + 8
                                                                               * (((v7 != a7) * (73 * (v8 ^ 0x34C) - 120)) ^ v8)))(a1, a2, a3, a4, 4 * (v8 ^ 0x2B7u));
}

uint64_t sub_10035FFD4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((219 * (v2 == ((7 * (v1 ^ 0x86F)) ^ 0x6731FFE6))) ^ v1)))();
}

uint64_t sub_100360038@<X0>(uint64_t a1@<X1>, unint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  unint64_t v27 = (a2 >> ((v24 ^ 0xADu) + 3)) + (a1 ^ HIDWORD(v25)) + (*(_DWORD *)(a22 + a7) ^ v22);
  *(_DWORD *)(a22 + 4 * a8) = v27 + v22 - (v23 & (2 * v27));
  *(_DWORD *)(a22 + a7) = HIDWORD(v27) + v22 - ((2 * HIDWORD(v27)) & 0x1DBE93C);
  BOOL v29 = a17 + 1965596686 < 1076386573 && a17 + 1965596686 >= a12;
  return (*(uint64_t (**)(void))(v26 + 8 * (v24 ^ (101 * v29))))();
}

uint64_t sub_1003600E0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v13 = v10 + v9 + a1 + ((v7 + a6 + 1053) | 0x604u);
  long long v14 = *(_OWORD *)(v6 + v13 - 15);
  long long v15 = *(_OWORD *)(v6 + v13 - 31);
  uint64_t v16 = v11 + v13;
  *(_OWORD *)(v16 - 15) = v14;
  *(_OWORD *)(v16 - 31) = v15;
  return (*(uint64_t (**)(void))(v12 + 8 * (((v8 & 0xFFFFFFE0) == 32) ^ (v7 + a6 + 1923))))();
}

uint64_t sub_100360138()
{
  return (*(uint64_t (**)(void))(v0
                              + 8 * ((3381 * (((((v1 + 420) | 0x101) - 1189) | 0x200) == 632)) ^ ((v1 + 420) | 0x101))))();
}

uint64_t sub_1003601B4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((38 * (((v0 - 79) ^ (v1 > 0x82)) & 1)) ^ (v0 + 1270))))();
}

void sub_100360204(uint64_t a1, uint64_t a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100360278(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((23 * (((v3 == v4) ^ (a3 + a3 - 75)) & 1)) ^ a3)))();
}

uint64_t sub_1003602BC(uint64_t a1, int a2)
{
  unsigned int v4 = (((27 * (a2 ^ 0x55F)) ^ 0xBE55E047) + 516 * (a2 ^ 0x56B)) ^ v2;
  return (*(uint64_t (**)(void, uint64_t))(v3 + 8 * ((237 * (v4 != 0)) ^ a2)))(v4 - 1792, 54142167);
}

uint64_t sub_100360324@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,char a33,uint64_t a34,char a35,uint64_t a36,char a37)
{
  uint64_t v41 = &a25 + v38;
  char v59 = &a27 + v38;
  char v58 = &a21 + v38;
  char v57 = &a37 + v38;
  uint64_t v56 = &a33 + v38;
  uint64_t v55 = &a29 + v38;
  uint64_t v54 = &a35 + v38;
  int v42 = &a31 + v38;
  int v43 = v37 - 272;
  uint64_t v44 = a1[5];
  uint64_t v62 = a1[4];
  uint64_t v45 = *a1;
  int v46 = (v37 - 272) ^ 0x230;
  int v47 = v46 + 1981;
  uint64_t v48 = *(void *)(*a1 - 0x18E42E334670A158);
  *(void *)(v40 - 144) = *a1;
  *(void *)(v40 - 136) = a3;
  *(_DWORD *)(v40 - 112) = v43
                         + 42
                         + 1224239923
                         * ((2 * (((v40 - 144) ^ 0xA8FDC33E) & 0x7EE300AA) - ((v40 - 144) ^ 0xA8FDC33E) + 18677589) ^ 0x5B52C1BC);
  int v49 = 289 * v46;
  *(void *)(v40 - 128) = v41;
  *(void *)(v40 - 120) = v44;
  *(void *)(v40 - 104) = v48;
  uint64_t v60 = 8 * (v43 + 1700);
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  *(void *)(v40 - 120) = v41;
  *(void *)(v40 - 112) = v45;
  *(_DWORD *)(v40 - 144) = (v43 + 145) ^ (1225351577
                                        * ((((v40 - 144) | 0x5239BC64) - ((v40 - 144) & 0x5239BC64)) ^ 0x71A36472));
  *(void *)(v40 - 136) = v44;
  *(void *)(v40 - 128) = v42;
  (*(void (**)(uint64_t))(v39 + 8 * (v43 ^ 0xAE0)))(v40 - 144);
  *(_DWORD *)(v40 - 112) = v43
                         + 42
                         + 1224239923
                         * ((((v40 - 144) | 0x595B079F) - (v40 - 144) + ((v40 - 144) & 0xA6A4F860)) ^ 0xABE8FA48);
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 128) = v59;
  *(void *)(v40 - 120) = v44;
  *(void *)(v40 - 104) = v41;
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  *(void *)(v40 - 104) = v59;
  *(void *)(v40 - 128) = v58;
  *(void *)(v40 - 120) = v44;
  *(_DWORD *)(v40 - 112) = v43
                         + 42
                         + 1224239923 * (((v40 - 144) & 0x3BB37F04 | ~((v40 - 144) | 0x3BB37F04)) ^ 0x36FF7D2C);
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  *(void *)(v40 - 104) = v58;
  *(_DWORD *)(v40 - 112) = v43
                         + 42
                         + 1224239923
                         * ((((v40 - 144) ^ 0x37A6533F) - 153833405 - 2 * (((v40 - 144) ^ 0x37A6533F) & 0xF6D4B043)) ^ 0x33C11EAB);
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 128) = v57;
  *(void *)(v40 - 120) = v44;
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  *(void *)(v40 - 104) = v57;
  *(_DWORD *)(v40 - 112) = v43 + 42 + 1224239923 * ((v40 - 144) ^ 0xF2B3FDD7);
  *(void *)(v40 - 128) = v56;
  *(void *)(v40 - 120) = v44;
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  *(void *)(v40 - 128) = v55;
  *(void *)(v40 - 120) = v44;
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(_DWORD *)(v40 - 112) = v43
                         + 42
                         + 1224239923
                         * (((((v40 - 144) | 0x64E59E14) ^ 0xFFFFFFFE) - (~(v40 - 144) | 0x9B1A61EB)) ^ 0x69A99C3C);
  *(void *)(v40 - 104) = v56;
  uint64_t v50 = 8 * (v43 ^ 0xAEC);
  (*(void (**)(uint64_t))(v39 + v50))(v40 - 144);
  *(_DWORD *)(v40 - 112) = v43
                         + 42
                         + 1224239923 * ((((v40 - 144) | 0x86AC62B3) + (~(v40 - 144) | 0x79539D4C)) ^ 0x741F9F65);
  *(void *)(v40 - 128) = v54;
  *(void *)(v40 - 120) = v44;
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 104) = v55;
  (*(void (**)(uint64_t))(v39 + v50))(v40 - 144);
  *(void *)(v40 - 104) = v54;
  *(_DWORD *)(v40 - 112) = v43
                         + 42
                         + 1224239923 * ((((v40 - 144) | 0xBB11C9DF) + (~(v40 - 144) | 0x44EE3620)) ^ 0x49A23409);
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 128) = v42;
  *(void *)(v40 - 120) = v44;
  (*(void (**)(uint64_t))(v39 + v60))(v40 - 144);
  uint64_t v51 = *(void *)(v45 - 0x18E42E334670A160);
  *(_DWORD *)(v40 - 128) = v43
                         + 1374699841
                         * ((1834202156
                           - ((v40 - 144) ^ 0xF8ADEB70 | 0x6D53B42C)
                           + ((v40 - 144) ^ 0xF8ADEB70 | 0x92AC4BD3)) ^ 0x7F5B8AA)
                         - 110;
  *(void *)(v40 - 144) = v51;
  *(void *)(v40 - 136) = a2;
  (*(void (**)(uint64_t))(v39 + 8 * (v43 ^ 0xAF3)))(v40 - 144);
  *(void *)(v40 - 136) = v62;
  *(_DWORD *)(v40 - 144) = v43 + 235795823 * ((v40 - 144) ^ 0x94AD4959) + 146;
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(v39 + 8 * (v43 + 1692)))(v40 - 144);
  return (*(uint64_t (**)(uint64_t))(v39
                                            + 8
                                            * ((99 * ((v47 ^ 0xB812663D) + *(_DWORD *)(v40 - 140) + v49 < 0x7FFFFFFF)) ^ v43)))(v52);
}

uint64_t sub_10036086C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  return (*(uint64_t (**)(void))(v34 + 8 * ((14 * ((v33 ^ 0x3B4u) + a4 + a33 < 0xFFFFFFFB)) ^ (v33 + 1958))))();
}

uint64_t sub_1003608B4@<X0>(int a1@<W6>, int a2@<W7>, unsigned int a3@<W8>)
{
  int v9 = (unsigned int *)(v8 + 4 * v3);
  unsigned int v10 = v4 & 0x80000000;
  uint64_t v11 = v3 + 1;
  int v12 = *(_DWORD *)(v8 + 4 * v11);
  unsigned int v13 = ((v12 & 0x7FFFFFFE | v10) >> (a3 ^ 0xDD)) ^ v5;
  *int v9 = v9[397] ^ v6 ^ *((_DWORD *)&STACK[0x538] + ((v12 & 1) == 0)) ^ (v13 + a2 - (a1 & (2 * v13)));
  return (*(uint64_t (**)(void))(v7 + 8 * (((16 * (v11 != 227)) | (32 * (v11 != 227))) ^ a3)))();
}

uint64_t sub_10036092C(int a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((29 * (v3 < ((a1 + 813 - v2 + 1548484554) & 0x5B6156FD ^ 0x2FCu))) ^ (a1 + 813))))();
}

uint64_t sub_100360980@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v3 - 0x1F010F7499D3F79ELL) + 4 * (v5 - 1397558080)) = *(_DWORD *)(*(void *)(v4 - 0x1F010F7499D3F79ELL)
                                                                                            + 4 * (v5 - 1397558080));
  return (*(uint64_t (**)(void))(a1 + 8 * ((731 * ((v2 ^ 0x472) + v5 - 457 == v1)) ^ v2)))();
}

uint64_t sub_1003609E8@<X0>(int a1@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1650));
  return v3(v1);
}

void sub_100360A18()
{
}

uint64_t sub_100360A30@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((101 * (a1 + v2 + v1 + 69 + 585 < ((2 * v1) ^ 0x9Cu) + 2147482453)) ^ v1)))();
}

uint64_t sub_100360A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  *(unsigned char *)(v11 + (v14 + v12)) = *(unsigned char *)(a9 + (v14 + v12)) ^ (v17 - 70);
  return (*(uint64_t (**)(void))(v16 + 8 * (((v14 + 1 + v12 >= (a11 ^ v15)) * v13) ^ v17)))();
}

uint64_t sub_100360ABC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v0 + 8) == 0x3B6240245EEB6D72)
                                * ((((v1 + 445) | 0x30) ^ 0x1BF) + ((v1 - 1601544146) & 0x5F759FBF))) ^ v1)))();
}

uint64_t sub_100360B20@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12 + 8 * (((((a11 - 1590) | 0xB3) - 182) * (a1 == v11)) ^ a11)))();
}

void sub_100360B54(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) ^ (1755732067 * (((a1 | 0x83D72B3C) - (a1 & 0x83D72B3C)) ^ 0x5D1196E7));
  uint64_t v4 = *(void *)(a1 + 8);
  v3[0] = v1
        + 628203409
        * (((v3 | 0x67E20BBA) - v3 + (v3 & 0x981DF440)) ^ 0xE56A0789)
        - 426;
  uint64_t v2 = (char *)*(&off_1022AC750 + (v1 ^ 0x272)) - 4;
  (*(void (**)(_DWORD *))&v2[8 * v1 + 12240])(v3);
  __asm { BRAA            X8, X17 }
}

void sub_100360CA8()
{
  if (v0 == 1489890372) {
    int v1 = 605940026;
  }
  else {
    int v1 = -605900062;
  }
  *(_DWORD *)(v2 + 32) = v1;
}

uint64_t sub_100360D0C@<X0>(int a1@<W0>, int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  *(unsigned char *)(v4 + (v6 ^ a2 ^ v8) + a1) = *(unsigned char *)(v5 + (v6 ^ a2 ^ v8) + a1)
                                       - ((2 * *(unsigned char *)(v5 + (v6 ^ a2 ^ v8) + a1)) & 0x30)
                                       + 24;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 - 1 == a4) * a3) | v6)))();
}

uint64_t sub_100360D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((60 * (v8 + 1 == v10 + 48)) ^ a7)))(v7);
}

uint64_t sub_100360E40(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8 = (*(uint64_t (**)(void, void, void))(v5 + 8 * (a4 ^ 0x9C9)))(*v6, *v7, (a4 ^ 0x557u) - 774298894 + *(_DWORD *)(v4 - 0x38C18B7A1BA31324));
  return sub_100360E90(v8);
}

void sub_100360E90()
{
  *uint64_t v4 = v3;
  *(_DWORD *)(v0 - 0x38C18B7A1BA31324) = v2;
  _DWORD *v1 = v2;
}

uint64_t sub_100360EC8()
{
  LODWORD(STACK[0x294]) = v1;
  LODWORD(STACK[0x27C]) = v2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((89 * ((18 * (v0 ^ 0x73A)) ^ 0x2E1) + 2013810154) & 0x87F7B3FF ^ 0x2FA)
                                     * ((LODWORD(STACK[0x56C]) - 1791332487) > 0xFFFFF7FE)) ^ (18 * (v0 ^ 0x73A)))))();
}

uint64_t sub_100360F40@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + v1 + v5) = v7;
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((218 * (((v2 + 723916522) & v4 ^ 0x142) == (v3 & 0xFFFFFFFFFFFFFFF8))) ^ v2)))();
}

uint64_t sub_100360F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((1945
                                * ((*(unsigned char *)(v10 + (v9 - 404244979 + ((v8 + 1829) ^ 0xA87) - 757) * (uint64_t)a8 + 40) & 8) == 0)) ^ v8)))();
}

uint64_t sub_100360FE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = (v3 + v4);
  int v8 = *(unsigned __int8 *)(v1 + v7) ^ 0x18;
  int v9 = ((*(unsigned __int8 *)(v1 + (v7 + 2)) ^ ((v2 ^ 0x6B) + 35)) << 16) | ((*(unsigned __int8 *)(v1 + (v7 + 3)) ^ 0x18) << 24) | v8 | ((*(unsigned __int8 *)(v1 + (v7 + 1)) ^ 0x18) << 8);
  *(_DWORD *)(a1 + v7) = v9 + v6 - 2 * (v9 & (v6 + 4) ^ v8 & 4);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1663 * ((v3 + 4 + v4) < 0x40)) ^ v2)))();
}

uint64_t sub_10036107C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 - a1 >= ((v2 - 378532579) & 0x168FF76F ^ 0x567uLL))
                                * (((v2 - 687751445) & 0x28FE485B) - 1614)) ^ v2)))();
}

void sub_1003610DC(int a1@<W8>, int a2, __int16 a3, char a4, char a5, char a6, char a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,char a25,char a26,char a27,char a28,char a29,char a30,char a31,char a32,char a33,char a34,char a35,char a36,char a37,char a38,char a39,char a40,char a41,char a42,char a43,char a44,char a45,char a46,char a47,char a48,char a49,char a50,char a51,char a52,char a53)
{
  char v59 = *(unsigned int **)(v57 + 8 * (a1 ^ 0x5B9));
  uint64_t v60 = *(void *)(v57 + 8 * (a1 - 1443));
  uint64_t v61 = *v59;
  uint64_t v62 = *(unsigned char **)(v60 - 4);
  a4 = *v62 - 37;
  a5 = v62[1] - 37;
  a6 = v62[2] - 37;
  a7 = v62[3] - 37;
  a8 = v62[4] - 37;
  a9 = v62[5] - 37;
  a10 = v62[6] - 37;
  a11 = v62[7] - 37;
  a12 = v62[8] - 37;
  a13 = v62[9] - 37;
  a14 = v62[10] - 37;
  a15 = v62[11] - 37;
  a16 = v62[12] - 37;
  a17 = v62[13] - 37;
  a18 = v62[14] - 37;
  a19 = v62[15] - 37;
  a20 = v62[16] - 37;
  a21 = v62[17] - 37;
  a22 = v62[18] - 37;
  a23 = v62[19] - 37;
  a24 = v62[20] - 37;
  a25 = v62[21] - 37;
  int v63 = *(unsigned char **)(v60 - 4);
  a26 = v63[22] - 37;
  a27 = v63[23] - 37;
  a28 = v63[24] - 37;
  a29 = v63[25] - 37;
  a30 = v63[26] - 37;
  a31 = v63[27] - 37;
  a32 = v63[28] - 37;
  a33 = v63[29] - 37;
  uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v56 + 8 * (a1 + 762)))(v61, &a4, v53);
  int v71 = ((2 * v64) & 0xEFFFC9EC) + (v64 ^ 0xF7FFE4F6);
  if (v71 == -134224650)
  {
    *(_DWORD *)(v58 + 352) |= 3 * (v55 ^ 0x582) - 236;
    *(_DWORD *)(v58 + 52) = 148787602;
    (*(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * (v55 ^ 0xCDE)))(*v53, v58 + 340, v58 + 344, v58 + 348, v54);
    sub_10035B02C();
  }
  else
  {
    if (v71 == -134223548)
    {
      uint64_t v72 = *v59;
      unint64_t v73 = *(unsigned char **)(*(void *)(v57 + 8 * (v55 - 1389)) - 4);
      a34 = *v73 - 12;
      a35 = v73[1] - 12;
      a36 = v73[2] - 12;
      a37 = v73[3] - 12;
      a38 = v73[4] - 12;
      a39 = v73[5] - 12;
      a40 = v73[6] - 12;
      a41 = v73[7] - 12;
      a42 = v73[8] - 12;
      a43 = v73[9] - 12;
      a44 = v73[10] - 12;
      a45 = v73[11] - 12;
      a46 = v73[12] - 12;
      a47 = v73[13] - 12;
      a48 = v73[14] - 12;
      a49 = v73[15] - 12;
      a50 = v73[16] - 12;
      a51 = v73[17] - 12;
      a52 = v73[18] - 12;
      a53 = v73[19] - 12;
      uint64_t v64 = (*(uint64_t (**)(uint64_t, char *, unsigned int *))(v56 + 8 * (v55 + 762)))(v72, &a34, v53);
      int v74 = (2 * v64) & 0x6FE75FF4;
      int v71 = (v64 ^ 0x37F3AFFA) - 133896;
    }
    else
    {
      int v74 = 1072807932;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56
                                                                                          + 8
                                                                                          * ((500
                                                                                            * (v71 + v74 == v55 + 938581794)) ^ (v55 - 1242))))(v64, v65, v66, v67, v68, v69, v70);
  }
}

void sub_100361480()
{
  _DWORD *v1 = -891661159;
  (*(void (**)(unint64_t))(v2 + 8 * (v0 + 2147)))(STACK[0x430]);
  JUMPOUT(0x1003614B8);
}

uint64_t sub_10036160C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((((((v8 + a6) & (v11 + 106)) ^ ((*(unsigned char *)(v10 + 1 + a8)
                                                                                                  - *(unsigned char *)(v9 + 1)) == 12)) & 1)
                                * (((v8 + a6 + v11) | 0x104) ^ a7)) ^ (v8 - 5))))();
}

uint64_t sub_100361618()
{
  STACK[0x530] = STACK[0x390];
  return ((uint64_t (*)(void))STACK[0x3D8])();
}

uint64_t sub_100361630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,int a21)
{
  uint64_t v30 = &a21 + 6 * v22;
  v30[2] = v23;
  v30[3] = v28;
  *((void *)v30 + 2) = v24;
  v30[6] = a19;
  a21 = v21 + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * (((*(_DWORD *)(v25 + 48 * v27 + 32) + ((a9 + 1404355292) & 0xAC4B3E76 ^ 0x7DECDE07) < 0x80000004) * (v29 + ((a9 + 1367345185) | 0x6146010) + 1226)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_1003616D4(uint64_t a1)
{
  int v1 = 1759421093 * ((~a1 & 0xA201450D | a1 & 0x5DFEBAF2) ^ 0x117CF559);
  int v2 = *(_DWORD *)(a1 + 8) - v1;
  unsigned int v3 = *((_DWORD *)*(&off_1022AC750 + (v2 ^ 0x11D)) + 85);
  unsigned int v4 = (*(_DWORD *)(a1 + 16) ^ v1) - 279936695;
  if (v4 < 0x2BE117AF != v3 > 0xD41EE850) {
    BOOL v5 = v3 > 0xD41EE850;
  }
  else {
    BOOL v5 = v3 + 736171951 > v4;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1022AC750 + v2 - 235) + 8 * ((!v5 * (v2 ^ 0x1C5)) ^ v2) - 4))();
}

uint64_t sub_1003617B8()
{
  unsigned int v6 = 628203409 * ((~(v0 | 0xB5E866C8) + (v0 & 0xB5E866C8)) ^ 0xC89F9504);
  unsigned int v7 = LODWORD(STACK[0x47C]) - v6 - ((2 * LODWORD(STACK[0x47C]) + 521048098) & 0x82ECE908) + 1358806165;
  *(void *)(v5 - 176) = STACK[0x4D8];
  *(void *)(v5 - 168) = v1 + 0x1E6EF7153090DC6;
  *(_DWORD *)(v5 - 200) = v3 - v6 + 368400066;
  *(void *)(v5 - 192) = v1 + 0x5D591B602CF26CD4;
  *(_DWORD *)(v5 - 184) = v2 - v6 + 608716399;
  *(_DWORD *)(v5 - 180) = v7;
  *(void *)(v5 - 152) = STACK[0x378];
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v3 + 2109)))(v5 - 200);
  int v9 = *(_DWORD *)(v5 - 160);
  LODWORD(STACK[0x48C]) = v9;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8 * ((2160 * (v9 == ((v3 + 963493520) & 0xC69243F5) + 605939269)) ^ v3)))(v8);
}

uint64_t sub_1003618EC(uint64_t a1)
{
  BOOL v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 ^ 0xCDB)))(a1, 4182676990) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 * (((v1 - 869) | 8) - 177)) ^ v1)))();
}

uint64_t sub_100361944()
{
  STACK[0x540] = *(void *)(v1 + 8 * v0);
  return sub_10038EBF8();
}

uint64_t sub_100361970()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 + 1664)))(16);
  uint64_t v4 = (uint64_t *)*(&off_1022AC750 + (v2 ^ 0x2B3));
  *uint64_t v4 = v3;
  (*(void (**)(void))(v1 + 8 * (v2 + 1627)))();
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0xB80)))(8);
  uint64_t v6 = (uint64_t)*(&off_1022AC750 + (v2 ^ 0x28C));
  *(void *)(v6 - 4) = v5;
  *uint64_t v5 = 0xBDBDBDBDBDBDBDBDLL;
  uint64_t v7 = (uint64_t)*(&off_1022AC750 + (v2 & 0x2933396F));
  *(_DWORD *)(v7 + 4) = 0;
  *(_DWORD *)*(&off_1022AC750 + (v2 ^ 0x2C2)) = 0;
  uint64_t v8 = (unsigned char *)*v4;
  int v9 = *(unsigned char **)(v6 - 4);
  v9[6] = 26;
  *uint64_t v8 = -77;
  void v9[4] = -34;
  uint64_t v10 = *(&off_1022AC750 + (v2 ^ 0x2CA));
  void v10[2] = -85;
  v10[9] = -124;
  *(unsigned char *)(v7 + 29) = 68;
  v10[14] = 92;
  void v8[4] = 73;
  void v10[4] = -11;
  *(unsigned char *)(v7 + 28) = 83;
  *(unsigned char *)*(&off_1022AC750 + (v2 ^ 0x205)) = -113;
  v8[1] = 80;
  *(unsigned char *)*(&off_1022AC750 + v2 - 531) = 88;
  v10[13] = -53;
  *(unsigned char *)*(&off_1022AC750 + (v2 ^ 0x22D)) = 1;
  _DWORD v8[2] = -44;
  *(unsigned char *)*(&off_1022AC750 + (v2 ^ 0x28F)) = v0;
  void v9[2] = 80;
  v8[6] = -11;
  *(unsigned char *)*(&off_1022AC750 + v2 - 620) = 25;
  *(unsigned char *)*(&off_1022AC750 + v2 - 486) = 39;
  void v8[5] = -22;
  void v8[3] = -15;
  v10[8] = -126;
  *(unsigned char *)(v7 + 14) = -52;
  v10[15] = 33;
  *(unsigned char *)*(&off_1022AC750 + v2 - 591) = -109;
  v8[13] = 99;
  *(unsigned char *)*(&off_1022AC750 + v2 - 604) = 119;
  v9[7] = -80;
  *int v9 = -122;
  v8[8] = 34;
  uint64_t v10[7] = 99;
  v8[11] = 54;
  *(unsigned char *)(v7 + 15) = 3;
  void v9[5] = -5;
  v9[1] = 73;
  *(unsigned char *)(v7 + 16) = -36;
  *(unsigned char *)uint64_t v7 = 23;
  void v9[3] = 59;
  int v11 = (unsigned char *)*v4;
  unsigned char v11[10] = 45;
  v11[15] = -87;
  unsigned char *v10 = -64;
  v10[11] = 104;
  *(unsigned char *)(v7 + 25) = -92;
  v10[5] = 61;
  v10[10] = -60;
  *(unsigned char *)(v7 + 27) = 52;
  *(v10 - 4) = 21;
  uint64_t v12 = v10 - 4;
  *(_WORD *)(v7 + 10) = -3774;
  *(unsigned char *)(v7 + 22) = -121;
  *(unsigned char *)(v7 + 20) = 77;
  *(unsigned char *)(v7 + 26) = 113;
  v11[9] = 31;
  unsigned char v10[16] = -21;
  v10[6] = 20;
  *(unsigned char *)(v7 + 8) = -85;
  v12[2] = -115;
  v10[1] = 61;
  *(unsigned char *)(v7 + 2) = 34;
  v10[12] = -23;
  v11[12] = -86;
  uint64_t v12[3] = 22;
  v11[7] = -90;
  v11[14] = -33;
  *(unsigned char *)(v7 + 21) = -105;
  *(unsigned char *)(v7 + 3) = -98;
  v10[3] = -60;
  *(unsigned char *)(v7 + 24) = -119;
  *(unsigned char *)(v7 + 30) = 58;
  *(unsigned char *)(v7 + 12) = 73;
  *(unsigned char *)(v7 + 1) = -15;
  v12[1] = -84;
  *(unsigned char *)(v7 + 19) = 120;
  *(unsigned char *)(v7 + 13) = 69;
  *(_WORD *)(v7 + 17) = -4168;
  *(unsigned char *)(v7 + 9) = -105;
  *(unsigned char *)(v7 + 23) = 79;
  return (*(uint64_t (**)(unint64_t, unint64_t))(v1
                                                                       + 8
                                                                       * ((((v2 ^ 0x664) - 1273) | 0x132) ^ 0xCC ^ v2 ^ 0x664)))(0xC41545B8FEEA0291, 0xFEBC9BFF7FF7DDDBLL);
}

uint64_t sub_10036228C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((55 * ((v0 + 1) < 0x14)) ^ v1)))();
}

void sub_1003622A4()
{
}

void sub_1003622B0()
{
}

void sub_10036237C()
{
  *int v0 = 1902603612;
}

uint64_t sub_100362388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((((v8 ^ 0x42C) - 679) | 0x68D) ^ 0x6F8) * ((unint64_t)(a7 - a5 - 1167) < 0x20)) ^ v8 ^ 0x42C)))();
}

uint64_t sub_1003623D4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(void *)(&a19 + a2 + a1) = 0x1818181818181818;
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((22
                                * (((v20 - 1422) ^ 0x85) != (((v20 - 14) ^ 0xFFFFFFFFFFFFF9F5) & v19))) ^ (v20 - 14))))();
}

void sub_100362430(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100362468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25)
{
  return (*(uint64_t (**)(uint64_t, void))(v27 + 8 * v25))(a1, (v26 ^ 0x20000794) & a25);
}

uint64_t sub_1003624E8(uint64_t a1)
{
  int v2 = 1374699841 * (a1 ^ 0x6DF41809);
  int v3 = *(_DWORD *)(a1 + 8) ^ v2;
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 16);
  int v7 = *(_DWORD *)(a1 + 56) + v2;
  unsigned int v8 = 1224239923 * ((((2 * &v10) | 0x6A1D805E) - &v10 + 1257324497) ^ 0x47BD3DF8);
  v3 -= 1695027300;
  uint64_t v10 = *(void *)a1;
  int v11 = (v7 ^ 0x7F11C69A) - v8 + ((2 * v7) & 0x75EFE8FE ^ 0x1CC60CA) - 1306644;
  uint64_t v12 = v5;
  uint64_t v13 = v4;
  int v16 = v3 + v8 + 931;
  uint64_t v14 = v6;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_1022AC750 + v3) + 8 * v3 + 17076))(&v10);
  *(_DWORD *)(a1 + 24) = v15;
  return result;
}

uint64_t sub_100362634()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ 0xA1D)))();
  LODWORD(STACK[0x4EC]) = v0;
  return (*(uint64_t (**)(uint64_t, __n128))(v3 + 8 * (((v1 ^ 0x3CA) * v2) ^ (v1 + 824))))(v4, (__n128)0);
}

void sub_1003626A0()
{
  STACK[0x430] = v0;
  *(_DWORD *)(STACK[0x690] + ((LODWORD(STACK[0x598]) + v2) & 0xFFFFFFFC)) = v1;
  JUMPOUT(0x10038ED70);
}

uint64_t sub_1003626D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return sub_1003626E4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

uint64_t sub_1003626E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int8x16_t v14 = *(int8x16_t *)(v11 + (v5 + v8 + v7));
  *(int8x16_t *)(a5 + v7) = vaddq_s8(vaddq_s8(v14, v13), vmvnq_s8(vandq_s8(vaddq_s8(v14, v14), v12)));
  return (*(uint64_t (**)(void))(v10 + 8 * (((v7 + 16 == ((v6 - 112417888) & 0x6B35C6F) - 15) * v9) ^ (v6 + 1295))))();
}

void sub_100362748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4) {
    BOOL v5 = a5 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v6 = v5;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1003627C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, int a12, int a13)
{
  int v17 = v15 - 1743179230;
  if ((v15 - 1743179230) <= 0x40) {
    int v17 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16
                                                     + 8
                                                     * ((31
                                                       * (1743178490 - v13 - v14 + v17 + 20 * a12 < (a11 & 0xA7F28377) - 322)) ^ a13)))(a1, 193659435);
}

uint64_t sub_100362844@<X0>(int a1@<W5>, int a2@<W7>, int a3@<W8>)
{
  if ((a3 - 1210380900) > 0x12)
  {
    int v6 = STACK[0x43C];
  }
  else
  {
    int v6 = STACK[0x43C];
    if (((1 << (a3 - 100)) & 0x40425) != 0) {
      return (*(uint64_t (**)(void))(v5
    }
                                  + 8
                                  * ((106
                                    * ((((LODWORD(STACK[0x43C]) ^ 0xFFFFF8F6) + LODWORD(STACK[0x43C]) + 777) & *(_DWORD *)(v4 + v3 * (uint64_t)a2 + 40)) != 0)) ^ (LODWORD(STACK[0x43C]) + 554))))();
  }
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((*(unsigned char *)(v4 + v3 * (uint64_t)a2 + 40) & 8) == 0) * ((9 * (v6 ^ a1)) ^ 0x582)) ^ (v6 - 424))))();
}

uint64_t sub_1003628F4(uint64_t a1)
{
  unint64_t v3 = STACK[0x5A0];
  unint64_t v4 = LODWORD(STACK[0x58C]);
  STACK[0x4F0] = v4;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v2
                                                              + 8
                                                              * ((41
                                                                * (v4 == ((v1 - 17) | 0x32)
                                                                               + ((v1 + 1264) ^ 0xFFFFFACF))) ^ v1)))(a1, v3);
}

uint64_t sub_10036293C()
{
  unint64_t v6 = STACK[0x3A8];
  int v7 = STACK[0x314] & 0x34F7E8BD;
  if (v1 <= 0x44C749E) {
    int v8 = *(_DWORD *)STACK[0x3E0] + 1;
  }
  else {
    int v8 = 647934162;
  }
  *(_DWORD *)STACK[0x3E0] = v8;
  int v9 = (((v0 >> 11) ^ 0x95B4A) + v3 - ((((v0 >> 11) ^ 0x95B4A) << (v7 ^ 0xBC)) & 0x34A932)) ^ v0;
  unsigned int v10 = (((v9 << 7) & 0x9D2C5680 ^ v9) << 15) & 0xEFC60000 ^ (v9 << 7) & 0x9D2C5680 ^ v9;
  uint64_t v11 = (unsigned char *)(v6 + (v4 - 2037425540));
  unsigned int v12 = -1636250663
      * ((*(_DWORD *)(*(void *)STACK[0x3F8]
                    + (int)(*(_DWORD *)STACK[0x400] & (((v7 + 319918485) & 0xECEE6DED) - 2015291532))) ^ v11) & 0x7FFFFFFF);
  unint64_t v13 = -1636250663 * ((v12 >> (((v7 + 80) | 0x30) - 45)) ^ v12);
  char v14 = *(unsigned char *)(*(void *)(v2 + 8 * (v7 - 124)) + (v13 >> 24) - 8) ^ v10 ^ 0xE2 ^ (v10 >> 18) ^ 0xE2 ^ *(unsigned char *)(*(void *)(v2 + 8 * (v7 ^ 0x88)) + (v13 >> 24) - 5) ^ *(unsigned char *)(*(void *)(v2 + 8 * (int)(v7 & 0xA7726050)) + (v13 >> 24) - 7) ^ v13 ^ (127 * BYTE3(v13));
  *uint64_t v11 = v14;
  return (*(uint64_t (**)(__n128))(v5 + 8 * ((404 * (v4 - (v14 != 0) == 2037425539)) ^ v7)))((__n128)0);
}

uint64_t sub_100362B20(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, _DWORD *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26,unsigned int a27,uint64_t a28,int a29)
{
  unsigned int v31 = 1759421093
      * (((&a26 | 0x24021180) - &a26 + (&a26 & 0xDBFDEE78)) ^ 0x977FA1D4);
  a28 = a17;
  a26 = ((a2 - 1861828263) & 0xFFFFFFF0) - v31 + 2080042350;
  a27 = a2 - a13 + (v29 ^ 0x480F9268) + v31;
  a29 = v29 - v31 + 1015;
  uint64_t v32 = (*(uint64_t (**)(unsigned int *))(v30 + 8 * (v29 ^ 0x8A0)))(&a26);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * ((67 * (*a14 == 605940026)) ^ v29)))(v32);
}

uint64_t sub_100362BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_100362C38(a1, a2, a3, a4, a5, a6, a7, STACK[0x388]);
}

uint64_t sub_100362C38()
{
  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_100362CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v13 = *(unsigned __int8 *)(v8 + (v11 + v10 + 2));
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v9
                                                             + 8
                                                             * (v12 ^ 0x2E9 ^ (42 * (a8 != 2004610524)))))(a1, a2, (v13 ^ 0x7BD5BCF6) - 286274672 + ((v13 << ((v12 ^ 0xE9) - 72)) & ((v12 ^ 0x5BEu) - 50)));
}

uint64_t sub_100362D48(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v9 = v5 - 1865178842;
  if ((v5 - 1865178842) <= 0x40) {
    int v9 = 64;
  }
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)((((((a1 + 1689219082) & 0x9B508BFF) + 687) ^ 0x483)
                                     * ((a5 - v6 - v7 + v9 + 1948) < 0xF)) ^ a1)))();
}

uint64_t sub_100362E04()
{
  BOOL v5 = (((*(unsigned __int8 *)(v2 + 8) - 5) << ((7 * (v3 ^ 0x80)) ^ 0xD0)) & (v1 + ((v3 + 13) | 0x208) - 764))
     + ((*(unsigned __int8 *)(v2 + 8) - 5) ^ v0) == v0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((4 * v5) | (16 * v5)) ^ v3)))();
}

uint64_t sub_100362E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X7>, int a3@<W8>)
{
  *(unsigned char *)(a2 + (a3 + v7) + 20) = *(unsigned char *)(a1 + (a3 + v7));
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((127
                                * (a3 + ((v3 - 66) | v5) - 758 == (((((v3 - 66) | v5) - 757) | v4) ^ (v6 + 869))
                                                                + ((((v3 - 66) | v5) - 692) | 6))) ^ (((v3 - 66) | v5) - 598))))();
}

uint64_t sub_100362E8C(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  HIDWORD(v12) = a7 ^ 1;
  LODWORD(v12) = a7 ^ a3;
  return (*(uint64_t (**)(void))(v7 + 8 * ((794 * (v11 + 1 == v10 + 44)) ^ a4)))((v12 >> 2)
                                                                                             + v9 - (v8 & (2 * (v12 >> 2))));
}

uint64_t sub_100362F64(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v13 = v9 + v8 + v7 - v11 + ((a4 - 23) ^ (v5 + 1169));
  *(void *)(v4 - 7 + v13) = *(void *)(a2 - 7 + v13);
  return (*(uint64_t (**)(void))(v12 + 8 * ((1038 * (v11 - (v6 & 0xFFFFFFF8) == -8)) ^ a4)))(v10 - (v6 & 0xFFFFFFF8));
}

uint64_t sub_100362FC4()
{
  BOOL v5 = v1 == 1388428834 || LODWORD(STACK[0x54C]) - v2 != 1890831304;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v5 * (((v0 + 947) | 8) + ((v0 - 1606746499) & 0x5FC4FFDF) - 2311)) | v0)))();
}

uint64_t sub_100363038(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v5 = (char *)&STACK[0x6B0] + v4 - 0x2500E162B343AFF1;
  *(_DWORD *)BOOL v5 = 2014182718;
  *((void *)v5 + 1) = 0;
  *((_DWORD *)v5 + 4) = 1306493781;
  *((_DWORD *)v5 + 6) = 1791330438;
  *((void *)v5 + 4) = 0;
  *((_DWORD *)v5 + 10) = 1791330438;
  STACK[0x508] = (unint64_t)(v5 + 40);
  *((void *)v5 + 6) = 0;
  STACK[0x480] = (unint64_t)(v5 + 48);
  *((_DWORD *)v5 + 14) = 1791330438;
  STACK[0x490] = (unint64_t)(v5 + 56);
  *((void *)v5 + 8) = 0;
  STACK[0x5C0] = (unint64_t)(v5 + 64);
  *((_DWORD *)v5 + 18) = 1791330438;
  STACK[0x4A0] = (unint64_t)(v5 + 72);
  *((void *)v5 + 10) = 0;
  STACK[0x570] = (unint64_t)(v5 + 80);
  v5[88] = 52;
  *(_DWORD *)a4 = 2014182718;
  *(__n128 *)(a4 + 4) = a1;
  *(_DWORD *)(a4 + 20) = 0;
  *(_DWORD *)(a4 + 24) = 1791330438;
  *(_DWORD *)(a4 + 28) = 1021048996;
  STACK[0x300] = a4 + 28;
  *(_DWORD *)(a4 + 232) = 1021048996;
  STACK[0x2F8] = a4 + 232;
  *(__n128 *)(a4 + 436) = a1;
  *(__n128 *)(a4 + 452) = a1;
  *(void *)(a4 + 468) = 0;
  *(void *)(a4 + 1128) = 0x1818181818181818;
  *(void *)(a4 + 1136) = 0x1818181818181818;
  *(void *)(a4 + 1144) = 404232216;
  *(void *)(a4 + 1152) = 0;
  *(void *)(a4 + 1160) = 0;
  return sub_100363154(396);
}

uint64_t sub_100363154@<X0>(int a1@<W0>, unsigned int a2@<W8>, __n128 a3@<Q0>)
{
  int v8 = (__n128 *)(v4 + v3);
  *int v8 = a3;
  v8[1] = a3;
  return (*(uint64_t (**)(void))(v7 + 8 * (((((a2 + v5) & v6 ^ 0x250) + v3 == 256) * a1) ^ a2)))();
}

uint64_t sub_10036318C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  *(unsigned char *)(*(void *)(a8 + 96) + 1568) = 0;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((*(_DWORD *)(a8 + 72) == a7 + ((((v8 - 157) | 0x171) + 2111301958) & 0xBA7F774F) + 160)
                                * (a4 + ((((v8 - 157) | 0x171) - 111151770) & 0x3EF76B2F) + 1938)) ^ ((v8 - 157) | 0x171))))();
}

uint64_t sub_100363204(unint64_t a1, uint64_t a2, int a3)
{
  BOOL v5 = a1 < v3;
  unint64_t v6 = (((a3 - 1526) | 0x84u) ^ 0x8B0748ABB60CB33BLL) + a2;
  int v7 = v5 ^ (v6 < v3);
  BOOL v8 = v6 < a1;
  if (!v7) {
    BOOL v5 = v8;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((13 * !v5) ^ a3)))();
}

void sub_100363270()
{
}

uint64_t sub_100363330(int a1)
{
  BOOL v4 = (a1 + v2 + v1 - 2013071287 + 887) > 7;
  return (*(uint64_t (**)(void))(v3 + 8 * (((4 * v4) | (8 * v4)) ^ v1)))();
}

uint64_t sub_100363398(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((((v5 - a3 - 1216) ^ (v5 + 2009491630) & 0xF9FDB157 ^ 0x2B) * (v4 == v3)) ^ v5)))();
}

uint64_t sub_1003633E4(char a1, int8x16_t a2, int8x8_t a3, int8x8_t a4, uint64_t a5, char a6, char a7, char a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v55 = a11 - 8;
  uint64_t v56 = (a10 + v55);
  v58.val[0].i64[0] = ((_BYTE)a10 + (_BYTE)v55) & 0xF;
  v58.val[0].i64[1] = (v53 + (_BYTE)v55) & 0xF;
  v58.val[1].i64[0] = (v52 + (_BYTE)v55 + a8) & 0xF;
  v58.val[1].i64[1] = (a1 + (_BYTE)v55) & 0xF;
  v58.val[2].i64[0] = (v51 + (_BYTE)v55) & 0xF;
  v58.val[2].i64[1] = (a7 + (_BYTE)v55) & 0xF;
  v58.val[3].i64[0] = (a6 + (_BYTE)v55) & 0xF;
  v58.val[3].i64[1] = (*(_DWORD *)(v54 - 144) + (_BYTE)v55) & 0xF;
  *(int8x8_t *)(*(void *)(v54 - 128) + v56) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(*(void *)(v54 - 120) + v56), *(int8x8_t *)(v50 + (v56 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v49 + (v56 & 0xF) - 7), *(int8x8_t *)(v48 + (v56 & 0xF) - 7)))), a4), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v58, a2), a3)));
  return (*(uint64_t (**)(void))(a47 + 8 * ((93 * (*(_DWORD *)(v54 - 136) == v55)) ^ v47)))();
}

uint64_t sub_1003633EC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1538
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ (v0 + ((v2 + 1383785632) & 0xAD851AFF) - 721)) == v0)) ^ v2)))();
}

uint64_t sub_100363440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19)
{
  return sub_10036359C(3658457652, 3258799205, 1036168091, a19, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_10036359C(uint64_t a1, int a2)
{
  return sub_1003885D4(a1, a2);
}

uint64_t sub_1003635E0(uint64_t a1)
{
  int v2 = 628203409 * (((a1 | 0xBB8CAEEC) - (a1 & 0xBB8CAEEC)) ^ 0x3904A2DF);
  int v3 = *(_DWORD *)a1 + v2;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 48);
  int v8 = *(_DWORD *)(a1 + 20) + v2;
  unsigned int v9 = 235795823
     * (((&v11 | 0xC7C4DB7) - &v11 + (&v11 & 0xF383B248)) ^ 0x98D104EE);
  int v16 = v9 ^ (v3 - 368398188);
  uint64_t v17 = v4;
  unsigned int v12 = v9 + (v8 ^ 0x1D858BF3) + 1873606620 + ((2 * v8) & 0xB9E7FEEE ^ 0x80E4E808);
  uint64_t v13 = v6;
  uint64_t v14 = v5;
  uint64_t v11 = v7;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_1022AC750 + (v3 ^ 0x15F557A9)) + 8 * v3 - 2947183084))(&v11);
  *(_DWORD *)(a1 + 40) = v15;
  return result;
}

void sub_100363754(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1003637BC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  *(void *)(v5 - 252 + a2 + a1) = 0x1818181818181818;
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((985 * ((((v2 - 1441) | 0x124u) ^ 0x166) == (v3 & 0xFFFFFFFFFFFFFFF8))) ^ v2)))();
}

uint64_t sub_100363814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((a5 + 1021) | 4) ^ (a5 - 65)) * (*(_DWORD *)(v6 - 152) == *(_DWORD *)(v6 - 168))) ^ a5)))();
}

uint64_t sub_100363854@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v5 - 252 + a3 + a1) = 24;
  return (*(uint64_t (**)(void))(v4 + 8 * ((3842 * ((unint64_t)(a3 + 1 + a1) < 0x40)) ^ (a2 + v3 + 1257))))();
}

void sub_100363898(uint64_t a1)
{
  int v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(void *)(a1 + 24)) {
    BOOL v2 = *(_DWORD *)(a1 + 20) - v1 == 774297797;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100363954()
{
  return 4294925278;
}

uint64_t sub_10036395C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0;
}

void sub_100363974(_DWORD *a1, uint64_t a2, int a3)
{
  *((unsigned char *)a1 + v4 + 4) = 120;
  sub_1003596FC(a1, v3 + 1, a3);
}

void sub_1003639A0()
{
}

void sub_1003639D0(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

void sub_100363A34(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  BOOL v2 = (char *)*(&off_1022AC750 + v1 - 1515) - 4;
  uint64_t v3 = *(void *)&v2[8
                    * ((((*(uint64_t (**)(uint64_t, uint64_t))&v2[8 * (v1 ^ 0xE4E)])(32, 0x101004023FF3BD5) == 0)
                      * ((v1 + 2047750524) & 0x85F1CBC6 ^ 0x3D3)) ^ v1)];
  __asm { BRAA            X8, X17 }
}

void sub_100363AFC(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100363B84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v2;
  unsigned int v6 = v3 - 535753261 * (&v5 ^ 0xAF40E2F) - 684;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0xBB4)))(&v5);
}

uint64_t sub_100363BF4@<X0>(int a1@<W4>, uint64_t a2@<X7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((a3 - 493) ^ ((*(unsigned char *)(v4 + 1 + a2) - *(unsigned char *)(v3 + 1)) == 12)) & 1) == 0)
                                * a1) ^ (a3 + 496))))();
}

uint64_t sub_100363C00(uint64_t a1, int8x8_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, int a9)
{
  *(int8x8_t *)(a7 + (v9 + v11)) = veor_s8(*(int8x8_t *)(a1 + (v9 + v11)), a2);
  return (*(uint64_t (**)(void))(v10 + 8 * (((a4 == v11) * a9) ^ a6)))();
}

uint64_t sub_100363C30()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v0 - 786) ^ 0xFFFFFFFD) + ((v0 - 786) | 8)) * (v1 == v2)) | v0)))();
}

uint64_t sub_100363C64()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v0 > (((LODWORD(STACK[0x43C]) + 949) | 5) ^ 0x78A01FFAu))
                                * ((LODWORD(STACK[0x43C]) ^ 0x6D6) - 344)) ^ (LODWORD(STACK[0x43C]) + 302))))();
}

uint64_t sub_100363CB0()
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((3901 * ((v2 + 702 + v0 - 2004723701) < 0x38)) ^ (v2 + 1876))))(0xFFFFFFFFLL);
}

uint64_t sub_100363D00()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((27 * (v1 == ((v2 - 1127) ^ 0x25A) - 434)) ^ v2)))();
}

uint64_t sub_100363D30()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 - 405) | 0x49) ^ 0x7CB) * (v2 < 0x63FF01F3)) ^ v0)))();
}

uint64_t sub_100363DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unint64_t *a11, char a12, int a13, uint64_t a14, int a15)
{
  char v22 = *(unsigned char *)(v15 + 24) - v21;
  unsigned int v23 = 1759421093 * (((&a10 | 0x3A5775E8) - (&a10 & 0x3A5775E8)) ^ 0x892AC5BC);
  a15 = v18 - v23 + 572;
  a14 = v20;
  a11 = &STACK[0x53572A2EC5DA9502];
  a13 = v19 + v23 + 244362803;
  a12 = (-91 * (((&a10 | 0xE8) - (&a10 & 0xE8)) ^ 0xBC)) ^ (((2 * v22) & 0x1A ^ 0x18)
                                                                                            + (v22 ^ 0xB3)) ^ 0x80;
  uint64_t v24 = (*(uint64_t (**)(int *))(v17 + 8 * (v18 ^ 0xA37)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v17 + 8
                                                  * ((2919 * (a10 == ((201 * (v18 ^ 0x322)) ^ (v16 + 551)))) ^ v18)))(v24);
}

uint64_t sub_100363EB0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 - 175) ^ (414 * LODWORD(STACK[0x3D8])))))();
}

uint64_t sub_100363F10(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * ((126
                                                                * (((v3 + 42) ^ (v2 > ((v3 + 143330858) ^ 0xC403D025))) & 1)) ^ (v3 + 143331946))))(a1, a2, 4151636935);
}

uint64_t sub_100363F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v15 = v12 < v10;
  *(unsigned char *)(*v14 + ((v11 - 413) ^ (a8 - 94)) + v9) = 24;
  unsigned int v16 = v9 + 1 + v8;
  int v17 = v15 ^ (v16 < v10);
  BOOL v18 = v16 < v12;
  if (!v17) {
    BOOL v15 = v18;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((114 * v15) ^ v11)))();
}

uint64_t sub_100363FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                               + 8
                                                                               * (((((((v6 - 1392) | 0x3B0) ^ 0x1F4)
                                                                                   + 507) ^ 0x434)
                                                                                 * ((v5 & 8) == 0)) ^ ((v6 - 1392) | 0x3B0))))(a1, a2, a3, a4, (v4 - a4));
}

uint64_t sub_100364014()
{
  return sub_10037A7BC();
}

uint64_t sub_10036405C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7, int a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  *a7 = a9 ^ 0x3A;
  return (*(uint64_t (**)(void))(v15 + 8 * (((a14 == v14) * (((a1 + 212) | 0xE) - 395)) ^ a1)))();
}

uint64_t sub_1003640A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  LODWORD(STACK[0x48C]) = a7 - 14;
  return sub_10036F01C();
}

uint64_t sub_1003640B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v17 - 128) = v15
                         - 108757529 * ((((2 * (v17 - 128)) | 0x4F74FB78) - (v17 - 128) - 666533308) ^ 0xC7261F97)
                         + 1409;
  *(void *)(v17 - 120) = a13;
  *(void *)(v17 - 112) = v16;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 2151)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (int)(((((v13 == 313836799) ^ (v15 - 1)) & 1)
                                                   * ((v15 + 2031973501) & 0x86E28F5A ^ 0x474)) ^ v15)))(v18);
}

uint64_t sub_100364178@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(_DWORD *)(a9 + 4 * v11) = ((0x84FE4DC634BF038DLL >> ((v10 & 0x6Fu) - 12)) ^ a1)
                              + v9
                              - ((2 * ((0x84FE4DC634BF038DLL >> ((v10 & 0x6Fu) - 12)) ^ a1)) & 0x81DBE93C);
  return sub_10038432C();
}

uint64_t sub_10036419C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t *a18, uint64_t a19, unsigned int a20,unsigned int a21,unsigned int a22,int a23)
{
  unsigned int v26 = 460628867
      * (((&a18 | 0x53DCC1F3) - &a18 + (&a18 & 0xAC233E08)) ^ 0x1F4A438E);
  a18 = &STACK[0x44D5F6D91B577B24];
  a19 = a15;
  a20 = v26 - 1556235349;
  a21 = v26 + v24 - 2024873952;
  a22 = 366164236 - v26;
  uint64_t v27 = (*(uint64_t (**)(unint64_t **))(v25 + 8 * (v24 + 1357)))(&a18);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * (((a23 == v23) * (((v24 - 868) | 0x200) ^ 0x591)) ^ v24)))(v27);
}

uint64_t sub_10036426C()
{
  LODWORD(STACK[0x48C]) = v0;
  return sub_10036F01C();
}

uint64_t sub_100364278@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unsigned int v7 = *((_DWORD *)&STACK[0x264] + ((v5 + a2) >> (v3 + 108)) + 18);
  *(unsigned char *)(a1 + (v5 + a2)) = v7 ^ 0x7D;
  *(unsigned char *)(a1 + (v5 + a2 + 2)) = (BYTE2(v7) ^ 0x60) - ((v7 >> 15) & 0x30) + 24;
  *(unsigned char *)(a1 + (v5 + a2 + 1)) = (BYTE1(v7) ^ 0xAB) - ((2 * (BYTE1(v7) ^ 0xAB)) & 0x30) + 24;
  *(unsigned char *)(a1 + (v5 + a2 + 3)) = (HIBYTE(v7) ^ 0x46) + (~(v7 >> 23) | 0xCF) + 25;
  unsigned int v8 = LODWORD(STACK[0x2C0]) + 1059629884;
  BOOL v9 = v8 < v2;
  BOOL v10 = v5 + 1369251535 < v8;
  if (v5 + 1369251535 < v2 != v9) {
    BOOL v10 = v9;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((v10 * v4) ^ v3)))();
}

uint64_t sub_10036435C@<X0>(int a1@<W8>)
{
  *unsigned int v2 = v2[623];
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((91 * (v1 - 1 == ((29 * (a1 ^ 0x418) - 954) ^ 0xC006A30))) ^ (29 * (a1 ^ 0x418)))))();
}

uint64_t sub_1003643B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return sub_1003643CC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1003643CC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X6>, uint64_t a5@<X7>, const char *a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * v22);
  int v32 = STACK[0x2B0];
  uint64_t v33 = LODWORD(STACK[0x2B0]);
  int v34 = STACK[0x2B4];
  int v35 = STACK[0x2B8];
  uint64_t v36 = LODWORD(STACK[0x2B4]);
  uint64_t v37 = LODWORD(STACK[0x2B8]);
  int v38 = LOBYTE(STACK[0x2C4]) ^ 0xCB;
  if (v38 == 2)
  {
    int8x16x4_t v58 = vld4q_s8(a6);
    uint8x16_t v46 = (uint8x16_t)veorq_s8(v58.val[1], v31);
    _Q17 = vmovl_u8(*(uint8x8_t *)v46.i8);
    _Q16 = vmovl_high_u8(v46);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    char v51 = (_DWORD *)(v26 + 4 * (v27 + 1356258386));
    int v52 = *(v51 - 8) ^ *(v51 - 3);
    int v53 = *(v51 - 16) ^ *(v51 - 14) ^ (v52 + v25 - ((2 * v52) & 0x483BD274));
    HIDWORD(v54) = v53 ^ v25;
    LODWORD(v54) = v53;
    *char v51 = (v54 >> 31) + v25 - ((2 * (v54 >> 31)) & 0x483BD274);
    return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((92 * (v30 != 1356258323)) ^ v23)))(v36);
  }
  else
  {
    if (v38 == 1)
    {
      int8x16x4_t v57 = vld4q_s8(a6);
      uint8x16_t v39 = (uint8x16_t)veorq_s8(v57.val[2], v31);
      _Q21 = vmovl_high_u8(v39);
      _Q20 = vmovl_u8(*(uint8x8_t *)v39.i8);
      __asm
      {
        SHLL2           V20.4S, V20.8H, #0x10
        SHLL2           V21.4S, V21.8H, #0x10
      }
      JUMPOUT(0x100364538);
    }
    LODWORD(STACK[0x2AC]) = 2 * (LODWORD(STACK[0x2AC]) ^ v29) + v29 - (v28 & (4 * (LODWORD(STACK[0x2AC]) ^ v29)));
    LODWORD(STACK[0x2B0]) = (v33 ^ v29) + (v32 ^ v29) + v29 - (v28 & (2 * ((v33 ^ v29) + (v32 ^ v29))));
    LODWORD(STACK[0x2B4]) = (v36 ^ v29) + (v34 ^ v29) + v29 - (v28 & (2 * ((v36 ^ v29) + (v34 ^ v29))));
    LODWORD(STACK[0x2B8]) = (v37 ^ v29) + (v35 ^ v29) + v29 - (v28 & (2 * ((v37 ^ v29) + (v35 ^ v29))));
    return v56(v36, v37, a1, a2, a3, v33, a4, a5, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
             a18,
             a19,
             a20,
             a21,
             a22);
  }
}

void sub_1003647C4(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, char a7)
{
  LODWORD(STACK[0x2BC]) = (a4 ^ v8) + (a2 ^ v8) + v8 - ((((a4 ^ v8) + (a2 ^ v8)) << ((4 * (a7 ^ 0x88)) ^ 0x11)) & v7);
  JUMPOUT(0x100364814);
}

uint64_t sub_1003648A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8
                                                             + 8
                                                             * (((v7 >= (a7 ^ 0x6FFu) - 87) * ((a7 + 480) ^ 0x843)) ^ a7)))(a1, a2, 0);
}

#error "100366B68: call analysis failed (funcsize=2100)"

uint64_t sub_100366B6C()
{
  return sub_100366B78();
}

uint64_t sub_100366B78(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * (v4 ^ ((4 * (v5 - 580493780 == a4 + 279)) | (8 * (v5 - 580493780 == a4 + 279))))))();
}

uint64_t sub_100366BD8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  BOOL v10 = (int8x16_t *)((char *)&STACK[0x6B0] + STACK[0x390] + a7 - 0x2500E162B343B48DLL);
  int8x16_t *v10 = veorq_s8(*v8, (int8x16_t)xmmword_101D1C150);
  STACK[0x648] = (v7 ^ 0x529u) + STACK[0x648] - 962;
  STACK[0x650] = a1;
  STACK[0x658] = a1;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                                  + 8 * (v7 ^ (504 * (v10 == (int8x16_t *)a1)))))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_100366C5C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((1444 * (*(_DWORD *)(a8 + 72) == a5 - 10)) ^ (a4 + a6 + 247))))();
}

uint64_t sub_100366CAC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((*(_DWORD *)(v1 - 0x38C18B7A1BA31318) & 1) == (v0 ^ 0x863)) * (v0 - 1897)) ^ v0)))();
}

uint64_t sub_100366CEC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((a3 + ((v5 - 589336978) & 0x3F3FD5CD) + 1439) * (*(unsigned char *)(v4 + 1) == 4)) ^ v5)))();
}

void sub_100366D30()
{
}

uint64_t sub_100366D3C@<X0>(void *a1@<X0>, int a2@<W1>, int a3@<W5>, int a4@<W6>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  unint64_t v30 = (*(_DWORD *)(a23 + 4 * (a5 + v29 + 712)) ^ v23)
      + HIDWORD(v26)
      + v28 * (unint64_t)(*(_DWORD *)(*a1 + 4 * (a5 + v29 + 712)) ^ v23);
  *(_DWORD *)(a23 + 4 * (a5 + v29 + v27 - 1463)) = v30 + v23 - (v24 & (2 * v30));
  BOOL v32 = v29 + a3 > a4 || v29 + a3 < a2;
  return (*(uint64_t (**)(void))(v25 + 8 * (v32 | v27)))();
}

uint64_t sub_100366DA4(uint64_t a1, int a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a4 + a3 - 2012793836 >= 221 * (a2 ^ 0x519u) - 1981) * (a2 - 1282)) | a2)))();
}

uint64_t sub_100366DF8@<X0>(int a1@<W8>)
{
  BOOL v4 = ((v1 + ((a1 + 93) ^ 0x76E) + 99) ^ ((a1 + 93) | 0x81u)) + v3 < 0x7FFFFFFE;
  return (*(uint64_t (**)(void))(v2 + 8 * (((8 * v4) | (32 * v4)) ^ a1)))();
}

uint64_t sub_100366E40()
{
  int v3 = v1 - ((v2 + 1291959132) & (2 * v1 + 726303490)) - 1138352253;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((2 * v3) & 0xDFB73D7C ^ 0x4D013C04) + ((v2 + 1839) ^ 0x495B476B ^ v3) - 1280018054 != 596645944) ^ v2)))();
}

uint64_t sub_100366EC8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0x5DDFCB5D)
                       - 268453896
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0xBA);
  return 0;
}

uint64_t sub_100366F64(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((1218
                                * (((((((a6 - 1519839739) & 0x5A96EFA0 ^ 0x7A9) + a2) & 0x7F ^ 0x777BEDDB)
                                   + ((a6 - 324) & (2 * (((a6 - 1519839739) & 0x5A96EFA0 ^ 0x7A9) + a2)))) & 0x777BEFFC) == 2004610524)) ^ a6)))();
}

uint64_t sub_100366FD8@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((29 * (v3 ^ 0x6F5) - 218) ^ 0x145)
                                * (*(_DWORD *)(v4 + (v2 - 404244979) * (uint64_t)a1 + 36) != a2)) ^ v3)))();
}

uint64_t sub_10036703C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, unsigned int a19, int a20)
{
  unsigned int v22 = 1759421093 * ((2 * (&a17 & 0x43114A58) - &a17 - 1125206624) ^ 0xF9305F4);
  a20 = v22 ^ 0x3C90969C;
  LODWORD(a17) = v22 ^ 0x792966AE;
  HIDWORD(a17) = v22 ^ 0x797D85E2;
  a18 = v22 + 387;
  (*(void (**)(unint64_t **))(v21 + 18200))(&a17);
  a17 = &STACK[0x216229CD9A8FA149];
  a19 = 1667 - 460628867 * ((2 * (&a17 & 0x4542B498) - &a17 + 985484129) ^ 0x762BC91C);
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v21 + 18272))(&a17);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((236 * (a18 == 605940026)) ^ v20)))(v23);
}

uint64_t sub_100367188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v23 = (a20 ^ v21) - ((2 * (a20 ^ v21)) & 0x6E10ACA4) - 1224190382;
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((67
                                * ((v20 ^ 0x608 ^ (v20 - 1699) ^ (2 * v23) & 0xD71EEB7A ^ 0x4610A94D)
                                 + (v23 ^ 0xDC8723EF)
                                 - 1099699624 == 704864277)) | v20)))();
}

void sub_10036721C()
{
}

uint64_t sub_100367228@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = (v1 ^ 0x469u) - 1073 - 312 + (((v1 ^ 0x469) + 143929873) & 0xF76BC9BD);
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((22 * (*(unsigned __int8 *)(a1 + 236 + v4) == *(unsigned __int8 *)(v2 + 32 + v4))) ^ v1 ^ 0x469)))();
}

uint64_t sub_1003672C8()
{
  unint64_t v4 = ((163 * (v1 ^ 0x122u)) ^ (v2 - 139) ^ (3 * (v1 ^ 0x86u))) + v0;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((111 * (v4 - v0 + 603303756 < 8)) ^ v1)))();
}

uint64_t sub_100367348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(a7 + (v11 + 17)) = *(unsigned char *)(a8 + ((a1 + (v10 ^ 0x306u) + 44) & (v9 + 3187482815)));
  return (*(uint64_t (**)(void))(v12 + 8 * (v10 ^ (1127 * ((v8 & 0xFFFFFFFC) == 1107484480)))))();
}

uint64_t sub_1003673A4@<X0>(int a1@<W6>, uint64_t a2@<X8>, uint64_t a3)
{
  return sub_100367424(a3 - 0x1F010F7499D3F79ELL, a2 - 0x1F010F7499D3F79ELL, (239 * (v3 ^ 0x112u)) ^ 0xB136EAC87451DF54, 0xCFED7D77DFBF25F6, 0x1BF7E4BECLL, 0x7EDB97BFABEEFB80, (a1 + 272));
}

uint64_t sub_100367424(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v18 = 4 * (v16 + v13);
  int v19 = a3 + v7 + (*(_DWORD *)(*a1 + v18) ^ v8);
  *(_DWORD *)(*a2 + v18) = v19 + v14 - (v17 & (2 * v19));
  int v20 = v9 + v16 + 479;
  BOOL v22 = v20 > a7 || v20 < v10;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v22 * v11) ^ v12)))();
}

uint64_t sub_100367494(uint64_t a1, uint64_t a2)
{
  int v6 = v3 + *(unsigned __int8 *)(a2 + 6) - 444;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1185 * ((v5 & (2 * v6)) + (v6 ^ v4) == v4)) ^ v3)))();
}

uint64_t sub_1003674D0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((204 * (*v1 - 1388430688 + ((v0 - 1274301056) & 0x4BF449B6u) + 1722 < 0x10)) ^ v0)))();
}

uint64_t sub_100367524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,unsigned int a22,unsigned int a23,int a24)
{
  unsigned int v25 = 1759421093 * ((-260476592 - (&a21 | 0xF0797150) + (&a21 | 0xF868EAF)) ^ 0xBCFB3EFB);
  LODWORD(a21) = v25 ^ 0x792966AE;
  HIDWORD(a21) = v25 ^ 0x797D85E2;
  a24 = v25 ^ 0x3C90969C;
  a22 = v25 + 387;
  (*(void (**)(unint64_t **))(v24 + 18200))(&a21);
  a23 = 1667
      - 460628867
      * (((&a21 | 0xCD1B7496) - &a21 + (&a21 & 0x32E48B68)) ^ 0x818DF6EB);
  a21 = &STACK[0x216229CD9A8FA149];
  uint64_t v26 = (*(uint64_t (**)(unint64_t **))(v24 + 18272))(&a21);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((119 * (a22 == 605940026)) ^ 0x130u)))(v26);
}

uint64_t sub_100367688@<X0>(int a1@<W8>)
{
  int v4 = a1 ^ 0xE1;
  int v5 = ((a1 ^ 0xE1) - 522) | 0x2A5;
  if (v3 > 0xE3622AC != v1 + 6451191 < -238428845) {
    BOOL v6 = v3 > 0xE3622AC;
  }
  else {
    BOOL v6 = v1 + 6451191 < (int)(v3 + v4 + 1909054257);
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((!v6 * (v5 ^ 0x207)) ^ v4)))();
}

uint64_t sub_100367760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46)
{
  STACK[0x2D8] = v48;
  return (*(uint64_t (**)(void))(v49 + 8 * ((a46 * (v47 == v50)) ^ (v46 - 679))))();
}

uint64_t sub_100367788@<X0>(unsigned int a1@<W8>, int8x16_t a2@<Q1>, int8x16_t a3@<Q5>, int8x16_t a4@<Q6>, int32x4_t a5@<Q7>)
{
  int v12 = (const float *)(v6 + 908);
  int8x16_t v13 = (int8x16_t)vld1q_dup_f32(v12);
  uint64_t v14 = a1 + 68;
  a2.i32[0] = *(_DWORD *)(v6 + 912);
  a2.i32[1] = *(_DWORD *)(v6 + 4 * (v14 ^ 0x3DE));
  a2.i32[2] = *(_DWORD *)(v6 + 920);
  int8x16_t v15 = vextq_s8(v13, a2, 0xCuLL);
  int8x16_t v16 = a2;
  v16.i32[3] = *(_DWORD *)(v6 + 924);
  int8x16_t v17 = (int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, a3), vandq_s8(v15, v9)), 1uLL);
  int32x4_t v18 = (int32x4_t)veorq_s8(v17, a4);
  int32x4_t v19 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)v18, v10), vandq_s8(v17, v11));
  int8x16_t v20 = (int8x16_t)vaddq_s32(vsubq_s32(v18, vaddq_s32(v19, v19)), a5);
  v18.i32[0] = *(_DWORD *)(v7 + 4 * ((*(_DWORD *)(v6 + 912) & 1) == 0));
  v18.i32[1] = *(_DWORD *)(v7 + 4 * ((*(_DWORD *)(v6 + 4 * (v14 ^ 0x3DE)) & 1) == 0));
  v18.i32[2] = *(_DWORD *)(v7 + 4 * (~*(_DWORD *)(v6 + 920) & 1));
  v18.i32[3] = *(_DWORD *)(v7 + 4 * (~v16.i32[3] & 1));
  *(int8x16_t *)(v6 + 908) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)v6, (int8x16_t)v18), v8), v20);
  return (*(uint64_t (**)(void))(v5 + 8 * a1))();
}

uint64_t sub_10036786C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((31 * (a14 == ((v15 + ((v14 - 1350) | 0x340) + 55) ^ ((v14 - 957) | 0x402)))) ^ v14)))();
}

uint64_t sub_1003678B4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v6 = *(_DWORD *)((char *)&STACK[0x264] + ((v4 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v4 + a2)) = (HIBYTE(v6) ^ 0x46) - ((v6 >> 23) & 0x30) + 24;
  *(unsigned char *)(a1 + (v4 + a2 + 1)) = ((v6 >> ((4 * v3) ^ 0x34)) ^ 0x60)
                                               - ((2 * (v6 >> ((4 * v3) ^ 0x34))) & 0x30)
                                               + 24;
  *(unsigned char *)(a1 + (v4 + a2 + 2)) = (BYTE1(v6) ^ 0xAB) - ((2 * (BYTE1(v6) ^ 0xAB)) & 0x30) + 24;
  *(unsigned char *)(a1 + (v4 + a2 + 3)) = v6 ^ 0x7D;
  unsigned int v7 = LODWORD(STACK[0x2C0]) - 571536941;
  BOOL v8 = v7 < v2;
  BOOL v9 = v4 - 1938655548 < v7;
  if (v4 - 1938655548 < v2 != v8) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((223 * !v9) ^ v3)))();
}

uint64_t sub_10036799C()
{
  BOOL v6 = *v0 != (((LOBYTE(STACK[0x43C]) + 95) ^ 0x56) + 22)
    || LODWORD(STACK[0x660]) != 1115265369
    || v1 != v3 + 1;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v6 | (4 * v6)) ^ (LODWORD(STACK[0x43C]) + 14))))();
}

uint64_t sub_1003679F0@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*(void *)(v3 - 0x38C18B7A1BA3132CLL) + (v5 + 1224158607 + v2)) = *(unsigned char *)(*(void *)(v3 - 0x38C18B7A1BA3132CLL) + (v2 - 1225318620));
  BOOL v6 = (v1 ^ 0x458) + v2 - 1433 == a1;
  return (*(uint64_t (**)(void))(v4 + 8 * ((8 * v6) | (32 * v6) | v1)))();
}

uint64_t sub_100367A5C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * ((126 * (v2 >= ((v3 + 143331976) ^ 0x3BCu) - 1006384782)) ^ (v3 + 143331946))))(a1, a2, 4151636935);
}

uint64_t sub_100367AAC(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((3616 * ((v1 + 21 + v2) < 0x28)) ^ a1 ^ 0x70B)))();
}

void sub_100367B84()
{
}

uint64_t sub_100367BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v26 - 112) = v25
                         + 1224239923 * (((v26 - 144) & 0xAB2C96F7 | ~((v26 - 144) | 0xAB2C96F7)) ^ 0xA66094DF)
                         - 230;
  *(void *)(v26 - 144) = a22;
  *(void *)(v26 - 136) = a11;
  *(void *)(v26 - 104) = a24;
  *(void *)(v26 - 128) = a24;
  *(void *)(v26 - 120) = a23;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v25 ^ 0xB9C)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((a21 - 1206753084 < ((v25 - 195) | 0x540u) + 2147481660) * (v25 - 739)) ^ (v25 - 272))))(v27);
}

uint64_t sub_100367CBC()
{
  STACK[0x5F0] = STACK[0x610];
  return sub_100367CD0();
}

uint64_t sub_100367CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v8 = v6 - (((v6 << (v5 + 12)) + 712306420) & 0x6E10ACA4) + 1279446476;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((508 * (((2 * v8) & 0xD71EEB7A ^ 0x4610A820) + (v8 ^ 0xDC8723EF) - 1099699624 == a5)) ^ (v5 - 510))))();
}

uint64_t sub_100367D64@<X0>(_DWORD *a1@<X7>, int a2@<W8>)
{
  *a1 = STACK[0x49C];
  a1[85] = STACK[0x5CC];
  a1[86] = STACK[0x55C];
  a1[87] = STACK[0x61C];
  a1[88] = STACK[0x5AC];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((STACK[0x578] != 0) * (11 * ((a2 + 209) ^ 0x252) + ((a2 + 618) ^ 0xFFFFFDA7))) ^ (a2 + 1279))))();
}

uint64_t sub_100367DDC(uint64_t a1, uint64_t a2, char a3, char a4, char a5)
{
  int v11 = v9 + 4;
  unsigned int v12 = *(_DWORD *)(v8 + ((v11 - 82659885) & 0xFFFFFFFC));
  *(unsigned char *)(v7 + (v11 - 82659885)) = (HIBYTE(v12) ^ a3)
                                                  - ((((v6 - 97) & 0xF7) + 59) & (2 * HIBYTE(v12)))
                                                  + 24;
  *(unsigned char *)(v7 + (v11 - 82659884)) = (BYTE2(v12) ^ 0x60) - ((v12 >> 15) & 0x30) + 24;
  *(unsigned char *)(v7 + (v11 - 82659883)) = (a4 ^ BYTE1(v12)) - ((2 * (a4 ^ BYTE1(v12))) & 0x30) + 24;
  *(unsigned char *)(v7 + (v11 - 82659882)) = v12 ^ a5;
  unsigned int v13 = *v5 + 918477860;
  BOOL v14 = v13 < 0x5AEC31CB;
  BOOL v15 = v11 + 1442768802 < v13;
  if ((v11 + 1442768802) < 0x5AEC31CB != v14) {
    BOOL v15 = v14;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((54 * v15) ^ v6)))();
}

uint64_t sub_100367DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((v12 != ((v13 + 665) ^ v9)) * ((v13 + a8) & v10 ^ v11)) ^ v13)))();
}

uint64_t sub_100367E14(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((1373 * ((a3 + 1 + v4) < 0x3C)) ^ v3)))();
}

uint64_t sub_100367EE0@<X0>(unsigned int a1@<W0>, uint64_t a2@<X4>, int a3@<W8>)
{
  *(int8x16_t *)(a2 + a3 + ((378 * (v3 ^ 0x113)) ^ a1)) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v8)), v7);
  return (*(uint64_t (**)(void))(v5 + 8 * ((767 * (((v4 + 1) & 0x1FFFFFFF0) == 16)) ^ v3)))();
}

uint64_t sub_100367F50@<X0>(uint64_t a1@<X8>)
{
  int v7 = v5 - 644;
  unsigned int v8 = v4 - 1804563902 + v3;
  uint64_t v9 = v1 + v8;
  long long v10 = *(_OWORD *)(v9 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = *(_OWORD *)(v9 - 15);
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v2 & 0xFFFFFFE0) == 32) * (v7 ^ 0x548)) ^ (v7 - 316))))();
}

uint64_t sub_100367FB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v1 - 1687832456) & 0x649A46FF) + ((v1 + 448) ^ 0xFFFFF8D3))
                                     * ((unint64_t)(v2 - a1) > 0x1F)) ^ v1)))();
}

uint64_t sub_100367FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((426 * (v5 - v6 >= (unint64_t)((a5 - 374) ^ 0x3E13350Du) - 1041446456)) ^ a5)))();
}

uint64_t sub_100368040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((((((v10 - 549) | a8) - 953) | a5) - 62) * (v8 > 1)) ^ ((v10 - 549) | a8))))();
}

uint64_t sub_100368054()
{
  unsigned int v5 = (((v4 ^ v3) >> 4) & 0xEEDFEFE ^ 0xA80D43E) + (((v4 ^ v3) >> 5) ^ 0xF23795E0) + 376361931;
  BOOL v7 = v5 > 0xDE5D349 && v5 < v2 + ((v0 - 120) | 0x2C2u) + 233164896;
  return (*(uint64_t (**)(void))(v1 + 8 * ((1448 * v7) ^ v0)))();
}

void sub_1003680D0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) - 1755732067 * ((a1 & 0xB853BF30 | ~(a1 | 0xB853BF30)) ^ 0x996AFD14);
  uint64_t v2 = *(void *)a1;
  unsigned int v3 = (char *)*(&off_1022AC750 + (v1 ^ 0x1C3)) - 4;
  (*(void (**)(void, uint64_t (*)()))&v3[8 * v1 + 15304])(*(&off_1022AC750 + v1 - 181), sub_10035ECA0);
  __asm { BRAA            X10, X17 }
}

void sub_100368194()
{
}

uint64_t sub_1003681B8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v11 = a1 + 43;
  unsigned int v12 = 1755732067 * (&a4 ^ 0xDEC6BDDB);
  a7 = &STACK[0x752627A1EA5CFF38];
  a8 = v12 ^ 0x6D25DDE;
  a4 = &STACK[0x1C320A2BCFF26981];
  a5 = v10;
  a6 = (a1 + 662) ^ v12;
  uint64_t v13 = (*(uint64_t (**)(unint64_t **))(v9 + 8 * (a1 + 1719)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v10 - 0x38C18B7A1BA31314) == v8 + (v11 ^ 0x70E) - 1374)
                                              * ((v11 ^ 0x75) + 620)) ^ v11)))(v13);
}

void sub_100368290(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1003682DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((a6 - 570) | 0x52) - 1191) * (v6 == a5)) ^ a6)))();
}

uint64_t sub_100368308(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (235795823 * ((2 * (a1 & 0x5AD4AFC8) - a1 + 623595575) ^ 0xB186196E));
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  unsigned int v5 = v1
     - 426522865
     + 1225351577 * (((&v5 | 0xD03D750B) - (&v5 & 0xD03D750B)) ^ 0xF3A7AD1D)
     + 823;
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_1022AC750 + v1 - 426522865)
                                                   + 8 * (v1 ^ 0x196C311E)
                                                   - 4))(&v5);
}

uint64_t sub_100368410(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((112
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 7) - 100)))
                                 + ((*(unsigned __int8 *)(a2 + 7) - 100) ^ v4) == v4 + v3 - 400)) ^ v3)))();
}

void sub_100368450(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((2 * (a1 & 0x5E99CC2A) - a1 - 1587137579) ^ 0xAB923DFA);
  if (*(_DWORD *)(*(void *)a1 - 0x1F010F7499D3F7A2) - 1902603612 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)a1 - 0x1F010F7499D3F7A2) - 1902603612;
  }
  else {
    unsigned int v3 = 1902603612 - *(_DWORD *)(*(void *)a1 - 0x1F010F7499D3F7A2);
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x1F010F7499D3F7A2) - 1902603612 >= 0) {
    unsigned int v4 = *(_DWORD *)(v2 - 0x1F010F7499D3F7A2) - 1902603612;
  }
  else {
    unsigned int v4 = 1902603612 - *(_DWORD *)(v2 - 0x1F010F7499D3F7A2);
  }
  uint64_t v8 = *(void *)a1;
  v7[1] = (460628867 * ((((2 * v7) | 0x5B38C61C) - v7 + 1382259954) ^ 0xE10AE173)) ^ (v1 + 1495);
  int v5 = (char *)*(&off_1022AC750 + (v1 ^ 0xF0)) - 4;
  (*(void (**)(_DWORD *))&v5[8 * v1 + 17088])(v7);
  if (v3 >= v4) {
    unsigned int v6 = v4;
  }
  else {
    unsigned int v6 = v3;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1003685FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v57
                                                     + 8
                                                     * (int)(((((v55 == a5) ^ (v56 + 60)) & 1)
                                                            * ((a55 & 0xAB3F5893) + 224)) ^ (v56 + 643))))(a1, 1421911162);
}

uint64_t sub_100368658(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  *(_DWORD *)(v10 - 200) = v9 + 11;
  *(_DWORD *)(v10 - 192) = v9 + 10;
  *(_DWORD *)(v10 - 184) = v9 + 9;
  *(_DWORD *)(v10 - 176) = v9 + 8;
  *(void *)(v10 - 128) = ((_BYTE)v9 + 56 * (a9 ^ 0x7A) + 93) & 0xF;
  *(void *)(v10 - 136) = ((_BYTE)v9 + 4) & 0xF;
  *(void *)(v10 - 144) = ((_BYTE)v9 + 3) & 0xF;
  *(void *)(v10 - 152) = ((_BYTE)v9 + 2) & 0xF;
  *(void *)(v10 - 168) = ((_BYTE)v9 + 1) & 0xF;
  *(void *)(v10 - 160) = ((_BYTE)v9 - 1) & 0xF;
  v11.n128_u64[0] = *(void *)(v10 - 128);
  v11.n128_u64[1] = *(void *)(v10 - 136);
  v12.n128_u64[0] = *(void *)(v10 - 144);
  v12.n128_u64[1] = *(void *)(v10 - 152);
  v13.n128_u64[0] = *(void *)(v10 - 168);
  v13.n128_u64[1] = v9 & 0xF;
  v14.n128_u64[0] = 0x8787878787878787;
  v14.n128_u64[1] = 0x8787878787878787;
  return sub_1003687B4(a1, v11, v12, v13, (__n128)xmmword_101D1C120, v14);
}

uint64_t sub_1003687B4(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, int a14)
{
  uint64_t v28 = (v18 + v14 - a13);
  uint64_t v29 = ((_BYTE)v18 + (_BYTE)v14 - (_BYTE)a13) & 0xF;
  uint64_t v30 = v20;
  v31.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v31.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v24, a5).u64[0];
  int8x16_t v32 = vrev64q_s8(vmulq_s8(v31, a6));
  *(int8x16_t *)(v21 + v28) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v17 + (v28 & 0xF) - 15), *(int8x16_t *)(v19 + v28)), veorq_s8(*(int8x16_t *)((v28 & 0xF) + v15 - 11), *(int8x16_t *)((v28 & 0xF) + v16 - 12))), vextq_s8(v32, v32, 8uLL));
  return (*(uint64_t (**)(void))(v23 + 8 * (a14 + 4 * (v22 + a13 != a12))))();
}

uint64_t sub_10036882C()
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((((v0 ^ 0x36A) + 4) * (v1 == 6)) ^ v0)))(4294925278);
}

uint64_t sub_100368858@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W5>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a3 ^ v4) + v7 + a2) = *(unsigned char *)(v6 + (a3 ^ v4) + v7 + a2);
  return (*(uint64_t (**)(void))(v8 + 8 * (((a2 - 1 == a4) | (4 * (a2 - 1 == a4))) ^ (v5 + a3 + 633))))();
}

uint64_t sub_100368894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003688B0(a1, a2, a3, a4, v4 & 0xFFFFFFE0);
}

uint64_t sub_1003688B0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7)
{
  uint64_t v15 = (a4 + v11 - a7);
  long long v16 = *(_OWORD *)(v10 + v15 - 15);
  long long v17 = *(_OWORD *)(v10 + v15 - 31);
  uint64_t v18 = v9 + v15;
  *(_OWORD *)(v18 - 15) = v16;
  *(_OWORD *)(v18 - 31) = v17;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((a6 ^ v7 ^ v13) + a7 == a5) * v14) ^ v12)))();
}

uint64_t sub_1003688F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 120) = (v16 & 0x60733777) + 1374699841 * ((v17 - 136) ^ 0x6DF41809) - 143;
  *(void *)(v17 - 136) = a14;
  *(void *)(v17 - 128) = v15;
  (*(void (**)(uint64_t))(v14 + 8 * ((v16 & 0x60733777) + 1646)))(v17 - 136);
  int v18 = 1759421093 * (((v17 - 136) & 0x91FB6DD7 | ~((v17 - 136) | 0x91FB6DD7)) ^ 0xDD79227C);
  *(void *)(v17 - 128) = a13;
  *(_DWORD *)(v17 - 120) = (v16 & 0x60733777) - v18 + 715;
  *(_DWORD *)(v17 - 136) = 1772733383 - v18;
  (*(void (**)(uint64_t))(v14 + 8 * ((v16 & 0x60733777) + 1668)))(v17 - 136);
  *(void *)(v17 - 128) = a14;
  *(void *)(v17 - 112) = a13;
  *(_DWORD *)(v17 - 120) = (v16 & 0x60733777)
                         + 1178560073 * ((v17 + 1967052084 - 2 * ((v17 - 136) & 0x753ED5BC)) ^ 0xCFAAADDE)
                         + 428;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v14 + 8 * ((v16 & 0x60733777) + 1632)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((15 * (*(_DWORD *)(v17 - 136) <= 0x5B89B5B3u)) ^ ((v16 & 0x60733777) + 256))))(v19);
}

uint64_t sub_100368A60@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v6 = (v5 - 824) | 0x102;
  int v7 = v3 + a2;
  int v8 = (v6 ^ 0x1B3) + v3;
  *(_DWORD *)(*(void *)(v4 - 0x1F010F7499D3F79ELL) + 4 * v7) = a1;
  *(_DWORD *)(v4 - 0x1F010F7499D3F7A2) = v8;
  int v9 = v8 + a2;
  if (v8 + a2 < 0) {
    int v9 = -v9;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((465
                                * ((int)(a2
                                       + v6
                                       + 885
                                       + ((v6 + 836) ^ v9 ^ 0x776F69AA)
                                       + ((2 * v9) & 0xEEDEDAB8)
                                       - 101187584
                                       - 1320) <= (int)((v6 + 1165674005) & 0xBA853FFE ^ 0xFFFFF839))) ^ (v6 + 836))))();
}

uint64_t sub_100368B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  return (*(uint64_t (**)(void))(v46
                              + 8
                              * (a46 ^ (15
                                      * (((2 * (a10 - (a13 & 0x2D921DE4) - 903342177)) & 0x1E9FF64E ^ 0xC921444)
                                       + ((a10 - (a13 & 0x2D921DE4) - 903342177) ^ 0x9986F5D5)
                                       + 2147481531 == 256897762)))))();
}

void sub_100368C18(uint64_t a1)
{
  int v1 = 1759421093 * (a1 ^ 0xB37DB054);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x38C18B7A1BA31320) + 1191121681;
  unsigned int v3 = *(_DWORD *)a1 + v1 - 114622856;
  int v4 = (v3 < 0x7525EBD6) ^ (v2 < 0x7525EBD6);
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v6 = v3 < 0x7525EBD6;
  }
  else {
    BOOL v6 = v5;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_100368D00(uint64_t result)
{
  *(_DWORD *)(result + 4) = 1206753083;
  return result;
}

void sub_100368D10()
{
}

uint64_t sub_100368D24@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 468) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 2200))(0);
}

void sub_100368D8C(unsigned int a1@<W8>, uint64_t a2, int a3, int a4)
{
  uint64_t v7 = *(void *)(v5 - 0x38C18B7A1BA3132CLL);
  unsigned int v8 = *v4 - 1225318619;
  *(unsigned char *)(v7 + v8) = (HIBYTE(a1) ^ 6) - ((a1 >> 23) & 0x30) + 24;
  *(unsigned char *)(v7 + v8 + 1) = (BYTE2(a1) ^ 0x25) - ((a1 >> 15) & 0x30) + 24;
  *(unsigned char *)(v7 + v8 + 2) = (BYTE1(a1) ^ 0xFB) - ((2 * (BYTE1(a1) ^ 0xFB)) & 0x30) + 24;
  *(unsigned char *)(v7 + v8 + 3) = a1 ^ 0x5B;
  uint64_t v9 = *(void *)(v5 - 0x38C18B7A1BA3132CLL);
  unsigned int v10 = v6 - ((2 * v6 - 593612728) & 0xDEC41458) - 575593904;
  unsigned int v11 = ((2 * (*v4 - 1225318615)) & 0x7FD757B6) + ((*v4 - 1225318615) ^ 0xBFEBABDB) + 1075074085;
  *(unsigned char *)(v9 + v11) = (HIBYTE(v10) ^ 0xEF) - ((2 * (HIBYTE(v10) ^ 0xEF)) & 0x30) + 24;
  *(unsigned char *)(v9 + v11 + 1) = (BYTE2(v10) ^ 0x62) - ((v10 >> 15) & 0x30) + 24;
  *(unsigned char *)(v9 + v11 + 2) = (BYTE1(v10) ^ 0xA)
                           - 2
                           * ((BYTE1(v10) ^ 0xA) & 0x1D ^ ((unsigned __int16)(v6 - ((2 * v6 + 12360) & 0x1458) + 8784) >> 8) & 5)
                           + 24;
  *(unsigned char *)(v9 + v11 + 3) = (v6 - ((2 * v6 + 72) & 0x58) + 80) ^ 0x34;
  *int v4 = a4;
  JUMPOUT(0x10034F0E0);
}

uint64_t sub_100368F04@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  unsigned int v5 = (((((((v4 - 70) | 0x49) - 7) | 4u) + 1089336280) ^ *(_DWORD *)(*(void *)(v2 - 0x1F010F7499D3F79ELL) + 4 * v3)) >> a2) ^ 0x26A4C7DA;
  *(_DWORD *)(result + 4) = v5 & 0x17DFE427 ^ 0xCC1A6DA ^ ((v5 & 0x17DFE426)
                                                         - (v5 & 0x550C006)
                                                         + (v5 & 0x550C006 ^ 0xCD70D2DE));
  return result;
}

uint64_t sub_100368F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100385D8C(a1, 2457039158, a3, a4);
}

uint64_t sub_100368FA8(uint64_t a1, int a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v5 + (a3 ^ (a2 + 3498)) - 259) * (v6 == a4)) ^ a3)))(0);
}

uint64_t sub_100368FD8()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1523)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((26 * (STACK[0x640] == 0)) ^ (v0 + 501))))();
}

uint64_t sub_100369010()
{
  return sub_10036903C();
}

uint64_t sub_10036903C@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v27 = 4 * (v17 + v23);
  unint64_t v28 = (a4 ^ HIDWORD(v26))
      + v25 * (unint64_t)(*(_DWORD *)(*v22 + 4 * v23) ^ v12)
      + (*(_DWORD *)(a12 + v27) ^ (v12 + ((v24 + v15) & v16) - 1065));
  *(_DWORD *)(a12 + v27) = (v28 + a1 - (v19 & (2 * v28))) ^ a2;
  int v29 = v23 + 1 + a3;
  LODWORD(v28) = (v14 > v18) ^ (v29 < v13);
  BOOL v30 = v29 < v21;
  if (v28) {
    BOOL v30 = v14 > v18;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * (v30 ^ v24 ^ 1)))();
}

uint64_t sub_1003690CC()
{
  uint64_t v1 = ((LODWORD(STACK[0x43C]) ^ 0x2DD) - 2089757737) & 0x7C8F2EF5;
  unint64_t v2 = STACK[0x4E0];
  unint64_t v3 = STACK[0x640];
  STACK[0x430] = (unint64_t)&STACK[0x6B0] + STACK[0x390] + (v1 ^ 0xDAFF1E9D4CBC4D6ALL);
  int v4 = 654 * (v1 ^ 0x2F7);
  int v5 = v1 + 1146;
  if (v2) {
    BOOL v6 = v3 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  int v7 = v6;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v7 * (v4 - 1085)) ^ v5)))();
}

uint64_t sub_100369180@<X0>(int a1@<W8>)
{
  unint64_t v4 = (v3 - 168) & 0xDE8BE26CF99EC706;
  unint64_t v5 = 1178560073 * ((v3 - 168 - 2 * v4 - 0x21741D93066138FALL) ^ 0xC577B284430ABF64);
  *(void *)(v3 - 160) = v5 + 1922694427;
  *(void *)(v3 - 152) = v5 + v1;
  *(_DWORD *)(v3 - 136) = v5 + a1 + 2021363714;
  *(_DWORD *)(v3 - 132) = -1178560073 * ((v3 - 168 - 2 * v4 - 107034874) ^ 0x430ABF64);
  *(_DWORD *)(v3 - 164) = v5 + a1 - 2001782082 - 109;
  *(_DWORD *)(v3 - 144) = ((a1 - 2001782082) & 0xBAFF7BD8) + v5;
  *(_DWORD *)(v3 - 140) = (a1 - 2001782082) ^ v5;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x8DF)))(v3 - 168);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 168)))(v6);
}

uint64_t sub_100369250@<X0>(void *a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  int v9 = (a3 - 1097) | 0x508;
  int v10 = *(_DWORD *)(*v8 + 4 * (a2 - 1553112182));
  *(unsigned char *)(*a1 + ((v9 - 2001141074) & 0x7746FD7F ^ (a4 + 780)) + v5) = (v10 ^ v7)
                                                                                     - ((2 * (v10 ^ v7)) & 0x30)
                                                                                     + 24;
  return (*(uint64_t (**)(void))(v4 + 8 * ((726 * (v5 - 1 == ((v9 - 191) ^ v6))) ^ v9)))();
}

uint64_t sub_100369288@<X0>(int a1@<W8>)
{
  int v6 = a1 + 233779103;
  unsigned int v7 = (v1 + 1995472077) & 0x890F82EF;
  if (*v3 + 244880036 < 0) {
    int v6 = (v7 ^ 0xFCDD2C77) - a1;
  }
  *uint64_t v3 = *v3 - 90582814 + v6;
  BOOL v8 = v2 + 649736019 < -1354551340;
  **(_DWORD **)(v4 - 0x1F010F7499D3F79ELL) = *(_DWORD *)(*(void *)(v4 - 0x1F010F7499D3F79ELL) + 4 * (a1 + 143196289));
  if (v2 + 649736019 >= -1354551340) {
    BOOL v8 = v2 + 649736019 > 792932309;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((1482 * v8) ^ v7)))();
}

uint64_t sub_100369388()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((225
                                * (((2 * ((v0 - 548764096) & 0x20B577DF ^ 0x243) - 902) & (v1 - 1791330435))
                                 - LODWORD(STACK[0x3E0]) != -1791330438)) ^ v0)))();
}

uint64_t sub_1003693EC@<X0>(int a1@<W8>)
{
  unsigned int v3 = (a1 + 1289932042) & 0xB31D32DD;
  *(_DWORD *)(v2 - 200) = v3
                        + 628203409 * (((v2 - 200) & 0x8F7154F5 | ~((v2 - 200) | 0x8F7154F5)) ^ 0xF206A739)
                        - 231789523;
  (*(void (**)(uint64_t))(v1 + 8 * (int)(v3 + 1563)))(v2 - 200);
  BOOL v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (int)(v3 ^ 0xA10)))(336, 1777295586) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)((((v3 ^ v4) & 1) * ((v3 ^ 0x28) - 295)) ^ v3)))();
}

uint64_t sub_1003694C4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((482 * (((v0 == v2) | v3) == 0)) ^ 0x6EA)))();
}

uint64_t sub_1003694D8()
{
  int v4 = v3 ^ 0x582;
  unsigned int v5 = v2 - 568025681;
  BOOL v6 = v5 < 0x57A22349;
  BOOL v7 = v1 + 1470243657 < v5;
  if (v6 != v1 > (((v4 ^ 0x47D) + 263) ^ 0xA85DDC41 ^ (3 * (v4 ^ 0x47D)))) {
    BOOL v8 = v6;
  }
  else {
    BOOL v8 = v7;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((!v8 | (!v8 << 6)) ^ v4)))();
}

uint64_t sub_10036955C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 != 24) * a6) ^ v8)))();
}

uint64_t sub_1003695D4(_DWORD *a1)
{
  unsigned int v2 = 1755732067
     * ((2 * ((a1 ^ 0xFDCA5AD1) & 0x4699B354) - (a1 ^ 0xFDCA5AD1) - 1184478037) ^ 0x9A6AABA1);
  unsigned int v3 = a1[8] - v2;
  int v4 = a1[2] ^ v2;
  int v9 = v3
     + 628203409 * ((&v9 - 253749462 - 2 * ((unint64_t)&v9 & 0xF0E0172A)) ^ 0x72681B19)
     - 1404134225;
  unsigned int v5 = (char *)*(&off_1022AC750 + (int)(v3 ^ 0x45E092C3)) - 4;
  uint64_t result = (*(uint64_t (**)(int *))&v5[8 * (v3 - 1172343139)])(&v9);
  if (v4 > 1235460294)
  {
    if (v4 == 1520672966)
    {
      unsigned int v7 = 3;
    }
    else
    {
      if (v4 != 1235460295) {
        goto LABEL_11;
      }
      unsigned int v7 = 1;
    }
LABEL_10:
    BOOL v8 = (*(uint64_t (**)(void, uint64_t))&v5[8 * (v3 - 1172343182)])(v3 + 1331291423 + *((_DWORD *)*(&off_1022AC750 + (int)(v3 - 1172345411)) + 6 * v7 + 3), 2970849626) != 0;
    __asm { BRAA            X8, X17 }
  }
  if (v4 == 1235460291)
  {
    unsigned int v7 = 0;
    goto LABEL_10;
  }
  if (v4 == 1235460294)
  {
    unsigned int v7 = 2;
    goto LABEL_10;
  }
LABEL_11:
  a1[13] = -605900154;
  return result;
}

uint64_t sub_10036983C@<X0>(int a1@<W2>, uint64_t a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,arg30_10036983C a30)
{
  *(_OWORD *)(a2 + (a3 + a1)) = *(_OWORD *)&a30.arr[4];
  return (*(uint64_t (**)(void))(v32 + 8 * (((((v31 + 1) & 0x1FFFFFFF0) == 16) * ((v30 + 300) ^ 0x356)) ^ v30)))();
}

uint64_t sub_100369884@<X0>(unsigned int a1@<W8>)
{
  int v8 = STACK[0x54C];
  int v9 = &v6[6 * v2];
  void v9[2] = v5;
  void v9[3] = v4;
  *((void *)v9 + 2) = STACK[0x3F8];
  v9[6] = v8;
  *uint64_t v6 = v1 + 1;
  BOOL v11 = v3 - 561119666 > (int)(a1 + 1990608071 + ((a1 + 528) | 0x61)) || v3 - 561119666 < SLODWORD(STACK[0x3A0]);
  return (*(uint64_t (**)(void))(v7 + 8 * ((1719 * v11) ^ a1)))();
}

uint64_t sub_1003698FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  if (a14 < 0xAD70EA28 != a29 - 1578768323 < (a18 ^ 0xAD70EC84)) {
    BOOL v31 = a29 - 1578768323 < (a18 ^ 0xAD70EC84);
  }
  else {
    BOOL v31 = a29 - 1578768323 > a14;
  }
  return (*(uint64_t (**)(void))(v30 + 8 * (((4 * v31) | (16 * v31)) ^ (v29 + 993))))();
}

void sub_100369908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  _DWORD *v37 = -891661159;
  (*(void (**)(uint64_t))(v36 + 8 * (v35 ^ 0x891)))(a35);
  JUMPOUT(0x10036995CLL);
}

uint64_t sub_100369AA0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  BOOL v27 = v20 < v23;
  *(&a20 + (a3 + v22)) = *(unsigned char *)(v26 + (v21 + a1))
                                     - ((2 * *(unsigned char *)(v26 + (v21 + a1))) & 0x30)
                                     + 24;
  unsigned int v28 = v21 + 1 + a2;
  int v29 = v27 ^ (v28 < v23);
  BOOL v30 = v28 < v20;
  if (!v29) {
    BOOL v27 = v30;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * ((245 * v27) ^ v25)))();
}

uint64_t sub_100369B14@<X0>(int a1@<W6>, int a2@<W7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,unsigned int a38)
{
  unsigned int v41 = (((a3 + 1718615026) | 0x9104F3C7) + 771241605) ^ (((((a3 + 860937202) | 0xC42413C7) ^ 0x888B0C39) & *v40 | v40[623] & 0x80000000) >> 1);
  v40[623] = v40[396] ^ v38 ^ *((_DWORD *)&STACK[0x538] + ((*v40 & 1) == 0)) ^ (v41 + a2 - (a1 & (2 * v41)));
  return (*(uint64_t (**)(void))(v39 + 8 * ((26 * (a38 > 0x26F)) ^ a3)))();
}

uint64_t sub_100369BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_100373E80(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_100369BD0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 - 1906175855) & 0x719DEECD) + ((v2 - 1189425127) & 0x46E52CFF) + 508)
                                * (v1 == a1)) ^ v2)))();
}

uint64_t sub_100369C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v51 = 460628867 * ((((2 * (v50 - 200)) | 0xBD03A752) - (v50 - 200) + 561917015) ^ 0x921751D4);
  *(void *)(v50 - 144) = 0;
  *(void *)(v50 - 200) = 0;
  *(void *)(v50 - 192) = a15;
  *(void *)(v50 - 168) = a23;
  *(void *)(v50 - 160) = a47;
  *(void *)(v50 - 176) = v47;
  *(_DWORD *)(v50 - 184) = v51 + v48 + 631;
  *(_DWORD *)(v50 - 152) = v51 + 1572052379;
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(v49 + 8 * (v48 + 2055)))(v50 - 200);
  int v53 = *(_DWORD *)(v50 - 136);
  LODWORD(STACK[0x66C]) = v53;
  return (*(uint64_t (**)(uint64_t))(v49
                                            + 8
                                            * (((((v48 - 36) ^ (v53 == 605940026)) & 1) * (v48 - 204)) ^ v48)))(v52);
}

uint64_t sub_100369D0C(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23)
{
  v25.n128_u64[0] = 0x3030303030303030;
  v25.n128_u64[1] = 0x3030303030303030;
  v26.n128_u64[0] = 0x1818181818181818;
  v26.n128_u64[1] = 0x1818181818181818;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * (((((v23 ^ 0x1EA) - 1247223927) & 0x4A5727BF ^ 0x516) * (HIDWORD(a16) < 0xFFFFFFFE)) ^ v23 ^ 0x1EA)))(3658457652, 3258799205, 1036168091, a23, 4140475915, 1943, 2544462991, 2654235991, a1, a2, a3, a4, v25, v26, a13, a14, a15, a16, a17,
           a18,
           a19);
}

void sub_100369DD8()
{
}

uint64_t sub_100369EEC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 == 0x4EC915378BAE2176) * (((v1 - 8342375) & 0x7F4DAD) - 71)) ^ v1)))();
}

uint64_t sub_100369F34(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  unsigned int v11 = v6 - 32;
  uint64_t v12 = v9 + v11;
  long long v13 = *(_OWORD *)(v12 - 31);
  uint64_t v14 = a1 + v11;
  *(_OWORD *)(v14 - 15) = *(_OWORD *)(v12 - 15);
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v8 != 32) * ((v7 + a4) & a5 ^ a6)) ^ (v7 - 205))))();
}

uint64_t sub_100369F40@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *uint64_t v2 = a2;
  *(_DWORD *)(result + 16) = -605900273;
  return result;
}

uint64_t sub_100369F54()
{
  BOOL v5 = v0 > 0x5F4FECBE;
  if (v5 == v4 + 520583371 < -1599073471) {
    LOBYTE(v5) = v4 + 520583371 < v3;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((125 * (((v1 - 1) ^ v5) & 1)) ^ v1)))();
}

void sub_100369FC8()
{
}

uint64_t sub_10036A118@<X0>(unsigned char *a1@<X6>, int a2@<W8>)
{
  int v3 = (unsigned char *)STACK[0x4B8];
  a1[12] = 24 - ((-256 << (a2 ^ 0xF4)) & 0x30);
  a1[13] = 24;
  a1[14] = 24;
  a1[15] = 25;
  v3[16] ^= *a1 ^ 0x18;
  v3[17] ^= a1[1] ^ 0x18;
  v3[18] ^= a1[2] ^ 0x18;
  v3[19] ^= a1[3] ^ 0x18;
  v3[20] ^= a1[4] ^ 0x18;
  v3[21] ^= a1[5] ^ 0x18;
  v3[22] ^= a1[6] ^ 0x18;
  v3[23] ^= a1[7] ^ 0x18;
  v3[24] ^= a1[8] ^ 0x18;
  v3[25] ^= a1[9] ^ 0x18;
  v3[26] ^= a1[10] ^ 0x18;
  v3[27] ^= a1[11] ^ 0x18;
  v3[28] ^= a1[12] ^ 0x18;
  v3[29] ^= a1[13] ^ 0x18;
  v3[30] ^= a1[14] ^ 0x18;
  v3[31] ^= a1[15] ^ 0x18;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 8
                                                                                              * ((a2 - 292) ^ 0x38)))(22, 880, 516166744, 4016179756, 626, 4294966014);
}

void sub_10036A334(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10036A37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void))(v9
                                                                              + 8
                                                                              * ((808
                                                                                * (((((a6 - 1356842545) | 0x1F8205) + v6) & v7) == 0)) | (a6 - 1560))))(a1, a2, a3, (v8 - a3), (a6 - 1493));
}

uint64_t sub_10036A3C4(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(_DWORD *)(v7 - 120) = a7 + 2;
  *(_DWORD *)(v7 - 128) = a7 + 9;
  *(_DWORD *)(v7 - 136) = a7 + 8;
  *(_DWORD *)(v7 - 144) = a7 + 7;
  *(_DWORD *)(v7 - 152) = a7 + 6;
  v8.n128_u64[0] = ((_BYTE)a7 + 1) & 0xF;
  v8.n128_u64[1] = a7 & 0xF;
  v9.n128_u64[0] = ((_BYTE)a7 - 1) & 0xF;
  v9.n128_u64[1] = ((_BYTE)a7 + 14) & 0xF;
  v10.n128_u64[0] = ((_BYTE)a7 + 13) & 0xF;
  v10.n128_u64[1] = ((_BYTE)a7 + 12) & 0xF;
  v11.n128_u64[0] = ((_BYTE)a7 + 11) & 0xF;
  v11.n128_u64[1] = ((_BYTE)a7 + 10) & 0xF;
  v12.n128_u64[0] = *(_DWORD *)(v7 - 128) & 0xF;
  v12.n128_u64[1] = *(_DWORD *)(v7 - 136) & 0xF;
  v13.n128_u64[0] = *(_DWORD *)(v7 - 144) & 0xF;
  v13.n128_u64[1] = *(_DWORD *)(v7 - 152) & 0xF;
  v14.n128_u64[0] = ((_BYTE)a7 + 5) & 0xF;
  v14.n128_u64[1] = ((_BYTE)a7 + 4) & 0xF;
  return sub_10036A4E4(a1, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_10036A4E4(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, int a16)
{
  uint64_t v30 = (a14 + v19 - v20);
  uint64_t v31 = ((_BYTE)a14 + (_BYTE)v19 - (_BYTE)v20) & 0xF;
  uint64_t v32 = v22;
  v33.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v27).u64[0];
  v33.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v27).u64[0];
  int8x16_t v34 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v21 + v30), *(int8x16_t *)(v18 + (v30 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v17 + (v30 & 0xF) - 15), *(int8x16_t *)(v16 + (v30 & 0xF) - 15))));
  int8x16_t v35 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v34, v34, 8uLL), v29), vmulq_s8(v33, v28)));
  *(int8x16_t *)(v23 + v30) = vextq_s8(v35, v35, 8uLL);
  return (*(uint64_t (**)(void))(v26 + 8 * (((v24 + v20 == a15) * v25) ^ a16)))();
}

uint64_t sub_10036A56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v15 = (v10 + v11);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(v13 + v15) ^ *(unsigned char *)(v9 + (v15 & 0xF)) ^ *(unsigned char *)(v7 + (v15 & 0xF)) ^ *(unsigned char *)((v15 & 0xF) + v8 + 2) ^ ((v15 & 0xF) * (v12 ^ 0x12)) ^ 0x18;
  return (*(uint64_t (**)(void))(v14 + 8 * ((121 * (v10 - 1 == a7)) ^ v12)))();
}

uint64_t sub_10036A5D4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 + 93) ^ (v2 + 106)) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_10036A604@<X0>(uint64_t a1@<X8>)
{
  unint64_t v5 = v3 - 1;
  STACK[0x448] = v5;
  *(unsigned char *)(a1 + v5) = ((v2 + 1) ^ 0xBA) * (v2 + 18);
  return (*(uint64_t (**)(void))(v4 + 8 * ((61 * (STACK[0x448] == (v1 - 28) - 757)) ^ v1)))();
}

uint64_t sub_10036A60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(_DWORD *)(v32 - 144) = (v29 - 1023) ^ (1225351577
                                         * (((((v32 - 144) | 0xBD376AEC) ^ 0xFFFFFFFE) - (~(v32 - 144) | 0x42C89513)) ^ 0x61524D05));
  *(void *)(v32 - 136) = v27;
  *(void *)(v32 - 128) = v30;
  *(void *)(v32 - 120) = v30;
  *(void *)(v32 - 112) = v31;
  (*(void (**)(uint64_t))(v26 + 8 * (v29 + 528)))(v32 - 144);
  int v33 = 1374699841 * ((((v32 - 144) | 0xFFB46DA3) + (~(v32 - 144) | 0x4B925C)) ^ 0x924075AB);
  *(_DWORD *)(v32 - 128) = v25 - v33 + v28 + 2;
  *(_DWORD *)(v32 - 144) = (v29 - 1536) ^ v33;
  *(void *)(v32 - 136) = a25;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v29 + 537)))(v32 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (int)((((((v29 - 898) ^ (*(_DWORD *)(v32 - 140) == -1045335036)) & 1) == 0)
                                                   * (((v29 + 1843222252) & 0x9222AA5F) - 1607)) ^ v29)))(v34);
}

uint64_t sub_10036A744(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = **(unsigned __int8 **)(a2 + 8) + ((v4 - 1318889483) & 0x4E9CA7DF ^ 0xFFFFFD07);
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((461 * (((v4 + 53) ^ ((v3 & (2 * v6)) + (v6 ^ v2) == v2)) & 1)) ^ v4)))();
}

void sub_10036A7AC()
{
}

uint64_t sub_10036A7B4()
{
  int v3 = 1178560073 * ((1642999374 - ((v2 - 200) | 0x61EE2E4E) + ((v2 - 200) | 0x9E11D1B1)) ^ 0x2485A9D3);
  *(void *)(v2 - 192) = STACK[0x5D0];
  *(_DWORD *)(v2 - 184) = -1882357475 - v3 + v0;
  *(_DWORD *)(v2 - 200) = 221124111 - v3;
  (*(void (**)(uint64_t))(v1 + 8 * (int)(v0 ^ 0x8C4)))(v2 - 200);
  STACK[0x4C8] = *(void *)(v1 + 8 * v0);
  return sub_10036CF70(STACK[0x430]);
}

uint64_t sub_10036A860()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((((v1 ^ 0x393) + 462 + 109 * (v1 ^ 0x393) - 2311) * (v0 == 1388428834)) | v1)))();
}

uint64_t sub_10036AA24(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v8 = v6 < v4;
  if (v8 == a3 - 0x2A3F22C221241D9BLL < v4 + ((a4 + v5) & 0xAB989B37) - 289) {
    BOOL v8 = a3 - 0x2A3F22C221241D9BLL < v6;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v8 * ((a4 + v5) ^ (v5 + 383) ^ 0x28E)) ^ a4)))();
}

uint64_t sub_10036AA9C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((((v5 | 0x82) - 150) ^ a3) - 969) ^ (((v5 | 0x82) - 150) | a4)) * (v4 == 35)) ^ (v5 | 0x82))))();
}

uint64_t sub_10036AAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v27 - 112) = v26
                         + 1224239923 * ((((v27 - 144) | 0x5293BF3B) - ((v27 - 144) & 0x5293BF3B)) ^ 0xA02042EC)
                         + 417;
  *(void *)(v27 - 128) = a24;
  *(void *)(v27 - 120) = a23;
  *(void *)(v27 - 144) = a22;
  *(void *)(v27 - 136) = a20;
  *(void *)(v27 - 104) = a24;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v26 + 2075)))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (((v24 + a21 + 2 < (((v26 ^ 0x3F9) - 195) | 0x540u) + 2147481660)
                                              * ((v26 ^ 0x3F9) - 739)) ^ ((v26 ^ 0x3F9) - 272))))(v28);
}

uint64_t sub_10036AB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100389804(a1, a2, a3, a4, a5);
}

uint64_t sub_10036ABAC()
{
  STACK[0x4C8] = *(void *)(v1 + 8 * (v0 - 733));
  return sub_10036CF70();
}

void sub_10036ABC8()
{
}

uint64_t sub_10036AC58()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((11
                                * ((*(_DWORD *)(*v2 + 4 * v5) ^ (v1 + (v4 ^ 0x75Fu) + 562)) <= ((v4 + 805931315) & 0xCFF6743F ^ v1 ^ *(_DWORD *)(*v3 + 4 * v5)))) | v4)))();
}

uint64_t sub_10036ACC4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1596 * ((v1 ^ (v3 + 661) ^ (v0 + 458)) < 0x201)) ^ v0)))();
}

uint64_t sub_10036AD7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2047 * (a1 + 1 == v3 + 4)) ^ v1)))();
}

uint64_t sub_10036AE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v21 = 628203409 * ((((v20 - 152) | 0x9A7BC63F) + (~(v20 - 152) | 0x658439C0)) ^ 0x18F3CA0D);
  *(void *)(v20 - 152) = a15;
  *(_DWORD *)(v20 - 144) = v21 + v18 + 688;
  *(_DWORD *)(v20 - 140) = a18 - v21 + (((v18 + 1610612708) | 0x11C42115) ^ 0xBF00B732);
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v18 + 2217)))(v20 - 152);
  uint64_t v23 = *(_DWORD *)(v20 - 184) & 0x3F;
  *(unsigned char *)(v20 - 252 + (v23 ^ 0x3C)) = -104;
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((274 * ((v23 ^ 0x3C) > 0x37)) ^ v18)))(v22);
}

void sub_10036AF5C()
{
}

uint64_t sub_10036AF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((((v7 == a6) ^ (v6 + v8 - 104)) & 1) * ((v8 + 1820) ^ 0x75A)) ^ v8)))();
}

uint64_t sub_10036AFA4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((2 * (((a3 + a4 + 75 < (v5 - 21)) ^ (v5 - 1)) & 1)) & 0xF7 | (8 * (((a3 + a4 + 75 < (v5 - 21)) ^ (v5 - 1)) & 1))) ^ (v5 + 1702))))();
}

uint64_t sub_10036AFF0(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((3381 * (v4 + ((a3 + 234386791) & 0xF2078C72 ^ 0x45A) == ((a2 - 1189) | 0x200) - 600)) ^ a2)))();
}

void sub_10036B04C(_DWORD *a1)
{
  unsigned int v1 = *a1 + 108757529 * ((2 * (a1 & 0x5EAB9BD4) - a1 - 1588304853) ^ 0x41C80600);
  __asm { BRAA            X10, X17 }
}

void sub_10036B10C()
{
}

uint64_t sub_10036B120(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (v2 + 189504305) & 0xF4B4676D;
  uint64_t v5 = (*(uint64_t (**)(void, uint64_t, void))(v3 + 8 * (v2 ^ 0xC59)))(*(unsigned int *)STACK[0x2F0], a2, LODWORD(STACK[0x60C]));
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (int)(v4 ^ ((((LODWORD(STACK[0x4EC]) == 605940026) ^ ((v4 ^ 0x42) - 46)) & 1) << 7))))(v5);
}

uint64_t sub_10036B19C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, int a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,char a38)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, char *))(v38 + 8 * ((1538 * (a15 + ((LODWORD(STACK[0x2A8]) << ((a19 + 30) ^ 0xB9)) & 0x52 ^ 0x50) + (STACK[0x2A8] & 0x3F ^ 0xFFFFFD55) < 0xFFFFFFC0)) ^ (v39 + 334))))(2148926359, a2, 3187482797, a32, a31, a6, &STACK[0x264], &a38);
}

uint64_t sub_10036B244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v12 = a8 + v10 + (v11 ^ 0x87947C7);
  BOOL v13 = v12 < 0x5B6E828E;
  BOOL v14 = v12 > v8 + 279214548;
  if ((v8 + 279214548) < 0x5B6E828E != v13) {
    BOOL v14 = v13;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((!v14 * (((v11 - 717) | 0x224) ^ 0x6E4)) ^ v11)))();
}

uint64_t sub_10036B2C4@<X0>(uint64_t a1@<X3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  HIDWORD(a6) = a2 + *(_DWORD *)(a9 + 32) - 1551903871;
  if (HIDWORD(a6) >= 0xFFFFFFFE) {
    uint64_t v13 = 1861828263;
  }
  else {
    uint64_t v13 = 1861828275;
  }
  LODWORD(v15) = *(_DWORD *)(a11 - 0x38C18B7A1BA3131CLL);
  HIDWORD(a10) = ((v11 - 369) | 0x202) + v15 + 405184922;
  HIDWORD(v15) = v12 ^ 0x88;
  return sub_1003854C4(3658457652, v13, 18198467, a1, 4140475915, 1943, 2544462991, 2654235991, a11 - 0x38C18B7A1BA3131CLL, a4, a5, a6, v15, a8, a9, a10);
}

uint64_t sub_10036B3EC(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((23
                                * (a2 + a1 + ((v2 + 1750975829) & 0x97A233E5) + 570439688 - 451 >= (((v2 - 2160) | 0x422) ^ 0x433u))) ^ v2)))();
}

uint64_t sub_10036B47C()
{
  *(void *)(v4 - 136) = v3;
  *(_DWORD *)(v4 - 128) = -1374699841
                        * ((((v4 - 144) | 0x951DA954) - (v4 - 144) + ((v4 - 144) & 0x6AE256A8)) ^ 0xF8E9B15D);
  *(_DWORD *)(v4 - 144) = (v0 - 640) ^ (1374699841
                                      * ((((v4 - 144) | 0x951DA954) - (v4 - 144) + ((v4 - 144) & 0x6AE256A8)) ^ 0xF8E9B15D));
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xB99)))(v4 - 144);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((*(_DWORD *)(v4 - 140) == v2) * ((v0 - 856481615) & 0x330CDFFD ^ 0x18)) ^ (v0 - 335))))(v5);
}

uint64_t sub_10036B52C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (unint64_t)&v8[qword_10241AAB0 + qword_102419E28];
  qword_10241AAB0 = 2119093099 * v2 + 0x22F8A8F5CDCFC8ALL;
  qword_102419E28 = 2119093099 * (v2 ^ 0x22F8A8F5CDCFC8ALL);
  int v3 = *(_DWORD *)(a2 + 4);
  unsigned __int8 v4 = 107 * ((qword_102419E28 + 107 * v2 - 118) ^ 0x8A);
  uint64_t v5 = (char *)*(&off_1022AC750 + (v4 ^ byte_101D1BC20[byte_101D17AE0[v4] ^ 0x4D]) - 48) - 4;
  if (v3 == 1791330441) {
    __asm { BRAA            X1, X17 }
  }
  if (v3 == 1791330448)
  {
    int v6 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BRAA            X2, X17 }
  }
  return 4294925278;
}

uint64_t sub_10036B6E4@<X0>(int a1@<W2>, int a2@<W8>)
{
  *int v3 = v3[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v4 - 1 == ((a2 + 1862084328) & 0x9102D2DF) + 531810994)
                                     * ((a2 - 92) ^ (a1 + 621) ^ 0xF774FEA6)) ^ (a2 - 92))))();
}

uint64_t sub_10036B760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((((54 * (v6 ^ 0x17C) - 683) ^ (v6 - 880691695) & 0x347E4ABD) * (v5 == a5)) ^ v6)))();
}

uint64_t sub_10036B7AC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  *(void *)(a3 + (v9 + v6)) = *(void *)(v8 + (v9 + v6));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a6 == 0) * v7) ^ a4)))();
}

uint64_t sub_10036B7DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((131 * (v4 + 1 == v6 + 64)) ^ a4)))();
}

uint64_t sub_10036B898(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * (((((v2 == v3) ^ (91 * (a2 ^ 0xAC))) & 1)
                                             * ((a2 ^ 0x3AC) + 78)) ^ a2)))((a2 ^ 0x3ACu) + 1446);
}

uint64_t sub_10036B8D4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (2173 * (v1 == v3)))))();
}

void sub_10036B8F8()
{
  *(_DWORD *)(v0 - 0x38C18B7A1BA31314) = -605900061;
  sub_10034D874();
}

uint64_t sub_10036B918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  HIDWORD(a12) = a2;
  return sub_100389808(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_10036B92C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v0 ^ 0x4824F27A) == ((v1 - 134353944) & 0x5F967BD7 ^ 0xAE3824C3) + v2)
                                * (v4 + ((v1 + 67372716) | 0x53906114) + 2018)) ^ v1)))();
}

uint64_t sub_10036B9A4()
{
  *(void *)(v3 + v0 - 0x2E910FB84003472BLL) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v1 & 0x38) == 8) * (v2 - 268)) ^ v2)))();
}

uint64_t sub_10036B9F0(uint64_t a1)
{
  unsigned int v5 = *(_DWORD *)(v3 + 344);
  unsigned int v6 = (*(_DWORD *)(a1 + 4) ^ v1) - 588200714;
  if (v6 < 0x566E4A90 != v5 > ((v4 - 1134) ^ 0xA991B4EC)) {
    BOOL v7 = v5 > ((v4 - 1134) ^ 0xA991B4EC);
  }
  else {
    BOOL v7 = v5 + 1450068624 > v6;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((!v7 | (2 * !v7)) ^ v4)))();
}

uint64_t sub_10036BA6C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v0 + v3 + 2 < (((v2 | 2) - 195) | 0x540u) + 2147481660) * ((v2 | 2) - 739)) ^ ((v2 | 2) - 272))))();
}

uint64_t sub_10036BAEC(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_1022A7DC0 + ((88 * (*(_DWORD *)(a2 + 4) == 1791330439)) | 0x1A4u)))();
}

uint64_t sub_10036BB28(uint64_t result)
{
  unint64_t v1 = 1755732067 * ((2 * (result & 0x155053FA18C8728CLL) - result + 0x6AAFAC05E7378D73) ^ 0xB7040B3A39F130A8);
  unint64_t v2 = *(void *)(result + 16) + v1;
  unint64_t v3 = *(void *)(result + 32) - v1;
  BOOL v4 = v3 > v2;
  BOOL v5 = v3 == v2;
  int v6 = v4;
  if ((*(_DWORD *)(result + 4) ^ (1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8)))) {
    BOOL v5 = v6;
  }
  if (v5) {
    int v7 = *(_DWORD *)(result + 12) ^ (1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8));
  }
  else {
    int v7 = *(_DWORD *)(result + 24) - 1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8);
  }
  *(_DWORD *)uint64_t result = v7 ^ (*(_DWORD *)(result + 8)
                          - 1755732067 * ((2 * (result & 0x18C8728C) - result - 415789709) ^ 0x39F130A8));
  return result;
}

uint64_t sub_10036BBCC@<X0>(int a1@<W1>, uint64_t a2@<X3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,unint64_t a25)
{
  LODWORD(STACK[0x268]) = a3;
  LODWORD(STACK[0x26C]) = a22;
  STACK[0x270] = a25;
  LODWORD(STACK[0x278]) = a23 - v28 + 2014182718;
  STACK[0x280] = v27 + (v28 + 612805554);
  int v30 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48 * a1 + 8))(a11, a18);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((1033
                                              * (v30 + v25 - (((3 * (v29 ^ 0x2D8)) ^ 0x483BD36E) & (2 * v30)) == v25)) ^ v29)))(785680345);
}

uint64_t sub_10036BC9C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 + 473 + ((v2 + 276) | a2) - 587) * (v3 == 35)) ^ v2)))();
}

uint64_t sub_10036BCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  HIDWORD(a21) = -612805554;
  unsigned int v33 = 628203409 * (&a22 ^ 0x82880C33);
  LODWORD(v36) = a21;
  HIDWORD(v36) = (v28 - 102481715) & 0x61BBEFB;
  LODWORD(a24) = v28 - v33 + 999;
  HIDWORD(a24) = -536575948 - v33 + HIDWORD(v36) + a21 - 729;
  a25 = a16;
  a22 = a15;
  a23 = a13;
  a27 = a19;
  a28 = a14;
  uint64_t v34 = (*(uint64_t (**)(uint64_t *))(v32 + 8 * (int)(v28 + 1477)))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * ((1524 * (a26 == v29 + 605939864)) ^ v28)))(v34, v30, 1633702658, 3349716575, 1791330458, 945250827, 846079461, v31, a9, a10, a11, a12, a13, a14, a15, a16, a17, v36, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10036BDDC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  BOOL v17 = a2 - 1932213236 > 1706464333 || a2 - 1932213236 < a14;
  return (*(uint64_t (**)(void))(v14 + 8 * ((v17 * (v15 - 339)) ^ v15)))();
}

uint64_t sub_10036BE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  if (a17 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37
  }
                                                                + 8
                                                                * (((a37 != 606950823) | (4 * (a37 != 606950823))) ^ (a7 + a6 + 1369))))(a10, a2, -2841387828);
  if (a17 != 1) {
    JUMPOUT(0x10036BFE0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37
                                                                       + 8
                                                                       * ((422
                                                                         * (((a37 == 606950823) ^ (a6 + 119)) & 1)) ^ (a7 + a6 + 394))))(a1, a2, -2841387828, a10);
}

uint64_t sub_10036C01C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((a4 - 420) | 0x8C) ^ ((a4 ^ 0x401) + 748)) * (v5 == a5)) ^ a4)))();
}

uint64_t sub_10036C058(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  __int16 v2 = *(_DWORD *)result + 26185 * ((2 * (result & 0x1A68) - result - 6761) ^ 0x9DF5);
  int v3 = ((2 * (v2 & 0x1FF ^ 0x19D)) | 0x64952A50) - (v2 & 0x1FF ^ 0x19D) - 843748648;
  *(_DWORD *)(v1 - 0x2E910FB81C0D977FLL) = ((v3 & 0x30429319 ^ 0xD954201) + (v3 & 0x20804E6 ^ 0x820A1) - 1) ^ 0x2FFC74D2;
  *(void *)(v1 - 0x2E910FB81C0D979FLL) = 0x1691A9BC3C601931;
  *(_DWORD *)(v1 - 0x2E910FB81C0D9783) = 606950823;
  int v4 = v2 ^ 0xD;
  if (v4 == 1)
  {
    int v5 = 606950839;
    goto LABEL_5;
  }
  if (v4 == 2)
  {
    *(_DWORD *)(v1 - 0x2E910FB81C0D9787) = -2051913067;
    int v5 = 606950843;
LABEL_5:
    *(void *)(v1 - 0x2E910FB81C0D9797) = 0xA9AD00EC21258864;
    *(void *)(v1 - 0x2E910FB81C0D978FLL) = 0x5652FF13DEDA779BLL;
    *(_DWORD *)(v1 - 0x2E910FB81C0D9783) = v5;
  }
  *(_DWORD *)(result + 4) = 2129462123;
  return result;
}

void sub_10036C1FC(uint64_t a1)
{
  int v1 = 535753261 * (((a1 | 0xB4CC401E) - a1 + (a1 & 0x4B33BFE1)) ^ 0xBE384E31);
  int v2 = *(_DWORD *)(a1 + 8) ^ v1;
  int v3 = *(_DWORD *)(a1 + 24) - v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 16) - 0x1F010F7499D3F7A2);
  int v6 = v4 - 1902603612;
  BOOL v5 = v4 - 1902603612 < 0;
  int v7 = 1902603612 - v4;
  if (!v5) {
    int v7 = v6;
  }
  __asm { BRAA            X13, X17 }
}

uint64_t sub_10036C2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * (((((v15 + v14 - 1799 - 314) ^ a14) <= a10) * ((v14 - 1333737868) & 0x4F7F31EF ^ 0xB4)) ^ v14)))();
}

uint64_t sub_10036C324@<X0>(int a1@<W2>, int a2@<W3>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * ((60 * ((((a1 - 712) ^ 0x400002CF) & a2) != 0)) ^ a1)))();
}

void sub_10036C3C8()
{
  _DWORD *v1 = v0 + 105;
  sub_10037DA74();
}

void sub_10036C3D4()
{
}

void sub_10036C3DC(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 108757529 * ((-2 - ((a1 | 0x1E625E8E) + (~a1 | 0xE19DA171))) ^ 0x101C35A);
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = *(_DWORD *)(v2 - 0x1F010F7499D3F7A2);
  unsigned int v6 = (460628867
      * ((((2 * (v5 ^ 0x40000CF6)) | 0x846CAAD6) - (v5 ^ 0x40000CF6) + 1036626581) ^ 0xCEA0DBE0)) ^ (v1 + 243);
  uint64_t v7 = v2;
  int v4 = (char *)*(&off_1022AC750 + v1 - 1204) - 4;
  (*(void (**)(unsigned char *))&v4[8 * (v1 ^ 0xD8C)])(v5);
  __asm { BRAA            X8, X17 }
}

void sub_10036C544()
{
}

uint64_t sub_10036C550@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((1366 * (((v1 + 478) ^ 0x8E989056) + *(_DWORD *)(a1 + 532) < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_10036C594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,unint64_t a31,uint64_t a32,int *a33)
{
  if (v34 <= 0x338CF03F) {
    int v37 = a17 - 1972111130 + *a33;
  }
  else {
    int v37 = 647934162;
  }
  *a33 = v37;
  int v38 = (((v33 >> 11) ^ 0x95B4A) + 1255822489 - ((2 * ((v33 >> 11) ^ 0x95B4A)) & 0x34A932)) ^ v33;
  unsigned int v39 = (((v38 << 7) & 0x9D2C5680 ^ v38) << 15) & 0xEFC60000 ^ (v38 << 7) & 0x9D2C5680 ^ v38;
  *(_DWORD *)(*a30 + a31) ^= v39 ^ (v39 >> 18);
  return (*(uint64_t (**)(void))(v35 + 8 * ((v36 - 143328433) ^ (11 * (a31 < 0x1FC)))))();
}

uint64_t sub_10036C664()
{
  STACK[0x4C8] = *(void *)(v1 + 8 * (v0 - 750));
  return sub_10036CF70();
}

uint64_t sub_10036C680()
{
  return sub_10036C688();
}

uint64_t sub_10036C688@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v10 = (335 - v6);
  int8x8_t v11 = vrev64_s8(*(int8x8_t *)(a4 + v10 - 7));
  *(int8x8_t *)(v5 + v10) = vrev64_s8(vadd_s8(vsub_s8(v11, vand_s8(vadd_s8(v11, v11), v9)), v8));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 + 8 != ((v4 + a1) & a2) - 550) * a3) ^ (v4 + 54))))();
}

uint64_t sub_10036C834(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((((a3 - v9 + 1629) ^ 0x771) * (v8 < 0x20)) ^ a8)))();
}

uint64_t sub_10036C868()
{
  BOOL v9 = v3 > 0x9A84F1AE;
  *(unsigned char *)(v7 + (v5 - 1170433127)) = *(unsigned char *)(*(void *)(v6 + 8 * (v1 ^ 0x197))
                                                              + ((v5 - 1170433127) & 0xFLL)
                                                              - 8) ^ *(unsigned char *)(v0 + (v5 - 1170433127)) ^ (23 * ((v5 - 103) & 0xF)) ^ *(unsigned char *)(*(void *)(v6 + 8 * (v1 ^ 0x1E8)) + (((_BYTE)v5 - 103) & 0xF) - 8) ^ *(unsigned char *)(*(void *)(v6 + 8 * (v1 ^ 0x194)) + (((_BYTE)v5 - 103) & 0xF) - 3);
  if (v9 == v5 + 532130283 < v2) {
    BOOL v9 = v5 + 532130283 < v4;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v9 * (((v1 - 433) | 0x570) ^ 0x20C)) ^ v1)))();
}

void sub_10036C938()
{
}

uint64_t sub_10036C954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * (v16 | (8
                                      * ((((((v16 - 690) | 0x94) ^ 0x953A76E9) + v18) & ((v16 - 376735764) & 0x167485F5 ^ 0xFFFFFE68))
                                       - a16 == -1791330438)))))();
}

uint64_t sub_10036C9B8(uint64_t a1, char a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, char a8)
{
  int v16 = v12 + 4;
  unsigned int v17 = *(_DWORD *)(v11 + ((v16 - 389832077) & 0xFFFFFFFC));
  *(unsigned char *)(v10 + (v16 - 389832077)) = v17 ^ v14;
  *(unsigned char *)(v10 + (v16 - 389832076)) = (v13 ^ BYTE1(v17))
                                                    - (((v13 ^ (v17 >> 8)) << (v9 + 5)) & 0x30)
                                                    + 24;
  *(unsigned char *)(v10 + (v16 - 389832075)) = (BYTE2(v17) ^ 0x60) - ((v17 >> 15) & 0x30) + 24;
  *(unsigned char *)(v10 + (v16 - 389832074)) = (a8 ^ HIBYTE(v17)) + (a2 ^ (v17 >> 23) | 0xCF) + 25;
  unsigned int v18 = *v8 + a4;
  BOOL v19 = v18 < 0x425A8FE8;
  BOOL v20 = v16 + a3 < v18;
  if ((v16 + a3) < 0x425A8FE8 != v19) {
    BOOL v20 = v19;
  }
  return (*(uint64_t (**)(void))(v15 + 8 * ((v20 * a5) ^ v9)))();
}

uint64_t sub_10036C9C0@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W8>)
{
  *(unsigned char *)(v4 + (v5 + a1 + 327)) = *(unsigned char *)(a2 + (v5 + a1 + 327));
  return (*(uint64_t (**)(void))(v6 + 8 * ((28 * (a1 - 1 != ((a3 - 1146) ^ a4))) ^ (a3 + 246))))();
}

uint64_t sub_10036CA04@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  int v7 = v2 + 877;
  int v8 = (*(unsigned __int8 *)(a2 + 1128) ^ 0x18) - *(unsigned __int8 *)(v5 + 1148);
  BOOL v9 = (v8 ^ a1) + v4 + (((v7 - 276) ^ v3) & (2 * v8)) != 1779124031;
  return (*(uint64_t (**)(void))(v6 + 8 * ((4 * v9) | (32 * v9) | v7)))();
}

uint64_t sub_10036CA50(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 48) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_10036CA68(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((200
                                * (((a3 - 13) ^ ((v4 + v3 + a3 - 2147304523) < 8)) & 1)) ^ a3)))();
}

uint64_t sub_10036CAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((*(void *)(v5 + 24) != 0x79008787D20F56D3)
                                     * ((a5 + 850781204) & 0xCD4A1C6F ^ 0x7BC)) ^ a5)))();
}

void sub_10036CB10(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) ^ (460628867 * (((a1 | 0x4A5B5FFB) - (a1 & 0x4A5B5FFB)) ^ 0x6CDDD86));
  uint64_t v4 = *(void *)(a1 + 8);
  v3[0] = v1 + 628203409 * (((~v3 & 0xDF090424) - (~v3 | 0xDF090425)) ^ 0x5D810816) - 1279;
  int v2 = (char *)*(&off_1022AC750 + v1 - 1447) - 4;
  (*(void (**)(_DWORD *))&v2[8 * (v1 ^ 0xEDB)])(v3);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10036CC24(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((((v8 - a6 - 847) ^ (a3 - 338)) + 1164) * (v6 == v7)) ^ v8)))();
}

void sub_10036CC54(uint64_t a1)
{
  int v1 = 1178560073 * ((-2 - ((a1 | 0xAE85A791) + (~a1 | 0x517A586E))) ^ 0xEBEE200C);
  __asm { BRAA            X10, X17 }
}

void sub_10036CCEC()
{
}

uint64_t sub_10036CD64()
{
  return 4294925278;
}

uint64_t sub_10036CD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v14 + 8 * ((490 * (v12 != v13 - 1275)) ^ v13)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, *(void *)(a1 + 32), a11, a12);
}

uint64_t sub_10036CDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  if (v52 == 506150197) {
    return (*(uint64_t (**)(void))(v54
  }
                                + 8
                                * ((108
                                  * ((LODWORD(STACK[0x24C]) + LODWORD(STACK[0x2EC])) < LODWORD(STACK[0x248]))) ^ (LODWORD(STACK[0x43C]) - 461))))();
  if (v52 == 237714738)
  {
    int v60 = STACK[0x43C];
    uint64_t v61 = ((LODWORD(STACK[0x43C]) + 686) ^ 0x8F874DB2) + v53;
    unint64_t v62 = STACK[0x388];
    (*(void (**)(void, unint64_t, uint64_t))(v54 + 8 * (LODWORD(STACK[0x43C]) + 1506)))(*(unsigned int *)STACK[0x2F0], STACK[0x378], v61);
    int v63 = *(_DWORD *)(v62 + 52);
    unint64_t v64 = STACK[0x5A0];
    int v65 = LODWORD(STACK[0x58C]) ^ 0x1F6FFCDB;
    int v66 = (2 * LODWORD(STACK[0x58C])) & 0x3EDFF9B6;
    int v67 = 1755732067 * ((v55 - 1880477228 - 2 * ((v55 - 200) & 0x8FEA329C)) ^ 0x512C8F47);
    *(void *)(v55 - 176) = v51;
    *(_DWORD *)(v55 - 184) = (a51 & 0x7FFFFFFF ^ 0x150D267F) - v67 + (a50 & 0xFBFFEFEC ^ 0xD1E5A300) + 113217472;
    *(_DWORD *)(v55 - 164) = v65 - v67 + v66 - 136875009;
    *(_DWORD *)(v55 - 160) = v63 - v67 - 1599194251;
    *(_DWORD *)(v55 - 156) = v67 + v60 - 694;
    *(void *)(v55 - 200) = v64;
    *(void *)(v55 - 192) = &STACK[0x6A0];
    uint64_t v68 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (v60 ^ 0xBFC)))(v55 - 200);
    int v69 = *(_DWORD *)(v55 - 168);
    LODWORD(STACK[0x48C]) = v69;
    return (*(uint64_t (**)(uint64_t))(v54 + 8 * ((669 * (v69 == 605940026)) ^ (v60 - 643))))(v68);
  }
  else
  {
    int v56 = STACK[0x43C];
    int v57 = 1178560073 * ((((v55 - 200) | 0x1354CD8D) - (v55 - 200) + ((v55 - 200) & 0xECAB3270)) ^ 0xA9C0B5EF);
    int v58 = LODWORD(STACK[0x43C]) - v57 + 406;
    *(_DWORD *)(v55 - 200) = v57 + v52 - (((v52 << LODWORD(STACK[0x244])) + 1672054172) & 0x483BD274) + 368225288;
    *(_DWORD *)(v55 - 196) = v58;
    *(void *)(v55 - 192) = STACK[0x250];
    (*(void (**)(uint64_t))(v54 + 8 * (v56 + 1529)))(v55 - 200);
    return sub_100376634();
  }
}

uint64_t sub_10036CDC0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*v1 == (v0 ^ 0xA1) - 194) * (v0 + 62)) ^ v0)))();
}

uint64_t sub_10036CDF4@<X0>(unint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, unint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, unint64_t a7@<X7>, unsigned int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v42 = a2 + a6;
  int v43 = a2 + 1;
  uint64_t v44 = 4 * (v43 + a6);
  unint64_t v45 = (*(_DWORD *)(a30 + v44) ^ v30) + (a5 ^ HIDWORD(a7));
  unint64_t v46 = HIDWORD(a1)
      + a8 * (unint64_t)(*(_DWORD *)(*v41 + v44) ^ v30)
      + ((v45 + ((v39 + v37) & v40 ^ (a3 + 601)) - (v38 & (2 * v45))) ^ a4);
  *(_DWORD *)(a30 + 4 * v42) = v46 + v30 - (v31 & (2 * v46));
  BOOL v48 = v43 + v35 > v36 || v43 + v35 < v34;
  return (*(uint64_t (**)(void))(v32 + 8 * ((v48 * v33) ^ v39)))();
}

uint64_t sub_10036CE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((13 * (v5 + 1 == v7 + 24)) ^ a5)))();
}

void sub_10036CF50()
{
  STACK[0x4C8] = *(void *)(v1 + 8 * (v0 - 723));
  JUMPOUT(0x10036CF68);
}

uint64_t sub_10036CF70@<X0>(unint64_t a1@<X8>)
{
  STACK[0x670] = v3;
  LODWORD(STACK[0x67C]) = v1;
  STACK[0x5F8] = a1;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((27
                                * (v1
                                 + 339398403
                                 + (((v2 ^ 0xDEF) - 1250) ^ 0x133 ^ (2 * *(_DWORD *)(v3 - 0x2E910FB81C0D979BLL)) & 0x36)
                                 + (*(_DWORD *)(v3 - 0x2E910FB81C0D979BLL) & 0x3F ^ 0x6F2C5EE7u) > 0xFFFFFFBF)) ^ v2)))();
}

uint64_t sub_10036D004@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  int v8 = v6 ^ 0x2EA;
  *(unsigned char *)(a4 + ((((v8 - 855) | 0xCu) + a1) & (a6 + 2738276636))) = *(unsigned char *)(a3 + a5 - 1107484483);
  return (*(uint64_t (**)(void))(v7 + 8 * ((1750 * ((a2 + a6 + 16) < 0x40)) ^ v8)))();
}

uint64_t sub_10036D06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v29 = 628203409 * ((~((v28 - 168) | 0xF78B7D49) + ((v28 - 168) & 0xF78B7D49)) ^ 0x8AFC8E85);
  *(void *)(v28 - 168) = a26;
  *(_DWORD *)(v28 - 160) = v29 + v27 + 668;
  *(_DWORD *)(v28 - 156) = a10 - v29;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v27 ^ 0x8F5)))(v28 - 168);
  unsigned int v31 = STACK[0x2A8] & 0x3F ^ (((v27 + 376655647) & 0xE98CB0BE) + 44);
  *((unsigned char *)&STACK[0x264] + v31) = -104;
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * (((v31 > 0x37) * ((1003 * (v27 ^ 0x30)) ^ 0x13A)) ^ v27)))(v30);
}

uint64_t sub_10036D194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 1759421093 * ((~((v19 - 136) | 0xFE0E4240) + ((v19 - 136) & 0xFE0E4240)) ^ 0xB28C0DEB);
  *(_DWORD *)(v19 - 120) = v18 - v20 + 347;
  *(_DWORD *)(v19 - 136) = 1772733383 - v20;
  *(void *)(v19 - 128) = v14;
  (*(void (**)(uint64_t))(v16 + 8 * (v18 + 1300)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = v18 + 1374699841 * ((v19 - 136) ^ 0x6DF41809) - 511;
  *(void *)(v19 - 136) = a14;
  *(void *)(v19 - 128) = v17;
  (*(void (**)(uint64_t))(v16 + 8 * (v18 + 1278)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = v18
                         + 1178560073
                         * ((((v19 - 136) | 0x6C7501B1) - (v19 - 136) + ((v19 - 136) & 0x938AFE48)) ^ 0xD6E179D3)
                         + 60;
  *(void *)(v19 - 112) = a13;
  *(void *)(v19 - 128) = a14;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v18 + 1264)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v19 - 136) <= ((v18 + 1099256822) & 0xBE7AAACF ^ (v15 + 395)))
                                              * ((v18 - 714) ^ 0xC9)) ^ v18)))(v21);
}

uint64_t sub_10036D2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  LODWORD(a26) = 785679342;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t *, uint64_t, uint64_t, unint64_t, void))(v39 + 8 * (((((((v38 - 325) | 0x10) + 927) ^ 0x2ED483EE) != 785680346) * (((v38 - 325) | 0x10) + 1709)) ^ ((v38 - 325) | 0x10))))(785680345, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           &STACK[0x268],
           &a38,
           a25,
           a26,
           a4 | 0xDB79544E00000000,
           0);
}

uint64_t sub_10036D38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  return (*(uint64_t (**)(void))(v13
                              + 8 * (((a11 == ((v12 + 511) ^ (v11 + 422))) * (((v12 - 382) | 0x120) ^ 0x141)) ^ v12)))();
}

uint64_t sub_10036D3CC@<X0>(int a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  HIDWORD(v10) = a1 ^ 1;
  LODWORD(v10) = a1 ^ v5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v7 + 8 * ((62 * (a3 + 1 != v6 + 24)) ^ v4)))(a4, a2, a2, (v10 >> 2) + v8 - (v9 & (2 * (v10 >> 2))));
}

uint64_t sub_10036D49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v27 - 120) = a22;
  *(_DWORD *)(v27 - 112) = v22 + ((((v27 - 128) | 0xA0AC8C3) + (~(v27 - 128) | 0xF5F5373C)) ^ 0xB09EB0A0) * v26 - 401;
  *(void *)(v27 - 104) = v25;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v22 ^ 0xD23)))(v27 - 128);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((((v24 + *(_DWORD *)(v27 - 128) + 448) < 0xEACA5B14)
                                              * (((v22 - 1181771169) & 0x4670667E) - 939)) ^ v22)))(v28);
}

uint64_t sub_10036D54C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((58 * ((v2 + v1 - 1804563901) < 8)) ^ 0x744u)))();
}

uint64_t sub_10036D5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, unsigned int a15, unint64_t *a16, unint64_t *a17, unint64_t *a18, unsigned int a19)
{
  int v20 = (a9 - 58) | 0x9B;
  a19 = (v20 + 74) ^ (1225351577 * ((&a15 & 0x700A8397 | ~(&a15 | 0x700A8397)) ^ 0xAC6FA47E));
  a16 = a14;
  a17 = &STACK[0x765012DCA7D40792];
  a18 = &STACK[0x56530F603BC303C4];
  (*(void (**)(unsigned int *))(v19 + 8 * (v20 + 1829)))(&a15);
  a15 = (v20 - 134) ^ (1374699841 * (&a15 ^ 0x6DF41809));
  a16 = &STACK[0x2E91F1FE0AA58427];
  a17 = a14;
  (*(void (**)(unsigned int *))(v19 + 8 * (v20 ^ 0x919)))(&a15);
  a16 = a14;
  a15 = (v20 + 1705) ^ (1755732067
                      * ((((2 * (&a15 ^ 0x1D0430E2)) | 0x9439548E)
                        - (&a15 ^ 0x1D0430E2)
                        + 904091065) ^ 0x9DE277E));
  uint64_t v21 = (*(uint64_t (**)(unsigned int *))(v19 + 8 * (v20 + 1768)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a17 == 605940026) * ((v20 ^ 0xA6) + 1367)) ^ v20)))(v21);
}

uint64_t sub_10036D748()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 == v3) * ((v1 ^ 0x3B8) + 870)) ^ v1)))();
}

uint64_t sub_10036D774()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 - 1639) | 0x241) + ((v0 - 1101899063) & 0x41AD9EBF) - 868)
                                * (*(_DWORD *)(v1 + 1424) != 1130566729)) ^ v0)))();
}

uint64_t sub_10036D7C8()
{
  LODWORD(STACK[0x48C]) = v0 - 225;
  return sub_10036F01C();
}

void sub_10036D7DC()
{
}

uint64_t sub_10036D7E4()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 + 1086)))(1576, 2940923044);
  STACK[0x4E0] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 == 0) * (((v0 - 558) | 0x94) - 733)) ^ v0)))();
}

void sub_10036D84C()
{
}

uint64_t sub_10036D900()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((90 * (v0 > ((5 * (STACK[0x3F0] & 0xA0FD367D ^ 0x730)) ^ 0xABA1E2D1))) ^ (v1 - 226))))();
}

uint64_t sub_10036D950()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v0 & 2) == (((v1 ^ 0x30B) + 325) ^ 0x343))
                                     * (((v1 ^ 0x30B) + 1952552913) & 0x8B9E677D ^ 0x23F)) ^ v1 ^ 0x30B)))();
}

void sub_10036D9A4(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W6>, uint64_t a6@<X8>)
{
  *(_DWORD *)(v9 - 160) = v6;
  *(_DWORD *)(v9 - 152) = v8;
  *(void *)(v9 - 120) = v7 - 7;
  *(void *)(v9 - 128) = a6 - 7;
  *(_DWORD *)(v9 - 168) = v8 & 0xFFFFFFF8;
  *(_DWORD *)(v9 - 136) = a5 - (v8 & 0xFFFFFFF8) + 8;
  *(_DWORD *)(v9 - 144) = a4 + a3 + a2 + a1 - a5 + 12;
  JUMPOUT(0x10036DA38);
}

void sub_10036DB24()
{
  char v0 = (uint64_t *)*(&off_1022AC750
                  + ((107 * ((qword_102419E28 + dword_10241AAA8) ^ 0x8A)) ^ byte_101D1BD20[byte_101D17CE0[(107 * ((qword_102419E28 + dword_10241AAA8) ^ 0x8A))] ^ 1])
                  + 43);
  int v1 = (uint64_t *)*(&off_1022AC750
                  + (byte_101D17BE0[byte_101D15180[(107
                                                                                    * (*v0 ^ qword_102419E28 ^ 0x8A))] ^ 0x34] ^ (107 * (*v0 ^ qword_102419E28 ^ 0x8A)))
                  - 73);
  unint64_t v2 = (unint64_t)&v7[*v1 - *v0];
  uint64_t v3 = 2119093099 * (v2 - 0x22F8A8F5CDCFC8ALL);
  uint64_t v4 = 2119093099 * (v2 ^ 0x22F8A8F5CDCFC8ALL);
  *char v0 = v3;
  uint64_t *v1 = v4;
  LOBYTE(v4) = 107 * ((v4 + *(_DWORD *)v0) ^ 0x8A);
  *(_DWORD *)*(&off_1022AC750 + (byte_101D1BC20[byte_101D17AE0[v4] ^ 0xCD] ^ v4) - 160) = 605940026;
  int v5 = (char *)*(&off_1022AC750
               + ((107 * (dword_10241AAA8 ^ 0x8A ^ qword_102419E28)) ^ byte_101D1C020[byte_101D17EE0[(107 * (dword_10241AAA8 ^ 0x8A ^ qword_102419E28))] ^ 0xDB])
               - 8)
     - 4;
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))&v5[8
                                                      * ((107 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0x8A)) ^ byte_101D1BC20[byte_101D17AE0[(107 * ((*(_DWORD *)v1 + *(_DWORD *)v0) ^ 0x8A))] ^ 0x5B])
                                                      + 16152])(512, 1509315540);
  *(void *)((char *)*(&off_1022AC750
                      + ((107 * ((*(_DWORD *)v1 - *(_DWORD *)v0) ^ 0x8A)) ^ byte_101D17BE0[byte_101D15180[(107 * ((*(_DWORD *)v1 - *(_DWORD *)v0) ^ 0x8A))] ^ 0x9A])
                      - 36)
            - 4) = v6;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10036DD88@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v9 = v3 - 1;
  STACK[0x590] = v9;
  *(unsigned char *)(a1 + v9) = ((v2 + 1) ^ 0xBA) * (v2 + 18);
  return (*(uint64_t (**)(void))(v8 + 8 * (((STACK[0x590] != (((a2 ^ v5) * v6) ^ v7)) * v4) ^ a2)))();
}

uint64_t sub_10036DD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, unsigned int a20,uint64_t a21)
{
  unsigned int v26 = 1178560073 * ((2 * (&a17 & 0x1E626340) - &a17 + 1637719231) ^ 0xDB09E4DD);
  a18 = v23 + v26 - (((v25 ^ 0x76) + 664623432) & (2 * v23)) - 1815171521;
  a20 = (v25 + 253) ^ v26;
  a19 = a16;
  (*(void (**)(int *))(v24 + 8 * (v25 ^ 0xBCB)))(&a17);
  unsigned int v27 = 1178560073 * ((2 * (&a17 & 0x767B7528) - &a17 - 1987802416) ^ 0x3310F2B2);
  a18 = v27 + v25 - 659;
  a20 = ((v22 ^ 0xFEDEBF7F) + 1803288320 + (((v25 - 203) ^ 0xFDBD7C8A) & (2 * v22))) ^ v27;
  a19 = a16;
  a21 = v21;
  uint64_t v28 = (*(uint64_t (**)(int *))(v24 + 8 * (v25 + 1397)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((2027 * (a17 == 605940026)) ^ v25)))(v28);
}

uint64_t sub_10036DEFC()
{
  STACK[0x4C8] = *(void *)(v2 + 8 * (v1 - 720));
  return sub_10036CF70(STACK[0x3A8]);
}

void sub_10036DF34()
{
}

void sub_10036E034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(_DWORD *)(v9 - 120) = v8;
  *(_DWORD *)(v9 - 128) = v7;
  *(_DWORD *)(v9 - 136) = v7 & 0xFFFFFFF8;
  *(_DWORD *)(v9 - 144) = a7 - 1626;
  JUMPOUT(0x10036E0B8);
}

uint64_t sub_10036E180()
{
  return ((uint64_t (*)(void))STACK[0x600])();
}

void sub_10036E1C0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v10 = *(void *)(v8 - 0x1F010F7499D3F79ELL);
  unsigned int v11 = (*(_DWORD *)(v10 + 4 * (v9 - 1)) ^ v5) >> v4;
  *(_DWORD *)(v10 + 4 * (v7 + (a4 ^ 0x24A))) = v11 + v5 - (v6 & (2 * v11));
  JUMPOUT(0x10036E234);
}

uint64_t sub_10036E274@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((313
                                * (*(_DWORD *)(*(void *)(a1 - 0x1F010F7499D3F79ELL) + 4
                                                                                      * (v2 + v5 - 1)) == v3 + ((v1 + 1121006594) & 0xBD2ECBFD) - 477)) ^ (v1 + 137))))();
}

uint64_t sub_10036E2E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v22 = 535753261 * (((((v21 - 144) | 0x615B03DC) ^ 0xFFFFFFFE) - (~(v21 - 144) | 0x9EA4FC23)) ^ 0x9450F20C);
  *(_DWORD *)(v21 - 120) = v22 + v17 + ((v20 - 1668) ^ 0xED61E3CF);
  *(_DWORD *)(v21 - 136) = (v20 - 450) ^ v22;
  *(void *)(v21 - 128) = v19;
  *(void *)(v21 - 144) = a17;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v20 + 556)))(v21 - 144);
  return sub_10036E364(v23);
}

uint64_t sub_10036E364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, _DWORD *a17)
{
  *a17 = a11;
  return sub_10036E378();
}

void sub_10036E378()
{
  _DWORD *v1 = v0;
}

uint64_t sub_10036E3B8@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  *(__n128 *)(v2 + v4) = a2;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((a1 ^ v5) + v4 == 64) * v6) ^ v3)))();
}

uint64_t sub_10036E3E0@<X0>(int a1@<W0>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((a1 & ~((a3 - a2 - 265) ^ (v4 == v3))) * (a3 - 446)) ^ a3)))();
}

uint64_t sub_10036E414@<X0>(uint64_t a1@<X8>)
{
  BOOL v4 = (v3 - 1902604400 + ((v2 - 637492435) & 0x25FF5B55)) * (v1 - 1902603612) >= ((v2 - 1165) | 0x310) - 788;
  return (*(uint64_t (**)(void))(a1 + 8 * ((v4 | (2 * v4)) ^ v2)))();
}

uint64_t sub_10036E478()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 >= (v1 ^ 0x78Cu) - 1369) * ((v1 ^ 0x78C) - 1234)) ^ v1 ^ 0x78C)))();
}

void sub_10036E4AC()
{
}

uint64_t sub_10036E4C4@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 4) = (a2 << (2 * (v2 ^ 0xD3) + 61)) + v3 - 1802383652;
  return result;
}

uint64_t sub_10036E4F0(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((28 * ((a4 + 1 + v4) < 0x40)) ^ a1)))();
}

uint64_t sub_10036E5CC@<X0>(int a1@<W1>, int a2@<W5>, int a3@<W8>)
{
  *(unsigned char *)(v5 + v6) = *(unsigned char *)(v8 + (v4 + a1))
                      - ((2 * *(unsigned char *)(v8 + (v4 + a1))) & 0x30)
                      + 24;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 == 63) * v3) ^ (a2 + a3 + 1899))))();
}

uint64_t sub_10036E618()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((23 * (v0 != v1)) ^ v2)))();
}

uint64_t sub_10036E654(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                                           + 8
                                           * (((a2 + v9 + (((v9 - 191) | 0x205) ^ (v7 + 1542)) + 1494) * (v8 == a6)) ^ v9)))(0);
}

uint64_t sub_10036E694@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*v2 + (v3 + v6)) = *(unsigned char *)(*v2 + (v6 + v5));
  return (*(uint64_t (**)(void))(v7 + 8 * ((8 * (v4 + v6 - 1433 == a1)) | (32 * (v4 + v6 - 1433 == a1)) | v1)))();
}

uint64_t sub_10036E6D4(uint64_t a1)
{
  LODWORD(STACK[0x48C]) = v1 - 14;
  return sub_1003628F4(a1);
}

uint64_t sub_10036E6F0()
{
  unint64_t v3 = STACK[0x5D0];
  int v4 = 1178560073 * ((v2 - 200) ^ 0xBA947862);
  *(_DWORD *)(v2 - 200) = 221124111 - v4;
  *(_DWORD *)(v2 - 184) = -1882357475 - v4 + v0 + 8;
  *(void *)(v2 - 192) = v3;
  (*(void (**)(uint64_t))(v1 + 8 * (int)(v0 | 0x8CC)))(v2 - 200);
  STACK[0x4C8] = *(void *)(v1 + 8 * v0);
  return sub_10036CF70(STACK[0x430]);
}

uint64_t sub_10036E788@<X0>(int a1@<W2>, int a2@<W4>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 - 704864278)) = *(unsigned char *)(v4 + (a1 - 704864278));
  return (*(uint64_t (**)(void))(v3
                                           + 8 * ((126 * (a1 - 1 != ((a2 - 10 - v5 - 259) ^ 0x6251C935))) ^ (a2 - 10))))(0);
}

uint64_t sub_10036E7DC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X4>, int a4@<W8>)
{
  int v7 = a4 + 1;
  uint64_t v8 = ((37 * (v4 ^ 0x5AFu)) ^ 0xFFFFFFFFF474FD9FLL) + a2;
  *(unsigned char *)(a3 + (a1 + v7 + 588)) = *(unsigned char *)(v6 + v8) - ((2 * *(unsigned char *)(v6 + v8)) & 0x30) + 24;
  return (*(uint64_t (**)(void))(v5 + 8 * ((562 * ((v7 - 96652630) < 0x40)) ^ v4)))();
}

uint64_t sub_10036E7F4@<X0>(unsigned int a1@<W2>, int a2@<W4>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((102 * (a3 + 1 == v7 + 64)) ^ a2)))((__PAIR64__(v3 ^ 1u, v3 ^ a1) >> 2)+ v6- (v5 & (2 * (__PAIR64__(v3 ^ 1u, v3 ^ a1) >> 2))));
}

uint64_t sub_10036E8B4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v10 = v2 - 774297798;
  int v11 = v2 - 1;
  int v12 = *(unsigned __int8 *)(v5 + v10);
  if (v12 == 24) {
    __asm { BRAA            X11, X17 }
  }
  if (v12 == 152)
  {
    int v13 = 605940026;
    uint64_t v14 = *(void *)(v3 + 8);
    int v15 = *(unsigned __int8 *)(v3 + 16) ^ v4;
    *(void *)uint64_t result = v5;
    *(_DWORD *)(result + 8) = v6;
    *(_DWORD *)(result + 12) = v11;
    if (v15 == 13) {
      int v16 = 1210958413;
    }
    else {
      int v16 = 1210958412;
    }
    *(_DWORD *)(result + 16) = 1225318619;
    *(_DWORD *)(result + 20) = v16;
    *(_DWORD *)(result + 24) = 605940026;
    *(void *)(v14 - 0x53572A2EC5DA9502) = a2;
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(void))(v9 + 8 * (v8 + 907)))();
    int v13 = -605900061;
  }
  *(_DWORD *)uint64_t v3 = v13;
  return result;
}

uint64_t sub_10036E998()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((150
                                * ((((v1 + v3 - 1) < 0x7FFFFFFF) ^ (9
                                                                                                 * ((v0 + 58) & 0xFD ^ 0x68))) & 1)) ^ v0)))();
}

uint64_t sub_10036E9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(unsigned char *)(a7 + (v28 - 757)) = *(unsigned char *)(a8 + (v27 - 1107484482));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29
                                                                                + 8
                                                                                * ((480
                                                                                  * (v27 - 1107484481 >= 395 * (v28 ^ 0x2F4u) - 786)) ^ v28)))(4294967235, 2738276621, a3, a4, a27);
}

uint64_t sub_10036EA7C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((((v2 - 303) | 0x551) + ((2 * v2) ^ 0x572) - 1819) * (v1 == 0)) ^ v2)))();
}

uint64_t sub_10036EAB4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2
                                                                       + 8
                                                                       * ((238
                                                                         * ((unint64_t)*(&off_1022AC750
                                                                                              + (v1 ^ 0x4B4)
                                                                                              - 1627)
                                                                          - a1
                                                                          - 4 < (((v1 ^ 0x4B4) + 1130650006) & 0xBC9BA32B ^ 0x30BuLL))) ^ v1 ^ 0x4B4)))(3705, 3961571586, 333395838, 122);
}

uint64_t sub_10036EB4C(uint64_t a1, unsigned int a2, int a3, uint64_t a4, int a5, uint64_t a6)
{
  *(void *)(a6 + a2) = *(void *)(v7 + a2);
  return (*(uint64_t (**)(uint64_t, void, void))(v8 + 8 * (((a3 == 0) * v6) ^ a5)))(a1, a2 - 8, (a3 + 8));
}

uint64_t sub_10036EB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v78 = ((v74 & 0xD1AFCDE0 | ~(v74 | 0xD1AFCDE0)) ^ 0xBAFD7B46) * v75;
  *(void *)(v77 - 184) = a70;
  *(void *)(v77 - 176) = a71;
  *(void *)(v77 - 192) = v71;
  *(_DWORD *)(v77 - 200) = v78 ^ 0x806CD81A;
  *(_DWORD *)(v77 - 164) = v72 - v78 + 737;
  uint64_t v79 = (*(uint64_t (**)(uint64_t))(v76 + 8 * (v72 + 1567)))(v77 - 200);
  return (*(uint64_t (**)(uint64_t))(v76
                                            + 8
                                            * ((60 * (((v72 + 1) ^ (*(_DWORD *)(v77 - 168) == v73)) & 1)) ^ v72)))(v79);
}

uint64_t sub_10036EC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v54 = *(void *)(v50 + 24);
  *(int8x16_t *)(v53 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(v50 + 16) - 0x358CD15B4FC77D39), (int8x16_t)xmmword_101D1C140);
  if (v51) {
    BOOL v55 = v54 == 0x1E6EF7153090DC2;
  }
  else {
    BOOL v55 = 1;
  }
  char v56 = v55;
  HIDWORD(a23) = 2 * v49;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * (int)((238 * (((a7 - 1) ^ v56) & 1)) ^ a7)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_10036ECC4@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  unint64_t v5 = ((v2 - 616423898) & 0x24BDDFDF ^ (unint64_t)(a1 + 183)) + a2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((v5 - v4 + 1424257457 > 7) * ((v2 - 467731813) & 0x1BE102DE ^ 0x3A)) ^ v2)))();
}

uint64_t sub_10036ED48()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((146 * (STACK[0x550] == 0)) ^ (v0 + 1310))))();
}

void sub_10036ED78(int a1@<W8>, int a2, int a3, uint64_t a4)
{
  unsigned int v8 = 1755732067 * ((-432722614 - (&a2 | 0xE6352D4A) + (&a2 | 0x19CAD2B5)) ^ 0xC70C6F6E);
  a4 = v5;
  a2 = (v6 - (((a1 ^ 0x7A1B12A8) + v7) & 0x505AA7E6) + 1698356993) ^ v8;
  a3 = (a1 - 458) ^ v8;
  (*(void (**)(int *))(v4 + 8 * (a1 + 1136)))(&a2);
  sub_100378EC4();
}

void sub_10036EE18()
{
}

uint64_t sub_10036EE20()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 - 2056) | 0x3C1) ^ (v1 + 584)) + v3 < 0x7FFFFFFD)
                                * (148 * (v0 ^ 0x815) - 1026)) ^ v0)))();
}

void sub_10036EE74(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 48) - 0x44D5F6D91B577AFCLL) = a1;
  sub_100375944();
}

uint64_t sub_10036EE98()
{
  return sub_100390BE0();
}

uint64_t sub_10036EEAC()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1523)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((3877 * (STACK[0x4E0] == 0)) ^ (v0 + 1138))))();
}

uint64_t sub_10036EEEC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 - 1323835853) & 0x4EE81FF5) - 276) * (v0 == v2 - 551368475)) ^ v1)))();
}

uint64_t sub_10036EF30()
{
  *(_DWORD *)(v2 - 200) = (v0 + 2138963249) ^ (535753261
                                             * ((v2 + 1163127509 - 2 * ((v2 - 200) & 0x4553EB9D)) ^ 0x4FA7E5B2));
  (*(void (**)(uint64_t))(v1 + 8 * (v0 + 2167)))(v2 - 200);
  *(void *)(v2 - 176) = STACK[0x280];
  *(_DWORD *)(v2 - 184) = 3804331 * ((((v2 - 200) | 0x2E413280) - (v2 - 200) + ((v2 - 200) & 0xD1BECD78)) ^ 0x50941776)
                        + v0
                        + 1377;
  *(void *)(v2 - 192) = STACK[0x288];
  *(unsigned char *)(v2 - 200) = (-85 * ((((v2 + 56) | 0x80) - (v2 + 56) + ((v2 + 56) & 0x78)) ^ 0x76)) ^ 0x17;
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 2092)))(v2 - 200);
  STACK[0x378] = 0;
  return sub_10036F01C(v3);
}

uint64_t sub_10036F01C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((STACK[0x378] == 0) * ((v0 + 506) ^ 0x4D0)) ^ (v0 + 475))))();
}

uint64_t sub_10036F050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * (int)(((v20 + ((((v19 - 75) ^ 0x2CB) - 638) | 0x90) == 605940178) * (a3 + ((((v19 - 75) ^ 0x2CB) + 2111631001) & 0xF3E72FF7) + 1096)) ^ (v19 - 75) ^ 0x2CB)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t sub_10036F0CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(result + 32) = a5;
  return result;
}

void sub_10036F0D4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(a7 + (v8 + a4 - 1191 - 759)) = v7;
  JUMPOUT(0x10036EA10);
}

uint64_t sub_10036F110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(_OWORD *)(a5 + v8) = *v6;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 == 0) * v7) ^ v5)))();
}

uint64_t sub_10036F13C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return (*(uint64_t (**)(void))(v26
                              + 8
                              * (((*(_DWORD *)(a23 + 4 * (a1 + v25 + 1195)) == v23)
                                * ((v24 ^ 0x6CA) - 1091)) ^ (v24 - 69))))();
}

uint64_t sub_10036F180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11, unint64_t *a12, uint64_t a13, unsigned int a14)
{
  unsigned int v18 = 3804331
      * ((-881070578 - (&a10 ^ 0x67C7426C | 0xCB7BEE0E) + (&a10 ^ 0x67C7426C | 0x348411F1)) ^ 0x2D96766B);
  a14 = v18 + 112004103;
  a10 = v18 + (v16 ^ 0xDBBBE7FF) + 905248733 + ((v16 << (13 * (v17 ^ 0xC7) - 38)) & ((v17 + 918) ^ 0x3777C8A4));
  a11 = v18 + v17 - 525;
  a12 = &STACK[0x3B6240245EEB6D72];
  a13 = v14;
  uint64_t v19 = (*(uint64_t (**)(unsigned int *))(v15 + 8 * (v17 + 1321)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((2900 * (*(_DWORD *)(v14 - 0x38C18B7A1BA31314) == 605940026)) ^ v17)))(v19);
}

uint64_t sub_10036F2A4@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W8>)
{
  int v10 = a1 - 23;
  unsigned int v11 = *(_DWORD *)(*(void *)(v9 - 0x1F010F7499D3F79ELL) + 4 * (v7 + v6 + 961)) ^ v4;
  *(_DWORD *)(*(void *)(v9 - 0x1F010F7499D3F79ELL) + 4 * (a3 + v3)) = ((v11 >> (32 - v5)) | a2 ^ (v4 + 705) ^ (v10 - 308050111) & 0x125C77FB)
                                                                        + v4
                                                                        - ((2
                                                                          * ((v11 >> (32 - v5)) | a2 ^ (v4 + 705) ^ (v10 - 308050111) & 0x125C77FB)) & 0x81DBE93C);
  return (*(uint64_t (**)(void))(v8 + 8 * ((31 * (v7 + v6 + 960 >= 0)) ^ v10)))();
}

uint64_t sub_10036F35C@<X0>(int a1@<W1>, int a2@<W5>, int a3@<W8>, int8x16_t a4@<Q2>, int8x16_t a5@<Q3>)
{
  *int v6 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v8 + (v5 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(v8 + (v5 + a1)), *(int8x16_t *)(v8 + (v5 + a1))), a5)), a4);
  return (*(uint64_t (**)(void))(v7 + 8 * (a2 + a3 + 876)))();
}

uint64_t sub_10036F3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  BOOL v24 = v20 != v22 || a19 != ((v19 + a8) ^ (a8 + 1562)) + ((v19 + a8) | 0x5144154) - 1381920319;
  return (*(uint64_t (**)(void))(v21 + 8 * ((2026 * v24) ^ v19)))();
}

uint64_t sub_10036F404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(a11 - 0x18E42E334670A150) = -1886535591 - v14;
  int v20 = 1224239923 * ((v18 + 256431370 - 2 * ((v18 - 136) & 0xF48D592)) ^ 0xFDFB2845);
  *(_DWORD *)(v18 - 136) = v20 ^ 0x34B9F40D;
  *(_DWORD *)(v18 - 120) = v20 + v17 - 796;
  *(void *)(v18 - 128) = v15;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 + 1004)))(v18 - 136);
  int v21 = 1759421093 * (((v18 - 136) & 0x4EC92FE | ~((v18 - 136) | 0x4EC92FE)) ^ 0x486EDD55);
  *(void *)(v18 - 128) = v15;
  *(_DWORD *)(v18 - 136) = ((v19 << 6) & 0xD7D7F780) - v21 + ((32 * v19) ^ 0x6BEBFBD7) + ((v17 - 1050) ^ 0xFDBDC772);
  *(_DWORD *)(v18 - 120) = v17 - v21 + 107;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 ^ 0xC6C)))(v18 - 136);
  *(_DWORD *)(v18 - 120) = v17
                         + 1374699841 * ((((v18 - 136) | 0xC69197A2) - ((v18 - 136) & 0xC69197A2)) ^ 0xAB658FAB)
                         - 751;
  *(void *)(v18 - 136) = a14;
  *(void *)(v18 - 128) = &STACK[0x1F010F7499D3F7D6];
  (*(void (**)(uint64_t))(v16 + 8 * (v17 + 1038)))(v18 - 136);
  *(_DWORD *)(v18 - 120) = v17
                         + 1178560073 * (((v18 - 136) & 0xC3F300DC | ~((v18 - 136) | 0xC3F300DC)) ^ 0x86988741)
                         - 180;
  *(void *)(v18 - 112) = v15;
  *(void *)(v18 - 128) = a14;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 + 1024)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 | (8 * (*(_DWORD *)(v18 - 136) <= 0x5B89B5B3u)))))(v22);
}

uint64_t sub_10036F630@<X0>(int a1@<W5>, uint64_t a2@<X6>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6)
{
  HIDWORD(a6) = a1;
  uint64_t v11 = (a1 - 1717469777);
  uint64_t v12 = a2 - 0x1F010F7499D3F79ELL;
  BOOL v14 = v7 + 674893907 < 430013871 && v7 + 674893907 >= (int)v11;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * ((30 * v14) ^ (34 * (v6 ^ 0xE2)))))(0x6F059C107AC82A12, 164, 0, 4165972566, (v9 - 128994730), v11, v12, a3 - 0x1F010F7499D3F79ELL, a4, a2, a6, v10);
}

uint64_t sub_10036F754(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1707 * (a1 + 1 == v3 + 44)) ^ v1)))();
}

uint64_t sub_10036F828(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v6 = a4 + a3 - 2130701563 < 361 * (((v4 | 0x400) + 1372235454) & 0xAE3557A1 ^ 0x503) - 1075;
  return (*(uint64_t (**)(void))(v5 + 8 * ((16 * v6) | (v6 << 6) | v4 | 0x400)))();
}

uint64_t sub_10036F8BC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 - 146) * (v1 == v3)) ^ (v0 - 721))))();
}

void sub_10036F8E0()
{
}

uint64_t sub_10036F8F0(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7, unint64_t a8)
{
  uint64_t v16 = (unsigned int *)(v13 + 4 * v10);
  uint64_t v17 = ((v8 + a2) & a7 ^ a8) + v10;
  int v18 = *(_DWORD *)(v13 + 4 * v17);
  unsigned int v19 = (a4 + 757) ^ ((v18 & 0x7FFFFFFE | v9 & 0x80000000) >> 1);
  unsigned int *v16 = v16[397] ^ a3 ^ *(_DWORD *)(a1 + 4 * ((v18 & 1) == 0)) ^ (v19 + v12 - (v14 & (2 * v19)));
  return (*(uint64_t (**)(void))(v15 + 8 * (((v17 == 227) * v11) ^ v8)))();
}

uint64_t sub_10036F968(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v9 = (v5 + v7 + 654);
  long long v10 = *(_OWORD *)(v4 + v9 - 15);
  long long v11 = *(_OWORD *)(v4 + v9 - 31);
  uint64_t v12 = a1 + v9;
  *(_OWORD *)(v12 - 15) = v10;
  *(_OWORD *)(v12 - 31) = v11;
  LODWORD(v12) = ((a4 + 1747) ^ 0x6CB) == (v6 & 0xFFFFFFE0);
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((v12 | (v12 << 7)) ^ (a4 + 293))))();
}

uint64_t sub_10036F9C4(unint64_t a1)
{
  unsigned int v2 = 3804331 * (((a1 | 0xD29CC998) - (a1 | 0x2D633667) + 761476711) ^ 0xAC49EC6E);
  int v3 = *(_DWORD *)(a1 + 4);
  int v4 = *(_DWORD *)a1 ^ v2;
  int v25 = *(_DWORD *)(a1 + 8) ^ v2;
  unint64_t v15 = 3804331
      * (((a1 | 0xF8BBF308D29CC998) - (a1 | 0x7440CF72D633667) + 0x7440CF72D633667) ^ 0x3712930CAC49EC6ELL);
  int v5 = v3 + v2;
  unsigned int v6 = 1178560073 * ((&v30 - 1847688801 - 2 * (&v30 & 0x91DE819F)) ^ 0x2B4AF9FD);
  int v32 = v4 - v6 - 1882357480;
  unsigned int v30 = 221124111 - v6;
  uint64_t v22 = &STACK[0x2E910FB81C0D9A43];
  unsigned int v31 = &STACK[0x2E910FB81C0D9A43];
  (*(void (**)(unsigned int *))((char *)*(&off_1022AC750 + (v4 | 0x88)) + 8 * (v4 ^ 0x8DF) - 4))(&v30);
  int v14 = v5 - 73803605;
  int v12 = v5 - 464241219;
  int v13 = 390438213;
  int v10 = v5 + 1103555663;
  int v9 = v5 + 501111314;
  uint64_t v8 = &v8 - 166743444;
  unsigned int v17 = (v4 + 570165194) & 0xDE03FDBF;
  int v28 = v4 ^ 0xBB;
  int v29 = v4 ^ 0xFA;
  int v27 = v4 ^ 0xF;
  int v26 = v4 ^ 0xA9;
  uint64_t v24 = v4 ^ 0xA9u;
  uint64_t v11 = v24;
  int v23 = v4;
  int32x4_t v20 = vdupq_n_s32(0x241DE93Au);
  int32x4_t v21 = vdupq_n_s32(0x483BD274u);
  int32x4_t v19 = vdupq_n_s32(0x241DE93Eu);
  unint64_t v18 = a1;
  int v16 = v4 ^ 0x78D;
  return sub_10035591C();
}

void sub_10036FC5C(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a6 = v8 + 1225351577 * ((2 * (&a3 & 0x4183F2C8) - &a3 - 1099166416) ^ 0x9DE6D526) + 172;
  a4 = v7;
  a5 = a1;
  a3 = v7;
  (*(void (**)(uint64_t *))(v6 + 8 * (v8 + 2003)))(&a3);
  JUMPOUT(0x10036FCBCLL);
}

uint64_t sub_10036FCE4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                                + 8
                                                                                * (((((v3 - 1378427088) & 0x52291FA8)
                                                                                   + ((v3 - 690018768) & 0x2920D7BD)
                                                                                   - 2100)
                                                                                  * (v1 != v2)) ^ v3)))(a1, 13, 2049327152, 2245639194, 700);
}

uint64_t sub_10036FD60(uint64_t a1, int a2)
{
  return sub_10036FD98(a1, (a2 + 295256180) & 0x6E66BF7F ^ 0x771u, (a2 + 295256180) & 0x6E66BF7F, (v2 - 1529644911));
}

uint64_t sub_10036FD98(uint64_t a1, int a2, unsigned int a3, int a4)
{
  uint64_t v8 = (a4 - v5 + 1104);
  long long v9 = *(_OWORD *)(v4 + v8 - 15);
  long long v10 = *(_OWORD *)(v4 + v8 - 31);
  uint64_t v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((60 * (a2 + v5 - 1096 != v6)) ^ a3)))();
}

uint64_t sub_10036FDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v14 = (v11 + v7);
  unsigned int v15 = *(_DWORD *)(v13 - 252 + v14 + 72);
  *(unsigned char *)(a5 + v14) = v15 ^ ((v9 ^ (a7 + 47)) + 102);
  *(unsigned char *)(a5 + (v14 + 2)) = (BYTE2(v15) ^ 0x60) - ((v15 >> 15) & 0x30) + 24;
  *(unsigned char *)(a5 + (v14 + 1)) = (BYTE1(v15) ^ 0xAB) - ((2 * (BYTE1(v15) ^ 0xAB)) & 0x30) + 24;
  *(unsigned char *)(a5 + (v14 + 3)) = (HIBYTE(v15) ^ 0x46) + (~(v15 >> 23) | 0xCF) + 25;
  LODWORD(v14) = *(_DWORD *)(v13 - 160) + 909725170;
  BOOL v16 = v14 < v8;
  BOOL v17 = v11 - 67651287 < v14;
  if (v11 - 67651287 < v8 != v16) {
    BOOL v17 = v16;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((v17 * v10) ^ v9)))();
}

uint64_t sub_10036FEC0@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x444]) = a1;
  uint64_t v7 = (*(uint64_t (**)(unint64_t, void))(v5 + 8 * (v1 + 1754)))(STACK[0x3A0], 0);
  unsigned int v8 = v4[4] + v2 - ((2 * v4[4]) & 0x95B4A932);
  v4[1] = v4[6] + v2 - ((2 * v4[6]) & 0x95B4A932);
  _DWORD v4[2] = v8;
  int v9 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v1 ^ 0x965)))(v7);
  v4[3] = v9 + v2 - ((v1 - 1783322755) & (2 * v9));
  int v10 = (*(uint64_t (**)(void))(v5 + 8 * (v1 + 1819)))();
  *uint64_t v4 = v10 + v2 - ((2 * v10) & 0x95B4A932);
  int v11 = (((*v3 >> 30) ^ 1) + 1255822489 - 2 * (((*v3 >> 30) ^ 1) & 1)) ^ *v3;
  unsigned int v12 = (*v4 ^ 0x4ADA5499) + ((1664525 * v11 + 1255822489 - ((3329050 * v11) & 0x95B4A932)) ^ v3[1]);
  v3[1] = v12 + 1255822489 - ((2 * v12) & 0x95B4A932);
  unint64_t v13 = 1374699841
      * ((0xE55B1BF0F784EA18 - ((v6 - 200) | 0xE55B1BF0F784EA18) + STACK[0x428]) ^ 0x14A87A03658F0DEELL);
  int v14 = (v1 + 298737440) ^ v13;
  *(_DWORD *)(v6 - 176) = -1374699841 * ((-142284264 - ((v6 - 200) | 0xF784EA18) + LODWORD(STACK[0x428])) ^ 0x658F0DEE);
  *(_DWORD *)(v6 - 172) = v14;
  *(_DWORD *)(v6 - 168) = (v1 + 298737440) & 0x3FCEF196 ^ v13;
  *(_DWORD *)(v6 - 160) = v14 ^ 0x1B;
  *(void *)(v6 - 192) = v13 + 3734251849u;
  *(void *)(v6 - 184) = v13 ^ 0xDE94294B;
  *(_DWORD *)(v6 - 200) = v13 + v1 - 1501686281;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v5 + 8 * ((v1 + 320) ^ 0xBF2)))(v6 - 200);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v6 - 164)))(v15);
}

uint64_t sub_1003700E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  unsigned int v14 = *(_DWORD *)(v13 - 252 + 4 * ((v11 + v7) >> ((v9 - a3) ^ (a7 - 2))) + 72);
  *(unsigned char *)(a2 + (v11 + v7 + 1)) = (BYTE2(v14) ^ 0x60) - ((v14 >> 15) & 0x30) + 24;
  *(unsigned char *)(a2 + (v11 + v7)) = (HIBYTE(v14) ^ 0x46) - ((v14 >> 23) & 0x30) + 24;
  *(unsigned char *)(a2 + (v11 + v7 + 2)) = (BYTE1(v14) ^ 0xAB) - ((2 * (BYTE1(v14) ^ 0xAB)) & 0x30) + 24;
  *(unsigned char *)(a2 + (v11 + v7 + 3)) = v14 ^ 0x7D;
  unsigned int v15 = *(_DWORD *)(v13 - 160) + 368664515;
  BOOL v16 = v15 < v8;
  BOOL v17 = v11 - 64871027 < v15;
  if (v11 - 64871027 < v8 != v16) {
    BOOL v17 = v16;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((v17 * v10) ^ v9)))();
}

uint64_t sub_1003701C8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1003701F4(v2 - 3, 3706025454, a2 - 3, (a1 - 588942315), 588941311, (a1 - 1558), 763);
}

uint64_t sub_1003701F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned int a5, int a6, int a7)
{
  uint64_t v12 = v7 + v8 - v9 + (a4 & a5) - 931;
  *(_DWORD *)(a3 + v12) = *(_DWORD *)(a1 + v12);
  return (*(uint64_t (**)(void))(v11 + 8 * (((v9 + 4 == v10) * a7) ^ a6)))();
}

uint64_t sub_100370230()
{
  return sub_10037023C();
}

uint64_t sub_10037023C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + v6 + v9 + v8) = v11;
  return (*(uint64_t (**)(void))(v10 + 8 * ((386 * ((((v5 - 458) | 2u) ^ a1) + v8 == v7)) ^ v5)))();
}

uint64_t sub_100370278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, uint64_t a15, unsigned int a16, unsigned int a17, unsigned int a18, int a19)
{
  unsigned int v23 = (((&a14 ^ 0x7470E57E) + 2038877446 - 2 * ((&a14 ^ 0x7470E57E) & 0x7986CD06)) ^ 0x4160AA05)
      * v20;
  a14 = &STACK[0x44D5F6D91B577B0C];
  a15 = a12;
  a18 = 366164236 - v23;
  a16 = v23 - 984127446;
  a17 = v23 + v22 - 2024873254;
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v22 + 2055)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((1583
                                              * (a19 == ((v22 + 387306068) & 0xE8EA2FDA)
                                                      + ((v22 - v21 + 1766) ^ 0x7ED8253F))) ^ v22)))(v24);
}

uint64_t sub_100370370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, int a12, int a13, uint64_t a14)
{
  int v16 = 1374699841 * ((2 * ((v15 - 128) & 0x77A324F0) - (v15 - 128) - 2007180533) ^ 0xE5A8C302);
  *(void *)(v15 - 120) = a14;
  *(_DWORD *)(v15 - 128) = a12 - v16 + 538;
  *(_DWORD *)(v15 - 124) = ((a13 << 6) & 0xF5E4F9C0)
                         + ((32 * a13) ^ 0xFAF27CFB)
                         + (((a12 - 421) | 0x188) ^ (a12 + 1207955628))
                         + v16;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (a12 + 1314)))(v15 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8 * ((2996 * ((*a10 - 1902603613) < 0x7FFFFFFF)) ^ a12)))(v17);
}

void sub_100370460()
{
}

void sub_1003704B4()
{
}

void sub_1003704C8()
{
}

uint64_t sub_1003704D0@<X0>(uint64_t a1@<X2>, int a2@<W6>, unsigned int a3@<W8>)
{
  uint64_t v5 = a1 + a3;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((120
                                * (((((v3 ^ 0x696) - a2 - 1274) ^ (v6 - (unint64_t)a3 + 753493622 < 8)) & 1) == 0)) ^ v3)))();
}

uint64_t sub_100370534(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v6
                                                             + 8
                                                             * (((((v5 - 554057445) & 0x21063B7F) - 863)
                                                               * ((v3 + v2 - 2142718973) < 8)) ^ v5)))(v4, a2, (v5 - 331));
}

uint64_t sub_1003705A0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (2 * (v1 != 1791330438) + 1124)))();
}

uint64_t sub_1003705D0(int a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, int a7)
{
  uint64_t v10 = a7 - 32 + ((9 * a4) ^ v8);
  long long v11 = *(_OWORD *)(a2 + v10 - 15);
  long long v12 = *(_OWORD *)(a2 + v10 - 31);
  uint64_t v13 = v7 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a3 == 32) * a5) ^ (a1 + 55))))();
}

uint64_t sub_1003705DC@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((**(unsigned char **)(a1 + 8) == 0) * a2) ^ 0x98u)))();
}

uint64_t sub_100370624(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((425 * (*(_DWORD *)(*(void *)(a1 + 8) + v3) == (v4 ^ 0x189) + v2 + v4 - 1377)) ^ v4)))();
}

uint64_t sub_100370660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  return (*(uint64_t (**)(void))(v22 + 8 * (((a21 == 1210380874) * (2 * (v21 ^ 0x341) + 1791)) ^ v21)))();
}

uint64_t sub_1003706A4@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  unint64_t v35 = (*(_DWORD *)(a26 + 4 * (v29 + v32 + v34 - 1494)) ^ v27)
      + HIDWORD(v33)
      + v26 * (unint64_t)(*(_DWORD *)(*v30 + 4 * (v29 + v32 + v34 - 1494)) ^ v27);
  *(_DWORD *)(a26 + 4 * (v29 + v32 + 607)) = v35 + v27 - (v28 & (2 * v35));
  BOOL v37 = v32 + a1 > a2 || v32 + a1 < a4;
  return (*(uint64_t (**)(void))(v31 + 8 * ((v37 * a3) ^ v34)))();
}

void sub_100370710(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x2E91F1FE0AA58417) = v1 + 1;
  JUMPOUT(0x10036EE8CLL);
}

uint64_t sub_10037072C@<X0>(uint64_t a1@<X8>)
{
  v7.i64[0] = 0x3030303030303030;
  v7.i64[1] = 0x3030303030303030;
  v8.i64[0] = 0x1919191919191919;
  v8.i64[1] = 0x1919191919191919;
  *(int8x16_t *)(v3 + ((((v2 - 863) | 0x44u) ^ 0xFFFFFEA3) & (a1 + v1))) = vaddq_s8(vaddq_s8(*v6, v8), vmvnq_s8(vandq_s8(vaddq_s8(*v6, *v6), v7)));
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((438 * (((v4 + 1) & 0x1FFFFFFF0) == 16)) ^ v2)))(((v4 + 1) & 0x1FFFFFFF0) - 16);
}

uint64_t sub_1003707A4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((2149 * (*(_DWORD *)(v2 - 0x38C18B7A1BA31314) == (((v1 ^ 0x28D) + 589) ^ 0x241DED81))) ^ v1)))();
}

uint64_t sub_1003707F8()
{
  *(void *)(v6 - 128) = v4;
  *(void *)(v6 - 112) = v3;
  *(_DWORD *)(v6 - 120) = v5 + ((((v6 - 136) | 0xF6E106A5) - ((v6 - 136) & 0xF6E106A5)) ^ 0x4C757EC7) * v0 - 225;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v5 + 979)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((21
                                              * (*(_DWORD *)(v6 - 136) > v1 + ((v5 - 521346343) & 0x1F131FFAu) - 1976)) ^ v5)))(v7);
}

uint64_t sub_10037089C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return sub_100378CE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1003708A8(uint64_t a1, int a2)
{
  return sub_1003885D4(a1, a2);
}

uint64_t sub_1003708B8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,unsigned int a22,int a23,unsigned int a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  BOOL v37 = a24 > a22;
  uint64_t v38 = ((a5 + 568) ^ HIDWORD(a8) ^ (5 * (v34 ^ 0x621u))) + HIDWORD(a1) + (*(_DWORD *)(a33 + a15) ^ v33);
  *(_DWORD *)(a33 + 4 * a16) = v38 + ((v34 - 18) ^ a20) - (v35 & (2 * v38));
  *(_DWORD *)(a33 + a15) = HIDWORD(v38) + v33 - ((2 * HIDWORD(v38)) & 0x1DBE93C);
  if (v37 == a30 - 1622226504 < -1733126873) {
    BOOL v37 = a30 - 1622226504 < a23;
  }
  return (*(uint64_t (**)(void))(v36 + 8 * (v34 ^ (54 * !v37))))();
}

uint64_t sub_100370994(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1807 * (a2 + 1 == v4 + 16)) ^ v2)))();
}

uint64_t sub_100370A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  return sub_10034F804(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

#error "100370B05: call analysis failed (funcsize=30)"

uint64_t sub_100370B08@<X0>(int a1@<W8>)
{
  int v6 = (v1 - 1738) | 0x101;
  STACK[0x3D8] = *(void *)(v5 + 8 * a1);
  STACK[0x530] = STACK[0x380];
  LODWORD(STACK[0x514]) = 1210380922;
  LODWORD(STACK[0x440]) = 1791330438;
  STACK[0x560] = 0;
  LODWORD(STACK[0x54C]) = -612805554;
  *uint64_t v4 = 1388428834;
  LODWORD(STACK[0x3D0]) = v2 - 1517414319;
  LODWORD(STACK[0x430]) = v2 + 1859425664;
  LODWORD(STACK[0x400]) = v2 - 745885378;
  LODWORD(STACK[0x3A0]) = v2 - 2121282945;
  LODWORD(STACK[0x3A8]) = v6 + v2 - 497595024;
  uint64_t v7 = *(uint64_t (**)(void))(v5 + 8 * (int)((((v6 + 247) | 0xB1) + 72) ^ (v6 + 66508336) & 0xFC092FBF ^ v6));
  LODWORD(STACK[0x3E0]) = v3;
  return v7();
}

uint64_t sub_100370C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * ((539
                                * (a22 - *(_DWORD *)(v25 + 4) + (v22 ^ 0xB9E02B9E ^ (3 * (v23 ^ 0x5F9))) == 714340816)) ^ v23)))();
}

uint64_t sub_100370C7C@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x444]) = 0;
  int v3 = (_DWORD *)STACK[0x3D0];
  int v4 = LODWORD(STACK[0x444])++;
  *int v3 = v4 + 191590270;
  unint64_t v5 = STACK[0x318];
  int v6 = (a1 + 148704109) ^ STACK[0x318];
  *(void *)(v2 - 184) = (*(_DWORD *)STACK[0x3E0] - 575819827) ^ STACK[0x318];
  *(void *)(v2 - 192) = STACK[0x308];
  *(_DWORD *)(v2 - 200) = v5 + a1 - 1501686601;
  *(_DWORD *)(v2 - 176) = -(int)v5;
  *(_DWORD *)(v2 - 172) = v6;
  *(_DWORD *)(v2 - 168) = v6 ^ 0x2A;
  *(_DWORD *)(v2 - 160) = (a1 + 148704061) ^ v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 + 1554)))(v2 - 200);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * *(int *)(v2 - 164)))(v7);
}

uint64_t sub_100370D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * (((a6 + ((v15 + 538475957) | 0x50020148) + 187)
                                * ((unint64_t)(a14 + v14 - a1) > 0xF)) ^ v15)))();
}

uint64_t sub_100370D88(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v13 = v8 + 1374;
  _DWORD *v10 = v9 - 1;
  uint64_t v14 = (uint64_t)&v10[6 * (v9 - 1388430688 + v8 + 1374) + 2];
  int v15 = *(_DWORD *)v14;
  STACK[0x3F8] = *(void *)(v14 + 8);
  LODWORD(STACK[0x54C]) = v10[6 * (v9 - 1388428835) + 6];
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (int)(((*(_DWORD *)(v11 + (v15 - 404244979) * (uint64_t)a8 + 36) == a2 + v13 - 1520 - 333)
                                     * ((v13 + 1248153786) & 0xB59AADDF ^ 0x5AF)) ^ v13)))();
}

uint64_t sub_100370E60(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,char a22)
{
  if (a22 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v22
  }
                                                       + 8
                                                       * ((442 * (*(_DWORD *)(v23 - 160) != ((a7 + a3) ^ 0x242D57F6))) ^ (a7 + a3))))(a1, a14);
  if (a22 != 1) {
    JUMPOUT(0x100370FC0);
  }
  return (*(uint64_t (**)(void))(v22 + 8 * ((53 * (*(_DWORD *)(v23 - 160) != 606950823)) ^ (a7 + a3))))();
}

uint64_t sub_100370FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57)
{
  unint64_t v59 = STACK[0x5E0];
  int v60 = *(unsigned __int8 *)(STACK[0x5E0] - 0x2E910FB81C0D977FLL) ^ 0xCB;
  if (v60 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58
  }
                                                                                           + 8
                                                                                           * ((918
                                                                                             * (*(_DWORD *)(v59 - 0x2E910FB81C0D9783) != ((5 * a57) ^ 0x242D540E))) ^ (v57 + 775))))(a1, a2, 70, 4294967211, 125, 115);
  if (v60 != 1) {
    JUMPOUT(0x100371160);
  }
  BOOL v61 = *(_DWORD *)(v59 - 0x2E910FB81C0D9783) == v57 + 606950066;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * (((4 * v61) | (8 * v61)) ^ (v57 + 1073))))(a1, 0xFFFFFFFFLL, 723399263, 506280513, 3504, 115, a7, 70);
}

void sub_1003711C8(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a4 = v7;
  a5 = v6;
  a6 = v8 + 1225351577 * (&a3 ^ 0x239AD816) - 311;
  a3 = v7;
  (*(void (**)(uint64_t *))(a1 + 8 * (v8 + 1520)))(&a3);
  JUMPOUT(0x100363BC8);
}

void sub_10037120C()
{
}

uint64_t sub_100371294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v11 = LODWORD(STACK[0x43C]) - 209;
  unsigned int v12 = ((v10 + v11 - 548) ^ LODWORD(STACK[0x664])) + (v8 ^ v10);
  *(_DWORD *)(a8 + 52) = ((v12 % 0x2710) ^ 0xE7134F73) + 2097020110 + ((2 * (v12 % 0x2710)) & 0x1EE6);
  int v13 = STACK[0x66C];
  LODWORD(STACK[0x4EC]) = STACK[0x66C];
  return (*(uint64_t (**)(void))(v9 + 8 * ((1058 * (v13 == v10)) ^ v11)))();
}

uint64_t sub_100371324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((495 * (*(_DWORD *)(v8 + 48 * (v7 + a7 + v10 + (v10 ^ 0x74D))) == 89371241)) ^ v10)))();
}

uint64_t sub_100371370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t *a18, int a19, unsigned int a20)
{
  a18 = &STACK[0x216229CD9A8FA141];
  a20 = 1667
      - 460628867 * ((851217541 - (&a18 | 0x32BC8C85) + (&a18 | 0xCD43737A)) ^ 0x81D5F107);
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v22 + 18272))(&a18);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((1463 * (a19 == v21)) ^ v20)))(v23);
}

uint64_t sub_10037140C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((a7 + 1 == v9 + 48) | (4 * (a7 + 1 == v9 + 48))) ^ v7)))();
}

uint64_t sub_1003714E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_100371F3C(a6, 605940026);
}

uint64_t sub_100371508()
{
  BOOL v4 = v1[1] == 0x10F2F6EBA8F7D28 || (v1[7] | v1[4]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 ^ v4) & 1) * (((v0 + 399) | 0x190) - 663)) ^ v0)))();
}

uint64_t sub_100371568()
{
  uint64_t v6 = (unint64_t *)((char *)&STACK[0x6B0] + v2 + (v0 ^ 0xDAFF1E9D4CBC4D36) + STACK[0x390]);
  STACK[0x550] = v3;
  *uint64_t v6 = 0xE7E7E7E7E7E7E7E7;
  v6[1] = 0x181818181E18180ALL;
  int v7 = 235795823 * ((2 * ((v5 - 200) & 0x4BBEC6C8) - (v5 - 200) - 1270793930) ^ 0x20EC706F);
  *(_DWORD *)(v5 - 196) = v7 + 147739468;
  *(_DWORD *)(v5 - 192) = v1 - v7 + 1064655805;
  (*(void (**)(uint64_t))(v4 + 8 * (v1 ^ 0xA50)))(v5 - 200);
  LODWORD(STACK[0x478]) = 1791330774;
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * (v1 ^ 0xBBB)))(336, 1925803308);
  STACK[0x4B8] = v8;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v1 + 47) ^ (v8 == 0)) & 1) * (((v1 - 193) | 0x40) - 518)) ^ v1)))();
}

uint64_t sub_100371688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v15 = v13 + v11 + ((v12 - 1106) ^ 0x338);
  if (v15 >= 0) {
    unsigned int v16 = v13 + v11 + ((v12 - 1106) ^ 0x338);
  }
  else {
    unsigned int v16 = -v15;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8 * ((209 * (v16 > 0x82)) ^ v12)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1003716C4(int a1, int8x16_t *a2, double a3, double a4, double a5, int8x16_t a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  *a2 = vaddq_s8(vaddq_s8(*(int8x16_t *)(v15 + (v12 + a1)), a7), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(v15 + (v12 + a1)), *(int8x16_t *)(v15 + (v12 + a1))), a6)));
  return (*(uint64_t (**)(void))(v14 + 8 * (a12 + v13 + 1063)))();
}

uint64_t sub_10037171C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((313
                                * (*(_DWORD *)(v1 + 4 * (v2 + v5 - 1)) == v3
                                                                                        + ((v0 + 1121006457) & 0xBD2ECBFD)
                                                                                        - 477)) ^ v0)))();
}

uint64_t sub_10037176C@<X0>(uint64_t a1@<X2>, int a2@<W6>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  *(&a20 + a3 + a1) = 24;
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * (((32 * ((unint64_t)(a3 + 1 + a1) < 0x38)) | (((unint64_t)(a3 + 1 + a1) < 0x38) << 6)) ^ (a2 + v20 + 352))))();
}

uint64_t sub_1003717AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26,int a27,uint64_t a28,uint64_t a29)
{
  int v32 = *(_DWORD *)(v31 + 4);
  unsigned int v33 = 628203409 * ((2 * (&a22 & 0x17B26958) - &a22 - 397568346) ^ 0x6AC59A95);
  a28 = *(void *)(v31 + 8);
  a26 = a16;
  a29 = a14;
  a24 = v29 - v33 + 690;
  a25 = -536575948 - v33 + v32;
  a22 = a15;
  a23 = a13;
  (*(void (**)(uint64_t *))(v30 + 8 * (v29 ^ 0xC90)))(&a22);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * ((873 * (a27 == v29 + 605938933)) ^ v29)))(-1633704640);
}

uint64_t sub_1003718D4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((122 * (v1 ^ 0x500) - 842) | 0x409) ^ 0x91C ^ (122 * (v1 ^ 0x500)))))();
}

uint64_t sub_100371960@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  int v29 = v26 ^ 2;
  *(&a25 + (a8 + v25)) = *(unsigned char *)(a16 + v28 - 1837928138)
                                     - ((*(unsigned char *)(a16 + v28 - 1837928138) << (((v29 - 81) | 0xB) - 42)) & 0x30)
                                     + 24;
  uint64_t v30 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * (v29 | (2 * ((a3 + a8 + 1) < 0x40))));
  return v30(v30, a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1003719D0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v11 = (a5 + v8 + v7 + v9 - a2);
  *(void *)(a1 - 7 + v11) = *(void *)(v5 - 7 + v11);
  return (*(uint64_t (**)(void))(v10 + 8 * ((1618 * (a2 - (v6 & 0xFFFFFFF8) == -8)) ^ a5)))();
}

uint64_t sub_100371A28()
{
  LODWORD(STACK[0x660]) = v0;
  return sub_100362C38();
}

uint64_t sub_100371A48@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(a1 - 0x1F010F7499D3F79ELL) + 4 * (v3 + v5 + v2 + 4 - 671)) = v1
                                                                                       - ((2 * v1 - 1845931036) & v4)
                                                                                       + 166370960;
  return sub_100371A94();
}

void sub_100371A94(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x1F010F7499D3F7A2) = (((v3 + v2) * (v1 - 1694903118)) ^ 0x75F76DFC)
                                         - 76546208
                                         + ((2 * (v3 + v2) * (v1 - 1694903118)) & 0xEBEEDBF8);
}

uint64_t sub_100371B20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((250 * (a4 + 1 != v4 + 48)) ^ a3)))();
}

uint64_t sub_100371BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)(v20 - 128) = a15;
  *(void *)(v20 - 120) = v15;
  *(_DWORD *)(v20 - 136) = (v19 - 928) ^ (1225351577 * ((v20 + 303804943 - 2 * ((v20 - 136) & 0x121BB297)) ^ 0x31816A81));
  *(void *)(v20 - 112) = v15;
  *(void *)(v20 - 104) = a12;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v19 ^ 0xEB1)))(v20 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((194
                                              * ((((((v18 - 200352063) >> ((v19 + 96) ^ 0xC6)) ^ (v19 - 537448232))
                                                 + ((v18 - 200352063) & 0xBFEE6E7E)
                                                 + v16) & a11) != 0)) ^ v19)))(v21);
}

uint64_t sub_100371CD8()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v0 + 1523)))();
  int v4 = (v0 - 673) | 0x100;
  STACK[0x530] += (137 * (v4 ^ 0x150u) - 827) ^ (v4 - 1043288921) & 0x3E2F531D;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((1936 * (v1 == 605940026)) ^ v4)))(v3);
}

uint64_t sub_100371D60()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((26 * (STACK[0x640] == 0)) ^ (v0 + 501))))();
}

uint64_t sub_100371D88(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 24);
  return 0;
}

uint64_t sub_100371DA0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 88) = 52;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0;
}

void sub_100371DC0()
{
  uint64_t v0 = __chkstk_darwin();
  int v1 = *(_DWORD *)(v0 + 24) - 1225351577 * ((-2 - ((v0 | 0x64CFEAB8) + (~v0 | 0x9B301547))) ^ 0xB8AACD51);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_100371F3C@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a2 == a1 + v2 - 291) * ((v2 + 113) ^ 0x61C)) ^ v2)))();
}

uint64_t sub_100371F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unint64_t *a16)
{
  a14 = (v19 - 389) ^ (1374699841
                     * ((2 * ((&a14 ^ 0x8D621A2D) & 0x1E6AC938)
                       - (&a14 ^ 0x8D621A2D)
                       + 1637168839) ^ 0x810334E3));
  a15 = &STACK[0x2E91F1FE0AA58437];
  a16 = a11;
  (*(void (**)(unsigned int *))(v17 + 8 * (v19 + 1512)))(&a14);
  a14 = (v19 - 389) ^ (1374699841
                     * ((&a14 + 2091475848 - 2 * (&a14 & 0x7CA96388)) ^ 0x115D7B81));
  a15 = &STACK[0x2E91F1FE0AA5843B];
  a16 = a11;
  (*(void (**)(unsigned int *))(v17 + 8 * (v19 ^ 0xA18)))(&a14);
  a15 = a11;
  a14 = (v19 + 1450) ^ (1755732067
                      * ((&a14 & 0x36E44DFF | ~(&a14 | 0x36E44DFF)) ^ 0x17DD0FDB));
  uint64_t v20 = (*(uint64_t (**)(unsigned int *))(v17 + 8 * (v19 ^ 0xA19)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((a16 != v16 + (v19 ^ 0x33) - 745)
                                              * (v18 + (v19 ^ 0x5AC5C185) - 1886)) ^ v19)))(v20);
}

void sub_100372110()
{
}

uint64_t sub_100372118@<X0>(int a1@<W6>, int a2@<W8>)
{
  uint64_t v3 = ((a2 ^ 0x370) + 144) | 0x41u;
  STACK[0x530] += v3 ^ 0xFFFFFFFFFFFFFB45;
  LODWORD(STACK[0x4EC]) = a1 - 214;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((STACK[0x578] != 0) * (11 * (v3 ^ 0x252) + ((v3 + 409) ^ 0xFFFFFDA7))) ^ (v3 + 1070))))();
}

uint64_t sub_100372194@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v1 + (v4 + v2)) = *(unsigned char *)(v5 + (v4 + v2))
                                           - ((v3 - 124) & (2 * *(unsigned char *)(v5 + (v4 + v2))))
                                           + 24;
  return (*(uint64_t (**)(void))(v6 + 8 * ((101 * (v4 - 1 == a1)) ^ v3)))();
}

void sub_1003721D4()
{
}

uint64_t sub_10037221C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((((a6 + 2112001520) & 0x49C60B14) + 831) ^ (a6 - 1281728781) & 0x140E3FA3)
                                * (v6 == v8)) ^ (a4 + a6 + 678))))();
}

uint64_t sub_100372280()
{
  *(void *)(v5 - 128) = v1;
  *(void *)(v5 - 120) = v2;
  *(_DWORD *)(v5 - 136) = v4 - 108757529 * ((v5 + 884810356 - 2 * ((v5 - 136) & 0x34BD22FC)) ^ 0xD42140D7) + 287;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v4 + 1029)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (((v3 == ((v4 + 724) ^ 0x7BDABD87)) * (v4 ^ 0x5BB)) ^ v4)))(v6);
}

uint64_t sub_100372324()
{
  STACK[0x468] = v0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((121 * (STACK[0x460] != 0)) ^ (v1 + 1770))))();
}

uint64_t sub_100372338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v7 + 41) ^ (a6 + 1989) ^ (a6 + 14)) * ((v6 ^ 3u) > 7)) ^ v7)))();
}

uint64_t sub_100372370@<X0>(int a1@<W8>)
{
  BOOL v3 = (a1 ^ 3u) >= (((((v1 ^ 0x2A6) - 580) | 0x40C) - 617) ^ 0x28Du);
  return (*(uint64_t (**)(void))(v2 + 8 * (v3 | (16 * v3) | v1 ^ 0x2A6)))();
}

uint64_t sub_10037241C()
{
  int v4 = ((v2 + 738) ^ 0x4E945CF6) + v0;
  int v5 = (v2 ^ 0x362) + *v3 + 1318343562;
  int v6 = (v4 < 1073465508) ^ (v5 < 1073465508);
  BOOL v7 = v4 > v5;
  if (v6) {
    BOOL v7 = v4 < 1073465508;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((47 * !v7) ^ v2)))();
}

void sub_100372494(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 1178560073 * (a1 ^ 0xBA947862);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_100372560(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v5 + 8 * (v6 ^ 0xF8C)))(a1, 0);
  if (result == 16)
  {
    --v2;
    goto LABEL_7;
  }
  if (result == 12)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v3 + 417)))(a1);
    int v9 = v2;
    goto LABEL_8;
  }
  if (result)
  {
    v2 -= 2;
    goto LABEL_7;
  }
  *int v4 = a1;
  int v9 = 1645153785;
LABEL_8:
  *(_DWORD *)(v1 + 12) = v9 - 1645153785;
  return result;
}

uint64_t sub_1003725EC@<X0>(int a1@<W2>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((v3 == ((a3 - 450120494) & 0x1AD448FF ^ (v4 + 75))) * ((a3 - a1 - 42) ^ (a2 + 211))) ^ a3)))();
}

uint64_t sub_100372640()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (v1 | (8 * ((v1 ^ 0xAF5E8DA4) + v0 >= v0 - 1352758830 + v1 - 1383 - 590)))))(216);
}

uint64_t sub_1003726A0@<X0>(unint64_t a1@<X4>, unsigned int a2@<W8>, int8x16_t a3@<Q1>, int8x16_t a4@<Q4>, int8x16_t a5@<Q5>, int8x16_t a6@<Q6>, int32x4_t a7@<Q7>)
{
  uint64_t v11 = (const float *)(v7 + 908);
  int8x16_t v12 = (int8x16_t)vld1q_dup_f32(v11);
  a3.i64[0] = *(void *)(v7 + 912);
  a3.i32[2] = *(_DWORD *)(v7 + 920);
  int8x16_t v13 = vextq_s8(v12, a3, 0xCuLL);
  int8x16_t v14 = a3;
  v14.i32[3] = *(_DWORD *)(v7 + 924);
  int32x4_t v15 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v14, a4), vandq_s8(v13, v10)), 1uLL), a5);
  v16.i32[0] = *((_DWORD *)&STACK[0x698] + ((*(_DWORD *)(v7 + 912) & 1) == 0));
  v16.i32[1] = *((_DWORD *)&STACK[0x698] + ((*(_DWORD *)(v7 + 916) & 1) == 0));
  v16.i32[2] = *((_DWORD *)&STACK[0x698] + (*(unsigned int *)(v7 + 920) & ((a2 - 472034642) & 0x1C22AF5A ^ a1) ^ 1));
  v16.i32[3] = *((_DWORD *)&STACK[0x698] + (~v14.i32[3] & 1));
  *(int8x16_t *)(v7 + 908) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)v7, v16), v9), (int8x16_t)vaddq_s32(vsubq_s32(v15, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v15, v15), a6)), a7));
  return (*(uint64_t (**)(void))(v8 + 8 * a2))();
}

void sub_10037278C()
{
}

uint64_t sub_1003727B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((442 * ((((unint64_t)(v5 - a1) < 0x20) ^ (a5 + 111)) & 1)) ^ a5)))();
}

uint64_t sub_1003727FC@<X0>(uint64_t a1@<X8>)
{
  if ((*(_DWORD *)(v2 + 1428) | 4) == 0x2D27D735) {
    return (*(uint64_t (**)(void))(v3
  }
                                + 8
                                * (((*(_DWORD *)(a1 + 476) == 1869900190) * (LODWORD(STACK[0x43C]) - 232)) ^ (LODWORD(STACK[0x43C]) - 478))))();
  STACK[0x530] = STACK[0x2D8];
  return v1();
}

void sub_1003728D8()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 926)))();
  JUMPOUT(0x1003728F4);
}

uint64_t sub_10037290C@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((2626 * (a2 + 1 == v2 + 32)) ^ a1)))();
}

uint64_t sub_1003729E4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((a2 + 1226212671) ^ 0x491684B7 ^ (211 * (a2 ^ 0x187)))
                                * ((v3 + v2 - 1804563901) < 8)) ^ a2)))();
}

uint64_t sub_100372A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  unsigned int v22 = v20 + 664;
  if (v22 <= 0x40) {
    unsigned int v22 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8 * (a18 ^ (50 * (-v18 - v19 + v22 - 664 < 0xF)))))(a1, 1352758830);
}

uint64_t sub_100372AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, uint64_t a16, unsigned int a17, unsigned int a18, unsigned int a19, int a20)
{
  unsigned int v22 = 460628867 * (((&a15 | 0x444BEFE9) + (~&a15 | 0xBBB41016)) ^ 0x8DD6D95);
  a15 = &STACK[0x44D5F6D91B577B24];
  a16 = a13;
  a18 = v22 + a9 - 2024873461;
  a19 = 366164236 - v22;
  a17 = v22 + 982698095;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v21 + 8 * (a9 + 1848)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((7 * (a20 != v20)) ^ a9)))(v23);
}

uint64_t sub_100372B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  int v50 = *(_DWORD *)(a1 + 44) - 1755732067 * (((a1 | 0xCC66703E) - (a1 | 0x33998FC1) + 865701825) ^ 0x12A0CDE5);
  unsigned int v51 = 1178560073 * (&v58 ^ 0xBA947862);
  int v60 = v50 - v51 - 1882357527;
  unsigned int v58 = 221124111 - v51;
  unint64_t v59 = &STACK[0x2E910FB81C0D98DB];
  (*(void (**)(unsigned int *))((char *)*(&off_1022AC750 + v50 + 89) + 8 * v50 + 17532))(&v58);
  return sub_10035DE58(2727111354, v52, v53, v54, v55, (uint64_t)&v57, 1567855103, 2653026728, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_100372E08()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((111 * (v1 == v0 + v3)) ^ v2)))();
}

uint64_t sub_100372E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, unsigned int a18, uint64_t a19)
{
  unsigned int v27 = 1178560073 * ((((2 * &a15) | 0x52165FC6) - &a15 - 688599011) ^ 0x939F5781);
  a18 = v27 ^ 0x43D;
  a16 = v25 - 1815171521 - ((2 * v25) & 0x279D5C7E) + v27;
  a17 = a13;
  (*(void (**)(int *))(v26 + 17496))(&a15);
  unsigned int v28 = 1178560073 * ((&a15 & 0x147230E4 | ~(&a15 | 0x147230E4)) ^ 0x5119B779);
  a18 = v28 ^ 0x43D;
  a17 = a13;
  a16 = v24 - ((2 * v24) & 0x279D5C7E) - 1815171521 + v28;
  (*(void (**)(int *))(v26 + 17496))(&a15);
  unsigned int v29 = 1178560073 * (&a15 ^ 0xBA947862);
  a16 = v29 + 173;
  a19 = v22;
  a18 = v29 ^ ((v23 ^ 0x6A5EBE7F) + ((2 * v23) & 0xD4BD7CFE) - 0x40000);
  a17 = a13;
  (*(void (**)(int *))(v26 + 17832))(&a15);
  unsigned int v30 = 1178560073 * ((&a15 - 1989463651 - 2 * (&a15 & 0x896B319D)) ^ 0x33FF49FF);
  a17 = a13;
  a19 = v20;
  a16 = v30 + 173;
  a18 = v30 ^ ((v21 ^ 0x7AFEBFFF) - 279183744 + ((2 * v21) & 0xF5FD7FFE));
  (*(void (**)(int *))(v26 + 17832))(&a15);
  int v31 = *v19;
  a17 = a13;
  a16 = v29 + v31 - 1815171521 - ((2 * v31) & 0x279D5C7E);
  a18 = v29 ^ 0x43D;
  uint64_t v32 = (*(uint64_t (**)(int *))(v26 + 17496))(&a15);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((2342 * (a15 == 605940026)) ^ 0x17Du)))(v32);
}

void sub_1003730C8()
{
}

void sub_1003730D4()
{
}

void sub_1003730E0()
{
}

uint64_t sub_1003731E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a22;
  *(void *)(v28 - 136) = a23;
  *(void *)(v28 - 128) = a24;
  *(_DWORD *)(v28 - 144) = (v24 + 520) ^ (1225351577
                                        * ((2 * ((v28 - 144) & 0x3AF06C48) - (v28 - 144) - 988834896) ^ 0xE6954BA6));
  (*(void (**)(uint64_t))(v26 + 8 * (v24 + 2071)))(v28 - 144);
  *(void *)(v28 - 128) = a24;
  *(void *)(v28 - 120) = a23;
  *(void *)(v28 - 104) = a24;
  *(_DWORD *)(v28 - 112) = v24
                         + 1224239923
                         * ((((2 * ((v28 - 144) ^ 0xEBD82A09)) | 0xFC0EC0A8) - ((v28 - 144) ^ 0xEBD82A09) - 2114412628) ^ 0x676CB78A)
                         + 417;
  *(void *)(v28 - 144) = a22;
  *(void *)(v28 - 136) = a18;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v24 + 2075)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (((v25 + v27 + v24 + 647 - 840 + 2 < ((v24 + 452) | 0x540u) + 2147481660)
                                              * (v24 - 92)) ^ (v24 + 375))))(v29);
}

void sub_100373314()
{
}

uint64_t sub_100373510@<X0>(uint64_t a1@<X8>, int a2)
{
  *(_DWORD *)(a1 - 0x7A1D52918E41690) = a2;
  return (*(uint64_t (**)(void))(v4 + 8
                                   * ((74 * (*(void *)(v3 + 24) != 0x147CEA7F17742063)) ^ ((v2 + 407) | 0x1B5))))();
}

uint64_t sub_100373570@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((127 * (a2 == 13 * (((a1 - 279) | 0x140) ^ 0x103) - 1183)) ^ a1)))();
}

uint64_t sub_1003735B0@<X0>(unint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, int a6@<W5>, unsigned int a7@<W6>, unint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v44 = 4 * (a2 + 1 + a6);
  unint64_t v45 = (*(_DWORD *)(a31 + v44) ^ v32)
      + (v37 ^ HIDWORD(a8))
      + a7 * (unint64_t)((v31 + v40) & v41 ^ v33 ^ *(_DWORD *)(*a4 + v44));
  unint64_t v46 = HIDWORD(a1)
      + a9 * (unint64_t)(*(_DWORD *)(*v42 + v44) ^ v32)
      + ((v45 + a5 - (v39 & (2 * v45))) ^ v43);
  *(_DWORD *)(a31 + 4 * (a2 + a6)) = v46 + v32 - (a3 & (2 * v46));
  BOOL v48 = a2 + 1759724875 < v34 && a2 + 1759724875 >= v38;
  return (*(uint64_t (**)(void))(v35 + 8 * ((v48 * v36) ^ v31)))();
}

uint64_t sub_100373658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42 = BYTE4(a36) ^ 0xCB;
  if (v42 == 1)
  {
    char v45 = (a6 - 5) & 0xED;
    BYTE4(a31) = ((8 * a33) ^ 0xE0) - 16 * (a33 & 3) + 24;
    BYTE5(a31) = ((a33 >> (v45 - 40)) ^ 0x4D)
               - ((2 * ((a33 >> (v45 - 40)) ^ 0x4D)) & 0x30)
               + 24;
    BYTE6(a31) = ((a33 >> 13) ^ 0x8D) - ((2 * ((a33 >> 13) ^ 0x8D)) & 0x30) + 24;
    HIBYTE(a31) = ((a33 >> 21) ^ 0xB4)
                - 2 * (((a33 >> 21) ^ 0xB4) & 0x1A ^ (a33 >> 21) & 2)
                + 24;
    HIDWORD(v48) = HIDWORD(a32) ^ 0x11;
    LODWORD(v48) = a33;
    LOBYTE(a32) = (v48 >> 29) + (~(2 * (v48 >> 29)) | 0xCF) + 25;
    BYTE1(a32) = ((HIDWORD(a32) >> 5) ^ 0xC9) - ((2 * ((HIDWORD(a32) >> 5) ^ 0xC9)) & 0x30) + 24;
    BYTE2(a32) = (HIDWORD(a32) >> 13) - ((HIDWORD(a32) >> 12) & 0x30) + 24;
    unsigned int v46 = (HIDWORD(a32) >> 21) ^ 0xFFFFFFE3;
    int v47 = 2 * (HIDWORD(a32) >> 21);
    uint64_t v43 = a4;
    goto LABEL_5;
  }
  uint64_t v43 = a4;
  if (v42 == 2)
  {
    BYTE4(a31) = ((HIDWORD(a32) >> (a7 + a6 - 12)) ^ 0xE3) - ((2 * (HIDWORD(a32) >> (a7 + a6 - 12))) & 0x30) + 24;
    BYTE5(a31) = (~(HIDWORD(a32) >> 12) | 0xCF) + (HIDWORD(a32) >> 13) + 25;
    BYTE6(a31) = ((HIDWORD(a32) >> 5) ^ 0xC9) - 2 * (((HIDWORD(a32) >> 5) ^ 0xC9) & 0x1A ^ (HIDWORD(a32) >> 5) & 2) + 24;
    HIDWORD(v44) = HIDWORD(a32) ^ 0x11;
    LODWORD(v44) = a33;
    HIBYTE(a31) = (v44 >> 29) - ((2 * (v44 >> 29)) & 0x30) + 24;
    LOBYTE(a32) = ((a33 >> 21) ^ 0xB4) - ((2 * ((a33 >> 21) ^ 0xB4)) & 0x30) + 24;
    BYTE1(a32) = ((a33 >> 13) ^ 0x8D) - ((2 * ((a33 >> 13) ^ 0x8D)) & 0x30) + 24;
    BYTE2(a32) = ((a33 >> 5) ^ 0x4D) - ((2 * ((a33 >> 5) ^ 0x4D)) & 0x30) + 24;
    char v45 = a7 + a6 + 12;
    LOBYTE(v46) = (8 * a33) ^ 0xE0;
    LOBYTE(v47) = 16 * a33;
LABEL_5:
    BYTE3(a32) = v46 - (v47 & 0x30) + ((v45 + 31) & 0xF7 ^ 0x5C);
  }
  return sub_10034F804(a1, a2, v43, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_1003738B0@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unint64_t v8 = v2 - 1;
  STACK[0x4F0] = v8;
  *(unsigned char *)(a1 + v8) = ((v3 + v4 + 1 + 119) ^ v5) * (v4 + 1);
  return (*(uint64_t (**)(void))(v7 + 8 * (((STACK[0x4F0] == 0) * v6) ^ a2)))();
}

uint64_t sub_1003738B8(uint64_t a1)
{
  int v6 = v3 + v2;
  int v7 = v6 + 664;
  if ((v6 + 664) <= 0x40) {
    int v7 = 64;
  }
  BOOL v8 = __CFADD__(v6 + 663, v4 + v7 - 664);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8
                                                          * ((((v1 + 162) ^ 0x586 ^ (3 * (v1 ^ 0x669))) * v8) ^ v1)))(a1, 1352758830);
}

uint64_t sub_100373918()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 ^ 0x66D) + 271 + v2 - 2110) * (v0 == v1)) ^ v2 ^ 0x66D)))();
}

uint64_t sub_10037394C()
{
  BOOL v4 = v2 - 1508289540 < (int)(v1 + 429766751);
  if (v1 > 0x666247A0 != v2 - 1508289540 < 52 * (v0 ^ 0x5CA) - 1717717001) {
    BOOL v4 = v1 > 0x666247A0;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * (((v0 - 2066407561) & 0x7B2ADFFF) - 584)) ^ v0)))();
}

uint64_t sub_1003739DC()
{
  int v5 = v3 - 1131;
  int v6 = (v5 ^ 0x27E) + *(unsigned __int8 *)(v2 + 7) - 778;
  return (*(uint64_t (**)(void))(v4 + 8 * ((218 * ((v1 & (2 * v6)) + (v6 ^ v0) == v0)) ^ v5)))();
}

uint64_t sub_100373A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((71 * (v5 - v6 - ((a5 + 585) ^ 0x68CuLL) < 0x20)) ^ a5)))();
}

uint64_t sub_100373A6C(__n128 a1)
{
  a1.n128_u16[0] = 6168;
  a1.n128_u8[2] = 24;
  a1.n128_u8[3] = 24;
  a1.n128_u8[4] = 24;
  a1.n128_u8[5] = 24;
  a1.n128_u8[6] = 24;
  a1.n128_u8[7] = 24;
  return sub_100373A94(a1);
}

uint64_t sub_100373A94@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(double *)(v7 + a2 + a1 + v3) = a3;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v3 + v6 - 1801 == v5) * v8) ^ v4)))();
}

uint64_t sub_100373AC4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_DWORD *)(a1 + 1424) != 1130566729) * ((v1 - 551) ^ (v1 + 511) ^ 0x5B6)) ^ v1)))();
}

uint64_t sub_100373B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * (v6 ^ (16 * ((a5 + 1 + v7) < 0x50)))))(v5, a4);
}

uint64_t sub_100373BC4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((v0 < ((26 * (v1 ^ 0x530)) ^ 0x172u)) * (((v1 ^ 0x530) + 744) ^ 0x2F6)) ^ v1)))();
}

uint64_t sub_100373C08(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v5 + 96) + 1428) = 757585713;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(_DWORD *)(a2 + 4) == (((v3 - 208) | 0x108) ^ (v2 + 1966)))
                                * (((v3 - 577) | 0x12B) + 1400)) ^ v3)))();
}

uint64_t sub_100373D44@<X0>(int a1@<W1>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((229 * (v4 == (((v3 ^ a1) - 892) ^ a2 ^ a3))) ^ v3 ^ a1)))();
}

void sub_100373D78()
{
}

void sub_100373D8C()
{
}

uint64_t sub_100373D94()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((2011 * ((v0 << (v2 ^ v1 ^ 0xE0)) - v3 == -2110086873)) ^ v2)))();
}

uint64_t sub_100373DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v15 - 112) = v13 + 1374699841 * ((v15 - 128) ^ 0x6DF41809) - 255;
  *(void *)(v15 - 128) = v14;
  *(void *)(v15 - 120) = a12;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v13 + 1534)))(v15 - 128);
  return sub_100373E14(v16);
}

uint64_t sub_100373E50(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8 * (v1 - 216)) - 4 + 8 * ((((v4 & (v1 ^ v2)) == 0) * v3) | v1)))();
}

uint64_t sub_100373E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  unint64_t v38 = (*(_DWORD *)(v37 + v32) ^ v26) + HIDWORD(v36);
  *(_DWORD *)(v37 + 4 * a3) = v38 + ((v35 - 426) ^ (v26 + 229)) - (v28 & (2 * v38));
  *(_DWORD *)(a26 + v32) = HIDWORD(v38) | v26;
  int v39 = v27 + v31 + 1;
  BOOL v41 = v39 > v29 || v39 < v30;
  return (*(uint64_t (**)(void))(v34 + 8 * ((v35 + 856) ^ (v41 * v33))))();
}

uint64_t sub_100373EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((a5 - 537) * ((unint64_t)(v5 - v6) < 0x20)) ^ a5)))();
}

uint64_t sub_100373F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (int)(((v6 != v7) * ((a6 - 196792650) ^ 0xF4453560)) ^ a6)))();
}

uint64_t sub_100373F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10
                              + 8 * (int)((((v9 - 12589749) & 0xAFFFD6BF ^ (v7 + v9 - 1062 + 193)) * (v8 == a7)) ^ v9)))();
}

uint64_t sub_100373F98()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v0 ^ 0xD1)))();
  LODWORD(STACK[0x668]) = v1;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((v1 == (v0 ^ 0xACC) + 605939269) * v2) ^ v0)))(v4);
}

void sub_100373FE4(uint64_t a1@<X8>, int a2, int a3, uint64_t a4)
{
  int v8 = v7 - 881;
  unsigned int v9 = 299308985 - v5 - (((v7 + 1767393284) & 0x96A7B7FB ^ 0x505AA2C4) & (1397983116 - v6));
  int v10 = v7 - 568;
  unsigned int v11 = 1755732067 * ((((2 * &a2) | 0x8125F018) - &a2 + 1064110068) ^ 0x1E5445D7);
  a4 = v4;
  a2 = v9 ^ v11;
  a3 = v10 ^ v11;
  (*(void (**)(int *))(a1 + 8 * (v8 ^ 0x895)))(&a2);
  JUMPOUT(0x100359094);
}

uint64_t sub_100374094()
{
  return (*(uint64_t (**)(void))(*(void *)(v1 + 8 * (v2 ^ 0x1D4))
                              - 4
                              + 8 * (((v0 - 1 < (v2 + 2147483315)) * ((v2 - 12) ^ 0x401)) ^ v2)))();
}

void sub_1003740E4()
{
}

uint64_t sub_100374100@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (((*(_DWORD *)(*(void *)(a1 + 8) + v4) == v3) * (((a2 ^ 0x17F) - 378) ^ v5)) ^ a2)))();
}

void sub_100374138(int a1@<W8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v9 = a1 - 1257;
  unsigned int v10 = 3804331 * ((((2 * &a3) | 0x520AD6) - &a3 + 2144795285) ^ 0xFEFC209D);
  a5 = 0x3B6240245EEB6D72;
  a6 = v7;
  a7 = v10 + 108673995;
  a3 = v10 + 296806364;
  a4 = v10 + v9 + 266;
  (*(void (**)(unsigned int *))(v8 + 8 * (v9 + 2112)))(&a3);
  sub_10038E4FC();
}

void sub_1003741CC()
{
}

uint64_t sub_1003741E8@<X0>(int a1@<W8>)
{
  STACK[0x3F8] = *v1;
  return sub_100370B08(a1);
}

uint64_t sub_10037421C()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v2 + 1806)))((((v2 + 697001438) & 0xD6749FEE ^ (v1 - 1498)) + ((v2 + 577) | 0x4E)) ^ v0, 1644418179) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((89 * v4) ^ v2)))();
}

uint64_t sub_100374294@<X0>(uint64_t a1@<X8>)
{
  int v8 = *(_DWORD *)(a1 + 4 * (v3 + ((v1 + 684) ^ (v5 - 751))));
  int v9 = v5 + v3;
  int v10 = *(_DWORD *)(a1 + 4 * (v9 - 8)) ^ v8;
  int v11 = *(_DWORD *)(a1 + 4 * (v9 - 16)) ^ *(_DWORD *)(a1 + 4 * (v9 - 14)) ^ (v10 + v7 - (v4 & (2 * v10)));
  HIDWORD(v12) = v11 ^ v7;
  LODWORD(v12) = v11;
  *(_DWORD *)(a1 + 4 * (v2 + v5)) = (v12 >> 31) + v7 - (v4 & (2 * (v12 >> 31)));
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((2 * ((v2 + 1 + v5) < 0x50)) | (8 * ((v2 + 1 + v5) < 0x50))) ^ v1)))();
}

uint64_t sub_100374324(uint64_t a1, int a2, int a3, int a4)
{
  unsigned int v8 = v6 + a2;
  if (v8 <= 0x40) {
    unsigned int v8 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                + 8
                                                                                * (((((a4 - 1621) | 0x25) - 331)
                                                                                  * (a3 - v4 - v5 + v8 + 1119 < 0xF)) | a4)))(a1, 2738276621, 3187482797, 1107484483, 1574566789);
}

uint64_t sub_1003743A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v16 = ((v13 + 1369) ^ (v14 + 1443) ^ a13) - ((2 * ((v13 + 1369) ^ (v14 + 1443) ^ a13)) & 0x6E10ACA4) - 1224190382;
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((19
                                * (((7 * (v13 ^ 0x245)) ^ 0x4610ADAD ^ (2 * v16) & 0xD71EEB7A)
                                 + (v16 ^ 0xDC8723EF)
                                 - 1099699624 != 704864277)) ^ v13)))();
}

uint64_t sub_100374444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>)
{
  uint64_t v13 = *(void *)(v11 + 72);
  *(_DWORD *)(v9 - 0x10F2F6EBA8F7D28) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * ((84 * (((v13 == 0x1F010F7499D3F7A6) ^ (a9 + 1)) & 1)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, v10);
}

uint64_t sub_100374524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _DWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22)
{
  *a6 = 0;
  *a7 = 0;
  a22 = 108757529 * (((&a21 | 0x956C4C34) - (&a21 & 0x956C4C34)) ^ 0x75F02E1F) - 504207030;
  uint64_t v25 = (*(uint64_t (**)(int *))(v24 + 17680))(&a21);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((1506 * (a21 == v23)) ^ v22)))(v25);
}

uint64_t sub_1003745BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  HIDWORD(a21) = -612805554;
  uint64_t v31 = *(void *)(v30 + 8);
  unsigned int v32 = 628203409 * (((&a22 | 0x8627F93B) + (~&a22 | 0x79D806C4)) ^ 0x4AFF509);
  int v33 = -536575948 - v32 + *(_DWORD *)(v30 + 4);
  LODWORD(a24) = v28 - v32 + 999;
  HIDWORD(a24) = v33;
  a27 = v31;
  a28 = a14;
  a25 = a16;
  a22 = a15;
  a23 = a13;
  uint64_t v36 = (*(uint64_t (**)(uint64_t *))(v29 + 8 * (v28 ^ 0xBC5)))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((1278 * (a26 == v28 + 605939242)) ^ v28)))(v36, a2, 1633702658, 3349716575, 1791330458, 945250827, 846079461, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_100374720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * (((((v20 - 1791330435) & 0xFFFFFFFC) - a18 == v18 - 1791332487) * (v18 - 2023)) ^ v18)))();
}

uint64_t sub_100374764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8
                                                     + 8
                                                     * (int)(((a6 + ((v7 + 1964740431) & 0xFAFEF3DE) + 44) * (v6 != 63)) ^ (v7 + 112))))(a1, -1424257457);
}

uint64_t sub_1003747AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,int a40)
{
  if (a18 == 2) {
    return (*(uint64_t (**)(uint64_t))(v40
  }
                                              + 8
                                              * (((a40 == a6 + a3 + 606950822) | (16 * (a40 == a6 + a3 + 606950822))) ^ (a6 + a3 + 166))))(a10);
  if (a18 == 1) {
    return (*(uint64_t (**)(uint64_t))(v40
  }
                                              + 8
                                              * ((248 * (a40 == ((a6 + a3 + 1632) ^ 0x242D53C6))) ^ (a6 + a3 + 1632))))(a10);
  uint64_t v42 = (1880787345 - a3);
  uint64_t v43 = ((unint64_t)&a23 ^ 0xDEFBFFB99D86B97FLL)
      + ((2 * (void)&a23) & 0xBDF7FF733B0D72F0)
      + 0x7F7EF9FE767DEA4CLL
      + v42;
  a39 = (v43 ^ 0xBA) * (v43 + 17);
  return (*(uint64_t (**)(uint64_t))(v40 + 8 * (int)(v42 ^ 0x73)))(a10);
}

uint64_t sub_100374920(int a1, int a2)
{
  int v8 = v5 + v3;
  int v9 = v8 + v4;
  if ((v8 + v4) <= 0x40) {
    int v9 = a2;
  }
  int v10 = v7 - v8 >= a1 + v2 + ((v7 - 1393) ^ 0x573u) + v9;
  return (*(uint64_t (**)(void))(v6 + 8 * (((32 * v10) | (v10 << 6)) ^ 0x1A6u)))();
}

uint64_t sub_100374978(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v34 = v29 - a4 - 1360;
  uint64_t v35 = (*(uint64_t (**)(uint64_t, void))(v30 + 8 * (v29 + 678)))(a29, 0);
  unsigned int v36 = v32[4] + 1255822489 - ((2 * v32[4]) & 0x95B4A932);
  v32[1] = v32[6] + 1255822489 - ((2 * v32[6]) & 0x95B4A932);
  void v32[2] = v36;
  int v37 = (*(uint64_t (**)(uint64_t))(v30 + 8 * (v29 ^ 0xD39)))(v35);
  v32[3] = v37 + 1255822489 - ((v37 << (v34 ^ 0xC6)) & 0x95B4A932);
  int v38 = (*(uint64_t (**)(void))(v30 + 8 * (v29 ^ 0xD39)))();
  _DWORD *v32 = v38 + 1255822489 - ((2 * v38) & 0x95B4A932);
  int v39 = (((*v31 >> 30) ^ 1) + 1255822489 - 2 * (((*v31 >> 30) ^ 1) & 1)) ^ *v31;
  unsigned int v40 = (*v32 ^ 0x4ADA5499) + ((1664525 * v39 + 1255822489 - ((3329050 * v39) & 0x95B4A932)) ^ v31[1]);
  v31[1] = v40 + 1255822489 - ((2 * v40) & 0x95B4A932);
  uint64_t v41 = 235795823
      * ((((v33 - 152) | 0x68728E509914D92ELL) - ((v33 - 152) & 0x68728E509914D92ELL)) ^ 0x60C234AE0DB99077);
  *(_DWORD *)(v33 - 124) = v41 + 1;
  int v42 = v41 ^ (v34 - 1844237572);
  STACK[0x5C8] = v41 ^ 0x9B819C6CLL;
  *(_DWORD *)(v33 - 152) = v42 ^ 0xEB;
  *(_DWORD *)(v33 - 148) = v34 - 1844237572 - v41;
  *(_DWORD *)(v33 - 144) = v42 ^ 0x6B;
  *(_DWORD *)(v33 - 128) = -2047004545 - v41 + v34;
  STACK[0x5D8] = v41 + 2608962666;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(v30 + 8 * (int)(v34 ^ 0xF774FB6A)))(v33 - 152);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * *(int *)(v33 - 112)))(v43);
}

void sub_100374C34()
{
}

uint64_t sub_100374C3C()
{
  *v2 ^= STACK[0x430];
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 - 1 == ((((v0 - 1512) | 0x121) + 1226034496) & 0xB6EC33FF) + 1628257814)
                                * (((v0 - 1512) | 0x121) + 1381)) ^ ((v0 - 1512) | 0x121))))();
}

uint64_t sub_100374CB8@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v2 - 0x1F010F7499D3F7A2);
  int v5 = ((v3 + 942) ^ 0x8E98971E) + v4;
  if (v5 < 0) {
    int v5 = -v5;
  }
  *(_DWORD *)(v1 - 0x1F010F7499D3F7A2) = v4;
  BOOL v6 = (v5 ^ (v3 + 1540340083)) - 142782528 + ((2 * v5) & 0xB79F76FE) != 1397558079;
  return (*(uint64_t (**)(void))(a1 + 8 * ((v6 | (16 * v6)) ^ v3)))();
}

uint64_t sub_100374D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * (int)((((a19 - 87424923) < 0x10)
                                     * ((v19 - 1203268053) & 0xF02401A3 ^ 0x196)) ^ (v19 + v21))))();
}

uint64_t sub_100374D98()
{
  STACK[0x4C8] = *(void *)(v2 + 8 * (v1 - 740));
  return sub_10036CF70(STACK[0x3A0]);
}

uint64_t sub_100374DB4@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v3 + v2 + v5) = v4;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v2 + 1 + v5) < 0x40) * a1) ^ v1)))();
}

uint64_t sub_100374DE0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((452
                                * ((((v3 - 220) ^ (*(char *)(v0 + (v2 + 1)) > (char)(v3 + 41))) & 1) == 0)) ^ v3)))();
}

uint64_t sub_100374E54()
{
  *(void *)(v4 - 136) = v3;
  *(_DWORD *)(v4 - 128) = -1374699841 * ((v4 + 1172267476 - 2 * ((v4 - 144) & 0x45DF6264)) ^ 0x282B7A6D);
  *(_DWORD *)(v4 - 144) = (v1 - 995) ^ (1374699841 * ((v4 + 1172267476 - 2 * ((v4 - 144) & 0x45DF6264)) ^ 0x282B7A6D));
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 + 1078)))(v4 - 144);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * ((25
                                              * (*(_DWORD *)(v4 - 140) != ((v2 + ((v1 + 1510508054) & 0xA5F775FF) - 8) ^ ((v1 - 1059) | 0x39)))) ^ v1)))(v5);
}

void sub_100374F10()
{
}

uint64_t sub_100374F2C@<X0>(uint64_t a1@<X1>, int a2@<W2>, int a3@<W6>, int a4@<W8>)
{
  if ((a4 - 1210380900) > 0x12 || ((1 << (a4 - 100)) & 0x40425) == 0) {
    JUMPOUT(0x100357594);
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((40 * ((a1 & 0xFFFFFFFFFFFFFFFLL) != 0)) ^ (a2 + a3 - 311))))();
}

void sub_100374FA4()
{
}

void sub_100374FAC(uint64_t a1)
{
  int v1 = 1225351577 * (((a1 | 0xD0007703) - a1 + (a1 & 0x2FFF88FC)) ^ 0xF39AAF15);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_10037507C()
{
  return sub_1003750E8();
}

uint64_t sub_1003750E8(int a1, void *a2, void *a3)
{
  BOOL v16 = v15 > v9;
  uint64_t v17 = 4 * (v13 + v10);
  int v18 = v3 + v8 + (*(_DWORD *)(*a2 + v17) ^ (v11 + v4 - 262));
  *(_DWORD *)(*a3 + v17) = v18 + v11 - (v14 & (2 * v18));
  int v19 = v13 + 1 + v6;
  LODWORD(v17) = v16 ^ (v19 < v5);
  BOOL v20 = v19 < v7;
  if (!v17) {
    BOOL v16 = v20;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((14 * !v16) ^ a1)))();
}

uint64_t sub_100375178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  LODWORD(STACK[0x4EC]) = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v10 + 8 * (((v8 ^ 0x3CA) * v9) ^ (v8 + 824))))(a1, a2, a3, a4, 13, 720, a7, 48, (__n128)0);
}

uint64_t sub_1003751C8@<X0>(uint64_t a1@<X0>, char a2@<W2>, unsigned int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W8>)
{
  *(unsigned char *)(a1 + (v9 + a5)) = *(unsigned char *)(v10 + (v9 + a5)) ^ *(unsigned char *)(v8
                                                                                                  + ((v9 + a5) & 0xFLL)) ^ *(unsigned char *)(v6 + ((v9 + a5) & 0xFLL)) ^ *(unsigned char *)(((v9 + a5) & 0xFLL) + v7 + 2) ^ (((v9 + a5) & 0xF) * a2) ^ 0x18;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v9 + 1 + a5 < ((a6 + 751) ^ a3)) * a4) ^ a6)))();
}

uint64_t sub_10037522C(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_1022A7DC0 + ((1926 * (*(_DWORD *)(a2 + 4) == 1791330451)) ^ 0x115u)))(4294925278);
}

uint64_t sub_100375270@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 - 704864278)) = *(unsigned char *)(v5 + (a2 - 704864278));
  return (*(uint64_t (**)(void))(v6 + 8 * ((28 * (a2 - 1 == ((v4 + a3 + 2174) ^ (a4 + 1925)))) ^ (v4 + a3 + 2169))))();
}

void sub_1003752BC()
{
}

uint64_t sub_1003752F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v13 = v8 + 1881554958;
  if (v13 <= 0x40) {
    unsigned int v13 = 64;
  }
  BOOL v14 = v12 - v9 - v10 + v13 > 0xE;
  unsigned int v15 = *(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (((4 * v14) | (16 * v14)) ^ 0x267u));
  return v15(-v10, 64, v15, 4180070958, a5, a6, a7, a8);
}

void sub_100375360(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  int v9 = 81 * (v7 ^ 0x618);
  a3 = v5;
  a4 = v6;
  a5 = v7 + 1374699841 * ((2 * (&a3 & 0x66A5C608) - &a3 + 425343479) ^ 0x74AE21FE) - 1091;
  (*(void (**)(uint64_t *))(a1 + 8 * (v7 + 698)))(&a3);
  *int v8 = (v9 ^ 0xE2CEDCBB) - *v8;
  JUMPOUT(0x100363BC8);
}

uint64_t sub_1003753E8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((650
                                * ((((*(unsigned __int8 *)(v2 + 2) - 72) << ((7 * (v3 ^ 0x18)) ^ 8)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_10037543C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  BOOL v25 = a22 - a18 == 1890831304 && a21 == a5;
  return (*(uint64_t (**)(void))(v23 + 8 * ((v25 * ((3 * (v22 ^ 0x326)) ^ 0x57)) ^ v22)))();
}

uint64_t sub_100375488(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  BOOL v11 = v7 - (v4 & 0xFFFFFFF8) == -8;
  uint64_t v12 = v6 - 93390872 + v5 - v7 + ((v8 + 555) ^ (a4 + 845));
  *(void *)(a1 - 7 + v12) = *(void *)(v9 - 7 + v12);
  int v13 = v11;
  return (*(uint64_t (**)(void))(v10 + 8 * ((2305 * v13) ^ v8)))();
}

uint64_t sub_1003754EC()
{
  STACK[0x378] = 0;
  int v1 = STACK[0x43C];
  int v2 = *(_DWORD *)(STACK[0x388] + 56);
  *(_DWORD *)(STACK[0x388] + 56) = (LODWORD(STACK[0x43C]) ^ 0x29A) + v2 - 110;
  return (*(uint64_t (**)(void))(v0 + 8 * ((2288 * ((v2 - 148787607) < 0xFFFFFFFA)) ^ (v1 - 646))))();
}

uint64_t sub_100375540()
{
  int v3 = v1 - (((v1 << ((v2 + 87) & 0xD7 ^ 0x51)) + 175435508) & (((v2 - 800) | 0x388) ^ 0x1C1554A5)) + 591733008;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((14
                                * (((2 * v3) & 0xF7DFF6FE ^ 0x1415522C) + (v3 ^ 0x75E552E9) + 1597802399 != 1529643806)) ^ v2)))();
}

uint64_t sub_1003755F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v9 = (((a5 ^ 0xFFFFFF41) + (a5 ^ 0x57)) & v5) == 0;
  return (*(uint64_t (**)(void, uint64_t, void))(v8 + 8 * (((32 * v9) | (v9 << 10)) ^ a5)))((v6 - v7), a2, a5 ^ 0x65Au);
}

uint64_t sub_100375638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(&a25 + v25 + a4) = 24;
  return (*(uint64_t (**)(void))(v27 + 8 * ((79 * ((unint64_t)(v25 + 1 + a4) > 0x3F)) ^ (a7 + v26 - 146))))();
}

uint64_t sub_100375678(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  unsigned int v11 = v8 - 786349054;
  if (v11 <= 0x40) {
    unsigned int v11 = 64;
  }
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((((v10 ^ 0x56B) - 1454891473) | 0x140100) ^ (a6 + 51)) * (a4 - v6 - v7 + v11 > 0xE)) ^ v10 ^ 0x56B)))();
}

uint64_t sub_100375700()
{
  int v3 = (unsigned int *)STACK[0x2F0];
  (*(void (**)(void, unint64_t *, uint64_t))(v2 + 8 * (v0 + 1996)))(*(unsigned int *)STACK[0x2F0], &STACK[0x5F0], 2048);
  int v4 = *(uint64_t (**)(void))(v2
                           + 8
                           * ((((*(unsigned int (**)(void, unint64_t *, void, uint64_t))(v2 + 8 * (v0 + 2040)))(*v3, &STACK[0x610], (LODWORD(STACK[0x56C]) + v1), 1) == 0)* ((v0 - 288794252) & 0x1136A7CB ^ 0x72F)) ^ v0));
  return v4();
}

uint64_t sub_1003757A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  int v28 = 1224239923 * ((v27 - 169793576 - 2 * ((v27 - 144) & 0xF5E12868)) ^ 0x752D5BF);
  *(_DWORD *)(v27 - 144) = v28 ^ 0x34BAF40D;
  *(_DWORD *)(v27 - 128) = v28 + v25 - 79;
  *(void *)(v27 - 136) = &a23 + v23;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v25 + 1721)))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * (((2 * (v25 + 462) - 1767) * (v26 == 0)) ^ (v25 - 465))))(v29);
}

uint64_t sub_100375850()
{
  STACK[0x3F8] = STACK[0x560];
  LODWORD(STACK[0x54C]) = -612805554;
  return sub_10036D748();
}

uint64_t sub_100375888@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((105 * (v1 - 1791330503 < ((a1 - 804) ^ 0xFFFFFE86 ^ (a1 + 759937597) & 0xD2B441A7))) ^ a1)))();
}

uint64_t sub_1003758E8@<X0>(uint64_t a1@<X8>, uint64_t a2, char a3, unsigned int a4, uint64_t a5)
{
  a4 = v6 + 535753261 * ((((2 * &a3) | 0x850920) - &a3 + 2143124336) ^ 0x8AB68ABF) + 1136;
  a5 = a1;
  uint64_t v7 = (*(uint64_t (**)(char *))(v5 + 8 * (v6 ^ 0xBE8)))(&a3);
  return sub_100375944(v7);
}

void sub_100375944()
{
  *(_DWORD *)(v0 + 68) = v1;
}

void sub_100375984()
{
}

void sub_1003759A8(uint64_t a1)
{
  int v1 = 1759421093 * (((a1 | 0x9EBEB665) - a1 + (a1 & 0x6141499A)) ^ 0x2DC30631);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_100375A74(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  return (*(uint64_t (**)(void))(v19 + 8 * (((((a18 & 0x319CA1EE) + 931) ^ 0x927) * (v18 == v20)) ^ (a4 + a6 + 1226))))();
}

uint64_t sub_100375AB8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v7 = (((v3 - 1509) | 0x271) ^ v4) - v2;
  int8x16_t v8 = vrev64q_s8(*(int8x16_t *)(a2 + v7 - 15));
  int8x16_t v9 = vextq_s8(v8, v8, 8uLL);
  int8x16_t v10 = vrev64q_s8(*(int8x16_t *)(a2 + v7 - 31));
  int8x16_t v11 = vextq_s8(v10, v10, 8uLL);
  uint64_t v12 = v5 + v7;
  v13.i64[0] = 0x3030303030303030;
  v13.i64[1] = 0x3030303030303030;
  v14.i64[0] = 0x1818181818181818;
  v14.i64[1] = 0x1818181818181818;
  int8x16_t v15 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v13)), v14));
  *(int8x16_t *)(v12 - 15) = vextq_s8(v15, v15, 8uLL);
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), v13)), v14));
  *(int8x16_t *)(v12 - 31) = vextq_s8(v16, v16, 8uLL);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v2 == 288) * a1) ^ v3)))();
}

uint64_t sub_100375B4C()
{
  uint64_t v2 = (*(uint64_t (**)(void, unint64_t, void))(v1 + 8 * (v0 + 2143)))(*(unsigned int *)STACK[0x2F0], STACK[0x5A0], LODWORD(STACK[0x58C]));
  return sub_100375B88(v2);
}

uint64_t sub_100375B88()
{
  unint64_t v4 = 1755732067 * ((2 * (v1 & 0x4FB84E09DB840A10) - v1 + 0x3047B1F6247BF5EELL) ^ 0xEDEC16C9FABD4835);
  *(void *)(v3 - 168) = LODWORD(STACK[0x48C]) + v4;
  *(void *)(v3 - 184) = 3689067232u - v4;
  *(_DWORD *)(v3 - 196) = v4;
  *(_DWORD *)(v3 - 192) = ((v0 + 1739641249) ^ 0x46) + v4;
  *(_DWORD *)(v3 - 160) = (v0 - 1689052259) ^ v4;
  *(_DWORD *)(v3 - 188) = (v0 + 1739641249) ^ v4;
  *(_DWORD *)(v3 - 176) = v4 + v0 + 1739641249 + 41;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1502)))(v3 - 200);
  STACK[0x378] = 0;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 200)))(v5);
}

uint64_t sub_100375C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x4A8] = v64;
  STACK[0x4C0] = STACK[0x430];
  STACK[0x628] = *(void *)(v66 + 8 * v65);
  return sub_100375CF8(a1, 404244978, a64);
}

uint64_t sub_100375CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  STACK[0x530] = ((((v3 - 220233446) & 0xD207BFDu) + 395) ^ 0x4F0) + v5;
  STACK[0x450] = v4;
  if (v4) {
    BOOL v7 = a3 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  int v8 = !v7;
  return (*(uint64_t (**)(void))(v6 + 8 * ((60 * v8) ^ v3)))();
}

uint64_t sub_100375D4C(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_1022A7DC0 + ((59 * (*(_DWORD *)(a2 + 4) == 1791330439)) ^ 0x64Eu)))();
}

void sub_100375D88(int a1@<W8>)
{
  *(void *)(v4 - 0x64B4A486D173DE30) = *v2;
  *(_DWORD *)(v5 - 0x5F8E90DD494572B7) = a1;
  *uint64_t v2 = 0;
  *(void *)(v8 - 0x38C18B7A1BA31324) = 0x2E26D8C52E26D8C5;
  *int v3 = 1225318619;
  *(_DWORD *)(v8 - 0x38C18B7A1BA31318) = (970 * (v1 ^ 0x1A3)) ^ 0x8A0169D5 ^ ((*(_DWORD *)(v8 - 0x38C18B7A1BA31318) & 0xFFFFFFFE ^ 0x766EE50A | 0xFC6F8B4A)
                                                                              - (*(_DWORD *)(v8 - 0x38C18B7A1BA31318) & 0xFFFFFFFE ^ 0x766EE50A | 0x39074B5)
                                                                              + 59798709);
  *(_DWORD *)(v7 + 28) = *v6;
}

uint64_t sub_100375EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  *(_DWORD *)(v31 - 144) = (v29 - 532) ^ (235795823
                                        * (((((v31 - 144) | 0x98136FF2) ^ 0xFFFFFFFE) - (~(v31 - 144) | 0x67EC900D)) ^ 0xF341D954));
  *(void *)(v31 - 136) = v30;
  *(void *)(v31 - 128) = v28;
  (*(void (**)(uint64_t))(v27 + 8 * (v29 + 1367)))(v31 - 144);
  *(_DWORD *)(v31 - 112) = v29
                         - 304
                         + 1224239923
                         * ((((v31 - 144) ^ 0xF9BB0CB1 | 0x15437DFD) - (((v31 - 144) ^ 0xF9BB0CB1) & 0x15437DFD)) ^ 0x1E4B8C9B);
  *(void *)(v31 - 104) = a27;
  *(void *)(v31 - 128) = v30;
  *(void *)(v31 - 120) = v28;
  *(void *)(v31 - 144) = a22;
  *(void *)(v31 - 136) = v30;
  (*(void (**)(uint64_t))(v27 + 8 * (v29 ^ 0xB4A)))(v31 - 144);
  *(_DWORD *)(v31 - 112) = v29
                         - 304
                         + 1224239923 * ((((v31 - 144) | 0x639614A3) + (~(v31 - 144) | 0x9C69EB5C)) ^ 0x9125E975);
  *(void *)(v31 - 104) = v30;
  *(void *)(v31 - 144) = a22;
  *(void *)(v31 - 136) = a16;
  *(void *)(v31 - 128) = v30;
  *(void *)(v31 - 120) = v28;
  (*(void (**)(uint64_t))(v27 + 8 * (v29 ^ 0xB4A)))(v31 - 144);
  *(void *)(v31 - 136) = v30;
  *(void *)(v31 - 128) = a21;
  *(_DWORD *)(v31 - 144) = (v29 + 426522105) ^ (235795823
                                              * (((v31 - 144) & 0x4B6C9771 | ~((v31 - 144) | 0x4B6C9771)) ^ 0x203E21D7));
  (*(void (**)(uint64_t))(v27 + 8 * (v29 ^ 0xB6E)))(v31 - 144);
  *(_DWORD *)(v31 - 144) = (v29 - 532) ^ (235795823
                                        * ((((v31 - 144) ^ 0xE1EEABAC) & 0xD6C0ADF9 | ~((v31 - 144) ^ 0xE1EEABAC | 0xD6C0ADF9)) ^ 0x5C7CB0F3));
  *(void *)(v31 - 136) = v30;
  *(void *)(v31 - 128) = a23;
  (*(void (**)(uint64_t))(v27 + 8 * (v29 ^ 0xB77)))(v31 - 144);
  *(_DWORD *)(v31 - 128) = v29
                         + 1374699841 * ((2 * ((v31 - 144) & 0xB04ADC0) - (v31 - 144) + 1962627641) ^ 0x190F4A30)
                         - 456;
  *(void *)(v31 - 144) = v30;
  *(void *)(v31 - 136) = a23;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v29 + 1333)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (int)(((((v29 - 626435617) & 0x2556A6DF ^ 0xFFFFFF86) + v29 + 191)
                                                   * (a20 == 0)) ^ (v29 + 1151))))(v32);
}

uint64_t sub_10037616C(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((98
                                * (~a18 + v19 - (unint64_t)(v18 + a4) < (unint64_t)((a1 + 1879308379) | 0x1C02103u)
                                                                                           - 1908678919)) ^ a1)))();
}

void sub_1003761C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1224239923 * ((a1 & 0x9A8552A9 | ~(a1 | 0x9A8552A9)) ^ 0x97C95081);
  __asm { BRAA            X8, X17 }
}

void sub_100376290()
{
}

uint64_t sub_100376378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v8 = v6 < (((a6 | 0x302) - 906) | 0x580u) - 1400;
  return (*(uint64_t (**)(void))(v7 + 8 * (((32 * v8) | (v8 << 6)) ^ (a6 | 0x302))))();
}

uint64_t sub_1003763B8(int a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v14 = v9 + a1 + v11 + a7;
  uint64_t v15 = v7 + v14;
  long long v16 = *(_OWORD *)(v15 - 31);
  uint64_t v17 = v12 + v14;
  *(_OWORD *)(v17 - 15) = *(_OWORD *)(v15 - 15);
  *(_OWORD *)(v17 - 31) = v16;
  return (*(uint64_t (**)(void))(v13 + 8 * ((((v10 & 0xFFFFFFE0) == 32) * ((a4 + 857) ^ 0x4B8)) ^ (v8 + a3 + 2297))))();
}

uint64_t *sub_100376418@<X0>(uint64_t *result@<X0>, int a2@<W2>, _DWORD *a3@<X8>)
{
  uint64_t v8 = result[6];
  uint64_t v10 = *result;
  uint64_t v9 = result[1];
  *a3 = v5;
  *(_DWORD *)(v10 - 0x617AE0CD3EA9131FLL) = v4;
  *(_DWORD *)(v8 - 0x1171F84DB0CF5C20) = a2;
  *(void *)(v9 - 0x3004C2EB5640F59DLL) = v3 + v7 - 1890833087 + ((v6 - 174125447) & 0xA60F6F7u);
  *((_DWORD *)result + 8) = 605940026;
  return result;
}

uint64_t sub_1003764A0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((19 * (v0 >= v1)) ^ (LODWORD(STACK[0x43C]) + 846))))();
}

uint64_t sub_1003764D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((228
                                * (((*(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 + 612805554))
                                   - ((*(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 + 612805554)) << (((23 * (v3 ^ 0x66) - 4) | 1) + 10)) & 0xF4)
                                   + 1210380922) & 0x1F) == 5)) ^ v3)))();
}

void sub_100376544()
{
}

uint64_t sub_10037654C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 8) + (v3 + a3)) = *(_DWORD *)(*v7 + 4 * (v8 - 15767775)) ^ v6;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1540 * (v3 + ((316 * (a2 ^ 0x51F)) ^ 0x765) - 1310 == v5)) ^ (316 * (a2 ^ 0x51F)))))();
}

uint64_t sub_100376584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  unsigned int v30 = v26 + v25 - 1978072254;
  if (v30 <= 0x40) {
    int v31 = 64;
  }
  else {
    int v31 = v26 + v25 - 1978072254;
  }
  BOOL v32 = __CFADD__(v30 - 1, v28 + 1978070602 + a1 + v27 + v31);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((v32 * (((v27 - 1404952956) & 0x53BDDFBF) - 953)) ^ v27)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_100376608()
{
  STACK[0x378] = v0;
  STACK[0x530] = v2;
  LODWORD(STACK[0x48C]) = v1;
  return sub_100376634();
}

uint64_t sub_100376634()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 == ((v0 + 149) ^ (v3 - 252))) * (v0 + 287)) ^ v0)))();
}

uint64_t sub_100376664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59)
{
  int v62 = *(unsigned __int8 *)(v60 - 0x2E910FB81C0D977FLL) ^ 0xCB;
  if (v62 == 1)
  {
    unsigned int v70 = *(_DWORD *)(v60 - 0x2E910FB81C0D979BLL);
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A7) = ((8 * v70) ^ 0xE0) - 16 * (v70 & 3) + 24;
    unsigned int v65 = a59 & 0xF263B37F;
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A6) = (a59 & 0x7F ^ (v70 >> 5) ^ 0x2A)
                                           - ((2 * (a59 & 0x7F ^ (v70 >> 5) ^ 0x2A)) & 0x30)
                                           + 24;
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A5) = ((v70 >> 13) ^ 0x8D) - ((2 * ((v70 >> 13) ^ 0x8D)) & 0x30) + 24;
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A4) = ((v70 >> 21) ^ 0xB4)
                                           - 2 * (((v70 >> 21) ^ 0xB4) & 0x99 ^ ((v70 & 0x200000) != 0))
                                           + 24;
    unsigned int v71 = *(_DWORD *)(v60 - 0x2E910FB81C0D979FLL);
    HIDWORD(v72) = v71 ^ 0x11;
    LODWORD(v72) = v70;
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A3) = (v72 >> 29) - ((2 * (v72 >> 29)) & 0x30) + 24;
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A2) = ((v71 >> 5) ^ 0xC9) - ((2 * ((v71 >> 5) ^ 0xC9)) & 0x30) + 24;
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A1) = (v71 >> 13) - ((v71 >> 12) & 0x30) + 24;
    v71 >>= 21;
    char v68 = v71 ^ 0xE3;
    char v69 = 2 * v71;
    goto LABEL_5;
  }
  int v63 = v59;
  if (v62 == 2)
  {
    unsigned int v64 = *(_DWORD *)(v60 - 0x2E910FB81C0D979FLL);
    unsigned int v65 = v59 + 114;
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A7) = v59 + 114 + ((v64 >> 21) ^ 0xE3) - ((v64 >> 20) & 0x30) - 79;
    unsigned int v66 = *(_DWORD *)(v60 - 0x2E910FB81C0D979BLL);
    HIDWORD(v67) = v64 ^ 0x11;
    LODWORD(v67) = v66;
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A6) = (v64 >> 13) - ((v64 >> 12) & 0x30) + 24;
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A5) = ((v64 >> 5) ^ 0xC9)
                                           - 2 * (((v64 >> 5) ^ 0xC9) & 0x1E ^ (v64 >> 5) & 6)
                                           + 24;
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A4) = (v67 >> 29) - ((2 * (v67 >> 29)) & 0x30) + 24;
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A3) = ((v66 >> 21) ^ 0xB4) - ((2 * ((v66 >> 21) ^ 0xB4)) & 0x30) + 24;
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A2) = ((v66 >> 13) ^ 0x8D) + (~(2 * ((v66 >> 13) ^ 0x8D)) | 0xCF) + 25;
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A1) = ((v66 >> 5) ^ 0x4D) + (~(2 * ((v66 >> 5) ^ 0x4D)) | 0xCF) + 25;
    char v68 = (8 * v66) ^ 0xE0;
    char v69 = 16 * v66;
LABEL_5:
    int v63 = (v65 - 147) | 0x21;
    *(unsigned char *)(v60 - 0x2E910FB81C0D97A0) = v68 - (v69 & 0x30) + (v63 ^ 0xED);
  }
  STACK[0x540] = *(void *)(v61 + 8 * (v63 - 745));
  return sub_10038EBF8();
}

uint64_t sub_1003769F8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((STACK[0x578] != 0) * (11 * (v0 ^ 0x252) + ((v0 + 409) ^ 0xFFFFFDA7))) ^ (v0 + 1070))))();
}

uint64_t sub_100376A44()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((55 * (v0 > ((v1 + 143330377) ^ 0x634) + 1072771191 + ((v1 + 143330377) | 0x89u) + 623)) ^ (v1 + 143330514))))();
}

uint64_t sub_100376AA0()
{
  void *v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_100376AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W5>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * (int)(((((v5 == v6) ^ (a4 - 33)) & 1)
                                                                              * ((a4 - 302023005) & 0xBB5CA344 ^ (a3 + 48))) ^ a4)))(a1, a2, v4, 4214048025);
}

void sub_100376B1C()
{
  int v0 = *(&off_1022AC750
       + ((107 * ((qword_102419E28 - dword_102419E30) ^ 0x8A)) ^ byte_101D1BC20[byte_101D17AE0[(107 * ((qword_102419E28 - dword_102419E30) ^ 0x8A))] ^ 0x4D])
       - 23);
  int v1 = *(&off_1022AC750
       + (byte_101D1C028[(byte_101D17EE0[(107
                                                                                        * ((qword_102419E28 - *v0) ^ 0x8A))] ^ 0x12)
                                                      - 8] ^ (107 * ((qword_102419E28 - *v0) ^ 0x8A)))
       + 75);
  unint64_t v2 = (unint64_t)&v4[*v1 ^ *v0];
  *int v0 = 2119093099 * v2 + 0x6421A82FEAAAFBAELL;
  void *v1 = 2119093099 * (v2 ^ 0x22F8A8F5CDCFC8ALL);
  v5[1] = 108757529 * ((v5 & 0xA7DA3C6 | ~(v5 | 0xA7DA3C6)) ^ 0x151E3E12) - 504207030;
  LOBYTE(v1) = 107 * (*(_DWORD *)v0 ^ 0x8A ^ *(_DWORD *)v1);
  uint64_t v3 = (char *)*(&off_1022AC750
               + ((107 * ((qword_102419E28 + dword_102419E30) ^ 0x8A)) ^ byte_101D1BC20[byte_101D17AE0[(107 * ((qword_102419E28 + dword_102419E30) ^ 0x8A))] ^ 0xB])
               + 103)
     - 4;
  (*(void (**)(_DWORD *))&v3[8
                                      * (byte_101D1BD20[byte_101D17CEC[v1 - 12] ^ 0x7D] ^ v1)
                                      + 16672])(v5);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100376D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,unsigned int a22,uint64_t a23)
{
  unsigned int v30 = 1178560073 * ((&a19 & 0xF177A641 | ~(&a19 | 0xF177A641)) ^ 0xB41C21DC);
  a21 = a16;
  a22 = v30 ^ 0x43D;
  a20 = v27 - ((2 * v27) & 0x279D5C7E) - 1815171521 + v30;
  (*(void (**)(int *))(v29 + 17496))(&a19);
  unsigned int v31 = 1178560073 * ((&a19 - 30129850 - 2 * (&a19 & 0xFE344146)) ^ 0x44A03924);
  a22 = v31 ^ 0x43D;
  a21 = a16;
  a20 = v26 - 1815172034 - ((2 * v26) & 0x279D5C7E) + v31 + 513;
  (*(void (**)(int *))(v29 + 17496))(&a19);
  unsigned int v32 = 1178560073
      * (((&a19 ^ 0xC8EAEDAE) & 0x7FE834FE | ~(&a19 ^ 0xC8EAEDAE | 0x7FE834FE)) ^ 0xF2695ECD);
  a20 = v32 + 173;
  a21 = a16;
  a22 = v32 ^ ((v25 ^ 0xFE7BBE7F) + 1809776640 + ((2 * v25) & 0xFCF77CFE));
  a23 = a12;
  (*(void (**)(int *))(v29 + 17832))(&a19);
  unsigned int v33 = 1178560073 * (&a19 ^ 0xBA947862);
  a20 = v33 + 173;
  a22 = v33 ^ ((a14 ^ 0xEADEBF7F) + 2138832640 + ((2 * a14) & 0xD5BD7EFE));
  a21 = a16;
  a23 = v28;
  (*(void (**)(int *))(v29 + 17832))(&a19);
  unsigned int v34 = 1178560073
      * ((-1714998320 - (&a19 | 0x99C733D0) + (&a19 | 0x6638CC2F)) ^ 0xDCACB44D);
  a21 = a16;
  a22 = v34 ^ ((v24 ^ 0xEFFFBE7F) + 2052784128 + ((2 * v24) & 0xDFFF7CFE));
  a23 = v23;
  a20 = v34 + 173;
  uint64_t v35 = (*(uint64_t (**)(int *))(v29 + 17832))(&a19);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * ((1591 * (a19 == 605940026)) ^ 0x365u)))(v35);
}

uint64_t sub_100377030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v16 = (((v14 - 104) | 0xD0) ^ 0x5452A7DD) + v13;
  BOOL v18 = v16 > 1115388809 || v16 < a13 - 1032094838;
  return (*(uint64_t (**)(void))(v15 + 8 * ((26 * v18) ^ v14)))();
}

uint64_t sub_1003770AC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v1 + 143331620) ^ 0x4D9) * (v0 >= 0x9B819C6A)) ^ (v1 + 143331602))))();
}

uint64_t sub_1003770FC@<X0>(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v11 = v7 + 1;
  int v12 = (v7 - 30) | 0x24;
  unsigned int v13 = 3804331
      * (((&a3 | 0x6A071CCA) - &a3 + (&a3 & 0x95F8E330)) ^ 0x14D2393C);
  a7 = v13 + 108673995;
  a5 = a1;
  a6 = v8;
  a3 = v13 + v10 - 1487525539;
  a4 = v13 + v11 + 271;
  uint64_t v14 = (*(uint64_t (**)(unsigned int *))(v9 + 8 * (v11 + 2117)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((392 * (*(_DWORD *)(v8 - 0x38C18B7A1BA31314) == v12 + 605939853)) ^ v11)))(v14);
}

void sub_1003771CC()
{
}

uint64_t sub_1003771D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  BOOL v42 = a25 > 0x1C5A3D93;
  unint64_t v43 = (*(_DWORD *)(v41 + v34) ^ v30) + HIDWORD(v40);
  *(_DWORD *)(v41 + 4 * a1) = v43 + v30 - ((((v38 ^ a7) * a8) ^ v33 ^ (v32 + 491)) & (2 * v43));
  *(_DWORD *)(a30 + v34) = HIDWORD(v43) | v30;
  if (v42 == v39 - 364775683 < v36) {
    BOOL v42 = v39 - 364775683 < v31;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((v38 - 8) ^ (v42 * v37))))();
}

void sub_10037726C()
{
}

void sub_100377294()
{
  *(_DWORD *)(v0 + 8) = -605900050;
}

void sub_1003772A0()
{
}

uint64_t sub_1003772A8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6, int a7, char a8, uint64_t a9, uint64_t a10, unsigned int a11, char *a12, unsigned char *a13, uint64_t a14, unsigned int a15)
{
  a11 = (a1 - 1290) ^ ((((&a11 | 0x276B7079) - &a11 + (&a11 & 0xD8948F80)) ^ 0x4A9F6870)
                     * v18);
  a12 = &a8 + v15;
  a13 = a6;
  (*(void (**)(unsigned int *))(v19 + 8 * (a1 + 611)))(&a11);
  a12 = a6;
  a13 = v20;
  a14 = v21;
  a15 = (v16 - 801) ^ (1225351577
                     * (((&a11 | 0x5CB85DA2) - &a11 + (&a11 & 0xA347A258)) ^ 0x7F2285B4));
  (*(void (**)(unsigned int *))(v19 + 8 * (v16 + 954)))(&a11);
  a11 = (v16 - 1009) ^ ((((&a11 | 0xDC81876C) - &a11 + (&a11 & 0x237E7890)) ^ 0xB1759F65)
                      * v18);
  a12 = v17;
  a13 = a6;
  (*(void (**)(unsigned int *))(v19 + 8 * (v16 ^ 0xD84)))(&a11);
  a12 = a6;
  a11 = (v16 + 830) ^ (1755732067
                     * ((2 * (&a11 & 0x24AA4D50) - &a11 + 1532342955) ^ 0x85930F70));
  uint64_t v22 = (*(uint64_t (**)(unsigned int *))(v19 + 8 * (v16 ^ 0xD85)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a13 == 605940026) * (v16 - 1307)) ^ v16)))(v22);
}

uint64_t sub_100377468@<X0>(int a1@<W2>, int a2@<W4>, uint64_t a3@<X8>)
{
  unsigned int v8 = a2 + v6 + v5 + 1725;
  long long v9 = *(_OWORD *)(a3 + v8 - 31);
  uint64_t v10 = v3 + v8;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(a3 + v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((((((a1 - 1414) | 0x540) ^ 0xFFFFFAA0) & v4) != 32)
                                     * ((((a1 - 1414) | 0x540) + 254640703) & 0xF0D27BDD ^ 0x39B)) ^ ((a1 - 1414) | 0x540))))();
}

uint64_t sub_1003774EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  *(unsigned char *)(*v19 + (v16 + a8)) = -104;
  BOOL v20 = v16 - 572189155 < (a16 - 818417450);
  if ((a16 - 818417450) < 0x3FB0A8C5 != (v16 - 572189155) < 0x3FB0A8C5) {
    BOOL v20 = (a16 - 818417450) < 0x3FB0A8C5;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * (((((v17 - 701) | 0x120) ^ 0x1D3) * v20) ^ v17)))();
}

uint64_t sub_10037756C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v0 == v1) ^ (v2 - 1)) & 1) * (((v2 - 668) | 0xAD) + 233)) ^ v2)))();
}

uint64_t sub_1003775A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8
                                   * (((v6 == v8 + (a6 ^ (a6 + 371)) - 373) * (a4 + a6 + 3078)) ^ (a4 + a6 + 1131))))();
}

uint64_t sub_1003775E0(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v21 = (a1 + v18 - 1)
      + v20
      - 252
      + (((a2 + 1577) + (unint64_t)((a2 + 114) | 0xC8u) - 2272) ^ a18) > 0xF;
  return (*(uint64_t (**)(void))(v19 + 8 * (((4 * v21) | (v21 << 6)) ^ a2)))();
}

uint64_t sub_100377634()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((v1 + 1140 + ((v1 - 152) | 0x325) - 2014) * ((v0 & 0x1F) == 0x13)) ^ (v1 + 527))))();
}

uint64_t sub_10037767C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,_DWORD *a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  uint64_t v38 = 4 * (v37 - 861883770);
  unsigned int v39 = -1636250663 * ((*(_DWORD *)(*a29 + (*a31 & 0x65C42354)) ^ (a34 + v38)) & (a1 + 2147483005));
  int v40 = v39 ^ HIWORD(v39);
  *(_DWORD *)(v36 + v38) ^= *(_DWORD *)(a34 + v38) ^ *((_DWORD *)*(&off_1022AC750 + a1 - 522)
                                                     + ((-1636250663 * v40) >> 24)) ^ *((_DWORD *)*(&off_1022AC750 + (a1 ^ 0x286)) + ((-1636250663 * v40) >> 24)) ^ *((_DWORD *)*(&off_1022AC750 + (a1 ^ 0x201)) + ((-1636250663 * v40) >> 24) - 3) ^ (-874971136 * v40) ^ (-1636250663 * v40) ^ (-1109235783 * ((-1636250663 * v40) >> 24));
  return (*(uint64_t (**)(void))(v34
                              + 8
                              * (int)((((a1 - 134418091) & 0xFF77FFEF ^ (a1 - 9112235) & 0xF7FFFBEF ^ 0x1A)
                                     * (v35 == 99788385)) ^ (a1 + 871))))();
}

uint64_t sub_1003777E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a13 = &STACK[0x216229CD9A8FA129];
  a15 = 1667 - 460628867 * (((&a13 | 0xE74F0FCA) - (&a13 & 0xE74F0FCA)) ^ 0xABD98DB7);
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 18272))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * (int)(((a14 == v15) * ((v17 + 1343) ^ 0xC35E9A27)) | 0x2B4)))(v18);
}

void sub_100377880()
{
}

uint64_t sub_100377894(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  *(void *)(a1 - 7 + (v8 + v7 + a2 - a3)) = *(void *)(v5 - 7 + (v8 + v7 + a2 - a3));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a3 - (v6 & 0xFFFFFFF8) == -8) * ((4 * a5) ^ 0x19F)) ^ a5)))();
}

void sub_1003778F4()
{
}

uint64_t sub_100377900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10037793C(a1, 3236561782, 1618280891, 177091638, STACK[0x3F8], a6, a7, STACK[0x430]);
}

uint64_t sub_10037793C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((975 * (v1 + 1 >= v0)) ^ v2)))();
}

void sub_1003779AC()
{
  int v7 = ((((v6 - 144) ^ 0xF4D518DC | 0xA372392C) - ((v6 - 144) ^ 0xF4D518DC) + (((v6 - 144) ^ 0xF4D518DC) & 0x5C8DC6D0)) ^ 0xED335992)
     * v4;
  *(void *)(v6 - 136) = v0;
  *(void *)(v6 - 128) = v2;
  *(_DWORD *)(v6 - 116) = v3 + v7 + (((v1 - 857) | 0x640) ^ 0xE1C4D673);
  *(_DWORD *)(v6 - 144) = v7 + v1 + 790;
  (*(void (**)(uint64_t))(v5 + 8 * (v1 ^ 0xB06)))(v6 - 144);
  JUMPOUT(0x10034E8B4);
}

uint64_t sub_100377A44()
{
  int v4 = v1 - 397;
  unsigned int v5 = (v1 + 733221012) & 0xD44BEB6F;
  if (v2 >= 0) {
    unsigned int v6 = v2;
  }
  else {
    unsigned int v6 = -v2;
  }
  if (v0 >= 0) {
    unsigned int v7 = v0;
  }
  else {
    unsigned int v7 = -v0;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v5 + 391) * (v6 > v7)) ^ v4)))();
}

uint64_t sub_100377A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, unsigned int a14, unint64_t *a15, uint64_t a16)
{
  a14 = (v16 - 1183) ^ (1374699841
                      * (((&a14 | 0xB23EA5EF) + (~&a14 | 0x4DC15A10)) ^ 0xDFCABDE7));
  a15 = &STACK[0x2E91F1FE0AA5842B];
  a16 = a10;
  uint64_t v20 = (*(uint64_t (**)(unsigned int *))(v18 + 8 * (v16 + 718)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (int)(((((v16 + 9) ^ (a12 == v17)) & 1)
                                                   * ((v16 - v19 - 1524) ^ 0xC35E9FE3)) ^ v16)))(v20);
}

uint64_t sub_100377B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  return sub_1003771D4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_100377B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + a2 + v27 + (v25 ^ 0x39A) - 848) = 0x1818181818181818;
  return (*(uint64_t (**)(void))(v28 + 8 * ((947 * ((v26 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ v25)))();
}

uint64_t sub_100377BB0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *unsigned int v6 = v6[623];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * ((109
                                                                * (v4 - 1 == ((v2
                                                                             + v3
                                                                             + ((a2 + 391) | 0x404)
                                                                             - 1572
                                                                             - 128) | 0x60)
                                                                           + v7)) ^ ((a2 + 391) | 0x404))))(a1, 2511644978, 1255822489);
}

uint64_t sub_100377C20(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (int)(((*(_DWORD *)(v10 + v9 * (uint64_t)a8 + 36) != a2)
                                     * (((v8 + 1721749168) & 0x996032F7) - 717)) ^ v8)))();
}

uint64_t sub_100377C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((2863 * (v7 + 1 == v9 + 16)) ^ a7)))();
}

void sub_100377D3C()
{
}

void sub_100377D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned __int8 a24,int a25,int a26,unsigned __int8 a27,__int16 a28,unsigned __int8 a29,int a30,int a31,int a32,char a33,int a34,int a35,int a36,char a37,__int16 a38,unsigned __int8 a39)
{
  LODWORD(STACK[0x398]) = (a24 | ((a32 ^ 0xC) << 24) | ((a29 ^ 0xEF) << 8) | (((((a37 - 63) | 0x50) - 97) ^ a33) << 16)) ^ 0x9DD37636;
  LODWORD(STACK[0x2A8]) = a31 ^ 0x12058C48;
  LODWORD(STACK[0x3D0]) = ((a34 << 8) | (a26 << 24) | ((a35 ^ 0x38) << 16) | a30) ^ 0x91B4E54E;
  LODWORD(STACK[0x3E0]) = ((((a36 ^ 0xF1) << 16) + ((a25 ^ 0x1A) << 24)) | a27 | ((a39 ^ 0xE6) << 8)) ^ 0x524FCC87;
  JUMPOUT(0x100364C20);
}

uint64_t sub_100377E38@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v5 = ((a2 + 625) ^ 0x3F558079) + *(_DWORD *)(v3 + v2 * (uint64_t)a1 + 36);
  BOOL v7 = v5 > -680670082 && v5 < SLODWORD(STACK[0x3A8]);
  return (*(uint64_t (**)(void))(v4 + 8 * ((v7 * ((9 * (a2 ^ 0xA1)) ^ 0x58F)) ^ a2)))();
}

void sub_100377EA8()
{
}

uint64_t sub_100377EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * ((3093 * (v2 + 1 == v5 + 4)) ^ v4)))(a1, a2);
}

uint64_t sub_100377F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  *(_DWORD *)(v31 - 128) = v26
                         - 108757529 * ((((v31 - 128) | 0x1CC9DBBB) - ((v31 - 128) & 0x1CC9DBBB)) ^ 0xFC55B990)
                         + 141;
  *(void *)(v31 - 120) = a26;
  *(void *)(v31 - 112) = v30;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v26 ^ 0xD9F)))(v31 - 128);
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * (((((v26 - 831) | 0x400) ^ 0x68A) * (v29 == v27)) ^ v26)))(v32);
}

uint64_t sub_100378024(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((a1 - 636) * ((unint64_t)(v2 - v1) < 0x20)) ^ a1)))();
}

void sub_100378050(uint64_t a1, int a2)
{
  *uint64_t v2 = a2;
  JUMPOUT(0x100354E8CLL);
}

void sub_100378058()
{
}

uint64_t sub_100378060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((97 * (((((a5 ^ 0x1A2) - 748) ^ (v5 < 0x20)) & 1) == 0)) ^ a5)))();
}

uint64_t sub_10037809C@<X0>(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  unsigned int v10 = v8 + v7 + v9;
  uint64_t v11 = v4 + v10;
  long long v12 = *(_OWORD *)(v11 - 31);
  uint64_t v13 = a3 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v6 & 0xFFFFFFE0) == 32) * (a2 - 756 - a1 - 1652)) ^ (a2 - 756 + v5))))();
}

void sub_1003780F4(unint64_t a1)
{
  STACK[0x620] = a1;
  LODWORD(STACK[0x4D0]) = v1;
  JUMPOUT(0x100378148);
}

uint64_t sub_100378190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, uint64_t a18, int a19, int a20,int a21,int a22)
{
  int v25 = 460628867 * ((&a17 + 1990631928 - 2 * ((unint64_t)&a17 & 0x76A6A1F8)) ^ 0x3A302385);
  a21 = a12 - v25 - 2 * (a12 & 1) + 366164237;
  a17 = &STACK[0x44D5F6D91B577B1C];
  a18 = a16;
  a19 = v25 - 1777217549;
  a20 = v25 + v23 - 2024873905;
  uint64_t v26 = (*(uint64_t (**)(unint64_t **))(v24 + 8 * (v23 + 1404)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8 * ((118 * (((v23 + 63) ^ (a22 == v22)) & 1)) ^ v23)))(v26);
}

uint64_t sub_10037826C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * ((54
                                                                                           * (((v6 ^ (v4 < (v5 ^ (v5 - 642)) + 670710158)) & 1) == 0)) ^ (v5 + 143331836))))(a1, a2, 4151636935, a4, 2511644978, 1255822489);
}

uint64_t sub_1003782E0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((992 * ((v1 ^ 0x2F4FBE2A ^ (195 * (v0 ^ 0x134))) != 0)) ^ v0)))();
}

uint64_t sub_100378334(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  return sub_10035E0F8(a1, a4, a6, (unsigned __int8 **)va);
}

uint64_t sub_10037836C()
{
  (*(void (**)(void))(v1 + 8 * (v0 ^ 0xA1D)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((31 * (STACK[0x518] == 0)) ^ (v0 + 1328))))();
}

void sub_1003783A8()
{
}

uint64_t sub_1003783B0@<X0>(int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  BOOL v27 = v22 == v23 || a22 - v25 != 1890831304;
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * (int)((v27
                                     * (((a2 - 33575548) & 0x73C47117 ^ (a1 + 144)) + ((a2 + 408795860) & 0xE7A242FD))) ^ a2)))();
}

uint64_t sub_100378424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  BOOL v17 = v14 - 1638903018 < (a14 - 1815157598);
  if (a14 - 1815157598 < ((v15 - 131) ^ 0xBDCE1CEu) != (v14 - 1638903018) < 0xBDCE1E0) {
    BOOL v17 = a14 - 1815157598 < ((v15 - 131) ^ 0xBDCE1CEu);
  }
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((92 * !v17) ^ v15)))(4180070958);
}

uint64_t sub_1003784A4(uint64_t a1, int a2)
{
  BOOL v8 = v2 == v6 && v4 != a2;
  return (*(uint64_t (**)(void))(v5 + 8 * (((((v3 - 802990152) & 0x2FDCA76D) + 111 * (v3 ^ 0x224) - 644) * v8) ^ v3)))();
}

uint64_t sub_100378500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  a17 = 1667 - 460628867 * ((((2 * &a15) | 0xF5C7D9FC) - &a15 + 85725954) ^ 0xB6756E83);
  a15 = &STACK[0x216229CD9A8FA131];
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v18 + 18272))(&a15);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((137 * (a16 == 605940026)) ^ v17)))(v19);
}

uint64_t sub_1003785A0()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((*(_DWORD *)(v1 - 144) + 1493) ^ 0x42C)
                                * (*(_DWORD *)(v1 - 128) == *(_DWORD *)(v1 - 136))) ^ *(_DWORD *)(v1 - 144))))();
}

void sub_1003785D8()
{
}

void sub_1003785E4()
{
}

void sub_1003785F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((a1 + 2125213654 - 2 * (a1 & 0x7EAC2FD6)) ^ 0x135837DF);
  int v3 = *(unint64_t **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(unint64_t **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(v2 - 0x18E42E334670A158);
  unsigned int v12 = v1 + 1224239923 * (((&v8 | 0xAEE383C9) - (&v8 & 0xAEE383C9)) ^ 0x5C507E1E) - 598;
  uint64_t v8 = v2;
  int v9 = v4;
  unsigned int v10 = &STACK[0x1F010F7499D3F7C6];
  uint64_t v11 = v5;
  int v6 = (char *)*(&off_1022AC750 + v1 - 1054) - 4;
  (*(void (**)(uint64_t *))&v6[8 * (v1 ^ 0xC6C)])(&v8);
  uint64_t v7 = *(void *)(v2 - 0x18E42E334670A160);
  LODWORD(v10) = v1
               + 1374699841 * ((&v8 - 888205096 - 2 * (&v8 & 0xCB0F10D8)) ^ 0xA6FB08D1)
               - 750;
  uint64_t v8 = v7;
  int v9 = &STACK[0x1F010F7499D3F7D6];
  (*(void (**)(uint64_t *))&v6[8 * v1 + 8312])(&v8);
  int v9 = v3;
  LODWORD(v8) = v1
              + 235795823
              * (((&v8 | 0x6422E207) - &v8 + (&v8 & 0x9BDD1DF8)) ^ 0xF08FAB5E)
              - 494;
  (*(void (**)(uint64_t *))&v6[8 * (v1 ^ 0xC64)])(&v8);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10037884C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v3 + 43 * (v0 ^ 0x490) - 918) ^ ((v0 + 1376797562) | 0x5842154)) * (v1 == v4)) ^ v0)))();
}

uint64_t sub_1003788B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  a16 = v20 + 1224239923 * ((&a14 & 0x2EDB128E | ~(&a14 | 0x2EDB128E)) ^ 0x239710A6) + 1711;
  a15 = a12;
  a17 = v17;
  uint64_t v21 = (*(uint64_t (**)(int *))(v19 + 8 * (v20 + 2129)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((a14 == v18) * (((v20 - 557463852) & 0x7BFFFBDF) - 1522908011)) ^ v20)))(v21);
}

uint64_t sub_100378958@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = v1 + 127 - a1;
  int8x16_t v5 = vrev64q_s8(*(int8x16_t *)(v4 - 15));
  int8x16_t v6 = vextq_s8(v5, v5, 8uLL);
  int8x16_t v7 = vrev64q_s8(*(int8x16_t *)(v4 - 31));
  int8x16_t v8 = vextq_s8(v7, v7, 8uLL);
  unint64_t v9 = STACK[0x2C0] + 127 - a1;
  v10.i64[0] = 0x3030303030303030;
  v10.i64[1] = 0x3030303030303030;
  v11.i64[0] = 0x1818181818181818;
  v11.i64[1] = 0x1818181818181818;
  int8x16_t v12 = vrev64q_s8(vaddq_s8(vsubq_s8(v6, vandq_s8(vaddq_s8(v6, v6), v10)), v11));
  *(int8x16_t *)(v9 - 15) = vextq_s8(v12, v12, 8uLL);
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v10)), v11));
  *(int8x16_t *)(v9 - 31) = vextq_s8(v13, v13, 8uLL);
  return (*(uint64_t (**)(void))(v3 + 8 * ((27 * (a1 + (v2 + 919) != 1221)) ^ v2)))();
}

uint64_t sub_1003789F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v57 = (*(uint64_t (**)(void, void, uint64_t))(v55 + 8 * (v52 ^ 0xBEA)))(LODWORD(STACK[0x49C]), (v53 + v54), a48);
  int v64 = ((2 * v57) & 0xDBEF96B2) + (v57 ^ 0xEDF7CB59);
  int v65 = STACK[0x43C];
  int v66 = STACK[0x43C];
  if (v64 == -302527655)
  {
    unint64_t v68 = STACK[0x390];
    char v69 = (char *)&STACK[0x6B0] + STACK[0x390] - 0x2500E162B343AFF1;
    STACK[0x528] = (unint64_t)(v69 - 1824);
    STACK[0x3F8] = (unint64_t)(v69 - 1596);
    LODWORD(STACK[0x59C]) = 1572052379;
    STACK[0x530] = v68 - 192;
    STACK[0x620] = 0;
    LODWORD(STACK[0x4D0]) = 1791330438;
    unsigned int v70 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55
                                                                                                  + 8 * ((v66 + 350) ^ (8 * (v69 - 1824 == (char *)-248))));
    STACK[0x400] = (unint64_t)(v69 - 1824);
    return v70(v57, v58, v59, v60, v61, v62, v63);
  }
  else if (v64 == -34092196)
  {
    LODWORD(STACK[0x4EC]) = -605900286;
    return (*(uint64_t (**)(void))(v55
                                + 8
                                * (int)(((STACK[0x578] != 0) * (11 * (v65 ^ 0x252) + ((v65 + 409) ^ 0xFFFFFDA7))) ^ (v65 + 1070))))();
  }
  else
  {
    int v71 = 1178560073 * (((v56 - 200) & 0x4ABC1A0D | ~((v56 - 200) | 0x4ABC1A0D)) ^ 0xFD79D90);
    *(void *)(v56 - 192) = a52;
    *(_DWORD *)(v56 - 200) = v71 + v64 - ((2 * v64 + 605055310) & 0x483BD274) + 908467681;
    *(_DWORD *)(v56 - 196) = v65 - v71 + 406;
    uint64_t v72 = (*(uint64_t (**)(uint64_t))(v55 + 8 * (v65 ^ 0xA1B)))(v56 - 200);
    return (*(uint64_t (**)(uint64_t))(v55
                                              + 8
                                              * (int)(((STACK[0x578] != 0)
                                                     * (11 * (v65 ^ 0x252) + ((v65 + 409) ^ 0xFFFFFDA7))) ^ (v65 + 1070))))(v72);
  }
}

uint64_t sub_100378C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41)
{
  return (*(uint64_t (**)(void))(v43
                              + 8
                              * ((13 * ((LODWORD(STACK[0x5BC]) ^ v41) == a41 - 2029213429 + 6 * (v42 ^ 0x6C2))) ^ v42)))();
}

void sub_100378C8C()
{
}

uint64_t sub_100378C98()
{
  int v5 = ((v2 - 673) | 0x241) + *(unsigned __int8 *)(v3 + 8) - 732;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1452 * ((v1 & (2 * v5)) + ((v2 - 96) ^ (v0 - 689) ^ v5) == v0)) ^ v2)))();
}

uint64_t sub_100378CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  LODWORD(a22) = HIDWORD(a17) + 18909400;
  v36.i64[0] = 0x1818181818181818;
  v36.i64[1] = 0x1818181818181818;
  return sub_10035866C(v36, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_100378D60(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((3423 * (*(_DWORD *)(*v4 + 4 * a2) == v3)) ^ v5)))();
}

void sub_100378D8C()
{
}

uint64_t sub_100378D98(uint64_t result)
{
  unint64_t v1 = 235795823 * ((~result & 0x2A1D36B9A93A3D3 | result & 0xFD5E2C94656C5C2CLL) ^ 0xA1169950E3EEA8ALL);
  int v2 = *(_DWORD *)(result + 4) + v1;
  unint64_t v3 = *(void *)(result + 16) ^ v1;
  int v4 = *(_DWORD *)(result + 28) - v1;
  int v5 = *(_DWORD *)(result + 8) ^ v1;
  unint64_t v6 = *(void *)(result + 32) - v1;
  int v7 = *(_DWORD *)result ^ v1;
  BOOL v8 = v6 == v3;
  BOOL v9 = v6 > v3;
  if (v4) {
    BOOL v8 = v9;
  }
  if (v8) {
    int v7 = v2;
  }
  *(_DWORD *)(result + 40) = v5 ^ v7;
  return result;
}

uint64_t sub_100378E2C@<X0>(int a1@<W8>, int a2, uint64_t a3, int a4)
{
  unsigned int v8 = ((a1 + 290) ^ 0xA4099212) - (v6 + ((-2048595484 - v7) & 0xC22E45A4));
  unsigned int v9 = 108757529
     * (((&a2 | 0xE3DBCC26) - &a2 + (&a2 & 0x1C2433D8)) ^ 0x347AE0D);
  a2 = v9 + a1 + 152;
  a3 = v5;
  a4 = v8 ^ v9;
  uint64_t v10 = (*(uint64_t (**)(int *))(v4 + 8 * (a1 + 1106)))(&a2);
  return sub_100378EC4(v10);
}

uint64_t sub_100378EEC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(&a19 + a2 + a1) = 24;
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((198
                                * ((((v19 + 14) ^ ((unint64_t)(a2 + 1 + a1) < 0x38)) & 1) == 0)) ^ (v19 + 13))))();
}

uint64_t sub_100378F38(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return sub_10035E0F8(-1633704640, a4, a6, v7);
}

void sub_100378F60(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) + 108757529 * (((a1 | 0xFA9FB8B3) - (a1 & 0xFA9FB8B3)) ^ 0x1A03DA98);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10037903C()
{
  STACK[0x390] = v1;
  STACK[0x530] = v1 - 112;
  return v0();
}

uint64_t sub_100379058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((11 * (a8 + 1 != v10 + 24)) ^ v8)))();
}

uint64_t sub_10037910C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, char a5@<W5>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  int v12 = v10 + 726;
  uint64_t v13 = (v9 + a3);
  *(unsigned char *)(a6 + v13 + 36) = *(unsigned char *)(a4 + v13) ^ *(unsigned char *)(v7 + ((v12 ^ a1) & v13)) ^ *(unsigned char *)(((v12 ^ a1) & v13) + v8 + 1) ^ *(unsigned char *)(a7 + ((v12 ^ a1) & v13)) ^ (((v12 ^ a1) & v13) * a5) ^ 0x18;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v9 - 1 == a2) * (((v12 - 734) | 8) - 24)) ^ (v12 + 1117))))();
}

uint64_t sub_100379184()
{
  return sub_100362C38();
}

uint64_t sub_1003791AC@<X0>(int a1@<W1>, uint64_t a2@<X6>, uint64_t a3@<X7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(uint64_t))
{
  *(unsigned char *)(a2 + (a1 + a4 + 18)) = *(unsigned char *)(a3 + ((v24 - 774) ^ 0xBDFD20D0) + v23);
  int v27 = 628203409 * ((2 * ((v26 - 168) & 0xADFAC20) - (v26 - 168) + 1965052895) ^ 0xF7A85FEC);
  *(void *)(v26 - 168) = a22;
  *(_DWORD *)(v26 - 160) = v27 + v24 - 774 + 702;
  *(_DWORD *)(v26 - 156) = 965353136 - v27;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v25 + 8 * ((v24 - 774) ^ 0x8D7)))(v26 - 168);
  return a23(v28);
}

uint64_t sub_100379258@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD *a24,_DWORD *a25)
{
  int v28 = a1 - 674;
  *a24 = 191590270;
  uint64_t v29 = (*a25 + 216935278);
  unint64_t v30 = 235795823 * ((0x905CB3DC21C34473 - ((v27 - 152) | 0x905CB3DC21C34473) + a5) ^ 0x6713F6DD4A91F2D5);
  STACK[0x5D8] = v30 + 864869440;
  STACK[0x5C8] = v29 ^ v30;
  *(_DWORD *)(v27 - 148) = v28 - 1289604685 - v30;
  *(_DWORD *)(v27 - 144) = v30 ^ (v28 - 1289604685) ^ 0x5D;
  *(_DWORD *)(v27 - 128) = -2047004545 - v30 + v28;
  *(_DWORD *)(v27 - 124) = v30 + 1;
  *(_DWORD *)(v27 - 152) = (v28 - 1289604724) ^ v30;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v26 + v28 + 2068)))(v27 - 152);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * *(int *)(v27 - 112)))(v31);
}

uint64_t sub_100379374(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((((a7 - 1323) | 0x90) + 1151) ^ 0x6A9) * (v7 != a2)) ^ a7)))();
}

uint64_t sub_1003793A8()
{
  int v4 = v2 + 1780414796;
  BOOL v5 = v4 < (int)((v1 + 276535310) & 0xEF8461DB ^ 0x5B866771);
  BOOL v6 = v3 + 1780414796 < v4;
  if (v3 + 1780414796 < 1535534760 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((v6 * (79 * (v1 ^ 0x7E2) - 1009)) ^ v1)))();
}

uint64_t sub_100379434(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2 + 2936 * (a2 ^ 0x6A3)))();
}

uint64_t sub_100379488()
{
  BOOL v4 = ((v0 - 1290087344) & 0x4CE52A6B ^ (((v0 + 603) ^ 0x11A) - 1699739036))
     + (v3 ^ 0x6D4FEEFA)
     - 134218266
     + (v1 & 0xDA9FDDF4) > 0x7FFFFFFE;
  return (*(uint64_t (**)(void))(v2 + 8 * (((16 * v4) | (32 * v4)) ^ (v0 + 603))))();
}

uint64_t sub_100379514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v7 + 8 * ((21 * ((v5 & 0x18) != (a5 ^ 0x6F1) - 1404)) ^ a5)))(a1, (v6 - a1));
}

void sub_10037955C(int a1@<W8>)
{
  int v7 = ((v6 - 1956630864 - 2 * ((v6 - 144) & 0x8B602F40)) ^ 0x31F45722) * v5;
  *(void *)(v6 - 128) = v4;
  *(void *)(v6 - 120) = v3;
  *(_DWORD *)(v6 - 140) = a1 - v7 + 1002;
  *(_DWORD *)(v6 - 136) = v7 + v1 + ((a1 - 1387069369) & 0x52ACFCFE ^ 0x192D6552);
  (*(void (**)(uint64_t))(v2 + 8 * (a1 + 1371)))(v6 - 144);
  JUMPOUT(0x100355BA8);
}

uint64_t sub_1003795E0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((14 * (v2 == ((a1 - 1136177186) & 0x43B8ABFF ^ (v1 - 564)))) ^ a1)))();
}

uint64_t sub_100379630@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return sub_10037967C(a2 - 0x1F010F7499D3F79ELL, 1074, 0xFBFF6BFE777BD9B0, 4009213406, 0x56D7DFEDBF87771FLL, (a1 + 104));
}

uint64_t sub_10037967C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v19 = v14 > v11;
  uint64_t v20 = 4 * (v16 + v12);
  int v21 = v6 + v15 + (*(_DWORD *)(*v9 + v20) ^ v17);
  *(_DWORD *)(*a1 + v20) = v21 + v17 - (v13 & (2 * v21));
  int v22 = v16 + 1 + v7;
  LODWORD(v20) = v19 ^ (v22 < a6);
  BOOL v23 = v22 < v10;
  if (!v20) {
    BOOL v19 = v23;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * ((8 * !v19) | (!v19 << 6) | (v8 + 1304))))();
}

uint64_t sub_100379714()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((715 * (v0 < (((LODWORD(STACK[0x43C]) ^ 0x6D6) + 652) ^ 0x78A01049u))) ^ (LODWORD(STACK[0x43C]) + 302))))();
}

uint64_t sub_100379754@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v2 == v1 + ((4 * (a1 - 1038)) ^ 0x974) - 724) * (((a1 - 1708) | 4) + 1211)) ^ (a1 - 1038))))();
}

void sub_1003797AC()
{
}

void sub_1003797B4()
{
  LODWORD(STACK[0x638]) = v0;
  LODWORD(STACK[0x634]) = v1;
  LODWORD(STACK[0x524]) = v2;
  LODWORD(STACK[0x4B0]) = v3;
  LODWORD(STACK[0x598]) = v4 + 64;
  JUMPOUT(0x10035CCA4);
}

uint64_t sub_1003797E4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((97 * (STACK[0x5B0] == 0)) ^ (v0 + 1078))))();
}

void sub_10037981C()
{
}

uint64_t sub_100379824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  unsigned int v21 = 1178560073 * (((&a13 | 0xBA707601) + (~&a13 | 0x458F89FE)) ^ 0xE40E62);
  a16 = (((2 * v18) & 0xFFFF7CFE) + (v18 ^ 0xFFFFBE7F) + 1784348672) ^ v21;
  a14 = v21 + 173;
  a17 = v17;
  a15 = a12;
  uint64_t v22 = (*(uint64_t (**)(int *))(v20 + 17832))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((63 * (a13 == v19)) ^ 0x61Eu)))(v22);
}

uint64_t sub_1003798E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD **a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  int v50 = v48 - 1972110633;
  unsigned int v51 = *a29;
  if ((((v48 - 1972110633) ^ 0x1F1) & (unint64_t)*a29) != 0
    || (int v52 = *(&off_1022AC750 + v48 - 1972111088), *v52))
  {
    *a9 = -605900155;
    return sub_10037DA74(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35);
  }
  else
  {
    int v53 = 24 * (v50 ^ 0x1D0);
    *int v52 = v51;
    *(_DWORD *)*(&off_1022AC750 + (v50 ^ 0x1C4)) = 255;
    *v51 |= ~v51[*v51 & 0x3ELL] << (24 * (v50 ^ 0xD0));
    v51[4] |= ~v51[v51[4] & 0x3ELL] << 16;
    v51[8] |= ~v51[v51[8] & 0x3ELL] << 16;
    v51[12] |= ~v51[v51[12] & 0x3ELL] << 16;
    v51[16] |= ~v51[v51[16] & 0x3ELL] << 16;
    v51[20] |= ~v51[v51[20] & 0x3ELL] << 16;
    v51[24] |= ~v51[v51[24] & 0x3ELL] << 16;
    v51[28] |= ~v51[v51[28] & 0x3ELL] << 16;
    v51[32] |= ~v51[v51[32] & 0x3ELL] << 16;
    v51[36] |= ~v51[v51[36] & 0x3ELL] << 16;
    v51[40] |= ~v51[v51[40] & 0x3ELL] << 16;
    v51[44] |= ~v51[v51[44] & 0x3ELL] << 16;
    v51[48] |= ~v51[v51[48] & 0x3ELL] << 16;
    v51[52] |= ~v51[v51[52] & 0x3ELL] << 16;
    v51[56] |= ~v51[v51[56] & 0x3ELL] << 16;
    v51[60] |= ~v51[v51[60] & 0x3ELL] << 16;
    uint64_t v54 = (*(uint64_t (**)(char *, void, uint64_t))(v49 + 8 * (v48 - 1972108838)))(&a48, 0, 1024);
    return (*(uint64_t (**)(uint64_t))(v49
                                              + 8
                                              * (int)(((((v53 + 108957898) & 0xF9816DF7) == 498)
                                                     * ((v53 - 143331177) ^ 0xF774F3C4)) ^ v53)))(v54);
  }
}

uint64_t sub_100379C10()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((109
                                * ((((v0 - 149) ^ 0xEFF9FFDA) & (2 * (v1 - ((2 * v1) & 0x510FAB0) + 42499416)) ^ 0x510FA30)
                                 + ((v1 - ((2 * v1) & 0x510FAB0) + 42499416) ^ 0x757482E7)
                                 + v0
                                 + 839
                                 - 1636829385 == 376241015)) ^ v0)))();
}

uint64_t sub_100379CA0@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  uint64_t v51 = (v49 + a2);
  unsigned int v52 = *(_DWORD *)(&a35 + v51 + 72);
  *(unsigned char *)(a1 + (v51 + 1)) = (BYTE2(v52) ^ 0x60) - ((v52 >> 15) & 0x30) + 24;
  *(unsigned char *)(a1 + v51) = ((v48 | 0x1B) ^ HIBYTE(v52) ^ 0x79) - ((v52 >> 23) & 0x30) + 24;
  *(unsigned char *)(a1 + (v51 + 2)) = (BYTE1(v52) ^ 0xAB) - ((2 * (BYTE1(v52) ^ 0xAB)) & 0x30) + 24;
  *(unsigned char *)(a1 + (v51 + 3)) = v52 ^ 0x7D;
  BOOL v53 = v49 - 1704119898 < (a47 + 2073675463);
  if (v49 - 1704119898 < v47 != a47 + 2073675463 < v47) {
    BOOL v53 = a47 + 2073675463 < v47;
  }
  return (*(uint64_t (**)(void))(v50 + 8 * ((28 * !v53) ^ v48)))();
}

uint64_t sub_100379D8C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((219
                                * (((86 * (v1 ^ 0x644) + 1822527740) ^ (2 * v0) & 0xEFF197D8)
                                 + (v0 ^ 0xC9AD207A)
                                 + ((v1 + 940163493) & 0xC7F63D14)
                                 - 588255056 == 1424540076)) ^ v1)))();
}

void sub_100379E1C()
{
}

uint64_t sub_100379E54@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + a1 + v4) = v3;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((unint64_t)(a1 + 1 + v4) < 0x40)
                                     * ((((v2 + 295199576) & 0xEE679CD1) - 1084) ^ 0x244)) ^ (v2 + 295199576) & 0xEE679CD1)))();
}

uint64_t sub_100379EA4()
{
  int v0 = (uint64_t *)*(&off_1022AC750
                  + ((107 * ((qword_102419E28 + dword_102419E38) ^ 0x8A)) ^ byte_101D17BE0[byte_101D15180[(107 * ((qword_102419E28 + dword_102419E38) ^ 0x8A))] ^ 0x34])
                  - 61);
  uint64_t v1 = (uint64_t *)*(&off_1022AC750
                  + (byte_101D1C020[byte_101D17EE0[(107
                                                                                    * ((qword_102419E28 + *v0) ^ 0x8A))] ^ 0xD0] ^ (107 * ((qword_102419E28 + *v0) ^ 0x8A)))
                  - 141);
  unint64_t v2 = *v0 ^ (unint64_t)&v9 ^ *v1;
  uint64_t v3 = 2119093099 * (v2 - 0x22F8A8F5CDCFC8ALL);
  uint64_t v4 = 2119093099 * (v2 ^ 0x22F8A8F5CDCFC8ALL);
  *int v0 = v3;
  uint64_t *v1 = v4;
  LOBYTE(v4) = 107 * ((v4 - *(_DWORD *)v0) ^ 0x8A);
  int v10 = (char *)*(&off_1022AC750
                + (byte_101D1BC24[(byte_101D17AEC[v4 - 12] ^ 0x2C) - 4] ^ v4)
                - 10)
      - 4;
  unsigned int v11 = 1863 - 1759421093 * ((&v10 & 0xEE36C9AC | ~(&v10 | 0xEE36C9AC)) ^ 0xA2B48607);
  LOBYTE(v4) = 107 * ((*(_DWORD *)v1 - *(_DWORD *)v0) ^ 0x8A);
  uint64_t v5 = (char *)*(&off_1022AC750
               + ((107 * ((qword_102419E28 - dword_102419E38) ^ 0x8A)) ^ byte_101D1C020[byte_101D17EE0[(107 * ((qword_102419E28 - dword_102419E38) ^ 0x8A))] ^ 0x12])
               + 137)
     - 4;
  (*(void (**)(char **))&v5[8
                                     * (byte_101D1BE20[byte_101D17DE4[v4 - 4] ^ 0x4A] ^ v4)
                                     + 17544])(&v10);
  unsigned int v11 = 1863
      - 1759421093
      * ((((&v10 | 0x3845AA30) ^ 0xFFFFFFFE) - (~&v10 | 0xC7BA55CF)) ^ 0x74C7E59B);
  int v10 = (char *)*(&off_1022AC750
                + ((107 * ((*(_DWORD *)v1 - *(_DWORD *)v0) ^ 0x8A)) ^ byte_101D1C020[byte_101D17EE0[(107 * ((*(_DWORD *)v1 - *(_DWORD *)v0) ^ 0x8A))] ^ 0xB3])
                - 53)
      - 4;
  unsigned __int8 v6 = 107 * ((*(_DWORD *)v1 - *(_DWORD *)v0) ^ 0x8A);
  (*(void (**)(char **))&v5[8 * (byte_101D1BD20[byte_101D17CEC[v6 - 12] ^ 1] ^ v6) + 18160])(&v10);
  unsigned int v7 = 1225351577 * (&v10 ^ 0x239AD816);
  BYTE4(v10) = v7 ^ 0x4B;
  LODWORD(v10) = v7 + 383;
  return (*(uint64_t (**)(char **))&v5[8
                                               * (byte_101D17BE4[(byte_101D15180[(107 * (*(_DWORD *)v0 ^ 0x8A ^ *(_DWORD *)v1))] ^ 0x9A)
                                                                                - 4] ^ (107
                                                                                      * (*(_DWORD *)v0 ^ 0x8A ^ *(_DWORD *)v1)))
                                               + 17208])(&v10);
}

uint64_t sub_10037A24C()
{
  BOOL v6 = (*(_DWORD *)(v2 + 16) ^ v0) - 1784331968 < ((v1 + 52843837) & 0xFCD9A6A8) - 233
    && (*(_DWORD *)(v3 - 0x38C18B7A1BA31318) & 1) == v1 - 1218;
  return (*(uint64_t (**)(void))(v4 + 8 * ((61 * v6) | v1)))();
}

void sub_10037A2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t)*(&off_1022AC750
                + ((107 * ((qword_102419E28 - dword_102419E48) ^ 0x8A)) ^ byte_101D1BC20[byte_101D17AE0[(107 * ((qword_102419E28 - dword_102419E48) ^ 0x8A))] ^ 0x5B])
                - 50);
  uint64_t v4 = *(void *)(v3 - 4);
  uint64_t v5 = *(&off_1022AC750
       + (byte_101D1C020[byte_101D17EE0[(107 * ((qword_102419E28 + v4) ^ 0x8A))] ^ 0xD0] ^ (107 * ((qword_102419E28 + v4) ^ 0x8A)))
       - 141);
  uint64_t v6 = v4 - (void)&v8 + *v5;
  *(void *)(v3 - 4) = 2119093099 * (v6 - 0x22F8A8F5CDCFC8ALL);
  *uint64_t v5 = 2119093099 * (v6 ^ 0x22F8A8F5CDCFC8ALL);
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  LODWORD(v6) = 1178560073 * ((((2 * &v10) | 0xC4B5652C) - &v10 + 497372522) ^ 0x58CECAF4);
  int v10 = 221124111 - v6;
  int v12 = -1882357464 - v6;
  unsigned int v11 = &STACK[0x2E910FB81C0D985B];
  LODWORD(v5) = 2119093099 * ((*(_DWORD *)v5 - *(_DWORD *)(v3 - 4)) ^ 0x5CDCFC8A);
  unsigned int v7 = (char *)*(&off_1022AC750
               + ((107 * ((qword_102419E28 - dword_102419E48) ^ 0x8A)) ^ byte_101D1C020[byte_101D17EE0[(107 * ((qword_102419E28 - dword_102419E48) ^ 0x8A))] ^ 0x12])
               + 137)
     - 4;
  (*(void (**)(int *))&v7[8
                                   * (v5 ^ byte_101D1C020[byte_101D17EE0[v5] ^ 0xA3])
                                   + 16464])(&v10);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10037A5C4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1866
                                * (LODWORD(STACK[0x48C]) == ((661 * ((3 * (v0 ^ 0x131)) ^ 0x6D) + 151071435) & 0xF6FED2FF)
                                                          + 605939269)) ^ (3 * (v0 ^ 0x131)))))();
}

uint64_t sub_10037A62C(uint64_t a1, uint64_t a2, int a3)
{
  return sub_10037A6C8(a3 - 1);
}

uint64_t sub_10037A6C8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v4 - 750) * (a3 > 1)) ^ v4)))();
}

uint64_t sub_10037A73C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + (v5 + v4)) = *(unsigned char *)(v2 + (v5 + v4));
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((15 * (((v5 - 1 == v3) ^ (5 * (a1 ^ 0xA4))) & 1)) ^ (a1 - 1154))))();
}

uint64_t sub_10037A784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10037A7BC(a1, a2, a3, a4, a5, a6, a7, STACK[0x388]);
}

uint64_t sub_10037A7BC()
{
  unint64_t v1 = STACK[0x2B8];
  STACK[0x3E0] = STACK[0x2B8] + 2353;
  STACK[0x3D8] = v0 + 49;
  STACK[0x3D0] = v1 + 2333;
  STACK[0x3A8] = v0 + 29;
  STACK[0x3A0] = v1 + 2313;
  STACK[0x398] = v0 + 9;
  return sub_100362C38();
}

uint64_t sub_10037A7FC()
{
  LODWORD(STACK[0x538]) = 2;
  STACK[0x578] = 0;
  LODWORD(STACK[0x60C]) = 0;
  LODWORD(STACK[0x49C]) = 0;
  int v4 = *(uint64_t (**)(void))(v3 + 8 * ((172 * ((v2 & 2) != ((v0 + 250107741) & 0xF117A8FF) - 189)) ^ v0));
  STACK[0x378] = v1;
  return v4();
}

uint64_t sub_10037A860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8 * ((226 * (((v11 + ((v13 + 1157216173) & 0xBB064B78) - 2152) ^ a11) < 0x15)) ^ v13)))();
}

uint64_t sub_10037A8A8()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 + 1563)))(200, 1616997413) != 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v2 * (81 * (v1 ^ 0x2A5) - 1743)) ^ v1)))();
}

uint64_t sub_10037A8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v12 = *(unsigned __int8 *)STACK[0x560]
      - (*(unsigned char *)(*(void *)(v10 + v9 * (uint64_t)a8 + 24) - 0x1A0A5A97849D4471) - 88);
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((v12 ^ 0xF3FF7FAE) + ((((v8 ^ 0x70C) + 3) ^ 0xE7FEFDA9) & (2 * v12)) == -201359442)
                                * ((((v8 ^ 0x70C) - 130) | 0x82) ^ 0x2B1)) ^ ((v8 ^ 0x70C) - 622))))();
}

void sub_10037A9BC()
{
}

void sub_10037A9D0()
{
}

uint64_t sub_10037A9DC()
{
  return sub_10037AA3C(3658457652);
}

uint64_t sub_10037AA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25)
{
  int v28 = (v26 ^ a6) + 827;
  int v29 = 11 * (v26 ^ a6);
  int v30 = v26 - 1170;
  BOOL v31 = v25 + a7 < (a25 + 1319144372);
  if ((a25 + 1319144372) < 0xBD99CA5B != v25 + a7 < (v28 ^ 0xBD99C944 ^ v29)) {
    BOOL v31 = (a25 + 1319144372) < 0xBD99CA5B;
  }
  return (*(uint64_t (**)(void))(v27 + 8 * ((13 * !v31) ^ v30)))();
}

uint64_t sub_10037AAB8()
{
  return sub_10037AAD0();
}

uint64_t sub_10037AAD0@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  *(void *)(a1 + a2 + v5 + v2) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * ((243 * (((v4 + 1191866838) & 0xB8F58AFD ^ 0x2F5) + v2 != v3)) ^ v4)))();
}

uint64_t sub_10037AB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17)
{
  unsigned int v19 = v18 + 1609413550 + ((a7 + a6 + 1316) | 0x120);
  BOOL v20 = v19 < 0xB538DFE9;
  BOOL v21 = v19 > a17;
  if (a17 < 0xB538DFE9 != v20) {
    BOOL v22 = v20;
  }
  else {
    BOOL v22 = v21;
  }
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((15 * !v22) ^ (a7 + a6 + 1763))))(2863979242);
}

uint64_t sub_10037ABAC()
{
  return v0();
}

uint64_t sub_10037ABB4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((3958 * (v5 == a2 + v6 - 358 + (v6 ^ 0x757) * a5 - 2873)) ^ v6)))();
}

uint64_t sub_10037ABF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                       + 8
                                                                       * ((102
                                                                         * ((((a6 + (v7 ^ 0xC83) - 2084) ^ (v6 == 63)) & 1) == 0)) ^ v7)))(a1, a2, a3, -753493622);
}

uint64_t sub_10037AC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((((unint64_t)(v5 - a1) < 0x20) ^ (a5 ^ (v6 + 2))) & 1)
                                * ((433 * (a5 ^ 0x27A)) ^ 0x510)) ^ a5)))();
}

void sub_10037AC88()
{
}

void sub_10037AD18()
{
}

void sub_10037AD9C(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 - 0x16DAB37677B31EB5) = 1;
  JUMPOUT(0x1003697C4);
}

void sub_10037ADB8(uint64_t a1)
{
  *(_DWORD *)(*(void *)(a1 + 24) - 0x752627A1EA5CFF2CLL) = v3;
  _DWORD *v1 = v2;
  JUMPOUT(0x100385280);
}

void sub_10037ADD8()
{
}

uint64_t sub_10037ADE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v40 = *(void *)(v37 + 24);
  *(int8x16_t *)(v39 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(v37 + 40) - 0x5D591B602CF26CC0), (int8x16_t)xmmword_101D1C160);
  if (a9) {
    BOOL v41 = v40 == 0x1E6EF7153090DC2;
  }
  else {
    BOOL v41 = 1;
  }
  int v42 = !v41;
  HIDWORD(a12) = v36 << ((((a8 - 90) | 0x44) + 65) ^ (a8 + 42));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * (int)(((8 * v42) | (16 * v42)) ^ a8)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_10037AE7C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X6>, int a5@<W8>)
{
  *(unsigned char *)(a4 + (a5 - 2146040937)) = *(unsigned char *)(a2 + a3 - 1352758830)
                                                   - (((v5 + 110) ^ 0x1F) & (2 * *(unsigned char *)(a2 + a3 - 1352758830)))
                                                   + 24;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((2 * ((a1 + a5 + 1) < 0x40)) | (16 * ((a1 + a5 + 1) < 0x40)) | (v5 + 1023))))();
}

uint64_t sub_10037AEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((484 * (a8 + 1 == v10 + 32)) ^ v8)))();
}

uint64_t sub_10037B020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v18 - 144) = (v12 - 450) ^ (1225351577
                                        * ((~((v18 - 144) | 0x95A6E94B) + ((v18 - 144) & 0x95A6E94B)) ^ 0x49C3CEA2));
  *(void *)(v18 - 120) = v13;
  *(void *)(v18 - 112) = v15;
  *(void *)(v18 - 136) = v14;
  *(void *)(v18 - 128) = v13;
  (*(void (**)(uint64_t))(v17 + 8 * (v12 + 1101)))(v18 - 144);
  int v19 = 1374699841 * ((v18 + 730915874 - 2 * ((v18 - 144) & 0x2B90E4B2)) ^ 0x4664FCBB);
  *(_DWORD *)(v18 - 128) = v16 - v19 + ((2 * v12) ^ 0xB81261D6);
  *(void *)(v18 - 136) = a12;
  *(_DWORD *)(v18 - 144) = (v12 - 963) ^ v19;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v12 ^ 0xC56)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((*(_DWORD *)(v18 - 140) == -1045335036) * ((v12 ^ 0x2F) - 1143)) ^ v12)))(v20);
}

uint64_t sub_10037B140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v7
                                                                                + 8
                                                                                * (((v5 == a5) * (((v6 - 734) | 8) - 24)) ^ (v6 + 1117))))(762, 953670721, 3341296574, STACK[0x3F8]);
}

uint64_t sub_10037B188()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((227 * (v0 <= v3 + 623)) ^ (v2 - 143329363))))();
}

void sub_10037B1C8()
{
}

uint64_t sub_10037B1D0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1277 * ((((v5 ^ (2 * a1)) + v2 - (((v5 ^ (2 * a1)) << (v4 + 62)) & v5)) ^ v2) > v1)) ^ v4)))();
}

uint64_t sub_10037B20C()
{
  _DWORD *v1 = v0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((v3 - 204) ^ (15
                                             * ((((467 * ((v3 - 1931033947) & 0x73193FFC ^ 0x7E0)) ^ 0xFFFA7EB2) & (2 * (v0 - ((2 * v0) & 0x1CF8FEFC) - 830701698)) ^ 0x9CF878FC)
                                              + ((v0 - ((2 * v0) & 0x1CF8FEFC) - 830701698) ^ 0xB1814381)
                                              - 111739024 == 2035563631)))))();
}

uint64_t sub_10037B2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,unsigned int a50,unsigned int a51,unsigned int a52,int a53,int a54,unsigned __int8 a55)
{
  return sub_100359930(a28, a3, a4, a5, a6, a7, a8, v55, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_10037B2C8()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((((((v2 - 684) | 2) + 263) ^ 0x608) * (v0 == v1)) ^ v2)))(4198314077);
}

uint64_t sub_10037B304@<X0>(unsigned int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1798 * (((((v2 - 141) | a1) - 679) ^ 0x4FLL) + a2 == 20)) ^ v2)))();
}

uint64_t sub_10037B33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  a16 = 108757529 * ((&a15 + 70320331 - 2 * (&a15 & 0x43100CB)) ^ 0xE4AD62E0) - 504207030;
  uint64_t v17 = (*(uint64_t (**)(int *))(v16 + 17680))(&a15);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((1120 * (a15 == 605940026)) ^ 0x277u)))(v17);
}

void sub_10037B3DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10037B458(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((652
                                * ((((*(unsigned __int8 *)(a2 + 2) - 38) << (v3 ^ 0x91)) & v5)
                                 + ((*(unsigned __int8 *)(a2 + 2) - 38) ^ v4) == v4)) ^ v3)))();
}

uint64_t sub_10037B49C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * ((((v6 - 148) ^ 0x151) * (v7 == 605940026)) ^ (v6 + 418))))(a1, a2, a3, a4, a5, a6, 3689067235);
}

void sub_10037B4DC()
{
}

uint64_t sub_10037B510()
{
  int v6 = 1374699841 * ((~((v5 - 144) ^ 0xCE91F438 | 0xE3331AF3) + (((v5 - 144) ^ 0xCE91F438) & 0xE3331AF3)) ^ 0xBFA9093D);
  *(_DWORD *)(v5 - 144) = (v2 - 838) ^ v6;
  *(_DWORD *)(v5 - 128) = v0 - v6;
  *(void *)(v5 - 136) = v4;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 + 1235)))(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((*(_DWORD *)(v5 - 140) == v3 + ((v2 - 454) | 0x100) - 838) * (v2 ^ 0x417)) ^ v2)))(v7);
}

uint64_t sub_10037B5BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v27 = (v20 + 389) | 0x102;
  *(_DWORD *)(v26 - 112) = v20
                         + 1224239923
                         * ((1998466508 - ((v26 - 144) | 0x771E2DCC) + ((v26 - 144) | 0x88E1D233)) ^ 0x7A522FE4)
                         + 417;
  *(void *)(v26 - 144) = v25;
  *(void *)(v26 - 136) = a16;
  *(void *)(v26 - 104) = v24;
  *(void *)(v26 - 128) = v24;
  *(void *)(v26 - 120) = v23;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v20 + 2075)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (((v21 + a20 + 2 < ((v27 - 195) | 0x540u) + 2147481660) * (v27 - 739)) ^ (v27 - 272))))(v28);
}

uint64_t sub_10037B688()
{
  int v5 = v3 - 96 + *(unsigned __int8 *)(v2 + 1) - 855;
  return (*(uint64_t (**)(void))(v4 + 8 * (v3 ^ (8 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)))))();
}

uint64_t sub_10037B6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (v9 | (2
                                     * (*(_DWORD *)(v11 + (((v9 + 431) ^ v8) + v10) * (uint64_t)a8) == (v9 ^ 0x1FDD3406))))))();
}

uint64_t sub_10037B6F8(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x1F010F7499D3F7A2);
  int v4 = v2 - 1902603612;
  BOOL v3 = v2 - 1902603612 < 0;
  int v5 = 1902603612 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = (*(_DWORD *)a1 - 628203409 * (a1 ^ 0x82880C33) + 8) | 4;
  return (*(uint64_t (**)(void))((char *)*(&off_1022AC750 + (v1 ^ 0x1D4))
                              + 8
                              * ((((v5 ^ (v1 + 667941171)) - 667941504 + ((2 * v5) & 0x4F9FF4FEu) < v1 + 2147483315)
                                * ((v1 - 12) ^ 0x401)) ^ v1)
                              - 4))();
}

void sub_10037B7E8()
{
}

uint64_t sub_10037B814@<X0>(int a1@<W2>, int a2@<W7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((a3 + 8 == ((v3 + 108957898) & 0xF9816DF7) - 466) * ((a1 + v3 - 816) ^ a2)) ^ v3)))();
}

uint64_t sub_10037B85C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(_DWORD *)(a2 + v5) = v4;
  *(void *)(v8 - 144) = a4;
  *(void *)(v8 - 136) = a2;
  *(_DWORD *)(v8 - 128) = v6 - 1149 + ((2 * ((v8 - 144) & 0x37738180) - (v8 - 144) - 930316676) ^ 0xA5786675) * a3 - 382;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((v6 - 1149) ^ 0xB83)))(v8 - 144);
}

void sub_10037B8FC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (3804331 * ((2 * (a1 & 0x520CC9FF) - a1 - 1376569856) ^ 0xD32613F6));
  uint64_t v2 = *(void *)a1;
  int v3 = (char *)*(&off_1022AC750 + (v1 ^ 0x33E)) - 4;
  (*(void (**)(void, uint64_t (*)()))&v3[8 * (v1 ^ 0xB72)])(*(&off_1022AC750 + v1 - 768), sub_10035ECA0);
  __asm { BRAA            X9, X17 }
}

void sub_10037B9C4()
{
}

uint64_t sub_10037BA1C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32,uint64_t a33)
{
  LODWORD(STACK[0x400]) = v33;
  if (v36 == 757585717)
  {
    int v40 = LODWORD(STACK[0x43C]) - 686;
    int v41 = 15;
  }
  else
  {
    if (v36 != 757585713)
    {
      STACK[0x3F8] = 0;
      LODWORD(STACK[0x3D8]) = 0;
      LODWORD(STACK[0x3E0]) = 0;
      goto LABEL_7;
    }
    int v40 = LODWORD(STACK[0x43C]) - 644;
    int v41 = 18;
  }
  LODWORD(STACK[0x3E0]) = v41;
  STACK[0x3F8] = (unint64_t)*(&off_1022AC750 + v40) - 4;
  LODWORD(STACK[0x3D8]) = 1;
LABEL_7:
  int v42 = LODWORD(STACK[0x43C]) - 267;
  int v43 = 1178560073 * ((((v39 - 200) | 0x799A2459) - ((v39 - 200) & 0x799A2459)) ^ 0xC30E5C3B);
  *(void *)(v39 - 168) = STACK[0x430];
  *(void *)(v39 - 152) = 0;
  *(void *)(v39 - 144) = 0;
  *(_DWORD *)(v39 - 176) = v35 - v43 + 178357343;
  *(void *)(v39 - 192) = a33;
  *(void *)(v39 - 184) = a1 + 0x1F010F7499D3F9B6;
  *(_DWORD *)(v39 - 160) = v42 ^ v43;
  *(void *)(v39 - 136) = v37 + 1168;
  *(void *)(v39 - 128) = a1 + 0x1F010F7499D3FAC6;
  uint64_t v44 = (*(uint64_t (**)(uint64_t))(v38 + 8 * a32))(v39 - 200);
  return (*(uint64_t (**)(uint64_t))(v38 + 8 * (((*(_DWORD *)(v39 - 200) == 605940026) * a31) ^ v34)))(v44);
}

uint64_t sub_10037BB78(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((((((v4 & 8) == 0) ^ ((a4 - 62) | 0xE0) ^ 0x35) & 1)
                                                       * (1061 * (((a4 - 62) | 0xE0) ^ 0x1F2) - 1112)) ^ ((a4 - 62) | 0xE0))))(a1, a2);
}

void sub_10037BBC4(uint64_t a1)
{
  BOOL v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x1F010F7499D3F7A2) == 1902603612
    || *(_DWORD *)(*(void *)(a1 + 16) - 0x1F010F7499D3F7A2) == 1902603612;
  int v1 = *(_DWORD *)a1 - 1225351577 * ((-1557536513 - (a1 | 0xA329E0FF) + (a1 | 0x5CD61F00)) ^ 0x7F4CC716);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_10037BCDC()
{
  return 0;
}

uint64_t sub_10037BD1C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 + 458394013) & 0xE4AD75BB ^ 0xFFFFFF95) + ((v1 - 42) | 0x20)) * (v0 != 64)) ^ v1)))();
}

uint64_t sub_10037BD68()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((35 * (((v0 - 1 >= 0) ^ ((v1 ^ 0xA) + 41)) & 1)) ^ v1)))();
}

uint64_t sub_10037BDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  HIDWORD(v13) = v7 ^ 1;
  LODWORD(v13) = v7 ^ (v11 - 1);
  return (*(uint64_t (**)(void))(v9 + 8 * ((1281 * (a7 + 1 == v12 + 4)) ^ v8)))(v11
                                                                                            + (v13 >> 2) - (v10 & (2 * (v13 >> 2))));
}

uint64_t sub_10037BE84()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v0 - 451) | 0x26) ^ (v0 + 437)) * (v2 == v1)) ^ v0)))();
}

void sub_10037BEBC()
{
  int v6 = v0 - 700;
  int v7 = v0 - 865;
  unint64_t v8 = STACK[0x4D8];
  int v9 = STACK[0x47C];
  unsigned int v10 = (2 * LODWORD(STACK[0x47C]) + 521048098) & 0x8BCC65CA;
  int v11 = 1374699841 * ((2 * ((v5 - 200) & 0x16194720) - (v5 - 200) + 1776728283) ^ 0x412A0D2);
  *(_DWORD *)(v5 - 160) = (v2 - ((2 * v2 + 86833466) & 0x6F8E752) + (v7 ^ 0x212F029)) ^ v11;
  *(_DWORD *)(v5 - 192) = (v6 + 1695027176) ^ v11;
  *(_DWORD *)(v5 - 144) = v9 - v11 - v10 - 714245386;
  *(void *)(v5 - 200) = v8;
  *(void *)(v5 - 184) = STACK[0x378];
  *(void *)(v5 - 168) = v3;
  *(void *)(v5 - 152) = v1;
  (*(void (**)(uint64_t))(v4 + 8 * (v6 + 2045)))(v5 - 200);
  LODWORD(STACK[0x48C]) = *(_DWORD *)(v5 - 176);
  JUMPOUT(0x10037A5D4);
}

uint64_t sub_10037BFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v5
                                                                               + 8
                                                                               * (int)((((v4
                                                                                        + ((v7 + 1772548188) & 0x96590BEF)
                                                                                        + 568) ^ (v4 + 1269))
                                                                                      * (v6 < 0x20)) ^ v7)))(a1, a2, a3, a4, 0);
}

uint64_t sub_10037BFFC()
{
  int v5 = 1759421093 * ((v4 - 136) ^ 0xB37DB054);
  *(void *)(v4 - 128) = v2;
  *(_DWORD *)(v4 - 136) = v1 - v5 + 1502683864;
  *(_DWORD *)(v4 - 120) = v3 - v5 + 715;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v3 + 1668)))(v4 - 136);
  return sub_10037C054(v6);
}

uint64_t sub_10037C054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v18 - 112) = v15;
  *(void *)(v18 - 128) = a14;
  *(_DWORD *)(v18 - 120) = v17 + 1178560073 * ((v18 - 136) ^ 0xBA947862) + 428;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 ^ 0xAE0)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((((((v17 ^ 0x9E) - 44) ^ (*(_DWORD *)(v18 - 136) > v14)) & 1)
                                              * ((2 * (v17 ^ 0x39E)) ^ 0x39A)) | (v17 + 608))))(v19);
}

uint64_t sub_10037C0E4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((v3 ^ 3u) < a3 + ((v4 + 2145183204) & 0xF1E7335F) - 585) * ((v4 - 246) ^ 0x6DB)) ^ v4)))();
}

uint64_t sub_10037C130()
{
  uint64_t v6 = *(void *)(v9 + 24);
  int v7 = 1224239923 * ((((v5 - 144) | 0x8E15D0D9) - (v5 - 144) + ((v5 - 144) & 0x71EA2F20)) ^ 0x7CA62D0E);
  *(_DWORD *)(v5 - 144) = v7 ^ 0x34B9F40D;
  *(_DWORD *)(v5 - 128) = v7 + v0 - 795;
  *(void *)(v5 - 136) = v10;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 ^ 0xC15)))(v5 - 144);
  *(_DWORD *)(v5 - 112) = v0 + 1224239923 * (((v5 - 144) & 0x62925DD | ~((v5 - 144) | 0x62925DD)) ^ 0xB6527F5) - 598;
  *(void *)(v5 - 104) = v1;
  *(void *)(v5 - 128) = v1;
  *(void *)(v5 - 120) = v2;
  *(void *)(v5 - 144) = v3;
  *(void *)(v5 - 136) = v10;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 ^ 0xC6C)))(v5 - 144);
  *(_DWORD *)(v5 - 128) = v0
                        + 1374699841 * ((2 * ((v5 - 144) & 0x4C9CEF60) - (v5 - 144) - 1285353317) ^ 0xDE970892)
                        - 750;
  *(void *)(v5 - 144) = v1;
  *(void *)(v5 - 136) = v6;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 ^ 0xC73)))(v5 - 144);
}

void sub_10037C2A0()
{
}

uint64_t sub_10037C2AC()
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((2815 * (v4 + 1 == v3 + 44)) ^ v1)))(v0);
}

uint64_t sub_10037C374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  return (*(uint64_t (**)(void))(v38 + 8 * ((45 * (((v37 + 1908860039) & 0xFFFD3BF7 ^ 0xF528E96A) + a37 < 0x10)) ^ v37)))();
}

uint64_t sub_10037C3C8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((24 * ((v0 - 757001227) & 0x2D1EEBFB ^ 0x147)) ^ 0x16A)
                                * (**(void **)(v2 + 8 * (v0 ^ 0x1F9)) == 0)) ^ v0)))();
}

uint64_t sub_10037C424(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6, int a7, int a8)
{
  int v12 = a4 + a7;
  uint64_t v13 = (a5 + v12);
  long long v14 = *(_OWORD *)(v9 + v13 - 15);
  long long v15 = *(_OWORD *)(v9 + v13 - 31);
  uint64_t v16 = a1 + v13;
  *(_OWORD *)(v16 - 15) = v14;
  *(_OWORD *)(v16 - 31) = v15;
  return (*(uint64_t (**)(void))(v11 + 8 * (((a8 == v12) * v10) ^ (v8 + a3 + 934))))();
}

uint64_t sub_10037C42C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((314 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x408u)))();
}

void sub_10037C480(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)*(&off_1022AC750
                  + (byte_101D1BE20[byte_101D17DE4[(107
                                                                                                  * (dword_10241AAA0 ^ 0x8A ^ qword_102419E28))
                                                                                - 4] ^ 0x4A] ^ (107
                                                                                              * (dword_10241AAA0 ^ 0x8A ^ qword_102419E28)))
                  + 44);
  uint64_t v3 = (uint64_t *)*(&off_1022AC750
                  + ((107 * ((qword_102419E28 - *v2) ^ 0x8A)) ^ byte_101D1BC20[byte_101D17AE0[(107 * ((qword_102419E28 - *v2) ^ 0x8A))] ^ 0x2C])
                  - 30);
  unint64_t v4 = *v2 ^ (unint64_t)&v8 ^ *v3;
  uint64_t v5 = 2119093099 * v4 + 0x6421A82FEAAAFBAELL;
  uint64_t v6 = 2119093099 * (v4 ^ 0x22F8A8F5CDCFC8ALL);
  *uint64_t v2 = v5;
  *uint64_t v3 = v6;
  LODWORD(v3) = *(_DWORD *)v2;
  int v7 = (char *)*(&off_1022AC750
               + ((107 * (dword_10241AAA0 ^ 0x8A ^ qword_102419E28)) ^ byte_101D1BE20[byte_101D17DE0[(107 * (dword_10241AAA0 ^ 0x8A ^ qword_102419E28))] ^ 0xC5])
               + 66)
     - 4;
  (*(void (**)(void, uint64_t (*)()))&v7[8
                                                   * (byte_101D17BE4[(byte_101D15180[(107 * ((v6 - (_BYTE)v3) ^ 0x8A))] ^ 0x34)
                                                                                    - 4] ^ (107
                                                                                          * ((v6 - (_BYTE)v3) ^ 0x8A)))
                                                   + 16776])(*(&off_1022AC750+ (byte_101D1C028[(byte_101D17EE0[(107 * ((v6 + (_BYTE)v3) ^ 0x8A))] ^ 0x12)- 8] ^ (107 * ((v6 + (_BYTE)v3) ^ 0x8A)))+ 151), sub_10035ECA0);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10037C674@<X0>(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v10 = 3804331 * (((&a3 | 0x2962CEE1) - (&a3 & 0x2962CEE1)) ^ 0x57B7EB17);
  a7 = v10 + 645544907;
  a5 = a1;
  a6 = v7;
  a3 = v10 + 296806376;
  a4 = v10 + v9 + 271;
  uint64_t v11 = (*(uint64_t (**)(unsigned int *))(v8 + 8 * (int)(v9 + 2117)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((401
                                              * (*(_DWORD *)(v7 - 0x38C18B7A1BA31314) == ((v9 - 448585707) & 0x1ABCDFEF ^ 0x241DE997))) ^ v9)))(v11);
}

uint64_t sub_10037C74C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26)
{
  return (*(uint64_t (**)(void))(v26 + 8 * (((((v27 - 1930) | 4) + a26 - 2098) * (a2 == 0)) ^ (v27 - 1342))))();
}

uint64_t sub_10037C780()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 427) ^ (v1 - 846) ^ 0x3BF) & v0) != 0) ^ v1)))();
}

uint64_t sub_10037C7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v67 = STACK[0x504];
  LODWORD(STACK[0x4B4]) = ((14 * a66 - 1194) ^ 0x74) + LODWORD(STACK[0x504]);
  unsigned int v68 = ((14 * a66 - 848164491) & 0x328DF9BD ^ 0x7E35DEB3) + v67;
  unsigned int v69 = LODWORD(STACK[0x67C]) + 577687689;
  BOOL v70 = v68 < 0x9F07A26B;
  BOOL v71 = v68 > v69;
  if (v70 != v69 < 0x9F07A26B) {
    BOOL v71 = v70;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8 * (v71 | (14 * a66))))(a1, a2, a3, a4, 106998629);
}

void sub_10037C860(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1225351577
            * ((-1431559688 - (a1 ^ 0x637B64C4 | 0xAAAC21F8) + (a1 ^ 0x637B64C4 | 0x5553DE07)) ^ 0x15B262D5));
  __asm { BRAA            X13, X17 }
}

uint64_t sub_10037C994@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v3 + 8 * (a1 + 2004)))(*v4);
  *uint64_t v2 = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)(v1 + 344) = 0;
  *(void *)(v1 + 352) = 0;
  *(_DWORD *)(v1 + 360) = 23692131;
  *(_DWORD *)(v1 + 56) = 148787602;
  return result;
}

uint64_t sub_10037C9E0@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((a2 == a1) ^ (v2 - 96)) & 1) * ((v2 + 959) ^ 0x577)) ^ v2)))();
}

uint64_t sub_10037CA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v8 = *(unsigned __int8 *)(v5 + a3 - 0x2A3F22C281B4CB68) - *(unsigned __int8 *)(v4 + a3 - 0x2A3F22C281B4CB68);
  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8
                                            * ((938
                                              * (((v8 << ((v6 - 52) & 0xF3 ^ 0xE0)) & 0x7F1BDEAC) + (v8 ^ v3) == v3)) ^ v6)))(4294925278);
}

uint64_t sub_10037CA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 120) = v16
                         + 1374699841
                         * ((((v17 - 136) | 0x729EA90D) - (v17 - 136) + ((v17 - 136) & 0x8D6156F0)) ^ 0x1F6AB104)
                         + 299;
  *(void *)(v17 - 136) = v14;
  *(void *)(v17 - 128) = a14;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 2088)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((94 * (((a11 < 1) ^ (v16 + 66)) & 1)) ^ v16)))(v18);
}

uint64_t sub_10037CB4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  unsigned int v42 = *(_DWORD *)(&a25 + ((v40 + v37) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v40 + v37)) = (HIBYTE(v42) ^ 0x46) - ((v39 ^ (a6 - 6) ^ 0x74) & (2 * HIBYTE(v42))) + 24;
  *(unsigned char *)(a1 + (v40 + v37 + 1)) = (BYTE2(v42) ^ 0x60) - ((v42 >> 15) & 0x30) + 24;
  *(unsigned char *)(a1 + (v40 + v37 + 2)) = (BYTE1(v42) ^ 0xAB) - ((2 * (BYTE1(v42) ^ 0xAB)) & 0x30) + 24;
  *(unsigned char *)(a1 + (v40 + v37 + 3)) = v42 ^ 0x7D;
  BOOL v43 = v40 + 1835125468 < (a37 + 1493381170);
  if (v40 + 1835125468 < v38 != a37 + 1493381170 < v38) {
    BOOL v43 = a37 + 1493381170 < v38;
  }
  return (*(uint64_t (**)(void))(v41 + 8 * ((v43 | (4 * v43)) ^ v39)))();
}

uint64_t sub_10037CC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return sub_10037CC5C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_10037CC5C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned int a49,unsigned int a50,unsigned int a51,int a52,int a53,unsigned __int8 a54)
{
  int v65 = a54 ^ 0xCB;
  if (v65 == 2)
  {
    int8x16x4_t v107 = vld4q_s8(v54);
    uint8x16_t v91 = (uint8x16_t)veorq_s8(v107.val[0], v61);
    uint16x8_t v92 = vmovl_u8(*(uint8x8_t *)v91.i8);
    uint16x8_t v93 = vmovl_high_u8(v91);
    uint8x16_t v94 = (uint8x16_t)veorq_s8(v107.val[1], v61);
    _Q17 = vmovl_u8(*(uint8x8_t *)v94.i8);
    _Q16 = vmovl_high_u8(v94);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    uint8x16_t v99 = (uint8x16_t)veorq_s8(v107.val[2], v61);
    uint16x8_t v100 = vmovl_high_u8(v99);
    uint16x8_t v101 = vmovl_u8(*(uint8x8_t *)v99.i8);
    v107.val[0] = veorq_s8(v107.val[3], v61);
    v107.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v107.val[0]);
    v107.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v107.val[1]);
    v107.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v107.val[0].i8);
    v107.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v107.val[0]);
    v107.val[0] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q17.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v101.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v92.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v107.val[0].i8));
    v107.val[3] = vorrq_s8(vorrq_s8(vorrq_s8(_Q19, (int8x16_t)vshll_high_n_u16(v101, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v92), 0x18uLL)), v107.val[3]);
    v107.val[1] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v100.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v93.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v107.val[1].i8));
    v107.val[2] = vorrq_s8(vorrq_s8(vorrq_s8(_Q18, (int8x16_t)vshll_high_n_u16(v100, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v93), 0x18uLL)), v107.val[2]);
    v58[2] = vaddq_s32(vsubq_s32((int32x4_t)v107.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v107.val[1], (int32x4_t)v107.val[1]), v62)), v63);
    v58[3] = vaddq_s32(vsubq_s32((int32x4_t)v107.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v107.val[2], (int32x4_t)v107.val[2]), v62)), v63);
    *uint64_t v58 = vaddq_s32(vsubq_s32((int32x4_t)v107.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v107.val[0], (int32x4_t)v107.val[0]), v62)), v63);
    v58[1] = vaddq_s32(vsubq_s32((int32x4_t)v107.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v107.val[3], (int32x4_t)v107.val[3]), v62)), v63);
    unint64_t v102 = &v58[489361572].i32[v59 + 2];
    int v103 = *(v102 - 8) ^ *(v102 - 3);
    int v104 = *(v102 - 16) ^ *(v102 - 14) ^ (v103 + ((v55 + 1421) ^ (v57 + 957)) + ~((2 * v103) & 0x483BD274));
    HIDWORD(v105) = v104 ^ v57;
    LODWORD(v105) = v104;
    *unint64_t v102 = (v105 >> 31) + v57 - ((2 * (v105 >> 31)) & 0x483BD274);
    return (*(uint64_t (**)(void))(v56 + 8 * ((310 * (v60 == 1957446227)) ^ (v55 + 1211))))(a51);
  }
  else if (v65 == 1)
  {
    int8x16x4_t v106 = vld4q_s8(v54);
    uint64_t v66 = (v55 + 719);
    uint8x16_t v67 = (uint8x16_t)veorq_s8(v106.val[0], v61);
    uint16x8_t v68 = vmovl_u8(*(uint8x8_t *)v67.i8);
    int8x16_t v69 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v68.i8);
    int8x16_t v70 = (int8x16_t)vmovl_high_u16(v68);
    uint16x8_t v71 = vmovl_high_u8(v67);
    int8x16_t v72 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v71.i8);
    int8x16_t v73 = (int8x16_t)vmovl_high_u16(v71);
    uint8x16_t v74 = (uint8x16_t)veorq_s8(v106.val[1], v61);
    uint16x8_t v75 = vmovl_high_u8(v74);
    uint16x8_t v76 = vmovl_u8(*(uint8x8_t *)v74.i8);
    uint8x16_t v77 = (uint8x16_t)veorq_s8(v106.val[2], v61);
    _Q21 = (int8x16_t)vmovl_high_u8(v77);
    _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v77.i8);
    int8x16_t v80 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
    __asm { SHLL2           V20.4S, V20.8H, #0x10 }
    int8x16_t v85 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v106.val[0] = veorq_s8(v106.val[3], v61);
    v106.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v106.val[0]);
    v106.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v106.val[1]);
    v106.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v106.val[0].i8);
    v106.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v106.val[0]);
    v106.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v106.val[0].i8), 0x18uLL), v80), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v76.i8, 8uLL), v69));
    v106.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v106.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v76, 8uLL), v70));
    v106.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v106.val[1].i8), 0x18uLL), v85), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v75.i8, 8uLL), v72));
    v106.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v106.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v75, 8uLL), v73));
    int32x4_t v86 = (int32x4_t)veorq_s8(vandq_s8(v106.val[0], v64), (int8x16_t)(*(_OWORD *)&v69 & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
    int32x4_t v87 = (int32x4_t)veorq_s8(vandq_s8(v106.val[3], v64), (int8x16_t)(*(_OWORD *)&v70 & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
    int32x4_t v88 = (int32x4_t)veorq_s8(vandq_s8(v106.val[1], v64), (int8x16_t)(*(_OWORD *)&v72 & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
    int32x4_t v89 = (int32x4_t)veorq_s8(vandq_s8(v106.val[2], v64), (int8x16_t)(*(_OWORD *)&v73 & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
    v58[2] = vaddq_s32(vsubq_s32((int32x4_t)v106.val[1], vaddq_s32(v88, v88)), v63);
    v58[3] = vaddq_s32(vsubq_s32((int32x4_t)v106.val[2], vaddq_s32(v89, v89)), v63);
    *uint64_t v58 = vaddq_s32(vsubq_s32((int32x4_t)v106.val[0], vaddq_s32(v86, v86)), v63);
    v58[1] = vaddq_s32(vsubq_s32((int32x4_t)v106.val[3], vaddq_s32(v87, v87)), v63);
    return (*(uint64_t (**)(void, void, char *, void, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * (int)v66))(*(void *)(v56 + 8 * (int)v66), a49, (char *)*(&off_1022AC750 + (int)(v66 ^ 0x3B7)) - 8, *(&off_1022AC750 + (int)v66 - 611), *(&off_1022AC750 + (int)(v66 ^ 0x311)), v66, 3 * (v66 ^ 0x207), v60 - 15, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
             a19,
             a20,
             a21,
             a22,
             a23);
  }
  else
  {
    LODWORD(a30) = a54 ^ 0xFFFFFFCB;
    return (*(uint64_t (**)(void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * a7))(a51, a50, a1, a2, a3, a4, a5, a6, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             *(void *)(v56 + 8 * a7),
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41);
  }
}

void sub_10037D06C()
{
}

void sub_10037D154()
{
  LODWORD(STACK[0x4EC]) = v0;
  JUMPOUT(0x100376614);
}

uint64_t sub_10037D164@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((((a1 - 524) | 0x20) + 244) * (v3 == v2)) ^ a1)))();
}

uint64_t sub_10037D18C()
{
  STACK[0x4C8] = *(void *)(v2 + 8 * (v1 - 753));
  return sub_10036CF70(STACK[0x3E0]);
}

uint64_t sub_10037D1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  int v53 = 628203409 * ((((v52 - 168) | 0x6CCBA224) - ((v52 - 168) & 0x6CCBA224)) ^ 0xEE43AE17);
  *(void *)(v52 - 168) = a26;
  *(_DWORD *)(v52 - 160) = v53 + v50 + 636;
  *(_DWORD *)(v52 - 156) = a12 - v53;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v51 + 8 * (v50 + 2165)))(v52 - 168);
  uint64_t v55 = a50 & ((v50 ^ 0x50u) + 61);
  *(&a41 + (v55 ^ 0x3C)) = -104;
  return (*(uint64_t (**)(uint64_t))(v51 + 8 * ((1148 * ((v55 ^ 0x3C) > 0x37)) ^ v50)))(v54);
}

uint64_t sub_10037D2C0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((540
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ (v0 + ((v3 + 166451748) & 0xF614276D) - 777)) == v0)) ^ v3)))();
}

void sub_10037D318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  LODWORD(STACK[0x560]) ^= a35;
  JUMPOUT(0x100350D2CLL);
}

uint64_t sub_10037D340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v12 = ((unint64_t)&a9 ^ 0xDEF1F3F7FDAFDB7ELL)
      + 0x319EDF0D6AF72EB0
      + ((2 * (void)&a9) & 0xBDE3E7EFFB5FB6F0);
  a9 = v10 - 1;
  *(unsigned char *)(a2 + a9) = ((v12 - 46) ^ 0xBA) * (v12 - 29);
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * ((1532 * (a9 == 0)) ^ v9)))(1532);
}

uint64_t sub_10037D3E8@<X0>(int a1@<W8>)
{
  BOOL v5 = *(_DWORD *)(v2 + 48) - a1 == (v1 ^ 0x9E0) + 1572051758 || (*(void *)(v2 + 32) | *(void *)(v2 + 56)) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v5 * (3 * (v1 ^ 0x93D) - 865)) ^ v1)))();
}

uint64_t sub_10037D448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((1998 * (((v10 + 2) ^ (v9 + v8 + ((v10 - 1980714422) & 0x760F4EEF ^ 0x94708E6C) < 8)) & 1)) ^ (v10 + 258))))(v7, a2, a3, a4, a5, 3590103018, a7, 94);
}

void sub_10037D4C0()
{
}

uint64_t sub_10037D4CC(int a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((19 * (a1 ^ 0x236) + 1053247620) & 0xC138B77B) - 1023)
                                     * (*(_DWORD *)(v2 - 128) == *(_DWORD *)(v2 - 136))) ^ a1)))();
}

void sub_10037D520()
{
}

uint64_t sub_10037D52C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (((v2 + 364 + v2 - 130 + 1534) * (v1 < 3)) ^ v2)))(a1, v4);
}

void sub_10037D55C()
{
}

void sub_10037D5B4()
{
}

uint64_t sub_10037D5BC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1272
                                * ((((((v0 + 1752195640) & 0x978F9F59) + 729) ^ 0xFBFBBA28) & (2 * (*v1 - 42)))
                                 + ((*v1 - 42) ^ 0x7DFDDFE5) == 2113789925)) ^ v0)))();
}

void sub_10037D630(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned char *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unsigned char *a29,uint64_t a30,unsigned char *a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  a29[3] = (HIBYTE(v39) ^ 0x6E) + (~(2 * (HIBYTE(v39) ^ 0x6E)) | 0x37) - 27;
  a23[9] = BYTE5(v38) ^ 0x86;
  a23[15] = BYTE1(v39) ^ 0x9E;
  a31[8] = v39 ^ 0x58;
  a29[9] = (BYTE2(v39) ^ 0x82) - ((2 * BYTE2(v39)) & 0xC8) - 28;
  a31[26] = (v38 >> ((a32 + 16) ^ 0xE7u)) ^ 0x20;
  if ((a5 ^ 0xA4F3E97D0AAFFA3DLL) >= 0x8134422366A90F03) {
    char v37 = (~(2 * (a5 ^ 0x3D) + 2) | 0xFB) + (a5 ^ 0x3D);
  }
  char v40 = v37 ^ 2;
  if ((a5 ^ 0xA4F3E97D0AAFFA3DLL) >= 0x8134422366A90F03) {
    char v41 = 3;
  }
  else {
    char v41 = 0;
  }
  char v42 = *(unsigned char *)(a36 + 531 + (BYTE6(v38) ^ 0xDLL));
  a23[7] = HIBYTE(v38) ^ 0x5C;
  a31[27] = BYTE1(a5) ^ 0xFA;
  a29[10] = 7 * (v42 ^ 0x9C) - ((14 * (v42 ^ 0x9C)) & 0xC8) - 28;
  a23[10] = v40 + v41;
  HIDWORD(v43) = *(unsigned __int8 *)(a36 + (((BYTE2(a5) ^ 0xAF) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  LODWORD(v43) = (HIDWORD(v43) << 26) ^ (HIDWORD(v43) << 24);
  a31[10] = BYTE4(a5) ^ 0x7D;
  a29[14] = (BYTE3(a5) ^ 0xA) - ((2 * BYTE3(a5)) & 0xC8) - 28;
  a29[20] = (v43 >> 25) ^ 0xF8;
  a29[4] = (BYTE6(a5) ^ 0xF3) - ((2 * (BYTE6(a5) ^ 0xF3)) & 0xC8) - 28;
  a29[16] = (BYTE5(a5) ^ 0xE9) - ((2 * (BYTE5(a5) ^ 0xE9)) & 0xC8) - 28;
  unsigned int v44 = *(unsigned __int8 *)(a36 + (((HIBYTE(a5) ^ 0xA4) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a31[20] = a8 ^ 0x42;
  HIDWORD(v43) = v44;
  LODWORD(v43) = (v44 << 26) ^ (v44 << 24);
  a29[15] = (v43 >> 25) ^ 0xF8;
  unsigned int v45 = *(unsigned __int8 *)(a21 + (((a8 >> 1) & 0x80 | ((unsigned __int16)a8 >> 9)) ^ 0xE1));
  a31[17] = BYTE3(a8) ^ 0x48;
  a23[14] = BYTE4(a8) ^ 0xCC;
  *a29 = BYTE5(a8) + (~(2 * BYTE5(a8)) | 0x37) + 101;
  a31[21] = HIBYTE(a8) ^ 0x1F;
  a31[13] = BYTE2(a8) ^ 0x50;
  a31[3] = (v45 ^ 0x8A ^ (v45 >> 2) & 0x17) + 32;
  a23[12] = BYTE6(a8) ^ 6;
  char v46 = *(unsigned char *)(a36 + 531 + (a7 ^ 0x35) + 2 * (a7 & 0xD5 ^ 0x15) - 4 * (a7 & 0xD5 ^ 0x15) + 213) ^ 0x9C;
  a31[11] = BYTE2(a7) ^ 0xB6;
  a29[5] = 7 * v46 - ((14 * v46) & 0xC8) - 28;
  a29[2] = (BYTE3(a7) ^ 0xE4) - 2 * ((BYTE3(a7) ^ 0xE4) & 0xE7 ^ BYTE3(a7) & 3) - 28;
  a31[25] = BYTE1(a7) ^ 0x76;
  unsigned int v47 = *(unsigned __int8 *)(a21 + (((a7 >> 25) & 0x80 | (a7 >> 33) & 0x7F) ^ 0xB1));
  a31[22] = BYTE5(a7) ^ 0xD3;
  a31[18] = HIBYTE(a7) ^ 0x50;
  a31[2] = BYTE1(a3) ^ 0x56;
  a29[1] = a3 ^ 0xB4;
  a31[30] = BYTE3(v36) ^ 0x5F;
  a31[9] = BYTE2(a3) ^ 0xBE;
  a31[19] = (v47 ^ 0x8A ^ (v47 >> 2) & 0x17) + 32;
  a29[7] = (BYTE6(a7) ^ 0x2B) - ((2 * (BYTE6(a7) ^ 0x2B)) & 0xC8) - 28;
  unsigned int v48 = *(unsigned __int8 *)(a36 + (((BYTE4(v36) ^ 0xF6) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a31[24] = BYTE6(v36) ^ 0x81;
  a31[12] = BYTE5(v36) ^ 0xFD;
  HIDWORD(v43) = v48;
  LODWORD(v43) = (v48 << 26) ^ (v48 << 24);
  a31[1] = HIBYTE(v36) ^ 0x9D;
  a31[23] = (v43 >> 25) ^ 0x1C;
  JUMPOUT(0x10037DA70);
}

uint64_t sub_10037DAB0@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W5>, int a4@<W8>)
{
  uint64_t v8 = 4 * (v5 - 940462581);
  unsigned int v9 = *(_DWORD *)(v6 + 4 * (v5 - 940462582));
  unsigned int v10 = (a3 + ((v9 >> 30) ^ 1) + ((v9 >> 29) | 0xFFFFFFFD) + 1) ^ v9;
  int v11 = ((a3 + 1566083941 * v10 - ((-1162799414 * v10) & a2)) ^ *(_DWORD *)(v6 + v8)) - v5;
  *(_DWORD *)(v6 + v8) = v11 - ((2 * v11 + 1880925162) & a2) - 2098682226;
  uint64_t v12 = 1374699841
      * ((((v7 - 152) ^ 0x38AFDEA21D2C2661 | 0x4104592BF121FA86)
        - (((v7 - 152) ^ 0x38AFDEA21D2C2661) & 0x4104592BF121FA86)) ^ 0x77A7198581F9C4EELL);
  int v13 = (a4 + 1152533251) ^ v12;
  *(_DWORD *)(v7 - 112) = v13 ^ 0x76;
  *(_DWORD *)(v7 - 124) = v13;
  *(_DWORD *)(v7 - 120) = v13 ^ 0x1F;
  *(_DWORD *)(v7 - 128) = -1374699841
                        * ((((v7 - 152) ^ 0x1D2C2661 | 0xF121FA86) - (((v7 - 152) ^ 0x1D2C2661) & 0xF121FA86)) ^ 0x81F9C4EE);
  *(_DWORD *)(v7 - 152) = v12 + a4 - 1358355483;
  STACK[0x5C0] = v12 + 3288584037;
  STACK[0x5C8] = (v5 - 1946845839) ^ (unint64_t)v12;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (a4 ^ (a1 + 1785))))(v7 - 152);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v7 - 116)))(v14);
}

uint64_t sub_10037DC28(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6)
{
  uint64_t v12 = (a4 + a3 + a5);
  uint64_t v13 = v12 + v10;
  uint64_t v14 = (((a6 - 238) | 0x29) ^ 0x434) & v12;
  uint64_t v15 = v9 - v13;
  uint64_t v16 = (v14 | v7) - v13;
  uint64_t v17 = (v14 | v8) - v13;
  unint64_t v18 = v15 + v14;
  BOOL v22 = (unint64_t)(v6 - v10) > 0xF
     && v18 > 0xF
     && (unint64_t)(v16 + 4) > 0xF
     && (unint64_t)(v17 + 3) > 0xF;
  return (*(uint64_t (**)(void))(v11 + 8 * (((2 * v22) | (16 * v22)) ^ (a6 - 370))))();
}

uint64_t sub_10037DCA8()
{
  STACK[0x2D8] = v2;
  return (*(uint64_t (**)(void))(v3 + 8 * (((LODWORD(STACK[0x238]) + 224) * (v1 == v4)) ^ (v0 - 679))))();
}

uint64_t sub_10037DCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, unsigned int a19, int a20)
{
  unsigned int v22 = 1759421093 * ((((2 * &a17) | 0x27E0DDBE) - &a17 - 334524127) ^ 0xA08DDE8B);
  LODWORD(a17) = v22 ^ 0x792966AE;
  HIDWORD(a17) = v22 ^ 0x797D85E2;
  a20 = v22 ^ 0x3C90969C;
  a18 = v22 + 387;
  (*(void (**)(unint64_t **))(v21 + 18200))(&a17);
  a19 = 1667 - 460628867 * ((2 * (&a17 & 0x6D5E5A90) - &a17 - 1834900113) ^ 0xDE372712);
  a17 = &STACK[0x216229CD9A8FA129];
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v21 + 18272))(&a17);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * (((a18 == 605940026) | (2 * (a18 == 605940026))) ^ v20)))(v23);
}

uint64_t sub_10037DDFC@<X0>(int a1@<W0>, int a2@<W2>, uint64_t a3@<X4>, uint64_t a4@<X5>, unsigned int a5@<W6>, uint64_t a6@<X7>, int a7@<W8>)
{
  *(unsigned char *)(a3 + (a7 + a2)) = *(unsigned char *)(a4 + (((v7 + a1) & a5 ^ 0xFFFFFFC0) & (v8 + a6)));
  return (*(uint64_t (**)(void))(v10 + 8 * ((14 * (((v8 + 1) & 0xFFFFFFFC) != v9)) ^ v7)))();
}

void sub_10037DE04()
{
}

uint64_t sub_10037DE14@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40)
{
  return (*(uint64_t (**)(void))(v40 + 8 * (((a40 + 211) * (a1 & 1)) ^ (LODWORD(STACK[0x43C]) + 6))))();
}

void sub_10037DE3C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((((2 * a1) | 0xD7F3130A) - a1 + 335967867) ^ 0x516DF1E7));
  __asm { BRAA            X15, X17 }
}

void sub_10037DF74(_DWORD *a1@<X8>)
{
  int v3 = v1[1] - v2;
  *int v4 = (HIBYTE(v3) ^ 0x93) - ((2 * (HIBYTE(v3) ^ 0x93)) & 0x30) + 24;
  v4[1] = (BYTE2(v3) ^ 0xCE) - ((2 * (BYTE2(v3) ^ 0xCE)) & 0x30) + 24;
  _DWORD v4[2] = (BYTE1(v3) ^ 0xAE) - ((2 * (BYTE1(v3) ^ 0xAE)) & 0x30) + 24;
  v4[3] = v3 ^ 0x27;
  _DWORD *v1 = *a1;
}

uint64_t sub_10037E01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *(_DWORD *)(v22 - 112) = v19 + ((((v22 - 128) | 0x8F9A9E75) + (~(v22 - 128) | 0x7065618A)) ^ 0x350EE616) * v21 + 15;
  *(void *)(v22 - 120) = a18;
  *(void *)(v22 - 104) = v20;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v19 ^ 0xB43)))(v22 - 128);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (int)(((*(_DWORD *)(v22 - 128) > ((v19 + 416) ^ 0x5B89B027u))
                                                   * (((v19 + 748188682) & 0xD3678BE7) + 2036)) ^ v19)))(v23);
}

uint64_t sub_10037E0CC@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  *(unsigned char *)(v4 + v5) = *(unsigned char *)(v7 + (v3 + a2))
                      - ((2 * *(unsigned char *)(v7 + (v3 + a2))) & 0x30)
                      + 24;
  return (*(uint64_t (**)(void))(v6 + 8 * (((2 * (v5 != 63)) | (8 * (v5 != 63))) ^ (a1 + a3 + 995))))();
}

uint64_t sub_10037E11C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unsigned int a33,uint64_t a34,unsigned int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  uint64_t v46 = v41 ^ 0x5CF051CA99A76857;
  uint64_t v47 = (v46 + v43 - ((((a3 + 1329711536) & 0xB0BE37F7) + 0x101407648C877B1) & (2 * v46))) ^ a8;
  uint64_t v48 = __ROR8__(__ROR8__(v42 ^ a34, 12) ^ 0xA9F5355D327AAF0FLL, 52);
  uint64_t v49 = v48 ^ 0x322397601515A6F7;
  unint64_t v50 = ((v48 ^ 0x322397601515A6F7)
       - 0x1E368F770ECDAEC6
       - (((v48 ^ 0x322397601515A6F7) << (((a3 - 117) & 0xEDu) + 121)) & 0xC392E111E264A274)) ^ v45;
  uint64_t v51 = a7 ^ v46;
  unint64_t v52 = (v47 ^ 0x97FBFBAE09CFCCD0) & (v48 ^ 0x322397601515A6F7);
  v47 ^= 0x68040451F630332FuLL;
  unint64_t v53 = (v50 ^ 0xE4C1C31231B4037DLL) & (v48 ^ 0xCDDC689FEAEA5908) ^ v47;
  unint64_t v54 = v52 - ((2 * v52) & 0x48812D3C9FCD0BD4);
  unint64_t v55 = v50 ^ 0xE4C1C31231B4037DLL ^ (a7 ^ v46 ^ 0xC6776643D917DB53) & (a7 ^ 0x398899BC26E824ACLL);
  *((void *)&v56 + 1) = a7 ^ 0xDB53;
  *(void *)&long long v56 = a7 ^ 0xC6776643D9170000;
  unint64_t v57 = ((v54 - 0x5BBF6961B0197A16) ^ a7 ^ v46 ^ 0x6237F0DD96F15EB9) & 0x90DEF08A367683D6 | ((v54
                                                                                                  + 0x2440969E4FE685EALL) ^ a7 ^ v46 ^ 0x6237F0DD96F15EB9) & 0x6F210F75C9897C29;
  unint64_t v58 = (v50 ^ 0x1B3E3CEDCE4BFC82) & (a7 ^ 0xC6776643D917DB53) ^ v49 ^ v53;
  unint64_t v59 = __ROR8__(__ROR8__(v53, 38) ^ __ROR8__(v57, 38) ^ 0xB8AB4977971512F1, 26);
  char v60 = *(unsigned char *)(a36 + ((((v58 >> 61) ^ 4) + 241) ^ 0x78));
  char v61 = 4 * (v60 ^ 0xDD) - ((8 * (v60 ^ 0xDD)) & 0x20) + 18;
  char v62 = (v60 ^ 0xDD) - ((2 * (v60 ^ 0xDD)) & 0x24) + 18;
  char v63 = v60 ^ 0xE5;
  char v64 = v63 + (v62 ^ v61 ^ 0xC7) + 1;
  char v65 = (v61 ^ 0xED) - 91;
  char v66 = v65 - (v64 & 0x40) - ((2 * ((v61 ^ 0xED) + 1)) & 0x48);
  unint64_t v67 = v47 & (v51 ^ 0x398899BC26E824ACLL) ^ __ROR8__((v56 >> 16) ^ 0x4D81525DA35B383ALL, 48) ^ v55;
  char v68 = v65 - ((2 * (v61 ^ 0xED) + 2) & 0x48) + (v64 & 0x40);
  if ((v64 & 0x40 & ((v61 ^ 0xED) + 1)) != 0) {
    char v68 = v66;
  }
  char v69 = v68 ^ ((v64 & 0xBF) - ((2 * v64) & 0x48) - 92);
  unsigned __int8 v70 = ((v69 - ((2 * v69) & 0x24) + 18) ^ v61) + v63;
  *((void *)&v71 + 1) = ~v55;
  *(void *)&long long v71 = v55 ^ 0x92CFC162FD513142;
  unint64_t v72 = __ROR8__(v55, 57) & 0xFFFFFFFFFFFFE07FLL;
  *((void *)&v71 + 1) = v55 ^ 0xE5FCE034C5643794 ^ ((v71 >> 1)
                                                      - ((2 * (v71 >> 1)) & 0xEE6642AC706A0DAELL)
                                                      + 0x77332156383506D7);
  *(void *)&long long v71 = *((void *)&v71 + 1) ^ (v55 << 58) ^ 0xC00000000000000;
  uint64_t v73 = v71 >> 51;
  uint64_t v74 = v58 ^ (v58 >> 39) ^ (8 * v58) ^ (((v70 >> 1) | (v70 << 7)) | (v58 << 25));
  uint64_t v75 = v74 ^ 0xD89957EECB6CF75;
  uint64_t v188 = v73 + (v72 ^ 0x8F8AC7F1FBA51795);
  unint64_t v76 = (((v59 << 45) ^ (v59 << 36)) & 0xFFFFFFF000000000 | (v59 >> 28)) ^ (v59 >> 19) ^ 0xD0A2B87327B31AB3;
  unint64_t v77 = v76 - ((2 * v76) & 0xD02E10C96F16C318) - 0x17E8F79B48749E74;
  unint64_t v78 = v57 ^ (v57 >> 41) ^ (v57 >> 7) ^ 0x85549C8A509D963FLL ^ (((v57 << 57) ^ 0xE400000000000000)
                                                               - ((2 * ((v57 << 57) ^ 0xE400000000000000)) & 0x6666666666666666)
                                                               + 0x3303C932EE2955DFLL);
  uint64_t v79 = v78 & 0x10000000000000;
  uint64_t v80 = v78 & 0x10000000000000 | 0x26469CC092CDD0A8;
  unint64_t v81 = v78 & 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v82 = __ROR8__(v188 - 2 * (v73 & (v72 ^ 0x8F8AC7F1FBA51795)), 13);
  unint64_t v83 = v67 ^ (v67 >> 10) ^ (v67 << 47) ^ ((v67 >> 17) | (v67 << 54));
  if ((v79 & (v57 << 23)) != 0) {
    uint64_t v84 = 0x4C8D3981259BA150 - v80;
  }
  else {
    uint64_t v84 = v80;
  }
  unint64_t v85 = (((v57 << 23) ^ 0xFBA827E079000000) - 0x26469CC092CDD0A8 + v84) ^ v81;
  uint64_t v86 = (v85 - ((2 * v85) & 0x193D4E9663911CA8) + 0xC9EA74B31C88E54) ^ v83;
  uint64_t v87 = __ROR8__(__ROR8__(v86 ^ 0x3BF6957582A2E1EDLL, 23) ^ 0x6C4FE5A873E441B7, 41);
  uint64_t v88 = (v82 + 0x2BD0BF7F4FED1B98 - ((2 * v82) & 0x57A17EFE9FDA3730)) ^ v75;
  unint64_t v89 = v77 ^ v59 ^ v85;
  unint64_t v90 = v87 & (v83 ^ 0x1CAE3FE19723B7B4) ^ v88;
  unint64_t v91 = (v89 ^ 0x226B0BFDAE996D9FLL | ~v87)
      + ((v87 + 0x4FC51D1CB41A0CBFLL - ((2 * v87) & 0x9F8A3A396834197ELL)) ^ v89 ^ 0x6DAE16E11A836120)
      + 1;
  unint64_t v92 = (((v88 ^ 0xBEE74353B47A99EDLL) & (v74 ^ 0xD9A6D5FE5CA42B12))
       + 0x4FC51D1CB41A0CBFLL
       - ((2 * ((v88 ^ 0xBEE74353B47A99EDLL) & (v74 ^ 0xD9A6D5FE5CA42B12))) & 0x9F8A3A396834197ELL)) ^ v89 ^ 0x6DAE16E11A836120;
  unint64_t v93 = v86 ^ (v89 ^ 0xDD94F40251669260) & (v74 ^ 0x26592A01A35BD4EDLL);
  unint64_t v94 = ((v92 ^ (v88 ^ 0x4118BCAC4B856612) & (v83 ^ 0xE351C01E68DC484BLL))
       + 0x2BD0BF7F4FED1B98
       - ((2 * (v92 ^ (v88 ^ 0x4118BCAC4B856612) & (v83 ^ 0xE351C01E68DC484BLL))) & 0x57A17EFE9FDA3730)) ^ v75;
  *((void *)&v96 + 1) = v93 ^ v92 ^ 0x831A3FC;
  *(void *)&long long v96 = v93 ^ v92 ^ 0x43B368A150000000;
  uint64_t v95 = v96 >> 28;
  unint64_t v97 = v91 ^ __ROR8__(((v90 ^ 0xBEE74353B47A99EDLL) >> 27) ^ __ROR8__(v83 ^ 0xE1DE6585B59498FDLL, 27) ^ (((v90 ^ 0xBEE74353B47A99EDLL) << 37)- (((v90 ^ 0xBEE74353B47A99EDLL) << 38) & 0x1379170000000000)- 0x7643747485F20715), 37);
  *(void *)&long long v96 = __ROR8__(v93 ^ v92, 19);
  uint64_t v98 = (v95 ^ v96 ^ 0x347F88766D142B06)
      - ((2 * (v95 ^ v96 ^ 0x347F88766D142B06)) & 0x47E5FB3834D793FELL)
      - 0x5C0D0263E5943601;
  *((void *)&v96 + 1) = v94 ^ 0x1747C156E755AED6;
  *(void *)&long long v96 = v94 ^ 0x4000000000000000;
  unint64_t v99 = (v93 >> 7) ^ (v93 >> 41);
  uint64_t v100 = v94 ^ __ROR8__(v94, 39) ^ (v96 >> 61);
  uint64_t v101 = v100 & 0x7C09B5691D153F3ALL;
  uint64_t v102 = (v99 | (v93 << 57)) ^ (v93 << 23) ^ 0x6207A4EEF68BD2CBLL;
  uint64_t v103 = v102 - 2 * (v102 & 0x716C65CCC677F535 ^ v99 & 0x10) - 0xE939A3339880ADBLL;
  unint64_t v104 = v93 ^ 0x849B3E611EE3467FLL ^ v103;
  unint64_t v105 = v98 ^ v92 ^ v103;
  unint64_t v106 = v97 ^ (v97 << 47) ^ (v97 >> 10) ^ (v97 >> 17) ^ (v97 << 54);
  unint64_t v107 = (v104 & (unint64_t)&_mh_execute_header ^ 0xFCFBEF97DFCBAB5FLL)
       + 2 * (v104 & (unint64_t)&_mh_execute_header);
  unint64_t v108 = v107 + 0x6FADFFFBBFF7DFFFLL;
  unint64_t v109 = v104 & 0xFFFFFFFEFFFFFFFFLL;
  unint64_t v110 = ((v90 ^ 0xD1A234CC1D2559D7) >> 6) ^ (v90 >> 1) ^ (((v90 ^ 0xD1A234CC1D2559D7) << 58) | v90 ^ 0xD1A234CC1D2559D7) ^ ((((v90 ^ 0xD1A234CC1D2559D7) << 58) & (v90 ^ 0xD000000000000000) ^ ((v90 ^ 0xD1A234CC1D2559D7) << 63)) - 0x29CBC6CA9CCBBECCLL - ((2 * (((v90 ^ 0xD1A234CC1D2559D7) << 58) & (v90 ^ 0xD000000000000000))) & 0xAAAAAAAAAAAAAAAALL)) ^ v100 ^ 0x2CBD533E28CF6060;
  unint64_t v111 = v107 + 0x3041068203454A1;
  unint64_t v112 = 0x69A5DF2B7F8F36BDLL - v107;
  if (((v106 ^ 0xBEE8B63400000000) & v111) == 0) {
    unint64_t v112 = v108;
  }
  unint64_t v113 = ((v106 ^ 0xBEE8B6349A795903) - 0x6CA9EF939FC38B5ELL + v112) ^ v109;
  *((void *)&v114 + 1) = v105 ^ 0x5CB92C7C;
  *(void *)&long long v114 = v105 ^ 0x64DAAB5C00000000;
  uint64_t v115 = (v105 ^ 0x64DAAB5C5CB92C7CLL) & ~v113;
  char v116 = v113 & 1;
  *(void *)&long long v114 = __ROR8__((v114 >> 33) ^ __ROR8__((v110 ^ 0x68D11A660E92ACEBLL) & (v100 ^ 0x57695F4B404DEABLL), 33) ^ 0xCF4F457632C10184, 31);
  unint64_t v117 = v113 ^ (((v105 ^ 0x9B2554A3A346D383) & (v100 ^ 0xFA896A0B4BFB2154))
               - ((2 * ((v105 ^ 0x9B2554A3A346D383) & (v100 ^ 0xFA896A0B4BFB2154))) & 0x39E24CC8111CB140)
               - 0x630ED99BF771A760);
  unint64_t v118 = v113 & (v106 ^ 0x411749CB6586A6FCLL) ^ v110 ^ 0x68D11A660E92ACEBLL;
  unint64_t v119 = (v106 ^ 0xBEE8B6349A795903) & (v110 ^ 0x972EE599F16D5314);
  unint64_t v120 = v118 ^ v106 ^ (v115 - ((2 * v115) & 0x3664CED1B9F3C754) + 0x1B326768DCF9E3AALL);
  unint64_t v121 = v114 ^ v100 ^ 0x2CBD533E28CF6060 ^ (v119 - 0x29CBC6CA9CCBBECCLL - ((2 * v119) & 0xAC68726AC6688268));
  unint64_t v122 = (v118 ^ 0x7955EAEC4D48B80CLL) >> v116 >> (v116 ^ 1u);
  uint64_t v123 = v121 ^ 0x4CCB45FBAEFC6148 ^ (((v121 >> 61) ^ (v121 >> 39) ^ 0xAFF5F4)
                                      - 2
                                      * (((v121 >> 61) ^ (v121 >> 39) ^ 0xAFF5F4) & 0x213919 ^ ((v121 >> 61) ^ (v121 >> 39)) & 1)
                                      + 0x1B31BECACE213918);
  uint64_t v124 = (((v121 << 25) ^ 0x62C1BAB0A0000000 ^ -(uint64_t)((v121 << 25) ^ 0x62C1BAB0A0000000) ^ (v123
                                                                                                  - (v123 ^ (v121 << 25) ^ 0x62C1BAB0A0000000)))
        + v123) ^ (8 * v121);
  unint64_t v125 = (v120 >> 10) ^ (v120 << 47) ^ (v120 >> 17);
  unint64_t v126 = ((v117 >> 41) | (v117 << 57)) ^ (v117 >> 7) ^ (((v117 << 23) ^ 0xBE2C4839DA000000)
                                                      - ((2 * ((v117 << 23) ^ 0xBE2C4839DA000000)) & 0x6733D2DF3F000000)
                                                      + 0x3399E96F9FF463B2);
  uint64_t v127 = ((v125 ^ (v120 << 54) ^ 0x3AA141CA739FA744)
        + 0xF9B8EA6E084C39DLL
        - 2 * ((v125 ^ (v120 << 54) ^ 0x3AA141CA739FA744) & 0xF9B8EA6E084C39FLL ^ v125 & 2)) ^ v120;
  unint64_t v128 = v127 ^ 0xBCAAF392F634B202;
  unint64_t v129 = ((v117 ^ (unint64_t)v114) << 36) ^ ((v117 ^ (unint64_t)v114) << 45) ^ ((v117 ^ (unint64_t)v114) >> 19) ^ ((v117 ^ (unint64_t)v114) >> 28) ^ 0x513D96878BF8D33FLL;
  unint64_t v130 = v126 ^ v117 ^ v127;
  unint64_t v131 = v126 ^ v114 ^ (v129 - ((2 * v129) & 0xF8DB91BE7ED52BAALL) + 0x7C6DC8DF3F6A95D5);
  unint64_t v132 = (((v118 << 58) ^ (v118 << 63)) & 0xFC00000000000000 | (v118 >> 6)) ^ v122;
  unint64_t v133 = v118 ^ 0xAB8204976875708DLL ^ ((v132 ^ 0x31E557ABB13522E0)
                                      - 2 * ((v132 ^ 0x31E557ABB13522E0) & 0x52D7EE7B253DC897 ^ v132 & 0x16)
                                      - 0x2D281184DAC2377FLL);
  uint64_t v134 = v124 ^ 0x2F33DE028F539287 ^ (v133 - 0x6F1BF8767646AFF9 - ((2 * v133) & 0x21C80F131372A00ELL));
  uint64_t v135 = (v124 ^ 0x40282674F9153D7FLL) & v133;
  unint64_t v136 = v135 - ((v135 + 0x4B8F257EFB145BDLL - ((2 * v135) & 0x971E4AFDF628B7ALL)) ^ v131 ^ 0xF2996756CE887F9);
  unint64_t v137 = (v130 ^ 0x5C21BB5BC9BCB1D5) & (v127 ^ 0x43550C6D09CB4DFDLL) ^ v134;
  unint64_t v138 = (((v136 ^ ((v131 ^ 0xF46E9BDD7CA63DBBLL) + 1))
         + 0x4B8F257EFB145BDLL
         - ((2 * (v136 ^ ((v131 ^ 0xF46E9BDD7CA63DBBLL) + 1))) & 0x971E4AFDF628B7ALL)) ^ v131 ^ 0xF2996756CE887F9)
       + v135;
  unint64_t v139 = ((v128 & ~v134) - 0x6F1BF8767646AFF9 - ((2 * (v128 & ~v134)) & 0x21C80F131372A00ELL)) ^ v124 ^ 0x2F33DE028F539287 ^ v138;
  unint64_t v140 = (((v124 ^ 0xBFD7D98B06EAC280) & (v131 ^ 0xF46E9BDD7CA63DBBLL))
        - ((2 * ((v124 ^ 0xBFD7D98B06EAC280) & (v131 ^ 0xF46E9BDD7CA63DBBLL))) & 0x57AD75EBF96047A2)
        + 0x2BD6BAF5FCB023D1) ^ v130;
  unint64_t v141 = v138 ^ v140;
  unint64_t v142 = v137 ^ v128 ^ (((2 * v130) ^ 0x47BC89486C869C55) + (v130 ^ 0x5C21BB5BC9BCB1D5)) & (v131 ^ 0xB9164228359C244);
  *((void *)&v114 + 1) = v139 ^ 0x1877DA25;
  *(void *)&long long v114 = v139 ^ 0x425764BB40000000;
  uint64_t v143 = v114 >> 30;
  *((void *)&v114 + 1) = v141 ^ 0x4678E;
  *(void *)&long long v114 = v141 ^ 0xE001A64BC3E00000;
  uint64_t v144 = (v139 << 25) ^ 0x76B0EFB44A000000;
  unint64_t v145 = v137 & 0xFDFEEACE34F5F11BLL ^ 0x3BDA1E3360BF843ALL ^ (v137 & 0x2011531CB0A0EE4 | (v137 << 58));
  uint64_t v146 = (v140 >> 41) ^ 0x39854;
  uint64_t v147 = (v114 >> 19) ^ ((v141 ^ 0x77F701AE350C9204) << 36) ^ ((v141 ^ 0x77F701AE350C9204) >> 28) ^ 0x6E8F58A97F6A7E5FLL;
  unint64_t v148 = v141 ^ 0x4C3BB3008AF0CC2 ^ (v147 - ((2 * v147) & 0xC9843AF79696D698) - 0x1B3DE28434B494B4);
  unint64_t v149 = ((v137 >> 1) ^ 0x5B6D9B30A75EB0BLL) & 0x31427545DE964F6BLL ^ 0xBFA83D92E71D2983 ^ (((2
                                                                                              * (((v137 >> 1) ^ 0x5B6D9B30A75EB0BLL) & 0x31427D45DE964F6BLL)) | 0x5D9DDFBC30062ED0)
                                                                                            - (((v137 >> 1) ^ 0x5B6D9B30A75EB0BLL) & 0x31427D45DE964F6BLL)
                                                                                            - 0x2ECEEFDE18031768);
  uint64_t v150 = ((2 * v149) & 0x3EB5073581B62E22) - v149 - 0x1F5A839AC0DB1712;
  uint64_t v151 = __ROR8__(v143 ^ (v139 >> 61 << 34) ^ 0x84F57132E3442245, 34);
  unint64_t v152 = v145 ^ (v137 << 63);
  *((void *)&v114 + 1) = v140 ^ 0xFFFFFFF9;
  *(void *)&long long v114 = v140 ^ 0x730A97DC668AF80;
  uint64_t v153 = v140 ^ 0x121219943EF395D8 ^ ((v114 >> 7) - ((2 * (v114 >> 7)) & 0x2A4561D3F1367442) + 0x1522B0E9F89B3A21);
  unint64_t v154 = (v151 ^ (v139 >> 39) ^ 0x84AEC9) + v144;
  uint64_t v155 = v151 & v144;
  uint64_t v156 = v153 & v146;
  uint64_t v157 = v153 + v146;
  unint64_t v158 = v154 - 2 * v155;
  uint64_t v159 = v150 ^ 0x73E9AFF9ED616742 ^ (v152 + 0x22A01D02D5BB147 - ((2 * v145) & 0x45403A05AB7628ELL));
  BOOL v160 = v101 == 0x7809200909112110;
  uint64_t v161 = v159 ^ 0x7DD5FE2FD2A44EB8;
  if (v160) {
    uint64_t v161 = v150 ^ 0x73E9AFF9ED616742;
  }
  uint64_t v162 = v158 ^ (8 * v139);
  BOOL v160 = ((v150 ^ 0x71C3AE29C03AD605) & v152) == 0;
  unint64_t v163 = ((v152 + (v150 ^ 0x8E3C51D63FC529FALL) + 1) ^ 0x676DC5BEADFFF6F2)
       - 0x6010400218D1240
       + ((2 * (v152 + (v150 ^ 0x8E3C51D63FC529FALL) + 1)) & 0xCEDB8B7D5BFFEDE4);
  uint64_t v164 = v159 + 2 * ((v161 ^ 0x22A01D02D5BB147) & v145) + 0x616CC1BE8C72E4B2;
  if (v160) {
    unint64_t v163 = v164;
  }
  uint64_t v165 = (v157 - 2 * v156) ^ (v140 << 23);
  unint64_t v166 = v142 ^ (v142 >> 10) ^ (v142 >> 17) ^ (v142 << 47) ^ (v142 << 54);
  *((void *)&v167 + 1) = v163 + 0x1E933E41738D1B4ELL;
  *(void *)&long long v167 = v163 - 0x616CC1BE8C72E4B2;
  unint64_t v168 = v162 ^ 0xAA6A2D4BA2838D66;
  uint64_t v169 = __ROR8__(__ROR8__(v165, 57) ^ __ROR8__(v148, 57) ^ 0xF635FB727C86754, 7);
  unint64_t v170 = v162 ^ 0xAA6A2D4BA2838D66 ^ (v137 >> 6) ^ __ROR8__(__ROR8__(v137, 62) & 0xFFFFBFFFFFFFFFFBLL ^ 0x4F1EC6363424B53DLL ^ (v167 >> 61), 3);
  uint64_t v171 = (v170 ^ 0x3CBE485844A65555) & (v166 ^ 0x5156C560131506D7);
  v170 ^= 0xC341B7A7BB59AAAALL;
  *((void *)&v167 + 1) = v169 ^ 0x16FDF2E892CF90CELL;
  *(void *)&long long v167 = v169;
  uint64_t v172 = v170 & (v162 ^ 0x5595D2B45D7C7299) ^ v169 ^ 0x16FDF2E892CF90CELL;
  unint64_t v173 = (__ROR8__((v167 >> 38) ^ 0x2F851D43D911B5B3, 26) ^ 0xAD6F61F41EB8AF09) & v168 ^ v165 ^ v166;
  unint64_t v174 = v173 ^ v172;
  unint64_t v175 = ((v170 ^ (v165 ^ 0xBEE33457FC800000) & (v166 ^ 0xAEA93A9FECEAF928) ^ *((void *)&v167 + 1) & (v165 ^ v166 ^ 0x104A0EC8106AF928))
        - ((2
          * (v170 ^ (v165 ^ 0xBEE33457FC800000) & (v166 ^ 0xAEA93A9FECEAF928) ^ *((void *)&v167 + 1) & (v165 ^ v166 ^ 0x104A0EC8106AF928))) & 0x40C91216F1B60BAELL)
        - 0x5F9B76F48724FA29) ^ v166;
  *((void *)&v167 + 1) = v173 ^ v172 ^ 0x3D2C8;
  *(void *)&long long v167 = v173 ^ v172 ^ 0xE689D274F4E00000;
  uint64_t v176 = v171 ^ v168 ^ v172 ^ ((v171 ^ v168 ^ v172) >> 39) ^ (8 * (v171 ^ v168 ^ v172)) ^ ((v171 ^ v168 ^ v172) << 25) ^ ((v171 ^ v168 ^ v172) >> 61);
  uint64_t v177 = (v167 >> 19) ^ ((v173 ^ v172 ^ 0xEFB5F137EF9506D7) << 36) ^ ((v173 ^ v172 ^ 0xEFB5F137EF9506D7) >> 28);
  unint64_t v178 = ((v177 ^ 0xB76D41F000000000)
        - 2 * ((v177 ^ 0xB76D41F000000000) & 0x24391250058C6B4FLL ^ v177 & 0xC)
        - 0x5BC6EDAFFA7394BDLL) ^ v174;
  *((void *)&v167 + 1) = v173 ^ 0x39868634586;
  *(void *)&long long v167 = v173 ^ 0x589C180000000000 ^ (((v173 << 57) ^ 0xC00000000000000)
                                                  - ((2 * ((v173 << 57) ^ 0xC00000000000000)) & 0x3400000000000000)
                                                  - 0x6563A210A516E149);
  uint64_t v179 = __ROR8__(__ROR8__(v173, 49) & 0xFFFFFFFFFFC07FFFLL ^ 0xF902D1EF68E2FE32 ^ (v167 >> 42), 22);
  unint64_t v180 = v179 ^ 0xDD74CA3F78583B7ELL;
  if (!v188) {
    unint64_t v180 = 0x228B35C087A7C481;
  }
  unint64_t v181 = v179 & 0xDD74CA3F78583B7ELL ^ __ROR8__(v173, 41) ^ v180 & v179 ^ 0x4648FAC9F8F67B0BLL;
  unint64_t v182 = (v181 + 0x63CE9D31919FFE45 - ((2 * v181) & 0xC79D3A63233FFC8ALL)) ^ v175 ^ (v175 >> 10) ^ (((v175 << 54) ^ (v175 << 47)) & 0xFFFF800000000000 | (v175 >> 17)) ^ 0x8E69E1C3454A0F0FLL ^ (v178 ^ v181 ^ 0xBD4F3FDB9D527245) & (v176 ^ 0xABCF8FE7C463E5DLL);
  unint64_t v183 = v182 ^ 0x481371FFBF78015 ^ (((v182 << 57) ^ 0xAE00000000000000)
                                     - ((2 * ((v182 << 57) ^ 0xAE00000000000000)) & 0x87FFFFFFFFFFFFFFLL)
                                     + 0x43B50625E4DCA842);
  BOOL v184 = a41 - 597611786 < a33;
  unint64_t v185 = (v182 << 23) ^ (v182 >> 7);
  uint64_t v186 = (v182 >> 41) ^ 0x239A18;
  if (a35 > 0xB862C02C != (a41 - 597611786) < 0x479D3FD3) {
    BOOL v184 = a35 > 0xB862C02C;
  }
  return (*(uint64_t (**)(unint64_t, uint64_t, unint64_t))(v44
                                                                                + 8
                                                                                * (a3 ^ ((4 * v184) | (32 * v184)))))(v183 & v186, a2, v185 ^ (v183 | v186) ^ v183 & v186);
}

void sub_10037FA60()
{
}

uint64_t sub_10037FA68@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  uint64_t v55 = *(void *)(v53 + 8 * ((a51 ^ 0x52F) & 0x42231177)) - 8;
  uint64_t v56 = *v52 ^ 0xB1;
  int v57 = (*(unsigned __int8 *)(v55 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DC0) ^ 0xD7)) ^ 0x7E) << 8;
  uint64_t v58 = *(void *)(v53 + 8 * (a51 ^ 0x554u));
  LODWORD(v56) = *(unsigned __int8 *)(v58 + v56) ^ ((a51 ^ 0x52F) + 887);
  uint64_t v59 = *(void *)(v53 + 8 * ((a51 ^ 0x52F) - 95)) - 12;
  int v60 = *(unsigned __int8 *)(v59 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DB5) ^ 0x49));
  HIDWORD(v61) = v60 ^ 2;
  LODWORD(v61) = (v60 ^ 0x28) << 24;
  LOBYTE(v60) = v61 >> 26;
  uint64_t v62 = *(unsigned __int8 *)(v51 - 0x1E6EF7153090DBFLL);
  *(_DWORD *)(v54 - 216) = a1;
  int v63 = v57 | (v56 << 24);
  uint64_t v64 = v62 ^ 0xEC;
  uint64_t v65 = *(void *)(v53 + 8 * ((a51 ^ 0x52F) - 166)) - 8;
  unsigned __int8 v66 = *(unsigned char *)(v65 + v64) - 92;
  LODWORD(v64) = *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DB6) ^ 0xB8));
  unsigned int v67 = v63 & 0xFFFFFF00 | v66 ^ 9;
  int v68 = *(unsigned __int8 *)(v59 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DB9) ^ 0x6BLL));
  HIDWORD(v61) = v68 ^ 2;
  LODWORD(v61) = (v68 ^ 0x28) << 24;
  LOBYTE(v57) = *(unsigned char *)(v55 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DB4) ^ 0x2ELL));
  int v69 = ((v61 >> 26) ^ 0x53) << 16;
  int v70 = *(unsigned __int8 *)(v59 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DC1) ^ 0x47));
  HIDWORD(v61) = v70 ^ 2;
  LODWORD(v61) = (v70 ^ 0x28) << 24;
  unsigned int v71 = v67 & 0xFF00FFFF | (((v61 >> 26) ^ 0x1E) << 16);
  int v72 = v69 | ((*(unsigned __int8 *)(v55 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DB8) ^ 0x77)) ^ 0xB1) << 8);
  unsigned int v73 = (*(unsigned char *)(v65 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DB3) ^ 0x36)) - 92) ^ 0x2A | ((v57 ^ 0xBB) << 8) | ((v60 ^ 0xFB) << 16) | ((v64 ^ 0xFA) << 24);
  LODWORD(v59) = *(unsigned __int8 *)(v59 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DBDLL) ^ 0xCBLL));
  HIDWORD(v61) = v59 ^ 2;
  LODWORD(v61) = (v59 ^ 0x28) << 24;
  LOBYTE(v59) = *(unsigned char *)(v65 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DB7) ^ 0xB5));
  unsigned int v74 = ((*(unsigned char *)(v65 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DBBLL) ^ 0xA9)) - 92) | ((*(unsigned __int8 *)(v55 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DBCLL) ^ 0x30)) ^ 0x4B) << 8)) & 0xFF00FFFF | (((v61 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DBELL) ^ 0x35)) ^ 0x8D) << 24);
  LODWORD(v58) = *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DBALL) ^ 0xBFLL)) ^ 0x94;
  unsigned __int8 v75 = (*(unsigned char *)(v65 + (*(unsigned __int8 *)(v51 - 0x1E6EF7153090DB3) ^ 0x36)) - 92) ^ 0xFD;
  uint64_t v76 = *(void *)(v53 + 8 * (a51 ^ 0x5A6u));
  uint64_t v77 = v60 ^ 0x61u;
  uint64_t v78 = *(void *)(v53 + 8 * ((a51 ^ 0x52F) - 103)) - 8;
  int v79 = v72 | (v58 << 24);
  LODWORD(v58) = *(_DWORD *)(v78 + 4 * v77) ^ *(_DWORD *)(v76 + 4 * v75);
  uint64_t v80 = v64 ^ 0x6Fu;
  *(_DWORD *)(v54 - 168) = a51 ^ 0x52F;
  uint64_t v81 = *(void *)(v53 + 8 * ((a51 ^ 0x52F) & 0x5A982681));
  LODWORD(v58) = ((v58 ^ 0xD0C5AD62) - 2 * ((v58 ^ 0xD0C5AD62) & 0x5BA13F9D ^ v58 & 0x10) + 1537294221) ^ *(_DWORD *)(v81 + 4 * v80);
  uint64_t v82 = v57 ^ 0x83u;
  uint64_t v83 = *(void *)(v53 + 8 * ((a51 ^ 0x52F) - 192));
  LODWORD(v335) = v71;
  LOBYTE(v68) = (v59 - 92) ^ 0xA8;
  unsigned int v84 = v79 & 0xFFFFFF00 | v68;
  unint64_t v334 = __PAIR64__(v73, v74);
  int v238 = *(_DWORD *)(v83 + 4 * v82) ^ v71 ^ (v58 - ((2 * v58) & 0xB9E3A2C0) + 1559351648);
  LODWORD(v59) = v238 ^ v74 ^ 0x4D;
  *(_DWORD *)(v54 - 128) = v59 ^ v84;
  int v85 = v59;
  unsigned __int8 v227 = v238 ^ v74 ^ 0x4D;
  LODWORD(v58) = v59 ^ v84 ^ (v73 - ((2 * v73) & 0xC7AD3A3E) + 1675009311);
  int v250 = ((unsigned __int16)(v59 ^ v84 ^ (v73 - ((2 * v73) & 0x3A3E) - 25313)) >> 8);
  int v263 = BYTE2(v58);
  unsigned int v86 = v58 ^ 0xD921B0B6;
  LODWORD(v82) = *(_DWORD *)(v83 + 4 * (v250 ^ 0x67u)) ^ *(_DWORD *)(v78 + 4 * (BYTE2(v58) ^ 0x68u)) ^ 0x71B2446A;
  LODWORD(v58) = (v82 - ((2 * v82) & 0xFB0C70D0) - 41535384) ^ *(_DWORD *)(v76
                                                                         + 4
                                                                         * ((v59 ^ v84 ^ (v73 - ((2 * v73) & 0x3E) + 31)) ^ 0x36u));
  unsigned int v266 = HIBYTE(v86);
  int v268 = (v59 ^ v84 ^ (v73 - ((2 * v73) & 0x3E) + 31));
  LODWORD(v59) = v238 ^ *(_DWORD *)(v81 + 4 * (HIBYTE(v86) ^ 0x65)) ^ (v58 - ((2 * v58) & 0xB7427F1A) + 1537294221);
  *(_DWORD *)(v54 - 184) = v238 ^ v74;
  HIDWORD(v333) = v84;
  int v338 = v59 ^ 0x55E98FF0;
  *(_DWORD *)(v54 - 176) = v59;
  int v87 = v59 ^ 0x55E98FF0 ^ (v84 - 2 * (v84 & 0x55E98FFD ^ v68 & 0xD) + 1441370096);
  *(_DWORD *)(v54 - 152) = v87;
  int v279 = ((v87 ^ v86) >> 16);
  int v276 = (((unsigned __int16)(v59 ^ 0x8FF0 ^ (v84 - 2 * (v84 & 0x8FFD ^ v68 & 0xD) - 28688)) >> 8) ^ BYTE1(v86));
  LODWORD(v58) = *(_DWORD *)(v83
                           + 4
                           * (((unsigned __int16)(v59 ^ 0x8FF0 ^ (v84
                                                                                 - 2 * (v84 & 0x8FFD ^ v68 & 0xD)
                                                                                 - 28688) ^ v86) >> 8) ^ 0x9Bu)) ^ *(_DWORD *)(v78 + 4 * (v279 ^ 0x2Eu));
  int v348 = v59 ^ 0xF0 ^ (v84 - 2 * (v84 & 0xFD ^ v68 & 0xD) - 16) ^ v86;
  LODWORD(v58) = ((v58 ^ 0x71B2446A) - 2 * ((v58 ^ 0x71B2446A) & 0x7D86387D ^ v58 & 0x15) - 41535384) ^ *(_DWORD *)(v76 + 4 * (v348 ^ 0xD2u));
  unsigned int v88 = v87 ^ v86 ^ 0x8748628F;
  *(_DWORD *)(v54 - 224) = (v87 ^ v86) >> 24;
  LODWORD(v58) = (v58 - ((2 * v58) & 0xB7427F1A) + 1537294221) ^ *(_DWORD *)(v81 + 4 * (((v87 ^ v86) >> 24) ^ 0x69));
  int v89 = v58 ^ v85 ^ 0x9A82588B;
  *(_DWORD *)(v54 - 160) = v58 ^ v85;
  int v328 = v89 ^ v87;
  unsigned int v90 = v89 ^ v87 ^ 0xFACE152D;
  int v91 = ((v328 ^ 0x45561) - 202390586 - 2 * (v90 & 1 ^ (v328 ^ 0x45561) & 0x73EFC3C7)) ^ v88;
  int v314 = ((v91 ^ 0x9547167F) >> 16);
  int v323 = ((unsigned __int16)(v91 ^ 0x167F) >> 8);
  int v92 = *(_DWORD *)(v78 + 4 * (v314 ^ 0x89u)) ^ *(_DWORD *)(v83 + 4 * (v323 ^ 0x3Au)) ^ 0x71B2446A;
  int v318 = (((v328 ^ 0x61) - 58 - 2 * (v90 & 1 ^ (v328 ^ 0x61) & 0xC7)) ^ v88);
  unsigned int v93 = (v92 - ((2 * v92) & 0xFB0C70D0) - 41535384) ^ *(_DWORD *)(v76 + 4 * (v318 ^ 0xE4u));
  HIDWORD(v335) = (v91 ^ 0x9547167F) >> 24;
  unsigned int v94 = (v93 - ((2 * v93) & 0xB7427F1A) + 1537294221) ^ *(_DWORD *)(v81 + 4 * (HIDWORD(v335) ^ 0x1Du));
  unsigned int v289 = v58 ^ v59;
  int v344 = (v94 - ((2 * v94) & 0x662A48BE) - 1290460065) ^ v58 ^ v59;
  *(_DWORD *)(v54 - 256) = v344 ^ 0xB315245F;
  unsigned int v351 = v344 ^ 0xB315245F ^ v58 ^ v85;
  unsigned int v95 = ((v351 ^ 0xFE25CD6D) - ((2 * (v351 ^ 0xFE25CD6D)) & 0xE7DF878C) - 202390586) ^ v88;
  *(_DWORD *)(v54 - 228) = BYTE1(v95);
  LODWORD(v58) = *(_DWORD *)(v83 + 4 * (BYTE1(v95) ^ 0x6Fu));
  *(_DWORD *)(v54 - 240) = BYTE2(v95);
  unsigned int v96 = (v238 ^ v74 ^ 0xBAF72DE4) - 2 * ((v238 ^ v74 ^ 0xBAF72DE4) & 0x55E98FF2 ^ (v238 ^ v74) & 2) + 1441370096;
  LODWORD(v58) = v58 ^ *(_DWORD *)(v78 + 4 * (BYTE2(v95) ^ 0xA8u)) ^ 0x71B2446A;
  unsigned int v355 = HIBYTE(v95);
  LODWORD(v58) = (v58 - ((2 * v58) & 0xB7427F1A) + 1537294221) ^ *(_DWORD *)(v81 + 4 * (HIBYTE(v95) ^ 0x85));
  int v337 = (((v351 ^ 0x6D) - ((2 * (v351 ^ 0x6D)) & 0x8C) - 58) ^ v88);
  LODWORD(v58) = (v58 - 41535384 + (~(2 * v58) | 0x4F38F2F) + 1) ^ *(_DWORD *)(v76 + 4 * (v337 ^ 0x25u));
  unsigned int v350 = v351 ^ v90;
  LODWORD(v82) = (v58 - ((2 * v58) & 0x40EAEA44) + 544568610) ^ v89 ^ v351 ^ v90;
  unsigned int v220 = (v58 - ((2 * v58) & 0x40EAEA44) + 544568610) ^ v89;
  int v97 = v95 ^ v82;
  unsigned int v353 = ((v351 ^ 0xFE25CD6D) - ((2 * (v351 ^ 0xFE25CD6D)) & 0xE7DF878C) - 202390586) ^ v88;
  int v98 = v82;
  *(_DWORD *)(v54 - 208) = v82;
  unsigned int v259 = (v97 ^ 0xEDBEF74F) >> 24;
  int v99 = *(_DWORD *)(v81 + 4 * (v259 ^ 0x1D)) ^ *(_DWORD *)(v78
                                                           + 4 * (((v97 ^ 0xEDBEF74F) >> 16) ^ 0x89u)) ^ 0x76E2AA87;
  int v243 = ((v97 ^ 0xEDBEF74F) >> 16);
  int v246 = ((unsigned __int16)(v97 ^ 0xF74F) >> 8);
  unsigned int v100 = (v99 - ((2 * v99) & 0xB9E3A2C0) + 1559351648) ^ *(_DWORD *)(v83 + 4 * (v246 ^ 0x3Au));
  int v330 = v97;
  int v101 = *(_DWORD *)(v76 + 4 * (v97 ^ 0xD4u));
  LODWORD(v59) = v344 ^ 0xB315245F ^ v58;
  *(_DWORD *)(v54 - 192) = v59;
  int v102 = v59 ^ v101 ^ (v100 - ((2 * v100) & 0xFB0C70D0) - 41535384);
  LODWORD(v82) = v102 ^ v220 ^ 0x7C166C11;
  int v103 = v102;
  int v311 = v102;
  LODWORD(v58) = v82 ^ v353;
  *(_DWORD *)(v54 - 248) = BYTE3(v58);
  int v320 = (v102 ^ v220 ^ 0x11 ^ v353);
  unsigned int v104 = *(_DWORD *)(v81 + 4 * (BYTE3(v58) ^ 0x9B)) ^ *(_DWORD *)(v76 + 4 * (v320 ^ 0x31u)) ^ 0xA62707E5;
  unsigned int v296 = (v58 >> 8) ^ 0x86839A;
  int v299 = BYTE1(v58) ^ 0x9A;
  unsigned int v105 = (v104 - ((2 * v104) & 0xB9E3A2C0) + 1559351648) ^ *(_DWORD *)(v83 + 4 * (BYTE1(v58) ^ 0xA0u));
  int v106 = v58 ^ 0xB4DCF2FE;
  int v293 = BYTE2(v58);
  LODWORD(v58) = (v105 - ((2 * v105) & 0x5A872A14) + 759403786) ^ *(_DWORD *)(v78 + 4 * (BYTE2(v58) ^ 0xAu));
  int v107 = (v58 - ((2 * v58) & 0x8F06CA08) - 947690236) ^ v103;
  *(_DWORD *)(v54 - 136) = v107;
  v107 ^= 0x3A00FFAEu;
  int v108 = v107 ^ v82;
  LODWORD(v80) = v107;
  __int16 v252 = v107;
  LODWORD(v58) = (v107 ^ v82 ^ 0x5A137D54)
               - 2 * ((v107 ^ v82 ^ 0x5A137D54) & 0x7232CFFF ^ (v107 ^ v82) & 8)
               + 1915932663;
  unsigned int v304 = v82 ^ v98;
  int v284 = v82;
  int v109 = v82 ^ v98 ^ 0xF4FC16CA;
  *(_DWORD *)(v54 - 144) = v109;
  unsigned int v110 = v58 ^ v109;
  LODWORD(v58) = ((v58 ^ v109 ^ 0x28BEF568) - 2 * ((v58 ^ v109 ^ 0x28BEF568) & 0x325F6855 ^ (v58 ^ v109) & 1) + 845113428) ^ v106;
  unsigned int v111 = v58 ^ 0x479AB031;
  int v327 = v58;
  int v346 = ((unsigned __int16)(v58 ^ 0xB031) >> 8);
  LODWORD(v58) = *(_DWORD *)(v83 + 4 * (v346 ^ 0x3Au)) ^ *(_DWORD *)(v76 + 4 * (v58 ^ 0xAAu)) ^ 0xA177E908;
  int v112 = BYTE2(v111);
  LODWORD(v58) = (v58 - ((2 * v58) & 0x5A872A14) + 759403786) ^ *(_DWORD *)(v78 + 4 * (BYTE2(v111) ^ 0x89u));
  unsigned int v113 = HIBYTE(v111);
  LODWORD(v58) = (v58 - ((2 * v58) & 0xB7427F1A) + 1537294221) ^ *(_DWORD *)(v81 + 4 * (HIBYTE(v111) ^ 0x1D));
  unsigned int v114 = v58 ^ v82;
  unsigned int v115 = ((v58 ^ v82 ^ 0xA6C48CD5) - ((2 * (v58 ^ v82 ^ 0xA6C48CD5)) & 0x64BED0A8) + 845113428) ^ v106;
  int v342 = BYTE1(v115);
  int v116 = *(_DWORD *)(v81 + 4 * (HIBYTE(v115) ^ 5)) ^ *(_DWORD *)(v83 + 4 * (BYTE1(v115) ^ 0x6Fu)) ^ 0x750EEED;
  int v306 = (((v58 ^ v82 ^ 0xD5) - ((2 * (v58 ^ v82 ^ 0xD5)) & 0xA8) + 84) ^ v106);
  unsigned int v117 = (v116 - ((2 * v116) & 0xFB0C70D0) - 41535384) ^ *(_DWORD *)(v76 + 4 * (v306 ^ 0x25u));
  LODWORD(v82) = v80 ^ v58;
  int v118 = v80 ^ v58 ^ *(_DWORD *)(v78 + 4 * (BYTE2(v115) ^ 0xA8u)) ^ (v117 - ((2 * v117) & 0x5A872A14) + 759403786);
  unsigned int v119 = v110 ^ 0xAF212D68 ^ v118;
  unsigned int v282 = v119;
  int v340 = ((unsigned __int16)(v119 ^ v115) >> 8);
  unsigned int v233 = (v119 ^ v115) >> 24;
  int v120 = v96 ^ v338;
  int v121 = *(_DWORD *)(v83 + 4 * (v340 ^ 0x44u)) ^ *(_DWORD *)(v81 + 4 * (v233 ^ 0x47)) ^ 0x750EEED;
  int v223 = (v119 ^ v115);
  unsigned int v122 = (v121 - ((2 * v121) & 0xFB0C70D0) - 41535384) ^ *(_DWORD *)(v76 + 4 * (v223 ^ 0xD5u));
  int v205 = ((v119 ^ v115) >> 16);
  int v123 = (v122 - ((2 * v122) & 0x5A872A14) + 759403786) ^ *(_DWORD *)(v78 + 4 * (v205 ^ 0xCBu));
  *(_DWORD *)(v54 - 200) = v118;
  LODWORD(v333) = v118 ^ 0x6815A166 ^ (v123 - ((2 * v123) & 0xD1C5199E) - 387806001);
  int v209 = v118 ^ v114;
  HIDWORD(v332) = v118 ^ v114 ^ 0x48915073 ^ (v333 - ((2 * v333) & 0xD8673ECE) + 1815322471);
  LODWORD(v332) = HIDWORD(v332) ^ v119 ^ 0x42632BF0 ^ 0x4662A266;
  HIDWORD(a43) = (v332 - 2 * (v332 & 0x5071E69F ^ (HIDWORD(v332) ^ v119 ^ 0x42632BF0) & 8) + 1349641879) ^ v119 ^ v115;
  LODWORD(v81) = *(_DWORD *)(v54 - 168);
  uint64_t v124 = (char *)*(&off_1022AC750 + (int)v81 - 100) - 8;
  unsigned int v125 = (((v82 ^ 0x1B9155BD) >> 16)
        - 1227027088
        + ((2 * ((v82 ^ 0x1B9155BD) >> 16) + 88) & 0x286 ^ 0xFFF37BFF)) ^ *(_DWORD *)&v124[4 * (((v82 ^ 0x1B9155BD) >> 16) ^ 0x2D)];
  unsigned int v126 = ((BYTE2(v115) ^ 0x89) - 1227027088 + ((2 * (BYTE2(v115) ^ 0x89) + 88) & 0x286 ^ 0xFFF37BFF)) ^ *(_DWORD *)&v124[4 * (BYTE2(v115) ^ 0xA4)];
  uint64_t v127 = (uint64_t)*(&off_1022AC750 + (int)v81 - 88);
  LODWORD(v78) = (v125 - ((2 * v125) & 0x9C5E5A9E) - 835769009) ^ *(_DWORD *)(v127
                                                                            + 4
                                                                            * (((unsigned __int16)(v80 ^ v58) >> 8) ^ 0x47u));
  uint64_t v128 = (uint64_t)*(&off_1022AC750 + (v81 ^ 0x45));
  unsigned int v129 = (v126 - ((2 * v126) & 0xD5E246A2) + 1794188113) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v115) ^ 0xCC));
  unint64_t v130 = (char *)*(&off_1022AC750 + (v81 ^ 0x66)) - 12;
  int v131 = *(_DWORD *)&v130[4 * (v110 ^ 0x68 ^ v114 ^ 0x53)];
  unsigned int v215 = v110 ^ 0xAF212D68 ^ v114;
  unsigned int v132 = *(_DWORD *)&v124[4 * (BYTE2(v215) ^ 0xAA)] ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v215) ^ 0x3E)) ^ ((BYTE2(v215) ^ 0x87) - 1227027088 + ((2 * (BYTE2(v215) ^ 0x87) + 88) & 0x286 ^ 0xFFF37BFF)) ^ (181304767 * v131 - ((362609534 * v131 - 354551254) & 0xD5E246A2) + 1616912486);
  LODWORD(v76) = *(_DWORD *)&v130[4 * (v114 ^ 0x74)];
  LODWORD(v76) = (181304767 * v76 - ((362609534 * v76 - 354551254) & 0x9C5E5A9E) - 1013044636) ^ *(_DWORD *)(v127 + 4 * (BYTE1(v114) ^ 0x5Au));
  int v325 = v76 - ((2 * v76) & 0xD5E246A2);
  unsigned int v339 = (BYTE2(v114) ^ 0x4C) - 1227027088 + ((2 * (BYTE2(v114) ^ 0x4C) + 88) & 0x286 ^ 0xFFF37BFF);
  unsigned int v309 = v129 - ((2 * v129) & 0x9C5E5A9E);
  unsigned int v301 = v132 - ((2 * v132) & 0x9C5E5A9E);
  LODWORD(v336) = (v78 - ((2 * v78) & 0xD5E246A2) + 1794188113) ^ *(_DWORD *)(v128
                                                                            + 4
                                                                            * ((v82 ^ 0x1B9155BD) >> 24)) ^ (181304767 * *(_DWORD *)&v130[4 * (v82 ^ 0x7D)] - 177275627);
  unsigned __int8 v272 = BYTE1(v120);
  LODWORD(v76) = *(_DWORD *)&v124[4 * (((v120 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v120 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                              - 1227027088
                                                                                              + ((2
                                                                                                * (((v120 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                                + 88) & 0x286 ^ 0xFFF37BFF));
  LODWORD(v82) = *(_DWORD *)(v54 - 152) ^ 0x31676F78;
  unsigned int v133 = *(_DWORD *)&v124[4 * (BYTE2(v82) ^ 0x7B)] ^ ((BYTE2(v82) ^ 0x56)
                                                    - 1227027088
                                                    + ((2 * (BYTE2(v82) ^ 0x56) + 88) & 0x286 ^ 0xFFF37BFF));
  LODWORD(v82) = (v133 - ((2 * v133) & 0xD5E246A2) + 1794188113) ^ *(_DWORD *)(v128 + 4 * BYTE3(v82));
  unsigned int v134 = *(_DWORD *)&v124[4 * (v279 ^ 0x34)] ^ ((v279 ^ 0x19)
                                              - 1227027088
                                              + ((2 * (v279 ^ 0x19) + 88) & 0x286 ^ 0xFFF37BFF));
  LODWORD(v78) = (v134 - ((2 * v134) & 0x9C5E5A9E) - 835769009) ^ *(_DWORD *)(v127 + 4 * (v276 ^ 5u));
  int v277 = v82 - ((2 * v82) & 0x9C5E5A9E);
  int v280 = v78 - ((2 * v78) & 0xD5E246A2);
  LODWORD(v78) = *(_DWORD *)&v130[4 * (*(_DWORD *)(v54 - 176) ^ 0xDF)];
  LODWORD(v82) = *(_DWORD *)(v54 - 176) ^ 0x5A18571F;
  LODWORD(v78) = *(_DWORD *)(v128 + 4 * BYTE3(v82)) ^ ((BYTE2(v82) ^ 0xC1)
                                                       - 1227027088
                                                       + ((2 * (BYTE2(v82) ^ 0xC1) + 88) & 0x286 ^ 0xFFF37BFF)) ^ *(_DWORD *)&v124[4 * (BYTE2(v82) ^ 0xEC)] ^ (181304767 * v78 - ((362609534 * v78 - 354551254) & 0xD5E246A2) + 1616912486);
  int v273 = v78 - ((2 * v78) & 0x9C5E5A9E);
  int v135 = *(_DWORD *)(v128 + 4 * ((v120 ^ 0xE9B45E6C) >> 24)) ^ (v76 - ((2 * v76) & 0xD5E246A2) + 1794188113);
  unsigned int v212 = v120 ^ 0xAC;
  int v257 = v135 - 835769008 + (~(2 * v135) | 0x63A1A561);
  LODWORD(v78) = *(_DWORD *)&v124[4 * (v112 ^ 0xDE)] ^ ((v112 ^ 0xF3)
                                                      - 1227027088
                                                      + ((2 * (v112 ^ 0xF3) + 88) & 0x286 ^ 0xFFF37BFF));
  LODWORD(v82) = *(_DWORD *)&v124[4 * (((v108 ^ 0x35C48CD5u) >> 16) ^ 0xFE)] ^ ((((v108 ^ 0x35C48CD5u) >> 16) ^ 0xD3)
                                                                                               - 1227027088
                                                                                               + ((2
                                                                                                 * (((v108 ^ 0x35C48CD5u) >> 16) ^ 0xD3)
                                                                                                 + 88) & 0x286 ^ 0xFFF37BFF));
  int v136 = *(_DWORD *)&v130[4 * (v110 ^ 0xAD)];
  LODWORD(v78) = (v78 - ((2 * v78) & 0xD5E246A2) + 1794188113) ^ *(_DWORD *)(v128 + 4 * (v113 ^ 0x36));
  int v137 = BYTE2(*(_DWORD *)(v54 - 136));
  unsigned int v138 = *(_DWORD *)&v124[4 * (v137 ^ 0x2C)] ^ ((v137 ^ 1) - 1227027088 + ((2 * (v137 ^ 1) + 88) & 0x286 ^ 0xFFF37BFF));
  unsigned int v139 = (v138 - ((2 * v138) & 0x9C5E5A9E) - 835769009) ^ *(_DWORD *)(v127 + 4 * (HIBYTE(v252) ^ 0x8Bu));
  int v260 = v78 - ((2 * v78) & 0x9C5E5A9E);
  LODWORD(v78) = *(_DWORD *)(v127 + 4 * (((unsigned __int16)(v110 ^ 0xF568) >> 8) ^ 0x20u)) ^ ((((v110 ^ 0xCDBEF568) >> 16) ^ 0xD7) - 1227027088 + ((2 * (((v110 ^ 0xCDBEF568) >> 16) ^ 0xD7) + 88) & 0x286 ^ 0xFFF37BFF)) ^ *(_DWORD *)&v124[4 * (((v110 ^ 0xCDBEF568) >> 16) ^ 0xFA)] ^ (181304767 * v136 - ((362609534 * v136 - 354551254) & 0x9C5E5A9E) - 1013044636);
  LODWORD(v82) = (v82 - ((2 * v82) & 0xD5E246A2) + 1794188113) ^ *(_DWORD *)(v128 + 4 * ((v108 ^ 0x35C48CD5u) >> 24)) ^ (181304767 * *(_DWORD *)&v130[4 * (v108 ^ 0x3D)] - 177275627);
  unsigned int v235 = ((unsigned __int16)(v108 ^ 0x8EA4) >> 8) ^ 0x14;
  unsigned int v199 = v252 ^ 0xA3;
  int v240 = v82 - ((2 * v82) & 0x9C5E5A9E);
  int v253 = v78 - ((2 * v78) & 0xD5E246A2);
  unsigned int v140 = v250 ^ 0xD;
  LODWORD(v80) = *(_DWORD *)(v54 - 128);
  unsigned int v217 = BYTE1(v80) ^ 0xF5;
  unsigned int v230 = v238 ^ 0x2BEAE26B;
  LODWORD(v78) = *(_DWORD *)&v124[4 * (((v238 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v238 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                               - 1227027088
                                                                                               + ((2
                                                                                                 * (((v238 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                                 + 88) & 0x286 ^ 0xFFF37BFF)) ^ (181304767 * *(_DWORD *)&v130[4 * (v238 ^ 0x1E)] - 177275627);
  LODWORD(v78) = (v78 - ((2 * v78) & 0x9C5E5A9E) - 835769009) ^ *(_DWORD *)(v127 + 4 * (BYTE1(v238) ^ 8u));
  LODWORD(v82) = *(_DWORD *)&v124[4 * (v263 ^ 0xF6)] ^ ((v263 ^ 0xDB)
                                                      - 1227027088
                                                      + ((2 * (v263 ^ 0xDB) + 88) & 0x286 ^ 0xFFF37BFF));
  int v141 = *(_DWORD *)&v130[4 * (v227 ^ 0x55)];
  int v264 = v78 - ((2 * v78) & 0xD5E246A2);
  int v202 = BYTE2(v80);
  unsigned int v251 = (BYTE2(v80) ^ 0xA7) - 1227027088 + ((2 * (BYTE2(v80) ^ 0xA7) + 88) & 0x286 ^ 0xFFF37BFF);
  unsigned int v228 = v266 ^ 0x4B;
  LODWORD(v78) = (v82 - ((2 * v82) & 0x9C5E5A9E) - 835769009) ^ *(_DWORD *)(v127 + 4 * v140) ^ (181304767
                                                                                                * *(_DWORD *)&v130[4 * (v268 ^ 0x45)]
                                                                                                - 177275627);
  unsigned int v211 = HIBYTE(v110) ^ 0xBA;
  LODWORD(v81) = *(_DWORD *)(v54 - 184);
  int v239 = v78 - ((2 * v78) & 0xD5E246A2);
  LODWORD(v78) = (181304767 * v141 - ((362609534 * v141 - 354551254) & 0xD5E246A2) + 1616912486) ^ ((BYTE2(v81) ^ 0xBA)
                                                                                                  - 1227027088
                                                                                                  + ((2 * (BYTE2(v81) ^ 0xBA) + 88) & 0x286 ^ 0xFFF37BFF)) ^ *(_DWORD *)(v128 + 4 * (BYTE3(v81) ^ 0x2F)) ^ *(_DWORD *)&v124[4 * (BYTE2(v81) ^ 0x97)];
  int v207 = v78 - ((2 * v78) & 0x9C5E5A9E);
  LODWORD(v80) = *(_DWORD *)(v54 - 208);
  LODWORD(v78) = *(_DWORD *)&v124[4 * (BYTE2(v80) ^ 0x49)] ^ ((BYTE2(v80) ^ 0x64)
                                                            - 1227027088
                                                            + ((2 * (BYTE2(v80) ^ 0x64) + 88) & 0x286 ^ 0xFFF37BFF));
  unsigned int v142 = *(_DWORD *)(v54 - 192);
  LODWORD(v82) = *(_DWORD *)&v124[4 * (BYTE2(v142) ^ 0x56)] ^ ((BYTE2(v142) ^ 0x7B)
                                                             - 1227027088
                                                             + ((2 * (BYTE2(v142) ^ 0x7B) + 88) & 0x286 ^ 0xFFF37BFF));
  int v143 = *(_DWORD *)&v130[4 * (v220 ^ 0xFB)];
  LODWORD(v78) = (v78 - ((2 * v78) & 0x9C5E5A9E) - 835769009) ^ *(_DWORD *)(v127 + 4 * (BYTE1(v80) ^ 0xB7u)) ^ (181304767 * *(_DWORD *)&v130[4 * (v80 ^ 0x3C)] - 177275627);
  unsigned int v144 = (181304767 * v143 - ((362609534 * v143 - 354551254) & 0x9C5E5A9E) - 1013044636) ^ *(_DWORD *)(v127 + 4 * (BYTE1(v220) ^ 0xEFu));
  LODWORD(v201) = v78 - ((2 * v78) & 0xD5E246A2);
  HIDWORD(v200) = v144 - ((2 * v144) & 0xD5E246A2);
  LODWORD(v78) = (v82 - ((2 * v82) & 0xD5E246A2) + 1794188113) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v142) ^ 0xD9)) ^ (181304767 * *(_DWORD *)&v130[4 * (v142 ^ 0x79)] - 177275627);
  LODWORD(v82) = *(_DWORD *)&v124[4 * (v243 ^ 0x86)] ^ ((v243 ^ 0xAB)
                                                      - 1227027088
                                                      + ((2 * (v243 ^ 0xAB) + 88) & 0x286 ^ 0xFFF37BFF));
  LODWORD(v82) = (v82 - ((2 * v82) & 0xD5E246A2) + 1794188113) ^ *(_DWORD *)(v128 + 4 * v259);
  unsigned int v244 = v246 ^ 0xEE;
  int v247 = v82 - ((2 * v82) & 0x9C5E5A9E);
  int v269 = v78 - 835769008 + (~(2 * v78) | 0x63A1A561);
  int v198 = ((v220 ^ 0x7C166C11) >> 16);
  unsigned int v267 = (v198 ^ 0x65) - 1227027088 + ((2 * (v198 ^ 0x65) + 88) & 0x286 ^ 0xFFF37BFF);
  LODWORD(v76) = *(_DWORD *)&v124[4 * (v205 ^ 0x8B)] ^ ((v205 ^ 0xA6)
                                                      - 1227027088
                                                      + ((2 * (v205 ^ 0xA6) + 88) & 0x286 ^ 0xFFF37BFF));
  int v145 = ((v119 ^ 0x42632BF0) >> 16);
  unsigned int v255 = HIBYTE(v220) ^ 0xE8;
  unsigned int v146 = *(_DWORD *)(v54 - 200);
  unsigned int v147 = *(_DWORD *)&v124[4 * (BYTE2(v146) ^ 0xE8)] ^ ((BYTE2(v146) ^ 0xC5)
                                                     - 1227027088
                                                     + ((2 * (BYTE2(v146) ^ 0xC5) + 88) & 0x286 ^ 0xFFF37BFF));
  LODWORD(v82) = (181304767 * *(_DWORD *)&v130[4 * (v146 ^ 0xCA)] - 177275627) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v146) ^ 0x8E)) ^ (v147 - ((2 * v147) & 0xD5E246A2) + 1794188113);
  unsigned int v221 = v118 ^ v114 ^ 0x44039AAA;
  LODWORD(v78) = (181304767 * *(_DWORD *)&v130[4 * (v209 ^ 0xDB)] - 177275627) ^ (((v209 ^ 0x44039AAAu) >> 16)
                                                                                                 - 1227027088
                                                                                                 + ((2 * ((v209 ^ 0x44039AAAu) >> 16) + 88) & 0x286 ^ 0xFFF37BFF)) ^ *(_DWORD *)&v124[4 * (((v209 ^ 0x44039AAAu) >> 16) ^ 0x2D)];
  int v206 = v82 - ((2 * v82) & 0x9C5E5A9E);
  LODWORD(v78) = (v78 - ((2 * v78) & 0x9C5E5A9E) - 835769009) ^ *(_DWORD *)(v127
                                                                          + 4
                                                                          * (((unsigned __int16)(v118 ^ v114) >> 8) ^ 0xC0u));
  LODWORD(v76) = *(_DWORD *)(v128 + 4 * (v233 ^ 0x22)) ^ (181304767 * *(_DWORD *)&v130[4 * (v223 ^ 0xFE)] - 177275627) ^ (v76 - ((2 * v76) & 0xD5E246A2) + 1794188113);
  int v234 = v78 - ((2 * v78) & 0xD5E246A2);
  int v224 = v76 - ((2 * v76) & 0x9C5E5A9E);
  LODWORD(v76) = *(_DWORD *)&v130[4 * (v289 ^ 0xEC)];
  LODWORD(v78) = *(_DWORD *)&v124[4 * (v314 ^ 0x32)] ^ ((v314 ^ 0x1F)
                                                      - 1227027088
                                                      + ((2 * (v314 ^ 0x1F) + 88) & 0x286 ^ 0xFFF37BFF));
  LODWORD(v82) = *(_DWORD *)&v130[4 * (*(_DWORD *)(v54 - 160) ^ 0xE6)];
  LODWORD(v76) = *(_DWORD *)(v128 + 4 * (HIBYTE(v289) ^ 0xCA)) ^ ((BYTE2(v289) ^ 0x2F)
                                                                  - 1227027088
                                                                  + ((2 * (BYTE2(v289) ^ 0x2F) + 88) & 0x286 ^ 0xFFF37BFF)) ^ *(_DWORD *)&v124[4 * (BYTE2(v289) ^ 2)] ^ (181304767 * v76 - ((362609534 * v76 - 354551254) & 0xD5E246A2) + 1616912486);
  LODWORD(v78) = (v78 - ((2 * v78) & 0x9C5E5A9E) - 835769009) ^ *(_DWORD *)(v127 + 4 * (v323 ^ 0x8Cu)) ^ (181304767 * *(_DWORD *)&v130[4 * (v318 ^ 0xD9)] - 177275627);
  unsigned int v148 = *(_DWORD *)(v54 - 160) ^ 0x49A657C7;
  LODWORD(v82) = *(_DWORD *)(v128 + 4 * HIBYTE(v148)) ^ ((BYTE2(v148) ^ 0x35)
                                                         - 1227027088
                                                         + ((2 * (BYTE2(v148) ^ 0x35) + 88) & 0x286 ^ 0xFFF37BFF)) ^ *(_DWORD *)&v124[4 * (BYTE2(v148) ^ 0x18)] ^ (181304767 * v82 - ((362609534 * v82 - 354551254) & 0xD5E246A2) + 1616912486);
  unsigned int v149 = *(_DWORD *)&v124[4 * (((v328 ^ 0x3EF9431Eu) >> 16) ^ 0x2D)] ^ (((v328 ^ 0x3EF9431Eu) >> 16)
                                                                                       - 1227027088
                                                                                       + ((2
                                                                                         * ((v328 ^ 0x3EF9431Eu) >> 16)
                                                                                         + 88) & 0x286 ^ 0xFFF37BFF));
  unsigned int v324 = HIDWORD(v335) ^ 0xAA;
  HIDWORD(v335) = (v76 - ((2 * v76) & 0x9C5E5A9E) - 835769009) ^ *(_DWORD *)(v127 + 4 * (BYTE1(v289) ^ 0x2Eu));
  int v319 = v78 - ((2 * v78) & 0xD5E246A2);
  unsigned int v150 = (v149 - ((2 * v149) & 0xD5E246A2) + 1794188113) ^ *(_DWORD *)(v128 + 4 * ((v328 ^ 0x3EF9431Eu) >> 24)) ^ (181304767 * *(_DWORD *)&v130[4 * (v328 ^ 0x8E)] - 177275627);
  unsigned int v290 = BYTE1(v328) ^ 0xC3;
  int v329 = v82 - ((2 * v82) & 0x9C5E5A9E);
  unsigned int v315 = v150 - ((2 * v150) & 0x9C5E5A9E);
  LODWORD(v76) = *(_DWORD *)&v124[4 * (v293 ^ 0xC1)] ^ ((v293 ^ 0xEC)
                                                      - 1227027088
                                                      + ((2 * (v293 ^ 0xEC) + 88) & 0x286 ^ 0xFFF37BFF));
  int v151 = (v76 - ((2 * v76) & 0x9C5E5A9E) - 835769009) ^ *(_DWORD *)(v127
                                                                  + 4 * ((v299 - ((2 * v296) & 0x166) + 179) ^ 0x54)) ^ (181304767 * *(_DWORD *)&v130[4 * (v320 ^ 0xE2)] - 177275627);
  LODWORD(v76) = *(_DWORD *)&v130[4 * (*(_DWORD *)(v54 - 144) ^ 0xCB)];
  unsigned int v203 = BYTE1(v311) ^ 0x77;
  LODWORD(v76) = (181304767 * v76 - ((362609534 * v76 - 354551254) & 0xD5E246A2) + 1616912486) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v304) ^ 0xBE));
  int v321 = v151 - ((2 * v151) & 0xD5E246A2);
  int v210 = v76 - ((2 * v76) & 0x9C5E5A9E);
  unsigned int v294 = v284 ^ 0xEEA2BFA8;
  LODWORD(v76) = *(_DWORD *)&v124[4 * (((v284 ^ 0xEEA2BFA8) >> 16) ^ 0x86)] ^ ((((v284 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                              - 1227027088
                                                                                              + ((2
                                                                                                * (((v284 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                                + 88) & 0x286 ^ 0xFFF37BFF));
  int v152 = (181304767 * *(_DWORD *)&v130[4 * (v284 ^ 0x68)] - 177275627) ^ *(_DWORD *)(v127 + 4 * (BYTE1(v284) ^ 0x55u)) ^ (v76 - ((2 * v76) & 0x9C5E5A9E) - 835769009);
  unsigned int v285 = v311 ^ 0x231B9DB5;
  int v194 = ((v311 ^ 0x231B9DB5u) >> 16);
  unsigned int v300 = (v194 ^ 0xC1) - 1227027088 + ((2 * (v194 ^ 0xC1) + 88) & 0x286 ^ 0xFFF37BFF);
  LODWORD(v197) = v152 - ((2 * v152) & 0xD5E246A2);
  int v153 = BYTE2(v304);
  unsigned int v297 = (BYTE2(v304) ^ 0xFA) - 1227027088 + ((2 * (BYTE2(v304) ^ 0xFA) + 88) & 0x286 ^ 0xFFF37BFF);
  unsigned int v154 = v344 ^ 0x22B7EB4B;
  int v155 = *(_DWORD *)&v130[4 * (v337 ^ 0x74)];
  int v156 = *(_DWORD *)(v54 - 152);
  LODWORD(v76) = *(_DWORD *)&v130[4 * v212];
  LODWORD(v82) = *(_DWORD *)&v130[4 * (v311 ^ 0x75)];
  int v157 = *(_DWORD *)&v130[4 * (v350 ^ 0xE)];
  int v158 = *(_DWORD *)&v130[4 * (v351 ^ 0x2A)];
  int v312 = 181304767 * *(_DWORD *)&v130[4 * (v306 ^ 0x60)] - 177275627;
  int v345 = 181304767 * *(_DWORD *)&v130[4 * (v348 ^ 0xFB)] - 177275627;
  int v213 = 181304767 * *(_DWORD *)&v130[4 * (v156 ^ 0xB8)] - 177275627;
  HIDWORD(v336) = 181304767 * v76 - 177275627;
  int v305 = 181304767 * *(_DWORD *)&v130[4 * v199] - 177275627;
  int v307 = 181304767 * *(_DWORD *)&v130[4 * (v327 ^ 0xF0)] - 177275627;
  int v349 = 181304767 * *(_DWORD *)&v130[4 * (*(_DWORD *)(v54 - 128) ^ 0x57)] - 177275627;
  LODWORD(v200) = 181304767 * *(_DWORD *)&v130[4 * (v330 ^ 0x72)] - 177275627;
  HIDWORD(v195) = 181304767 * *(_DWORD *)&v130[4 * (v119 ^ 0x78)] - 177275627;
  LODWORD(v196) = 181304767 * v82 - 177275627;
  HIDWORD(v196) = 181304767 * *(_DWORD *)&v130[4 * (v154 ^ 0x39)] - 177275627;
  LODWORD(v130) = (181304767 * v155 - ((362609534 * v155 - 354551254) & 0xD5E246A2) + 1616912486) ^ *(_DWORD *)(v128 + 4 * (v355 ^ 0x7B));
  unsigned int v159 = *(_DWORD *)&v124[4 * (BYTE2(v350) ^ 0x17)] ^ ((BYTE2(v350) ^ 0x3A)
                                                     - 1227027088
                                                     + (~(2 * (BYTE2(v350) ^ 0x3A) + 824408) | 0xFFF37979)) ^ (181304767 * v157 - 177275627);
  unsigned int v160 = (v159 - ((2 * v159) & 0x9C5E5A9E) - 835769009) ^ *(_DWORD *)(v127 + 4 * (BYTE1(v350) ^ 0xE4u));
  LODWORD(v82) = *(_DWORD *)&v124[4 * (BYTE2(v154) ^ 0x3C)] ^ ((BYTE2(v154) ^ 0x11)
                                                             - 1227027088
                                                             + ((2 * (BYTE2(v154) ^ 0x11) + 88) & 0x286 ^ 0xFFF37BFF));
  unsigned int v161 = ((BYTE2(v351) ^ 0x37) - 1227027088 + ((2 * (BYTE2(v351) ^ 0x37) + 88) & 0x286 ^ 0xFFF37BFF)) ^ *(_DWORD *)&v124[4 * (BYTE2(v351) ^ 0x1A)];
  int v288 = *(_DWORD *)&v124[4 * (BYTE2(v114) ^ 0x61)];
  int v356 = *(_DWORD *)&v124[4 * (v202 ^ 0x8A)];
  unsigned int v162 = v130 - ((2 * v130) & 0x9C5E5A9E);
  HIDWORD(v201) = *(_DWORD *)&v124[4 * (v198 ^ 0x48)];
  BYTE1(v96) = BYTE1(v351);
  LODWORD(v130) = (((181304767 * v158 - 177275627) ^ v161)
                 - ((2 * ((181304767 * v158 - 177275627) ^ v161)) & 0xD5E246A2)
                 + 1794188113) ^ *(_DWORD *)(v128 + 4 * (HIBYTE(v351) ^ 0xF9));
  LODWORD(v193) = *(_DWORD *)&v124[4 * (v145 ^ 0xC1)];
  HIDWORD(v197) = *(_DWORD *)&v124[4 * (v194 ^ 0xEC)];
  LODWORD(v78) = v346 ^ 0x1A;
  LODWORD(v195) = *(_DWORD *)&v124[4 * (v153 ^ 0xD7)];
  int v163 = *(_DWORD *)(v54 - 240);
  *(_DWORD *)(v54 - 240) = *(_DWORD *)&v124[4 * (v163 ^ 0x1A)];
  LODWORD(v81) = ((v353 >> 15) & 0x58 ^ 0x48) + (v163 ^ 0x4C64A1B);
  int v354 = v81 - ((2 * v81) & 0xC8686) - 1307131069;
  HIDWORD(v193) = *(_DWORD *)(v127 + 4 * (v342 ^ 0xB0u));
  int v216 = *(_DWORD *)(v127 + 4 * (BYTE1(v215) ^ 0x8Eu));
  int v347 = *(_DWORD *)(v127 + 4 * (BYTE1(v156) ^ 0x85u));
  *(_DWORD *)(v54 - 176) = *(_DWORD *)(v127 + 4 * (BYTE1(*(_DWORD *)(v54 - 176)) ^ 0xBDu));
  int v343 = *(_DWORD *)(v127 + 4 * (v272 ^ 0xB4u));
  HIDWORD(v192) = *(_DWORD *)(v127 + 4 * v78);
  int v236 = *(_DWORD *)(v127 + 4 * v235);
  int v352 = *(_DWORD *)(v127 + 4 * v217);
  *(_DWORD *)(v54 - 184) = *(_DWORD *)(v127 + 4 * (BYTE1(*(_DWORD *)(v54 - 184)) ^ 0xD6u));
  int v271 = *(_DWORD *)(v127 + 4 * v244);
  int v245 = *(_DWORD *)(v127 + 4 * (BYTE1(*(_DWORD *)(v54 - 192)) ^ 0xD7u));
  HIDWORD(v191) = *(_DWORD *)(v127 + 4 * (BYTE1(v282) ^ 0x76u));
  LODWORD(v76) = *(_DWORD *)(v127 + 4 * (BYTE1(*(_DWORD *)(v54 - 200)) ^ 0x16u));
  LODWORD(v191) = *(_DWORD *)(v127 + 4 * (v340 ^ 0xBEu));
  *(_DWORD *)(v54 - 192) = *(_DWORD *)(v127 + 4 * (BYTE1(*(_DWORD *)(v54 - 160)) ^ 0xB9u));
  *(_DWORD *)(v54 - 200) = *(_DWORD *)(v127 + 4 * v290);
  LODWORD(v192) = *(_DWORD *)(v127 + 4 * v203);
  int v291 = *(_DWORD *)(v127 + 4 * (BYTE1(*(_DWORD *)(v54 - 144)) ^ 0x36u));
  *(_DWORD *)(v54 - 228) = *(_DWORD *)(v127 + 4 * (*(_DWORD *)(v54 - 228) ^ 0x84u));
  int v341 = *(_DWORD *)(v127 + 4 * (BYTE1(v96) ^ 0x2Eu));
  LODWORD(v78) = *(_DWORD *)(v127 + 4 * (BYTE1(*(_DWORD *)(v54 - 256)) ^ 0xC8u));
  HIDWORD(v190) = *(_DWORD *)(v128 + 4 * (HIBYTE(v114) ^ 0xB2));
  unsigned int v316 = v309 - 835769009;
  unsigned int v310 = v301 - 835769009;
  *(_DWORD *)(v54 - 224) = *(_DWORD *)(v128 + 4 * (*(_DWORD *)(v54 - 224) ^ 7u));
  int v218 = v277 - 835769009;
  LODWORD(v204) = v273 - 835769009;
  int v302 = *(_DWORD *)(v128 + 4 * (HIBYTE(*(_DWORD *)(v54 - 136)) ^ 0xD6u));
  LODWORD(v190) = v260 - 835769009;
  LODWORD(a14) = *(_DWORD *)(v128 + 4 * v211);
  LODWORD(v124) = HIBYTE(v230);
  int v231 = *(_DWORD *)(v128 + 4 * (HIBYTE(*(_DWORD *)(v54 - 128)) ^ 0xB8u));
  *(_DWORD *)(v54 - 256) = *(_DWORD *)(v128 + 4 * v124);
  HIDWORD(a2) = v240 - 835769009;
  int v241 = *(_DWORD *)(v128 + 4 * v228);
  int v229 = v207 - 835769009;
  LODWORD(v208) = *(_DWORD *)(v128 + 4 * v255);
  int v274 = v247 - 835769009;
  int v278 = *(_DWORD *)(v128 + 4 * (HIBYTE(*(_DWORD *)(v54 - 208)) ^ 0xA2u));
  int v164 = *(_DWORD *)(v128 + 4 * (HIBYTE(v282) ^ 0xA6));
  int v165 = v206 - 835769009;
  int v166 = *(_DWORD *)(v128 + 4 * HIBYTE(v221));
  int v167 = v224 - 835769009;
  *(_DWORD *)(v54 - 208) = v329 - 835769009;
  unsigned int v261 = v315 - 835769009;
  int v283 = v210 - 835769009;
  unsigned int v256 = v162 - 835769009;
  unsigned int v225 = v130 - ((2 * v130) & 0x9C5E5A9E) - 835769009;
  int v248 = *(_DWORD *)(v128 + 4 * v324);
  int v168 = *(_DWORD *)(v128 + 4 * HIBYTE(v285));
  int v286 = *(_DWORD *)(v128 + 4 * (*(_DWORD *)(v54 - 248) ^ 0x38u));
  int v295 = *(_DWORD *)(v128 + 4 * HIBYTE(v294));
  LODWORD(v130) = v78 ^ (v82 - ((2 * v82) & 0x9C5E5A9E) - 835769009);
  HIDWORD(v208) = *(_DWORD *)(v128 + 4 * (HIBYTE(v350) ^ 0x50));
  HIDWORD(v204) = *(_DWORD *)(v128 + 4 * HIBYTE(v154));
  uint64_t v169 = (v325 + 1794188113);
  int v222 = v280 + 1794188113;
  uint64_t v170 = v139 - ((2 * v139) & 0xD5E246A2) + 1794188113;
  uint64_t v171 = (v253 + 1794188113);
  *(_DWORD *)(v54 - 248) = v264 + 1794188113;
  uint64_t v172 = (v234 + 1794188113);
  *(_DWORD *)(v54 - 128) = v319 + 1794188113;
  uint64_t v173 = (v321 + 1794188113);
  uint64_t v174 = (v197 + 1794188113);
  uint64_t v175 = v130 - ((2 * v130) & 0xD5E246A2) + 1794188113;
  int v176 = v336 ^ HIDWORD(v335) ^ 0x6285F181;
  int v177 = v165 ^ v76 ^ v176;
  uint64_t v178 = *(unsigned int *)(v54 - 168);
  uint64_t v179 = (char *)*(&off_1022AC750 + (int)v178 - 114) - 8;
  unint64_t v180 = (char *)*(&off_1022AC750 + (v178 ^ 0x5A)) - 4;
  uint64_t v181 = (uint64_t)*(&off_1022AC750 + (v178 ^ 0xCA));
  unint64_t v182 = (char *)*(&off_1022AC750 + (v178 ^ 0x95)) - 4;
  LODWORD(v130) = (v182[*(unsigned __int8 *)(v54 - 105) ^ 0xE4] ^ 0xB0) & 0xFF00FFFF | ((v179[*(unsigned __int8 *)(v54 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v54 - 108) - ((2 * *(unsigned __int8 *)(v54 - 108)) & 0x10) - 120) ^ 0xFFFFFFE1) << 24) | (((*(unsigned char *)(v181 + (*(unsigned __int8 *)(v54 - 107) ^ 0x27)) + 29) ^ 0x96) << 16);
  unsigned int v183 = (v182[*(unsigned __int8 *)(v54 - 109) ^ 0x41] ^ 0x86) & 0xFF00FFFF | (((*(unsigned char *)(v181 + (*(unsigned __int8 *)(v54 - 111) ^ 0x40)) + 29) ^ 0x5A) << 16) | ((v180[*(unsigned __int8 *)(v54 - 110) ^ 0xBBLL] ^ 0xAE) << 8) | ((v179[*(unsigned __int8 *)(v54 - 112) ^ 0x1ELL] ^ (*(unsigned __int8 *)(v54 - 112) + (~(2 * *(unsigned char *)(v54 - 112)) | 0xFFFFFFEF) - 119) ^ 0x84) << 24);
  v331 = v179;
  v326 = v182;
  int v184 = v182[*(unsigned __int8 *)(v54 - 101) ^ 0xF2];
  int v185 = v182[*(unsigned __int8 *)(v54 - 97) ^ 0x74] ^ 0x21 | (((*(unsigned char *)(v181 + (*(unsigned __int8 *)(v54 - 99) ^ 0xF3)) + 29) ^ 2) << 16) | ((v180[*(unsigned __int8 *)(v54 - 98) ^ 0x20] ^ 0x44) << 8) | ((v179[*(unsigned __int8 *)(v54 - 100) ^ 0xF3] ^ (*(unsigned __int8 *)(v54 - 100) - ((2 * *(unsigned __int8 *)(v54 - 100)) & 0x10) - 120) ^ 0x85) << 24);
  unsigned int v186 = v130 | ((v180[*(unsigned __int8 *)(v54 - 106) ^ 9] ^ 0xAB) << 8);
  unsigned int v187 = (v184 ^ 9) & 0xFF00FFFF | ((v179[*(unsigned __int8 *)(v54 - 104) ^ 0xD3] ^ (*(unsigned __int8 *)(v54 - 104) - ((2 * *(unsigned __int8 *)(v54 - 104)) & 0x10) - 120) ^ 0xE0) << 24) | ((v180[*(unsigned __int8 *)(v54 - 102) ^ 0xBELL] ^ 0xC) << 8) & 0xFF00FFFF | (((*(unsigned char *)(v181 + (*(unsigned __int8 *)(v54 - 103) ^ 0xE9)) + 29) ^ 0x8A) << 16);
  if ((v177 & 0x80) != 0) {
    int v188 = -128;
  }
  else {
    int v188 = 128;
  }
  *(_DWORD *)(v54 - 136) = v185 ^ 0x7B22FDCB;
  *(_DWORD *)(v54 - 144) = v183 ^ 0xE2AA443E;
  *(_DWORD *)(v54 - 152) = v186 ^ 0xF5342135;
  *(_DWORD *)(v54 - 160) = v187 ^ 0x7A469B9;
  HIDWORD(v322) = v167 ^ v191;
  LODWORD(v322) = v164 ^ HIDWORD(v191) ^ ((v145 ^ 0xEC) - 1227027088 + ((2 * (v145 ^ 0xEC) + 88) & 0x286 ^ 0xFFF37BFF)) ^ v193 ^ HIDWORD(v195);
  HIDWORD(v317) = v172 ^ v166;
  LODWORD(v317) = v312 ^ HIDWORD(v193) ^ v316;
  HIDWORD(v313) = v310 ^ v216;
  LODWORD(v313) = HIDWORD(v190) ^ v339 ^ v288 ^ v169;
  HIDWORD(v308) = HIDWORD(a2) ^ v236;
  LODWORD(v308) = v190 ^ HIDWORD(v192) ^ v307;
  HIDWORD(v303) = v170 ^ v302 ^ v305;
  LODWORD(v303) = v171 ^ a14;
  HIDWORD(v298) = v192 ^ v168 ^ v300 ^ HIDWORD(v197) ^ v196;
  LODWORD(v298) = v291 ^ v297 ^ v195 ^ v283;
  HIDWORD(v292) = v174 ^ v295;
  LODWORD(v292) = v173 ^ v286;
  HIDWORD(v287) = v269 ^ v245;
  LODWORD(v287) = v208 ^ v267 ^ HIDWORD(v201) ^ (HIDWORD(v200) + 1794188113);
  HIDWORD(v281) = (v201 + 1794188113) ^ v278;
  LODWORD(v281) = v200 ^ v271 ^ v274;
  HIDWORD(v275) = HIDWORD(v196) ^ HIDWORD(v204) ^ v175;
  LODWORD(v275) = v225 ^ v341;
  HIDWORD(v270) = (v160 - ((2 * v160) & 0xD5E246A2) + 1794188113) ^ HIDWORD(v208);
  LODWORD(v270) = *(_DWORD *)(v54 - 228) ^ v354 ^ *(_DWORD *)(v54 - 240) ^ v256;
  HIDWORD(v265) = *(_DWORD *)(v54 - 128) ^ v248;
  LODWORD(v265) = *(_DWORD *)(v54 - 192) ^ *(_DWORD *)(v54 - 208);
  HIDWORD(v262) = v261 ^ *(_DWORD *)(v54 - 200);
  LODWORD(v262) = v204 ^ *(_DWORD *)(v54 - 176);
  HIDWORD(v258) = v218 ^ v347 ^ v213;
  LODWORD(v258) = HIDWORD(v336) ^ v343 ^ v257;
  HIDWORD(v254) = v345 ^ *(_DWORD *)(v54 - 224) ^ v222;
  LODWORD(v254) = v229 ^ *(_DWORD *)(v54 - 184);
  HIDWORD(v249) = v352 ^ v251 ^ v231 ^ v356 ^ v349;
  LODWORD(v249) = (v239 + 1794188113) ^ v241;
  HIDWORD(v242) = *(_DWORD *)(v54 - 248) ^ *(_DWORD *)(v54 - 256);
  LODWORD(v242) = *(_DWORD *)(v54 - 216) + 134792455;
  HIDWORD(v237) = (v188 + (v177 ^ 0x2497E332)) ^ v176;
  LODWORD(v237) = (v178 + 880) ^ 0x44F;
  HIDWORD(v232) = (v178 + 880) ^ 0x406;
  LODWORD(v232) = (v178 + 880) & 0x64722A63;
  HIDWORD(v226) = (v178 + 880) & 0xD1BD605B;
  LODWORD(v226) = (v178 + 880) ^ 0x492;
  HIDWORD(v219) = (v178 + 880) ^ 0x489;
  LODWORD(v219) = (v178 + 880) ^ 0x432;
  HIDWORD(v214) = (v178 + 880) & 0x9B782361;
  *(_DWORD *)(v54 - 128) = v178 + 880;
  LODWORD(v214) = (v178 + 880) ^ 0x47E;
  return sub_100382514(v172, v175, v169, v171, v178, v174, v170, v173, a2, v190, v191, v192, v193, v195, v196, v197, v200, v201, v204,
           v208,
           a14,
           a15,
           a16,
           v214,
           v219,
           v226,
           v232,
           v237,
           v242,
           v249,
           v254,
           v258,
           v262,
           v265,
           v270,
           v275,
           v281,
           v287,
           v292,
           v298,
           v303,
           v308,
           v313,
           v317,
           v322,
           v326,
           v181,
           v180,
           v331,
           a43,
           v332,
           v333,
           v334,
           v335,
           v336);
}

uint64_t sub_100382514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,unsigned int a55,uint64_t a56,int a57,int a58)
{
  uint64_t v62 = a58 ^ v58 & 0xFFFFFFF2 ^ 0x36B00179;
  *(void *)(v61 - 200) = v62;
  unsigned __int8 v63 = *(unsigned char *)(a47 + (*(unsigned __int8 *)(v60 + v62) ^ 0xF3)) + 29;
  uint64_t v64 = v58 & 0xFFFFFFFE ^ 0x36B00499;
  *(void *)(v61 - 168) = v64;
  int v65 = (v63 ^ 2) << 16;
  uint64_t v66 = *(unsigned __int8 *)(v60 + v64) ^ 0x57;
  uint64_t v67 = v58 & 0xFFFFFFF5 ^ 0x36B0049A;
  *(void *)(v61 - 176) = v67;
  uint64_t v68 = *(unsigned __int8 *)(v60 + v67) ^ 0xB6;
  int v69 = ((*(unsigned char *)(a47 + v66) + 29) ^ 0xF6) << 16;
  uint64_t v70 = v58 & 0xFFFFFFFB ^ 0x36B0049C;
  *(void *)(v61 - 208) = v70;
  LODWORD(v66) = (*(unsigned __int8 *)(a48 + v68) ^ 0x21) << 8;
  uint64_t v71 = *(unsigned __int8 *)(v60 + v70);
  int v72 = *(unsigned __int8 *)(a49 + (v71 ^ 0x9A));
  uint64_t v73 = v58 & 0xFFFFFFF8 ^ 0x36B0049F;
  *(void *)(v61 - 248) = v73;
  LODWORD(v71) = v72 ^ (v71 - ((2 * v71) & 0x10) - 120) ^ 0xFFFFFFCF;
  int v74 = *(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v60 + v73) ^ 0xD6));
  uint64_t v75 = v58 & 0xFFFFFFFD ^ 0x36B0049A;
  *(void *)(v61 - 240) = v75;
  int v76 = *(unsigned __int8 *)(a48 + *(unsigned __int8 *)(v60 + v75));
  uint64_t v77 = v58 & 0xFFFFFFFC ^ 0x36B0049B;
  *(void *)(v61 - 192) = v77;
  int v78 = v69 | ((v76 ^ 0x33) << 8);
  int v79 = *(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v60 + v77) ^ 0x74));
  uint64_t v80 = v58 & 0xFFFFFFF3 ^ 0x36B0049C;
  *(void *)(v61 - 184) = v80;
  int v81 = v78 | v79 ^ 0x21;
  int v82 = *(unsigned __int8 *)(a49 + (*(unsigned __int8 *)(v60 + v80) ^ 0x6ELL)) ^ (*(unsigned __int8 *)(v60 + v80)
                                                                                - ((2 * *(unsigned __int8 *)(v60 + v80)) & 0x10)
                                                                                - 120) ^ 0x51;
  uint64_t v83 = v58 ^ 0x36B00498u;
  *(void *)(v61 - 216) = v83;
  int v84 = v65 | (v82 << 24);
  uint64_t v264 = v58 & 0xFFFFFFF7 ^ 0x36B00498;
  int v85 = v81 | ((*(unsigned __int8 *)(a49 + (*(unsigned __int8 *)(v60 + v83) ^ 0x15)) ^ (*(unsigned __int8 *)(v60 + v83)
                                                                                        - ((2
                                                                                          * *(unsigned __int8 *)(v60 + v83)) & 0x10)
                                                                                        - 120) ^ 0xAE) << 24);
  unsigned int v86 = *(unsigned __int8 *)(a49 + (*(unsigned __int8 *)(v60 + v264) ^ 0x46)) ^ (*(unsigned __int8 *)(v60 + v264)
                                                                                 + (~(2
                                                                                    * *(unsigned __int8 *)(v60 + v264)) | 0xEF)
                                                                                 - 119) ^ 0xFFFFFFE7;
  uint64_t v87 = v58 & 0xFFFFFFF1 ^ 0x36B0049E;
  *(void *)(v61 - 224) = v87;
  *(_DWORD *)(v61 - 228) = 917505182;
  LODWORD(v66) = v66 | (v86 << 24);
  int v88 = *(unsigned __int8 *)(a48 + (*(unsigned __int8 *)(v60 + v87) ^ 0xD5)) ^ 0xBB;
  uint64_t v89 = v58 & 0xFFFFFFFA ^ 0x36B0049D;
  *(void *)(v61 - 256) = v89;
  uint64_t v265 = v58 & 0xFFFFFFF4 ^ 0x36B0049B;
  uint64_t v263 = v58 & 0xFFFFFFF6 ^ 0x36B00499;
  uint64_t v262 = v58 & 0xFFFFFFF9 ^ 0x36B0049E;
  uint64_t v266 = v58 & 0xFFFFFFF0 ^ 0x36B0049F;
  LODWORD(v87) = *(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v60 + v266) ^ 0x47)) ^ 0x21 | v84 | (v88 << 8);
  unsigned int v260 = (v74 ^ 0xE3) & 0xFF00FFFF | (v71 << 24) | (((*(unsigned char *)(a47
                                                                                        + (*(unsigned __int8 *)(v60 + v89) ^ 0x9DLL))
                                                                             + 29) ^ 0xF7) << 16) | ((*(unsigned __int8 *)(a48 + (*(unsigned __int8 *)(v60 + v262) ^ 0xA4)) ^ 0xEB) << 8);
  LODWORD(v83) = *(_DWORD *)(v61 - 128);
  uint64_t v90 = *(void *)(v59 + 8 * ((int)v83 - 1024)) - 4;
  unsigned int v91 = ((((unsigned __int16)(v260 ^ WORD2(a51)) >> 8) ^ 0x4C)
       - 1444165030
       - 2 * ((((v260 ^ HIDWORD(a51)) >> 8) ^ 0xB71C4C) & 0x5B ^ ((v260 ^ HIDWORD(a51)) >> 8) & 1)) ^ *(_DWORD *)(v90 + 4 * (((unsigned __int16)(v260 ^ WORD2(a51)) >> 8) ^ 0x21u));
  unsigned int v92 = v91 - 435997177 - ((2 * v91) & 0xCC066C0E);
  uint64_t v93 = *(void *)(v59 + 8 * ((int)v83 - 920)) - 8;
  unsigned int v94 = v85 ^ a52 ^ 0x730032AA;
  int v95 = v92 ^ *(_DWORD *)(v93 + 4 * ((v85 ^ a52) ^ 0xAAu));
  unsigned int v96 = *(_DWORD *)(v90 + 4 * (((unsigned __int16)(WORD2(a50) ^ v87) >> 8) ^ 0xEAu)) ^ ((((unsigned __int16)(WORD2(a50) ^ v87) >> 8) ^ 0x87) - 1444165030 - ((2 * (((HIDWORD(a50) ^ v87) >> 8) ^ 0x68187)) & 0xB4));
  int v97 = v96 - 1728492781 - ((2 * v96) & 0x31F29626);
  int v261 = (*(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v60 + v265) ^ 0xC2)) ^ 4 | v66) & 0xFF00FFFF | (((*(unsigned char *)(a47 + (*(unsigned __int8 *)(v60 + v263) ^ 0x3ELL)) + 29) ^ 0xDF) << 16);
  BYTE1(v96) = ((unsigned __int16)(*(unsigned __int8 *)(a46 + (*(unsigned __int8 *)(v60 + v265) ^ 0xC2)) ^ 4 | v66) >> 8) ^ BYTE1(a51);
  int v98 = (char *)*(&off_1022AC750 + SHIDWORD(a27)) - 8;
  int v99 = *(_DWORD *)&v98[4 * (((v261 ^ a51) >> 16) ^ 0x68)];
  HIDWORD(v101) = v99 ^ 0xDA5;
  LODWORD(v101) = v99 ^ 0x972DC000;
  int v100 = v101 >> 12;
  int v102 = *(_DWORD *)&v98[4 * (BYTE2(v85) ^ BYTE2(a52))];
  HIDWORD(v101) = v102 ^ 0xDA5;
  LODWORD(v101) = v102 ^ 0x972DC000;
  int v103 = (char *)*(&off_1022AC750 + (int)a28) - 4;
  int v104 = *(_DWORD *)&v103[4 * (((v260 ^ HIDWORD(a51)) >> 24) ^ 0xB7)] ^ (v101 >> 12);
  int v105 = *(_DWORD *)&v98[4 * (((HIDWORD(a50) ^ v87) >> 16) ^ 0x81)];
  HIDWORD(v101) = v105 ^ 0xDA5;
  LODWORD(v101) = v105 ^ 0x972DC000;
  int v106 = v97 ^ v104;
  int v107 = *(_DWORD *)(v93 + 4 * ((v260 ^ BYTE4(a51)) ^ 0xFBu)) ^ BYTE1(v96) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v96) ^ 0x23u)) ^ 0x4FE8FC13 ^ (v101 >> 12);
  LODWORD(v66) = *(_DWORD *)&v98[4 * (((v260 ^ HIDWORD(a51)) >> 16) ^ 0x1C)];
  HIDWORD(v101) = v66 ^ 0xDA5;
  LODWORD(v101) = v66 ^ 0x972DC000;
  LODWORD(v66) = *(_DWORD *)&v103[4 * (((v261 ^ a51) >> 24) ^ 0xF6)] ^ (BYTE1(v94)
                                                                                    - 1444165030
                                                                                    - ((v94 >> 7) & 0xB4)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v94) ^ 0x6Du)) ^ ((v101 >> 12) - 1728492781 - ((2 * (v101 >> 12)) & 0x31F29626));
  int v108 = HIDWORD(a45) ^ v100 ^ *(_DWORD *)&v103[4 * (((HIDWORD(a50) ^ v87) >> 24) ^ 6)] ^ (v95 - 1728492781 - ((2 * v95) & 0x31F29626));
  unsigned int v109 = a45 ^ *(_DWORD *)(v93 + 4 * ((BYTE4(a50) ^ v87) ^ 0xD8u)) ^ (v66
                                                                                       - 435997177
                                                                                       - ((2 * v66) & 0xCC066C0E));
  unsigned int v110 = HIDWORD(a44) ^ *(_DWORD *)(v93 + 4 * ((v261 ^ a51) ^ 0x5Fu)) ^ (v106
                                                                                          - 435997177
                                                                                          - ((2 * v106) & 0xCC066C0E));
  unsigned int v111 = HIDWORD(a28) ^ *(_DWORD *)&v103[4 * HIBYTE(v94)] ^ (v107 - 1728492781 - ((2 * v107) & 0x31F29626));
  LODWORD(v66) = v108 ^ 0xF9388C2F;
  int v112 = *(_DWORD *)&v98[4 * ((v108 ^ 0xF9388C2F) >> 16)];
  HIDWORD(v101) = v112 ^ 0xDA5;
  LODWORD(v101) = v112 ^ 0x972DC000;
  int v113 = v101 >> 12;
  int v114 = *(_DWORD *)&v98[4 * (BYTE2(v109) ^ 0xA6)];
  HIDWORD(v101) = v114 ^ 0xDA5;
  LODWORD(v101) = v114 ^ 0x972DC000;
  int v115 = v101 >> 12;
  int v116 = *(_DWORD *)&v98[4 * (BYTE2(v110) ^ 0x66)];
  HIDWORD(v101) = v116 ^ 0xDA5;
  LODWORD(v101) = v116 ^ 0x972DC000;
  int v117 = (v101 >> 12) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v111) ^ 5u)) ^ ((BYTE1(v111) ^ 0x68)
                                                                     - 1444165030
                                                                     - 2
                                                                     * (((v111 >> 8) ^ 0x42BD68) & 0x5B ^ (v111 >> 8) & 1));
  unsigned int v118 = (v113 - 435997177 - ((2 * v113) & 0xCC066C0E)) ^ *(_DWORD *)(v93 + 4 * (v110 ^ 0xB6u));
  unsigned int v119 = (v117 - 435997177 - ((2 * v117) & 0xCC066C0E)) ^ *(_DWORD *)(v93 + 4 * (v108 ^ 0x61u));
  unsigned int v120 = (((unsigned __int16)(v108 ^ 0x8C2F) >> 8) - 1444165030 - (((v108 ^ 0xF9388C2F) >> 7) & 0xB4)) ^ 0xD678EAEF ^ *(_DWORD *)(v90 + 4 * (((unsigned __int16)(v108 ^ 0x8C2F) >> 8) ^ 0x6Du));
  int v121 = *(_DWORD *)&v103[4 * (HIBYTE(v110) ^ 0x43)] ^ 0x3AE310AD;
  unsigned int v122 = v120 + v121;
  int v123 = v120 & v121;
  int v124 = *(_DWORD *)&v98[4 * (BYTE2(v111) ^ 0xBD)];
  HIDWORD(v101) = v124 ^ 0xDA5;
  LODWORD(v101) = v124 ^ 0x972DC000;
  int v125 = ((v122 - 2 * v123) ^ (v101 >> 12)) - 435997177 - ((2 * ((v122 - 2 * v123) ^ (v101 >> 12))) & 0xCC066C0E);
  LODWORD(v66) = *(_DWORD *)&v103[4 * BYTE3(v66)] ^ (v115 - 1728492781 - ((2 * v115) & 0x31F29626));
  LODWORD(v66) = (v66 - 435997177 - ((2 * v66) & 0xCC066C0E)) ^ *(_DWORD *)(v93 + 4 * (v111 ^ 0xABu));
  unsigned int v126 = *(_DWORD *)&v103[4 * (HIBYTE(v111) ^ 0x42)] ^ a55 ^ *(_DWORD *)(v90 + 4 * (BYTE1(v109) ^ 0xF8u)) ^ ((BYTE1(v109) ^ 0x95) - 1444165030 + (~(2 * ((v109 >> 8) ^ 0x71A695)) | 0xFFFFFF4B) + 1) ^ (v118 - 1728492781 - ((2 * v118) & 0x31F29626));
  unsigned int v127 = a44 ^ *(_DWORD *)(v90 + 4 * (BYTE1(v110) ^ 0x39u)) ^ (v66 - 1444165030 - ((2 * v66) & 0x53D794B4));
  LODWORD(v66) = a43 ^ *(_DWORD *)(v93 + 4 * (v109 ^ 0x76u)) ^ v125;
  int v128 = *(_DWORD *)&v98[4 * (BYTE2(v66) ^ 0x79)];
  HIDWORD(v101) = v128 ^ 0xDA5;
  LODWORD(v101) = v128 ^ 0x972DC000;
  int v129 = HIDWORD(a43) ^ *(_DWORD *)&v103[4 * (HIBYTE(v109) ^ 0x71)] ^ (v119 - 1728492781 - ((2 * v119) & 0x31F29626));
  BYTE1(v128) = ((unsigned __int16)(WORD2(a43) ^ *(_WORD *)&v103[4 * (HIBYTE(v109) ^ 0x71)] ^ (v119
                                                                                             + 19219
                                                                                             - ((2 * v119) & 0x9626))) >> 8) ^ 0x68;
  int v130 = ((v101 >> 12) - 1728492781 - ((2 * (v101 >> 12)) & 0x31F29626)) ^ *(_DWORD *)&v103[4
                                                                                          * ((v129 ^ 0x2261685Eu) >> 24)];
  unsigned int v131 = ((BYTE1(v66) ^ 0xD0)
        - 1444165030
        - 2 * (((v66 >> 8) ^ 0x679D0) & 0x5B ^ (v66 >> 8) & 1)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v66) ^ 0xBDu));
  unsigned int v132 = (v131 - 435997177 - ((2 * v131) & 0xCC066C0E)) ^ *(_DWORD *)(v93 + 4 * (v126 ^ 0x76u));
  int v133 = ((BYTE1(v127) ^ 0xEC) - 1444165030 - ((2 * ((v127 >> 8) ^ 0xE5FEC)) & 0xB4)) ^ *(_DWORD *)(v90
                                                                                                  + 4 * (BYTE1(v127) ^ 0x81u));
  int v134 = *(_DWORD *)&v98[4 * (BYTE2(v127) ^ 0x5F)];
  HIDWORD(v101) = v134 ^ 0xDA5;
  LODWORD(v101) = v134 ^ 0x972DC000;
  int v135 = v101 >> 12;
  HIDWORD(v101) = *(_DWORD *)(v93 + 4 * (v129 ^ 0x5Eu)) ^ 0xF14118F;
  LODWORD(v101) = HIDWORD(v101);
  int v136 = (v101 >> 28) ^ __ROR4__(*(_DWORD *)&v103[4 * (BYTE3(v66) ^ 6)] ^ 0x7462B151 ^ (v133- 1728492781- ((2 * v133) & 0x31F29626)), 28);
  int v137 = (v135 - 1728492781 - ((2 * v135) & 0x31F29626)) ^ *(_DWORD *)&v103[4 * (HIBYTE(v126) ^ 0xD2)];
  LODWORD(v66) = (v137 - 435997177 - ((2 * v137) & 0xCC066C0E)) ^ *(_DWORD *)(v93 + 4 * (v66 ^ 0x4Cu));
  int v138 = *(_DWORD *)&v98[4 * (BYTE2(v129) ^ 0x1B)];
  HIDWORD(v101) = v138 ^ 0xDA5;
  LODWORD(v101) = v138 ^ 0x972DC000;
  int v139 = v101 >> 12;
  unsigned int v140 = v130 - 435997177 - ((2 * v130) & 0xCC066C0E);
  int v141 = BYTE1(v126) ^ 0xC0;
  int v142 = v141 - 1444165030 - ((2 * ((v126 >> 8) ^ 0xD2CCC0)) & 0xB4);
  int v143 = *(_DWORD *)&v98[4 * (BYTE2(v126) ^ 0xCC)];
  HIDWORD(v101) = v143 ^ 0xDA5;
  LODWORD(v101) = v143 ^ 0x972DC000;
  LOBYTE(v110) = v127 ^ BYTE1(v110) ^ 0x54;
  int v144 = *(_DWORD *)&v103[4 * (HIBYTE(v127) ^ 0xE)];
  int v145 = HIDWORD(a42) ^ (v101 >> 12) ^ __ROR4__(v136 ^ 0x78071371, 4);
  unsigned int v146 = a42 ^ v144 ^ v139 ^ (v132 - 1728492781 - ((2 * v132) & 0x31F29626));
  int v147 = BYTE1(v128);
  LODWORD(v66) = HIDWORD(a41) ^ *(_DWORD *)(v90 + 4 * (v147 ^ 0x6Du)) ^ (v66 - 1444165030 - ((2 * v66) & 0x53D794B4));
  unsigned int v148 = a41 ^ v142 ^ *(_DWORD *)(v93 + 4 * (v110 ^ 0xCAu)) ^ *(_DWORD *)(v90 + 4 * (v141 ^ 0x6Du)) ^ v140;
  unsigned int v149 = v147 ^ 0x4552953C ^ v66;
  int v150 = *(_DWORD *)&v98[4 * BYTE2(v149)];
  HIDWORD(v101) = v150 ^ 0xDA5;
  LODWORD(v101) = v150 ^ 0x972DC000;
  int v151 = v101 >> 12;
  BYTE1(v150) = BYTE1(v145) ^ 0xE7;
  int v152 = *(_DWORD *)&v98[4 * ((v145 ^ 0x99FEE750) >> 16)];
  HIDWORD(v101) = v152 ^ 0xDA5;
  LODWORD(v101) = v152 ^ 0x972DC000;
  int v153 = (v101 >> 12) - 435997177 - ((2 * (v101 >> 12)) & 0xCC066C0E);
  int v154 = BYTE1(v146) ^ 0x29;
  int v155 = v154 - 1444165030 - ((2 * ((v146 >> 8) ^ 0xA73B29)) & 0xB4);
  int v156 = *(_DWORD *)&v98[4 * (BYTE2(v148) ^ 2)];
  HIDWORD(v101) = v156 ^ 0xDA5;
  LODWORD(v101) = v156 ^ 0x972DC000;
  LODWORD(v83) = (BYTE1(v149) - 1444165030 - ((v149 >> 7) & 0xB4)) ^ *(_DWORD *)(v93
                                                                               + 4 * (v146 ^ 0x72u)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v149) ^ 0x6Du)) ^ v153;
  int v157 = *(_DWORD *)(v93 + 4 * v149) ^ *(_DWORD *)&v103[4 * (HIBYTE(v146) ^ 0xA7)] ^ (v101 >> 12) ^ 0x7EFA7D14;
  int v158 = *(_DWORD *)&v98[4 * (BYTE2(v146) ^ 0x3B)];
  HIDWORD(v101) = v158 ^ 0xDA5;
  LODWORD(v101) = v158 ^ 0x972DC000;
  LODWORD(v66) = HIDWORD(a40) ^ ((BYTE1(v148) ^ 0xD9) - 1444165030 - ((2 * ((v148 >> 8) ^ 0x9802D9)) & 0xB4)) ^ *(_DWORD *)(v93 + 4 * (v145 ^ 0x1Eu)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v148) ^ 0xB4u)) ^ (v101 >> 12) ^ *(_DWORD *)&v103[4 * (BYTE3(v66) ^ 0x61)];
  unsigned int v159 = a40 ^ *(_DWORD *)&v103[4 * (HIBYTE(v148) ^ 0x98)] ^ (v83 - 1728492781 - ((2 * v83) & 0x31F29626));
  int v160 = *(_DWORD *)&v98[4 * (BYTE2(v66) ^ 0xC2)];
  HIDWORD(v101) = v160 ^ 0xDA5;
  LODWORD(v101) = v160 ^ 0x972DC000;
  int v161 = v101 >> 12;
  unsigned int v162 = HIDWORD(a39) ^ *(_DWORD *)(v93 + 4 * (v148 ^ 0x3Du)) ^ v155 ^ *(_DWORD *)&v103[4 * ((v145 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)(v90 + 4 * (v154 ^ 0x6Du)) ^ v151;
  unsigned int v163 = a39 ^ *(_DWORD *)(v90 + 4 * (((unsigned __int16)(v145 ^ 0xE750) >> 8) ^ 0x6Du)) ^ (v157 - 1444165030 - ((2 * v157) & 0x53D794B4));
  LODWORD(v83) = *(_DWORD *)&v98[4 * (BYTE2(v162) ^ 0x12)];
  HIDWORD(v101) = v83 ^ 0xDA5;
  LODWORD(v101) = v83 ^ 0x972DC000;
  int v164 = BYTE1(v162) ^ 0x82;
  int v165 = v164 - 1444165030 - 2 * (((v162 >> 8) ^ 0xAB1282) & 0x5B ^ (v162 >> 8) & 1);
  LODWORD(v66) = v66 ^ 0x4CB8EBAA;
  LODWORD(v83) = *(_DWORD *)(v93 + 4 * ((v163 ^ BYTE1(v150)) ^ 0x41u)) ^ (BYTE1(v66)
                                                                                           - 1444165030
                                                                                           - ((v66 >> 7) & 0xB4)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v66) ^ 0x6Du)) ^ ((v101 >> 12) - 435997177 - ((2 * (v101 >> 12)) & 0xCC066C0E));
  int v166 = *(_DWORD *)&v98[4 * (BYTE2(v163) ^ 0x81)];
  HIDWORD(v101) = v166 ^ 0xDA5;
  LODWORD(v101) = v166 ^ 0x972DC000;
  int v167 = ((v101 >> 12) - 1728492781 - ((2 * (v101 >> 12)) & 0x31F29626)) ^ *(_DWORD *)&v103[4 * BYTE3(v66)];
  unsigned int v168 = (v167 - 435997177 - ((2 * v167) & 0xCC066C0E)) ^ *(_DWORD *)(v93 + 4 * (v162 ^ 0x11u));
  unsigned int v169 = *(_DWORD *)&v98[4 * (BYTE2(v159) ^ 0xC6)];
  unsigned int v170 = ((BYTE1(v163) ^ 0xA0) - 1444165030 - ((v163 >> 7) & 0xB4)) ^ (v161 - 435997177 - ((2 * v161) & 0xCC066C0E)) ^ *(_DWORD *)(v93 + 4 * (v159 ^ 0xFCu)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v163) ^ 0xCDu));
  LODWORD(v101) = __ROR4__((v169 >> 12) ^ 0x264AFFE, 17) ^ 0xEE910136;
  HIDWORD(v101) = v101;
  unsigned int v171 = HIDWORD(a38) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v159) ^ 0x75u)) ^ (v168 - 1444165030 - ((2 * v168) & 0x53D794B4));
  unsigned int v172 = a38 ^ *(_DWORD *)&v103[4 * (HIBYTE(v162) ^ 0xAB)] ^ (v170 - 1728492781 - ((2 * v170) & 0x31F29626));
  int v173 = *(_DWORD *)(v93 + 4 * v66);
  LODWORD(v66) = HIDWORD(a37) ^ *(_DWORD *)&v103[4 * (HIBYTE(v159) ^ 0x5A)] ^ (v83
                                                                             - 1728492781
                                                                             - ((2 * v83) & 0x31F29626));
  unsigned int v174 = a37 ^ v165 ^ v173 ^ *(_DWORD *)&v103[4 * (HIBYTE(v163) ^ 0x68)] ^ *(_DWORD *)(v90 + 4 * (v164 ^ 0x6Du)) ^ ((v101 >> 15) + (v169 << 20));
  LODWORD(v83) = ((BYTE1(v171) ^ 0x9D) - 1444165030 - ((2 * ((v171 >> 8) ^ 0xC2489D)) & 0xB4)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v171) ^ 0xF0u));
  unsigned int v175 = *(_DWORD *)&v98[4 * (BYTE2(v172) ^ 0x8F)];
  LODWORD(v83) = *(_DWORD *)(v93 + 4 * (v174 ^ 0x9Eu)) ^ (v175 << 20) ^ (v175 >> 12) ^ 0xDA5972DC ^ (v83 - 435997177 - ((2 * v83) & 0xCC066C0E));
  unsigned int v176 = v66 ^ 0xCFB8D782;
  int v177 = *(_DWORD *)&v98[4 * ((v66 ^ 0xCFB8D782) >> 16)];
  HIDWORD(v101) = v177 ^ 0xDA5;
  LODWORD(v101) = v177 ^ 0x972DC000;
  int v178 = ((v101 >> 12) - 435997177 - ((2 * (v101 >> 12)) & 0xCC066C0E)) ^ *(_DWORD *)(v93
                                                                                    + 4
                                                                                    * ((v171 ^ BYTE1(v159)) ^ 0x3Fu));
  int v179 = v83 - 1728492781 - ((2 * v83) & 0x31F29626);
  int v180 = v178 - 1728492781 - ((2 * v178) & 0x31F29626);
  LODWORD(v83) = ((v172 >> 8) ^ 0xC78FD9) & 0x5E ^ (v172 >> 8) & 4;
  int v181 = BYTE1(v172) ^ 0xD9;
  int v182 = *(_DWORD *)&v98[4 * (BYTE2(v171) ^ 0x48)];
  HIDWORD(v101) = v182 ^ 0xDA5;
  LODWORD(v101) = v182 ^ 0x972DC000;
  LODWORD(v66) = ((BYTE1(v174) ^ 0x1D) - 1444165030 - ((2 * ((v174 >> 8) ^ 0x82211D)) & 0xB4)) ^ *(_DWORD *)(v93 + 4 * (v66 ^ 0xCCu)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v174) ^ 0x70u)) ^ ((v101 >> 12) - 435997177 - ((2 * (v101 >> 12)) & 0xCC066C0E));
  int v183 = *(_DWORD *)&v98[4 * (BYTE2(v174) ^ 0x21)];
  HIDWORD(v101) = v183 ^ 0xDA5;
  LODWORD(v101) = v183 ^ 0x972DC000;
  unsigned int v184 = HIDWORD(a36) ^ (BYTE1(v176) - 1444165030 - ((v176 >> 7) & 0xB4)) ^ *(_DWORD *)(v93
                                                                                      + 4
                                                                                      * (v172 ^ 0x50u)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v176) ^ 0x6Du)) ^ *(_DWORD *)&v103[4 * (HIBYTE(v171) ^ 0xC2)] ^ (v101 >> 12);
  unsigned int v185 = a36 ^ *(_DWORD *)&v103[4 * (HIBYTE(v172) ^ 0xC7)] ^ (v66 - 1728492781 - ((2 * v66) & 0x31F29626));
  unsigned int v186 = HIDWORD(a35) ^ *(_DWORD *)&v103[4 * HIBYTE(v176)] ^ v179;
  unsigned int v187 = a35 ^ (v181 - 1444165030 - 2 * v83) ^ *(_DWORD *)(v90 + 4 * (v181 ^ 0x6Du)) ^ *(_DWORD *)&v103[4 * (HIBYTE(v174) ^ 0x82)] ^ v180;
  unsigned int v188 = (((unsigned __int16)(v187 ^ 0xCCA2) >> 8) - 1444165030 - (((v187 ^ 0x33C8CCA2) >> 7) & 0xB4)) ^ *(_DWORD *)(v90 + 4 * (((unsigned __int16)(v187 ^ 0xCCA2) >> 8) ^ 0x6Du));
  int v189 = *(_DWORD *)&v98[4 * (BYTE2(v185) ^ 0xE6)];
  HIDWORD(v101) = v189 ^ 0xDA5;
  LODWORD(v101) = v189 ^ 0x972DC000;
  int v190 = v101 >> 12;
  int v191 = *(_DWORD *)&v98[4 * (BYTE2(v186) ^ 0x1C)];
  HIDWORD(v101) = v191 ^ 0xDA5;
  LODWORD(v101) = v191 ^ 0x972DC000;
  LODWORD(v83) = (v101 >> 12) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v185) ^ 0xD9u)) ^ ((BYTE1(v185) ^ 0xB4)
                                                                                - 1444165030
                                                                                - ((2 * ((v185 >> 8) ^ 0x4FE6B4)) & 0xB4));
  LODWORD(v83) = (v83 - 435997177 - ((2 * v83) & 0xCC066C0E)) ^ *(_DWORD *)(v93 + 4 * (v184 ^ 0xFEu));
  unsigned int v192 = (v188 - 435997177 - ((2 * v188) & 0xCC066C0E)) ^ *(_DWORD *)(v93
                                                                    + 4
                                                                    * ((BYTE4(a35) ^ v103[4 * HIBYTE(v176)] ^ v179) ^ 0x3Au));
  unsigned int v193 = *(_DWORD *)(v93 + 4 * (v187 ^ 0xA2u)) ^ (((unsigned __int16)(v184 ^ 0x69FE) >> 8)
                                                                   - 1444165030
                                                                   - (((v184 ^ 0x67C969FE) >> 7) & 0xB4)) ^ *(_DWORD *)(v90 + 4 * (((unsigned __int16)(v184 ^ 0x69FE) >> 8) ^ 0x6Du)) ^ (v190 - 435997177 - ((2 * v190) & 0xCC066C0E));
  int v194 = *(_DWORD *)(v93 + 4 * (v185 ^ 0x96u));
  HIDWORD(v101) = v194 ^ 0x6033607;
  LODWORD(v101) = ~v194;
  HIDWORD(v101) = (v101 >> 29) ^ 0x6615DA09;
  LODWORD(v101) = HIDWORD(v101);
  int v195 = (v101 >> 3) - 1444165030 - ((2 * (v101 >> 3)) & 0x53D794B4);
  int v196 = *(_DWORD *)&v98[4 * ((v184 ^ 0x67C969FE) >> 16)];
  HIDWORD(v101) = v196 ^ 0xDA5;
  LODWORD(v101) = v196 ^ 0x972DC000;
  int v197 = v101 >> 12;
  LODWORD(v66) = *(_DWORD *)&v98[4 * ((v187 ^ 0x33C8CCA2) >> 16)];
  HIDWORD(v101) = v66 ^ 0xDA5;
  LODWORD(v101) = v66 ^ 0x972DC000;
  unsigned int v198 = HIDWORD(a34) ^ *(_DWORD *)&v103[4 * (HIBYTE(v187) ^ 0x17)] ^ (v83 - 1728492781 - ((2 * v83) & 0x31F29626));
  LODWORD(v66) = BYTE1(v186);
  LODWORD(v83) = v195 ^ *(_DWORD *)(v90 + 4 * (BYTE1(v186) ^ 0xD1u)) ^ (v101 >> 12);
  unsigned int v199 = *(_DWORD *)&v103[4 * (HIBYTE(v184) ^ 0x43)] ^ HIDWORD(a54) ^ (v83 - 1728492781 - ((2 * v83) & 0x31F29626));
  unsigned int v200 = a34 ^ *(_DWORD *)&v103[4 * (HIBYTE(v185) ^ 0x4F)] ^ v197 ^ (v192 - 1728492781 - ((2 * v192) & 0x31F29626));
  unsigned int v201 = HIDWORD(a33) ^ *(_DWORD *)&v103[4 * (HIBYTE(v186) ^ 0x1B)] ^ (v193 - 1728492781 - ((2 * v193) & 0x31F29626));
  LODWORD(v83) = *(_DWORD *)&v98[4 * (BYTE2(v201) ^ 0x7E)];
  HIDWORD(v101) = v83 ^ 0xDA5;
  LODWORD(v101) = v83 ^ 0x972DC000;
  int v202 = v101 >> 12;
  LODWORD(v83) = *(_DWORD *)&v98[4 * (BYTE2(v200) ^ 1)];
  HIDWORD(v101) = v83 ^ 0xDA5;
  LODWORD(v101) = v83 ^ 0x972DC000;
  LODWORD(v83) = ((v101 >> 12) - 435997177 - ((2 * (v101 >> 12)) & 0xCC066C0E)) ^ *(_DWORD *)(v93
                                                                                            + 4
                                                                                            * (v198 ^ 0xC6u));
  int v203 = ((BYTE1(v198) ^ 0x71) - 1444165030 - 2 * (((v198 >> 8) ^ 0xF25B71) & 0x5E ^ (v198 >> 8) & 4)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v198) ^ 0x1Cu));
  int v204 = (v203 - 1728492781 - ((2 * v203) & 0x31F29626)) ^ *(_DWORD *)&v103[4 * (HIBYTE(v200) ^ 0x1F)];
  int v205 = *(_DWORD *)&v98[4 * (BYTE2(v198) ^ 0x5B)];
  HIDWORD(v101) = v205 ^ 0xDA5;
  LODWORD(v101) = v205 ^ 0x972DC000;
  int v206 = v101 >> 12;
  unsigned int v207 = v66 ^ 0x73F4E0AF ^ v199;
  LODWORD(v66) = *(_DWORD *)&v98[4 * BYTE2(v207)];
  HIDWORD(v101) = v66 ^ 0xDA5;
  LODWORD(v101) = v66 ^ 0x972DC000;
  int v208 = v101 >> 12;
  HIDWORD(v101) = v202 ^ ((BYTE1(v200) ^ 0x81) - 1444165030 - ((v200 >> 7) & 0xB4)) ^ 0xD678EAEF ^ *(_DWORD *)(v90 + 4 * (BYTE1(v200) ^ 0xECu));
  LODWORD(v101) = HIDWORD(v101);
  LODWORD(v101) = (v101 >> 11) ^ __ROR4__(*(_DWORD *)&v103[4 * (HIBYTE(v198) ^ 0xF2)] ^ 0x3AE310AD, 11) ^ 0xD490839A;
  HIDWORD(v101) = v101;
  unsigned int v209 = a33 ^ *(_DWORD *)(v93 + 4 * (v200 ^ 0xB8u)) ^ ((BYTE1(v201) ^ 0xAA)
                                                                         - 1444165030
                                                                         - 2
                                                                         * (((v201 >> 8) ^ 0x967EAA) & 0x5B ^ (v201 >> 8) & 1)) ^ *(_DWORD *)&v103[4 * (HIBYTE(v199) ^ 0x57)] ^ v206 ^ *(_DWORD *)(v90 + 4 * (BYTE1(v201) ^ 0xC7u));
  LODWORD(v66) = HIDWORD(a32) ^ *(_DWORD *)&v103[4 * (HIBYTE(v201) ^ 0x96)] ^ (BYTE1(v207)
                                                                             - 1444165030
                                                                             - ((v207 >> 7) & 0xB4)) ^ *(_DWORD *)(v90 + 4 * (BYTE1(v207) ^ 0x6Du)) ^ (v83 - 1728492781 - ((2 * v83) & 0x31F29626));
  LODWORD(v83) = a32 ^ *(_DWORD *)(v93 + 4 * (v201 ^ 0x88u)) ^ v208 ^ (v204
                                                                                        - 435997177
                                                                                        - ((2 * v204) & 0xCC066C0E));
  unsigned int v210 = HIDWORD(a31) ^ *(_DWORD *)(v93 + 4 * v207) ^ ((v101 >> 21)
                                                                        - 435997177
                                                                        - ((2 * (v101 >> 21)) & 0xCC066C0E));
  int v211 = *(_DWORD *)&v98[4 * (BYTE2(v209) ^ 0x11)];
  BYTE2(v206) = BYTE2(v83) ^ 0x4A;
  HIDWORD(v101) = v211 ^ 0xDA5;
  LODWORD(v101) = v211 ^ 0x972DC000;
  int v212 = v101 >> 12;
  unsigned int v213 = *(_DWORD *)(v90 + 4 * (BYTE1(v66) ^ 0x96u)) ^ ((BYTE1(v66) ^ 0xFB)
                                                        - 1444165030
                                                        - ((2 * ((v66 >> 8) ^ 0x3EA2FB)) & 0xB4));
  int v214 = *(_DWORD *)&v98[4 * (BYTE2(v66) ^ 0xA2)];
  unsigned int v215 = (v213 - 435997177 - ((2 * v213) & 0xCC066C0E)) ^ *(_DWORD *)(v93 + 4 * (v83 ^ 0x75u));
  HIDWORD(v101) = v214 ^ 0xDA5;
  LODWORD(v101) = v214 ^ 0x972DC000;
  int v216 = (((unsigned __int16)(v83 ^ 0xF075) >> 8)
        - 1444165030
        - (((v83 ^ 0xB54AF075) >> 7) & 0xB4)) ^ (v101 >> 12) ^ *(_DWORD *)(v90
                                                                                       + 4
                                                                                       * (((unsigned __int16)(v83 ^ 0xF075) >> 8) ^ 0x6Du));
  int v217 = (v216 - 1728492781 - ((2 * v216) & 0x31F29626)) ^ *(_DWORD *)&v103[4 * (HIBYTE(v210) ^ 0xED)];
  LODWORD(v83) = *(_DWORD *)&v103[4 * (BYTE3(v83) ^ 0x91)];
  int v218 = *(_DWORD *)&v103[4 * (BYTE3(v66) ^ 0x3E)];
  int v219 = *(_DWORD *)&v103[4 * (HIBYTE(v209) ^ 0xB9)];
  v210 ^= 0xC9AF1D8F;
  LODWORD(v103) = *(_DWORD *)(v93 + 4 * v210);
  LODWORD(v66) = *(_DWORD *)(v93 + 4 * (v66 ^ 0x9Au));
  int v220 = *(_DWORD *)(v93 + 4 * (v209 ^ 0x7Bu));
  LODWORD(v93) = BYTE1(v210);
  int v221 = (v210 >> 7) & 0xB4;
  unsigned int v222 = *(_DWORD *)&v98[4 * BYTE2(v210)];
  int v223 = v93 - 1444165030 - v221;
  int v224 = *(_DWORD *)&v98[4 * BYTE2(v206)];
  HIDWORD(v101) = v224 ^ 0xDA5;
  LODWORD(v101) = v224 ^ 0x972DC000;
  int v225 = (v209 >> 8) ^ 0xB911BD;
  LODWORD(v93) = *(_DWORD *)(v90 + 4 * (v93 ^ 0x6D));
  LODWORD(v90) = *(_DWORD *)(v90 + 4 * (v225 ^ 0x6Du));
  LODWORD(v98) = v225 - 1444165030 - ((2 * v225) & 0xB4);
  unsigned int v226 = a31 ^ v66 ^ v212 ^ v83 ^ v223 ^ v93;
  LODWORD(v103) = HIDWORD(a30) ^ v98 ^ v218 ^ v90 ^ v103 ^ (v101 >> 12);
  unsigned int v227 = a30 ^ v220 ^ (v217 - 435997177 - ((2 * v217) & 0xCC066C0E));
  LODWORD(v93) = HIDWORD(a29) ^ v219 ^ (v222 >> 12) ^ (v222 << 20) ^ (v215 - 1728492781 - ((2 * v215) & 0x31F29626));
  unsigned int v228 = (char *)*(&off_1022AC750 + a27) - 4;
  uint64_t v229 = *(unsigned int *)(v61 - 128);
  unsigned int v230 = (char *)*(&off_1022AC750 + (int)v229 - 921) - 12;
  unsigned int v231 = *(_DWORD *)&v228[4 * (v227 ^ 7)] ^ *(_DWORD *)&v230[4
                                                                            * (((unsigned __int16)(WORD2(a29) ^ v219 ^ (v222 >> 12) ^ (v215 + 19219 - ((2 * v215) & 0x9626))) >> 8) ^ 0x51)] ^ 0x9D217A88;
  LODWORD(v90) = *(_DWORD *)&v230[4 * (BYTE1(v226) ^ 0xC)];
  int v232 = *(_DWORD *)&v230[4 * ((unsigned __int16)(v227 ^ 0x6F07) >> 8)];
  int v233 = *(_DWORD *)&v230[4 * (BYTE1(v103) ^ 0x36)];
  int v234 = (char *)*(&off_1022AC750 + (int)a26) - 8;
  uint64_t v235 = *(unsigned int *)&v234[4 * (HIBYTE(v227) ^ 0xEF)];
  int v236 = *(_DWORD *)&v234[4 * ((v103 >> 24) ^ 0x24)];
  int v237 = *(_DWORD *)&v234[4 * (BYTE3(v93) ^ 0x47)];
  LODWORD(v234) = *(_DWORD *)&v234[4 * (HIBYTE(v226) ^ 0x4F)];
  unsigned int v238 = v236 ^ (v231 + 1115978535 - ((2 * v231) & 0x8508F64E));
  int v239 = (char *)*(&off_1022AC750 + SHIDWORD(a26)) - 12;
  int v240 = *(_DWORD *)&v239[4 * (BYTE2(v93) ^ 0xE5)];
  int v241 = *(_DWORD *)&v239[4 * (BYTE2(v227) ^ 0x2A)];
  int v242 = *(_DWORD *)&v239[4 * (BYTE2(v103) ^ 0xAE)];
  unsigned int v243 = *(_DWORD *)&v239[4 * (BYTE2(v226) ^ 0x71)] ^ (v238 - 572306882 - ((2 * v238) & 0xBBC6947C));
  LODWORD(v239) = *(_DWORD *)&v228[4 * (v226 ^ 0xC8)];
  int v244 = *(_DWORD *)&v228[4 * (v103 ^ 0x2D)];
  LODWORD(v98) = *(_DWORD *)&v228[4 * (v93 ^ 7)];
  LODWORD(v93) = *(_DWORD *)(v61 - 160) ^ HIDWORD(a52) ^ (v243 - ((2 * v243) & 0xA4DD676) - 2061046981);
  int v245 = (char *)*(&off_1022AC750 + SHIDWORD(a25)) - 12;
  *(unsigned char *)(*(void *)(v61 - 120) + v264) = v245[BYTE3(v93) ^ 0xD7] ^ 0x94;
  LODWORD(v234) = ((v240 ^ 0xE62597B2 ^ v232) + 1115978535 - ((2 * (v240 ^ 0xE62597B2 ^ v232)) & 0x8508F64E)) ^ v234;
  LODWORD(v234) = (v234 - 1494767868 - ((2 * v234) & 0x4DCF4E08)) ^ v244;
  LODWORD(v234) = *(_DWORD *)(v61 - 152) ^ a53 ^ (v234 - ((2 * v234) & 0xEF6D476E) + 2008458167);
  int v246 = (char *)*(&off_1022AC750 + (int)a25) - 4;
  *(unsigned char *)(*(void *)(v61 - 120) + *(void *)(v61 - 248)) = (v246[v234 ^ 0xC7] - 44) ^ 0x5F;
  uint64_t v247 = (uint64_t)*(&off_1022AC750 + SHIDWORD(a24));
  int v248 = *(unsigned __int8 *)(v247 + (BYTE1(v234) ^ 0x13));
  HIDWORD(v101) = v248 ^ 0x22;
  LODWORD(v101) = (v248 ^ 0x80) << 24;
  *(unsigned char *)(*(void *)(v61 - 120) + v262) = (v101 >> 30) ^ 0x40;
  unsigned int v249 = ((v239 ^ 0x7B04ED3A ^ v241)
        + 1115978535
        - ((2 * (v239 ^ 0x7B04ED3A ^ v241)) & 0x8508F64E)) ^ v237;
  int v250 = (v249 - ((2 * v249) & 0x778DBB18) + 1002888588) ^ v233;
  unsigned int v251 = *(_DWORD *)(v61 - 144) ^ a54 ^ (v250 - ((2 * v250) & 0xC0518D78) + 1613285052);
  int v252 = *(unsigned __int8 *)(v247 + BYTE1(v251));
  HIDWORD(v101) = v252 ^ 0x22;
  LODWORD(v101) = (v252 ^ 0x80) << 24;
  *(unsigned char *)(*(void *)(v61 - 120) + *(void *)(v61 - 240)) = (v101 >> 30) ^ 0x7E;
  uint64_t v253 = (uint64_t)*(&off_1022AC750 + (int)a24);
  *(unsigned char *)(*(void *)(v61 - 120) + v263) = *(unsigned char *)(v253 + (BYTE2(v93) ^ 0xFBLL)) ^ 0x18;
  int v254 = ((v90 ^ 0x7942A6AB ^ v235) - 572306882 - ((2 * (v90 ^ 0x7942A6AB ^ v235)) & 0xBBC6947C)) ^ v242;
  unsigned int v255 = v98 ^ (v254 - 1494767868 - ((2 * v254) & 0x4DCF4E08));
  uint64_t v256 = *(void *)(v61 - 120);
  uint64_t v257 = *(_DWORD *)(v61 - 136) ^ HIDWORD(a53) ^ (v255 - ((2 * v255) & 0xF340FFD4) - 106922006);
  *(unsigned char *)(v256 + *(void *)(v61 - 200)) = *(unsigned char *)(v253 + (BYTE2(v257) ^ 0xB8)) ^ 0xCB;
  *(unsigned char *)(v256 + v265) = (v246[v93 ^ 0x1BLL] - 44) ^ 0x7D;
  *(unsigned char *)(v256 + *(void *)(v61 - 256)) = *(unsigned char *)(v253 + (BYTE2(v234) ^ 3)) ^ 0xB5;
  uint64_t v258 = *(void *)(v61 - 216);
  *(unsigned char *)(v256 + *(void *)(v61 - 208)) = v245[(v234 >> 24) ^ 0x6DLL] ^ 0x6C;
  LODWORD(v234) = *(unsigned __int8 *)(v247 + (BYTE1(v93) ^ 0x92));
  HIDWORD(v101) = v234 ^ 0x22;
  LODWORD(v101) = (v234 ^ 0x80) << 24;
  *(unsigned char *)(v256 + *(void *)(v61 - 176)) = (v101 >> 30) ^ 0xD2;
  *(unsigned char *)(v256 + v258) = v245[HIBYTE(v251) ^ 0x53] ^ 0x80;
  *(unsigned char *)(v256 + *(void *)(v61 - 192)) = (v246[v251 ^ 0x95] - 44) ^ 0xAF;
  *(unsigned char *)(v256 + v266) = (v246[v257 ^ 0x64] - 44) ^ 0x27;
  *(unsigned char *)(v256 + *(void *)(v61 - 184)) = v245[BYTE3(v257) ^ 0x6ELL] ^ 0x16;
  LODWORD(v234) = *(unsigned __int8 *)(v247 + (BYTE1(v257) ^ 0x1FLL));
  HIDWORD(v101) = v234 ^ 0x22;
  LODWORD(v101) = (v234 ^ 0x80) << 24;
  *(unsigned char *)(v256 + *(void *)(v61 - 224)) = (v101 >> 30) ^ 0x58;
  *(unsigned char *)(v256 + *(void *)(v61 - 168)) = *(unsigned char *)(v253 + (BYTE2(v251) ^ 0xC8)) ^ 0x9A;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(a56 + 8 * ((3582 * (((v258 + 917505192 - 2 * ((v258 + 16) & *(_DWORD *)(v61 - 228) ^ v58 & 6)) ^ 0x36B00498u) < a29)) ^ ((int)v229 + 311))))(149, 100, 181, v257, 34, v235, 2800199428, v229, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_100384204@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10)
{
  int v12 = a1 - 552;
  unsigned int v13 = 1225351577 * (((&a9 | 0x82E44BD3) - (&a9 & 0x82E44BD3)) ^ 0xA17E93C5);
  a9 = v13 + a1 - 427;
  a10 = v13 ^ 0x4C;
  uint64_t v14 = (*(uint64_t (**)(int *))(v10 + 8 * (a1 ^ 0xBC8)))(&a9);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((1644
                                              * (**(_DWORD **)(v11 + 8 * (v12 - 185)) == ((v12 + 186380027) & 0xF4E415D2)
                                                                                         - 1488)) | v12)))(v14);
}

void sub_1003842C8()
{
}

uint64_t sub_10038432C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, int a7)
{
  BOOL v11 = a6 > v8;
  int v12 = v9 + 438218767 + (v10 ^ 8);
  int v13 = v11 ^ (v12 < -1603971816);
  BOOL v14 = v12 < a7;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v11 * (v10 + 1321)) ^ v10)))();
}

uint64_t sub_100384384()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((*v2 > ((82 * (v0 ^ 0x110) + 38316740) & 0xFDB753DF)
                                      + ((82 * (v0 ^ 0x110) - 105347402) & 0x64777ED)
                                      - 1908) | (82 * (v0 ^ 0x110)))))();
}

void sub_1003843E8()
{
}

void sub_1003843F0()
{
}

uint64_t sub_100384834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  BOOL v25 = HIDWORD(a10) < 0x5D72B0E9;
  if (v25 == (v22 + 215038651) < 0x5D72B0E9) {
    BOOL v25 = (v22 + 215038651) < HIDWORD(a10);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * ((127 * ((((v23 - 390) ^ v25) & 1) == 0)) ^ v23)))(a1, 215038651, HIDWORD(a10), 394, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1003848AC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((v0 == (v1 ^ 0x52D74BEC37035495)) * (v1 - 663)) | v1)))();
}

uint64_t sub_1003848F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return sub_100378CE8(a1, a2, 2386288954, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1003848FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8
                                                             + 8
                                                             * ((59
                                                               * (v7 >= ((v6 + ((a5 - 1505) ^ (v5 + 571)) + 254) ^ 0x136u))) ^ (a5 - 1505))))(a1, a2, 0);
}

void sub_10038493C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16)
     - 460628867 * (((a1 ^ 0x68759CF4 | 0x87CE5E15) - ((a1 ^ 0x68759CF4) & 0x87CE5E15)) ^ 0xA32D409C);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100384A78()
{
  uint64_t v4 = *(void *)(v6 + 32);
  *(_DWORD *)(v3 - 112) = v0 + 1374699841 * ((((v3 - 128) | 0xF444FDE1) + (~(v3 - 128) | 0xBBB021E)) ^ 0x99B0E5E9) - 138;
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 120) = v4;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xA97)))(v3 - 128);
}

uint64_t sub_100384B30()
{
  int v5 = 628203409 * ((2 * ((v4 - 200) & 0x25866240) - (v4 - 200) - 629563969) ^ 0x58F1918C);
  *(void *)(v4 - 200) = v2;
  *(_DWORD *)(v4 - 192) = v5 + v1 - 39;
  *(_DWORD *)(v4 - 188) = v0 - v5 - 1125036854;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 + 1490)))(v4 - 200);
  return ((uint64_t (*)(uint64_t))STACK[0x4C8])(v6);
}

void sub_100384BB8()
{
}

uint64_t sub_100384C50()
{
  *int v0 = v5 ^ v1 ^ v9;
  unsigned int v11 = v4 + v5 + 535753261 * (((v10 | 0x8B130A1B) - (v10 & 0x8B130A1B)) ^ 0x81E70434);
  uint64_t v12 = v7;
  (*(void (**)(unsigned char *))(v3 + 8 * (v4 + v5 + 312)))(v10);
  uint64_t v12 = v8;
  unsigned int v11 = v4
      + v5
      + 535753261 * ((-257335632 - (v10 | 0xF0A95EB0) + (v10 | 0xF56A14F)) ^ 0x5A2AF60);
  (*(void (**)(unsigned char *))(v3 + 8 * (v4 + v5 + 312)))(v10);
  return v2 ^ 0x241DE93Au;
}

uint64_t sub_100384D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v19 - 120) = v14 + ((v19 - 136) ^ v18) * v15 + 698;
  *(void *)(v19 - 112) = v17;
  *(void *)(v19 - 128) = a14;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v14 ^ 0x9FE)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((1473
                                              * ((v14 ^ 0x72Eu) - 1535753244 + *(_DWORD *)(v19 - 136) < 0xF5164D51)) ^ v14)))(v20);
}

void sub_100384DF4()
{
}

void sub_100384DFC()
{
}

uint64_t sub_100384E08@<X0>(unsigned int a1@<W1>, uint64_t a2@<X8>)
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x38C18B7A1BA3131CLL) + 1968961400 + ((a1 - 558) | 0x219);
  unsigned int v4 = *(_DWORD *)(v2 - 0x38C18B7A1BA31320) - 1874984481;
  BOOL v5 = v3 < 0xBE64DAA4;
  BOOL v6 = v3 > v4;
  if (v4 < 0xBE64DAA4 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(a2 + 8 * ((238 * v6) ^ a1)))();
}

void sub_100384EA0()
{
  LODWORD(STACK[0x478]) = 1791330438;
  JUMPOUT(0x100378110);
}

uint64_t sub_100384EB8()
{
  uint64_t v2 = dword_10241A064;
  unint64_t v3 = 1755732067
     * ((0x7DB27F721CB00F00 - ((v1 - 152) | 0x7DB27F721CB00F00) + ((v1 - 152) | 0x824D808DE34FF0FFLL)) ^ 0x5FE627B23D894D24);
  *(_DWORD *)(v1 - 112) = v3 ^ 0x9B531E92;
  STACK[0x5D8] = v2 + v3;
  STACK[0x5C8] = 647934162 - v3;
  *(_DWORD *)(v1 - 128) = v3 + 1779912157;
  *(_DWORD *)(v1 - 140) = v3 ^ 0x6A174DFC;
  *(_DWORD *)(v1 - 148) = v3;
  *(_DWORD *)(v1 - 144) = v3 + 1779912100;
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v0 + 18072))(v1 - 152);
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * *(int *)(v1 - 152)))(v4);
}

uint64_t sub_1003851E0()
{
  unsigned int v3 = v1 - ((2 * v1 + 41217778) & 0x510FAB0) + ((5 * (v2 ^ 0x632)) ^ 0x97C2F244);
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((228
                                * (((2 * v3) & 0xEFF9FF7E ^ 0x510FA30) + (v3 ^ 0x757482E7) - 1636827272 != 376241975)) ^ v2)))();
}

void sub_100385274()
{
  *uint64_t v0 = -605900273;
}

uint64_t sub_1003852D0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W5>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  *(_DWORD *)(v47 - 128) = a3 + 6;
  *(_DWORD *)(v47 - 136) = a3 + 5;
  *(_DWORD *)(v47 - 144) = a3 + 4;
  v53.val[1].i64[0] = ((_BYTE)a3 + 12) & 0xF;
  v53.val[1].i64[1] = ((_BYTE)a3 + 11) & 0xF;
  v53.val[2].i64[0] = ((_BYTE)a3 + 10) & 0xF;
  v53.val[2].i64[1] = ((_BYTE)a3 + 9) & 0xF;
  v53.val[3].i64[0] = ((_BYTE)a3 + 8) & 0xF;
  v53.val[3].i64[1] = ((_BYTE)a3 + 7) & 0xF;
  unsigned int v48 = a2 + a1 + v46;
  v49.i64[0] = 0x7777777777777777;
  v49.i64[1] = 0x7777777777777777;
  v53.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)v46) & 0xF;
  v53.val[0].i64[1] = ((_BYTE)a3 + 13) & 0xF;
  v50.i64[0] = vqtbl4q_s8(v53, (int8x16_t)xmmword_101D1C120).u64[0];
  v54.val[0].i64[1] = *(_DWORD *)(v47 - 136) & 0xF;
  v54.val[1].i64[1] = ((_BYTE)a3 + 3) & 0xF;
  v54.val[2].i64[1] = ((_BYTE)a3 + 1) & 0xF;
  v54.val[3].i64[1] = ((_BYTE)a3 - 1) & 0xF;
  v54.val[0].i64[0] = *(_DWORD *)(v47 - 128) & 0xF;
  v54.val[1].i64[0] = *(_DWORD *)(v47 - 144) & 0xF;
  v54.val[2].i64[0] = ((_BYTE)a3 + 2) & 0xF;
  v54.val[3].i64[0] = a3 & 0xF;
  v50.i64[1] = vqtbl4q_s8(v54, (int8x16_t)xmmword_101D1C120).u64[0];
  int8x16_t v51 = vrev64q_s8(vmulq_s8(v50, v49));
  *(int8x16_t *)(a6 - 15 + v48) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v44 + (v48 & 0xF) - 15), *(int8x16_t *)(a6 - 15 + v48)), veorq_s8(*(int8x16_t *)((v48 & 0xF) + v43 - 13), *(int8x16_t *)((v48 & 0xF) + v42 - 11))), vextq_s8(v51, v51, 8uLL));
  return (*(uint64_t (**)(void))(a42 + 8 * ((1831 * (a4 - (v45 & 0xFFFFFFF0) == 1973)) ^ (a5 - 609))))();
}

uint64_t sub_10038544C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,int a24,int a25)
{
  return sub_1003854C4(3658457652, ((a25 + (v25 ^ v27)) ^ 0x6EFD7EFF) + ((v26 - 1425) ^ 0xFFFBBDAB) + ((2 * (a25 + (v25 ^ v27))) & 0xDDFAFDFE), (((a23 ^ v27) + a24) ^ 0xC7BFEFCB) + 961921016 + ((2 * ((a23 ^ v27) + a24)) & 0x8F7FDF96));
}

uint64_t sub_1003854C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  BOOL v18 = HIDWORD(a16) < 0x612F8478;
  unsigned int v19 = v16 - 515 + a3 + 1612305589;
  int v20 = v18 ^ (v19 < ((v16 - 98) ^ 0x612F85D9u));
  BOOL v21 = v19 < HIDWORD(a16);
  if (!v20) {
    BOOL v18 = v21;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * ((11 * v18) ^ v16)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_100385530(unint64_t a1)
{
  STACK[0x530] = v2 - 176;
  STACK[0x458] = a1;
  return (*(uint64_t (**)(void))(v4 + 8 * (v1 ^ (1375 * (v3 > a1)))))();
}

uint64_t sub_1003855D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  *(_DWORD *)(v31 - 112) = v30 + 1374699841 * ((v31 - 128) ^ 0x6DF41809) - 738;
  *(void *)(v31 - 128) = a28;
  *(void *)(v31 - 120) = v28;
  (*(void (**)(uint64_t))(v29 + 8 * (v30 + 1051)))(v31 - 128);
  *(void *)(v31 - 104) = a26;
  *(void *)(v31 - 120) = a28;
  *(_DWORD *)(v31 - 112) = v30
                         + 1178560073
                         * ((((v31 - 128) | 0x1AA0451E) - (v31 - 128) + ((v31 - 128) & 0xE55FBAE0)) ^ 0xA0343D7C)
                         - 167;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v30 + 1037)))(v31 - 128);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * ((7 * (*(_DWORD *)(v31 - 128) <= 11 * (v30 ^ 0x43Eu) + 1535749975)) ^ v30)))(v32);
}

void sub_1003856DC()
{
}

uint64_t sub_1003856E8()
{
  uint64_t v4 = v2 + v0;
  if ((unint64_t)(v4 + 1) > 0x38) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((456
                                * ((((877 * (v1 ^ 0x2FF)) ^ (v5
                                                           - v0
                                                           + (unint64_t)((v1 ^ 0x2FFu) + 1497)
                                                           + 2004721437 < 8)) & 1) == 0)) ^ v1)))();
}

void sub_100385758()
{
}

uint64_t sub_10038576C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v75 = 235795823 * ((((v74 - 200) | 0xFD09330A) - ((v74 - 200) & 0xFD09330A)) ^ 0x69A47A53);
  *(_DWORD *)(v74 - 164) = v72 - v75 + 737;
  *(_DWORD *)(v74 - 200) = v75 ^ 0x806CD818;
  *(void *)(v74 - 184) = a70;
  *(void *)(v74 - 176) = a71;
  *(void *)(v74 - 192) = v71;
  uint64_t v76 = (*(uint64_t (**)(uint64_t))(v73 + 8 * (v72 + 1567)))(v74 - 200);
  return (*(uint64_t (**)(uint64_t))(v73
                                            + 8
                                            * (((*(_DWORD *)(v74 - 168) != (((v72 - 714) | 0x44) ^ 0x241DE974))
                                              * (((v72 - 720) | 0x4A) ^ 0x72)) ^ v72)))(v76);
}

uint64_t sub_100385868@<X0>(uint64_t a1@<X8>)
{
  STACK[0x580] = 104 - a1;
  uint64_t v2 = (uint64_t (*)(void))STACK[0x628];
  STACK[0x530] = v1 - 112;
  return v2();
}

uint64_t sub_100385888(uint64_t result)
{
  unint64_t v1 = 1374699841 * ((result - 2 * (result & 0xA8F7ECC532399345) - 0x5708133ACDC66CBBLL) ^ 0xA6FB72C95FCD8B4CLL);
  unint64_t v2 = *(void *)(result + 16) ^ v1;
  unint64_t v3 = *(void *)(result + 8) - v1;
  BOOL v4 = v2 >= v3;
  BOOL v5 = (uint64_t)v2 < (uint64_t)v3;
  int v6 = !v4;
  if (((*(_DWORD *)(result + 24) + 1374699841 * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C)) & 1) == 0) {
    BOOL v5 = v6;
  }
  BOOL v7 = !v5;
  uint64_t v8 = 32;
  if (!v7) {
    uint64_t v8 = 28;
  }
  *(_DWORD *)(result + 36) = *(_DWORD *)(result + 40) ^ (1374699841
                                                       * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C)) ^ *(_DWORD *)(result + v8) ^ (1374699841 * ((result - 2 * (result & 0x32399345) + 842634053) ^ 0x5FCD8B4C));
  return result;
}

uint64_t sub_100385918@<X0>(char a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + v4 + v5) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v4 + v5 + 1) < 0x38) * a2) ^ v3)))();
}

uint64_t sub_100385948(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  BOOL v21 = a8 > v19;
  *(_DWORD *)(a16 + 4 * (a2 - 141255583)) = v16;
  if (v21 == a2 - 1964489400 < 324249830) {
    BOOL v21 = a2 - 1964489400 < v18;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((v21 * ((v17 + 98) ^ 0x136)) ^ v17)))();
}

uint64_t sub_100385A04(uint64_t a1, uint64_t a2, int a3, int a4, int a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (a5 ^ (4 * (*(_DWORD *)(*v8 + 4 * a6) != ((((a5 + a3) & a4) + 78) ^ (v6 + 1624)))))))();
}

uint64_t sub_100385A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned char *a19)
{
  int v22 = *(unsigned char **)(a8 + 96);
  v22[1167] = a19[19];
  v22[1166] = a19[18];
  v22[1165] = a19[17];
  v22[1164] = a19[16];
  v22[1163] = a19[15];
  v22[1162] = a19[14];
  v22[1161] = a19[13];
  v22[1160] = a19[12];
  v22[1159] = a19[11];
  v22[1158] = a19[10];
  v22[1157] = a19[9];
  v22[1156] = a19[8];
  v22[1155] = a19[7];
  v22[1154] = a19[6];
  v22[1153] = a19[5];
  v22[1152] = a19[4];
  v22[1151] = a19[3];
  v22[1150] = a19[2];
  v22[1149] = a19[1];
  v22[1148] = *a19;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v20
                                                     + 8
                                                     * (((*(_DWORD *)(a8 + 72) == (((v19 ^ 0x3B2) - 1496441251) & 0x5931E7EA ^ (a5 + 1504)))
                                                       * ((((v19 ^ 0x3B2) + 538009951) | 0x1846000A) ^ (a6 - 451))) ^ ((v19 ^ 0x3B2) + 191))))(v21, a2);
}

uint64_t sub_100385B78@<X0>(int a1@<W1>, uint64_t a2@<X3>, int a3@<W6>, int a4@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1187 * (*(_DWORD *)(a2 + 48 * a1 + 36) + 1361803302 < ((a3 + a4 - 646) ^ 0xF1C42114))) ^ a4)))();
}

uint64_t sub_100385BD8(uint64_t a1)
{
  int v1 = 535753261 * ((a1 - 1922189914 - 2 * (a1 & 0x8D6DB5A6)) ^ 0x8799BB89);
  int v2 = *(_DWORD *)(a1 + 16) + v1;
  int v3 = *(_DWORD *)(*(void *)(a1 + 24) - 0x1F010F7499D3F7A2);
  int v4 = *(_DWORD *)a1 ^ v1;
  unsigned int v6 = v3 - 1902603612;
  BOOL v5 = v3 - 1902603612 < 0;
  unsigned int v7 = 1902603612 - v3;
  if (v5) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1022AC750 + (v2 ^ 0x4CA))
                              + 8 * ((((v4 - 285368842) >= 4 * (unint64_t)v8) * (v2 ^ 0x483)) ^ v2)
                              - 4))();
}

uint64_t sub_100385CA4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  unsigned int v70 = ((1424150546 - (v66 | 0x54E2D012) + (v66 | 0xAB1D2FED)) ^ 0x3FB066B4) * v67;
  *(_DWORD *)(v69 - 200) = a1 ^ v70;
  *(_DWORD *)(v69 - 164) = v64 - v70 + 1383;
  *(void *)(v69 - 192) = v62;
  *(void *)(v69 - 184) = a61;
  *(void *)(v69 - 176) = a62;
  uint64_t v71 = (*(uint64_t (**)(uint64_t))(v68 + 8 * (v64 + 2213)))(v69 - 200);
  int v72 = *(_DWORD *)(v69 - 168);
  STACK[0x468] = v63;
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v68
                                                             + 8
                                                             * (((v72 == v65)
                                                               * ((((v64 + 563) | 0x74) ^ 0x678) + v64 + 679)) ^ v64)))(v71, 404244978, (__n128)0);
}

uint64_t sub_100385D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  HIDWORD(v46) = HIDWORD(a13) + 442912405;
  v44.i64[0] = 0x1818181818181818;
  v44.i64[1] = 0x1818181818181818;
  LODWORD(v46) = a3 + 2140413053;
  return sub_100387850(*(double *)vdupq_n_s32(0x483BD274u).i64, *(double *)vdupq_n_s32(0x241DE93Au).i64, v44, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           v46,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_100385DF8(uint64_t a1, uint64_t a2, int a3)
{
  v9.i64[0] = 0x3030303030303030;
  v9.i64[1] = 0x3030303030303030;
  v10.i64[0] = 0x1818181818181818;
  v10.i64[1] = 0x1818181818181818;
  uint64_t v11 = v7 + ((a3 - 945) ^ v5);
  int8x16_t v12 = vrev64q_s8(*(int8x16_t *)(v4 + v11 - 15));
  int8x16_t v13 = vextq_s8(v12, v12, 8uLL);
  int8x16_t v14 = vrev64q_s8(*(int8x16_t *)(v4 + v11 - 31));
  int8x16_t v15 = vextq_s8(v14, v14, 8uLL);
  uint64_t v16 = v3 + v11;
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v13, vandq_s8(vaddq_s8(v13, v13), v9)), v10));
  *(int8x16_t *)(v16 - 15) = vextq_s8(v17, v17, 8uLL);
  int8x16_t v18 = vrev64q_s8(vaddq_s8(vsubq_s8(v15, vandq_s8(vaddq_s8(v15, v15), v9)), v10));
  *(int8x16_t *)(v16 - 31) = vextq_s8(v18, v18, 8uLL);
  return (*(uint64_t (**)(void))(v8 + 8 * ((239 * ((v6 & 0xFFFFFFE0) == 32)) ^ (a3 + 255))))();
}

uint64_t sub_100385E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v12 = (a5 - 1308443638);
  *(unsigned char *)(v10 + v12) ^= *(unsigned char *)(v8 + (v12 & 0xF)) ^ *(unsigned char *)(v7 + (v12 & 0xF)) ^ *(unsigned char *)(v9 + (v12 & 0xF)) ^ (5 * (v12 & 0xF)) ^ 0x18;
  return (*(uint64_t (**)(void))(v11 + 8 * ((1922 * (a5 - 1 == v6)) ^ (a6 - 519))))();
}

uint64_t sub_100385EF8@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  unsigned int v5 = v2 - 545942177;
  BOOL v6 = v5 < 3 * (v4 ^ 0x480u) + 1486813834;
  BOOL v7 = v3 + 1486814221 < v5;
  if (v3 > 0xA76103F2 != v6) {
    BOOL v7 = v6;
  }
  if (v7) {
    int v8 = a2;
  }
  else {
    int v8 = a2 + 1;
  }
  *(_DWORD *)(result + 12) = v8;
  return result;
}

void sub_100385F60()
{
  unint64_t v4 = STACK[0x528] + 0x2E910FB81C0D985FLL;
  STACK[0x5D0] = v4;
  int v5 = 1178560073 * (((((v3 - 200) | 0x1B34570E) ^ 0xFFFFFFFE) - (~(v3 - 200) | 0xE4CBA8F1)) ^ 0x5E5FD093);
  *(_DWORD *)(v3 - 184) = -1882357475 - v5 + v1 + 9;
  *(void *)(v3 - 192) = v4;
  *(_DWORD *)(v3 - 200) = 221124111 - v5;
  unint64_t v6 = v0;
  (*(void (**)(uint64_t))(v2 + 8 * ((int)v1 + 2253)))(v3 - 200);
  STACK[0x4C8] = *(void *)(v2 + 8 * v1);
  STACK[0x430] = v6;
  JUMPOUT(0x10036E778);
}

uint64_t sub_100386020(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8 * (a14 | (2 * (a4 + a3 + 33829186 >= ((a14 - 952) ^ 0x17Cu) - 528)))))(v14);
}

void sub_100386084(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1003861DC(uint64_t result)
{
  *(_DWORD *)(result + 4) = -1045335036;
  return result;
}

uint64_t sub_1003861EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((a8 + 370 + ((a8 - 387) | 0x56) - 2629) * (v9 == a5)) ^ a8)))();
}

uint64_t sub_100386220()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((3489
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                 + (((v3 - 1498) | 0x301) ^ (v0 - 761) ^ (*(unsigned __int8 *)(v2 + 6) - 1)) == v0)) ^ v3)))();
}

uint64_t sub_10038626C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((*(void *)(v0 - 0x38C18B7A1BA3132CLL) == 0)
                                     * ((((v2 - 1225) | 0x85) ^ 0xFFFFF5C6) + (((v2 - 1225) | 0x85) ^ 0xA16))) ^ ((v2 - 1225) | 0x85))))();
}

uint64_t sub_1003862E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                                                 + 8
                                                                                                 * ((((v8 ^ 0x7DE) + 168) * (v7 == v9)) ^ v8)))(a1, a2, a3, a4, a5, a6, (v8 ^ 0x7DEu) + 683);
}

uint64_t sub_100386348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(a7 + v10 + a2) = v11;
  return (*(uint64_t (**)(void))(v13 + 8 * ((((v8 ^ v9) + v10 < 0x38) * v12) ^ v7)))();
}

uint64_t sub_100386378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(void))(v16 + 8 * (((v14 ^ 0x7A4 ^ (15 * (v14 ^ 0x4B2))) * (a14 == v15)) ^ v14)))();
}

uint64_t sub_1003863BC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((38 * (((v0 - 79) ^ (v2 > 0x82)) & 1)) ^ (v0 + 1270))))();
}

uint64_t sub_1003863F4()
{
  void *v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_100386418(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((63 * (v1 >= ((a1 - 528119779) & 0x1F7A75AF ^ (a1 - 531)))) ^ (a1 + 590))))();
}

void sub_100386460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  *v41 ^= a41;
  JUMPOUT(0x10037776CLL);
}

void sub_100386480(_DWORD *a1@<X8>)
{
  *a1 = v1;
  JUMPOUT(0x10034FDBCLL);
}

uint64_t sub_100386490()
{
  int v4 = 535753261 * ((v3 - 463337055 - 2 * ((v3 - 200) & 0xE4620A69)) ^ 0xEE960446);
  *(void *)(v3 - 160) = STACK[0x2E0];
  *(void *)(v3 - 200) = STACK[0x260];
  int v5 = LODWORD(STACK[0x25C]) ^ v4;
  *(_DWORD *)(v3 - 168) = v0 - v4 + ((v1 + 433) | 0xD5) + 1528210981;
  *(_DWORD *)(v3 - 176) = v5;
  *(_DWORD *)(v3 - 192) = v1 - v4 + 1829;
  *(void *)(v3 - 184) = STACK[0x268];
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 ^ 0x8B6)))(v3 - 200);
  int v7 = *(_DWORD *)(v3 - 172);
  LODWORD(STACK[0x48C]) = v7;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((2115 * (v7 == (((v1 + 21) | 8) ^ 0x241DE9B6))) ^ v1)))(v6);
}

uint64_t sub_10038657C()
{
  *(void *)(v6 - 112) = v0;
  *(void *)(v6 - 128) = v4;
  *(_DWORD *)(v6 - 120) = v5 + ((v6 - 136) ^ 0xBA947862) * v3 + 774;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v5 ^ 0x84A)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((*(_DWORD *)(v6 - 136) > v1) * (v5 + 89)) ^ v5)))(v7);
}

uint64_t sub_1003865F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  unsigned int v29 = (v23 + 219273566) & 0xF2EE277F;
  int v30 = 1759421093 * ((~((v28 - 128) | 0x612BA562) + ((v28 - 128) & 0x612BA562)) ^ 0x2DA9EAC9);
  *(_DWORD *)(v28 - 112) = v23 - v30 - 114;
  *(void *)(v28 - 120) = v26;
  *(_DWORD *)(v28 - 128) = v25 - v30 + (v29 ^ 0xEF7F442A);
  (*(void (**)(uint64_t))(v22 + 8 * (v23 ^ 0xD4F)))(v28 - 128);
  *(_DWORD *)(v28 - 112) = v29
                         + ((((v28 - 128) | 0x9EF6CB4A) - (v28 - 128) + ((v28 - 128) & 0x610934B0)) ^ 0x2462B328) * v27
                         - 623;
  *(void *)(v28 - 120) = a22;
  *(void *)(v28 - 104) = a20;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (int)(v29 + 581)))(v28 - 128);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (int)(((*(_DWORD *)(v28 - 128) + ((v29 - 540939123) & 0x203E0FC7 ^ v24) < 0xC029A128)
                                                   * (((v29 + 26811787) & 0xFE66DFF6) - 831)) ^ v29)))(v31);
}

void sub_100386754()
{
}

uint64_t sub_10038677C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t *a22,uint64_t a23,unsigned int a24,unsigned int a25,int a26,int a27)
{
  unsigned int v30 = 460628867 * ((2 * (&a22 & 0x420AA0F0) - &a22 + 1039490828) ^ 0x7163DD71);
  a22 = &STACK[0x44D5F6D91B577B44];
  a23 = a17;
  a24 = v30 - 1056264226;
  a25 = v30 + v28 - 2024874185;
  a26 = a12 - v30 - 2 * (a12 & 1) + 366164237;
  uint64_t v31 = (*(uint64_t (**)(unint64_t **))(v29 + 8 * (v28 ^ 0xCFC)))(&a22);
  return (*(uint64_t (**)(uint64_t))(v29
                                            + 8
                                            * (int)(((a27 == v27)
                                                   * ((((v28 + 546795885) & 0xDF688F6D) - 627) ^ (38 * (v28 ^ 0x446)))) ^ v28)))(v31);
}

uint64_t sub_100386880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,unint64_t *a39,uint64_t a40,unint64_t a41,uint64_t a42,unint64_t *a43,uint64_t a44,unint64_t a45,uint64_t a46,unint64_t *a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,unint64_t *a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,unint64_t *a57,uint64_t a58,int32x4_t a59,int32x4_t a60,uint64_t a61,uint64_t a62,int a63)
{
  a44 = v73;
  STACK[0x378] = 0;
  a39 = &STACK[0x10F2F6EBA8F8364];
  STACK[0x3C8] = (unint64_t)&STACK[0x12290867A03C17FF];
  STACK[0x3C0] = (unint64_t)&STACK[0x617AE0CD3EA91833];
  STACK[0x3B8] = (unint64_t)&STACK[0x1171F84DB0CF6060];
  STACK[0x3B0] = (unint64_t)&STACK[0x3004C2EB5640FAFD];
  a70 = &STACK[0x147CEA7F1774257B];
  a69 = &STACK[0x7A1D52918E41BCC];
  a68 = &STACK[0x147CEA7F177424C3];
  a67 = &STACK[0x7A1D52918E41B8C];
  a47 = &STACK[0x57DF31776D85621D];
  a57 = &STACK[0x10F2F6EBA8F8340];
  STACK[0x2A0] = (unint64_t)&STACK[0x147CEA7F17742613];
  STACK[0x298] = (unint64_t)&STACK[0x7A1D52918E41BFC];
  a52 = &STACK[0x41C0C6A038047345];
  STACK[0x250] = (unint64_t)&STACK[0x41C0C6A0380472E5];
  STACK[0x268] = (unint64_t)&STACK[0x64B4A486D173E308];
  STACK[0x260] = (unint64_t)&STACK[0x5F8E90DD49457733];
  a43 = &STACK[0x2E91F1FE0AA589D3];
  uint64_t v76 = *v72 - v70;
  STACK[0x218] = (unint64_t)v72;
  uint64_t v77 = v72[8] ^ v70;
  a45 = ((unint64_t)&STACK[0x5E8] ^ 0xED9FEFFF73786EE6)
      + 0x3FEFFFDDCE8FDFFALL
      + ((2 * (void)&STACK[0x5E8]) & 0xDB3FDFFEE6F0DDC0);
  HIDWORD(a40) = v76;
  LODWORD(STACK[0x25C]) = v76 - ((2 * v76 + 236540666) & 0x7CFEE422) - 980673650;
  LODWORD(a50) = 2 * v77;
  LODWORD(STACK[0x2B4]) = (v77 ^ 0x174084D6) - 1109529611 + ((2 * v77) & 0xFF64AABE ^ 0xD164A212);
  unint64_t v78 = ((unint64_t)&STACK[0x580] ^ 0x77FDFFBB597FF6FELL)
      - 0x6855322012851FELL
      + (((void)&STACK[0x580] << ((v71 + 35) ^ 5u)) & 0xEFFBFF76B2FFEDF0);
  a41 = ((unint64_t)&STACK[0x590] ^ 0x3FE6FCFBEB4F7BBCLL)
      - 0x2505B030847BCLL
      + ((2 * (void)&STACK[0x590]) & 0x7FCDF9F7D69EF770);
  a65 = ((unint64_t)&STACK[0x448] ^ 0xFBB430BF629FFBCDLL)
      + 0x3DDFCFC1BFEB9633
      + ((2 * (void)&STACK[0x448]) & 0xF768617EC53FF790);
  *(int32x4_t *)&STACK[0x350] = vdupq_n_s32(0x256D2A4Cu);
  *(int32x4_t *)&STACK[0x360] = vdupq_n_s32(0x7FFFFFFEu);
  a59 = vdupq_n_s32(0x241DE93Au);
  a60 = vdupq_n_s32(0x241DE93Eu);
  int v79 = STACK[0x43C];
  STACK[0x2D0] = (unint64_t)&STACK[0x444] - (unint64_t)&STACK[0x444] / 0x25 * v74 + 16;
  HIDWORD(a50) = v77;
  LODWORD(STACK[0x258]) = v77 ^ 0x68F2D189;
  STACK[0x228] = (unint64_t)&a9 - 0x2500E162B343A901;
  STACK[0x208] = (unint64_t)&a9 - 0x2500E162B343A8DALL;
  LODWORD(STACK[0x24C]) = v79 ^ 0xD583D1D9;
  LODWORD(STACK[0x240]) = v79 ^ 0x125;
  LODWORD(STACK[0x23C]) = (2 * (v79 ^ 0x125)) ^ 0x6B4;
  HIDWORD(a51) = 11 * (v79 ^ 0x252);
  LODWORD(STACK[0x2CC]) = v79 ^ 0xA25;
  STACK[0x428] = v75 | 0x1AA4E40F087B15E7;
  LODWORD(STACK[0x3F4]) = 8 * (v79 ^ 0x23F);
  unint64_t v80 = 235795823 * ((((2 * v75) | 0xEB269EA1BCC17E76) - v75 - 0x75934F50DE60BF3BLL) ^ 0x7D23F5AE4ACDF662);
  STACK[0x420] = v80;
  STACK[0x418] = v80 + 2879513770u;
  uint64_t v81 = 1374699841 * ((((2 * v75) | 0x57CB64B05A500F2) - v75 - 0x2BE5B2582D28079) ^ 0xCB2C529EF269870);
  STACK[0x410] = v81;
  STACK[0x408] = v81 + 2023757542;
  LODWORD(STACK[0x3F0]) = v79 + 1594019081;
  LODWORD(STACK[0x3EC]) = 4 * (v79 ^ 0x361);
  *(int32x4_t *)&STACK[0x330] = vdupq_n_s32(0x4ADA5499u);
  *(int32x4_t *)&STACK[0x340] = vdupq_n_s32(0x95B4A932);
  *(int32x4_t *)&STACK[0x320] = vdupq_n_s32(0x9CBB14FE);
  uint64_t v82 = 1374699841 * ((2 * (v75 & 0x3A7A47C7450DF978) - v75 + 0x4585B838BAF20681) ^ 0x4B892634D7061E88);
  LODWORD(STACK[0x314]) = v79 - 888662774;
  HIDWORD(a46) = 23 * (v79 ^ 0x2F8);
  HIDWORD(a56) = v79 ^ 0x2A0;
  a55 = v79 + 1421911162;
  a64 = v79 ^ 0x2AC;
  HIDWORD(a54) = 2 * (v79 ^ 0x6F0);
  LODWORD(a54) = v79 - 191220266;
  HIDWORD(a53) = v79 - 948839590;
  LODWORD(a53) = 147 * (v79 ^ 0x2FB);
  LODWORD(STACK[0x224]) = v79 + 2104191241;
  LODWORD(STACK[0x220]) = v79 ^ 0x273;
  HIDWORD(a58) = v79 + 228347122;
  LODWORD(STACK[0x238]) = v79 ^ 0x247;
  LODWORD(a46) = v79 ^ 0x775;
  HIDWORD(a38) = v79 ^ 0xA5C;
  HIDWORD(a37) = (v79 + 1194032138) & 0xB8D487AE;
  LODWORD(a38) = HIDWORD(a37) ^ 0x693;
  STACK[0x210] = v78;
  STACK[0x200] = v78 + 17;
  LODWORD(STACK[0x2EC]) = 712781012;
  HIDWORD(a49) = v79 ^ 0x29A;
  LODWORD(STACK[0x248]) = v79 ^ 0x2F6;
  LODWORD(STACK[0x244]) = v79 ^ 0x2F4;
  LODWORD(a51) = v79 ^ 0xA1B;
  HIDWORD(a42) = 154491382;
  STACK[0x318] = v82;
  STACK[0x308] = v82 + 72114335;
  return sub_100386FE0(3185437685, v76, a3, v77, a5, a6, 3689067235, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59.i64[0],
           a59.i64[1],
           a60.i64[0],
           a60.i64[1],
           a61);
}

uint64_t sub_100386FE0@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x4EC]) = v3;
  STACK[0x5F0] = (unint64_t)&STACK[0x6B0] + v1 - 0x2500E162B343AFF1;
  uint64_t v4 = (uint64_t)*(&off_1022AC750 + a1 - 102);
  int v5 = *(uint64_t (**)(void))(v2 + 8 * (((*(_DWORD *)(v4 - 4) != 0) * ((a1 - 1341846825) & 0x4FFAF465 ^ 0x5A)) ^ a1));
  STACK[0x2F0] = (unint64_t)*(&off_1022AC750 + (a1 ^ 0x116));
  STACK[0x388] = v4 - 4;
  return v5();
}

uint64_t sub_100387080()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((90 * (v0 < (((v1 + 867) | 0x24) ^ 0xABA1D852) + ((v1 + 291) | 0x264))) ^ (v1 - 226))))();
}

void sub_1003870CC()
{
  LODWORD(STACK[0x390]) = 0;
  STACK[0x398] = 0;
  JUMPOUT(0x1003870E8);
}

uint64_t sub_100387220@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1488 * (*(unsigned char *)(a1 + v2) == 94)) ^ v1)))();
}

void sub_100387268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v24 = 535753261 * ((v23 + 1435357870 - 2 * ((v23 - 144) & 0x558DD33E)) ^ 0x5F79DD11);
  *(_DWORD *)(v23 - 128) = v20 - v24 + 3;
  *(void *)(v23 - 120) = v22;
  *(void *)(v23 - 136) = a10;
  *(_DWORD *)(v23 - 144) = (a20 - 1286683910 + 3 * (v20 ^ 0x4E8)) ^ v24;
  (*(void (**)(uint64_t))(v21 + 8 * (v20 ^ 0xCBDu)))(v23 - 144);
  JUMPOUT(0x100359D58);
}

uint64_t sub_1003872FC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((89 * (v2 ^ 0x24E) - 94846888) & 0x5A73B7B) - 795)
                                * ((v1 - 2122182783) > 0xFFFFFFFD)) ^ v2)))();
}

void sub_100387354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2) {
    BOOL v8 = a3 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  int v12 = !v8 && a6 != 0 && a7 != 0 && a8 != 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1003873DC()
{
  int v4 = (v2 - 357) | 1;
  int v12 = &STACK[0x2E91F1FE0AA58383];
  uint64_t v13 = v7;
  unsigned int v10 = (v2 - 528) ^ (1374699841
                    * ((-1810256295 - (&v10 | 0x9419AE59) + (&v10 | 0x6BE651A6)) ^ 0x61249AF));
  (*(void (**)(unsigned int *))(v3 + 8 * (v2 + 1373)))(&v10);
  int v12 = v7;
  unsigned int v10 = (v2 + 1311) ^ (1755732067
                     * (((&v10 | 0x20BFA5DD) - (&v10 & 0x20BFA5DD)) ^ 0xFE791806));
  (*(void (**)(unsigned int *))(v3 + 8 * (v2 + 1374)))(&v10);
  if (v13 == (v4 ^ (v1 + 513))) {
    int v5 = v9;
  }
  else {
    int v5 = (int)v13;
  }
  int v12 = v7;
  unsigned int v11 = v2 + (((&v10 | 0x63B7244C) - (&v10 & 0x63B7244C)) ^ 0x69432A63) * v0 + 1068;
  (*(void (**)(unsigned int *))(v3 + 8 * (v2 + 1380)))(&v10);
  int v12 = v8;
  unsigned int v11 = v4
      + ((1845353981 - (&v10 | 0x6DFDDDFD) + (&v10 | 0x92022202)) ^ 0x98F62C2D) * v0
      + 1424;
  (*(void (**)(unsigned int *))(v3 + 8 * (v4 + 1736)))(&v10);
  return v5 ^ v1;
}

uint64_t sub_1003875D4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((((v3 ^ 0x125) + 197) | 4) ^ 0x2E3)
                                * (*(_DWORD *)(a2 + 48 * (v2 + v5 + 646) + 36) != v5)) ^ v3 ^ 0x125)))();
}

uint64_t sub_100387624@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v6 + (v2 + v3)) = *(unsigned char *)(a1 + (v2 + v3))
                                           - ((2 * *(unsigned char *)(a1 + (v2 + v3))) & 0x30)
                                           + 24;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v2 - 1 != (v1 ^ 0x5D) + v4) * v5) ^ v1)))();
}

uint64_t sub_100387694(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,unsigned int a45)
{
  unsigned int v50 = a5 ^ ((*v48 & 0x7FFFFFFE | v48[623] & 0x80000000) >> 1);
  v48[623] = v48[396] ^ a6 ^ *(_DWORD *)(v49 + 4 * ((*v48 & 1) == 0)) ^ (v50
                                                                         + a4
                                                                         - ((v45 - v47 - 1639992631) & (2 * v50)));
  return (*(uint64_t (**)(void))(v46 + 8 * ((179 * (a45 > 0x26F)) ^ v45)))();
}

uint64_t sub_10038770C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((493 * (v5 - a4 - ((a1 + 1726178048) & 0x991C9E45 ^ 0x241uLL) > 0x1F)) ^ a1)))();
}

uint64_t sub_100387758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((1119 * (*(_DWORD *)(a8 + 72) == ((9 * (v9 ^ 0x457) + 159) ^ (a6 + 319) ^ ((9 * (v9 ^ 0x457) + 159) | 0x20) ^ 0x5292EBE3))) ^ (9 * (v9 ^ 0x457)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_1003877C0()
{
}

uint64_t sub_100387848()
{
  return sub_100387850();
}

uint64_t sub_100387850(double a1, double a2, int8x16_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  int v57 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * v48);
  int v58 = BYTE4(a39) ^ 0xCB;
  HIDWORD(a20) = BYTE4(a39) ^ 0xFFFFFFCB;
  if (v58 == 2)
  {
    int v73 = a9 + a6 + 496;
    int8x16x4_t v84 = vld4q_s8(v49);
    uint8x16_t v74 = (uint8x16_t)veorq_s8(v84.val[1], a3);
    _Q22 = vmovl_u8(*(uint8x8_t *)v74.i8);
    _Q21 = vmovl_high_u8(v74);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    int v79 = (_DWORD *)(v47 + 4 * (v55 + 1565000181));
    int v80 = *(_DWORD *)(v47 + 4 * (v55 + 1565000181 + (v73 ^ 0xCu)) - 2068) ^ *(v79 - 3);
    int v81 = *(v79 - 16) ^ *(v79 - 14) ^ (v80 + v54 - ((2 * v80) & 0x483BD274));
    HIDWORD(v82) = v81 ^ v54;
    LODWORD(v82) = v81;
    *int v79 = (v82 >> 31) + v54 - ((2 * (v82 >> 31)) & 0x483BD274);
    return (*(uint64_t (**)(uint64_t))(v53
                                              + 8 * (((4 * (v56 == 1565000118)) | (8 * (v56 == 1565000118))) ^ v73)))(v50);
  }
  else if (v58 == 1)
  {
    int8x16x4_t v83 = vld4q_s8(v49);
    int v59 = a9 + a6 + 844;
    uint8x16_t v60 = (uint8x16_t)veorq_s8(v83.val[2], a3);
    _Q26 = vmovl_high_u8(v60);
    _Q25 = vmovl_u8(*(uint8x8_t *)v60.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    int v67 = (HIDWORD(a36) ^ v52)
        - 1155739989
        + ((a38 ^ v52) & ((v59 - 1590493134) & 0x5ECCFFFB ^ a37 ^ 0xB99F57E1) | (HIDWORD(a37) ^ v52) & (a37 ^ v52))
        + *((_DWORD *)*(&off_1022AC750 + (v59 ^ 0x3E6)) + v50 + v55)
        + (*(_DWORD *)(v47 + 4 * (*((unsigned char *)*(&off_1022AC750 + (v59 ^ 0x3F4)) + v50 + v55 - 8) - 61)) ^ v54);
    int v68 = v67 + v52 - (v51 & (2 * v67));
    uint64_t v69 = (uint64_t)*(&off_1022AC750 + (v59 ^ 0x352));
    int v70 = (((v68 ^ v52) << (*(unsigned char *)(v69 + v50 + v55) - 19)) | ((v68 ^ v52) >> (19 - *(unsigned char *)(v69 + v50 + v55))))
        + (a37 ^ v52);
    char v71 = *(uint64_t (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, void, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(void, uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * ((54 * (v50 + 1 == v56)) ^ v59));
    return v71(v50 + 1, 1565000181, &off_1022AC750, 3139227307, a37, v71, a38, v70 + v52 - (v51 & (2 * v70)), a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, __PAIR64__(a37, HIDWORD(a36)),
             __PAIR64__(a38, HIDWORD(a37)),
             v57,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47);
  }
  else
  {
    return v57(HIDWORD(a37), a5, a6, a7, HIDWORD(a37), a9, HIDWORD(a36), a37, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29);
  }
}

void sub_100387C98()
{
}

uint64_t sub_100387D68()
{
  STACK[0x2B8] = v0;
  STACK[0x5B0] = 0;
  int v4 = 235795823 * ((v3 + 1049346070 - 2 * ((v3 - 200) & 0x3E8BC0DE)) ^ 0xAA268987);
  *(_DWORD *)(v3 - 200) = v4 ^ 0x806CD81F;
  unint64_t v5 = STACK[0x298];
  *(void *)(v3 - 192) = 0x72E1645BEBB64013;
  *(void *)(v3 - 184) = v5;
  *(void *)(v3 - 176) = STACK[0x2A0];
  *(_DWORD *)(v3 - 164) = v1 - v4 - 350;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 + 480)))(v3 - 200);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8 * ((14 * (*(_DWORD *)(v3 - 168) != ((v1 - 1054) ^ 0x241DEBCF))) ^ v1)))(v6);
}

uint64_t sub_100387E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unsigned int a25)
{
  HIDWORD(a22) = v25;
  return sub_100362468(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           __SPAIR64__(v27, v26),
           a24,
           a25);
}

void sub_100387E48(int a1@<W8>)
{
  (*(void (**)(void, void, void, void, unint64_t *, unint64_t, void, unint64_t *))(v4 + 8 * (a1 ^ 0xA59)))(*(unsigned int *)STACK[0x388], (v2 + v1), LODWORD(STACK[0x258]), (*(_DWORD *)(STACK[0x388] + 52) - 1678855233), &STACK[0x1920], STACK[0x378], (v3 - 1886959599), &STACK[0x6A0]);
  JUMPOUT(0x100387F00);
}

uint64_t sub_1003881A0@<X0>(int a1@<W7>, int a2@<W8>)
{
  *(_DWORD *)(v3 + 392) = a2;
  *(_DWORD *)(v3 + 396) = STACK[0x440];
  *(void *)(v3 + 400) = STACK[0x560];
  *(_DWORD *)(v3 + 408) = 2014182718 - v6 + LODWORD(STACK[0x54C]) + ((v5 + 248044174) & 0xF1372767) - 835;
  *(void *)(v3 + 416) = STACK[0x3F8] + (v6 + 612805554);
  int v8 = (*(uint64_t (**)(unint64_t, unint64_t))(v4 + v2 * (uint64_t)a1 + 8))(STACK[0x398], STACK[0x2A8]);
  return (*(uint64_t (**)(__n128))(v7
                                           + 8
                                           * ((1455 * (v8 + 605940026 - ((v5 ^ 0x483BD339) & (2 * v8)) == 605940026)) ^ v5)))((__n128)0);
}

uint64_t sub_10038827C()
{
  LODWORD(STACK[0x668]) = -605900050;
  return (*(uint64_t (**)(void))(v1 + 8 * ((146 * (STACK[0x550] == 0)) ^ (v0 + 1310))))();
}

void sub_1003882BC()
{
}

uint64_t sub_1003882C4@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((a1 + 424) ^ 0x419 ^ ((a1 + 243) | 0x103)) * (v2 - v3 + 697425469 == a2 + 789197140)) ^ a1)))();
}

void sub_100388324()
{
}

uint64_t sub_100388330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v36 = a9 + 1;
  *(unsigned char *)(a5 + (v36 + a3)) = *(unsigned char *)(a34 + a6 - 1641940568);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * ((1915 * ((a3 + v36 + 1) < 0x40)) ^ v34)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_100388338@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((a1 - 693600175) & 0x29577EDA ^ 0x4CB) * (v1 != 0)) | a1)))();
}

uint64_t sub_100388374@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((949 * (v2 + 1 == v4 + 4)) ^ a1)))(a2);
}

void sub_100388448()
{
}

uint64_t sub_100388450(int a1)
{
  uint64_t v8 = (v3 + v2 - v5);
  int8x8_t v9 = vrev64_s8(*(int8x8_t *)(v6 - 7 + v8));
  *(int8x8_t *)(v1 - 7 + v8) = vrev64_s8(vadd_s8(vsub_s8(v9, vand_s8(vadd_s8(v9, v9), (int8x8_t)0x3030303030303030)), (int8x8_t)0x1818181818181818));
  return (*(uint64_t (**)(void))(v7 + 8 * ((1177 * ((a1 ^ 0x10F) + v5 == (v4 & 0xFFFFFFF8))) ^ a1)))();
}

uint64_t sub_1003884C4()
{
  *(_DWORD *)(v2 - 200) = (v0 + 2138962038) ^ (535753261 * ((v2 - 200) ^ 0xAF40E2F));
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ 0xDCC)))(v2 - 200);
  LODWORD(STACK[0x2EC]) = LODWORD(STACK[0x2EC]) + ((v0 - 1257) | 0x2E) - 110;
  *(unsigned char *)(v2 - 200) = (-85 * ((2 * ((v2 + 56) & 0x38) - (v2 + 56) - 57) ^ 0x31)) ^ 0x17;
  *(void *)(v2 - 192) = STACK[0x288];
  *(void *)(v2 - 176) = STACK[0x280];
  *(_DWORD *)(v2 - 184) = 3804331 * ((2 * ((v2 - 200) & 0x59AF7138) - (v2 - 200) - 1504670009) ^ 0xD885AB31) + v0 + 166;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 + 881)))(v2 - 200);
  LODWORD(STACK[0x48C]) = *(_DWORD *)(v2 - 180);
  return sub_100376634();
}

uint64_t sub_1003885C4()
{
  return sub_1003885D4();
}

uint64_t sub_1003885D4(uint64_t a1, int a2)
{
  unsigned int v11 = *(uint64_t (**)(void))(v8 + 8 * v3);
  uint64_t v12 = *v10;
  unsigned int v13 = v4 + a2;
  *(unsigned char *)(*v10 + v13) = (HIBYTE(v2) ^ 0xEF) - ((2 * (HIBYTE(v2) ^ 0xEF)) & 0x30) + 24;
  *(unsigned char *)(v12 + v13 + 1) = (BYTE2(v2) ^ 0x62) - ((v2 >> 15) & 0x30) + 24;
  *(unsigned char *)(v12 + v13 + 2) = (BYTE1(v2) ^ v5) - 2 * ((BYTE1(v2) ^ v5) & v9 ^ BYTE1(v2) & v7) + 24;
  *(unsigned char *)(v12 + v13 + 3) = v2 ^ v6;
  return v11();
}

uint64_t sub_100388660@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((int)((v4 ^ 0xFFFFFDC7) + v3 + a1) >= 0) * ((v2 ^ 0x2EE) + 896)) ^ v2)))();
}

void sub_100388698()
{
}

uint64_t sub_1003886A4@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  LOBYTE(STACK[0x264]) = *(unsigned char *)(a1 + v3);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1224 * (v2 + 17 < ((a2 + 2145154780) & 0x8023861D) + ((a2 - 212) | 0xB4) - 770)) ^ a2)))();
}

uint64_t sub_1003886FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v19 - 112) = v14 + ((v19 - 1097351608 - 2 * ((v19 - 128) & 0xBE97BEC8)) ^ 0x403C6AA) * v17 - 87;
  *(void *)(v19 - 120) = a14;
  *(void *)(v19 - 104) = v18;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 + 1117)))(v19 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v19 - 128) > (v16 + 229))
                                              * (9 * (v14 ^ 0x43D) + 2396)) ^ v14)))(v20);
}

uint64_t sub_100388790@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  unsigned int v51 = *((_DWORD *)&a35 + ((v49 + a2) >> ((v48 ^ 7) - 61)) + 18);
  *(unsigned char *)(a1 + (v49 + a2)) = v51 ^ 0x7D;
  *(unsigned char *)(a1 + (v49 + a2 + 2)) = (BYTE2(v51) ^ 0x60) - ((v51 >> 15) & 0x30) + 24;
  *(unsigned char *)(a1 + (v49 + a2 + 1)) = (BYTE1(v51) ^ 0xAB) - ((2 * (BYTE1(v51) ^ 0xAB)) & 0x30) + 24;
  *(unsigned char *)(a1 + (v49 + a2 + 3)) = (HIBYTE(v51) ^ 0x46) + (~(v51 >> 23) | 0xCF) + 25;
  BOOL v52 = v49 - 522581456 < (a47 + 97556450);
  if (v49 - 522581456 < v47 != a47 + 97556450 < v47) {
    BOOL v52 = a47 + 97556450 < v47;
  }
  return (*(uint64_t (**)(void))(v50 + 8 * ((602 * v52) ^ v48)))();
}

uint64_t sub_10038887C()
{
  return sub_100373E50((uint64_t)&off_1022AC750);
}

uint64_t sub_1003889E4()
{
  *(_DWORD *)(*v3 + 4 * (v0 + v4 - 1)) = v1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v0 + v4 - 2 >= 0) * ((v2 - 739) ^ 0xD6)) | v2)))();
}

uint64_t sub_100388A24()
{
  return sub_100388A2C();
}

uint64_t sub_100388A2C(double a1, double a2, int8x16_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  BOOL v52 = *(uint64_t (**)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))(v48 + 8 * v46);
  HIDWORD(a23) = HIDWORD(a36);
  int v53 = BYTE4(a39) ^ 0xCB;
  HIDWORD(a19) = BYTE4(a39) ^ 0xFFFFFFCB;
  if (v53 == 2)
  {
    HIDWORD(a20) = a37;
    char v71 = v52;
    int8x16x4_t v73 = vld4q_s8(a5);
    LODWORD(a19) = HIDWORD(a38);
    uint8x16_t v62 = (uint8x16_t)veorq_s8(v73.val[1], a3);
    _Q23 = vmovl_u8(*(uint8x8_t *)v62.i8);
    _Q22 = vmovl_high_u8(v62);
    __asm
    {
      SHLL2           V24.4S, V22.8H, #0x10
      SHLL2           V25.4S, V23.8H, #0x10
    }
    int v67 = (_DWORD *)(v45 + 4 * (v50 + 163501478));
    int v68 = *(v67 - 8) ^ *(v67 - 3);
    int v69 = *(v67 - 16) ^ *(v67 - 14) ^ (v49 + v68 - (v47 & (2 * v68)));
    HIDWORD(v70) = v69 ^ v49;
    LODWORD(v70) = v69;
    _DWORD *v67 = (v70 >> 31) + v49 - (v47 & (2 * (v70 >> 31)));
    return (*(uint64_t (**)(void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * ((1489 * (v51 == 163501415)) ^ 0x19Au)))((v49 + 1099), HIDWORD(a38), 106998629, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, __PAIR64__(a38, HIDWORD(a37)), v71,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45);
  }
  else if (v53 == 1)
  {
    int8x16x4_t v72 = vld4q_s8(a5);
    uint8x16_t v54 = (uint8x16_t)veorq_s8(v72.val[2], a3);
    _Q27 = vmovl_high_u8(v54);
    _Q26 = vmovl_u8(*(uint8x8_t *)v54.i8);
    __asm
    {
      SHLL2           V26.4S, V26.8H, #0x10
      SHLL2           V27.4S, V27.8H, #0x10
    }
    return (*(uint64_t (**)(uint64_t))(v48 + 8 * ((1673 * (a25 + 1 == v51)) ^ a7)))(163501478);
  }
  else
  {
    return v52(a37, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29);
  }
}

void sub_100388E34()
{
}

uint64_t sub_100388F30()
{
  STACK[0x530] -= 16;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 - 1583824927) & 0x5E673EFD ^ v0 ^ ((v0 - 914) | 0x271) ^ 0x1AE)))();
}

uint64_t sub_100388F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void))(v5
                                                                                                + 8
                                                                                                * ((52
                                                                                                  * (((v7 + 52) ^ ((v6 & 0x18) == ((v7 - 1677) | 0x143) - 331)) & 1)) ^ v7)))(a1, a2, a3, a4, a5, (a4 - a5), (v7 - 1484) | 0x222u);
}

uint64_t sub_100388FD4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 - 815) | 0x404) ^ 0x4E1) * (((v3 ^ v2) & 0x1F) == 0x12)) ^ v0)))();
}

void sub_100389040(int a1@<W8>, uint64_t a2, int a3, int a4)
{
  sub_100368D8C((a1 & 0xBFFFFFFF ^ 0x4625FB43)- 2 * ((a1 & 0xBFFFFFFF ^ 0x4625FB43) & 0x625FB5B ^ a1 & 0x18)+ ((v4 - 612) ^ 0x625FAF4), a2, a3, a4);
}

void sub_10038907C()
{
}

void sub_100389084()
{
}

uint64_t sub_10038908C@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  *(unsigned char *)(v6 + (a1 - 704864278)) = *(unsigned char *)(v4 + (a1 - 704864278));
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 - 1 == a3) * (a2 ^ (v3 + 540) ^ 0x338)) ^ (v5 + a2 + 2137))))();
}

uint64_t sub_1003890D8()
{
  BOOL v4 = v1 + 814277901 > -928960769 && v1 + 814277901 < SLODWORD(STACK[0x400]);
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 ^ 0x250) - 40) ^ 0x25D) * v4) ^ v0)))();
}

uint64_t sub_100389128()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((82 * (v0 == ((v3 + 813856859) & 0xCF7D87FF) + ((v3 + 91) ^ (v1 - 656)))) ^ v3)))();
}

uint64_t sub_100389188()
{
  int v3 = v1 + 427;
  BOOL v4 = (v0 ^ 3u) >= ((v3 - 994817758) & 0x3B4BB7F3u) - 698;
  return (*(uint64_t (**)(void))(v2 + 8 * (((8 * v4) | (16 * v4)) ^ v3)))();
}

uint64_t sub_1003891D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, uint64_t a18, unsigned int a19, unsigned int a20,int a21,int a22)
{
  unsigned int v26 = 460628867 * (&a17 ^ 0x4C96827D);
  a19 = v26 - 702300325;
  a20 = v26 + v22 - 2024873248;
  a17 = &STACK[0x44D5F6D91B577B0C];
  a18 = a12;
  a21 = v25 - v26 - ((v25 << ((v22 + 114) ^ 0x16)) & (((v22 + 483) | 0x21) - 679)) + 366164237;
  uint64_t v27 = (*(uint64_t (**)(unint64_t **))(v24 + 8 * (v22 ^ 0x817)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((1250 * (a22 == v23)) ^ v22)))(v27);
}

uint64_t sub_1003892A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((28 * (v18 - 193659372 < v18 - 193659435 + ((a18 - 1648) | 3u) - 63)) ^ a18)))(0xFFFFFFFFLL);
}

uint64_t sub_10038930C()
{
  return sub_100389318();
}

uint64_t sub_100389318()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 < 0x7FFFFFFF) * (v1 - 457)) ^ (v1 + 137))))();
}

uint64_t sub_100389340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 112) = v14
                         + 1374699841
                         * ((-1520606683 - ((v17 - 128) | 0xA55D6225) + ((v17 - 128) | 0x5AA29DDA)) ^ 0x375685D3)
                         - 471;
  *(void *)(v17 - 128) = a14;
  *(void *)(v17 - 120) = &STACK[0x1F010F7499D3F7E6];
  (*(void (**)(uint64_t))(v15 + 8 * (v14 + 1318)))(v17 - 128);
  *(_DWORD *)(v17 - 112) = v14 + ((((v17 - 128) | 0xDD321A35) + (~(v17 - 128) | 0x22CDE5CA)) ^ 0x67A66256) * v16 + 100;
  *(void *)(v17 - 104) = a13;
  *(void *)(v17 - 120) = a14;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 + 1304)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((((v14 + 110) ^ (*(_DWORD *)(v17 - 128) > 0x5B89B5B3u)) & 1)
                                              * (((v14 - 263341985) & 0xFB244E5) - 193)) ^ v14)))(v18);
}

void sub_100389488()
{
}

uint64_t sub_100389494@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v7 = v3 - 1;
  STACK[0x5E8] = v7;
  *(unsigned char *)(a1 + v7) = ((a2 - 120 + v2 + 43) ^ v4) * (v2 + 49);
  return (*(uint64_t (**)(void))(v6 + 8 * (((STACK[0x5E8] != 0) * v5) ^ a2)))();
}

uint64_t sub_1003894DC(uint64_t a1, uint64_t a2)
{
  BOOL v10 = (v8 & (2 * (*(unsigned __int8 *)(a2 + 9) - 1))) + ((*(unsigned __int8 *)(a2 + 9) - 1) ^ v7) == v7
     && (v2 + v3 + 4) < 0xC9;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v10 * (((v6 + 68108980) | 0x18100188) ^ (v4 - 1259))) ^ v6)))();
}

uint64_t sub_100389540(uint64_t a1, int a2)
{
  return sub_1003885D4(a1, a2);
}

uint64_t sub_100389550(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  *(void *)(a5 + v8) = *(void *)(v7 + v8);
  return (*(uint64_t (**)(void))(v5 + 8 * (((a4 == 0) * v6) ^ a1)))();
}

uint64_t sub_100389580(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  return (*(uint64_t (**)(void))((char *)*(&off_1022AC750 + v1 - 1059)
                              + 8
                              * (((*(void *)(a1 + 8) != 0x38C18B7A1BA3132CLL) * (((v1 - 276731344) & 0x107E91F7) - 114)) ^ v1)
                              - 4))();
}

void sub_100389624()
{
}

uint64_t sub_10038967C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  BOOL v42 = v40 != ((v37 + 927) ^ a26) || a37 != v38;
  return (*(uint64_t (**)(void))(v39 + 8 * ((v42 * (v37 + 1709)) ^ v37)))();
}

uint64_t sub_1003896B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v32 = (_DWORD *)(a24 + 24 * (v28 - 2064856964));
  HIDWORD(a27) = v32[4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * ((203 * ((((v29 ^ 0x28) + 545 + v30 + *v32) & 0xFFFFFFFFFFFFFFDLL) != 0)) ^ v29)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_10038976C@<X0>(unint64_t a1@<X8>)
{
  STACK[0x4C8] = *(void *)(v3 + 8 * (v2 - 756));
  return sub_10036CF70(a1);
}

uint64_t sub_100389784(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                                  + 8 * ((3318 * (*(_DWORD *)(a8 + 72) == (((a4 - 545) | 0x4C1) ^ 0x4C2) + 1791330265 + 7 * (((a4 - 545) | 0x4C1) ^ 0x4C2))) ^ ((a4 - 545) | 0x4C1))))(a1, v8, 1633702658, 3349716575, 1791330458, 945250827, 846079461);
}

uint64_t sub_100389808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_1003643CC(a3, a4, a5, a7, a8, (const char *)&STACK[0x264], a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21,
           a22,
           a23,
           a24);
}

uint64_t sub_100389810(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x1F010F7499D3F7A2) + 86932601;
  int v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x1F010F7499D3F7A2) + 86932601;
  int v4 = (v2 < -157947435) ^ (v3 < -157947435);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v6 = v2 < -157947435;
  }
  else {
    BOOL v6 = v5;
  }
  int v1 = *(_DWORD *)(a1 + 16) - 1178560073 * ((-2 - ((a1 | 0x5930FF1B) + (~a1 | 0xA6CF00E4))) ^ 0x1C5B7886);
  return (*(uint64_t (**)(void))((char *)*(&off_1022AC750 + v1 - 875) + 8 * ((v6 * ((v1 ^ 0x3EC) - 2015)) ^ v1) - 4))();
}

uint64_t sub_1003898EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, void))(v7
                                                    + 8
                                                    * ((4087
                                                      * (v6 >= (((a5 - 1384) | 0x5A6) ^ v5)
                                                             + ((a5 - 582752186) & 0xAFBFD33F))) ^ (a5 + 576))))(a1, 0);
}

uint64_t sub_100389940@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int32x4_t *a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int32x4_t a57,int8x16_t a58)
{
  int8x16x4_t v84 = vld4q_s8(v58);
  v59.i64[0] = 0x1818181818181818;
  v59.i64[1] = 0x1818181818181818;
  uint8x16_t v60 = (uint8x16_t)veorq_s8(v84.val[0], v59);
  uint16x8_t v61 = vmovl_u8(*(uint8x8_t *)v60.i8);
  int8x16_t v62 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v61.i8);
  int8x16_t v63 = (int8x16_t)vmovl_high_u16(v61);
  uint16x8_t v64 = vmovl_high_u8(v60);
  int8x16_t v65 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v64.i8);
  int8x16_t v66 = (int8x16_t)vmovl_high_u16(v64);
  uint8x16_t v67 = (uint8x16_t)veorq_s8(v84.val[1], v59);
  uint16x8_t v68 = vmovl_high_u8(v67);
  uint16x8_t v69 = vmovl_u8(*(uint8x8_t *)v67.i8);
  uint8x16_t v70 = (uint8x16_t)veorq_s8(v84.val[2], v59);
  _Q21 = (int8x16_t)vmovl_high_u8(v70);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v70.i8);
  int8x16_t v73 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v78 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v84.val[0] = veorq_s8(v84.val[3], v59);
  v84.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v84.val[0]);
  v84.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v84.val[1]);
  v84.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v84.val[0].i8);
  v84.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v84.val[0]);
  v84.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v84.val[0].i8), 0x18uLL), v73), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v69.i8, 8uLL), v62));
  v84.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v84.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v69, 8uLL), v63));
  v84.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v84.val[1].i8), 0x18uLL), v78), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v68.i8, 8uLL), v65));
  v84.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v84.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v68, 8uLL), v66));
  int32x4_t v79 = (int32x4_t)veorq_s8(vandq_s8(v84.val[0], a58), (int8x16_t)(*(_OWORD *)&v62 & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  int32x4_t v80 = (int32x4_t)veorq_s8(vandq_s8(v84.val[3], a58), (int8x16_t)(*(_OWORD *)&v63 & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  int32x4_t v81 = (int32x4_t)veorq_s8(vandq_s8(v84.val[1], a58), (int8x16_t)(*(_OWORD *)&v65 & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  int32x4_t v82 = (int32x4_t)veorq_s8(vandq_s8(v84.val[2], a58), (int8x16_t)(*(_OWORD *)&v66 & __PAIR128__(0xFFFFFF04FFFFFF04, 0xFFFFFF04FFFFFF04)));
  a6[2] = vaddq_s32(vsubq_s32((int32x4_t)v84.val[1], vaddq_s32(v81, v81)), a57);
  a6[3] = vaddq_s32(vsubq_s32((int32x4_t)v84.val[2], vaddq_s32(v82, v82)), a57);
  *a6 = vaddq_s32(vsubq_s32((int32x4_t)v84.val[0], vaddq_s32(v79, v79)), a57);
  a6[1] = vaddq_s32(vsubq_s32((int32x4_t)v84.val[3], vaddq_s32(v80, v80)), a57);
  return sub_100350C00(a1 + 87, a2, a3, a4, a5, 1614243912);
}

uint64_t sub_100389A78@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8 * ((((v3 - 314) ^ 0x28D) * ((unint64_t)(v1 - a1) > 0x1F)) ^ v3)))(v2);
}

uint64_t sub_100389AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, int a8@<W7>, int a9@<W8>)
{
  int v18 = 31 * (v17 ^ v15);
  *(_DWORD *)(*v12 + 4 * (a9 + v10 + v18 - 217)) = a7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                                  + 8 * (((v16 != ((v18 + 665) ^ v11)) * ((v18 + a8) & v13 ^ v14)) ^ v18)))(a1, a2, a3, a4, a5, a6, 1089336478);
}

uint64_t sub_100389B08@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((41 * ((a1 ^ 0xE3 ^ ((v1 ^ 3u) < ((151 * (a1 ^ 0x5C3)) ^ 0x429u))) & 1)) ^ a1)))();
}

uint64_t sub_100389B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return sub_100389804(a1, a2, a3, a4, a29);
}

uint64_t sub_100389B64@<X0>(uint64_t a1@<X8>)
{
  int v8 = (v4 + 17) | 0x147;
  *(unsigned char *)(v3 + ((((v8 - 815) | 0x20u) + 4294967239) & (v6 + v1 + 834))) = *(unsigned char *)(v2 + a1 - 550620169);
  return (*(uint64_t (**)(void))(v7 + 8 * ((1828 * ((v5 + v1 + 1) < 0x40)) ^ v8)))();
}

uint64_t sub_100389BCC(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_1022A7DC0 + ((75 * (*(_DWORD *)(a2 + 4) == 1791330451)) ^ 0x108u)))(4294925278);
}

uint64_t sub_100389C10(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                                + 8
                                                                                * (((((v2 - 861) | 0x2D5)
                                                                                   + ((v2 - 345) | 0x191)
                                                                                   - 93)
                                                                                  * (v1 == v3)) ^ v2)))(a1, 13, 2049327152, 2245639194, 700);
}

uint64_t sub_100389C78()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((954
                                * (*(_DWORD *)(v2 + 48 * (v1 - 1504152803 + ((v0 - 216) ^ (v4 - 221))) + 36) == v1)) ^ v0)))();
}

void sub_100389CC8(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x12290867A03C12B3) - 35759384;
  unsigned int v3 = *(_DWORD *)(a1 + 20) + v1 - 1903319429;
  BOOL v4 = v2 < 0xD957AF35;
  BOOL v5 = v2 > v3;
  if (v3 < 0xD957AF35 != v4) {
    BOOL v5 = v4;
  }
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100389DBC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(a1 + (v6 + v3 + v5)) = *(unsigned char *)(v2 + (v6 + v3 + v5));
  return (*(uint64_t (**)(void))(v7 + 8 * ((124 * (v5 - 1 != a2)) ^ v4)))();
}

void sub_100389DF0()
{
}

uint64_t sub_100389E08@<X0>(int a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, void *a5@<X6>, int a6@<W7>, unint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v38 = 4 * (v36 + 1 + a4);
  unint64_t v39 = (*(_DWORD *)(a25 + v38) ^ (v25 + (a6 ^ v32) - 188))
      + (a2 ^ HIDWORD(v29))
      + v27 * (unint64_t)(*(_DWORD *)(*a5 + v38) ^ v25);
  unint64_t v40 = HIDWORD(a7)
      + v35 * (unint64_t)(*(_DWORD *)(*v33 + v38) ^ v25)
      + ((v39 + a1 - (v31 & (2 * v39))) ^ a3);
  *(_DWORD *)(a25 + 4 * (v36 + a4)) = v40 + v25 - (v26 & (2 * v40));
  int v42 = v36 + v37 < v28 && v36 + v37 >= v34;
  return (*(uint64_t (**)(void))(v30 + 8 * (((32 * v42) | (v42 << 6)) ^ a6)))();
}

uint64_t sub_100389EAC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((74 * (*(void *)(v1 + 24) != 0x147CEA7F17742063)) ^ v0)))();
}

uint64_t sub_100389EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((2425
                                * (a12 - 197576495 < ((v13 + 1365) ^ 0x7FFFFB4A ^ (v13 + 1752074722) & 0x979177C7))) ^ v13)))();
}

uint64_t sub_100389F4C(int a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((a1 - 1902603612) * (v2 - 1902603612) > ((v3 - 73922504) & 0x467F17D) - 306)
                                * ((v3 - 2069603782) & 0x7B5B9F7B ^ 0x1E3)) ^ v3)))();
}

uint64_t sub_100389FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  unsigned int v38 = (HIDWORD(a11) & 0xFE1DA77C) + (v35 ^ 0x7F0ED3BE);
  int v39 = ((BYTE4(a11) & 0x7C) + (v35 ^ 0xBE) + 2) & 0xF;
  BOOL v41 = v38 != 2131678142 && v39 == ((v36 - 567) ^ 0x3FF);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((118 * v41) ^ v36)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

void sub_10038A0A0()
{
}

uint64_t sub_10038A0AC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (a1 ^ ((((LODWORD(STACK[0x4EC]) == v2) ^ ((a1 ^ 0x42) - 46)) & 1) << 7))))();
}

uint64_t sub_10038A0E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((899 * (a1 + 1 == v3 + 32)) ^ v1)))();
}

uint64_t sub_10038A1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((a8 + 1 == ((((v8 ^ v9) - 599) | a5) ^ a6)) * a7) ^ v8 ^ v9)))();
}

uint64_t sub_10038A1E0@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, char a5@<W5>, int a6@<W6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  int v14 = v11 ^ a3;
  uint64_t v15 = (v10 + a6);
  *(unsigned char *)(a7 + v15 + 4) = *(unsigned char *)(v12 + v15) ^ ((v15 & 0xF) * a5) ^ *(unsigned char *)(v8 + (v15 & 0xF)) ^ *(unsigned char *)((v15 & 0xF) + v9 + 1) ^ (v14 + 35) ^ *(unsigned char *)(a8 + (v15 & 0xF));
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * (((((v10 - 1 == a4) ^ (v14 + 60)) & 1) * (((v14 + a1) & a2) + 224)) ^ (v14 + 643))))();
}

void sub_10038A264(_DWORD *a1)
{
  unsigned int v1 = 235795823 * ((a1 - 1876425126 - 2 * (a1 & 0x9028065A)) ^ 0x4854F03);
  unsigned int v2 = a1[9] + v1;
  int v3 = *a1 ^ v1;
  BOOL v4 = (v3 & 0x30000000) == 0x20000000;
  if ((v3 & 0x3F000000) == 0) {
    BOOL v4 = 1;
  }
  __asm { BRAA            X10, X17 }
}

uint64_t sub_10038A338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v9
                                                             + 8
                                                             * ((60
                                                               * ((((a6 - 847788187) & 0xBF8BF37F ^ (v6 + 607)) & v7) != 0)) ^ a6)))(a1, a2, (v8 - a2));
}

uint64_t sub_10038A380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t (*a27)(uint64_t))
{
  int v30 = 628203409 * ((((v29 - 168) | 0x76F58F42) - (v29 - 168) + ((v29 - 168) & 0x890A70B8)) ^ 0xF47D8371);
  *(void *)(v29 - 168) = a26;
  *(_DWORD *)(v29 - 160) = v30 + v27 + 655;
  *(_DWORD *)(v29 - 156) = 965353136 - v30;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v27 ^ 0x8F8)))(v29 - 168);
  return a27(v31);
}

uint64_t sub_10038A400(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((171 * (v2 + 1 != v3 + 16)) ^ a2)))();
}

uint64_t sub_10038A4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * (((a9 ^ 0x50A) * ((a3 + v24 + 16) < 4)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24);
}

void sub_10038A504(int a1@<W8>)
{
  uint64_t v3 = 4 * (v1 - 1612861986);
  uint64_t v4 = (int *)(STACK[0x430] + v3);
  int v5 = *v4;
  LODWORD(v4) = -1636250663
              * ((*(_DWORD *)(*(void *)STACK[0x3F8] + (*(int *)STACK[0x400] & 0xFFFFFFFFCBC91874)) ^ v4) & (a1 ^ 0x7FFFF983));
  LODWORD(v4) = v4 ^ (v4 >> 16);
  uint64_t v6 = 4 * ((-1636250663 * v4) >> 24);
  *(_DWORD *)(v2 + v3) ^= v5 ^ *(_DWORD *)((char *)*(&off_1022AC750 + (a1 ^ 0x67E)) + v6 - 4) ^ *(_DWORD *)((char *)*(&off_1022AC750 + a1 - 1637) + v6) ^ *(_DWORD *)((char *)*(&off_1022AC750 + a1 - 1539) + v6) ^ (-874971136 * v4) ^ (-1636250663 * v4) ^ (-2081955537 * ((-1636250663 * v4) >> 24));
  JUMPOUT(0x100374C60);
}

uint64_t sub_10038A5F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unsigned int a6)
{
  BOOL v11 = v7 < v8;
  if (v11 == v9 + 1 > a6) {
    BOOL v11 = a4 + v9 + 280 < v7;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((4 * !v11) | (8 * !v11) | v6)))();
}

uint64_t sub_10038A674()
{
  return (*(uint64_t (**)(void))(v1
                                           + 8
                                           * ((1003
                                             * (((LODWORD(STACK[0x440]) - 1791330438) ^ 0xBE77BFFF6C4B78FFLL)
                                              + ((2 * (LODWORD(STACK[0x440]) - 1791330438)) & 0xD896F1FE)
                                              + 0x418840010A1E3881 != 1986638208)) ^ v0)))(111 * (v0 ^ 0x5FDu));
}

uint64_t sub_10038A704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  unint64_t v50 = STACK[0x5A0];
  int v51 = LODWORD(STACK[0x58C]) ^ 0x3FB6AE93;
  int v52 = ((v47 + 1396) ^ 0x7F6D5BF7) & (2 * LODWORD(STACK[0x58C]));
  int v53 = 235795823 * ((v49 - 200) ^ 0x94AD4959);
  *(unsigned char *)(v49 - 176) = 111 * ((v49 + 56) ^ 0x59) + 63;
  *(_DWORD *)(v49 - 136) = v53 + v51 + v52 - 539001857;
  *(void *)(v49 - 168) = v46;
  *(_DWORD *)(v49 - 200) = (v45 + v47 + 2098490301) ^ v53;
  *(void *)(v49 - 192) = v44;
  *(void *)(v49 - 184) = a43;
  *(void *)(v49 - 144) = v50;
  *(void *)(v49 - 152) = a44;
  *(_DWORD *)(v49 - 160) = (v47 + 452) ^ v53;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v48 + 8 * (v47 ^ 0x851)))(v49 - 200);
  int v55 = *(_DWORD *)(v49 - 132);
  LODWORD(STACK[0x48C]) = v55;
  return (*(uint64_t (**)(uint64_t))(v48 + 8 * ((207 * (v55 == 605940026)) ^ v47)))(v54);
}

uint64_t sub_10038A7F4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((a3 + v4 - 2013069247) < 8) ^ v5) & 1) * (v5 - 1672)) ^ v5)))();
}

uint64_t sub_10038A844(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((252
                                * (v4 + 1858782126 + ((v5 + 1094973617) | 0x30802102u) >= a4
                                                                                        + v4
                                                                                        + ((v5 + 1743354009) & 0x981687BB)
                                                                                        - 1977)) ^ v5)))();
}

void sub_10038A8CC()
{
}

uint64_t sub_10038A944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v8
                                                                                                 + 8
                                                                                                 * ((981 * (v7 < ((v6 + 508) ^ 0xC8u) - 869)) ^ v6)))(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_10038A978()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((50 * (((v0 > 0x9B819ED9) ^ (v1 + 36)) & 1)) ^ (v1 + 143331602))))();
}

uint64_t sub_10038A9D0(int a1, uint64_t a2, double a3)
{
  *(double *)(v5 + a2) = a3;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 & ~(v7 ^ (v6 == a2))) * v3) ^ v4)))();
}

uint64_t sub_10038A9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((a7 + 1052 + v7 + ((a7 + 940768396) | 0x6003640)) * ((v8 & 0x18) == 0)) ^ a7)))(a1);
}

uint64_t sub_10038AA40()
{
  return 4294925278;
}

uint64_t sub_10038AA48()
{
  BOOL v3 = v0 - 23692131 + v1 + 14 + ((v1 + 1539456118) & 0xA43DC3F7) - 1420 > 0xFFFFFFFD;
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v3) | (16 * v3)) ^ v1)))();
}

void sub_10038AA9C()
{
}

uint64_t sub_10038AB10()
{
  *(_DWORD *)(v5 - 136) = v4
                        - 108757529 * ((((2 * (v5 - 136)) | 0x6570B224) - (v5 - 136) + 1296541422) ^ 0x52243B39)
                        + 625;
  *(void *)(v5 - 128) = v0;
  *(void *)(v5 - 120) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 + 1367)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (((v2 == (v4 ^ 0x6F6) + 270048139) * (v4 ^ 0x7AC)) ^ v4)))(v6);
}

void sub_10038ABB8()
{
}

uint64_t sub_10038AD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(a7 + v8 + v10) = v12;
  return (*(uint64_t (**)(void))(v11 + 8 * ((3734 * ((v9 ^ 0xEB4u) - 2049 == (v7 & 0x38))) ^ v9)))();
}

uint64_t sub_10038ADB0()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((1644
                                              * ((((((v1 - 907) | 0x385) ^ 0xFFFFFC38) + (v1 ^ 0x3B4)) & v0) == 1641940568)) ^ v1)))(2727111354);
}

uint64_t sub_10038AE18()
{
  *uint64_t v2 = v2[623];
  unint64_t v5 = STACK[0x420];
  int v6 = STACK[0x420] + 1;
  int v7 = ((v0 ^ 0x4A5) - 1518279484) & 0xE5E6FF82 ^ STACK[0x420];
  *(_DWORD *)(v4 - 192) = ((v0 ^ 0x4A5) - 1518279449) ^ STACK[0x420];
  *(void *)(v4 - 184) = (v1 + 1266651784) ^ v5;
  *(_DWORD *)(v4 - 176) = (v0 ^ 0x4A5) - v5 + 2104631633;
  *(_DWORD *)(v4 - 172) = v6;
  *(_DWORD *)(v4 - 200) = v7;
  *(_DWORD *)(v4 - 196) = (v0 ^ 0x4A5) - 1518279484 - v5;
  *(void *)(v4 - 168) = STACK[0x418];
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v3 + 8 * ((v0 ^ 0x4A5) + 1464)))(v4 - 200);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 160)))(v8);
}

uint64_t sub_10038AEC8@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  va_start(va, a2);
  int v5 = v3 ^ 0xE8A;
  BOOL v6 = (*(uint64_t (**)(void, char *, void, uint64_t))(v4 + 8 * (v3 ^ 0x160)))(**(unsigned int **)(v2 + 8 * ((v3 ^ 0xE8A) - 1751)), va, ((a1 - 2080038239) & 0xFFFFF000 ^ 0xEEBFF9CF) + ((2 * (a1 - 2080038239)) & 0xDD7FE000) + 289408561, 1) == 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((26 * v6) ^ v5)))();
}

void sub_10038AF50()
{
}

uint64_t sub_10038AF58()
{
  BOOL v5 = v1 + 1452165612 <= 562955499 && v1 + 1452165612 >= v0 - 1584528433 + ((v3 - 1308) | 0x1C);
  return (*(uint64_t (**)(void))(v2 + 8 * ((v5 * ((v3 + 154) ^ 0x6B5)) | v3)))();
}

void sub_10038AFB0(uint64_t a1)
{
  __asm { BRAA            X13, X17 }
}

uint64_t sub_10038B0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, int a4@<W8>)
{
  return sub_10038B160(a1, a4 ^ 0x167u, 2976433870, a2, a3, &STACK[0x1F010F7499D3F846], &STACK[0x1F010F7499D3F856]);
}

uint64_t sub_10038B160@<X0>(int a1@<W1>, int a2@<W2>, unsigned int a3@<W7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  *(_DWORD *)(a26 + 4 * v26) = v27;
  int v32 = v26 + 1 + v28;
  BOOL v33 = v32 < a2;
  BOOL v34 = v32 > v29;
  if (a3 > v30 != v33) {
    BOOL v35 = v33;
  }
  else {
    BOOL v35 = v34;
  }
  return (*(uint64_t (**)(void))(v31 + 8 * ((v35 * (3 * a1 - 368)) ^ a4)))();
}

void sub_10038B1B0()
{
}

uint64_t sub_10038B1BC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((4058 * ((a1 ^ 3u) >= ((((2 * (v1 + 2013)) ^ 0xB0C) - 714) | 0x4B1u) - 1717)) ^ (v1 + 2013))))();
}

void sub_10038B200()
{
}

uint64_t sub_10038B25C()
{
  *(_DWORD *)(v2 - 120) = v1;
  uint64_t v3 = ((*((unsigned __int8 *)*(&off_1022AC750 + (int)(v0 & 0xB2484851)) + (*(unsigned __int8 *)(v2 - 97) ^ 0x7BLL) - 8) ^ 0xB8) & 0xFFFF00FF | ((((*(unsigned char *)(v2 - 98) ^ 0xD0) + *((unsigned char *)*(&off_1022AC750 + (int)(v0 & 0xFE339C84)) + (*(unsigned __int8 *)(v2 - 98) ^ 0xDFLL) - 12) + 93) ^ 0xE4) << 8) | ((*((unsigned __int8 *)*(&off_1022AC750 + (v0 ^ 0x39A)) + (*(unsigned __int8 *)(v2 - 99) ^ 0xAALL) - 4) ^ 0x76) << 16) | ((*((unsigned __int8 *)*(&off_1022AC750 + v0 - 925) + (*(unsigned __int8 *)(v2 - 100) ^ 0x45) - 8) ^ 0xAF) << 24)) ^ 0x2BA7117D;
  *(_DWORD *)(v2 - 128) = v0 + 966;
  return sub_10038C08C(1079754205, v3);
}

uint64_t sub_10038C08C@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,int a41,uint64_t a42,uint64_t a43)
{
  int v47 = *(_DWORD *)(v46 - 128) - 463;
  int v48 = *(_DWORD *)(v46 - 128);
  uint64_t v49 = a1 & 0xFFFFFFF8 ^ 0x405BBDDF;
  *(void *)(v46 - 216) = v49;
  uint64_t v50 = *(unsigned __int8 *)(a3 + v49);
  uint64_t v51 = a1 & 0xFFFFFFF3 ^ 0x405BBDDD;
  *(void *)(v46 - 152) = v51;
  LODWORD(v50) = *(unsigned __int8 *)(a17 + (v50 ^ 0x41));
  uint64_t v52 = *(unsigned __int8 *)(a3 + v51) ^ 0x60;
  uint64_t v53 = a1 & 0xFFFFFFF7 ^ (v47 + 1079752679);
  *(void *)(v46 - 160) = v53;
  uint64_t v55 = a1 & 0xFFFFFFFE ^ 0x405BBDDD;
  *(void *)(v46 - 136) = v55;
  int v56 = *(unsigned __int8 *)(a13 + v52) ^ 0x14;
  LODWORD(v51) = *(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a3 + v53) ^ 0xC1)) ^ 0xA0;
  LODWORD(v52) = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a3 + v55) ^ 0x66)) ^ 0xF9;
  uint64_t v57 = a1 & 0xFFFFFFF0 ^ 0x405BBDDF;
  *(void *)(v46 - 144) = v57;
  LODWORD(v53) = v52 << 16;
  LODWORD(v52) = *(unsigned __int8 *)(a17 + (*(unsigned __int8 *)(a3 + v57) ^ 0xE9));
  uint64_t v58 = a1 & 0xFFFFFFF4 ^ 0x405BBDDF;
  *(void *)(v46 - 176) = v58;
  LODWORD(v52) = v52 ^ 0x1A;
  int v59 = v52 | (v56 << 24);
  int v60 = *(unsigned __int8 *)(a17 + (*(unsigned __int8 *)(a3 + v58) ^ 0xC3));
  uint64_t v61 = a1 ^ 0x405BBDDDu;
  *(void *)(v46 - 184) = v61;
  LODWORD(v53) = v53 | ((*(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a3 + v61) ^ 0x30)) ^ 0x24) << 24);
  v60 ^= 0xD0u;
  uint64_t v62 = a1 & 0xFFFFFFFD ^ 0x405BBDDF;
  *(void *)(v46 - 168) = v62;
  LODWORD(v53) = v53 & 0xFFFF00FF | (((*(unsigned char *)(a15 + (*(unsigned __int8 *)(a3 + v62) ^ 0xC0))
                                                      + (*(unsigned char *)(a3 + v62) ^ 0xCF)
                                                      + 93) ^ 0xF9) << 8);
  uint64_t v63 = a1 & 0xFFFFFFF6 ^ 0x405BBDDD;
  *(void *)(v46 - 232) = v63;
  int v64 = (*(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a3 + v63) ^ 0x5DLL)) ^ 0x2A) << 16;
  uint64_t v65 = a1 & 0xFFFFFFF5 ^ 0x405BBDDF;
  *(void *)(v46 - 200) = v65;
  unsigned int v66 = v64 & 0xFFFF00FF | (((*(unsigned char *)(a15 + (*(unsigned __int8 *)(a3 + v65) ^ 0xD5))
                                             + (*(unsigned char *)(a3 + v65) ^ 0xDA)
                                             + 93) ^ 0xCF) << 8) | v60 | (v51 << 24);
  uint64_t v67 = a1 & 0xFFFFFFF1 ^ 0x405BBDDF;
  *(void *)(v46 - 192) = v67;
  int v68 = (*(unsigned char *)(a15 + (*(unsigned __int8 *)(a3 + v67) ^ 0xE4))
                        + (*(unsigned char *)(a3 + v67) ^ 0xEB)
                        - 35) << 8;
  uint64_t v69 = a1 & 0xFFFFFFFC ^ 0x405BBDDF;
  *(void *)(v46 - 224) = v69;
  *(_DWORD *)(v46 - 204) = 1079754207;
  int v70 = *(unsigned __int8 *)(a17 + (*(unsigned __int8 *)(a3 + v69) ^ 0xDCLL)) ^ 0xE;
  uint64_t v71 = a1 & 0xFFFFFFF2 ^ 0x405BBDDD;
  *(void *)(v46 - 248) = v71;
  int v72 = v68 | ((*(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a3 + v71) ^ 0x92)) ^ 0x17) << 16) | v59;
  uint64_t v177 = a1 & 0xFFFFFFF9 ^ 0x405BBDDF;
  unsigned int v73 = v66 - 2 * (v66 & 0x10E32BBB ^ v60 & 0x10);
  LOBYTE(v66) = *(unsigned char *)(a15 + (*(unsigned __int8 *)(a3 + v177) ^ 0x4FLL)) + (*(unsigned char *)(a3 + v177) ^ 0x40);
  uint64_t v74 = a1 & 0xFFFFFFFA ^ 0x405BBDDD;
  *(void *)(v46 - 240) = v74;
  int v75 = *(unsigned __int8 *)(a14 + (*(unsigned __int8 *)(a3 + v74) ^ 0xA9));
  uint64_t v76 = a1 & 0xFFFFFFFB ^ 0x405BBDDD;
  *(void *)(v46 - 256) = v76;
  LODWORD(v51) = ((v75 ^ 0xC4) << 16) | (((v66 + 93) ^ 0xB7) << 8);
  LODWORD(v50) = v50 ^ 0xCA;
  unsigned int v77 = v73 - 1864160341;
  LODWORD(v51) = v51 | v50 | ((*(unsigned __int8 *)(a13 + (*(unsigned __int8 *)(a3 + v76) ^ 0xFCLL)) ^ 0x9A) << 24);
  LODWORD(v53) = v44 ^ a40 ^ ((v70 | v53) - 2 * ((v70 | v53) & 0x57FADFE ^ v70 & 0x10) - 2055229970);
  LODWORD(v51) = v45 ^ a41 ^ (v51 + 1335000053 - 2 * (v51 & 0x4F927BF7 ^ v50 & 2));
  unsigned int v78 = a2 ^ a38 ^ (v72 - 2 * (v72 & 0x121EA8CF ^ v52 & 0xB) - 1843484476);
  LODWORD(v50) = v43 ^ a37 ^ v77;
  *(_DWORD *)(v46 - 120) = -1075510539;
  int v79 = v48;
  uint64_t v80 = (uint64_t)*(&off_1022AC750 + v48 - 1848);
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v50) ^ 0x3F));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int32x4_t v82 = (char *)*(&off_1022AC750 + SHIDWORD(a11)) - 8;
  int v83 = (v81 >> 1) ^ *(_DWORD *)&v82[4 * (BYTE2(v78) ^ 0x34)] ^ ((BYTE2(v78) ^ 0x68)
                                                               + 467283025
                                                               - ((2 * (HIWORD(v78) ^ 0xB768)) & 0xA2));
  int8x16x4_t v84 = (char *)*(&off_1022AC750 + (int)a11) - 12;
  unsigned int v85 = *(_DWORD *)&v84[4 * (v50 ^ 0xC6)] ^ ((BYTE2(v53) ^ 0xD5)
                                                            + 467283025
                                                            - 2 * ((WORD1(v53) ^ 0x6CD5) & 0x5B ^ WORD1(v53) & 0xA)) ^ ((v50 ^ 0xAB) - 1075510538 + ((2 * (v50 ^ 0xAB) + 254) & 0xEC ^ 0xFFF37FFF)) ^ *(_DWORD *)&v82[4 * (BYTE2(v53) ^ 0x89)];
  unsigned int v86 = *(_DWORD *)&v82[4 * (BYTE2(v51) ^ 0x8C)] ^ ((v78 ^ 0xDB)
                                                  - 1075510539
                                                  - ((2 * (v78 ^ 0xDB) + 886014) & 0xC80EC)) ^ *(_DWORD *)&v84[4 * (v78 ^ 0xB6)] ^ ((BYTE2(v51) ^ 0xD0) + 467283025 - 2 * ((WORD1(v51) ^ 0xC8D0) & 0x5B ^ WORD1(v51) & 0xA));
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v51) ^ 0xC8));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v87 = v86 - 1142355399 - ((2 * v86) & 0x77D21472);
  int v88 = ((BYTE2(v50) ^ 0xAD) + 467283025 - ((2 * (WORD1(v50) ^ 0x3FAD)) & 0xA2)) ^ *(_DWORD *)&v84[4
                                                                                                 * (v53 ^ 0x1C)] ^ ((v53 ^ 0x71) - 1075510538 + ((2 * (v53 ^ 0x71) + 254) & 0xEC ^ 0xFFF37FFF)) ^ (v81 >> 1) ^ *(_DWORD *)&v82[4 * (BYTE2(v50) ^ 0xF1)];
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v53) ^ 0x6C));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v89 = v81 >> 1;
  int v90 = v88 - 1142355399 - ((2 * v88) & 0x77D21472);
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (HIBYTE(v78) ^ 0xB7));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  uint64_t v91 = (uint64_t)*(&off_1022AC750 + v79 - 1894);
  unsigned int v92 = (v51 ^ 0x10) - 1075510538 + ((2 * (v51 ^ 0x10) + 254) & 0xEC ^ 0xFFF37FFF);
  v91 -= 8;
  int v93 = *(_DWORD *)(v91 + 4 * (BYTE1(v53) ^ 0xDEu)) ^ a34 ^ *(_DWORD *)&v84[4 * (v51 ^ 0x7D)] ^ (v83 - 1142355399 - ((2 * v83) & 0x77D21472));
  LODWORD(v51) = (v85 - 1142355399 - ((2 * v85) & 0x77D21472)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v51) ^ 0x2Fu)) ^ (v81 >> 1);
  int v94 = v51 - ((2 * v51) & 0x93CCFF34);
  LODWORD(v51) = *(_DWORD *)(v91 + 4 * (BYTE1(v50) ^ 0x29u)) ^ a36 ^ v89 ^ v87;
  LODWORD(v50) = *(_DWORD *)(v91 + 4 * (BYTE1(v78) ^ 0x66u)) ^ a35 ^ v90;
  LOBYTE(v53) = v93 ^ v92;
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * ((v93 ^ ~v92) >> 24));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v95 = v81 >> 1;
  unsigned int v96 = (v93 ^ v92) >> 16;
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v51) ^ 0x91));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v97 = v81 >> 1;
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v50) ^ 0xA3));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  unsigned int v98 = v97 ^ *(_DWORD *)&v82[4 * (BYTE2(v50) ^ 0xF0)] ^ ((BYTE2(v50) ^ 0xAC)
                                                        + 467283025
                                                        - ((v50 >> 15) & 0xA2));
  int v99 = (v81 >> 1) ^ *(_DWORD *)&v84[4 * (v51 ^ 0x7B)] ^ *(_DWORD *)&v82[4
                                                                                        * (v96 ^ 0x15)] ^ ((v96 ^ 0x49) + 467283025 - 2 * ((v96 ^ 0xFF49) & 0x57 ^ v96 & 6)) ^ ((v51 ^ 0x16) - 1075510538 + ((2 * (v51 ^ 0x16) + 254) & 0xEC ^ 0xFFF37FFF));
  unsigned int v100 = (v94 + 1239842714) ^ HIDWORD(a33);
  int v101 = (v98 - 1142355399 - ((2 * v98) & 0x77D21472)) ^ *(_DWORD *)(v91
                                                                   + 4
                                                                   * (((unsigned __int16)(v93 ^ v92) >> 8) ^ 0x2Cu));
  unsigned int v102 = v95 ^ *(_DWORD *)&v84[4 * (v50 ^ 3)] ^ ((v50 ^ 0x6E)
                                                                - 1075510538
                                                                + ((2 * (v50 ^ 0x6E) + 254) & 0xEC ^ 0xFFF37FFF)) ^ *(_DWORD *)&v82[4 * (BYTE2(v100) ^ 0x83)] ^ ((BYTE2(v100) ^ 0xDF) + 467283025 - 2 * ((HIWORD(v100) ^ 0x27DF) & 0x71 ^ HIWORD(v100) & 0x20));
  unsigned int v103 = *(_DWORD *)&v82[4 * (BYTE2(v51) ^ 0x2E)] ^ ((BYTE2(v51) ^ 0x72)
                                                   + 467283025
                                                   - 2 * ((WORD1(v51) ^ 0x9172) & 0x55 ^ WORD1(v51) & 4));
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (HIBYTE(v100) ^ 0x27));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v50) = ((v53 ^ 0xFC)
                - 1075510538
                + ((2 * (v53 ^ 0xFC) + 254) & 0xEC ^ 0xFFF37FFF)) ^ *(_DWORD *)(v91
                                                                                               + 4
                                                                                               * (BYTE1(v50) ^ 0xBDu)) ^ *(_DWORD *)&v84[4 * (v53 ^ 0x91)] ^ (v103 - 1142355399 - ((2 * v103) & 0x77D21472)) ^ (v81 >> 1);
  LODWORD(v53) = (v50 - ((2 * v50) & 0xEC2F740E) + 1981266439) ^ a32;
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v53) ^ 0x9B));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  unsigned int v104 = ((v100 ^ 0xD7) - 1726037377) ^ a33 ^ *(_DWORD *)&v84[4 * (v100 ^ 0xBA)] ^ (v101 + 650526838 - ((2 * v101) & 0x4D8C80EC));
  unsigned int v105 = *(_DWORD *)(v91 + 4 * (BYTE1(v51) ^ 0x57u)) ^ HIDWORD(a30) ^ (v102 - 1142355399 - ((2 * v102) & 0x77D21472));
  LODWORD(v50) = *(_DWORD *)(v91 + 4 * (BYTE1(v100) ^ 0xE4u)) ^ HIDWORD(a32) ^ (v99
                                                                                - 1142355399
                                                                                - ((2 * v99) & 0x77D21472));
  LODWORD(v51) = (*(unsigned char *)(v91 + 4 * (BYTE1(v100) ^ 0xE4u)) ^ BYTE4(a32) ^ (v99
                                                                                               + 57
                                                                                               - ((2 * v99) & 0x72)));
  int v106 = *(_DWORD *)(v46 - 120);
  LODWORD(v51) = ((v51 ^ 0xA1) + v106 - ((2 * (v51 ^ 0xA1) + 886014) & 0xC80EC)) ^ *(_DWORD *)&v84[4
                                                                                                 * (v51 ^ 0xCC)];
  int v107 = *(_DWORD *)&v82[4 * (BYTE2(v104) ^ 0xDB)] ^ ((BYTE2(v104) ^ 0x87)
                                                    + 467283025
                                                    - ((2 * (HIWORD(v104) ^ 0x3A87)) & 0xA2)) ^ (v81 >> 1);
  LODWORD(v51) = (v51 - 1142355399 - ((2 * v51) & 0x77D21472)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v104) ^ 0xDEu));
  int v108 = ((v104 ^ 0x9E) + v106 - ((2 * (v104 ^ 0x9E) + 886014) & 0xC80EC)) ^ *(_DWORD *)&v84[4 * (v104 ^ 0xF3)];
  int v109 = v51 + 467283025 - ((2 * v51) & 0x37B458A2);
  LODWORD(v51) = (v107 - 1142355399 - ((2 * v107) & 0x77D21472)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v50) ^ 0x57u));
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (HIBYTE(v105) ^ 0x37));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v110 = v81 >> 1;
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (HIBYTE(v104) ^ 0x3A));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v111 = BYTE2(v50) ^ *(_DWORD *)&v82[4 * (BYTE2(v50) ^ 0xF6)] ^ *(_DWORD *)(v91
                                                                           + 4
                                                                           * ((unsigned __int16)(v105 ^ 0xBC3A) >> 8)) ^ 0xA03326C2 ^ (v81 >> 1);
  int v112 = v51 + 650526838 - ((2 * v51) & 0x4D8C80EC);
  LODWORD(v51) = ((v53 ^ 0x17) - 1726037377) ^ HIDWORD(a31) ^ *(_DWORD *)&v84[4
                                                                                             * (v53 ^ 0x7A)] ^ (v111 + 650526838 - ((2 * v111) & 0x4D8C80EC));
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v50) ^ 0x7C));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v50) = ((v105 ^ 0x3A) - 1726037377) ^ HIDWORD(a29) ^ *(_DWORD *)&v84[4
                                                                                              * (v105 ^ 0x57)] ^ v112;
  unsigned int v113 = *(_DWORD *)&v82[4 * (BYTE2(v53) ^ 0x91)] ^ a30 ^ BYTE2(v53) ^ v110 ^ v109;
  unsigned int v114 = *(_DWORD *)(v91 + 4 * (BYTE1(v53) ^ 0x5Au)) ^ a31 ^ (((v105 ^ 0x740CBC3A) >> 16)
                                                              + 467283025
                                                              - ((v105 >> 15) & 0xA2)) ^ *(_DWORD *)&v82[4 * (((v105 ^ 0x740CBC3A) >> 16) ^ 0x5C)] ^ (v108 - 1142355399 - ((2 * v108) & 0x77D21472)) ^ (v81 >> 1);
  unsigned int v115 = v113 ^ 0xFA64A50E;
  LODWORD(v53) = ((v113 ^ 0xE) - 1075510538 + ((2 * (v113 ^ 0xFA64A50E) + 254) & 0xEC ^ 0xFFF37FFF)) ^ *(_DWORD *)&v84[4 * (v113 ^ 0x63)];
  int v116 = v53 - 1142355399 - ((2 * v53) & 0x77D21472);
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v51) ^ 0x5B));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v53) = (v81 >> 1) ^ ((v50 ^ 0x72)
                             + *(_DWORD *)(v46 - 120)
                             - ((2 * (v50 ^ 0x72) + 886014) & 0xC80EC));
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v50) ^ 0x28));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v117 = v81 >> 1;
  LODWORD(v53) = v53 ^ *(_DWORD *)&v84[4 * (v50 ^ 0x1F)];
  int v118 = v53 - 1142355399 - ((2 * v53) & 0x77D21472);
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (HIBYTE(v113) ^ 0xB9));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v53) = v81 >> 1;
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (HIBYTE(v114) ^ 0xB4));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v53) = v53 ^ *(_DWORD *)&v84[4 * (v114 ^ 0x8B)] ^ ((v114 ^ 0xE6)
                                                                            - 1075510538
                                                                            + ((2 * (v114 ^ 0xE6) + 254) & 0xEC ^ 0xFFF37FFF));
  unsigned int v119 = (WORD1(v51) ^ 0x5B95) & 0x53 ^ WORD1(v51) & 2;
  int v120 = BYTE2(v51) ^ 0x95;
  int v121 = v51;
  LODWORD(v76) = (v51 ^ 0xF4)
               - 1075510538
               + ((2 * (v51 ^ 0xF4) + 254) & 0xEC ^ 0xFFF37FFF);
  LODWORD(v53) = ((BYTE2(v50) ^ 0x14) + 467283025 - ((2 * (WORD1(v50) ^ 0x2814)) & 0xA2)) ^ a28 ^ *(_DWORD *)(v91 + 4 * (BYTE1(v51) ^ 0x1Fu)) ^ (v53 - 1142355399 - ((2 * v53) & 0x77D21472)) ^ *(_DWORD *)&v82[4 * (BYTE2(v50) ^ 0x48)];
  LODWORD(v51) = *(_DWORD *)(v91 + 4 * ((unsigned __int16)(v113 ^ 0xA50E) >> 8)) ^ a29 ^ ((BYTE2(v114) ^ 0x59) + 467283025 - ((2 * (HIWORD(v114) ^ 0xB459)) & 0xA2)) ^ *(_DWORD *)&v82[4 * (BYTE2(v114) ^ 5)] ^ v118;
  LODWORD(v50) = (BYTE2(v115) + 467283025 - ((v115 >> 15) & 0xA2)) ^ HIDWORD(a28) ^ *(_DWORD *)&v84[4 * (v121 ^ 0x99)] ^ v76 ^ ((v81 >> 1) - 1142355399 - ((2 * (v81 >> 1)) & 0x77D21472)) ^ *(_DWORD *)&v82[4 * (BYTE2(v115) ^ 0x5C)] ^ *(_DWORD *)(v91 + 4 * (BYTE1(v50) ^ 0x12u));
  unsigned int v122 = *(_DWORD *)(v91 + 4 * (BYTE1(v114) ^ 0x34u)) ^ HIDWORD(a27) ^ *(_DWORD *)&v82[4 * (v120 ^ 0x5C)] ^ (v120 + 467283025 - 2 * v119) ^ v116 ^ v117;
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (HIBYTE(v122) ^ 0xEB));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v123 = (v81 >> 1) - 1142355399 - ((2 * (v81 >> 1)) & 0x77D21472);
  LODWORD(v76) = ((BYTE2(v50) ^ 0x81) + 467283025 - 2 * ((WORD1(v50) ^ 0x1481) & 0x5D ^ WORD1(v50) & 0xC)) ^ *(_DWORD *)&v82[4 * (BYTE2(v50) ^ 0xDD)];
  unsigned int v124 = ((v50 ^ 0x51) - 1075510538 + ((2 * (v50 ^ 0x51) + 254) & 0xEC ^ 0xFFF37FFF)) ^ *(_DWORD *)&v84[4 * (v50 ^ 0x3C)];
  unsigned int v125 = *(_DWORD *)&v82[4 * (BYTE2(v53) ^ 0xDB)] ^ ((BYTE2(v53) ^ 0x87)
                                                   + 467283025
                                                   - ((2 * (WORD1(v53) ^ 0x7787)) & 0xA2));
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v50) ^ 0x14));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v126 = v81 >> 1;
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v51) ^ 0x9A));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v71) = *(_DWORD *)&v82[4 * (((v122 ^ 0xA87CE98B) >> 16) ^ 0x5C)] ^ ((v122 ^ 0xA87CE98B) >> 16) ^ (v124 + 467283025 - ((2 * v124) & 0x37B458A2));
  LODWORD(v76) = ((v122 ^ 0x8B) - 1075510538 + ((2 * (v122 ^ 0xA87CE98B) + 254) & 0xEC ^ 0xFFF37FFF)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v53) ^ 0xDEu)) ^ *(_DWORD *)&v84[4 * (v122 ^ 0xE6)] ^ (v76 - 1142355399 - ((2 * v76) & 0x77D21472)) ^ (v81 >> 1);
  int v127 = *(_DWORD *)(v46 - 120);
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v53) ^ 0x77));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v50) = *(_DWORD *)(v91 + 4 * (BYTE1(v50) ^ 0x34u)) ^ a26 ^ ((BYTE2(v51) ^ 0xE9)
                                                                      + 467283025
                                                                      - ((2 * (WORD1(v51) ^ 0x9AE9)) & 0xA2)) ^ *(_DWORD *)&v82[4 * (BYTE2(v51) ^ 0xB5)] ^ ((v53 ^ 0x9E) + v127 - ((2 * (v53 ^ 0x9E) + 886014) & 0xC80EC)) ^ *(_DWORD *)&v84[4 * (v53 ^ 0xF3)] ^ v123;
  LODWORD(v69) = *(_DWORD *)(v91 + 4 * (BYTE1(v122) ^ 0xBu)) ^ a25 ^ ((v51 ^ 0xA8)
                                                                      + v127
                                                                      - ((2 * (v51 ^ 0xA8) + 886014) & 0xC80EC)) ^ *(_DWORD *)&v84[4 * (v51 ^ 0xC5)] ^ v126 ^ (v125 - 1142355399 - ((2 * v125) & 0x77D21472));
  LODWORD(v53) = *(_DWORD *)(v91 + 4 * (BYTE1(v51) ^ 0x2Du)) ^ HIDWORD(a26) ^ (v81 >> 1) ^ (v71
                                                                                            - 1142355399
                                                                                            - ((2 * v71) & 0x77D21472));
  LODWORD(v51) = v76 + 871100921 - ((2 * v76) & 0x67D7E3F2);
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v69) ^ 0x6D));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v76) = v81 >> 1;
  BYTE1(v122) = BYTE1(v69) ^ 0x65;
  LODWORD(v51) = v51 ^ a27;
  unsigned int v128 = *(_DWORD *)(v80 + 4 * (BYTE3(v51) ^ 0xFD));
  LODWORD(v71) = *(_DWORD *)&v82[4 * (((v69 ^ 0x2E0E654A) >> 16) ^ 0x5C)] ^ (v128 << 31) ^ (v128 >> 1) ^ (((v69 ^ 0x2E0E654A) >> 16) + 467283025 - ((v69 >> 15) & 0xA2)) ^ 0x3ED8E8EC;
  LODWORD(v69) = ((v69 ^ 0x4A) - 1075510538 + ((2 * (v69 ^ 0x2E0E654A) + 254) & 0xEC ^ 0xFFF37FFF)) ^ *(_DWORD *)&v84[4 * (v69 ^ 0x27)];
  int v129 = v71 - 1142355399 - ((2 * v71) & 0x77D21472);
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v53) ^ 0xAE));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v71) = (v81 >> 1) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v51) ^ 0xA4u)) ^ (v69
                                                                             - 1142355399
                                                                             - ((2 * v69) & 0x77D21472));
  LODWORD(v76) = *(_DWORD *)&v82[4 * (BYTE2(v53) ^ 0x3A)] ^ v76 ^ *(_DWORD *)&v84[4 * (v51 ^ 0x4D)] ^ ((BYTE2(v53) ^ 0x66) + 467283025 - ((2 * (WORD1(v53) ^ 0xAE66)) & 0xA2)) ^ ((v51 ^ 0x20) - 1075510538 + ((2 * (v51 ^ 0x20) + 254) & 0xEC ^ 0xFFF37FFF));
  int v130 = ((v53 ^ 0xB3) - ((2 * (v53 ^ 0xB3) + 842892542) & 0x32100472) + 1426574520) ^ *(_DWORD *)(v91 + 4 * BYTE1(v122));
  int v131 = (v130 + 650526838 - ((2 * v130) & 0x4D8C80EC)) ^ *(_DWORD *)&v84[4 * (v53 ^ 0xDE)];
  LODWORD(v51) = *(_DWORD *)&v82[4 * (BYTE2(v51) ^ 0x40)] ^ ((BYTE2(v51) ^ 0x1C)
                                                           + 467283025
                                                           - ((2 * (WORD1(v51) ^ 0xFD1C)) & 0xA2));
  int v132 = (v51 ^ 0xD9E215AF ^ -(v51 ^ 0xD9E215AF) ^ ((v51 ^ v131 ^ 0x431D28D3) + (v131 ^ 0x6500C283) + 1))
       + (v131 ^ 0x6500C283);
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * ((v50 ^ 0x3F162902) >> 24));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v51) = ((v50 ^ 0x3F162902) >> 16) ^ a24 ^ *(_DWORD *)&v82[4 * (((v50 ^ 0x3F162902) >> 16) ^ 0x5C)] ^ (v71 + 467283025 - ((2 * v71) & 0x37B458A2));
  unsigned int v133 = (v81 >> 1) ^ HIDWORD(a23) ^ v132;
  unsigned int v134 = *(_DWORD *)(v91 + 4 * (BYTE1(v50) ^ 0xCBu)) ^ HIDWORD(a24) ^ (v76 - 1142355399 - ((2 * v76) & 0x77D21472));
  LODWORD(v50) = *(_DWORD *)(v91 + 4 * (BYTE1(v53) ^ 0x7Cu)) ^ HIDWORD(a25) ^ ((v50 ^ 2)
                                                                               - 1075510538
                                                                               + ((2 * (v50 ^ 0x3F162902) + 254) & 0xEC ^ 0xFFF37FFF)) ^ *(_DWORD *)&v84[4 * (v50 ^ 0x6F)] ^ v129;
  LODWORD(v76) = ((BYTE2(v50) ^ 0xE9) + 467283025 - ((2 * (WORD1(v50) ^ 0xB8E9)) & 0xA2)) ^ *(_DWORD *)&v82[4 * (BYTE2(v50) ^ 0xB5)];
  int v135 = v76 - 1142355399 - ((2 * v76) & 0x77D21472);
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v51) ^ 0x9D));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v136 = v81 >> 1;
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (HIBYTE(v134) ^ 0x61));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v76) = *(_DWORD *)&v84[4 * (v50 ^ 0xC5)] ^ *(_DWORD *)&v82[4 * (BYTE2(v51) ^ 0x28)] ^ ((v50 ^ 0xA8) + v127 - ((2 * (v50 ^ 0xA8) + 886014) & 0xC80EC)) ^ ((BYTE2(v51) ^ 0x74) + 467283025 - 2 * ((WORD1(v51) ^ 0x9D74) & 0x5B ^ WORD1(v51) & 0xA)) ^ (v81 >> 1);
  LODWORD(v71) = v136 ^ ((BYTE2(v133) ^ 0xE6) + 467283025 - ((2 * (HIWORD(v133) ^ 0xB0E6)) & 0xA2)) ^ *(_DWORD *)&v82[4 * (BYTE2(v133) ^ 0xBA)];
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v50) ^ 0xB8));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v137 = v81 >> 1;
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (HIBYTE(v133) ^ 0xB0));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v53) = ((BYTE2(v134) ^ 8) + 467283025 - ((v134 >> 15) & 0xA2)) ^ *(_DWORD *)&v82[4 * (BYTE2(v134) ^ 0x54)] ^ *(_DWORD *)&v84[4 * (v133 ^ 0x29)] ^ ((v133 ^ 0x44) - 1075510538 + ((2 * (v133 ^ 0x44) + 254) & 0xEC ^ 0xFFF37FFF)) ^ v137;
  unsigned int v138 = *(_DWORD *)(v91 + 4 * (BYTE1(v133) ^ 0xDDu)) ^ HIDWORD(a22) ^ (v76 - 1142355399 - ((2 * v76) & 0x77D21472));
  LODWORD(v53) = *(_DWORD *)(v91 + 4 * (BYTE1(v51) ^ 0xBDu)) ^ a23 ^ (v53 - 1142355399 - ((2 * v53) & 0x77D21472));
  unsigned int v139 = *(_DWORD *)(v91 + 4 * (BYTE1(v134) ^ 0x8Fu)) ^ HIDWORD(a21) ^ *(_DWORD *)&v84[4
                                                                                       * (v51 ^ 0xB4)] ^ ((v51 ^ 0xD9) - 1075510538 + ((2 * (v51 ^ 0xD9) + 254) & 0xEC ^ 0xFFF37FFF)) ^ (v81 >> 1) ^ v135;
  LODWORD(v51) = ((v134 ^ 0x85)
                - 1075510538
                + ((2 * (v134 ^ 0x85) + 254) & 0xEC ^ 0xFFF37FFF)) ^ a22 ^ *(_DWORD *)&v84[4 * (v134 ^ 0xE8)] ^ *(_DWORD *)(v91 + 4 * (BYTE1(v50) ^ 0x2Du)) ^ (v71 - 1142355399 - ((2 * v71) & 0x77D21472));
  LODWORD(v76) = ((BYTE2(v51) ^ 0x66) + 467283025 - ((2 * (WORD1(v51) ^ 0xAE66)) & 0xA2)) ^ *(_DWORD *)&v82[4 * (BYTE2(v51) ^ 0x3A)];
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (HIBYTE(v139) ^ 0x18));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v140 = BYTE2(v53);
  LODWORD(v50) = ((v81 >> 1) + 467283025 - ((2 * (v81 >> 1)) & 0x37B458A2)) ^ *(_DWORD *)&v82[4 * (BYTE2(v53) ^ 0x40)];
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v53) ^ 0xEF));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v71) = (v81 >> 1) ^ *(_DWORD *)&v84[4 * (v139 ^ 0x90)] ^ ((v139 ^ 0xFD)
                                                                                   + v127
                                                                                   - ((2
                                                                                     * (v139 ^ 0xFD)
                                                                                     + 886014) & 0xC80EC));
  LODWORD(v69) = *(_DWORD *)&v84[4 * (v138 ^ 0x27)] ^ ((v138 ^ 0x4A)
                                                                      + v127
                                                                      - ((2 * (v138 ^ 0x4A) + 886014) & 0xC80EC));
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v51) ^ 0xAE));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v69) = (v81 >> 1) ^ *(_DWORD *)&v82[4 * (BYTE2(v139) ^ 0xF)] ^ (v69 + 467283025 - ((2 * v69) & 0x37B458A2));
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (HIBYTE(v138) ^ 0xDC));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v141 = v50 - 1142355399 - ((2 * v50) & 0x77D21472);
  LODWORD(v50) = ((BYTE2(v138) ^ 0xE) + 467283025 - ((v138 >> 15) & 0xA2)) ^ a21 ^ *(_DWORD *)&v82[4
                                                                                                 * (BYTE2(v138) ^ 0x52)] ^ *(_DWORD *)(v91 + 4 * (BYTE1(v51) ^ 0x7Cu)) ^ (v71 - 1142355399 - ((2 * v71) & 0x77D21472));
  unsigned int v142 = *(_DWORD *)(v91 + 4 * (BYTE1(v139) ^ 0x1Bu)) ^ HIDWORD(a20) ^ *(_DWORD *)&v84[4
                                                                                       * (v53 ^ 0x4D)] ^ ((v53 ^ 0x20) - 1075510538 + ((2 * (v53 ^ 0x20) + 254) & 0xEC ^ 0xFFF37FFF)) ^ (v81 >> 1) ^ (v76 - 1142355399 - ((2 * v76) & 0x77D21472));
  int v143 = ((v51 ^ 0xB3) + v127 - ((2 * (v51 ^ 0xB3) + 886014) & 0xC80EC)) ^ HIDWORD(a19) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v138) ^ 0x65u)) ^ *(_DWORD *)&v84[4 * (v51 ^ 0xDE)] ^ v141;
  LODWORD(v53) = *(_DWORD *)(v91 + 4 * (BYTE1(v53) ^ 0xA4u)) ^ a20 ^ (v69 - 1142355399 - ((2 * v69) & 0x77D21472));
  LODWORD(v76) = HIWORD(v139);
  LOBYTE(v139) = ((v51 ^ 0xB3) + v127 - ((2 * (v51 ^ 0xB3) - 2) & 0xEC)) ^ BYTE4(a19) ^ *(unsigned char *)(v91
                                                                                                 + 4
                                                                                                 * (BYTE1(v138) ^ 0x65u)) ^ v84[4 * (v51 ^ 0xDE)] ^ v141 ^ v140;
  unsigned int v144 = v143 ^ v140 ^ 0x7641388B;
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * HIBYTE(v144));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  LODWORD(v69) = v81 >> 1;
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * ((v50 ^ 0xF7E9CFA8) >> 24));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v145 = v81 >> 1;
  int v146 = (v127 + (v50 ^ 0xA8) - ((2 * (v50 ^ 0xA8) + 886014) & 0xC80EC)) ^ *(_DWORD *)&v84[4 * (v50 ^ 0xC5)];
  int v147 = (BYTE2(v144) + 467283025 - ((v144 >> 15) & 0xA2)) ^ *(_DWORD *)&v82[4 * (BYTE2(v144) ^ 0x5C)];
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (BYTE3(v53) ^ 0xE7));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v148 = v81 >> 1;
  LODWORD(v76) = v69 ^ *(_DWORD *)&v84[4 * ((v53 ^ v76) ^ 0x18)] ^ (((v50 ^ 0xF7E9CFA8) >> 16)
                                                                                   + 467283025
                                                                                   - (((v50 ^ 0xF7E9CFA8) >> 15) & 0xA2)) ^ *(_DWORD *)&v82[4 * (((v50 ^ 0xF7E9CFA8) >> 16) ^ 0x5C)] ^ (((v53 ^ v76) ^ 0x75) - 1075510538 + ((2 * ((v53 ^ v76) ^ 0x75) + 254) & 0xEC ^ 0xFFF37FFF));
  LODWORD(v76) = (v76 - 1142355399 - ((2 * v76) & 0x77D21472)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v142) ^ 0xECu));
  unsigned int v149 = v145 ^ *(_DWORD *)&v82[4 * (BYTE2(v142) ^ 0xA7)] ^ (v144
                                                           - 1075510538
                                                           + ((2 * v144 + 254) & 0xEC ^ 0xFFF37FFF)) ^ ((BYTE2(v142) ^ 0xFB) + 467283025 - 2 * ((HIWORD(v142) ^ 0x57FB) & 0x55 ^ HIWORD(v142) & 4)) ^ *(_DWORD *)&v84[4 * (v139 ^ 0xE6)];
  HIDWORD(v81) = *(_DWORD *)(v80 + 4 * (HIBYTE(v142) ^ 0x57));
  LODWORD(v81) = HIDWORD(v81) ^ 0x7DB1D1D8;
  int v150 = (v149 - 1142355399 - ((2 * v149) & 0x77D21472)) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v53) ^ 0x6Du));
  LODWORD(v69) = *(_DWORD *)&v84[4 * (v142 ^ 0x42)];
  LODWORD(v80) = *(_DWORD *)(v91 + 4 * (BYTE1(v50) ^ 0x2Du));
  LODWORD(v84) = v146 ^ ((BYTE2(v53) ^ 0x31) + 467283025 - 2 * ((WORD1(v53) ^ 0xE731) & 0x59 ^ WORD1(v53) & 8)) ^ (v81 >> 1) ^ *(_DWORD *)&v82[4 * (BYTE2(v53) ^ 0x6D)];
  LODWORD(v50) = HIDWORD(a10) ^ *(_DWORD *)(v91 + 4 * (BYTE1(v143) ^ 0xDAu)) ^ (v84
                                                                                - 1142355399
                                                                                - ((2 * v84) & 0x77D21472));
  LODWORD(v84) = (v150 - 1652869706 - ((2 * v150) & 0x3AF66B6C)) ^ a19;
  LODWORD(v53) = v76 - 559618588 - ((2 * v76) & 0xBD49CBC8);
  LODWORD(v80) = v80 ^ HIDWORD(a16) ^ ((v142 ^ 0x2F)
                                     - 1075510538
                                     + ((2 * (v142 ^ 0x2F) + 254) & 0xEC ^ 0xFFF37FFF)) ^ v148 ^ v69 ^ (v147 - 1142355399 - ((2 * v147) & 0x77D21472));
  BYTE2(v51) = BYTE2(v50) ^ 0x8C;
  unsigned int v151 = *(_DWORD *)(v46 - 128);
  int v152 = (char *)*(&off_1022AC750 + (int)a10) - 8;
  int v153 = (char *)*(&off_1022AC750 + (int)(v151 - 1907)) - 4;
  uint64_t v154 = (uint64_t)*(&off_1022AC750 + SHIDWORD(a9));
  LODWORD(v76) = (*(_DWORD *)(v154 + 4 * (BYTE2(v84) ^ 0x9Eu)) - 85224499) ^ (*(_DWORD *)&v152[4
                                                                                               * (v80 ^ 0xC9)]
                                                                              + 1662449529);
  int v155 = *(_DWORD *)&v152[4 * (v50 ^ 0xC8)];
  int v156 = v155 - ((2 * v155 + 1177415410) & 0x769D1DC4);
  int v157 = (*(_DWORD *)(v154 + 4 * (BYTE2(v80) ^ 0x38u)) - 85224499) ^ (*(_DWORD *)&v153[4
                                                                                       * ((v50 ^ 0x898C5DC8) >> 24)]
                                                                      - 1113354812);
  int v158 = *(_DWORD *)&v152[4 * (v84 ^ 0xA2)];
  LODWORD(v53) = v53 ^ HIDWORD(a18);
  uint64_t v159 = v53 ^ 0x351D74B9;
  int v160 = *(_DWORD *)&v152[4 * (v53 ^ 0xB9)];
  int v161 = *(_DWORD *)&v153[4 * ((v84 >> 24) ^ 0xE7)];
  LODWORD(v152) = *(_DWORD *)&v153[4 * (BYTE3(v80) ^ 0xB8)];
  LODWORD(v53) = *(_DWORD *)&v153[4 * (BYTE3(v53) ^ 0x65)];
  uint64_t v162 = v151;
  uint64_t v163 = (uint64_t)*(&off_1022AC750 + (int)(v151 - 1825));
  int v164 = v157 ^ (v158 + 1662449529);
  LODWORD(v50) = *(_DWORD *)(v163 + 4 * (BYTE1(v50) ^ 0x61u)) ^ (v53 - 1113354812);
  LODWORD(v53) = *(_DWORD *)(v163 + 4 * (BYTE1(v84) ^ 0xA0u));
  uint64_t v165 = *(unsigned int *)(v163 + 4 * (BYTE1(v80) ^ 0xE9u));
  LODWORD(v50) = (v76 + 995004130 - ((2 * v76) & 0x769D1DC4)) ^ v50;
  int v166 = *(_DWORD *)(v154 + 4 * BYTE2(v51));
  LODWORD(v84) = *(_DWORD *)(v163 + 4 * BYTE1(v159)) ^ a12 ^ (v164 + 995004130 - ((2 * v164) & 0x769D1DC4));
  LODWORD(v51) = a8 ^ HIDWORD(a18) ^ (v50 - 559618588 - ((2 * v50) & 0xBD49CBC8));
  LODWORD(v50) = v53 ^ a8 ^ (v156 - 1637513637) ^ (v152 - 1113354812);
  int v167 = (char *)*(&off_1022AC750 + SHIDWORD(a8)) - 4;
  LODWORD(v50) = v50 ^ (*(_DWORD *)(v154 + 4 * BYTE2(v159)) - 85224499);
  *(unsigned char *)(a7 + v177) = v167[((unsigned __int16)(*(_WORD *)(v163 + 4 * BYTE1(v159)) ^ a12 ^ (v164 - 28958 - ((2 * v164) & 0x1DC4))) >> 8) ^ 0x99] ^ 0x58;
  unsigned int v168 = (char *)*(&off_1022AC750 + (int)v162 - 1949) - 12;
  *(unsigned char *)(a7 + *(void *)(v46 - 248)) = (v168[BYTE2(v51) ^ 0xADLL] - 22) ^ 0xC5;
  uint64_t v169 = (uint64_t)*(&off_1022AC750 + (int)v162 - 1862);
  *(unsigned char *)(a7 + *(void *)(v46 - 216)) = *(unsigned char *)(v169 + (v84 ^ 0xFCLL)) ^ 0x30;
  *(unsigned char *)(a7 + *(void *)(v46 - 232)) = (v168[BYTE2(v50) ^ 0x8CLL] - 22) ^ 0x47;
  unsigned int v170 = (char *)*(&off_1022AC750 + (int)v162 - 1865) - 8;
  *(unsigned char *)(a7 + *(void *)(v46 - 256)) = (v170[(v84 >> 24) ^ 0xDELL] - 95) ^ 0x1B;
  LODWORD(v163) = v168[BYTE2(v84) ^ 0x15];
  uint64_t v171 = (v163 - 22) ^ 0xDAu;
  *(unsigned char *)(a7 + *(void *)(v46 - 240)) = ((v163 + ((v163 - 22) ^ 0xDA) - 21) ^ 0xFE) + v163 - 22;
  LODWORD(v163) = v161 - ((2 * v161 + 2068257672) & 0x769D1DC4);
  uint64_t v172 = a9 ^ v165;
  unsigned int v173 = v172 ^ (v166 - 85224499) ^ (v160 + 1662449529) ^ (v163 - 118350682);
  *(unsigned char *)(a7 + *(void *)(v46 - 224)) = *(unsigned char *)(v169 + (v173 ^ 5)) ^ 0xC2;
  *(unsigned char *)(a7 + *(void *)(v46 - 152)) = (v170[BYTE3(v51) ^ 0x4ELL] - 95) ^ 0xE6;
  *(unsigned char *)(a7 + *(void *)(v46 - 160)) = (v170[BYTE3(v50) ^ 0x9CLL] - 95) ^ 0xB8;
  uint64_t v174 = *(void *)(v46 - 184);
  *(unsigned char *)(a7 + v174) = (v170[HIBYTE(v173) ^ 0x67] - 95) ^ 0x91;
  *(unsigned char *)(a7 + *(void *)(v46 - 176)) = *(unsigned char *)(v169 + (v50 ^ 0xF2)) ^ 0xC8;
  *(unsigned char *)(a7 + *(void *)(v46 - 200)) = v167[BYTE1(v50) ^ 0x1ELL] ^ 0xFB;
  *(unsigned char *)(a7 + *(void *)(v46 - 168)) = v167[BYTE1(v173) ^ 0x33] ^ 0xE2;
  *(unsigned char *)(a7 + *(void *)(v46 - 192)) = v167[BYTE1(v51) ^ 0xBCLL] ^ 0x2C;
  *(unsigned char *)(a7 + *(void *)(v46 - 144)) = *(unsigned char *)(v169 + (v51 ^ 0x9FLL)) ^ 0x30;
  *(unsigned char *)(a7 + *(void *)(v46 - 136)) = (v168[BYTE2(v173) ^ 0xDLL] - 22) ^ 0x8E;
  uint64_t v175 = v174 + 1079754221 - 2 * ((v174 + 16) & *(_DWORD *)(v46 - 204) ^ a1 & 2u);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a43 + 8 * ((124 * ((v175 ^ 0x405BBDDD) >= HIDWORD(a12))) ^ ((int)v162 - 688))))(v175, v172, v171, v162, 1662449529, v165, 995004130, v159, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_10038E278()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v0 + 1523)))();
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((((v0 - 148) ^ 0x151) * (v1 == 605940026)) ^ (v0 + 418))))(v3);
}

uint64_t sub_10038E2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                                           + 8
                                           * (int)(((((89 * (a5 ^ 0x501) + 241554761) & 0xF19A2FFA) - 1852) * (v5 < 0x20)) ^ a5)))(0);
}

uint64_t sub_10038E314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * (((2 * ((a6 ^ 0x27E) + 462) - 1767)
                                                                                  * (v7 == 0)) ^ ((a6 ^ 0x27E) - 465))))(a1, a2, a3, a4, a5);
}

uint64_t sub_10038E34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(void))(v16 + 8 * ((1301 * (a14 == ((v14 + 1522909302) ^ v15))) ^ v14)))();
}

uint64_t sub_10038E380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  unsigned int v21 = v18 + (((v19 - 281) | 0xA) ^ 0xB822A7A3);
  int v22 = ((a18 + 1825454768) < 0xD793C337) ^ (v21 < 0xD793C337);
  BOOL v23 = v21 < a18 + 1825454768;
  if (v22) {
    BOOL v23 = (a18 + 1825454768) < 0xD793C337;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((!v23 | (2 * !v23)) ^ v19)))();
}

void sub_10038E3F0()
{
}

void sub_10038E4FC()
{
  *int v0 = *(_DWORD *)(v1 - 0x38C18B7A1BA31314);
}

uint64_t sub_10038E54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((196 * (a6 + 1 != v8 + 64)) ^ v7)))();
}

uint64_t sub_10038E60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((((v10 + 31) ^ (a10 + 4 >= a10)) & 1) * ((31 * (v10 ^ 0x738)) ^ 0x518)) ^ v10)))();
}

uint64_t sub_10038E68C@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W3>, uint64_t a4@<X8>)
{
  *(_OWORD *)(v5 + (a1 + a2 + v4)) = *(_OWORD *)(a4 + a2);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 != a2) * a3) ^ v6)))();
}

void sub_10038E6BC()
{
  *(_DWORD *)(v0 + 32) = 605940026;
}

uint64_t sub_10038E708@<X0>(uint64_t a1@<X0>, char a2@<W5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  uint64_t v36 = (v34 + a3);
  unsigned int v37 = *(_DWORD *)(&a20 + v36 + 72);
  unsigned int v38 = v37 >> (a2 + ((v33 - 79) | 4) + 23);
  *(unsigned char *)(a1 + v36) = (v38 ^ 0x46) - ((2 * v38) & 0x30) + 24;
  *(unsigned char *)(a1 + (v36 + 1)) = (BYTE2(v37) ^ 0x60) - ((v37 >> 15) & 0x30) + 24;
  *(unsigned char *)(a1 + (v36 + 2)) = (BYTE1(v37) ^ 0xAB) - ((2 * (BYTE1(v37) ^ 0xAB)) & 0x30) + 24;
  *(unsigned char *)(a1 + (v36 + 3)) = v37 ^ 0x7D;
  BOOL v39 = v34 + 944924905 < (a32 + 1234615826);
  if (v34 + 944924905 < v32 != a32 + 1234615826 < v32) {
    BOOL v39 = a32 + 1234615826 < v32;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((!v39 | (16 * !v39)) ^ v33)))();
}

uint64_t sub_10038E804(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (int)(((((a7 + 1003) ^ 0xFFFFF824) + a7 - 495) * (a1 > 0xF)) ^ (a7 + 1003))))();
}

uint64_t sub_10038E838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v6 ^ 0x6E6) + 432) * (v5 == a5)) ^ v6)))();
}

uint64_t sub_10038E864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12)
{
  return (*(uint64_t (**)(void))(v12 + 8 * (((((v13 ^ 0x42A) - 281) ^ 0xB8C) * (a12 < 0x10789297)) ^ v13 ^ 0x42A)))();
}

uint64_t sub_10038E8F0(uint64_t a1, int a2)
{
  BOOL v6 = v4 - 1096408896 > 1066842526 || v4 - 1096408896 < v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((((a2 - 677) ^ 0x250) * v6) ^ a2)))();
}

void sub_10038E940(_DWORD *a1@<X8>)
{
  *a1 = v1;
  JUMPOUT(0x1003522ACLL);
}

uint64_t sub_10038E948(int a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  int v10 = v6 - 1170;
  int v11 = (v6 - 1481) ^ 0x146;
  int v12 = v8 + v7;
  int v13 = v12 + a1;
  if ((v12 + a1) <= 0x40) {
    int v13 = a3;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((71 * (a6 - v12 + v11 - 190 < (a4 + v13))) ^ v10)))();
}

uint64_t sub_10038E998@<X0>(int a1@<W1>, int a2@<W4>, uint64_t a3@<X8>)
{
  unsigned int v7 = ((2 * (v4 + a1 + (a2 ^ 0x1D7) - 565 + (v6 ^ v3))) & 0x9291D7F6)
     + ((v4 + a1 + (a2 ^ 0x1D7) - 565 + (v6 ^ v3)) ^ 0x4948EBFB)
     + 1921585060;
  unsigned int v8 = v5 - 1918164262;
  int v9 = (v8 < 0xBBD1FB9F) ^ (v7 < 0xBBD1FB9F);
  BOOL v10 = v7 > v8;
  if (v9) {
    BOOL v10 = v7 < 0xBBD1FB9F;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((13 * v10) ^ a2 ^ 0x76E)))();
}

uint64_t sub_10038EA34()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1408
                                * ((((*(unsigned __int8 *)(v3 + 3) - 134) << (v2 ^ 0xD0)) & v1)
                                 + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v0) == v0)) ^ v4)))();
}

uint64_t sub_10038EA74(uint64_t a1)
{
  unsigned int v7 = v3 + v2 - 1743179230;
  if (v7 <= 0x40) {
    int v8 = 64;
  }
  else {
    int v8 = v7;
  }
  BOOL v9 = __CFADD__(v7 + ((v1 - 53060839) & 0x329A353) - 338, v4 + 1743178490 + v5 + v8 + 740);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8 * ((v9 * (((v1 - 1634737037) & 0x617019B9) - 257)) ^ v1)))(a1, 193659435);
}

uint64_t sub_10038EB08()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((v1 + 173 + (v1 ^ 0x6FC) - 1082) * (*(_DWORD *)(v2 - 168) == *(_DWORD *)(v2 - 176))) ^ v1)))();
}

uint64_t sub_10038EB50@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((a1 == v3 + (v1 ^ 0x98u) - 97 - 1469344084) * (3 * (v1 ^ 0x98) + 794)) ^ v1)))();
}

uint64_t sub_10038EB90(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * (((v3 == a3 + (v4 ^ 0x71C42957) - 530)
                                                       * (((v4 - 2046595173) & 0x79FC8FF7) - 1998)) | v4)))(a1, -1803655619);
}

uint64_t sub_10038EBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  STACK[0x680] = v11;
  STACK[0x688] = v9;
  unint64_t v15 = STACK[0x530];
  uint64_t v16 = (char *)&a9 + STACK[0x530] - 0x2500E162B343A941;
  STACK[0x690] = (unint64_t)v16;
  STACK[0x530] = v15 + 320;
  LODWORD(STACK[0x638]) = *(_DWORD *)(v11 - 0x2E910FB81C0D9797);
  LODWORD(STACK[0x524]) = *(_DWORD *)(v11 - 0x2E910FB81C0D9793);
  LODWORD(STACK[0x634]) = *(_DWORD *)(v11 - 0x2E910FB81C0D978FLL);
  LODWORD(STACK[0x4B0]) = *(_DWORD *)(v11 - 0x2E910FB81C0D978BLL);
  int v17 = *(unsigned __int8 *)(v11 - 0x2E910FB81C0D977FLL) ^ 0xCB;
  if (v17 == 2)
  {
    unsigned int v22 = STACK[0x224] & 0x829494DB;
    LODWORD(STACK[0x4D4]) = *(_DWORD *)(v11 - 0x2E910FB81C0D9787);
    LODWORD(STACK[0x598]) = 1614243912;
    return (*(uint64_t (**)(void))(v14 + 8 * (int)((1766 * (v13 + v22 + 1614243720 - 26 < (v22 ^ 0x9A))) ^ v22)))();
  }
  else
  {
    if (v17 != 1) {
      JUMPOUT(0x10035CCB4);
    }
    int v18 = (5 * LODWORD(STACK[0x220]) - 156) | 0x9C;
    LODWORD(STACK[0x598]) = v12;
    BOOL v20 = v9 >= STACK[0x228] + v15 || (unint64_t)v16 >= v9 + 64;
    return (*(uint64_t (**)(void))(v14 + 8 * (((v18 ^ 0x2B8) * v20) ^ (v10 + 485))))();
  }
}

uint64_t sub_10038EDD0()
{
  unsigned int v5 = ((382 * (v3 ^ 0xE5)) ^ 0xFFFFFD03) + *(unsigned __int8 *)(v2 + 6);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1588 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_10038EE1C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 - 1987) | 0x490) ^ ((v1 - 2057) | 0x10) ^ 0x4D1) * (v2 == v0)) ^ v1)))();
}

uint64_t sub_10038EE5C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((((v1 ^ 0x588) - 1413) | 0x104) - 239) & v0) == 0)
                                     * (((v1 ^ 0x588) + 80777335) & 0xFB2F6EAC ^ 0x6D0)) ^ v1 ^ 0x588)))();
}

void sub_10038EEB4()
{
}

uint64_t sub_10038EEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, uint64_t a14, int a15)
{
  unsigned int v19 = 1178560073 * (&a12 ^ 0xBA947862);
  a14 = a11;
  a13 = v15 - ((2 * v15) & 0x279D5C7E) + v18 + 390 - 1815172236 + v19;
  a15 = (v18 + 760) ^ v19;
  uint64_t v20 = (*(uint64_t (**)(int *))(v17 + 8 * (v18 ^ 0x9CE)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((13 * (a12 == v16)) ^ v18)))(v20);
}

void sub_10038EF5C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 3804331 * ((a1 - 2 * (a1 & 0xF3A65B02) - 207201534) ^ 0x8D737EF4);
  uint64_t v2 = (char *)*(&off_1022AC750 + v1 - 1336) - 4;
  int v3 = (*(unsigned char *)a1 ^ (-85 * ((a1 - 2 * (a1 & 2) + 2) ^ 0xF4)));
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * (v1 ^ 0xD04)])((char *)*(&off_1022AC750 + (v1 ^ 0x56B)) - 4, sub_100379EA4);
  uint64_t v4 = *(void *)((char *)*(&off_1022AC750 + (v1 ^ 0x5BE)) - 4);
  unsigned int v6 = v1 + 1755732067 * ((2 * (&v5 & 0x858AF40) - &v5 - 140029761) ^ 0x2961ED64) - 1141;
  uint64_t v5 = v4;
  (*(void (**)(uint64_t *))&v2[8 * v1 + 6048])(&v5);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10038F0C4@<X0>(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v3 + (v5 + a1 + 350)) = *(unsigned char *)(a3 + (v5 + a1 + 350));
  return (*(uint64_t (**)(void))(v6 + 8 * ((859 * (((a2 - 1346285053) & 0x503EAAB5 ^ 0xFFFFFDCA) + a1 == v4)) ^ a2)))();
}

void sub_10038F118()
{
}

uint64_t sub_10038F144()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((227 * (v0 >= v3)) ^ (v2 - 143329363))))();
}

uint64_t sub_10038F18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  LODWORD(STACK[0x504]) = v10;
  STACK[0x540] = *(void *)(v12 + 8 * v11);
  return sub_10038EBF8(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_10038F198@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 448) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 3744))(0);
}

void sub_10038F1F0()
{
}

uint64_t sub_10038F1FC(uint64_t result)
{
  uint64_t v1 = 1178560073 * ((2 * (result & 0x64AC438940A5398ALL) - result + 0x1B53BC76BF5AC675) ^ 0xAFEC9E05CEBE17);
  int v2 = *(_DWORD *)(result + 28) ^ (1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17));
  uint64_t v3 = *(void *)(result + 8);
  uint64_t v4 = *(void *)(result + 16);
  unint64_t v5 = v3 - v1;
  BOOL v6 = v3 != v4;
  BOOL v7 = v5 >= v4 - v1;
  if ((*(_DWORD *)(result + 36) + 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17))) {
    BOOL v6 = v7;
  }
  if (!v6) {
    int v2 = *(_DWORD *)(result + 24) - 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17);
  }
  *(_DWORD *)uint64_t result = v2 ^ (*(_DWORD *)(result + 4)
                          - 1178560073 * ((2 * (result & 0x40A5398A) - result - 1084569995) ^ 0x5CEBE17));
  return result;
}

void sub_10038F2A0(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 40) != 0x38C18B7A1BA3132CLL
    && *(void *)(a1 + 16) != 0x64B4A486D173DE30
    && *(void *)a1 != 0x5F8E90DD494572B7;
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((((2 * a1) | 0xD63BF148) - a1 - 1797126308) ^ 0x61E9F68B);
  __asm { BRAA            X9, X17 }
}

void sub_10038F3BC(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0x2E26D8C52E26D8C5;
  *(void *)(a1 + 16) = 0x482DC24E4908E0DBLL;
  *(_DWORD *)(a1 + 24) = 605940026;
  *(void *)(v2 - 0x216229CD9A8FA111) = a1 + 0x38C18B7A1BA3132CLL;
  JUMPOUT(0x10038F41CLL);
}

void sub_10038F430(_DWORD *a1)
{
  *((unsigned char *)a1 + ((v2 - 2104930483) ^ 0x41AD48ABu) + v1 + 4) = 35;
  *a1 = v1;
  JUMPOUT(0x10038F460);
}

uint64_t sub_10038F46C@<X0>(uint64_t a1@<X8>)
{
  unsigned int v6 = v3
     - 535753261
     * (((&v5 | 0xAEBEDBD6) - &v5 + (&v5 & 0x51412428)) ^ 0xA44AD5F9)
     - 201;
  uint64_t v5 = v2;
  uint64_t v7 = a1;
  uint64_t v8 = v2;
  return (*(uint64_t (**)(uint64_t *))(v1 + 8 * (v3 ^ 0x991u)))(&v5);
}

uint64_t sub_10038F4D8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a3 + (v7 + v6)) = *(void *)(a2 + (v7 + v6));
  return (*(uint64_t (**)(void))(v8 + 8 * (((2 * (a1 == 0)) | (4 * (a1 == 0))) ^ a6)))((a1 + 8));
}

uint64_t sub_10038F50C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unint64_t v9 = *(uint64_t (**)(void, uint64_t, uint64_t))(v8 + 8 * (a1 ^ (1555 * (a8 > 0))));
  return v9(v9, 141255583, a3);
}

uint64_t sub_10038F57C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((99 * (a10 != v10 + (v12 ^ 0x35) - 401)) ^ v12)))();
}

uint64_t sub_10038F5B0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((120 * (v1 == ((v0 + 101) ^ 0x11B0E3C7))) ^ v0)))();
}

uint64_t sub_10038F644(uint64_t a1, unsigned int a2)
{
  BOOL v6 = *(_DWORD *)(*v4 + 4 * a2) == v3;
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v6) | (8 * v6)) ^ v5)))();
}

uint64_t sub_10038F670(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  *(int8x8_t *)(v6 - 7 + (a2 + v9 + v8 + 145 - a3)) = veor_s8(*(int8x8_t *)(v5- 7+ (a2+ v9+ v8+ 145- a3)), (int8x8_t)0x1818181818181818);
  return (*(uint64_t (**)(void))(v10 + 8 * ((244 * (a5 - (v7 & 0xFFFFFFF8) - 111 == -a3)) ^ a5)))();
}

void sub_10038F6DC()
{
}

void sub_10038F780()
{
}

uint64_t sub_10038F78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((445 * (a2 + 1 == v5 + 64)) ^ v4)))(a4);
}

uint64_t sub_10038F84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((((a7 ^ 0x45E) + v7) ^ a6) >= 0) * (3 * (a7 ^ 0x138) - 122)) ^ a7 ^ 0x45E)))();
}

void sub_10038F898()
{
}

uint64_t sub_10038F904@<X0>(int a1@<W3>, int a2@<W6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  *(&a20 + (a3 + v20)) = *(unsigned char *)(v21 + v24 - 1430988054)
                                     + ((a2 + v22 + 26) ^ 0x22)
                                     + (~(2 * *(unsigned char *)(v21 + v24 - 1430988054)) | 0xCF);
  return (*(uint64_t (**)(void))(v23 + 8 * ((1927 * ((a1 + a3 + 1) < 0x40)) ^ (a2 + v22 + 59))))();
}

void sub_10038F978()
{
}

void sub_10038F980()
{
}

void sub_10038F990()
{
}

uint64_t sub_10038F998()
{
  BOOL v4 = v2 + 1230490319 < (int)(((2 * (v0 ^ 0x3F9)) ^ 0x74503009) + v3);
  if (v3 > 0xBAFCEF0 != v2 + 1230490319 < -196071153) {
    BOOL v4 = v3 > 0xBAFCEF0;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((v4 * (v0 + 625)) ^ v0)))();
}

uint64_t sub_10038FA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v18 - 128) = a14;
  *(_DWORD *)(v18 - 120) = v17 + 1178560073 * ((v18 + 937976367 - 2 * ((v18 - 136) & 0x37E862B7)) ^ 0x8D7C1AD5) - 353;
  *(void *)(v18 - 112) = v16;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v17 + 851)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((31
                                              * (*(_DWORD *)(v18 - 136) <= (v17 ^ 0x733 ^ (v14 + 560)))) ^ v17)))(v19);
}

uint64_t sub_10038FAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, unsigned int a16)
{
  a14 = &STACK[0x216229CD9A8FA129];
  a16 = 1667 - 460628867 * (((&a14 | 0x9646C919) + (~&a14 | 0x69B936E6)) ^ 0xDAD04B65);
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v17 + 18272))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((60 * (a15 != v16)) ^ 0x4C8u)))(v18);
}

uint64_t sub_10038FB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2 = (char *)&STACK[0x1930] + a2;
  char v3 = *(unsigned char *)a1;
  *(void *)(v2 + 17) = *(void *)(a1 + 1);
  *(_DWORD *)(v2 + 25) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v2 + 29) = *(_WORD *)(a1 + 13);
  v2[31] = *(unsigned char *)(a1 + 15);
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)int v2 = *(void *)a1;
  *((void *)v2 + 1) = v4;
  v2[16] = v3;
  return sub_1003648DC();
}

uint64_t sub_10038FBA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v14 = a3 + v13 + v12 - a5 + ((a7 + 938) ^ (v10 + 1429));
  *(void *)(v8 - 7 + v14) = *(void *)(v9 - 7 + v14);
  return (*(uint64_t (**)(void))(v7 + 8 * ((335 * (a5 - (v11 & 0xFFFFFFF8) == -8)) ^ a7)))();
}

uint64_t sub_10038FC00()
{
  *(_DWORD *)(v5 - 112) = v3 + (((~(v5 - 128) & 0x5B413A9E) - (~(v5 - 128) | 0x5B413A9F)) ^ 0xE1D542FD) * v2 + 855;
  *(void *)(v5 - 104) = v1;
  *(void *)(v5 - 120) = v4;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v3 ^ 0x81B)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * (((*(_DWORD *)(v5 - 128) - 1535751604 < ((v3 - 42) ^ 0xB70C645B))
                                              * ((557 * (v3 ^ 0xAE)) ^ 0xCDF)) ^ v3)))(v6);
}

void sub_10038FCB8()
{
}

void sub_10038FCC0(int a1, int a2, int a3, int a4)
{
  *(_DWORD *)(v6 - 168) = a1;
  *(void *)(v6 - 128) = v4 - 7;
  *(void *)(v6 - 136) = v5 - 7;
  *(_DWORD *)(v6 - 176) = a1 & 0xFFFFFFF8;
  *(_DWORD *)(v6 - 144) = -(a1 & 0xFFFFFFF8);
  int v7 = a4 + a3 + a2;
  *(_DWORD *)(v6 - 152) = v7 + 905;
  *(_DWORD *)(v6 - 160) = v7 + 906;
  JUMPOUT(0x10038FD30);
}

void sub_10038FE40()
{
}

uint64_t sub_10038FE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))(v67 + 13296))(a1, a2, a3, a4, a5, a6, 4260156420, 1384130156, &a67, a10);
}

uint64_t sub_10038FF84()
{
  *(void *)(v0 - 0x3B6240245EEB6D72) = (*v2 - 1225318619)
                                         + *(void *)(v3 - 0x38C18B7A1BA3132CLL)
                                         + 8;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1919 * (*v5 == v4)) ^ v1)))();
}

void sub_10038FFE8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 24) - 1225351577 * ((2 * (a1 & 0x2B9C6F1D) - a1 + 1415811298) ^ 0x77F948F4);
  if (*(_DWORD *)(*(void *)(a1 + 8) - 0x1F010F7499D3F7A2) - 1902603612 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x1F010F7499D3F7A2) - 1902603612;
  }
  else {
    unsigned int v3 = 1902603612 - *(_DWORD *)(*(void *)(a1 + 8) - 0x1F010F7499D3F7A2);
  }
  uint64_t v1 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v1 - 0x1F010F7499D3F7A2) - 1902603612 >= 0) {
    unsigned int v4 = *(_DWORD *)(v1 - 0x1F010F7499D3F7A2) - 1902603612;
  }
  else {
    unsigned int v4 = 1902603612 - *(_DWORD *)(v1 - 0x1F010F7499D3F7A2);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  v7[1] = (460628867 * ((v7 & 0x5D0BE78 | ~(v7 | 0x5D0BE78)) ^ 0xB6B9C3FA)) ^ (v2 + 1122);
  uint64_t v5 = (char *)*(&off_1022AC750 + v2 - 325) - 4;
  (*(void (**)(_DWORD *))&v5[8 * v2 + 14104])(v7);
  if (v3 >= v4) {
    unsigned int v6 = v4;
  }
  else {
    unsigned int v6 = v3;
  }
  __asm { BRAA            X12, X17 }
}

void sub_1003901A4()
{
  _DWORD *v1 = v0;
}

uint64_t sub_1003901C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *(void *)(*(void *)(a16 + 96) + 504) = v18 + 1;
  *(_DWORD *)(*(void *)(a16 + 96) + 496) = a18 - 1;
  int v22 = 1178560073 * ((v21 - 1120536645 - 2 * ((v21 - 152) & 0xBD35F853)) ^ 0x7A18031);
  *(void *)(v21 - 144) = v21 + 0x2E910FB81C0D96E3;
  *(_DWORD *)(v21 - 136) = v19 - v22 - 1882358011;
  *(_DWORD *)(v21 - 152) = 221124111 - v22;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v19 ^ 0xAEC)))(v21 - 152);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * ((1523
                                              * (a18
                                               - 850486446
                                               + ((*(_DWORD *)(v21 - 184) << (v19 - 34)) & 0x4E ^ 0x48)
                                               + (*(_DWORD *)(v21 - 184) & (v19 ^ 0x21C) ^ 0xC7EBDBDB) < 0xFFFFFFC0)) ^ v19)))(v23);
}

uint64_t sub_1003903AC(uint64_t a1, int a2, uint64_t a3, int a4, int a5, int a6)
{
  uint64_t v14 = (unsigned int *)(v12 + 4 * v8);
  uint64_t v15 = v8 + ((v6 + v9) & v10) - 758;
  int v16 = *(_DWORD *)(v12 + 4 * v15);
  unsigned int v17 = a5 ^ ((v16 & 0x7FFFFFFE | v7 & 0x80000000) >> 1);
  *uint64_t v14 = v14[397] ^ a6 ^ *(_DWORD *)(v13 + 4 * ((v16 & 1) == 0)) ^ (v17 + a4 - (a2 & (2 * v17)));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v15 != 227) | (2 * (v15 != 227))) ^ v6)))();
}

uint64_t sub_100390420(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((((((a2 ^ 0x566) + 834) ^ (v2 == v3)) & 1) == 0) << 6) & 0x7F | (((((a2 ^ 0x66) + 66) ^ ~(v2 == v3)) & 1) << 7)) ^ a2)))();
}

uint64_t sub_10039045C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * (((v14 ^ 0x587) * (a9 == 0)) ^ v14)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, v15, a12, a13, a14, v16 + 0x71B7A7EBB4A1196, v16 + 0x71B7A7EBB4A1086);
}

uint64_t sub_100390568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((71 * (a8 + 1 != v9 + 44)) ^ v8)))();
}

uint64_t sub_100390624@<X0>(int a1@<W8>)
{
  int v4 = a1 - 651;
  uint64_t v5 = (*(uint64_t (**)(void))(v2 + 8 * (a1 + 1448)))(*v3);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((*v1 == (v4 ^ 0xA1) - 194) * (v4 + 62)) ^ v4)))(v5);
}

void sub_10039066C()
{
}

uint64_t sub_1003906EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  int v15 = (a12 ^ v13) - ((2 * (a12 ^ v13)) & 0x6E10ACA4) - 1224190382;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((61
                                * (((((v12 - 1253195277) & 0x4AB23F3F) - 685840787) & (2 * v15) ^ 0x4610A820)
                                 + (v15 ^ 0xDC8723EF)
                                 - 1099699624 != 704864277)) ^ v12)))();
}

uint64_t sub_100390790@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xB76u));
  return v3(v1);
}

void sub_1003907C4()
{
}

uint64_t sub_1003907CC@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t v7 = a2 + v5;
  *(unsigned char *)(a1 + v7) = v3;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v7 + 1) < 0x38) * v4) ^ (v2 + 440))))();
}

uint64_t sub_100390804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  int v52 = v47 ^ 0x3DE;
  uint64_t v53 = (void *)STACK[0x400];
  unint64_t v54 = STACK[0x400] + 264;
  v53[31] = 0x71676D5C6F747C6BLL;
  v53[32] = v54;
  uint64_t v55 = (char *)v53 + 0x1F010F7499D3F89ELL;
  v53[65] = 0x71676D5C6F747C6BLL;
  v53[66] = v53 + 67;
  STACK[0x3D0] = (unint64_t)v53 + 0x1F010F7499D3F9AELL;
  v53[99] = 0x71676D5C6F747C6BLL;
  v53[100] = v53 + 101;
  STACK[0x3D8] = (unint64_t)v53 + 0x1F010F7499D3FABELL;
  v53[133] = 0x71676D5C6F747C6BLL;
  v53[134] = v53 + 135;
  STACK[0x3E0] = (unint64_t)v53 + 0x1F010F7499D3FBCELL;
  v53[167] = 0x71676D5C6F747C6BLL;
  v53[168] = v53 + 169;
  STACK[0x430] = (unint64_t)v53 + 0x1F010F7499D3FCDELL;
  LODWORD(v53) = 1178560073 * ((2 * ((v51 - 200) & 0x2A0F26A8) - (v51 - 200) - 705636015) ^ 0x6F64A133);
  *(_DWORD *)(v51 - 196) = a47 + 1655 - v53;
  *(_DWORD *)(v51 - 192) = v53 + (v48 ^ 0x53A016E7) - 277610889 + ((2 * v48) & 0xEF7BFFBA ^ 0x483BD230);
  unint64_t v56 = STACK[0x620] + 4;
  *(void *)(v51 - 184) = v56;
  *(void *)(v51 - 176) = v55;
  uint64_t v57 = 8 * (a47 ^ 0x838);
  (*(void (**)(uint64_t))(v50 + v57))(v51 - 200);
  uint64_t v58 = v56 + v49;
  int v59 = 1178560073 * ((v51 - 1244544074 - 2 * ((v51 - 200) & 0xB5D1C47E)) ^ 0xF45BC1C);
  unint64_t v60 = STACK[0x3D0];
  *(void *)(v51 - 184) = v58;
  *(void *)(v51 - 176) = v60;
  *(_DWORD *)(v51 - 196) = a47 + 1655 - v59;
  *(_DWORD *)(v51 - 192) = v59 + (v48 ^ 0x5BE217C7) - 416153769 + ((v52 + 1211878779) ^ (2 * v48) & 0xFFFFFDFA);
  (*(void (**)(uint64_t))(v50 + v57))(v51 - 200);
  uint64_t v61 = v58 + v49;
  int v62 = 1178560073 * ((v51 - 200) ^ 0xBA947862);
  unint64_t v63 = STACK[0x3D8];
  *(void *)(v51 - 184) = v58 + v49;
  *(void *)(v51 - 176) = v63;
  *(_DWORD *)(v51 - 196) = a47 + 1655 - v62;
  *(_DWORD *)(v51 - 192) = v62 + (v48 ^ 0xDBA6164F) + 1735786207 + ((2 * v48) & 0xFF77FEEA ^ 0x4833D260);
  uint64_t v64 = 8 * (a47 + 2024);
  (*(void (**)(uint64_t))(v50 + v64))(v51 - 200);
  uint64_t v65 = v61 + v49;
  int v66 = 1178560073 * ((((v51 - 200) | 0xAF7A9D5D) - ((v51 - 200) & 0xAF7A9D5D)) ^ 0x15EEE53F);
  unint64_t v67 = STACK[0x3E0];
  *(void *)(v51 - 184) = v65;
  *(void *)(v51 - 176) = v67;
  *(_DWORD *)(v51 - 196) = a47 + 1655 - v66;
  *(_DWORD *)(v51 - 192) = v66 + (v48 ^ 0x5B2A16CC) - 403046818 + ((2 * v48) & 0xFE6FFFEC ^ 0x482BD264);
  (*(void (**)(uint64_t))(v50 + v57))(v51 - 200);
  int v68 = 1178560073 * (((v51 - 200) & 0xCF040D76 | ~((v51 - 200) | 0xCF040D76)) ^ 0x8A6F8AEB);
  *(_DWORD *)(v51 - 196) = a47 + 1655 - v68;
  *(_DWORD *)(v51 - 192) = v68 + (v48 ^ 0xD3AA17CD) + 1870266205 + ((2 * v48) & 0xEF6FFDEE ^ 0x482BD064);
  *(void *)(v51 - 184) = v65 + v49;
  *(void *)(v51 - 176) = STACK[0x430];
  uint64_t v69 = (*(uint64_t (**)(uint64_t))(v50 + v64))(v51 - 200);
  return sub_100390BE0(v69);
}

uint64_t sub_100390BE0()
{
  unint64_t v4 = STACK[0x620];
  int v5 = v2 - 1791330438 + v0 + 888;
  STACK[0x5E8] = (v5 - 1645);
  return (*(uint64_t (**)(unint64_t))(v3 + 8 * (((v5 != 1645) * v1) ^ (v0 + 888))))(v4);
}

uint64_t sub_100390C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  return (*(uint64_t (**)(void))(v28
                              + 8
                              * ((139
                                * ((unint64_t)(&a25 + a14 + v26 + (v27 ^ 0x673u) + v25 - 1144) < (unint64_t)(a6 + v27 - 516) - 2841387828u)) | v27)))();
}

uint64_t sub_100390C78(_DWORD *a1)
{
  unsigned int v1 = 1178560073 * ((2 * (a1 & 0x7B1A53C3) - a1 - 2065322948) ^ 0x3E71D45E);
  unsigned int v2 = a1[1] + v1;
  return (*(uint64_t (**)(void))((char *)*(&off_1022AC750 + (int)(v2 - 1011))
                              + 8
                              * (int)(((((*a1 - v1) ^ 0x241DE93A) - 1 > 0x62)
                                     * (((v2 - 1155) | 0x341) ^ (v2 + 824387956) & 0xCEDCD7BE ^ 0x6E1)) ^ v2)
                              - 4))();
}

uint64_t sub_100390D2C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + v5 + a1) = v3;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 & ~(v4 ^ ((unint64_t)(v5 + 1 + a1) < 0x38))) * v7) ^ v2)))();
}

uint64_t sub_100390D60(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a2 + 945) ^ (a2 + 368) ^ 0x22E) * (v2 == a1)) ^ a2)))();
}

uint64_t sub_100390D90()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1724
                                * (((v3 + 568163971) & 0xDE2285E7 ^ (v0 - 1751) ^ (v3 - 791470520) & 0x2F2CE349 ^ (*(unsigned __int8 *)(v2 + 5) - 13))
                                 + (v1 & (2 * (*(unsigned __int8 *)(v2 + 5) - 13))) == v0)) ^ v3)))();
}

uint64_t sub_100390E04(int a1)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((*(unsigned char *)(v2 + (v3 - 1791330439)) == 24) * a1) ^ v1)))();
}

uint64_t sub_100390E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15)
{
  a15 = 108757529 * ((-1250741474 - (&a14 | 0xB573331E) + (&a14 | 0x4A8CCCE1)) ^ 0xAA10AECA)
      - 504207030;
  uint64_t v17 = (*(uint64_t (**)(int *))(v16 + 17680))(&a14);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((778 * (a14 == v15)) | 0x4F4u)))(v17);
}

uint64_t sub_100390ED0()
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * ((7
                                             * ((v1 & 0x18) == (((v3 | 0x458) - 1074) ^ 0xFFFFFDBA) + (v3 | 0x458) - 500)) | v3 | 0x458)))((v0 - v2));
}

uint64_t sub_100390F68()
{
  unsigned int v3 = LODWORD(STACK[0x54C]) - 1664605063;
  int v4 = ((v1 + 226226241) < 0x784178C7) ^ (v3 < ((v0 + 1393101088) & 0xACF6F7EE ^ 0x78417E21));
  BOOL v5 = v3 < v1 + 226226241;
  if (v4) {
    BOOL v5 = (v1 + 226226241) < 0x784178C7;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((61 * v5) ^ v0)))();
}

void sub_100390FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v26 = 1224239923 * ((2 * ((v25 - 144) & 0x4145D028) - (v25 - 144) - 1095094320) ^ 0x4C09D207);
  *(_DWORD *)(v25 - 144) = v26 ^ 0x34B9F40D;
  *(void *)(v25 - 136) = a20;
  *(_DWORD *)(v25 - 128) = v26 + v20 - 1576;
  (*(void (**)(uint64_t))(v21 + 8 * (v20 ^ 0xF60)))(v25 - 144);
  *(void *)(v25 - 144) = v24;
  *(void *)(v25 - 136) = a20;
  *(void *)(v25 - 104) = v23;
  *(void *)(v25 - 128) = v23;
  *(void *)(v25 - 120) = v22;
  *(_DWORD *)(v25 - 112) = v20
                         + 1224239923 * (((v25 - 144) & 0x73F71CDE | ~((v25 - 144) | 0x73F71CDE)) ^ 0x7EBB1EF6)
                         - 1379;
  (*(void (**)(uint64_t))(v21 + 8 * (v20 + 279)))(v25 - 144);
  JUMPOUT(0x10037B864);
}

uint64_t sub_1003910E0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a2 + a3 + a1) = v4;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((((((v3 ^ v5) - 514) ^ (unint64_t)(a1 - 15)) + a3 < 0x38) * v5) ^ v3 ^ v5)))();
}

uint64_t sub_10039111C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  BOOL v8 = a6 == v6 + ((a1 - 587) ^ 0xB1D) - 2141;
  return (*(uint64_t (**)(void))(v7 + 8 * (((2 * v8) | (4 * v8)) ^ a1)))();
}

uint64_t sub_10039115C@<X0>(int a1@<W5>, int a2@<W7>, int a3@<W8>)
{
  *(unsigned char *)(v4 + (a1 + v6)) = *(unsigned char *)(v5 + (a1 + v6));
  return (*(uint64_t (**)(void))(v3 + 8 * ((41 * (a1 + 169 * (a2 ^ 0x14D) - 1015 == a3)) ^ a2)))();
}

uint64_t sub_1003911A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12 + 8 * ((53 * (a11 == v11 + v13 - 1022 - 352)) ^ v13)))();
}

void sub_1003911EC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_100391280(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(result + 28) = a5;
  return result;
}

uint64_t sub_10039128C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52)
{
  if (a31 == 2) {
    return (*(uint64_t (**)(uint64_t))(v53
  }
                                              + 8
                                              * (((a52 == 606950823) * ((5 * (v52 ^ 0xEB)) ^ 0x438)) ^ (v52 + 997))))(a13);
  if (a31 != 1) {
    JUMPOUT(0x1003913DCLL);
  }
  return (*(uint64_t (**)(uint64_t))(v53
                                            + 8
                                            * ((50 * ((((135 * (v52 ^ 0x37)) ^ (a52 == 606950823)) & 1) == 0)) ^ (v52 + 1050))))(a13);
}

uint64_t sub_100391410()
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (int)((v0 & 0x91A50BF5) + 1523)))(v1);
  LODWORD(STACK[0x4EC]) = -605900050;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((STACK[0x578] != 0)
                                                   * (11 * (v0 & 0x91A50BF5 ^ 0x252)
                                                    + (((v0 & 0x91A50BF5) + 409) ^ 0xFFFFFDA7))) ^ ((v0 & 0x91A50BF5)
                                                                                                  + 1070))))(v3);
}

uint64_t sub_10039149C()
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + 18184);
  return v2(v0);
}

uint64_t sub_1003914C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8)
{
  *(void *)(a8 + (a5 + v9)) = *(void *)(a4 + (a5 + v9));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v10 == 0) * a3) ^ a7)))();
}

uint64_t sub_1003914F8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v0 - 3) ^ (*(void *)(v1 + 24) == 0x16DAB37677B31EB5)) & 1)
                                     * ((v0 + 1455631523) & 0xA93CCFFD ^ 0xF7)) | v0)))();
}

uint64_t sub_100391554()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((2 * (v2 ^ 0x375) + 1253) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_10039158C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8 * ((22 * (v8 + a8 + a7 + 289 + ((a7 - 1309) | 0x740u) - 3736 > 0xFFFFFFEF)) ^ a7)))();
}

uint64_t sub_1003915D0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((480
                                * (((a1 - 1791330438) ^ 0xDDFDF7F35EC4F1BBLL)
                                 + ((2 * (a1 - 1791330438)) & 0xBD89E376)
                                 + 0x2202080D01CBBC11 != 1620094412)) ^ 0xE1u)))();
}

uint64_t sub_100391674(int a1, int a2, int a3, int a4)
{
  uint64_t v9 = (a2 + a1 + a3);
  unint64_t v10 = v9 + v7 + 1;
  uint64_t v11 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  uint64_t v12 = v11 - v9;
  unint64_t v13 = v5 + v12;
  unint64_t v14 = v11 + ((a4 + 964756907) & 0xC67EF67B) + (unint64_t)(9 * (a4 ^ 0x887u)) - 2405;
  unint64_t v15 = v5 + v14;
  unint64_t v16 = v4 + v12;
  unint64_t v17 = v4 + v14;
  unint64_t v18 = v6 + v12;
  unint64_t v19 = v6 + v14;
  BOOL v21 = v13 < v10 && v15 > v7;
  if (v16 < v10 && v17 > v7) {
    BOOL v21 = 1;
  }
  int v24 = v18 < v10 && v19 > v7 || v21;
  return (*(uint64_t (**)(void))(v8 + 8 * ((90 * v24) ^ a4)))();
}

void sub_100391714(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 1759421093 * ((a1 - 1364022623 - 2 * (a1 & 0xAEB2AAA1)) ^ 0x1DCF1AF5);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1003917CC(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  STACK[0x2D8] = v7;
  *(_DWORD *)(a4 + 1424) = 1130566729;
  *(_DWORD *)(a4 + 1428) = 757585697;
  *(void *)(a4 + 1432) = 0x1818181818181818;
  *(void *)(a4 + 1440) = 0x1818181818181818;
  *(_DWORD *)(a4 + 1448) = 404232216;
  *(__n128 *)(a4 + 1452) = a1;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v4 ^ 0x25A ^ v5) == 64) * v6) ^ v4)))();
}

uint64_t sub_100391834@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,char a22)
{
  BOOL v29 = v22 < v23;
  *(&a22 + (a5 + a1)) = *(unsigned char *)(v28 + (v24 + a3))
                                    - (((v26 - 51) & 0xAF ^ 0x1E) & (2 * *(unsigned char *)(v28 + (v24 + a3))))
                                    + 24;
  unsigned int v30 = v24 + 1 + a2;
  int v31 = v29 ^ (v30 < a4);
  BOOL v32 = v30 < v22;
  if (!v31) {
    BOOL v29 = v32;
  }
  return (*(uint64_t (**)(void))(v27 + 8 * ((!v29 * v25) ^ v26)))();
}

uint64_t sub_1003918B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  a14 = 108757529 * ((&a13 & 0x2A42C21B | ~(&a13 | 0x2A42C21B)) ^ 0x35215FCF) - 504207030;
  uint64_t v18 = (*(uint64_t (**)(int *))(v15 + 17680))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (int)(((a13 == v14) * (-v17 ^ 0xC35E9AE4)) ^ v16)))(v18);
}

uint64_t sub_100391944(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v12 = v10 + 486;
  int v13 = v10 + 486 - a7 - 1242;
  int v14 = (v10 + 486) ^ 0x7FF;
  int v15 = v8 + v7;
  int v16 = v15 + v9;
  if ((v15 + v9) <= 0x40) {
    int v16 = a1;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((1002 * ((v13 ^ v14 ^ 0x87829ABE) - v15 >= a2 + v16)) ^ v12)))();
}

void sub_10039199C(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1003919E8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,unsigned int a50,unsigned int a51,unsigned int a52,int a53,int a54,unsigned __int8 a55)
{
  int v56 = a55 ^ 0xCB;
  if (v56 == 1)
  {
    int v62 = 29 * (v55 ^ 0x34);
    BYTE4(a47) = ((8 * a49) ^ 0xE0) + ((29 * (v55 ^ 0x34)) ^ 0x26) + (a1 ^ (16 * a49) | 0xCF);
    BYTE5(a47) = ((a49 >> 5) ^ 0x4D)
               - 2 * (((a49 >> 5) ^ 0x4D) & 0x1A ^ (a49 >> 5) & 2)
               + 24;
    BYTE6(a47) = ((a49 >> 13) ^ 0x8D)
               - 2 * (((a49 >> 13) ^ 0x8D) & 0x1A ^ (a49 >> 13) & 2)
               + 24;
    HIBYTE(a47) = ((a49 >> 21) ^ 0xB4) - ((2 * ((a49 >> 21) ^ 0xB4)) & 0x30) + 24;
    HIDWORD(v63) = HIDWORD(a48) ^ 0x11;
    LODWORD(v63) = a49;
    LOBYTE(a48) = (v63 >> 29) - ((2 * (v63 >> 29)) & 0x30) + 24;
    BYTE1(a48) = ((HIDWORD(a48) >> 5) ^ 0xC9) - 2 * (((HIDWORD(a48) >> 5) ^ 0xC9) & 0x1A ^ (HIDWORD(a48) >> 5) & 2) + 24;
    BYTE2(a48) = (HIDWORD(a48) >> 13) - ((HIDWORD(a48) >> 12) & 0x30) + 24;
    unsigned int v60 = (HIDWORD(a48) >> 21) ^ 0xFFFFFFE3;
    int v61 = 2 * (HIDWORD(a48) >> 21);
    uint64_t v58 = a28;
    goto LABEL_5;
  }
  unsigned int v57 = v55;
  uint64_t v58 = a28;
  if (v56 == 2)
  {
    BYTE4(a47) = ((HIDWORD(a48) >> 21) ^ 0xE3) - ((HIDWORD(a48) >> 20) & 0x30) + 24;
    BYTE5(a47) = (HIDWORD(a48) >> SBYTE4(a9)) - ((2 * (HIDWORD(a48) >> SBYTE4(a9))) & 0x30) + 24;
    BYTE6(a47) = ((HIDWORD(a48) >> 5) ^ 0xC9) + (a1 ^ (2 * ((HIDWORD(a48) >> 5) ^ 0xC9)) | 0xCF) + 25;
    HIDWORD(v59) = HIDWORD(a48) ^ 0x11;
    LODWORD(v59) = a49;
    HIBYTE(a47) = (v59 >> 29) - ((2 * (v59 >> 29)) & 0x30) + 24;
    LOBYTE(a48) = ((a49 >> 21) ^ 0xB4) - ((2 * ((a49 >> 21) ^ 0xB4)) & 0x30) + 24;
    BYTE1(a48) = ((a49 >> 13) ^ 0x8D) - ((2 * ((a49 >> 13) ^ 0x8D)) & 0x30) + 24;
    BYTE2(a48) = ((a49 >> 5) ^ 0x4D) - ((2 * ((a49 >> 5) ^ 0x4D)) & 0x30) + 24;
    LOBYTE(v60) = (8 * a49) ^ 0xE0;
    LOBYTE(v61) = 16 * a49;
    int v62 = a10;
LABEL_5:
    unsigned int v57 = (v62 + 1968486848) & 0x8AAB453F;
    BYTE3(a48) = v60 - ((v57 - 15) & v61) + 24;
  }
  return sub_100359930(v58, a3, a4, a5, a6, a7, a8, v57 + 6, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55);
}

uint64_t sub_100391C34()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1947
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((2 * v4) ^ 0x332 ^ v2 ^ (*(unsigned __int8 *)(v3 + 7) - 1)) == v0)) ^ v4)))();
}

void sub_100391C74()
{
}

uint64_t sub_100391CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  unsigned int v51 = (a7 - 628302715) & 0x25731FEC;
  unsigned int v52 = ((v51 - 269585394) & HIDWORD(a23)) + (v49 ^ 0xF7F73AF9);
  BOOL v54 = (((v51 + 1024) ^ 0x5EB) & (v52 + 7)) != 0 || v52 == -134792455;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8 * ((29 * v54) ^ v51)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

void sub_100391D54()
{
}

uint64_t sub_100391D5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((475 * (((v6 == a3) ^ (a6 + 20)) & 1)) ^ a6)))();
}

void sub_100391DA8()
{
}

uint64_t sub_100391DB0()
{
  return sub_100391DB8();
}

uint64_t sub_100391DB8@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W8>, int8x16_t a5@<Q0>, int8x16_t a6@<Q4>)
{
  int8x16_t v11 = *(int8x16_t *)(v10 + (v6 + a2 + v8));
  *(int8x16_t *)(v7 + v8) = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), a6)), a5);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 == 48) * a3) ^ (a1 + a4 - 214))))();
}

uint64_t sub_100391E00()
{
  *(void *)(v5 - 128) = v2;
  *(void *)(v5 - 112) = v0;
  *(_DWORD *)(v5 - 120) = v4 + ((~((v5 - 136) | 0x5B2D8C2) + ((v5 - 136) & 0x5B2D8C2)) ^ 0x40D95F5F) * v3 + 113;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 + 1317)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((57 * (*(_DWORD *)(v5 - 136) - 1535751604 < ((v4 + 466) ^ 0xE247F6D7))) ^ v4)))(v6);
}

uint64_t sub_100391EA8()
{
  LODWORD(STACK[0x478]) = v1;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((41 * (((v0 - 524) ^ 0x953A758C) + v2 < ((v0 - 2114038026) & 0x7E01A7BD ^ 0x3B1u))) ^ v0)))();
}

unsigned char *sub_100391F0C(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100392054(uint64_t result)
{
  *(_DWORD *)uint64_t result = 2147450879;
  *(_WORD *)(result + 4) = 0x7FFF;
  *(_DWORD *)(result + 6) = 2147450879;
  *(_WORD *)(result + 10) = 0x7FFF;
  *(_DWORD *)(result + 12) = 2147450879;
  *(_WORD *)(result + 16) = 0x7FFF;
  *(_DWORD *)(result + 18) = 2147450879;
  *(_WORD *)(result + 22) = 0x7FFF;
  *(_WORD *)(result + 28) = 0x7FFF;
  *(_DWORD *)(result + 24) = 2147450879;
  *(_WORD *)(result + 34) = 0x7FFF;
  *(_DWORD *)(result + 30) = 2147450879;
  *(_WORD *)(result + 40) = 0x7FFF;
  *(_DWORD *)(result + 36) = 2147450879;
  *(_WORD *)(result + 46) = 0x7FFF;
  *(_DWORD *)(result + 42) = 2147450879;
  *(_WORD *)(result + 52) = 0x7FFF;
  *(_DWORD *)(result + 48) = 2147450879;
  *(_WORD *)(result + 58) = 0x7FFF;
  *(_DWORD *)(result + 54) = 2147450879;
  *(_WORD *)(result + 64) = 0x7FFF;
  *(_DWORD *)(result + 60) = 2147450879;
  *(_WORD *)(result + 70) = 0x7FFF;
  *(_DWORD *)(result + 66) = 2147450879;
  *(_WORD *)(result + 76) = 0x7FFF;
  *(_DWORD *)(result + 72) = 2147450879;
  *(_WORD *)(result + 82) = 0x7FFF;
  *(_DWORD *)(result + 78) = 2147450879;
  *(_WORD *)(result + 88) = 0x7FFF;
  *(_DWORD *)(result + 84) = 2147450879;
  *(_WORD *)(result + 94) = 0x7FFF;
  *(_DWORD *)(result + 90) = 2147450879;
  *(_WORD *)(result + 100) = 0x7FFF;
  *(_DWORD *)(result + 96) = 2147450879;
  *(_WORD *)(result + 106) = 0x7FFF;
  *(_DWORD *)(result + 102) = 2147450879;
  *(_WORD *)(result + 112) = 0x7FFF;
  *(_DWORD *)(result + 108) = 2147450879;
  *(_WORD *)(result + 118) = 0x7FFF;
  *(_DWORD *)(result + 114) = 2147450879;
  *(_WORD *)(result + 124) = 0x7FFF;
  *(_DWORD *)(result + 120) = 2147450879;
  *(_WORD *)(result + 130) = 0x7FFF;
  *(_DWORD *)(result + 126) = 2147450879;
  *(_WORD *)(result + 136) = 0x7FFF;
  *(_DWORD *)(result + 132) = 2147450879;
  *(_WORD *)(result + 142) = 0x7FFF;
  *(_DWORD *)(result + 138) = 2147450879;
  *(_WORD *)(result + 148) = 0x7FFF;
  *(_DWORD *)(result + 144) = 2147450879;
  *(_WORD *)(result + 154) = 0x7FFF;
  *(_DWORD *)(result + 150) = 2147450879;
  *(_WORD *)(result + 160) = 0x7FFF;
  *(_DWORD *)(result + 156) = 2147450879;
  *(_WORD *)(result + 166) = 0x7FFF;
  *(_DWORD *)(result + 162) = 2147450879;
  *(_WORD *)(result + 172) = 0x7FFF;
  *(_DWORD *)(result + 168) = 2147450879;
  *(_WORD *)(result + 178) = 0x7FFF;
  *(_DWORD *)(result + 174) = 2147450879;
  *(_WORD *)(result + 184) = 0x7FFF;
  *(_DWORD *)(result + 180) = 2147450879;
  *(_WORD *)(result + 190) = 0x7FFF;
  *(_DWORD *)(result + 186) = 2147450879;
  return result;
}

uint64_t sub_100392168(__int16 a1, __int16 a2, __int16 a3, uint64_t a4, _WORD *a5)
{
  v6[0] = a1;
  v6[1] = a2;
  _DWORD v6[2] = a3;
  *a5 = 1;
  sub_1003944D0((uint64_t)v6, 32, 1, a4);
  return 1;
}

uint64_t sub_1003921AC(int a1, int a2)
{
  uint64_t v2 = 2 * a1;
  __int16 v3 = v2 >= a2;
  if (v2 >= a2) {
    uint64_t v4 = a2;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = 2 * (v2 - v4);
  __int16 v6 = v5 >= a2;
  if (v5 < a2) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = a2;
  }
  uint64_t v8 = 2 * (v5 - v7);
  __int16 v9 = v8 >= a2;
  if (v8 >= a2) {
    uint64_t v10 = a2;
  }
  else {
    uint64_t v10 = 0;
  }
  uint64_t v11 = 2 * (v8 - v10);
  __int16 v12 = (4 * v6) | (8 * v3) | (2 * v9) | (v11 >= a2);
  if (v11 < a2) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = a2;
  }
  uint64_t v14 = 2 * (v11 - v13);
  __int16 v15 = v14 >= a2;
  if (v14 >= a2) {
    uint64_t v16 = a2;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = 2 * (v14 - v16);
  __int16 v18 = (2 * v15) | (4 * v12) | (v17 >= a2);
  if (v17 < a2) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = a2;
  }
  uint64_t v20 = 2 * (v17 - v19);
  __int16 v21 = v20 >= a2;
  if (v20 >= a2) {
    uint64_t v22 = a2;
  }
  else {
    uint64_t v22 = 0;
  }
  uint64_t v23 = 2 * (v20 - v22);
  __int16 v24 = (2 * v21) | (4 * v18) | (v23 >= a2);
  if (v23 < a2) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = a2;
  }
  uint64_t v26 = 2 * (v23 - v25);
  __int16 v27 = v26 >= a2;
  if (v26 >= a2) {
    uint64_t v28 = a2;
  }
  else {
    uint64_t v28 = 0;
  }
  uint64_t v29 = 2 * (v26 - v28);
  __int16 v30 = (2 * v27) | (4 * v24) | (v29 >= a2);
  if (v29 < a2) {
    uint64_t v31 = 0;
  }
  else {
    uint64_t v31 = a2;
  }
  uint64_t v32 = 2 * (v29 - v31);
  __int16 v33 = v32 >= a2;
  if (v32 >= a2) {
    uint64_t v34 = a2;
  }
  else {
    uint64_t v34 = 0;
  }
  uint64_t v35 = 2 * (v32 - v34);
  __int16 v36 = (2 * v33) | (4 * v30) | (v35 >= a2);
  if (v35 < a2) {
    uint64_t v37 = 0;
  }
  else {
    uint64_t v37 = a2;
  }
  uint64_t v38 = 2 * (v35 - v37);
  __int16 v39 = v38 >= a2;
  if (v38 >= a2) {
    uint64_t v40 = a2;
  }
  else {
    uint64_t v40 = 0;
  }
  uint64_t v41 = 2 * (v38 - v40);
  __int16 v42 = (2 * v39) | (4 * v36) | (v41 >= a2);
  if (v41 < a2) {
    uint64_t v43 = 0;
  }
  else {
    uint64_t v43 = a2;
  }
  return (__int16)((a2 <= 2 * (v41 - v43)) | (unsigned __int16)(2 * v42));
}

uint64_t sub_100392328(unint64_t a1)
{
  if ((uint64_t)a1 < 1)
  {
    if (a1) {
      return 0;
    }
    else {
      return 31;
    }
  }
  else
  {
    unint64_t v1 = a1 >> 30;
    if (a1 >> 30)
    {
      return 0;
    }
    else
    {
      do
      {
        unint64_t v2 = a1 >> 29;
        a1 *= 2;
        LOWORD(v1) = v1 + 1;
      }
      while (!v2);
      return (__int16)v1;
    }
  }
}

uint64_t sub_10039236C(int a1)
{
  if (a1 >= 0) {
    LOWORD(v1) = a1;
  }
  else {
    int v1 = -a1;
  }
  if (a1 == -32768) {
    LOWORD(v1) = 0x7FFF;
  }
  return (__int16)v1;
}

uint64_t sub_100392388(uint64_t a1, int a2, __int16 *a3, _WORD *a4)
{
  if (a2 > 32) {
    return 0;
  }
  int v6 = sub_1003921AC(1, a2);
  if (a2 < 1)
  {
    unint64_t v13 = 0;
    unint64_t v14 = 0;
    unint64_t v15 = 0;
    unint64_t v16 = 0;
    unint64_t v17 = 0;
    unint64_t v18 = 0;
    unint64_t v19 = 0;
    unint64_t v20 = 0;
    unint64_t v21 = 0;
    goto LABEL_28;
  }
  int v7 = v6;
  uint64_t v8 = (unsigned __int16)a2;
  if (a2 == 1)
  {
    uint64_t v9 = 0;
    unint64_t v10 = 0;
    unint64_t v11 = 0;
    unint64_t v12 = 0;
LABEL_9:
    uint64_t v31 = (__int16 *)(a1 + 6 * v9 + 4);
    uint64_t v32 = (unsigned __int16)a2 - v9;
    do
    {
      v12 += *(v31 - 2) * (uint64_t)v7;
      v11 += *(v31 - 1) * (uint64_t)v7;
      v10 += *v31 * (uint64_t)v7;
      v31 += 3;
      --v32;
    }
    while (v32);
    goto LABEL_11;
  }
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  uint64_t v9 = (unsigned __int16)a2 & 0xFFFE;
  uint64_t v28 = (__int16 *)(a1 + 6);
  uint64_t v29 = v9;
  do
  {
    v26 += *(v28 - 3) * (uint64_t)v7;
    v27 += *v28 * (uint64_t)v7;
    v24 += *(v28 - 2) * (uint64_t)v7;
    v25 += v28[1] * (uint64_t)v7;
    int v30 = v28[2];
    v22 += *(v28 - 1) * (uint64_t)v7;
    v28 += 6;
    v23 += v30 * (uint64_t)v7;
    v29 -= 2;
  }
  while (v29);
  unint64_t v12 = v27 + v26;
  unint64_t v11 = v25 + v24;
  unint64_t v10 = v23 + v22;
  if (v9 != (unsigned __int16)a2) {
    goto LABEL_9;
  }
LABEL_11:
  if (a2 < 0x10)
  {
    uint64_t v33 = 0;
LABEL_16:
    uint64_t v38 = &v80[v33];
    __int16 v39 = (__int16 *)(a1 + 6 * v33 + 4);
    uint64_t v40 = (unsigned __int16)a2 - v33;
    do
    {
      *v38++ = (*(v39 - 2) * *(v39 - 2) + *(v39 - 1) * *(v39 - 1) + *v39 * *v39) >> 11;
      v39 += 3;
      --v40;
    }
    while (v40);
    goto LABEL_18;
  }
  uint64_t v33 = a2 & 0x30;
  uint64_t v34 = (int16x8_t *)&v81;
  uint64_t v35 = (unsigned __int16)a2 & 0xFFF0;
  __int16 v36 = (const __int16 *)a1;
  do
  {
    uint64_t v37 = v36;
    v36 += 48;
    int16x8x3_t v84 = vld3q_s16(v37);
    v37 += 24;
    int16x8x3_t v85 = vld3q_s16(v37);
    v34[-1] = vshrn_high_n_s32(vshrn_n_s32(vmlal_s16(vmlal_s16(vmull_s16(*(int16x4_t *)v84.val[1].i8, *(int16x4_t *)v84.val[1].i8), *(int16x4_t *)v84.val[0].i8, *(int16x4_t *)v84.val[0].i8), *(int16x4_t *)v84.val[2].i8, *(int16x4_t *)v84.val[2].i8), 0xBuLL), vmlal_high_s16(vmlal_high_s16(vmull_high_s16(v84.val[1], v84.val[1]), v84.val[0], v84.val[0]), v84.val[2], v84.val[2]), 0xBuLL);
    *uint64_t v34 = vshrn_high_n_s32(vshrn_n_s32(vmlal_s16(vmlal_s16(vmull_s16(*(int16x4_t *)v85.val[1].i8, *(int16x4_t *)v85.val[1].i8), *(int16x4_t *)v85.val[0].i8, *(int16x4_t *)v85.val[0].i8), *(int16x4_t *)v85.val[2].i8, *(int16x4_t *)v85.val[2].i8), 0xBuLL), vmlal_high_s16(vmlal_high_s16(vmull_high_s16(v85.val[1], v85.val[1]), v85.val[0], v85.val[0]), v85.val[2], v85.val[2]), 0xBuLL);
    v34 += 2;
    v35 -= 16;
  }
  while (v35);
  if (v33 != (unsigned __int16)a2) {
    goto LABEL_16;
  }
LABEL_18:
  if (a2 >= 8)
  {
    int16x8_t v42 = vdupq_n_s16(v12 >> 15);
    int16x8_t v43 = vdupq_n_s16(v11 >> 15);
    uint64_t v41 = (unsigned __int16)a2 & 0xFFF8;
    int16x8_t v44 = vdupq_n_s16(v10 >> 15);
    int v45 = (__int16 *)v82;
    uint64_t v46 = v41;
    int v47 = (const __int16 *)a1;
    do
    {
      int16x8x3_t v86 = vld3q_s16(v47);
      v47 += 24;
      v87.val[0] = vsubq_s16(v86.val[0], v42);
      v87.val[1] = vsubq_s16(v86.val[1], v43);
      v87.val[2] = vsubq_s16(v86.val[2], v44);
      vst3q_s16(v45, v87);
      v45 += 24;
      v46 -= 8;
    }
    while (v46);
    if (v41 == (unsigned __int16)a2) {
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v41 = 0;
  }
  uint64_t v48 = (unsigned __int16)a2 - v41;
  uint64_t v49 = 6 * v41 + 4;
  uint64_t v50 = (__int16 *)(a1 + v49);
  unsigned int v51 = &v82[v49];
  do
  {
    *(v51 - 2) = *(v50 - 2) - (v12 >> 15);
    *(v51 - 1) = *(v50 - 1) - (v11 >> 15);
    __int16 v52 = *v50;
    v50 += 3;
    *unsigned int v51 = v52 - (v10 >> 15);
    v51 += 3;
    --v48;
  }
  while (v48);
LABEL_25:
  unint64_t v21 = 0;
  unint64_t v20 = 0;
  unint64_t v19 = 0;
  unint64_t v18 = 0;
  unint64_t v17 = 0;
  unint64_t v16 = 0;
  uint64_t v53 = 0;
  uint64_t v54 = 0;
  uint64_t v55 = 0;
  int v56 = (__int16 *)(a1 + 4);
  unsigned int v57 = (__int16 *)v83;
  uint64_t v58 = v80;
  do
  {
    v21 += *(v57 - 1) * (uint64_t)*(v56 - 2);
    v20 += *v57 * (uint64_t)*(v56 - 1);
    int v59 = v57[1];
    v19 += v57[1] * (uint64_t)*v56;
    v18 += *(v56 - 1) * (uint64_t)*(v57 - 1);
    v17 += *v56 * (uint64_t)*(v57 - 1);
    v16 += *v56 * (uint64_t)*v57;
    int v60 = *v58++;
    v53 += v60 * (uint64_t)*(v57 - 1);
    v54 += v60 * (uint64_t)*v57;
    v56 += 3;
    v57 += 3;
    v55 += v60 * (uint64_t)v59;
    --v8;
  }
  while (v8);
  unint64_t v15 = v53 >> 1;
  unint64_t v14 = v54 >> 1;
  unint64_t v13 = v55 >> 1;
LABEL_28:
  int v61 = sub_100392328(v21);
  int v62 = sub_100392328(v18);
  if (v61 >= v62) {
    int v61 = v62;
  }
  int v63 = sub_100392328(v17);
  if (v61 >= v63) {
    int v61 = v63;
  }
  int v64 = sub_100392328(v18);
  if (v61 >= v64) {
    int v61 = v64;
  }
  int v65 = sub_100392328(v20);
  if (v61 >= v65) {
    int v61 = v65;
  }
  int v66 = sub_100392328(v16);
  if (v61 >= v66) {
    int v61 = v66;
  }
  int v67 = sub_100392328(v17);
  if (v61 >= v67) {
    int v61 = v67;
  }
  int v68 = sub_100392328(v16);
  if (v61 >= v68) {
    int v61 = v68;
  }
  int v69 = sub_100392328(v19);
  if (v61 >= v69) {
    int v61 = v69;
  }
  int v70 = sub_100392328(v15);
  if (v61 >= v70) {
    int v61 = v70;
  }
  int v71 = sub_100392328(v14);
  if (v61 >= v71) {
    int v61 = v71;
  }
  int v72 = sub_100392328(v13);
  if (v61 >= v72) {
    int v73 = v72;
  }
  else {
    int v73 = v61;
  }
  if (v73 >= 32) {
    LOBYTE(v73) = 32;
  }
  unint64_t v74 = v18 << v73 >> 18;
  a3[3] = v74;
  a3[1] = v74;
  unint64_t v75 = v17 << v73 >> 18;
  a3[6] = v75;
  a3[2] = v75;
  unint64_t v76 = v16 << v73 >> 18;
  a3[7] = v76;
  a3[5] = v76;
  *a3 = v21 << v73 >> 18;
  a3[4] = v20 << v73 >> 18;
  a3[8] = v19 << v73 >> 18;
  *a4 = v15 << v73 >> 18;
  a4[1] = v14 << v73 >> 18;
  a4[2] = v13 << v73 >> 18;
  if (*a3 >= 6 && a3[4] >= 6 && a3[8] > 5) {
    return 4;
  }
  return 0;
}

uint64_t sub_10039288C(__int16 *a1, int a2, __int16 *a3, __int16 *a4, _WORD *a5)
{
  __int16 v7 = a3[8];
  __int16 v8 = a3[5];
  uint64_t v9 = v7 * (uint64_t)a3[4] - v8 * (uint64_t)v8;
  __int16 v10 = *a3;
  __int16 v11 = a3[6];
  uint64_t v12 = *a3 * (uint64_t)v7 - v11 * (uint64_t)v11;
  __int16 v13 = a3[1];
  uint64_t v14 = *a3 * (uint64_t)a3[4] - v13 * (uint64_t)v13;
  if (v12 <= v9) {
    uint64_t v15 = a3[8] * (uint64_t)a3[4] - a3[5] * (uint64_t)a3[5];
  }
  else {
    uint64_t v15 = *a3 * (uint64_t)a3[8] - a3[6] * (uint64_t)a3[6];
  }
  if (v14 <= v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = *a3 * (uint64_t)a3[4] - a3[1] * (uint64_t)a3[1];
  }
  if (v16 >= 1)
  {
    __int16 v19 = a3[4];
    __int16 v50 = 0;
    int v20 = v12 > v9;
    if (v14 > v15) {
      int v20 = 2;
    }
    if (v20 == 2)
    {
      __int16 v57 = v10;
      __int16 v58 = v13;
      __int16 v55 = -v11;
      __int16 v59 = a3[3];
      __int16 v60 = v19;
      __int16 v56 = -v8;
      if (sub_100392CC0(&v57, 2, v54, v53))
      {
        sub_100392F3C((uint64_t)&v57, 2, (uint64_t)v54, (uint64_t)v53, (uint64_t)&v55, (uint64_t)&v51);
        int v21 = v51 >> 2;
        *a4 = v51 >> 2;
        int v22 = v52 >> 2;
        a4[1] = v52 >> 2;
        int v24 = 2048;
        goto LABEL_19;
      }
    }
    else if (v20 == 1)
    {
      __int16 v57 = v7;
      __int16 v58 = v11;
      __int16 v55 = -v8;
      __int16 v59 = v11;
      __int16 v60 = v10;
      __int16 v56 = -v13;
      if (sub_100392CC0(&v57, 2, v54, v53))
      {
        sub_100392F3C((uint64_t)&v57, 2, (uint64_t)v54, (uint64_t)v53, (uint64_t)&v55, (uint64_t)&v51);
        int v21 = v52 >> 2;
        *a4 = v52 >> 2;
        int v22 = 2048;
        a4[1] = 2048;
        int v23 = v51;
        goto LABEL_18;
      }
    }
    else
    {
      __int16 v57 = v19;
      __int16 v59 = v8;
      __int16 v55 = -v13;
      __int16 v58 = v8;
      __int16 v60 = v7;
      __int16 v56 = -v11;
      if (sub_100392CC0(&v57, 2, v54, v53))
      {
        sub_100392F3C((uint64_t)&v57, 2, (uint64_t)v54, (uint64_t)v53, (uint64_t)&v55, (uint64_t)&v51);
        int v21 = 2048;
        *a4 = 2048;
        int v22 = v51 >> 2;
        a4[1] = v51 >> 2;
        int v23 = v52;
LABEL_18:
        int v24 = v23 >> 2;
LABEL_19:
        a4[2] = v24;
        int v25 = sub_100394428(v22 * (uint64_t)v22 + v21 * (uint64_t)v21 + v24 * (uint64_t)v24, &v50);
        unint64_t v26 = (__int16)(v25 >> 8) * (uint64_t)*a4;
        *a4 = v26 >> 11;
        unint64_t v27 = (__int16)(v25 >> 8) * (uint64_t)a4[1];
        a4[1] = v27 >> 11;
        unint64_t v28 = (__int16)(v25 >> 8) * (uint64_t)a4[2];
        a4[2] = v28 >> 11;
        uint64_t v29 = (uint64_t)(v26 << 37) >> 48;
        uint64_t v30 = (uint64_t)(v27 << 37) >> 48;
        uint64_t v31 = (int)v29 * (uint64_t)*a1 + (__int16)((int)v27 >> 11) * (uint64_t)a1[1];
        uint64_t v32 = (uint64_t)(v28 << 37) >> 48;
        uint64_t v33 = v31 + (__int16)((int)v28 >> 11) * (uint64_t)a1[2];
        if (a2 < 2)
        {
          LODWORD(v36) = v31 + (__int16)((int)v28 >> 11) * a1[2];
          LODWORD(v35) = v36;
        }
        else
        {
          if (a2 == 2)
          {
            uint64_t v34 = 1;
            uint64_t v35 = v33;
            uint64_t v36 = v33;
          }
          else
          {
            int v39 = 0;
            uint64_t v34 = ((unsigned __int16)a2 - 1) | 1;
            uint64_t v40 = a1 + 4;
            unint64_t v41 = ((unsigned __int16)a2 - 1) & 0xFFFFFFFFFFFFFFFELL;
            uint64_t v35 = v33;
            uint64_t v42 = v33;
            uint64_t v43 = v33;
            uint64_t v44 = v33;
            do
            {
              uint64_t v45 = (int)v29 * (uint64_t)*(v40 - 1)
                  + (int)v30 * (uint64_t)*v40
                  + (__int16)((int)v28 >> 11) * (uint64_t)v40[1];
              uint64_t v46 = (int)v29 * (uint64_t)v40[2]
                  + (int)v30 * (uint64_t)v40[3]
                  + (__int16)((int)v28 >> 11) * (uint64_t)v40[4];
              if (v43 <= v45) {
                uint64_t v43 = (int)v29 * (uint64_t)*(v40 - 1)
              }
                    + (int)v30 * (uint64_t)*v40
                    + (__int16)((int)v28 >> 11) * (uint64_t)v40[1];
              if (v44 <= v46) {
                uint64_t v44 = (int)v29 * (uint64_t)v40[2]
              }
                    + (int)v30 * (uint64_t)v40[3]
                    + (__int16)((int)v28 >> 11) * (uint64_t)v40[4];
              if (v35 >= v45) {
                uint64_t v35 = (int)v29 * (uint64_t)*(v40 - 1)
              }
                    + (int)v30 * (uint64_t)*v40
                    + (__int16)((int)v28 >> 11) * (uint64_t)v40[1];
              if (v42 >= v46) {
                uint64_t v42 = (int)v29 * (uint64_t)v40[2]
              }
                    + (int)v30 * (uint64_t)v40[3]
                    + (__int16)((int)v28 >> 11) * (uint64_t)v40[4];
              LODWORD(v33) = v45 + v33;
              v39 += v46;
              v40 += 6;
              v41 -= 2;
            }
            while (v41);
            if (v43 <= v44) {
              uint64_t v36 = v44;
            }
            else {
              uint64_t v36 = v43;
            }
            if (v35 >= v42) {
              uint64_t v35 = v42;
            }
            LODWORD(v33) = v39 + v33;
            if ((unsigned __int16)a2 - 1 == (((unsigned __int16)a2 - 1) & 0xFFFFFFFFFFFFFFFELL)) {
              goto LABEL_47;
            }
          }
          int v47 = &a1[3 * (int)v34 + 2];
          uint64_t v48 = (unsigned __int16)a2 - v34;
          do
          {
            uint64_t v49 = (int)v29 * (uint64_t)*(v47 - 2) + (int)v30 * (uint64_t)*(v47 - 1) + (int)v32 * (uint64_t)*v47;
            if (v36 <= v49) {
              uint64_t v36 = (int)v29 * (uint64_t)*(v47 - 2) + (int)v30 * (uint64_t)*(v47 - 1) + (int)v32 * (uint64_t)*v47;
            }
            if (v35 >= v49) {
              uint64_t v35 = (int)v29 * (uint64_t)*(v47 - 2) + (int)v30 * (uint64_t)*(v47 - 1) + (int)v32 * (uint64_t)*v47;
            }
            LODWORD(v33) = v49 + v33;
            v47 += 3;
            --v48;
          }
          while (v48);
        }
LABEL_47:
        *a5 = (v36 - v35) >> 11;
        uint64_t v37 = 1;
        a4[3] = -(__int16)(((__int16)((int)v33 >> 11) * sub_1003921AC(1, a2)) >> 15);
        return v37;
      }
    }
  }
  return 0;
}

uint64_t sub_100392CC0(_WORD *a1, int a2, __int16 *a3, __int16 *a4)
{
  if (a2 < 1) {
    return 1;
  }
  uint64_t v29 = v4;
  uint64_t v30 = v5;
  unint64_t v9 = 0;
  __int16 v28 = 0;
  unint64_t v10 = (unsigned __int16)a2;
  __int16 v11 = a1;
  uint64_t v12 = a1;
  while (2)
  {
    unint64_t v27 = v11;
    if (v9)
    {
      unint64_t v13 = v9;
      while (1)
      {
        int64_t v14 = (uint64_t)(__int16)a1[3 * v9 + v13] << 15;
        if (v9 >= 2)
        {
          int v16 = 0;
          uint64_t v17 = 0;
          do
          {
            unint64_t v18 = &a1[3 * v9];
            __int16 v19 = &a1[3 * v13];
            v14 -= 4
                 * (__int16)v18[(unsigned __int16)(v9 - v16 - 1)]
                 * (uint64_t)(__int16)v19[(unsigned __int16)(v9 - v16 - 1)];
            v17 -= 4
                 * (__int16)v18[(unsigned __int16)(v9 - v16 - 2)]
                 * (uint64_t)(__int16)v19[(unsigned __int16)(v9 - v16 - 2)];
            v16 += 2;
          }
          while ((v9 & 0xFFFFFFFE) != v16);
          v14 += v17;
          LOWORD(v15) = v9 & 1;
          if ((v9 & 0xFFFFFFFE) == v9) {
            goto LABEL_13;
          }
        }
        else
        {
          LOWORD(v15) = v9;
        }
        do
        {
          unsigned __int16 v20 = v15 - 1;
          int v15 = (__int16)(v15 - 1);
          v14 -= 4 * (__int16)a1[3 * v9 + v20] * (uint64_t)(__int16)a1[3 * v13 + v20];
        }
        while (v15 > 0);
LABEL_13:
        if (v9 == v13)
        {
          if (v14 < 1) {
            return 0;
          }
          int v21 = sub_100394428(v14, &v28);
          a3[v9] = HIWORD(v21);
          a4[v9] = (unsigned __int16)v21 >> 1;
          if (++v13 >= v10) {
            goto LABEL_3;
          }
        }
        else
        {
          a1[3 * v13++ + v9] = 2
                             * (WORD1(v14) * a3[v9]
                              + ((((v14 >> 1) & 0x7FFE) * a3[v9]) >> 15)
                              + ((((int)v14 >> 16) * a4[v9]) >> 15));
          if (v13 >= v10) {
            goto LABEL_3;
          }
        }
      }
    }
    unint64_t v22 = 0;
    do
    {
      while (1)
      {
        unint64_t v23 = (__int16)v12[v22];
        int64_t v24 = v23 << 15;
        if (!v22) {
          break;
        }
        *__int16 v11 = 2
             * ((v23 >> 1) * *a3
              + ((((v24 >> 1) & 0x4000) * *a3) >> 15)
              + (((v23 >> 1) * *a4) >> 15));
        v11 += 3;
        if (++v22 >= v10) {
          goto LABEL_3;
        }
      }
      if ((int)v23 < 1) {
        return 0;
      }
      int v25 = sub_100394428(v24, &v28);
      *a3 = HIWORD(v25);
      *a4 = (unsigned __int16)v25 >> 1;
      ++v22;
      v11 += 3;
    }
    while (v22 < v10);
LABEL_3:
    ++v9;
    v12 += 3;
    __int16 v11 = v27 + 1;
    if (v9 != v10) {
      continue;
    }
    return 1;
  }
}

uint64_t sub_100392F3C(uint64_t result, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2 >= 1)
  {
    for (uint64_t i = 0; i != (unsigned __int16)a2; ++i)
    {
      if (i)
      {
        if (i >= 2)
        {
          int v10 = 0;
          int v11 = 0;
          int v12 = 0;
          LOWORD(v9) = i - (i & 0xFFFE);
          do
          {
            uint64_t v13 = result + 6 * i;
            v11 += *(__int16 *)(a6 + 2 * (unsigned __int16)(i - v10 - 1))
                 * *(__int16 *)(v13 + 2 * (unsigned __int16)(i - v10 - 1));
            v12 += *(__int16 *)(a6 + 2 * (unsigned __int16)(i - v10 - 2))
                 * *(__int16 *)(v13 + 2 * (unsigned __int16)(i - v10 - 2));
            v10 += 2;
          }
          while ((i & 0xFFFFFFFE) != v10);
          int v7 = v12 + v11;
          if ((i & 0xFFFFFFFE) == i) {
            goto LABEL_4;
          }
        }
        else
        {
          int v7 = 0;
          LOWORD(v9) = i;
        }
        do
        {
          unsigned __int16 v14 = v9 - 1;
          int v9 = (__int16)(v9 - 1);
          v7 += *(__int16 *)(a6 + 2 * v14) * *(__int16 *)(result + 6 * i + 2 * v14);
        }
        while (v9 > 0);
      }
      else
      {
        int v7 = 0;
      }
LABEL_4:
      int v8 = (*(__int16 *)(a5 + 2 * i) << 15) - 4 * v7;
      *(_WORD *)(a6 + 2 * i) = 2
                             * (HIWORD(v8) * *(_WORD *)(a3 + 2 * i)
                              + (((v8 >> 16) * *(__int16 *)(a4 + 2 * i)) >> 15)
                              + ((((v8 >> 1) & 0x7FFE) * *(__int16 *)(a3 + 2 * i)) >> 15));
    }
  }
  if ((((_WORD)a2 - 1) & 0x8000) == 0)
  {
    __int16 v15 = 0;
    unsigned __int16 v16 = a2 - 1;
    uint64_t v17 = result + 2 * (unsigned __int16)(a2 - 1);
    uint64_t v18 = v17 + 6;
    unsigned __int16 v19 = -1;
    __int16 v20 = a2;
    do
    {
      int v22 = *(__int16 *)(a6 + 2 * v16) << 15;
      if (a2 > v20)
      {
        uint64_t v23 = v20;
        if (v15 == 1) {
          goto LABEL_21;
        }
        int v24 = 0;
        uint64_t v25 = (v19 + 1) & 0x1FFFE;
        unint64_t v26 = (__int16 *)(v18 + 6 * v20);
        unint64_t v27 = (__int16 *)(a6 + 2 + 2 * v20);
        uint64_t v28 = (unsigned __int16)(v15 - 1) + 1;
        uint64_t v23 = (v28 & 0x1FFFE) + v20;
        do
        {
          v22 -= 4 * *(v26 - 3) * *(v27 - 1);
          v24 -= 4 * *v26 * *v27;
          v26 += 6;
          v27 += 2;
          v25 -= 2;
        }
        while (v25);
        v22 += v24;
        if (v28 != (v28 & 0x1FFFE))
        {
LABEL_21:
          uint64_t v29 = (__int16 *)(v17 + 6 * (int)v23);
          do
          {
            int v30 = *v29;
            v29 += 3;
            v22 -= 4 * v30 * *(__int16 *)(a6 + 2 * v23++);
          }
          while ((unsigned __int16)v23 != (unsigned __int16)a2);
        }
      }
      uint64_t result = 2 * v16;
      int v21 = (__int16)v16;
      *(_WORD *)(a6 + result) = 2
                              * (HIWORD(v22) * *(_WORD *)(a3 + result)
                               + ((((v22 >> 1) & 0x7FFE) * *(__int16 *)(a3 + result)) >> 15)
                               + (((v22 >> 16) * *(__int16 *)(a4 + result)) >> 15));
      --v16;
      --v20;
      ++v15;
      ++v19;
      v18 -= 2;
      v17 -= 2;
    }
    while (v21 > 0);
  }
  return result;
}

uint64_t sub_1003931A4(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, int a6)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 400) = a3;
  uint64_t result = sub_1003931EC(a1, a5, a6, 1);
  *(_WORD *)(a1 + 396) = 0;
  *(_WORD *)(a1 + 398) = a4;
  *(_DWORD *)(a1 + 504) = 0;
  return result;
}

uint64_t sub_1003931EC(uint64_t result, uint64_t a2, int a3, int a4)
{
  __int16 v4 = a3;
  uint64_t v5 = result;
  if (a4)
  {
    *(_DWORD *)(result + 8) = 2147450879;
    *(_WORD *)(result + 12) = 0x7FFF;
    *(_DWORD *)(result + 14) = 2147450879;
    *(_WORD *)(result + 18) = 0x7FFF;
    *(_DWORD *)(result + 20) = 2147450879;
    *(_WORD *)(result + 24) = 0x7FFF;
    *(_DWORD *)(result + 26) = 2147450879;
    *(_WORD *)(result + 30) = 0x7FFF;
    *(_WORD *)(result + 36) = 0x7FFF;
    *(_DWORD *)(result + 32) = 2147450879;
    *(_WORD *)(result + 42) = 0x7FFF;
    *(_DWORD *)(result + 38) = 2147450879;
    *(_WORD *)(result + 48) = 0x7FFF;
    *(_DWORD *)(result + 44) = 2147450879;
    *(_WORD *)(result + 54) = 0x7FFF;
    *(_DWORD *)(result + 50) = 2147450879;
    *(_WORD *)(result + 60) = 0x7FFF;
    *(_DWORD *)(result + 56) = 2147450879;
    *(_WORD *)(result + 66) = 0x7FFF;
    *(_DWORD *)(result + 62) = 2147450879;
    *(_WORD *)(result + 72) = 0x7FFF;
    *(_DWORD *)(result + 68) = 2147450879;
    *(_WORD *)(result + 78) = 0x7FFF;
    *(_DWORD *)(result + 74) = 2147450879;
    *(_WORD *)(result + 84) = 0x7FFF;
    *(_DWORD *)(result + 80) = 2147450879;
    *(_WORD *)(result + 90) = 0x7FFF;
    *(_DWORD *)(result + 86) = 2147450879;
    *(_WORD *)(result + 96) = 0x7FFF;
    *(_DWORD *)(result + 92) = 2147450879;
    *(_WORD *)(result + 102) = 0x7FFF;
    *(_DWORD *)(result + 98) = 2147450879;
    *(_WORD *)(result + 108) = 0x7FFF;
    *(_DWORD *)(result + 104) = 2147450879;
    *(_WORD *)(result + 114) = 0x7FFF;
    *(_DWORD *)(result + 110) = 2147450879;
    *(_WORD *)(result + 120) = 0x7FFF;
    *(_DWORD *)(result + 116) = 2147450879;
    *(_WORD *)(result + 126) = 0x7FFF;
    *(_DWORD *)(result + 122) = 2147450879;
    *(_WORD *)(result + 132) = 0x7FFF;
    *(_DWORD *)(result + 128) = 2147450879;
    *(_WORD *)(result + 138) = 0x7FFF;
    *(_DWORD *)(result + 134) = 2147450879;
    *(_WORD *)(result + 144) = 0x7FFF;
    *(_DWORD *)(result + 140) = 2147450879;
    *(_WORD *)(result + 150) = 0x7FFF;
    *(_DWORD *)(result + 146) = 2147450879;
    *(_WORD *)(result + 156) = 0x7FFF;
    *(_DWORD *)(result + 152) = 2147450879;
    *(_WORD *)(result + 162) = 0x7FFF;
    *(_DWORD *)(result + 158) = 2147450879;
    *(_WORD *)(result + 168) = 0x7FFF;
    *(_DWORD *)(result + 164) = 2147450879;
    *(_WORD *)(result + 174) = 0x7FFF;
    *(_DWORD *)(result + 170) = 2147450879;
    *(_WORD *)(result + 180) = 0x7FFF;
    *(_DWORD *)(result + 176) = 2147450879;
    *(_WORD *)(result + 186) = 0x7FFF;
    *(_DWORD *)(result + 182) = 2147450879;
    *(_WORD *)(result + 192) = 0x7FFF;
    *(_DWORD *)(result + 188) = 2147450879;
    *(_WORD *)(result + 198) = 0x7FFF;
    *(_DWORD *)(result + 194) = 2147450879;
    *(_DWORD *)(result + 200) = 2147450879;
    *(_WORD *)(result + 204) = 0x7FFF;
    *(_WORD *)(result + 210) = 0x7FFF;
    *(_DWORD *)(result + 206) = 2147450879;
    *(_WORD *)(result + 216) = 0x7FFF;
    *(_DWORD *)(result + 212) = 2147450879;
    *(_WORD *)(result + 222) = 0x7FFF;
    *(_DWORD *)(result + 218) = 2147450879;
    *(_WORD *)(result + 228) = 0x7FFF;
    *(_DWORD *)(result + 224) = 2147450879;
    *(_WORD *)(result + 234) = 0x7FFF;
    *(_DWORD *)(result + 230) = 2147450879;
    *(_WORD *)(result + 240) = 0x7FFF;
    *(_DWORD *)(result + 236) = 2147450879;
    *(_WORD *)(result + 246) = 0x7FFF;
    *(_DWORD *)(result + 242) = 2147450879;
    *(_WORD *)(result + 252) = 0x7FFF;
    *(_DWORD *)(result + 248) = 2147450879;
    *(_WORD *)(result + 258) = 0x7FFF;
    *(_DWORD *)(result + 254) = 2147450879;
    *(_WORD *)(result + 264) = 0x7FFF;
    *(_DWORD *)(result + 260) = 2147450879;
    *(_WORD *)(result + 270) = 0x7FFF;
    *(_DWORD *)(result + 266) = 2147450879;
    *(_WORD *)(result + 276) = 0x7FFF;
    *(_DWORD *)(result + 272) = 2147450879;
    *(_WORD *)(result + 282) = 0x7FFF;
    *(_DWORD *)(result + 278) = 2147450879;
    *(_WORD *)(result + 288) = 0x7FFF;
    *(_DWORD *)(result + 284) = 2147450879;
    *(_WORD *)(result + 294) = 0x7FFF;
    *(_DWORD *)(result + 290) = 2147450879;
    *(_WORD *)(result + 300) = 0x7FFF;
    *(_DWORD *)(result + 296) = 2147450879;
    *(_WORD *)(result + 412) = 0x7FFF;
    *(_DWORD *)(result + 408) = 2147450879;
    *(_WORD *)(result + 306) = 0x7FFF;
    *(_DWORD *)(result + 302) = 2147450879;
    *(_WORD *)(result + 418) = 0x7FFF;
    *(_DWORD *)(result + 414) = 2147450879;
    *(_WORD *)(result + 312) = 0x7FFF;
    *(_DWORD *)(result + 308) = 2147450879;
    *(_WORD *)(result + 424) = 0x7FFF;
    *(_DWORD *)(result + 420) = 2147450879;
    *(_WORD *)(result + 318) = 0x7FFF;
    *(_DWORD *)(result + 314) = 2147450879;
    *(_WORD *)(result + 430) = 0x7FFF;
    *(_DWORD *)(result + 426) = 2147450879;
    *(_WORD *)(result + 324) = 0x7FFF;
    *(_DWORD *)(result + 320) = 2147450879;
    *(_WORD *)(result + 436) = 0x7FFF;
    *(_DWORD *)(result + 432) = 2147450879;
    *(_WORD *)(result + 330) = 0x7FFF;
    *(_DWORD *)(result + 326) = 2147450879;
    *(_WORD *)(result + 442) = 0x7FFF;
    *(_DWORD *)(result + 438) = 2147450879;
    *(_WORD *)(result + 336) = 0x7FFF;
    *(_DWORD *)(result + 332) = 2147450879;
    *(_WORD *)(result + 448) = 0x7FFF;
    *(_DWORD *)(result + 444) = 2147450879;
    *(_WORD *)(result + 342) = 0x7FFF;
    *(_DWORD *)(result + 338) = 2147450879;
    *(_WORD *)(result + 454) = 0x7FFF;
    *(_DWORD *)(result + 450) = 2147450879;
    *(_WORD *)(result + 348) = 0x7FFF;
    *(_DWORD *)(result + 344) = 2147450879;
    *(_WORD *)(result + 460) = 0x7FFF;
    *(_DWORD *)(result + 456) = 2147450879;
    *(_WORD *)(result + 354) = 0x7FFF;
    *(_DWORD *)(result + 350) = 2147450879;
    *(_WORD *)(result + 466) = 0x7FFF;
    *(_DWORD *)(result + 462) = 2147450879;
    *(_WORD *)(result + 360) = 0x7FFF;
    *(_DWORD *)(result + 356) = 2147450879;
    *(_WORD *)(result + 472) = 0x7FFF;
    *(_DWORD *)(result + 468) = 2147450879;
    *(_WORD *)(result + 366) = 0x7FFF;
    *(_DWORD *)(result + 362) = 2147450879;
    *(_WORD *)(result + 478) = 0x7FFF;
    *(_DWORD *)(result + 474) = 2147450879;
    *(_WORD *)(result + 372) = 0x7FFF;
    *(_DWORD *)(result + 368) = 2147450879;
    *(_WORD *)(result + 484) = 0x7FFF;
    *(_DWORD *)(result + 480) = 2147450879;
    *(_WORD *)(result + 378) = 0x7FFF;
    *(_DWORD *)(result + 374) = 2147450879;
    *(_WORD *)(result + 490) = 0x7FFF;
    *(_DWORD *)(result + 486) = 2147450879;
    *(_WORD *)(result + 384) = 0x7FFF;
    *(_DWORD *)(result + 380) = 2147450879;
    *(_WORD *)(result + 496) = 0x7FFF;
    *(_DWORD *)(result + 492) = 2147450879;
    *(_WORD *)(result + 390) = 0x7FFF;
    *(_DWORD *)(result + 386) = 2147450879;
    *(_WORD *)(result + 502) = 0x7FFF;
    *(_DWORD *)(result + 498) = 2147450879;
  }
  unsigned int v6 = a3 << 16;
  if (a3 << 16 >= 0x10000)
  {
    *(_WORD *)(result + 392) = 1;
    uint64_t result = sub_1003944D0(a2, 16, 1, result + 296);
    if (v6 >> 18) {
      __int16 v7 = 2;
    }
    else {
      __int16 v7 = v4 - 1;
    }
    *(_WORD *)(v5 + 394) = v7;
  }
  else
  {
    *(_WORD *)(result + 392) = 0;
    *(_WORD *)(result + 394) = 0;
  }
  return result;
}

uint64_t sub_100393510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, __int16 a6, int a7, int a8, uint64_t a9, _DWORD *a10, uint64_t a11)
{
  __int16 v11 = 0;
  __int16 v81 = 0;
  if (*((unsigned __int16 *)a4 + 199) <= 1u)
  {
    if (*((unsigned __int16 *)a4 + 197) > 2u) {
      return 0;
    }
    unsigned __int16 v83 = 0;
    int v82 = 0;
    if (((a6 - 1) & 0x8000) == 0)
    {
      __int16 v78 = 0;
      unsigned __int16 v16 = a6 - 1;
      int v79 = (__int16 *)(a4 + 51);
      uint64_t v17 = (__int16 *)(a4 + 63);
      unint64_t v76 = (__int16 *)a4 + 198;
      unsigned int v77 = (__int16 *)(a4 + 25);
      uint64_t v75 = (uint64_t)(a4 + 37);
      int v73 = (const __int16 *)(a4 + 43);
      uint64_t v74 = (uint64_t)a4 + 300;
      while (1)
      {
        uint64_t v19 = *((__int16 *)a4 + 199);
        LOWORD(v20) = *((_WORD *)a4 + 197);
        if (*a4) {
          int v21 = *(char **)(*a4 + 8 * v19);
        }
        else {
          int v21 = (char *)&unk_101D1C170 + 90 * *((__int16 *)a4 + 199);
        }
        int v22 = &v21[30 * *((__int16 *)a4 + 197)];
        if (!a7) {
          LODWORD(v19) = 0;
        }
        if (!a8) {
          LOWORD(v20) = 0;
        }
        uint64_t v23 = a4[50];
        if (v23)
        {
          int v24 = *(char **)(v23 + 8 * (int)v19);
          int v20 = (__int16)v20;
        }
        else
        {
          int v20 = (__int16)v20;
          int v24 = (char *)&unk_101D1C224 + 90 * (int)v19;
        }
        uint64_t v25 = &v24[30 * v20];
        __int16 v26 = *(_WORD *)v22;
        __int16 v27 = *((_WORD *)v22 + 2);
        *(_OWORD *)uint64_t v80 = *(_OWORD *)v25;
        *(_OWORD *)&v80[7] = *(_OWORD *)(v25 + 14);
        v80[0] = v26;
        v80[2] = v27;
        int v28 = sub_100393AB8((_WORD *)(a5 + 6 * v16), v80, (__int16 *)a4 + 4, v79, (__int16 *)&v82, (__int16 *)a4 + 252, &v81, 0, 0);
        LODWORD(v29) = *((__int16 *)a4 + 199);
        if (v28 != 2) {
          goto LABEL_27;
        }
        if ((int)v29 > 0) {
          break;
        }
        int v33 = *((__int16 *)v22 + 12);
        if (v33 < 0 || *v17 < v33) {
          goto LABEL_27;
        }
        *((_WORD *)a4 + 199) = v29 + 1;
        if ((v29 & 0x80000000) == 0)
        {
          LOWORD(v29) = 1;
          int v30 = *((__int16 *)v22 + 13);
          if (v30 < 0)
          {
LABEL_27:
            int v31 = *((__int16 *)a4 + 197);
            uint64_t v32 = *a4;
            uint64_t v29 = (__int16)v29;
            if (*a4) {
              goto LABEL_28;
            }
            goto LABEL_31;
          }
LABEL_20:
          if (*v17 <= v30)
          {
            LOWORD(v29) = v29 - 1;
            *((_WORD *)a4 + 199) = v29;
            int v31 = *((__int16 *)a4 + 197);
            uint64_t v32 = *a4;
            uint64_t v29 = (__int16)v29;
            if (*a4) {
              goto LABEL_28;
            }
            goto LABEL_31;
          }
          goto LABEL_27;
        }
        int v31 = *((__int16 *)a4 + 197);
        uint64_t v32 = *a4;
        uint64_t v29 = (__int16)(v29 + 1);
        if (*a4)
        {
LABEL_28:
          uint64_t v34 = (__int16 *)(*(void *)(v32 + 8 * v29) + 30 * v31);
          if (v81 != 1) {
            goto LABEL_6;
          }
          goto LABEL_32;
        }
LABEL_31:
        uint64_t v34 = (__int16 *)((char *)&unk_101D1C170 + 90 * (int)v29 + 30 * v31);
        if (v81 != 1) {
          goto LABEL_6;
        }
LABEL_32:
        if (sub_100393AB8((_WORD *)(a5 + 6 * v16), v34, (__int16 *)a4 + 4, v77, (__int16 *)&v82, v76, &v81, 1, a11) == 2)
        {
          int v35 = *((__int16 *)a4 + 196);
          if (v35 < 16) {
            __int16 v36 = v35 + 1;
          }
          else {
            __int16 v36 = 16;
          }
          *((_WORD *)a4 + 196) = v36;
          sub_1003944D0((uint64_t)&v82, 16, 1, v75);
          if (*((__int16 *)a4 + 196) < 2 || v34[11] <= 1)
          {
            *(_DWORD *)a9 = v82;
            *(_WORD *)(a9 + 4) = v83;
LABEL_59:
            ++v78;
            if (*((__int16 *)a4 + 196) >= v34[10])
            {
              int v70 = *((__int16 *)a4 + 197);
              if (v70 <= 1)
              {
                *((_WORD *)a4 + 196) = 0;
                *((_WORD *)a4 + 197) = v70 + 1;
              }
            }
            goto LABEL_6;
          }
          unsigned int v37 = *((unsigned __int16 *)a4 + 196);
          unsigned int v38 = (unsigned __int16)v34[11];
          unsigned __int16 v83 = 0;
          int v82 = 0;
          if (v37 >= v38)
          {
            int v39 = sub_1003921AC(1, (__int16)v38);
            __int16 v40 = v82;
            __int16 v41 = HIWORD(v82);
            __int16 v42 = v83;
            if (v34[11] >= 1)
            {
              unint64_t v45 = (unsigned __int16)v34[11];
              if (v45 >= 0x10)
              {
                unint64_t v46 = v45 & 0x7FF0;
                int16x8_t v59 = 0uLL;
                int16x8_t v60 = (int16x8_t)(unsigned __int16)v82;
                int16x8_t v61 = (int16x8_t)HIWORD(v82);
                int16x8_t v62 = (int16x8_t)v83;
                uint64_t v63 = (unsigned __int16)v45 & 0xFFF0;
                int v64 = v73;
                int16x8_t v65 = 0uLL;
                int16x8_t v66 = 0uLL;
                do
                {
                  int v67 = v64 - 24;
                  int16x8x3_t v85 = vld3q_s16(v67);
                  int16x8x3_t v87 = vld3q_s16(v64);
                  int16x8_t v60 = vaddq_s16(v60, v85.val[0]);
                  int16x8_t v59 = vaddq_s16(v59, v87.val[0]);
                  int16x8_t v61 = vaddq_s16(v61, v85.val[1]);
                  int16x8_t v65 = vaddq_s16(v65, v87.val[1]);
                  int16x8_t v62 = vaddq_s16(v62, v85.val[2]);
                  int16x8_t v66 = vaddq_s16(v66, v87.val[2]);
                  v64 += 48;
                  v63 -= 16;
                }
                while (v63);
                __int16 v42 = vaddvq_s16(vaddq_s16(v66, v62));
                __int16 v41 = vaddvq_s16(vaddq_s16(v65, v61));
                __int16 v40 = vaddvq_s16(vaddq_s16(v59, v60));
                if (v46 == v45) {
                  goto LABEL_57;
                }
              }
              else
              {
                unint64_t v46 = 0;
              }
              int v68 = (__int16 *)(v74 + 6 * v46);
              do
              {
                v40 += *(v68 - 2);
                v41 += *(v68 - 1);
                __int16 v69 = *v68;
                v68 += 3;
                v42 += v69;
                ++v46;
              }
              while (v46 < v45);
              goto LABEL_57;
            }
          }
          else
          {
            int v39 = sub_1003921AC(1, (__int16)v37);
            __int16 v40 = v82;
            __int16 v41 = HIWORD(v82);
            __int16 v42 = v83;
            if (*((__int16 *)a4 + 196) >= 1)
            {
              uint64_t v43 = *((unsigned __int16 *)a4 + 196);
              if (v43 < 0x10)
              {
                uint64_t v44 = 0;
                goto LABEL_49;
              }
              uint64_t v44 = v43 & 0x7FF0;
              int16x8_t v47 = 0uLL;
              int16x8_t v48 = (int16x8_t)(unsigned __int16)v82;
              int16x8_t v49 = (int16x8_t)HIWORD(v82);
              int16x8_t v50 = (int16x8_t)v83;
              uint64_t v51 = (unsigned __int16)v43 & 0xFFF0;
              __int16 v52 = v73;
              int16x8_t v53 = 0uLL;
              int16x8_t v54 = 0uLL;
              do
              {
                __int16 v55 = v52 - 24;
                int16x8x3_t v84 = vld3q_s16(v55);
                int16x8x3_t v86 = vld3q_s16(v52);
                int16x8_t v48 = vaddq_s16(v48, v84.val[0]);
                int16x8_t v47 = vaddq_s16(v47, v86.val[0]);
                int16x8_t v49 = vaddq_s16(v49, v84.val[1]);
                int16x8_t v53 = vaddq_s16(v53, v86.val[1]);
                int16x8_t v50 = vaddq_s16(v50, v84.val[2]);
                int16x8_t v54 = vaddq_s16(v54, v86.val[2]);
                v52 += 48;
                v51 -= 16;
              }
              while (v51);
              __int16 v42 = vaddvq_s16(vaddq_s16(v54, v50));
              __int16 v41 = vaddvq_s16(vaddq_s16(v53, v49));
              __int16 v40 = vaddvq_s16(vaddq_s16(v47, v48));
              if (v44 != v43)
              {
LABEL_49:
                __int16 v56 = (__int16 *)(v74 + 6 * v44);
                uint64_t v57 = v43 - v44;
                do
                {
                  v40 += *(v56 - 2);
                  v41 += *(v56 - 1);
                  __int16 v58 = *v56;
                  v56 += 3;
                  v42 += v58;
                  --v57;
                }
                while (v57);
              }
LABEL_57:
              LOWORD(v82) = v40;
              HIWORD(v82) = v41;
              unsigned __int16 v83 = v42;
            }
          }
          *(_WORD *)a9 = (v40 * v39) >> 15;
          *(_WORD *)(a9 + 2) = (v41 * v39) >> 15;
          *(_WORD *)(a9 + 4) = (v42 * v39) >> 15;
          goto LABEL_59;
        }
LABEL_6:
        int v18 = (__int16)v16--;
        if (v18 < 1) {
          goto LABEL_63;
        }
      }
      int v30 = *((__int16 *)v22 + 13);
      if (v30 < 0) {
        goto LABEL_27;
      }
      goto LABEL_20;
    }
    __int16 v78 = 0;
LABEL_63:
    int v71 = *((__int16 *)a4 + 197);
    if (*((_WORD *)a4 + 196)) {
      ++v71;
    }
    *a10 = v71;
    return v78;
  }
  return v11;
}

uint64_t sub_100393AB8(_WORD *a1, __int16 *a2, __int16 *a3, __int16 *a4, __int16 *a5, __int16 *a6, _WORD *a7, int a8, uint64_t a9)
{
  if (*a2 < 1) {
    return 0;
  }
  int v12 = a4;
  *a7 = 0;
  if (a8)
  {
    unsigned __int16 v16 = a2 + 14;
    if (a2[14])
    {
      if (a8 == 1) {
        goto LABEL_21;
      }
      uint64_t v17 = a4;
      int v18 = 0;
      int v19 = 0;
      int v20 = 0;
      goto LABEL_7;
    }
    if (a8 == 1) {
      goto LABEL_21;
    }
    uint64_t v17 = a4;
    int v18 = 0;
    int v19 = 0;
    int v20 = 0;
  }
  else
  {
    uint64_t v17 = a4;
    int v18 = sub_10039236C((__int16)(*a3 - *a1));
    int v19 = sub_10039236C((__int16)(a3[1] - a1[1]));
    int v20 = sub_10039236C((__int16)(a3[2] - a1[2]));
    unsigned __int16 v16 = a2 + 14;
    if (a2[14])
    {
LABEL_7:
      if (v19 + v18 + v20 < a2[2]) {
        return 0;
      }
      goto LABEL_18;
    }
  }
  int v21 = a2[2];
  if (v18 < v21 || v19 < v21 || v20 < v21) {
    return 0;
  }
LABEL_18:
  if (!a8)
  {
    sub_1003944D0((uint64_t)a1, *a2, 1, (uint64_t)a3);
    *a7 = 1;
  }
  int v12 = v17;
LABEL_21:
  signed __int16 v24 = *a2;
  uint64_t v25 = &a3[3 * *a2];
  int v27 = (unsigned __int16)*(v25 - 3);
  __int16 v26 = v25 - 3;
  if (v27 == 0x7FFF && v26[1] == 0x7FFF && v26[2] == 0x7FFF) {
    return 0;
  }
  __int16 v94 = 0;
  int v93 = 0;
  int v91 = 0;
  __int16 v92 = 0;
  int v89 = 0;
  unsigned __int16 v90 = 0;
  int v87 = 0;
  __int16 v88 = 0;
  sub_100394568(a3, v24, (__int16 *)&v93, (__int16 *)&v91, &v89, &v87);
  unsigned int v29 = (unsigned __int16)*a2;
  if (*a2 >= 1)
  {
    uint64_t v30 = (unsigned __int16)*a2;
    __int16 v31 = v89;
    __int16 v32 = HIWORD(v89);
    unsigned __int16 v33 = v90;
    if (v29 >= 8)
    {
      uint64_t v34 = v30 & 0x7FF8;
      int16x8_t v35 = vdupq_n_s16((unsigned __int16)v89);
      int16x8_t v36 = vdupq_n_s16(HIWORD(v89));
      int16x8_t v37 = vdupq_n_s16(v90);
      uint64_t v38 = (unsigned __int16)v30 & 0xFFF8;
      int v39 = a3;
      do
      {
        int16x8x3_t v109 = vld3q_s16(v39);
        v111.val[0] = vsubq_s16(v109.val[0], v35);
        v111.val[1] = vsubq_s16(v109.val[1], v36);
        v111.val[2] = vsubq_s16(v109.val[2], v37);
        vst3q_s16(v39, v111);
        v39 += 24;
        v38 -= 8;
      }
      while (v38);
      if (v34 == v30) {
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v34 = 0;
    }
    uint64_t v40 = v30 - v34;
    __int16 v41 = &a3[3 * v34 + 2];
    do
    {
      *(v41 - 2) -= v31;
      *(v41 - 1) -= v32;
      *v41 -= v33;
      v41 += 3;
      --v40;
    }
    while (v40);
LABEL_33:
    unsigned int v29 = (unsigned __int16)*a2;
  }
  int v42 = (__int16)v29;
  int v43 = sub_100392388((uint64_t)a3, (__int16)v29, (__int16 *)&v105, &v103);
  long long v107 = v105;
  __int16 v108 = v106;
  if (v43 == 4 && sub_100392CC0(&v107, 3, (__int16 *)&v99, (__int16 *)&v97))
  {
    int16x8x3_t v85 = v12;
    sub_100392F3C((uint64_t)&v107, 3, (uint64_t)&v99, (uint64_t)&v97, (uint64_t)&v103, (uint64_t)&v101);
    int v44 = (__int16)v101 >> 2;
    *a5 = v44;
    int v45 = SHIWORD(v101) >> 2;
    a5[1] = v45;
    int v46 = v102 >> 2;
    a5[2] = v102 >> 2;
    unint64_t v47 = (*a3 - v44) * (uint64_t)(*a3 - v44)
        + (a3[1] - v45) * (uint64_t)(a3[1] - v45)
        + (a3[2] - v46) * (uint64_t)(a3[2] - v46);
    __int16 v48 = sub_1003941E0(v47);
    __int16 v49 = v48;
    if ((__int16)v29 < 2)
    {
      __int16 v52 = v48;
    }
    else
    {
      uint64_t v50 = v29 - 1;
      uint64_t v51 = a3 + 5;
      __int16 v52 = v48;
      do
      {
        int v53 = *(v51 - 2) - *a5;
        int v54 = *(v51 - 1) - a5[1];
        uint64_t v55 = v53 * (uint64_t)v53 + v54 * (uint64_t)v54;
        int v56 = *v51 - a5[2];
        unint64_t v57 = v55 + v56 * (uint64_t)v56;
        v47 += v57;
        int v58 = sub_1003941E0(v57);
        if (v58 > v52) {
          __int16 v52 = v58;
        }
        if (v58 < v49) {
          __int16 v49 = v58;
        }
        v51 += 3;
        --v50;
      }
      while (v50);
    }
    int v60 = 1;
    unsigned int v62 = sub_1003921AC(1, v42);
    unsigned int v63 = sub_1003941E0((__int16)(((v62 >> 3) & 1) + (v62 >> 4)) * (((v47 >> 6) & 1) + (v47 >> 7)));
    char v61 = 0;
    *a6 = ((v63 >> 1) & 1) + (v63 >> 2);
    __int16 v59 = v52 - v49;
    int v12 = v85;
  }
  else
  {
    __int16 v59 = 0;
    int v60 = 0;
    a5[2] = 0;
    *(_DWORD *)a5 = 0;
    char v61 = 1;
    *a6 = 0;
  }
  *a5 += v89;
  a5[1] += HIWORD(v89);
  a5[2] += v90;
  sub_1003944D0((uint64_t)a5, a2[1], 1, (uint64_t)v12);
  if (v61) {
    goto LABEL_82;
  }
  int v64 = *a6;
  if (a9)
  {
    *(_DWORD *)(a9 + 12) = *(_DWORD *)(a2 + 7);
    *(_WORD *)(a9 + 16) = a2[9];
    *(_WORD *)(a9 + 18) = v59;
  }
  if (!v60 || a2[8] >= v64 || a2[7] <= v64 || a2[9] * (uint64_t)v64 <= (uint64_t)v59 << 11) {
    goto LABEL_82;
  }
  __int16 v104 = 0;
  int v103 = 0;
  int v100 = 0;
  int v101 = 0;
  __int16 v102 = 0;
  *(void *)&long long v107 = 0;
  int v99 = 0;
  int v97 = 0;
  __int16 v98 = 0;
  int v95 = 0;
  __int16 v96 = 0;
  sub_100394568(v12, a2[1], (__int16 *)&v99, (__int16 *)&v97, &v95, &v101);
  if (a9)
  {
    *(_WORD *)(a9 + 2) = a2[1];
    *(_DWORD *)(a9 + 20) = v101;
    *(_WORD *)(a9 + 24) = v102;
    __int16 v65 = a2[5];
    *(_WORD *)(a9 + 8) = v65;
  }
  else
  {
    __int16 v65 = a2[5];
  }
  if ((__int16)v101 >= v65 || SHIWORD(v101) >= v65 || v102 >= v65)
  {
    if (*v16 < 2) {
      goto LABEL_82;
    }
    int v69 = v65;
    BOOL v70 = (__int16)v101 < v65;
    char v71 = v102 < v69 || v70;
    if (v102 >= v69) {
      BOOL v70 = 0;
    }
    char v72 = SHIWORD(v101) < v69 ? v71 : 0;
    if ((v72 & 1) == 0 && !v70)
    {
LABEL_82:
      uint64_t result = 0;
      goto LABEL_83;
    }
  }
  sub_100394568(a3, *a2, (__int16 *)&v99, (__int16 *)&v97, &v95, &v103);
  int v66 = (__int16)v103;
  if (a9)
  {
    *(_WORD *)a9 = *a2;
    *(_DWORD *)(a9 + 26) = v103;
    *(_WORD *)(a9 + 30) = v104;
    *(_WORD *)(a9 + 6) = a2[4];
  }
  uint64_t result = 0;
  int v67 = a2[3];
  if (v66 > v67 && SHIWORD(v103) > v67 && v104 > v67)
  {
    if ((__int16)(HIWORD(v103) + v66 + v104) >= a2[4])
    {
      int v68 = sub_10039288C(a3, *a2, (__int16 *)&v105, (__int16 *)&v107, (_WORD *)&v100 + 1);
      if (a9)
      {
        *(_WORD *)(a9 + 10) = a2[6];
        *(_WORD *)(a9 + 32) = HIWORD(v100);
      }
      if (v68 && SHIWORD(v100) > a2[6])
      {
        uint64_t result = 2;
        goto LABEL_83;
      }
    }
    goto LABEL_82;
  }
LABEL_83:
  if (*a2 < 1) {
    return result;
  }
  uint64_t v73 = (unsigned __int16)*a2;
  __int16 v74 = v89;
  __int16 v75 = HIWORD(v89);
  unsigned __int16 v76 = v90;
  if (v73 < 8)
  {
    uint64_t v77 = 0;
LABEL_89:
    uint64_t v83 = v73 - v77;
    int16x8x3_t v84 = &a3[3 * v77 + 2];
    do
    {
      *(v84 - 2) += v74;
      *(v84 - 1) += v75;
      *v84 += v76;
      v84 += 3;
      --v83;
    }
    while (v83);
    return result;
  }
  uint64_t v77 = v73 & 0x7FF8;
  int16x8_t v78 = vdupq_n_s16((unsigned __int16)v89);
  int16x8_t v79 = vdupq_n_s16(HIWORD(v89));
  int16x8_t v80 = vdupq_n_s16(v90);
  uint64_t v81 = (unsigned __int16)v73 & 0xFFF8;
  int v82 = a3;
  do
  {
    int16x8x3_t v110 = vld3q_s16(v82);
    v112.val[0] = vaddq_s16(v110.val[0], v78);
    v112.val[1] = vaddq_s16(v110.val[1], v79);
    v112.val[2] = vaddq_s16(v110.val[2], v80);
    vst3q_s16(v82, v112);
    v82 += 24;
    v81 -= 8;
  }
  while (v81);
  if (v77 != v73) {
    goto LABEL_89;
  }
  return result;
}

uint64_t sub_1003941E0(unint64_t a1)
{
  if ((a1 & 0x8000000000000000) != 0) {
    return 0;
  }
  BOOL v1 = a1 >> 30 != 0;
  unint64_t v2 = ((a1 >> 28) & 0x3FFFFFFFFLL) + 4 * ((a1 >> 30) - v1);
  unint64_t v3 = (4 * v1) | 1;
  if (v3 <= v2)
  {
    unint64_t v4 = (8 * (a1 >> 30 != 0)) | 4;
  }
  else
  {
    unint64_t v3 = 0;
    unint64_t v4 = 8 * (a1 >> 30 != 0);
  }
  unint64_t v5 = v2 - v3;
  unint64_t v6 = v4 >> 2;
  unint64_t v7 = ((a1 >> 26) & 0x3FFFFFFFFLL) + 4 * v5;
  uint64_t v8 = v4 | 1;
  BOOL v9 = (v4 | 1) > v7;
  if ((v4 | 1) > v7) {
    uint64_t v8 = 0;
  }
  uint64_t v10 = 2 * v4;
  if (!v9) {
    uint64_t v10 = (8 * (v6 & 3)) | 4;
  }
  unint64_t v11 = ((a1 >> 24) & 0x3FFFFFFFFLL) + 4 * (v7 - v8);
  uint64_t v12 = v10 | 1;
  BOOL v13 = (v10 | 1uLL) > v11;
  if ((v10 | 1uLL) > v11) {
    uint64_t v12 = 0;
  }
  uint64_t v14 = 2 * v10;
  if (!v13) {
    v14 |= 4uLL;
  }
  unint64_t v15 = ((a1 >> 22) & 0x3FFFFFFFFLL) + 4 * (v11 - v12);
  uint64_t v16 = v14 | 1;
  BOOL v17 = (v14 | 1uLL) > v15;
  if ((v14 | 1uLL) > v15) {
    uint64_t v16 = 0;
  }
  uint64_t v18 = 2 * v14;
  if (!v17) {
    v18 |= 4uLL;
  }
  unint64_t v19 = ((a1 >> 20) & 0x3FFFFFFFFLL) + 4 * (v15 - v16);
  uint64_t v20 = v18 | 1;
  BOOL v21 = (v18 | 1uLL) > v19;
  if ((v18 | 1uLL) > v19) {
    uint64_t v20 = 0;
  }
  uint64_t v22 = 2 * v18;
  if (!v21) {
    v22 |= 4uLL;
  }
  unint64_t v23 = ((a1 >> 18) & 0x3FFFFFFFFLL) + 4 * (v19 - v20);
  uint64_t v24 = v22 | 1;
  BOOL v25 = (v22 | 1uLL) > v23;
  if ((v22 | 1uLL) > v23) {
    uint64_t v24 = 0;
  }
  uint64_t v26 = 2 * v22;
  if (!v25) {
    v26 |= 4uLL;
  }
  unint64_t v27 = ((a1 >> 16) & 0x3FFFFFFFFLL) + 4 * (v23 - v24);
  uint64_t v28 = v26 | 1;
  BOOL v29 = (v26 | 1uLL) > v27;
  if ((v26 | 1uLL) > v27) {
    uint64_t v28 = 0;
  }
  uint64_t v30 = 2 * v26;
  if (!v29) {
    v30 |= 4uLL;
  }
  unint64_t v31 = ((a1 >> 14) & 0x3FFFFFFFFLL) + 4 * (v27 - v28);
  uint64_t v32 = v30 | 1;
  BOOL v33 = (v30 | 1uLL) > v31;
  if ((v30 | 1uLL) > v31) {
    uint64_t v32 = 0;
  }
  uint64_t v34 = 2 * v30;
  if (!v33) {
    v34 |= 4uLL;
  }
  unint64_t v35 = ((a1 >> 12) & 0x3FFFFFFFFLL) + 4 * (v31 - v32);
  uint64_t v36 = v34 | 1;
  BOOL v37 = (v34 | 1uLL) > v35;
  if ((v34 | 1uLL) > v35) {
    uint64_t v36 = 0;
  }
  uint64_t v38 = 2 * v34;
  if (!v37) {
    v38 |= 4uLL;
  }
  unint64_t v39 = ((a1 >> 10) & 0x3FFFFFFFFLL) + 4 * (v35 - v36);
  uint64_t v40 = v38 | 1;
  BOOL v41 = (v38 | 1uLL) > v39;
  if ((v38 | 1uLL) > v39) {
    uint64_t v40 = 0;
  }
  uint64_t v42 = 2 * v38;
  if (!v41) {
    v42 |= 4uLL;
  }
  unint64_t v43 = ((a1 >> 8) & 0x3FFFFFFFFLL) + 4 * (v39 - v40);
  uint64_t v44 = v42 | 1;
  BOOL v45 = (v42 | 1uLL) > v43;
  if ((v42 | 1uLL) > v43) {
    uint64_t v44 = 0;
  }
  uint64_t v46 = 2 * v42;
  if (!v45) {
    v46 |= 4uLL;
  }
  unint64_t v47 = ((a1 >> 6) & 0x3FFFFFFFFLL) + 4 * (v43 - v44);
  uint64_t v48 = v46 | 1;
  BOOL v49 = (v46 | 1uLL) > v47;
  if ((v46 | 1uLL) > v47) {
    uint64_t v48 = 0;
  }
  uint64_t v50 = 2 * v46;
  if (!v49) {
    v50 |= 4uLL;
  }
  unint64_t v51 = ((a1 >> 4) & 0x3FFFFFFFFLL) + 4 * (v47 - v48);
  uint64_t v52 = v50 | 1;
  BOOL v53 = (v50 | 1uLL) > v51;
  if ((v50 | 1uLL) > v51) {
    uint64_t v52 = 0;
  }
  uint64_t v54 = 2 * v50;
  if (!v53) {
    v54 |= 4uLL;
  }
  unint64_t v55 = ((a1 >> 2) & 0x3FFFFFFFFLL) + 4 * (v51 - v52);
  uint64_t v56 = v54 | 1;
  BOOL v57 = (v54 | 1uLL) > v55;
  if ((v54 | 1uLL) > v55) {
    uint64_t v56 = 0;
  }
  unint64_t v58 = 2 * v54;
  if (!v57) {
    v58 |= 4uLL;
  }
  return (__int16)((v58 >> 1) | ((v58 | 1) <= (a1 & 0x3FFFFFFFFLL) + 4 * (v55 - v56)));
}

uint64_t sub_100394428(int64_t a1, _WORD *a2)
{
  if (a1 < 1)
  {
    uint64_t result = 0x40000000;
    *a2 = 0;
  }
  else
  {
    __int16 v4 = sub_100392328(a1);
    unint64_t v5 = a1 << v4 >> (((30 - v4) & 1) == 0);
    int v6 = ((__int16)(30 - v4) >> 1) + 1;
    uint64_t v7 = (v5 >> 10) & 0x7FFF;
    uint64_t v8 = (__int16 *)((char *)&unk_101D1C27E + 2 * ((uint64_t)((v5 << 23) - 0x10000000000000) >> 48));
    uint64_t result = (((uint64_t)*v8 << 16) - 2 * (__int16)(*v8 - v8[1]) * (uint64_t)(int)v7) >> v6;
    *a2 = v6;
  }
  return result;
}

uint64_t sub_1003944D0(uint64_t result, int a2, int a3, uint64_t a4)
{
  if (a3 >= 1 && a2 >= a3)
  {
    for (int i = (__int16)(a2 - 1); i >= a3; int i = (__int16)(i - 1))
    {
      uint64_t v5 = a4 + 6 * (__int16)i;
      int v6 = (int *)(a4 + 6 * ((__int16)i - a3));
      int v7 = *v6;
      *(_WORD *)(v5 + 4) = *((_WORD *)v6 + 2);
      *(_DWORD *)uint64_t v5 = v7;
    }
    do
    {
      uint64_t v8 = 6 * (unsigned __int16)--a3;
      int v9 = *(_DWORD *)(result + v8);
      __int16 v10 = *(_WORD *)(result + v8 + 4);
      uint64_t v11 = a4 + v8;
      *(_WORD *)(v11 + 4) = v10;
      *(_DWORD *)uint64_t v11 = v9;
    }
    while ((_WORD)a3);
  }
  return result;
}

__int16 *sub_100394568(__int16 *result, int a2, __int16 *a3, __int16 *a4, _WORD *a5, _WORD *a6)
{
  *a4 = *result;
  __int16 v6 = *result;
  *a3 = *result;
  if (a2 > 1)
  {
    int v7 = result + 3;
    uint64_t v8 = (unsigned __int16)a2 - 1;
    uint64_t v9 = v8;
    while (1)
    {
      int v10 = *v7;
      if (v10 < *a4)
      {
        *a4 = v10;
        LOWORD(v10) = *v7;
        __int16 v6 = *a3;
        if (*v7 > *a3)
        {
LABEL_8:
          *a3 = v10;
          __int16 v6 = v10;
        }
      }
      else if ((__int16)v10 > v6)
      {
        goto LABEL_8;
      }
      v7 += 3;
      if (!--v9)
      {
        int v22 = (*a4 >> 1) + (v6 >> 1);
        *a5 = (*a4 >> 1) + (v6 >> 1);
        __int16 v23 = *a3;
        if (*a3 & 1) != 0 || (__int16 v24 = *a4, (*a4))
        {
          *a5 = v22 + 1;
          __int16 v23 = *a3;
          __int16 v24 = *a4;
        }
        unsigned int v25 = (unsigned __int16)(v23 - v24);
        if (v25 >= 0x7FFF) {
          LOWORD(v25) = 0x7FFF;
        }
        *a6 = v25;
        a4[1] = result[1];
        __int16 v26 = result[1];
        a3[1] = v26;
        unint64_t v27 = result + 4;
        uint64_t v28 = (unsigned __int16)a2 - 1;
        while (2)
        {
          int v29 = *v27;
          if (v29 < a4[1])
          {
            a4[1] = v29;
            LOWORD(v29) = *v27;
            __int16 v26 = a3[1];
            if (*v27 > v26) {
              goto LABEL_32;
            }
          }
          else if ((__int16)v29 > v26)
          {
LABEL_32:
            a3[1] = v29;
            __int16 v26 = v29;
          }
          v27 += 3;
          if (--v28) {
            continue;
          }
          break;
        }
        int v30 = (a4[1] >> 1) + (v26 >> 1);
        a5[1] = (a4[1] >> 1) + (v26 >> 1);
        __int16 v31 = a3[1];
        if (v31 & 1) != 0 || (__int16 v32 = a4[1], (v32))
        {
          a5[1] = v30 + 1;
          __int16 v31 = a3[1];
          __int16 v32 = a4[1];
        }
        unsigned int v33 = (unsigned __int16)(v31 - v32);
        if (v33 >= 0x7FFF) {
          LOWORD(v33) = 0x7FFF;
        }
        a6[1] = v33;
        a4[2] = result[2];
        __int16 v34 = result[2];
        a3[2] = v34;
        unint64_t v35 = result + 5;
        while (2)
        {
          int v36 = *v35;
          if (v36 < a4[2])
          {
            a4[2] = v36;
            LOWORD(v36) = *v35;
            __int16 v34 = a3[2];
            if (*v35 > v34) {
              goto LABEL_44;
            }
          }
          else if ((__int16)v36 > v34)
          {
LABEL_44:
            a3[2] = v36;
            __int16 v34 = v36;
          }
          v35 += 3;
          if (!--v8)
          {
            int v20 = (a4[2] >> 1) + (v34 >> 1);
            a5[2] = v20;
            uint64_t v21 = (unsigned __int16)a3[2];
            if ((v21 & 1) == 0) {
              goto LABEL_46;
            }
LABEL_47:
            a5[2] = v20 + 1;
            LOWORD(v21) = a3[2];
            __int16 v37 = a4[2];
            goto LABEL_48;
          }
          continue;
        }
      }
    }
  }
  int v11 = (*a4 >> 1) + (v6 >> 1);
  *a5 = (*a4 >> 1) + (v6 >> 1);
  __int16 v12 = *a3;
  if (*a3 & 1) != 0 || (__int16 v13 = *a4, (*a4))
  {
    *a5 = v11 + 1;
    __int16 v12 = *a3;
    __int16 v13 = *a4;
  }
  unsigned int v14 = (unsigned __int16)(v12 - v13);
  if (v14 >= 0x7FFF) {
    LOWORD(v14) = 0x7FFF;
  }
  *a6 = v14;
  a4[1] = result[1];
  int v15 = result[1];
  a3[1] = v15;
  int v16 = (a4[1] >> 1) + (v15 >> 1);
  a5[1] = (a4[1] >> 1) + (v15 >> 1);
  __int16 v17 = a3[1];
  if (v17 & 1) != 0 || (__int16 v18 = a4[1], (v18))
  {
    a5[1] = v16 + 1;
    __int16 v17 = a3[1];
    __int16 v18 = a4[1];
  }
  unsigned int v19 = (unsigned __int16)(v17 - v18);
  if (v19 >= 0x7FFF) {
    LOWORD(v19) = 0x7FFF;
  }
  a6[1] = v19;
  a4[2] = result[2];
  LODWORD(v21) = result[2];
  a3[2] = v21;
  int v20 = (a4[2] >> 1) + ((int)v21 >> 1);
  a5[2] = (a4[2] >> 1) + ((int)v21 >> 1);
  LOWORD(v21) = a3[2];
  if (v21) {
    goto LABEL_47;
  }
LABEL_46:
  __int16 v37 = a4[2];
  if (v37) {
    goto LABEL_47;
  }
LABEL_48:
  unsigned int v38 = (unsigned __int16)(v21 - v37);
  if (v38 >= 0x7FFF) {
    LOWORD(v38) = 0x7FFF;
  }
  a6[2] = v38;
  return result;
}

void sub_100394870(uint64_t a1, uint64_t a2, float *a3, float *a4, float *a5, float *a6)
{
  if (*(unsigned char *)(a2 + 63))
  {
    *a3 = *(float *)(a2 + 20) + *a3;
    *a4 = *(float *)(a2 + 24) + *a4;
    *a5 = *(float *)(a2 + 28) + *a5;
  }
  if (*(unsigned char *)(a2 + 64)) {
    float v6 = (float)((float)(*(float *)(a2 + 36) * *(float *)(a2 + 36)) + (float)(*(float *)(a2 + 32) * *(float *)(a2 + 32)))
  }
       + (float)(*(float *)(a2 + 40) * *(float *)(a2 + 40));
  else {
    float v6 = 0.0;
  }
  *a6 = v6;
}

void sub_1003948D4(uint64_t a1, uint64_t *a2)
{
  if (*(unsigned char *)(a1 + 112))
  {
    v17[0] = 0.0;
    uint64_t v3 = *a2;
    uint64_t v4 = a2[1];
    if (*a2 != v4)
    {
      char v5 = 0;
      float v6 = *(float *)(a1 + 148) * *(float *)(a1 + 148);
      do
      {
        sub_100394870(a1, v3, (float *)(a1 + 136), (float *)(a1 + 140), (float *)(a1 + 144), v17);
        v5 |= v17[0] > v6;
        if (v17[0] > v6) {
          float v6 = v17[0];
        }
        v3 += 72;
      }
      while (v3 != v4);
      if (v5) {
        *(float *)(a1 + 148) = sqrtf(v6);
      }
    }
    if (*(double *)(a1 + 184) > 0.0)
    {
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022ACD48);
      }
      int v7 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        double v8 = *(float *)(a1 + 136);
        double v9 = *(float *)(a1 + 140);
        double v10 = *(float *)(a1 + 144);
        double v11 = *(float *)(a1 + 148);
        *(_DWORD *)std::string buf = 134349824;
        double v26 = v8;
        __int16 v27 = 2050;
        double v28 = v9;
        __int16 v29 = 2050;
        double v30 = v10;
        __int16 v31 = 2050;
        double v32 = v11;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,io,cX,%{public}5.1f,cY,%{public}5.1f,cZ,%{public}5.1f,maxV,%{public}4.1lf", buf, 0x2Au);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022ACD48);
        }
        double v12 = *(float *)(a1 + 136);
        double v13 = *(float *)(a1 + 140);
        double v14 = *(float *)(a1 + 144);
        double v15 = *(float *)(a1 + 148);
        v17[1] = 3.9125e-34;
        double v18 = v12;
        __int16 v19 = 2050;
        double v20 = v13;
        __int16 v21 = 2050;
        double v22 = v14;
        __int16 v23 = 2050;
        double v24 = v15;
        int v16 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedIOSamples(const std::vector<CLPIOSample> &)", "%s\n", v16);
        if (v16 != (char *)buf) {
          free(v16);
        }
      }
    }
  }
}

void sub_100394B78(uint64_t a1, int *a2, uint64_t a3)
{
  int v5 = *a2;
  if (*a2 > 0x16) {
    goto LABEL_16;
  }
  if (((1 << v5) & 0x1B) != 0)
  {
    if (*(unsigned __int8 *)(a1 + 129) != *(unsigned __int8 *)(a3 + 768)
      || (int v7 = sub_100BCE2EC(a1 + 224), v7 != sub_100BCE2EC(a3)))
    {
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022ACD48);
      }
      double v8 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        int v9 = *a2;
        int v10 = sub_100BCE2EC(a3);
        int v11 = *(unsigned __int8 *)(a3 + 768);
        int v12 = *(unsigned __int8 *)(a1 + 42);
        uint64_t v13 = *(void *)(a3 + 504);
        *(_DWORD *)std::string buf = 67241216;
        int v35 = v9;
        __int16 v36 = 1026;
        int v37 = v10;
        __int16 v38 = 1026;
        int v39 = v11;
        __int16 v40 = 1026;
        int v41 = v12;
        __int16 v42 = 2050;
        uint64_t v43 = v13;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,wifi,notification,%{public}d,isLatLonAltValid,%{public}d,isWifiFixWithAssociatedAp,%{public}d,fIsAssociatedToStaticWiFiAP,%{public}d,mct,%{public}.3lf", buf, 0x24u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022ACD48);
        }
        sub_100BCE2EC(a3);
        double v32 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedWifiLocation(const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v32);
        if (v32 != (char *)buf) {
          free(v32);
        }
      }
    }
    int v14 = sub_100BCE2EC(a3);
    char v15 = *(unsigned char *)(a3 + 768);
    double v16 = *(double *)(a3 + 504);
    if (!v14)
    {
      char v15 = 0;
      double v16 = -1.0;
    }
    *(unsigned char *)(a1 + 129) = v15;
    *(double *)(a1 + 208) = v16;
    long long v17 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)a3;
    *(_OWORD *)(a1 + 240) = v17;
    long long v18 = *(_OWORD *)(a3 + 80);
    long long v20 = *(_OWORD *)(a3 + 32);
    long long v19 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a3 + 64);
    *(_OWORD *)(a1 + 304) = v18;
    *(_OWORD *)(a1 + 256) = v20;
    *(_OWORD *)(a1 + 272) = v19;
    long long v22 = *(_OWORD *)(a3 + 112);
    long long v21 = *(_OWORD *)(a3 + 128);
    long long v23 = *(_OWORD *)(a3 + 96);
    *(_OWORD *)(a1 + 364) = *(_OWORD *)(a3 + 140);
    *(_OWORD *)(a1 + 336) = v22;
    *(_OWORD *)(a1 + 352) = v21;
    *(_OWORD *)(a1 + 320) = v23;
    if (*(double *)(a1 + 48) <= 0.0) {
      *(void *)(a1 + 48) = *(void *)(a3 + 504);
    }
    return;
  }
  if (v5 != 9)
  {
    if (v5 == 22) {
      return;
    }
LABEL_16:
    if (*(double *)(a1 + 184) > 0.0)
    {
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022ACD48);
      }
      double v24 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        int v25 = *a2;
        *(_DWORD *)std::string buf = 67240192;
        int v35 = v25;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,wifi,unhandled notification,%{public}d", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 == -1)
        {
LABEL_36:
          unsigned int v33 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedWifiLocation(const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v33);
          if (v33 != (char *)buf) {
            free(v33);
          }
          return;
        }
LABEL_38:
        dispatch_once(&qword_102419380, &stru_1022ACD48);
        goto LABEL_36;
      }
    }
    return;
  }
  *(_DWORD *)(a1 + 224) = 0xFFFF;
  *(void *)(a1 + 236) = 0;
  *(void *)(a1 + 228) = 0;
  *(_OWORD *)(a1 + 244) = xmmword_101D1C320;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 260) = _Q0;
  *(_OWORD *)(a1 + 276) = _Q0;
  *(_OWORD *)(a1 + 292) = _Q0;
  *(_DWORD *)(a1 + 308) = 0;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 312) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 336) = 0;
  *(void *)(a1 + 340) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 348) = 0x7FFFFFFF;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = 0;
  *(void *)(a1 + 352) = 0;
  *(unsigned char *)(a1 + 376) = 0;
  *(unsigned char *)(a1 + 129) = 0;
  *(void *)&_Q0 = *(void *)(a1 + 184);
  *(void *)(a1 + 208) = 0xBFF0000000000000;
  if (*(double *)&_Q0 > 0.0)
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD48);
    }
    __int16 v31 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,wifi,unavailable", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 == -1) {
        goto LABEL_36;
      }
      goto LABEL_38;
    }
  }
}

void sub_100395124(uint64_t a1, int *a2, uint64_t a3)
{
  int v4 = *a2;
  if (*a2 > 9) {
    goto LABEL_15;
  }
  if (((1 << v4) & 0x1B) != 0)
  {
    int v7 = sub_100BCE2EC(a3);
    double v8 = *(double *)(a3 + 504);
    if (!v7) {
      double v8 = -1.0;
    }
    *(double *)(a1 + 216) = v8;
    long long v9 = *(_OWORD *)(a3 + 96);
    long long v10 = *(_OWORD *)(a3 + 112);
    long long v11 = *(_OWORD *)(a3 + 128);
    *(_OWORD *)(a1 + 520) = *(_OWORD *)(a3 + 140);
    *(_OWORD *)(a1 + 492) = v10;
    *(_OWORD *)(a1 + 508) = v11;
    *(_OWORD *)(a1 + 476) = v9;
    long long v12 = *(_OWORD *)(a3 + 32);
    long long v13 = *(_OWORD *)(a3 + 48);
    long long v14 = *(_OWORD *)(a3 + 80);
    *(_OWORD *)(a1 + 444) = *(_OWORD *)(a3 + 64);
    *(_OWORD *)(a1 + 460) = v14;
    *(_OWORD *)(a1 + 412) = v12;
    *(_OWORD *)(a1 + 428) = v13;
    long long v15 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(a1 + 380) = *(_OWORD *)a3;
    *(_OWORD *)(a1 + 396) = v15;
    return;
  }
  if (v4 == 9)
  {
    *(_DWORD *)(a1 + 380) = 0xFFFF;
    *(void *)(a1 + 384) = 0;
    *(void *)(a1 + 392) = 0;
    __asm { FMOV            V1.2D, #-1.0 }
    *(_OWORD *)(a1 + 400) = xmmword_101D1C320;
    *(_OWORD *)(a1 + 416) = _Q1;
    *(_OWORD *)(a1 + 432) = _Q1;
    *(_OWORD *)(a1 + 448) = _Q1;
    *(_DWORD *)(a1 + 464) = 0;
    *(_DWORD *)(a1 + 492) = 0;
    *(void *)(a1 + 476) = 0;
    *(void *)(a1 + 484) = 0;
    *(void *)(a1 + 468) = 0xBFF0000000000000;
    *(void *)(a1 + 496) = 0xBFF0000000000000;
    *(_DWORD *)(a1 + 504) = 0x7FFFFFFF;
    *(unsigned char *)(a1 + 532) = 0;
    *(void *)(a1 + 516) = 0;
    *(void *)(a1 + 524) = 0;
    *(void *)(a1 + 508) = 0;
    *(void *)(a1 + 216) = 0xBFF0000000000000;
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD48);
    }
    long long v21 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,gps,unavailable", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 == -1)
      {
LABEL_21:
        double v24 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedGpsLocation(const CLLocationProvider_Type::Notification &, const CLLocationProvider_Type::NotificationData &)", "%s\n", v24);
        if (v24 != (char *)buf) {
          free(v24);
        }
        return;
      }
LABEL_23:
      dispatch_once(&qword_102419380, &stru_1022ACD48);
      goto LABEL_21;
    }
  }
  else
  {
LABEL_15:
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD48);
    }
    long long v22 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      int v23 = *a2;
      *(_DWORD *)std::string buf = 67240192;
      int v26 = v23;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,gps,unhandled notification,%{public}d", buf, 8u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 == -1) {
        goto LABEL_21;
      }
      goto LABEL_23;
    }
  }
}

void sub_100395480(uint64_t a1, int a2, int a3)
{
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022ACD48);
  }
  float v6 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67240448;
    int v19 = a2;
    __int16 v20 = 1026;
    int v21 = a3;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,isGpsHWActive,%{public}d,didStatusChange,%{public}d", buf, 0xEu);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD48);
    }
    long long v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedGpsStatusNotification(const BOOL, const BOOL)", "%s\n", v15);
    if (v15 != (char *)buf) {
      free(v15);
    }
  }
  if (a3)
  {
    if (a2)
    {
      sub_1003960A4(a1 + 128);
      uint64_t v7 = sub_10016BA10();
      *(_DWORD *)std::string buf = 1;
      *(double *)(a1 + 184) = sub_10016BA54(v7, buf);
      int v8 = *(unsigned __int8 *)(a1 + 41);
      *(unsigned char *)(a1 + 134) = v8;
      if (!v8)
      {
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022ACD48);
        }
        long long v9 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,session started outside location controller", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022ACD48);
          }
          double v16 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedGpsStatusNotification(const BOOL, const BOOL)", "%s\n", v16);
          if (v16 != (char *)buf) {
            free(v16);
          }
        }
      }
      double v10 = *(double *)(a1 + 120);
      BOOL v11 = v10 > 0.0 && *(double *)(a1 + 184) - v10 > 15.0;
      *(unsigned char *)(a1 + 128) = v11;
      *(unsigned char *)(a1 + 132) = *(unsigned char *)(a1 + 80);
      *(unsigned char *)(a1 + 131) = *(unsigned char *)(a1 + 64);
      return;
    }
    uint64_t v12 = sub_10016BA10();
    *(_DWORD *)std::string buf = 1;
    *(double *)(a1 + 200) = sub_10016BA54(v12, buf);
    sub_100395A20(a1);
    sub_1003960A4(a1 + 128);
    if (*(unsigned char *)(a1 + 40))
    {
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022ACD48);
      }
      long long v13 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,ending session without resetting IO", buf, 2u);
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_31;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102419380 == -1)
      {
LABEL_42:
        long long v17 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedGpsStatusNotification(const BOOL, const BOOL)", "%s\n", v17);
        if (v17 != (char *)buf) {
          free(v17);
        }
LABEL_31:
        *(unsigned char *)(a1 + 41) = 0;
        return;
      }
    }
    else
    {
      *(void *)(a1 + 136) = 0;
      *(void *)(a1 + 144) = 0;
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022ACD48);
      }
      long long v14 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,ending session and resetting IO", buf, 2u);
      }
      if (!sub_10013D1A0(115, 2)) {
        goto LABEL_31;
      }
      bzero(buf, 0x65CuLL);
      if (qword_102419380 == -1) {
        goto LABEL_42;
      }
    }
    dispatch_once(&qword_102419380, &stru_1022ACD48);
    goto LABEL_42;
  }
}

void sub_100395A20(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 168);
  if (v1 && *(unsigned char *)(a1 + 43))
  {
    uint64_t v3 = (unsigned __int16 *)(a1 + 536);
    ++*(_WORD *)(a1 + 546);
    *(_DWORD *)(a1 + 564) += *(_DWORD *)(a1 + 172);
    *(_WORD *)(a1 + 536) += *(_WORD *)(a1 + 176);
    int v4 = *(_DWORD *)(a1 + 160);
    int v5 = *(_DWORD *)(a1 + 164);
    *(_DWORD *)(a1 + 568) += v4;
    int v6 = *(_DWORD *)(a1 + 572);
    *(_DWORD *)(a1 + 560) += v1;
    *(_DWORD *)(a1 + 676) += v5;
    *(_WORD *)(a1 + 544) += *(unsigned __int8 *)(a1 + 133);
    int32x2_t v7 = *(int32x2_t *)(a1 + 152);
    *(_DWORD *)(a1 + 572) = v7.i32[0] - v4 + v6;
    *(int32x2_t *)(a1 + 580) = vadd_s32(*(int32x2_t *)(a1 + 580), v7);
    if (*(unsigned char *)(a1 + 134)) {
      ++*(_WORD *)(a1 + 548);
    }
    if (*(unsigned char *)(a1 + 128)) {
      ++*(_WORD *)(a1 + 538);
    }
    if (*(unsigned char *)(a1 + 131))
    {
      ++*(_WORD *)(a1 + 540);
      if (!v7.i32[1])
      {
        if (!*(unsigned char *)(a1 + 132))
        {
LABEL_76:
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022ACD48);
          }
          __int16 v20 = qword_102419388;
          if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
          {
            int v21 = *(_DWORD *)(a1 + 152);
            int v22 = *(_DWORD *)(a1 + 580);
            *(_DWORD *)std::string buf = 67240448;
            *(_DWORD *)&uint8_t buf[4] = v21;
            __int16 v26 = 1026;
            int v27 = v22;
            _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,addSessionCountsToCA,fSessionDuration,%{public}d,fCountTotalSeconds,%{public}d", buf, 0xEu);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419380 != -1) {
              dispatch_once(&qword_102419380, &stru_1022ACD48);
            }
            double v24 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::addSessionCountsToCAandSubmit()", "%s\n", v24);
            if (v24 != (char *)buf) {
              free(v24);
            }
          }
          uint64_t v23 = sub_10016BA10();
          *(_DWORD *)std::string buf = 1;
          *(void *)std::string buf = sub_10016BA54(v23, buf);
          sub_1003986D8(v3, (double *)buf);
          return;
        }
        long long v14 = (_WORD *)(a1 + 542);
LABEL_75:
        ++*v14;
        goto LABEL_76;
      }
      double v8 = *(double *)(a1 + 72);
      double v9 = v8 - *(double *)(a1 + 192);
      double v10 = *(double *)(a1 + 200) - v8;
      if (v9 >= 0.0)
      {
        if (v9 >= 5.0)
        {
          if (v9 >= 10.0)
          {
            if (v9 >= 30.0)
            {
              if (v9 >= 60.0)
              {
                if (v9 >= 90.0) {
                  BOOL v11 = (_WORD *)(a1 + 720);
                }
                else {
                  BOOL v11 = (_WORD *)(a1 + 718);
                }
              }
              else
              {
                BOOL v11 = (_WORD *)(a1 + 716);
              }
            }
            else
            {
              BOOL v11 = (_WORD *)(a1 + 714);
            }
          }
          else
          {
            BOOL v11 = (_WORD *)(a1 + 712);
          }
        }
        else
        {
          BOOL v11 = (_WORD *)(a1 + 710);
        }
      }
      else
      {
        BOOL v11 = (_WORD *)(a1 + 708);
      }
      ++*v11;
      if (v10 >= 0.0)
      {
        if (v10 >= 5.0)
        {
          if (v10 >= 10.0)
          {
            if (v10 >= 30.0)
            {
              if (v10 >= 60.0)
              {
                if (v10 >= 90.0) {
                  long long v15 = (_WORD *)(a1 + 734);
                }
                else {
                  long long v15 = (_WORD *)(a1 + 732);
                }
              }
              else
              {
                long long v15 = (_WORD *)(a1 + 730);
              }
            }
            else
            {
              long long v15 = (_WORD *)(a1 + 728);
            }
          }
          else
          {
            long long v15 = (_WORD *)(a1 + 726);
          }
        }
        else
        {
          long long v15 = (_WORD *)(a1 + 724);
        }
      }
      else
      {
        long long v15 = (_WORD *)(a1 + 722);
      }
      ++*v15;
    }
    if (!*(unsigned char *)(a1 + 132)) {
      goto LABEL_76;
    }
    ++*(_WORD *)(a1 + 542);
    if (!v7.i32[1]) {
      goto LABEL_76;
    }
    double v16 = *(double *)(a1 + 88);
    double v17 = v16 - *(double *)(a1 + 192);
    double v18 = *(double *)(a1 + 200) - v16;
    if (v17 >= 0.0)
    {
      if (v17 >= 5.0)
      {
        if (v17 >= 10.0)
        {
          if (v17 >= 30.0)
          {
            if (v17 >= 60.0)
            {
              if (v17 >= 90.0) {
                int v19 = (_WORD *)(a1 + 692);
              }
              else {
                int v19 = (_WORD *)(a1 + 690);
              }
            }
            else
            {
              int v19 = (_WORD *)(a1 + 688);
            }
          }
          else
          {
            int v19 = (_WORD *)(a1 + 686);
          }
        }
        else
        {
          int v19 = (_WORD *)(a1 + 684);
        }
      }
      else
      {
        int v19 = (_WORD *)(a1 + 682);
      }
    }
    else
    {
      int v19 = (_WORD *)(a1 + 680);
    }
    ++*v19;
    if (v18 >= 0.0)
    {
      if (v18 >= 5.0)
      {
        if (v18 >= 10.0)
        {
          if (v18 >= 30.0)
          {
            if (v18 >= 60.0)
            {
              if (v18 >= 90.0) {
                long long v14 = (_WORD *)(a1 + 706);
              }
              else {
                long long v14 = (_WORD *)(a1 + 704);
              }
            }
            else
            {
              long long v14 = (_WORD *)(a1 + 702);
            }
          }
          else
          {
            long long v14 = (_WORD *)(a1 + 700);
          }
        }
        else
        {
          long long v14 = (_WORD *)(a1 + 698);
        }
      }
      else
      {
        long long v14 = (_WORD *)(a1 + 696);
      }
    }
    else
    {
      long long v14 = (_WORD *)(a1 + 694);
    }
    goto LABEL_75;
  }
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022ACD48);
  }
  uint64_t v12 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,addSessionCountsToCA,nothing to submit,fCountStationaryWithPersonalizedWifiAP,0", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD48);
    }
    long long v13 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::addSessionCountsToCAandSubmit()", "%s\n", v13);
    if (v13 != (char *)buf) {
      free(v13);
    }
  }
}

uint64_t sub_1003960A4(uint64_t a1)
{
  *(_DWORD *)(a1 + 3) = 0;
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 48) = 0;
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)(a1 + 56) = _Q0;
  *(_OWORD *)(a1 + 72) = _Q0;
  *(void *)(a1 + 88) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 96) = 0xFFFF;
  *(void *)(a1 + 108) = 0;
  *(void *)(a1 + 100) = 0;
  *(_OWORD *)(a1 + 116) = xmmword_101D1C320;
  *(_OWORD *)(a1 + 132) = _Q0;
  *(_OWORD *)(a1 + 148) = _Q0;
  *(_OWORD *)(a1 + 164) = _Q0;
  *(_DWORD *)(a1 + 180) = 0;
  *(void *)(a1 + 184) = 0xBFF0000000000000;
  *(_DWORD *)(a1 + 252) = 0xFFFF;
  uint64_t result = a1 + 252;
  *(void *)(result - 52) = 0;
  *(void *)(result - 60) = 0;
  *(_DWORD *)(result - 44) = 0;
  *(void *)(result - 40) = 0xBFF0000000000000;
  *(_DWORD *)(result - 32) = 0x7FFFFFFF;
  *(void *)(result - 12) = 0;
  *(void *)(result - 28) = 0;
  *(void *)(result - 20) = 0;
  *(unsigned char *)(result - 4) = 0;
  *(void *)(result + 4) = 0;
  *(void *)(result + 12) = 0;
  *(_OWORD *)(result + 20) = xmmword_101D1C320;
  *(_OWORD *)(result + 36) = _Q0;
  *(_OWORD *)(result + 52) = _Q0;
  *(_OWORD *)(result + 68) = _Q0;
  *(_DWORD *)(result + 84) = 0;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = 0;
  *(void *)(result + 88) = 0xBFF0000000000000;
  *(_DWORD *)(result + 112) = 0;
  *(void *)(result + 116) = 0xBFF0000000000000;
  *(_DWORD *)(result + 124) = 0x7FFFFFFF;
  *(unsigned char *)(result + 152) = 0;
  *(void *)(result + 136) = 0;
  *(void *)(result + 144) = 0;
  *(void *)(result + 128) = 0;
  return result;
}

void sub_100396168(uint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *a3;
  if (*a3 > 40)
  {
    if (v5 == 41)
    {
LABEL_21:
      if (!*(unsigned char *)(a1 + 96))
      {
        uint64_t v14 = sub_10016BA10();
        *(_DWORD *)std::string buf = 1;
        double v15 = sub_10016BA54(v14, buf);
        *(unsigned char *)(a1 + 96) = 1;
        *(double *)(a1 + 104) = v15;
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022ACD48);
        }
        double v16 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
        {
          int v17 = *a3;
          *(_DWORD *)std::string buf = 67240192;
          int v34 = v17;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,walking,%{public}d", buf, 8u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022ACD48);
          }
          __int16 v31 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v31);
          if (v31 != (char *)buf) {
            free(v31);
          }
        }
      }
      *(unsigned char *)(a1 + 112) = 0;
      *(void *)(a1 + 120) = 0xBFF0000000000000;
      *(unsigned char *)(a1 + 80) = 0;
      *(void *)(a1 + 88) = 0xBFF0000000000000;
      *(unsigned char *)(a1 + 64) = 0;
      *(void *)(a1 + 72) = 0xBFF0000000000000;
    }
    else if (v5 == 52 || v5 == 56)
    {
LABEL_13:
      if (!*(unsigned char *)(a1 + 80))
      {
        uint64_t v10 = sub_10016BA10();
        *(_DWORD *)std::string buf = 1;
        double v11 = sub_10016BA54(v10, buf);
        *(unsigned char *)(a1 + 80) = 1;
        *(double *)(a1 + 88) = v11;
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022ACD48);
        }
        uint64_t v12 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
        {
          int v13 = *a3;
          *(_DWORD *)std::string buf = 67240192;
          int v34 = v13;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,driving,%{public}d", buf, 8u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022ACD48);
          }
          double v30 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v30);
          if (v30 != (char *)buf) {
            free(v30);
          }
        }
      }
      *(unsigned char *)(a1 + 112) = 0;
      *(void *)(a1 + 120) = 0xBFF0000000000000;
      *(unsigned char *)(a1 + 64) = 0;
      *(void *)(a1 + 72) = 0xBFF0000000000000;
      *(unsigned char *)(a1 + 96) = 0;
      *(void *)(a1 + 104) = 0xBFF0000000000000;
      if (*(double *)(a1 + 184) > 0.0) {
        *(unsigned char *)(a1 + 132) = 1;
      }
    }
    else
    {
LABEL_35:
      if (!*(unsigned char *)(a1 + 64))
      {
        uint64_t v24 = sub_10016BA10();
        *(_DWORD *)std::string buf = 1;
        double v25 = sub_10016BA54(v24, buf);
        *(unsigned char *)(a1 + 64) = 1;
        *(double *)(a1 + 72) = v25;
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022ACD48);
        }
        __int16 v26 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
        {
          int v27 = *a3;
          *(_DWORD *)std::string buf = 67240192;
          int v34 = v27;
          _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,fitness,%{public}d", buf, 8u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022ACD48);
          }
          double v32 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v32);
          if (v32 != (char *)buf) {
            free(v32);
          }
        }
      }
      *(unsigned char *)(a1 + 112) = 0;
      *(void *)(a1 + 120) = 0xBFF0000000000000;
      *(unsigned char *)(a1 + 80) = 0;
      *(void *)(a1 + 88) = 0xBFF0000000000000;
      *(unsigned char *)(a1 + 96) = 0;
      *(void *)(a1 + 104) = 0xBFF0000000000000;
      if (*(double *)(a1 + 184) > 0.0) {
        *(unsigned char *)(a1 + 131) = 1;
      }
    }
  }
  else
  {
    switch(v5)
    {
      case 0:
        break;
      case 1:
      case 2:
      case 3:
      case 7:
      case 9:
        if (!*(unsigned char *)(a1 + 112))
        {
          uint64_t v6 = sub_10016BA10();
          *(_DWORD *)std::string buf = 1;
          double v7 = sub_10016BA54(v6, buf);
          *(unsigned char *)(a1 + 112) = 1;
          *(double *)(a1 + 120) = v7;
          *(void *)(a1 + 136) = 0;
          *(void *)(a1 + 144) = 0;
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022ACD48);
          }
          double v8 = qword_102419388;
          if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
          {
            int v9 = *a3;
            *(_DWORD *)std::string buf = 67240192;
            int v34 = v9;
            _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,plausibly_stationary,%{public}d", buf, 8u);
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419380 != -1) {
              dispatch_once(&qword_102419380, &stru_1022ACD48);
            }
            __int16 v29 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v29);
            if (v29 != (char *)buf) {
              free(v29);
            }
          }
        }
        *(unsigned char *)(a1 + 80) = 0;
        *(void *)(a1 + 88) = 0xBFF0000000000000;
        *(unsigned char *)(a1 + 64) = 0;
        *(void *)(a1 + 72) = 0xBFF0000000000000;
        *(unsigned char *)(a1 + 96) = 0;
        *(void *)(a1 + 104) = 0xBFF0000000000000;
        break;
      case 4:
        goto LABEL_21;
      case 5:
      case 10:
      case 11:
        goto LABEL_13;
      default:
        goto LABEL_35;
    }
  }
  if (*(double *)(a1 + 184) > 0.0)
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD48);
    }
    double v18 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      int v19 = *a3;
      int v20 = *(unsigned __int8 *)(a1 + 112);
      int v21 = *(unsigned __int8 *)(a1 + 132);
      int v22 = *(unsigned __int8 *)(a1 + 131);
      int v23 = *(unsigned __int8 *)(a1 + 96);
      *(_DWORD *)std::string buf = 67241216;
      int v34 = v19;
      __int16 v35 = 1026;
      int v36 = v20;
      __int16 v37 = 1026;
      int v38 = v21;
      __int16 v39 = 1026;
      int v40 = v22;
      __int16 v41 = 1026;
      int v42 = v23;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,raw,motion,%{public}d,fPlausiblyStationary,%{public}d,fWasDriving,%{public}d,fWasFitness,%{public}d,fIsWalking,%{public}d", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022ACD48);
      }
      double v28 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedMotionNotification(const CLMotionState_Type::Notification &, const CLMotionState_Type::NotificationData &)", "%s\n", v28);
      if (v28 != (char *)buf) {
        free(v28);
      }
    }
  }
}

void sub_100396A88(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  if (*a2 == 6)
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD48);
    }
    double v7 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      if (*(unsigned char *)(a3 + 96)) {
        BOOL v8 = *(_DWORD *)(a3 + 48) <= 0;
      }
      else {
        BOOL v8 = 1;
      }
      int v9 = !v8;
      int v10 = *(unsigned __int8 *)(a3 + 73);
      *(_DWORD *)std::string buf = 67240448;
      int v19 = v9;
      __int16 v20 = 1026;
      int v21 = v10;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,wifi link status changed,isAssociated,%{public}d,isMoving,%{public}d", buf, 0xEu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022ACD48);
      }
      int v17 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedWiFiServiceNotification(const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v17);
      if (v17 != (char *)buf) {
        free(v17);
      }
    }
    if (*(unsigned char *)(a3 + 96))
    {
      int v11 = *(_DWORD *)(a3 + 48);
      BOOL v12 = v11 > 0;
      if (*(unsigned char *)(a3 + 73)) {
        BOOL v12 = 0;
      }
      *(unsigned char *)(a1 + 42) = v12;
      if (v11 > 0)
      {
        uint64_t v13 = sub_10016BA10();
        *(_DWORD *)std::string buf = 1;
        *(double *)(a1 + 48) = sub_10016BA54(v13, buf);
        goto LABEL_33;
      }
    }
    else
    {
      *(unsigned char *)(a1 + 42) = 0;
    }
    *(void *)(a1 + 48) = 0xBFF0000000000000;
  }
  else
  {
    if (*a2 != 7) {
      goto LABEL_33;
    }
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD48);
    }
    int v4 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,wifi link roam", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022ACD48);
      }
      int v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedWiFiServiceNotification(const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
  }
  if (*(unsigned char *)(a1 + 112) && *(double *)(a1 + 184) > 0.0) {
    ++*(_WORD *)(a1 + 176);
  }
LABEL_33:
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022ACD48);
  }
  uint64_t v14 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    int v15 = *(unsigned __int8 *)(a1 + 42);
    *(_DWORD *)std::string buf = 67240192;
    int v19 = v15;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,wifi,fIsAssociatedToStaticWiFiAP,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD48);
    }
    double v16 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedWiFiServiceNotification(const CLWifiService_Type::Notification &, const CLWifiService_Type::NotificationData &)", "%s\n", v16);
    if (v16 != (char *)buf) {
      free(v16);
    }
  }
}

void sub_100396F80(uint64_t a1)
{
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022ACD48);
  }
  unint64_t v2 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,accessory connected", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD48);
    }
    uint64_t v3 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedAccessoryConnected()", "%s\n", v3);
    if (v3 != (char *)buf) {
      free(v3);
    }
  }
  *(unsigned char *)(a1 + 133) = 1;
}

void sub_10039711C(uint64_t a1)
{
  *(unsigned char *)(a1 + 41) = 1;
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022ACD48);
  }
  int v1 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,session starting from location controller", buf, 2u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD48);
    }
    unint64_t v2 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedSessionStartFromLC()", "%s\n", v2);
    if (v2 != (char *)buf) {
      free(v2);
    }
  }
}

void sub_1003972AC(uint64_t a1, char a2)
{
  *(unsigned char *)(a1 + 43) = a2;
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022ACD48);
  }
  uint64_t v3 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    int v4 = *(unsigned __int8 *)(a1 + 43);
    *(_DWORD *)std::string buf = 67240192;
    int v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,notification,fIsBatteryNotCharging,%{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD48);
    }
    int v5 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::feedBatteryChargingStatus(const BOOL)", "%s\n", v5);
    if (v5 != (char *)buf) {
      free(v5);
    }
  }
}

void sub_100397464(uint64_t a1, double *a2)
{
  if (*(unsigned char *)(a1 + 112))
  {
    double v4 = *(double *)(a1 + 120);
    double v5 = *a2;
    if (v4 <= 0.0) {
      double v6 = 0.0;
    }
    else {
      double v6 = *a2 - v4;
    }
    double v7 = *(double *)(a1 + 208);
    double v8 = v5 - v7;
    if (v7 <= 0.0) {
      double v8 = 65.0;
    }
    if (v6 <= 15.0 && !*(unsigned char *)(a1 + 128)
      || (sqrtf((float)((float)(*(float *)(a1 + 140) * *(float *)(a1 + 140))+ (float)(*(float *)(a1 + 136) * *(float *)(a1 + 136)))+ (float)(*(float *)(a1 + 144) * *(float *)(a1 + 144))) < 5.0? (BOOL v11 = *(float *)(a1 + 148) < 2.0): (BOOL v11 = 0), !v11|| !*(unsigned char *)(a1 + 42)|| !*(unsigned char *)(a1 + 129)|| *(unsigned char *)(a1 + 131)|| *(unsigned char *)(a1 + 132)|| *(unsigned char *)(a1 + 133)|| *(_WORD *)(a1 + 176)|| v8 >= 65.0))
    {
      if (*(unsigned char *)(a1 + 40))
      {
        *(double *)(a1 + 200) = v5;
        *(unsigned char *)(a1 + 40) = 0;
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022ACD48);
        }
        BOOL v12 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_INFO, "#GPSPowerSavings,fCanSafelyTurnOffGps,transition,false", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022ACD48);
          }
          __int16 v39 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::evaluateSessionState(const CFTimeInterval &)", "%s\n", v39);
          if (v39 != (char *)buf) {
            free(v39);
          }
        }
      }
    }
    else
    {
      if (!*(unsigned char *)(a1 + 40))
      {
        *(double *)(a1 + 192) = v5;
        *(unsigned char *)(a1 + 40) = 1;
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022ACD48);
        }
        __int16 v37 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_INFO))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_INFO, "#GPSPowerSavings,fCanSafelyTurnOffGps,transition,true", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022ACD48);
          }
          int v40 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::evaluateSessionState(const CFTimeInterval &)", "%s\n", v40);
          if (v40 != (char *)buf) {
            free(v40);
          }
        }
      }
      ++*(_DWORD *)(a1 + 156);
    }
    sub_100397DC0(a1);
  }
  else if (*(unsigned char *)(a1 + 40))
  {
    *(double *)(a1 + 200) = *a2;
    *(unsigned char *)(a1 + 40) = 0;
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD48);
    }
    int v9 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "#GPSPowerSavings,fCanSafelyTurnOffGps,transition,false", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022ACD48);
      }
      int v10 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::evaluateSessionState(const CFTimeInterval &)", "%s\n", v10);
      if (v10 != (char *)buf) {
        free(v10);
      }
    }
  }
  if (*(_DWORD *)(a1 + 160))
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD48);
    }
    uint64_t v13 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      double v14 = *(double *)(a1 + 120);
      double v15 = -1.0;
      if (v14 <= 0.0) {
        double v16 = -1.0;
      }
      else {
        double v16 = *a2 - v14;
      }
      int v17 = *(unsigned __int8 *)(a1 + 128);
      double v18 = *(double *)(a1 + 184);
      if (v18 <= 0.0) {
        double v19 = -1.0;
      }
      else {
        double v19 = *a2 - v18;
      }
      if (sub_100BCE2EC(a1 + 380) && sub_100BCE2EC(a1 + 224))
      {
        sub_1000F1268((double *)a1, a1 + 380, a1 + 224);
        double v15 = v20;
      }
      double v22 = *(double *)(a1 + 208);
      double v21 = *(double *)(a1 + 216);
      double v23 = *a2 - v21;
      double v24 = *a2 - v22;
      int v25 = *(unsigned __int8 *)(a1 + 112);
      int v26 = *(unsigned __int8 *)(a1 + 42);
      int v27 = *(unsigned __int8 *)(a1 + 129);
      int v28 = *(unsigned __int16 *)(a1 + 176);
      double v29 = -1.0;
      if (v21 <= 0.0) {
        double v23 = -1.0;
      }
      double v30 = *(double *)(a1 + 48);
      int v31 = *(unsigned __int8 *)(a1 + 131);
      int v32 = *(unsigned __int8 *)(a1 + 132);
      int v33 = *(unsigned __int8 *)(a1 + 133);
      int v34 = *(unsigned __int8 *)(a1 + 40);
      double v35 = sqrtf((float)((float)(*(float *)(a1 + 140) * *(float *)(a1 + 140))+ (float)(*(float *)(a1 + 136) * *(float *)(a1 + 136)))+ (float)(*(float *)(a1 + 144) * *(float *)(a1 + 144)));
      if (v22 <= 0.0) {
        double v24 = -1.0;
      }
      if (v30 > 0.0) {
        double v29 = *a2 - v30;
      }
      double v36 = *(float *)(a1 + 148);
      *(_DWORD *)std::string buf = 134353152;
      double v42 = v16;
      __int16 v43 = 1026;
      int v44 = v17;
      __int16 v45 = 2050;
      double v46 = v19;
      __int16 v47 = 2050;
      double v48 = v15;
      __int16 v49 = 1026;
      int v50 = v25;
      __int16 v51 = 1026;
      int v52 = v26;
      __int16 v53 = 1026;
      int v54 = v27;
      __int16 v55 = 1026;
      int v56 = v28;
      __int16 v57 = 2050;
      double v58 = v35;
      __int16 v59 = 2050;
      double v60 = v23;
      __int16 v61 = 2050;
      double v62 = v24;
      __int16 v63 = 2050;
      double v64 = v29;
      __int16 v65 = 2050;
      double v66 = v36;
      __int16 v67 = 1026;
      int v68 = v31;
      __int16 v69 = 1026;
      int v70 = v32;
      __int16 v71 = 1026;
      int v72 = v33;
      __int16 v73 = 1026;
      int v74 = v34;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,status,stationaryTime,%{public}.0lf,startedStationary,%{public}d,gpsOnTime,%{public}.0lf,GpsWiFidist,%{public}.1lf,fPlausiblyStationary,%{public}d,fIsAssocToStaticWiFiAP,%{public}d,fLastWifiFixWithAssocAp,%{public}d,fWifiDorRoams,%{public}d,IODisplacement,%{public}.1lf,ageOfGpsFix,%{public}.0lf,ageOfWifiFix,%{public}.0lf,ageOfWifiLink,%{public}.0lf,maxIOv,%{public}.1lf,fWasFitness,%{public}d,fWasDriving,%{public}d,fIsConVehicleFlag,%{public}d,fCanSafelyTurnOffGps,%{public}d", buf, 0x88u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022ACD48);
      }
      if (sub_100BCE2EC(a1 + 380) && sub_100BCE2EC(a1 + 224)) {
        sub_1000F1268((double *)a1, a1 + 380, a1 + 224);
      }
      int v38 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitor::evaluateSessionState(const CFTimeInterval &)", "%s\n", v38);
      if (v38 != (char *)buf) {
        free(v38);
      }
    }
  }
}

void sub_100397DC0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 112))
  {
    ++*(_DWORD *)(a1 + 160);
    if (*(unsigned char *)(a1 + 42) && *(unsigned char *)(a1 + 129))
    {
      ++*(_DWORD *)(a1 + 168);
      if (!*(unsigned char *)(a1 + 130)) {
        ++*(_DWORD *)(a1 + 576);
      }
      if (*(double *)(a1 + 184) > 0.0 && *(double *)(a1 + 216) <= 0.0) {
        ++*(_DWORD *)(a1 + 164);
      }
      float v2 = sqrtf((float)((float)(*(float *)(a1 + 140) * *(float *)(a1 + 140))+ (float)(*(float *)(a1 + 136) * *(float *)(a1 + 136)))+ (float)(*(float *)(a1 + 144) * *(float *)(a1 + 144)));
      if (v2 >= 1.0)
      {
        if (v2 >= 2.0)
        {
          if (v2 >= 5.0)
          {
            if (v2 >= 10.0)
            {
              if (v2 >= 20.0)
              {
                if (v2 >= 50.0) {
                  ++*(_DWORD *)(a1 + 612);
                }
                else {
                  ++*(_DWORD *)(a1 + 608);
                }
              }
              else
              {
                ++*(_DWORD *)(a1 + 604);
              }
            }
            else
            {
              ++*(_DWORD *)(a1 + 600);
            }
          }
          else
          {
            ++*(_DWORD *)(a1 + 596);
          }
        }
        else
        {
          ++*(_DWORD *)(a1 + 592);
        }
      }
      else
      {
        ++*(_DWORD *)(a1 + 588);
      }
      float v3 = *(float *)(a1 + 148);
      if (v3 >= 1.0)
      {
        if (v3 >= 2.0)
        {
          if (v3 >= 3.0)
          {
            if (v3 >= 4.0)
            {
              if (v3 >= 5.0) {
                ++*(_DWORD *)(a1 + 636);
              }
              else {
                ++*(_DWORD *)(a1 + 632);
              }
            }
            else
            {
              ++*(_DWORD *)(a1 + 628);
            }
          }
          else
          {
            ++*(_DWORD *)(a1 + 624);
          }
        }
        else
        {
          ++*(_DWORD *)(a1 + 620);
        }
      }
      else
      {
        ++*(_DWORD *)(a1 + 616);
      }
      if (sub_100BCE2EC(a1 + 380)
        && *(double *)(a1 + 400) < 100.0
        && sub_100BCE2EC(a1 + 224)
        && *(double *)(a1 + 244) < 100.0)
      {
        sub_1000F1268((double *)a1, a1 + 380, a1 + 224);
        if (v4 >= 5.0)
        {
          if (v4 >= 10.0)
          {
            if (v4 >= 20.0)
            {
              if (v4 >= 50.0)
              {
                if (v4 >= 100.0)
                {
                  if (v4 >= 200.0)
                  {
                    if (v4 >= 500.0)
                    {
                      if (v4 >= 1000.0) {
                        ++*(_DWORD *)(a1 + 672);
                      }
                      else {
                        ++*(_DWORD *)(a1 + 668);
                      }
                    }
                    else
                    {
                      ++*(_DWORD *)(a1 + 664);
                    }
                  }
                  else
                  {
                    ++*(_DWORD *)(a1 + 660);
                  }
                }
                else
                {
                  ++*(_DWORD *)(a1 + 656);
                }
              }
              else
              {
                ++*(_DWORD *)(a1 + 652);
              }
            }
            else
            {
              ++*(_DWORD *)(a1 + 648);
            }
          }
          else
          {
            ++*(_DWORD *)(a1 + 644);
          }
        }
        else
        {
          ++*(_DWORD *)(a1 + 640);
        }
      }
    }
    else
    {
      ++*(_DWORD *)(a1 + 172);
    }
    if (*(_DWORD *)(a1 + 168) && *(unsigned char *)(a1 + 43))
    {
      if (*(unsigned char *)(a1 + 42)) {
        ++*(_DWORD *)(a1 + 552);
      }
      if (*(unsigned char *)(a1 + 129)) {
        ++*(_DWORD *)(a1 + 556);
      }
    }
  }
}

void sub_10039815C(id a1)
{
  qword_102419388 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

uint64_t sub_10039818C(uint64_t a1)
{
  *(void *)(a1 + 6) = 0;
  *(void *)a1 = 0;
  *(_OWORD *)(a1 + 208) = xmmword_101D1C330;
  float v2 = (double *)(a1 + 208);
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 224) = xmmword_101D1C340;
  sub_1000C7F88(buf);
  double v3 = *v2;
  *(void *)double v16 = 0;
  int v4 = sub_1000A699C(*(uint64_t *)buf, "LCStatsSubmitMetricsThrSec", v16);
  double v5 = *(double *)v16;
  if (!v4) {
    double v5 = v3;
  }
  *(double *)(a1 + 200) = v5;
  if (*(void *)&buf[8]) {
    sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
  }
  sub_1000C7F88(buf);
  double v6 = *(double *)(a1 + 224);
  *(void *)double v16 = 0;
  int v7 = sub_1000A699C(*(uint64_t *)buf, "LCStatsSubmitMetricsThrSize", v16);
  double v8 = *(double *)v16;
  if (!v7) {
    double v8 = v6;
  }
  *(double *)(a1 + 216) = v8;
  if (*(void *)&buf[8]) {
    sub_1000DB0A0(*(std::__shared_weak_count **)&buf[8]);
  }
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022ACD68);
  }
  int v9 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v10 = *(void *)(a1 + 200);
    uint64_t v11 = *(void *)(a1 + 216);
    *(_DWORD *)std::string buf = 134349312;
    *(void *)&uint8_t buf[4] = v10;
    *(_WORD *)&unsigned char buf[12] = 2050;
    *(void *)&buf[14] = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,CAStats,fMetricsCollectionDuration,%{public}.0lf,fMetricsMinimumSessionLength,%{public}.0lf", buf, 0x16u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD68);
    }
    uint64_t v13 = *(void *)(a1 + 200);
    uint64_t v14 = *(void *)(a1 + 216);
    *(_DWORD *)double v16 = 134349312;
    *(void *)&void v16[4] = v13;
    __int16 v17 = 2050;
    uint64_t v18 = v14;
    double v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CLGpsPowerSavingsMonitorCAStats::CLGpsPowerSavingsMonitorCAStats()", "%s\n", v15);
    if (v15 != buf) {
      free(v15);
    }
  }
  return a1;
}

void sub_100398434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    sub_1000DB0A0(a16);
  }
  _Unwind_Resume(exception_object);
}

void sub_10039845C(uint64_t a1, unsigned __int16 *a2, uint64_t *a3)
{
  if (qword_102419380 != -1) {
    dispatch_once(&qword_102419380, &stru_1022ACD68);
  }
  double v5 = qword_102419388;
  if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
  {
    double v6 = a3;
    if (*((char *)a3 + 23) < 0) {
      double v6 = (uint64_t *)*a3;
    }
    int v7 = *a2;
    int v8 = a2[1];
    int v9 = a2[2];
    int v10 = a2[3];
    int v11 = a2[4];
    int v12 = a2[5];
    int v13 = a2[6];
    *(_DWORD *)std::string buf = 136448002;
    double v16 = v6;
    __int16 v17 = 1026;
    int v18 = v7;
    __int16 v19 = 1026;
    int v20 = v8;
    __int16 v21 = 1026;
    int v22 = v9;
    __int16 v23 = 1026;
    int v24 = v10;
    __int16 v25 = 1026;
    int v26 = v11;
    __int16 v27 = 1026;
    int v28 = v12;
    __int16 v29 = 1026;
    int v30 = v13;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,submitCAStats,%{public}s,fCountsLT0,%{public}d,fCountsLT5,%{public}d,fCountsLT10,%{public}d,fCountsLT30,%{public}d,fCountsLT60,%{public}d,fCountsLT90,%{public}d,fCountsGE90,%{public}d", buf, 0x36u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD68);
    }
    uint64_t v14 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitorCAStats::debugOutputCounts(const CountSecondsFromThrottleEvent &, const std::string)", "%s\n", v14);
    if (v14 != (char *)buf) {
      free(v14);
    }
  }
}

void sub_1003986D8(unsigned __int16 *a1, double *a2)
{
  double v4 = *a2 - *((double *)a1 + 29);
  if (v4 >= *((double *)a1 + 25))
  {
    if (a1[5]
      && *((_DWORD *)a1 + 4)
      && *((_DWORD *)a1 + 5)
      && *((_DWORD *)a1 + 6)
      && (LODWORD(v4) = *((_DWORD *)a1 + 11), *((double *)a1 + 27) <= (double)*(unint64_t *)&v4))
    {
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022ACD68);
      }
      __int16 v19 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        int v20 = *((_DWORD *)a1 + 5);
        *(_DWORD *)int v152 = *((_DWORD *)a1 + 4);
        int v22 = *((_DWORD *)a1 + 6);
        int v21 = *((_DWORD *)a1 + 7);
        *(_DWORD *)&v152[6] = v20;
        *(_DWORD *)((char *)&v153 + 2) = v22;
        int v23 = *((_DWORD *)a1 + 9);
        *(_DWORD *)uint64_t v154 = *((_DWORD *)a1 + 8);
        *(_DWORD *)&v154[6] = v23;
        int v24 = *((_DWORD *)a1 + 11);
        int v156 = *((_DWORD *)a1 + 10);
        int v158 = v24;
        int v25 = *((_DWORD *)a1 + 13);
        int v160 = *((_DWORD *)a1 + 12);
        int v162 = *a1;
        int v164 = v25;
        int v26 = *((_DWORD *)a1 + 15);
        int v166 = *((_DWORD *)a1 + 14);
        int v168 = v26;
        int v27 = *((_DWORD *)a1 + 17);
        int v170 = *((_DWORD *)a1 + 16);
        int v172 = v27;
        int v28 = *((_DWORD *)a1 + 19);
        int v174 = *((_DWORD *)a1 + 18);
        int v176 = v28;
        int v29 = *((_DWORD *)a1 + 27);
        int v178 = *((_DWORD *)a1 + 26);
        int v180 = v29;
        int v30 = *((_DWORD *)a1 + 29);
        int v182 = *((_DWORD *)a1 + 28);
        int v184 = v30;
        int v31 = *((_DWORD *)a1 + 31);
        int v186 = *((_DWORD *)a1 + 30);
        int v188 = v31;
        int v32 = *((_DWORD *)a1 + 33);
        int v190 = *((_DWORD *)a1 + 32);
        int v192 = v32;
        int v33 = *((_DWORD *)a1 + 35);
        int v194 = *((_DWORD *)a1 + 34);
        int v196 = v33;
        int v198 = a1[1];
        int v200 = a1[2];
        int v202 = a1[3];
        int v204 = a1[4];
        int v206 = a1[5];
        int v208 = a1[6];
        int v210 = v21;
        int v34 = *((_DWORD *)a1 + 21);
        int v212 = *((_DWORD *)a1 + 20);
        int v214 = v34;
        int v35 = *((_DWORD *)a1 + 23);
        int v216 = *((_DWORD *)a1 + 22);
        int v218 = v35;
        int v36 = *((_DWORD *)a1 + 25);
        int v220 = *((_DWORD *)a1 + 24);
        *(_WORD *)&v152[4] = 1026;
        LOWORD(v153) = 1026;
        HIWORD(v153) = 1026;
        *(_WORD *)&v154[4] = 1026;
        __int16 v155 = 1026;
        __int16 v157 = 1026;
        __int16 v159 = 1026;
        __int16 v161 = 1026;
        __int16 v163 = 1026;
        __int16 v165 = 1026;
        __int16 v167 = 1026;
        __int16 v169 = 1026;
        __int16 v171 = 1026;
        __int16 v173 = 1026;
        __int16 v175 = 1026;
        __int16 v177 = 1026;
        __int16 v179 = 1026;
        __int16 v181 = 1026;
        __int16 v183 = 1026;
        __int16 v185 = 1026;
        __int16 v187 = 1026;
        __int16 v189 = 1026;
        __int16 v191 = 1026;
        __int16 v193 = 1026;
        __int16 v195 = 1026;
        __int16 v197 = 1026;
        __int16 v199 = 1026;
        __int16 v201 = 1026;
        __int16 v203 = 1026;
        __int16 v205 = 1026;
        __int16 v207 = 1026;
        __int16 v209 = 1026;
        __int16 v211 = 1026;
        __int16 v213 = 1026;
        __int16 v215 = 1026;
        __int16 v217 = 1026;
        __int16 v219 = 1026;
        __int16 v221 = 1026;
        int v222 = v36;
        *(_DWORD *)std::string buf = 67249920;
        _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,submitCAStats,fCountWifiAssociatedAndStaticAP,%{public}d,fCountWifiYieldingPersonalized,%{public}d,fCountStationaryWithPersonalizedWifiAP,%{public}d,fCountDMMostlyStationary,%{public}d,fCountDMnonStationary,%{public}d,fCountScreenOff,%{public}d,fCountTotalSeconds,%{public}d,fCountCanSafelyTurnOffGpsCount,%{public}d,fCountWifiDisassociatesOrRoams,%{public}d,fCountIOMotionFromStaticLT1m,%{public}d,fCountIOMotionFromStaticLT2m,%{public}d,fCountIOMotionFromStaticLT5m,%{public}d,fCountIOMotionFromStaticLT10m,%{public}d,fCountIOMotionFromStaticLT20m,%{public}d,fCountIOMotionFromStaticLT50m,%{public}d,fCountIOMotionFromStaticGE50m,%{public}d,fCountGpsWifiDistanceLT5m,%{public}d,fCountGpsWifiDistanceLT10m,%{public}d,fCountGpsWifiDistanceLT20m,%{public}d,fCountGpsWifiDistanceLT50m,%{public}d,fCountGpsWifiDistanceLT100m,%{public}d,fCountGpsWifiDistanceLT200m,%{public}d,fCountGpsWifiDistanceLT500m,%{public}d,fCountGpsWifiDistanceLT1000m,%{public}d,fCountGpsWifiDistanceGE1000m,%{public}d,fCountGpsOnNotYielding,%{public}d,fCountStartedStatic,%{public}d,fCountIncludedFitness,%{public}d,fCountIncludedDriving,%{public}d,fCountIncludedConnectedVehicleFlag,%{public}d,fCountSessions,%{public}d,fCountSessionsStartedFromLC,%{public}d,fCountStationaryWithoutPersonalizedWifiAP,%{public}d,fCountIOMaxVelocityWhileStaticLT1ms,%{public}d,fCountIOMaxVelocityWhileStaticLT2ms,%{public}d,fCountIOMaxVelocityWhileStaticLT3ms,%{public}d,fCountIOMaxVelocityWhileStaticLT4ms,%{public}d,fCountIOMaxVelocityWhileStaticLT5ms,%{public}d,fCountIOMaxVelocityWhileStaticGE5ms,%{public}d,", buf,
          0xECu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022ACD68);
        }
        int v50 = *((_DWORD *)a1 + 5);
        *(_DWORD *)int16x8_t v80 = *((_DWORD *)a1 + 4);
        int v52 = *((_DWORD *)a1 + 6);
        int v51 = *((_DWORD *)a1 + 7);
        *(_DWORD *)&v80[6] = v50;
        *(_DWORD *)((char *)&v81 + 2) = v52;
        int v53 = *((_DWORD *)a1 + 9);
        *(_DWORD *)int v82 = *((_DWORD *)a1 + 8);
        *(_DWORD *)&v82[6] = v53;
        int v54 = *((_DWORD *)a1 + 11);
        int v84 = *((_DWORD *)a1 + 10);
        int v86 = v54;
        int v55 = *((_DWORD *)a1 + 13);
        int v88 = *((_DWORD *)a1 + 12);
        int v90 = *a1;
        int v92 = v55;
        int v56 = *((_DWORD *)a1 + 15);
        int v94 = *((_DWORD *)a1 + 14);
        int v96 = v56;
        int v57 = *((_DWORD *)a1 + 17);
        int v98 = *((_DWORD *)a1 + 16);
        int v100 = v57;
        int v58 = *((_DWORD *)a1 + 19);
        int v102 = *((_DWORD *)a1 + 18);
        int v104 = v58;
        int v59 = *((_DWORD *)a1 + 27);
        int v106 = *((_DWORD *)a1 + 26);
        int v108 = v59;
        int v60 = *((_DWORD *)a1 + 29);
        int v110 = *((_DWORD *)a1 + 28);
        int v112 = v60;
        int v61 = *((_DWORD *)a1 + 31);
        int v114 = *((_DWORD *)a1 + 30);
        int v116 = v61;
        int v62 = *((_DWORD *)a1 + 33);
        int v118 = *((_DWORD *)a1 + 32);
        int v120 = v62;
        int v63 = *((_DWORD *)a1 + 35);
        int v122 = *((_DWORD *)a1 + 34);
        int v124 = v63;
        int v126 = a1[1];
        int v128 = a1[2];
        int v130 = a1[3];
        int v132 = a1[4];
        int v134 = a1[5];
        int v136 = a1[6];
        int v138 = v51;
        int v64 = *((_DWORD *)a1 + 21);
        int v140 = *((_DWORD *)a1 + 20);
        int v142 = v64;
        int v65 = *((_DWORD *)a1 + 23);
        int v144 = *((_DWORD *)a1 + 22);
        int v146 = v65;
        int v66 = *((_DWORD *)a1 + 25);
        int v148 = *((_DWORD *)a1 + 24);
        *(_WORD *)&v80[4] = 1026;
        LOWORD(v81) = 1026;
        HIWORD(v81) = 1026;
        *(_WORD *)&v82[4] = 1026;
        __int16 v83 = 1026;
        __int16 v85 = 1026;
        __int16 v87 = 1026;
        __int16 v89 = 1026;
        __int16 v91 = 1026;
        __int16 v93 = 1026;
        __int16 v95 = 1026;
        __int16 v97 = 1026;
        __int16 v99 = 1026;
        __int16 v101 = 1026;
        __int16 v103 = 1026;
        __int16 v105 = 1026;
        __int16 v107 = 1026;
        __int16 v109 = 1026;
        __int16 v111 = 1026;
        __int16 v113 = 1026;
        __int16 v115 = 1026;
        __int16 v117 = 1026;
        __int16 v119 = 1026;
        __int16 v121 = 1026;
        __int16 v123 = 1026;
        __int16 v125 = 1026;
        __int16 v127 = 1026;
        __int16 v129 = 1026;
        __int16 v131 = 1026;
        __int16 v133 = 1026;
        __int16 v135 = 1026;
        __int16 v137 = 1026;
        __int16 v139 = 1026;
        __int16 v141 = 1026;
        __int16 v143 = 1026;
        __int16 v145 = 1026;
        __int16 v147 = 1026;
        __int16 v149 = 1026;
        int v150 = v66;
        int v79 = 67249920;
        __int16 v67 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitorCAStats::submitCAStats(const CFTimeInterval &)", "%s\n", v67);
        if (v67 != (char *)buf) {
          free(v67);
        }
      }
      __int16 v37 = sub_100134750(__p, "fThrottleStartToDriving");
      sub_10039845C((uint64_t)v37, a1 + 72, (uint64_t *)__p);
      if (v78 < 0) {
        operator delete(__p[0]);
      }
      int v38 = sub_100134750(v75, "fThrottleEndToDriving");
      sub_10039845C((uint64_t)v38, a1 + 79, (uint64_t *)v75);
      if (v76 < 0) {
        operator delete(v75[0]);
      }
      __int16 v39 = sub_100134750(v73, "fThrottleStartToFitness");
      sub_10039845C((uint64_t)v39, a1 + 86, (uint64_t *)v73);
      if (v74 < 0) {
        operator delete(v73[0]);
      }
      int v40 = sub_100134750(v71, "fThrottleEndToFitness");
      sub_10039845C((uint64_t)v40, a1 + 93, (uint64_t *)v71);
      if (v72 < 0) {
        operator delete(v71[0]);
      }
      if (*((double *)a1 + 25) >= *((double *)a1 + 26))
      {
        AnalyticsSendEventLazy();
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022ACD68);
        }
        double v42 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_INFO))
        {
          int v43 = *((_DWORD *)a1 + 11);
          int v44 = a1[5];
          *(_DWORD *)std::string buf = 67240448;
          *(_DWORD *)int v152 = v43;
          *(_WORD *)&v152[4] = 1026;
          *(_DWORD *)&v152[6] = v44;
          _os_log_impl((void *)&_mh_execute_header, v42, OS_LOG_TYPE_INFO, "#GPSPowerSavings,submitCAStats,complete,seconds,%{public}d,sessions,%{public}d", buf, 0xEu);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022ACD68);
          }
          int v68 = *((_DWORD *)a1 + 11);
          int v69 = a1[5];
          int v79 = 67240448;
          *(_DWORD *)int16x8_t v80 = v68;
          *(_WORD *)&v80[4] = 1026;
          *(_DWORD *)&v80[6] = v69;
          int v70 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitorCAStats::submitCAStats(const CFTimeInterval &)", "%s\n", v70);
          if (v70 != (char *)buf) {
            free(v70);
          }
        }
        *((void *)a1 + 24) = 0;
        *((_OWORD *)a1 + 10) = 0u;
        *((_OWORD *)a1 + 11) = 0u;
        *((_OWORD *)a1 + 8) = 0u;
        *((_OWORD *)a1 + 9) = 0u;
        *((_OWORD *)a1 + 6) = 0u;
        *((_OWORD *)a1 + 7) = 0u;
        *((_OWORD *)a1 + 4) = 0u;
        *((_OWORD *)a1 + 5) = 0u;
        *((_OWORD *)a1 + 2) = 0u;
        *((_OWORD *)a1 + 3) = 0u;
        *(_OWORD *)a1 = 0u;
        *((_OWORD *)a1 + 1) = 0u;
        *((double *)a1 + 29) = *a2;
      }
      else
      {
        *((double *)a1 + 29) = *a2;
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022ACD68);
        }
        __int16 v41 = qword_102419388;
        if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
        {
          *(_WORD *)std::string buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,submitCAStats,skipping CA submission", buf, 2u);
        }
        if (sub_10013D1A0(115, 2))
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419380 != -1) {
            dispatch_once(&qword_102419380, &stru_1022ACD68);
          }
          LOWORD(v79) = 0;
          int v12 = (char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitorCAStats::submitCAStats(const CFTimeInterval &)", "%s\n", v12);
          goto LABEL_52;
        }
      }
    }
    else
    {
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022ACD68);
      }
      int v13 = qword_102419388;
      if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
      {
        int v14 = a1[5];
        int v15 = *((_DWORD *)a1 + 11);
        int v16 = *((_DWORD *)a1 + 4);
        int v17 = *((_DWORD *)a1 + 5);
        int v18 = *((_DWORD *)a1 + 6);
        *(_DWORD *)std::string buf = 67241216;
        *(_DWORD *)int v152 = v14;
        *(_WORD *)&v152[4] = 1026;
        *(_DWORD *)&v152[6] = v15;
        LOWORD(v153) = 1026;
        *(_DWORD *)((char *)&v153 + 2) = v16;
        HIWORD(v153) = 1024;
        *(_DWORD *)uint64_t v154 = v17;
        *(_WORD *)&v154[4] = 1026;
        *(_DWORD *)&v154[6] = v18;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,submitCAStats,small_or_invalid_sessions,%{public}d,%{public}d,%{public}d,%{[ublic}d,%{public}d", buf, 0x20u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419380 != -1) {
          dispatch_once(&qword_102419380, &stru_1022ACD68);
        }
        int v45 = a1[5];
        int v46 = *((_DWORD *)a1 + 11);
        int v47 = *((_DWORD *)a1 + 4);
        int v48 = *((_DWORD *)a1 + 5);
        int v49 = *((_DWORD *)a1 + 6);
        int v79 = 67241216;
        *(_DWORD *)int16x8_t v80 = v45;
        *(_WORD *)&v80[4] = 1026;
        *(_DWORD *)&v80[6] = v46;
        LOWORD(v81) = 1026;
        *(_DWORD *)((char *)&v81 + 2) = v47;
        HIWORD(v81) = 1024;
        *(_DWORD *)int v82 = v48;
        *(_WORD *)&v82[4] = 1026;
        *(_DWORD *)&v82[6] = v49;
        int v12 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitorCAStats::submitCAStats(const CFTimeInterval &)", "%s\n", v12);
        goto LABEL_52;
      }
    }
  }
  else
  {
    if (qword_102419380 != -1) {
      dispatch_once(&qword_102419380, &stru_1022ACD68);
    }
    double v5 = qword_102419388;
    if (os_log_type_enabled((os_log_t)qword_102419388, OS_LOG_TYPE_DEBUG))
    {
      double v6 = *a2;
      uint64_t v7 = *((void *)a1 + 29);
      uint64_t v8 = *((void *)a1 + 25);
      *(_DWORD *)std::string buf = 134349568;
      *(double *)int v152 = v6;
      *(_WORD *)&v152[8] = 2050;
      uint64_t v153 = v7;
      *(_WORD *)uint64_t v154 = 2050;
      *(void *)&v154[2] = v8;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "#GPSPowerSavings,submitCAStats,less than threshold time to submit metrics,%{public}.0lf,%{public}.0lf,%{public}.0lf", buf, 0x20u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419380 != -1) {
        dispatch_once(&qword_102419380, &stru_1022ACD68);
      }
      double v9 = *a2;
      uint64_t v10 = *((void *)a1 + 29);
      uint64_t v11 = *((void *)a1 + 25);
      int v79 = 134349568;
      *(double *)int16x8_t v80 = v9;
      *(_WORD *)&_WORD v80[8] = 2050;
      uint64_t v81 = v10;
      *(_WORD *)int v82 = 2050;
      *(void *)&unsigned char v82[2] = v11;
      int v12 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLGpsPowerSavingsMonitorCAStats::submitCAStats(const CFTimeInterval &)", "%s\n", v12);
LABEL_52:
      if (v12 != (char *)buf) {
        free(v12);
      }
    }
  }
}

void sub_100399304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,char a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a22 < 0) {
    operator delete(a17);
  }
  _Unwind_Resume(exception_object);
}

NSDictionary *sub_100399368(uint64_t a1)
{
  int v1 = *(unsigned __int16 **)(a1 + 32);
  v3[0] = @"DailyWifiDisassociatesOrRoamsCounts";
  v4[0] = +[NSNumber numberWithUnsignedShort:*v1];
  v3[1] = @"DailySessionStartedStaticCount";
  v4[1] = +[NSNumber numberWithUnsignedShort:v1[1]];
  _DWORD v3[2] = @"DailySessionIncludedFitnessCount";
  _DWORD v4[2] = +[NSNumber numberWithUnsignedShort:v1[2]];
  v3[3] = @"DailySessionIncludedDrivingCount";
  v4[3] = +[NSNumber numberWithUnsignedShort:v1[3]];
  void v3[4] = @"DailySessionIncludedConnectedVehicle";
  void v4[4] = +[NSNumber numberWithUnsignedShort:v1[4]];
  v3[5] = @"DailySessionCount";
  void v4[5] = +[NSNumber numberWithUnsignedShort:v1[5]];
  v3[6] = @"DailySessionCountStartedFromLC";
  v4[6] = +[NSNumber numberWithUnsignedShort:v1[6]];
  v3[7] = @"DailyWifiAssociatedAndStaticAPSeconds";
  v4[7] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 4)];
  v3[8] = @"DailyWifiYieldingPersonalizedSeconds";
  unsigned char v4[8] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 5)];
  v3[9] = @"DailyStationaryWithPersonalizedWifiAPSeconds";
  v4[9] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 6)];
  v3[10] = @"DailyStationaryWithoutPersonalizedWifiAPSeconds";
  v4[10] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 7)];
  v3[11] = @"DailyDMMostlyStationarySeconds";
  v4[11] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 8)];
  v3[12] = @"DailyDMnonStationarySeconds";
  v4[12] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 9)];
  v3[13] = @"DailyScreenOffSeconds";
  v4[13] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 10)];
  v3[14] = @"DailyTotalSeconds";
  v4[14] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 11)];
  v3[15] = @"DailyThrottleGpsSeconds";
  v4[15] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 12)];
  v3[16] = @"DailyIOMotionFromStaticLT1mSeconds";
  v4[16] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 13)];
  v3[17] = @"DailyIOMotionFromStaticLT2mSeconds";
  v4[17] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 14)];
  v3[18] = @"DailyIOMotionFromStaticLT5mSeconds";
  v4[18] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 15)];
  v3[19] = @"DailyIOMotionFromStaticLT10mSeconds";
  v4[19] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 16)];
  v3[20] = @"DailyIOMotionFromStaticLT20mSeconds";
  v4[20] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 17)];
  v3[21] = @"DailyIOMotionFromStaticLT50mSeconds";
  v4[21] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 18)];
  v3[22] = @"DailyIOMotionFromStaticGE50mSeconds";
  v4[22] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 19)];
  v3[23] = @"DailyGpsWifiDistanceLT5mSeconds";
  v4[23] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 26)];
  v3[24] = @"DailyGpsWifiDistanceLT10mSeconds";
  v4[24] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 27)];
  v3[25] = @"DailyGpsWifiDistanceLT20mSeconds";
  v4[25] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 28)];
  v3[26] = @"DailyGpsWifiDistanceLT50mSeconds";
  v4[26] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 29)];
  v3[27] = @"DailyGpsWifiDistanceLT100mSeconds";
  v4[27] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 30)];
  v3[28] = @"DailyGpsWifiDistanceLT200mSeconds";
  v4[28] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 31)];
  v3[29] = @"DailyGpsWifiDistanceLT500mSeconds";
  v4[29] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 32)];
  v3[30] = @"DailyGpsWifiDistanceLT1000mSeconds";
  v4[30] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 33)];
  v3[31] = @"DailyGpsWifiDistanceGE1000mSeconds";
  v4[31] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 34)];
  v3[32] = @"DailyGpsOnNotYieldingSeconds";
  v4[32] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 35)];
  v3[33] = @"DailyIOMaxVelocityWhileStaticLT1msSeconds";
  v4[33] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 20)];
  v3[34] = @"DailyIOMaxVelocityWhileStaticLT2msSeconds";
  v4[34] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 21)];
  v3[35] = @"DailyIOMaxVelocityWhileStaticLT3msSeconds";
  v4[35] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 22)];
  v3[36] = @"DailyIOMaxVelocityWhileStaticLT4msSeconds";
  v4[36] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 23)];
  v3[37] = @"DailyIOMaxVelocityWhileStaticLT5msSeconds";
  v4[37] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 24)];
  v3[38] = @"DailyIOMaxVelocityWhileStaticGE5msSeconds";
  v4[38] = +[NSNumber numberWithUnsignedInt:*((unsigned int *)v1 + 25)];
  v3[39] = @"DailyGpsThrottleStartToDrivingLT0Seconds";
  v4[39] = +[NSNumber numberWithUnsignedShort:v1[72]];
  v3[40] = @"DailyGpsThrottleStartToDrivingLT5Seconds";
  v4[40] = +[NSNumber numberWithUnsignedShort:v1[73]];
  v3[41] = @"DailyGpsThrottleStartToDrivingLT10Seconds";
  v4[41] = +[NSNumber numberWithUnsignedShort:v1[74]];
  v3[42] = @"DailyGpsThrottleStartToDrivingLT30Seconds";
  v4[42] = +[NSNumber numberWithUnsignedShort:v1[75]];
  v3[43] = @"DailyGpsThrottleStartToDrivingLT60Seconds";
  v4[43] = +[NSNumber numberWithUnsignedShort:v1[76]];
  v3[44] = @"DailyGpsThrottleStartToDrivingLT90Seconds";
  v4[44] = +[NSNumber numberWithUnsignedShort:v1[77]];
  v3[45] = @"DailyGpsThrottleStartToDrivingGE90Seconds";
  v4[45] = +[NSNumber numberWithUnsignedShort:v1[78]];
  v3[46] = @"DailyGpsThrottleEndToDrivingsLT0Seconds";
  v4[46] = +[NSNumber numberWithUnsignedShort:v1[79]];
  v3[47] = @"DailyGpsThrottleEndToDrivingLT5Seconds";
  v4[47] = +[NSNumber numberWithUnsignedShort:v1[80]];
  v3[48] = @"DailyGpsThrottleEndToDrivingLT10Seconds";
  unsigned char v4[48] = +[NSNumber numberWithUnsignedShort:v1[81]];
  v3[49] = @"DailyGpsThrottleEndToDrivingLT30Seconds";
  v4[49] = +[NSNumber numberWithUnsignedShort:v1[82]];
  v3[50] = @"DailyGpsThrottleEndToDrivingLT60Seconds";
  v4[50] = +[NSNumber numberWithUnsignedShort:v1[83]];
  v3[51] = @"DailyGpsThrottleEndToDrivingLT90Seconds";
  v4[51] = +[NSNumber numberWithUnsignedShort:v1[84]];
  v3[52] = @"DailyGpsThrottleEndToDrivingGE90Seconds";
  v4[52] = +[NSNumber numberWithUnsignedShort:v1[85]];
  v3[53] = @"DailyGpsThrottleStartToFitnessLT0Seconds";
  v4[53] = +[NSNumber numberWithUnsignedShort:v1[86]];
  v3[54] = @"DailyGpsThrottleStartToFitnessLT5Seconds";
  v4[54] = +[NSNumber numberWithUnsignedShort:v1[87]];
  v3[55] = @"DailyGpsThrottleStartToFitnessLT10Seconds";
  v4[55] = +[NSNumber numberWithUnsignedShort:v1[88]];
  v3[56] = @"DailyGpsThrottleStartToFitnessLT30Seconds";
  v4[56] = +[NSNumber numberWithUnsignedShort:v1[89]];
  v3[57] = @"DailyGpsThrottleStartToFitnessLT60Seconds";
  v4[57] = +[NSNumber numberWithUnsignedShort:v1[90]];
  v3[58] = @"DailyGpsThrottleStartToFitnessLT90Seconds";
  v4[58] = +[NSNumber numberWithUnsignedShort:v1[91]];
  v3[59] = @"DailyGpsThrottleStartToFitnessGE90Seconds";
  v4[59] = +[NSNumber numberWithUnsignedShort:v1[92]];
  v3[60] = @"DailyGpsThrottleEndToFitnessLT0Seconds";
  v4[60] = +[NSNumber numberWithUnsignedShort:v1[93]];
  v3[61] = @"DailyGpsThrottleEndToFitnessLT5Seconds";
  v4[61] = +[NSNumber numberWithUnsignedShort:v1[94]];
  v3[62] = @"DailyGpsThrottleEndToFitnessLT10Seconds";
  v4[62] = +[NSNumber numberWithUnsignedShort:v1[95]];
  v3[63] = @"DailyGpsThrottleEndToFitnessLT30Seconds";
  v4[63] = +[NSNumber numberWithUnsignedShort:v1[96]];
  v3[64] = @"DailyGpsThrottleEndToFitnessLT60Seconds";
  v4[64] = +[NSNumber numberWithUnsignedShort:v1[97]];
  v3[65] = @"DailyGpsThrottleEndToFitnessLT90Seconds";
  v4[65] = +[NSNumber numberWithUnsignedShort:v1[98]];
  v3[66] = @"DailyGpsThrottleEndToFitnessGE90Seconds";
  v4[66] = +[NSNumber numberWithUnsignedShort:v1[99]];
  return +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:67];
}

void sub_100399B34(id a1)
{
  qword_102419388 = (uint64_t)os_log_create("com.apple.locationd.Position", "Position");
}

uint64_t sub_100399B64(uint64_t a1)
{
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 32) = a1 + 40;
  *(_WORD *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 26) = 0;
  *(void *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 100) = 0u;
  *(void *)a1 = objc_alloc_init((Class)HKHealthStore);
  *(void *)(a1 + 120) = dispatch_semaphore_create(0);
  return a1;
}

void sub_100399BDC(_Unwind_Exception *a1)
{
  sub_1000F5BB0(v1, *v2);
  _Unwind_Resume(a1);
}

uint64_t sub_100399BF8(uint64_t a1)
{
  *(void *)a1 = 0;
  dispatch_release(*(dispatch_object_t *)(a1 + 120));
  sub_1000F5BB0(a1 + 32, *(void **)(a1 + 40));
  return a1;
}

uint64_t sub_100399C44(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  int v18 = +[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:");
  __int16 v19 = +[NSDate dateWithTimeIntervalSinceReferenceDate:a10];
  id v20 = objc_msgSend(objc_alloc((Class)HKStatisticsCollectionQuery), "initWithQuantityType:quantitySamplePredicate:options:anchorDate:intervalComponents:", +[HKQuantityType quantityTypeForIdentifier:](HKQuantityType, "quantityTypeForIdentifier:", a3), +[NSCompoundPredicate andPredicateWithSubpredicates:](NSCompoundPredicate, "andPredicateWithSubpredicates:", +[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", +[HKQuery predicateForSamplesWithStartDate:endDate:options:](HKQuery, "predicateForSamplesWithStartDate:endDate:options:", v18, v19, 3), a7, 0)), a6, v18,
          a5);
  uint64_t v30 = 0;
  int v31 = &v30;
  uint64_t v32 = 0x2020000000;
  char v33 = 0;
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472;
  v28[2] = sub_100399FB0;
  uint64_t v28[3] = &unk_1022ACDB8;
  int v29 = a2;
  *(double *)&v28[12] = a10;
  v28[10] = &v30;
  v28[11] = a1;
  v28[4] = a3;
  void v28[5] = v18;
  v28[13] = a6;
  v28[6] = v19;
  v28[7] = a4;
  uint8_t v28[8] = a5;
  v28[9] = a8;
  [v20 setInitialResultsHandler:v28];
  [*(id *)a1 executeQuery:v20];
  int v21 = *(NSObject **)(a1 + 120);
  dispatch_time_t v22 = dispatch_time(0, 30000000000);
  if (dispatch_semaphore_wait(v21, v22))
  {
    [*(id *)a1 stopQuery:v20];
    if (qword_1024192B0 != -1) {
      dispatch_once(&qword_1024192B0, &stru_1022ACE70);
    }
    int v23 = qword_1024192B8;
    if (os_log_type_enabled((os_log_t)qword_1024192B8, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_FAULT, "HealthKit query timed out", buf, 2u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192B0 != -1) {
        dispatch_once(&qword_1024192B0, &stru_1022ACE70);
      }
      int v26 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLCardioChange::HealthKitQueryDelegate::performStatisticalCollectionQuery(HKFeatures, HKQuantityTypeIdentifier, HKUnit *, CFAbsoluteTime, CFAbsoluteTime, NSDateComponents *, HKStatisticsOptions, NSPredicate *, ProcessPeriodStatisticFunction)", "%s\n", v26);
      if (v26 != (char *)buf) {
        free(v26);
      }
    }
  }

  uint64_t v24 = *((unsigned __int8 *)v31 + 24);
  _Block_object_dispose(&v30, 8);
  return v24;
}

void sub_100399F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

intptr_t sub_100399FB0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = *(void *)(a1 + 88);
  if (a4)
  {
    if ([a4 code] == (id)6)
    {
      if (qword_1024192B0 != -1) {
        dispatch_once(&qword_1024192B0, &stru_1022ACE70);
      }
      uint64_t v7 = qword_1024192B8;
      if (os_log_type_enabled((os_log_t)qword_1024192B8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v8 = *(void *)(a1 + 32);
        *(_DWORD *)std::string buf = 138543362;
        *(void *)&uint8_t buf[4] = v8;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "HealthKit query for %{public}@ failed due to device lock. Will resume query on next run. ", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024192B0 != -1) {
          dispatch_once(&qword_1024192B0, &stru_1022ACE70);
        }
        uint64_t v9 = *(void *)(a1 + 32);
        *(_DWORD *)int v48 = 138543362;
        *(void *)&v48[4] = v9;
        uint64_t v10 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLCardioChange::HealthKitQueryDelegate::performStatisticalCollectionQuery(HKFeatures, HKQuantityTypeIdentifier, HKUnit *, CFAbsoluteTime, CFAbsoluteTime, NSDateComponents *, HKStatisticsOptions, NSPredicate *, ProcessPeriodStatisticFunction)_block_invoke", "%s\n", v10);
        if (v10 != buf) {
          free(v10);
        }
      }
    }
    else if ([a4 code] == (id)11)
    {
      int v21 = *(uint64_t **)(a1 + 96);
      *(void *)std::string buf = a1 + 112;
      sub_1000FEE0C((uint64_t **)(v5 + 32), (int *)(a1 + 112), (uint64_t)&unk_101D0B290, (_DWORD **)buf)[5] = v21;
      if (qword_1024192B0 != -1) {
        dispatch_once(&qword_1024192B0, &stru_1022ACE70);
      }
      dispatch_time_t v22 = qword_1024192B8;
      if (os_log_type_enabled((os_log_t)qword_1024192B8, OS_LOG_TYPE_DEBUG))
      {
        uint64_t v23 = *(void *)(a1 + 32);
        *(_DWORD *)std::string buf = 138543362;
        *(void *)&uint8_t buf[4] = v23;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "No data availability for HealthKit query collection for %{public}@. Continuing to next day.", buf, 0xCu);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024192B0 != -1) {
          dispatch_once(&qword_1024192B0, &stru_1022ACE70);
        }
        uint64_t v35 = *(void *)(a1 + 32);
        *(_DWORD *)int v48 = 138543362;
        *(void *)&v48[4] = v35;
        int v36 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLCardioChange::HealthKitQueryDelegate::performStatisticalCollectionQuery(HKFeatures, HKQuantityTypeIdentifier, HKUnit *, CFAbsoluteTime, CFAbsoluteTime, NSDateComponents *, HKStatisticsOptions, NSPredicate *, ProcessPeriodStatisticFunction)_block_invoke", "%s\n", v36);
        if (v36 != buf) {
          free(v36);
        }
      }
      *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = 1;
    }
    else
    {
      if (qword_1024192B0 != -1) {
        dispatch_once(&qword_1024192B0, &stru_1022ACE70);
      }
      uint64_t v24 = qword_1024192B8;
      if (os_log_type_enabled((os_log_t)qword_1024192B8, OS_LOG_TYPE_ERROR))
      {
        uint64_t v25 = *(void *)(a1 + 32);
        *(_DWORD *)std::string buf = 138543618;
        *(void *)&uint8_t buf[4] = v25;
        __int16 v56 = 2114;
        *(void *)int v57 = a4;
        _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_ERROR, "HealthKit query for %{public}@ encountered error,%{public}@", buf, 0x16u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_1024192B0 != -1) {
          dispatch_once(&qword_1024192B0, &stru_1022ACE70);
        }
        uint64_t v33 = *(void *)(a1 + 32);
        *(_DWORD *)int v48 = 138543618;
        *(void *)&v48[4] = v33;
        *(_WORD *)&v48[12] = 2114;
        *(void *)&v48[14] = a4;
        int v34 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLCardioChange::HealthKitQueryDelegate::performStatisticalCollectionQuery(HKFeatures, HKQuantityTypeIdentifier, HKUnit *, CFAbsoluteTime, CFAbsoluteTime, NSDateComponents *, HKStatisticsOptions, NSPredicate *, ProcessPeriodStatisticFunction)_block_invoke", "%s\n", v34);
        if (v34 != buf) {
          free(v34);
        }
      }
      *(unsigned char *)(v5 + 26) = 1;
    }
  }
  else
  {
    *(void *)int v48 = 0;
    *(void *)&v48[8] = v48;
    *(void *)&v48[16] = 0x4812000000;
    int v49 = sub_10017787C;
    int v50 = sub_1001772A8;
    int v51 = "";
    int v53 = 0;
    uint64_t v54 = 0;
    std::string __p = 0;
    uint64_t v12 = *(void *)(a1 + 40);
    uint64_t v11 = *(void *)(a1 + 48);
    v37[0] = _NSConcreteStackBlock;
    v37[1] = 3221225472;
    void v37[2] = sub_10039A7D0;
    v37[3] = &unk_1022ACD90;
    uint64_t v13 = *(void *)(a1 + 104);
    v37[5] = v48;
    v37[6] = v13;
    v37[4] = *(void *)(a1 + 56);
    [a3 enumerateStatisticsFromDate:v12 toDate:v11 withBlock:v37];
    (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
    *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = 1;
    int v14 = *(uint64_t **)(a1 + 96);
    *(void *)std::string buf = a1 + 112;
    sub_1000FEE0C((uint64_t **)(v5 + 32), (int *)(a1 + 112), (uint64_t)&unk_101D0B290, (_DWORD **)buf)[5] = v14;
    if (qword_1024192B0 != -1) {
      dispatch_once(&qword_1024192B0, &stru_1022ACE70);
    }
    int v15 = qword_1024192B8;
    if (os_log_type_enabled((os_log_t)qword_1024192B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v16 = (*(void *)(*(void *)&v48[8] + 56) - *(void *)(*(void *)&v48[8] + 48)) >> 3;
      uint64_t v17 = *(void *)(a1 + 32);
      uint64_t v18 = *(void *)(a1 + 40);
      uint64_t v19 = *(void *)(a1 + 48);
      uint64_t v20 = *(void *)(a1 + 64);
      *(_DWORD *)std::string buf = 138544386;
      *(void *)&uint8_t buf[4] = v17;
      __int16 v56 = 1024;
      *(_DWORD *)int v57 = v16;
      *(_WORD *)&v57[4] = 2112;
      *(void *)&v57[6] = v18;
      __int16 v58 = 2112;
      uint64_t v59 = v19;
      __int16 v60 = 2112;
      uint64_t v61 = v20;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "HealthKit query for %{public}@ succeeded: samples %d, start %@, end %@, interval %@.", buf, 0x30u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192B0 != -1) {
        dispatch_once(&qword_1024192B0, &stru_1022ACE70);
      }
      uint64_t v27 = (*(void *)(*(void *)&v48[8] + 56) - *(void *)(*(void *)&v48[8] + 48)) >> 3;
      uint64_t v28 = *(void *)(a1 + 32);
      uint64_t v29 = *(void *)(a1 + 40);
      uint64_t v30 = *(void *)(a1 + 48);
      uint64_t v31 = *(void *)(a1 + 64);
      int v38 = 138544386;
      uint64_t v39 = v28;
      __int16 v40 = 1024;
      int v41 = v27;
      __int16 v42 = 2112;
      uint64_t v43 = v29;
      __int16 v44 = 2112;
      uint64_t v45 = v30;
      __int16 v46 = 2112;
      uint64_t v47 = v31;
      uint64_t v32 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLCardioChange::HealthKitQueryDelegate::performStatisticalCollectionQuery(HKFeatures, HKQuantityTypeIdentifier, HKUnit *, CFAbsoluteTime, CFAbsoluteTime, NSDateComponents *, HKStatisticsOptions, NSPredicate *, ProcessPeriodStatisticFunction)_block_invoke", "%s\n", v32);
      if (v32 != buf) {
        free(v32);
      }
    }
    _Block_object_dispose(v48, 8);
    if (__p)
    {
      int v53 = __p;
      operator delete(__p);
    }
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(v5 + 120));
}

void sub_10039A79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *__p,uint64_t a32)
{
  if (__p)
  {
    a32 = (uint64_t)__p;
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10039A7D0(void *a1, void *a2)
{
  if (a2)
  {
    uint64_t v3 = a1[6];
    if (v3 == 16)
    {
      id v4 = [a2 sumQuantity];
      if (!v4) {
        return;
      }
    }
    else
    {
      if (v3 != 2) {
        return;
      }
      id v4 = [a2 averageQuantity];
      if (!v4) {
        return;
      }
    }
    [v4 doubleValueForUnit:a1[4]];
    uint64_t v6 = v5;
    uint64_t v7 = *(void **)(a1[5] + 8);
    uint64_t v8 = (char *)v7[7];
    unint64_t v9 = v7[8];
    if ((unint64_t)v8 >= v9)
    {
      uint64_t v11 = (char *)v7[6];
      uint64_t v12 = (v8 - v11) >> 3;
      if ((unint64_t)(v12 + 1) >> 61) {
        sub_1001D7FD4();
      }
      unint64_t v13 = v9 - (void)v11;
      unint64_t v14 = (uint64_t)(v9 - (void)v11) >> 2;
      if (v14 <= v12 + 1) {
        unint64_t v14 = v12 + 1;
      }
      if (v13 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v15 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v15 = v14;
      }
      if (v15)
      {
        uint64_t v16 = (char *)sub_1000DA54C((uint64_t)(v7 + 8), v15);
        uint64_t v11 = (char *)v7[6];
        uint64_t v8 = (char *)v7[7];
      }
      else
      {
        uint64_t v16 = 0;
      }
      uint64_t v17 = &v16[8 * v12];
      uint64_t v18 = &v16[8 * v15];
      *(void *)uint64_t v17 = v6;
      uint64_t v10 = v17 + 8;
      while (v8 != v11)
      {
        uint64_t v19 = *((void *)v8 - 1);
        v8 -= 8;
        *((void *)v17 - 1) = v19;
        v17 -= 8;
      }
      v7[6] = v17;
      v7[7] = v10;
      v7[8] = v18;
      if (v11) {
        operator delete(v11);
      }
    }
    else
    {
      *(void *)uint64_t v8 = v5;
      uint64_t v10 = v8 + 8;
    }
    v7[7] = v10;
  }
}

void sub_10039A8F8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  if (*(unsigned char *)(a1 + 24))
  {
    if (qword_1024192B0 != -1) {
      dispatch_once(&qword_1024192B0, &stru_1022ACE70);
    }
    uint64_t v7 = qword_1024192B8;
    if (os_log_type_enabled((os_log_t)qword_1024192B8, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEBUG, "queryCardioChangeInputs is already running.", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_1024192B0 != -1) {
        dispatch_once(&qword_1024192B0, &stru_1022ACE70);
      }
      LOWORD(v49) = 0;
      int v38 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "void CLCardioChange::HealthKitQueryDelegate::queryCardioChangeInputs(CLSilo *, CFAbsoluteTime, CFAbsoluteTime, CardioChangeInputHandler, DeferCheckFunction)", "%s\n", v38);
      if (v38 != (char *)buf) {
        free(v38);
      }
    }
    memset(v48, 0, sizeof(v48));
    (*(void (**)(uint64_t, void, _OWORD *))(a3 + 16))(a3, 0, v48);
    return;
  }
  *(unsigned char *)(a1 + 24) = 1;
  if (!*(unsigned char *)(a1 + 25) || vabdd_f64(*(double *)(a1 + 16), a6) >= 86400.0 + 86400.0)
  {
    uint64_t v17 = (void *)(a1 + 40);
    uint64_t v16 = *(void **)(a1 + 40);
    *(_WORD *)(a1 + 25) = 0;
    sub_1000F5BB0(a1 + 32, v16);
    *(void *)(a1 + 32) = a1 + 40;
    void *v17 = 0;
    *(void *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 100) = 0u;
    *(unsigned char *)(a1 + 25) = 1;
    *(double *)(a1 + 8) = a5;
    *(double *)(a1 + 16) = a6;
    if (qword_1024192B0 != -1) {
      dispatch_once(&qword_1024192B0, &stru_1022ACE70);
    }
    uint64_t v18 = qword_1024192B8;
    if (os_log_type_enabled((os_log_t)qword_1024192B8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = *(void *)(a1 + 16);
      *(_DWORD *)std::string buf = 134218240;
      uint64_t v54 = v19;
      __int16 v55 = 2048;
      uint64_t v56 = v20;
      _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "Starting new query startTime %f, endTime %f", buf, 0x16u);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_22;
    }
    bzero(buf, 0x65CuLL);
    if (qword_1024192B0 == -1) {
      goto LABEL_61;
    }
    goto LABEL_63;
  }
  if (qword_1024192B0 != -1) {
    dispatch_once(&qword_1024192B0, &stru_1022ACE70);
  }
  unint64_t v13 = qword_1024192B8;
  if (os_log_type_enabled((os_log_t)qword_1024192B8, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = *(void *)(a1 + 16);
    *(_DWORD *)std::string buf = 134218240;
    uint64_t v54 = v14;
    __int16 v55 = 2048;
    uint64_t v56 = v15;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Resuming previously interrupted query startTime %f, endTime %f", buf, 0x16u);
  }
  if (!sub_10013D1A0(115, 2)) {
    goto LABEL_22;
  }
  bzero(buf, 0x65CuLL);
  if (qword_1024192B0 != -1) {
LABEL_63:
  }
    dispatch_once(&qword_1024192B0, &stru_1022ACE70);
LABEL_61:
  uint64_t v39 = *(void *)(a1 + 8);
  uint64_t v40 = *(void *)(a1 + 16);
  int v49 = 134218240;
  uint64_t v50 = v39;
  __int16 v51 = 2048;
  uint64_t v52 = v40;
  int v41 = (char *)_os_log_send_and_compose_impl();
  sub_1004BA5E4("Generic", 1, 0, 2, "void CLCardioChange::HealthKitQueryDelegate::queryCardioChangeInputs(CLSilo *, CFAbsoluteTime, CFAbsoluteTime, CardioChangeInputHandler, DeferCheckFunction)", "%s\n", v41);
  if (v41 != (char *)buf) {
    free(v41);
  }
LABEL_22:
  int v21 = dispatch_group_create();
  uint64_t v23 = a1 + 40;
  uint64_t v22 = *(void *)(a1 + 40);
  if (!v22) {
    goto LABEL_32;
  }
  uint64_t v24 = a1 + 40;
  do
  {
    int v25 = *(_DWORD *)(v22 + 32);
    BOOL v26 = v25 < 0;
    if (v25 >= 0) {
      uint64_t v27 = (uint64_t *)v22;
    }
    else {
      uint64_t v27 = (uint64_t *)(v22 + 8);
    }
    if (!v26) {
      uint64_t v24 = v22;
    }
    uint64_t v22 = *v27;
  }
  while (*v27);
  if (v24 == v23 || *(int *)(v24 + 32) >= 1)
  {
LABEL_32:
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10039B090;
    block[3] = &unk_1022A3020;
    block[4] = a1;
    dispatch_group_async(v21, (dispatch_queue_t)[a2 queue], block);
  }
  v46[0] = _NSConcreteStackBlock;
  v46[1] = 3221225472;
  v46[2] = sub_10039B1B4;
  v46[3] = &unk_1022ACE00;
  void v46[4] = a4;
  v46[5] = a1;
  dispatch_group_async(v21, (dispatch_queue_t)[a2 queue], v46);
  uint64_t v28 = *(void *)(a1 + 40);
  if (!v28) {
    goto LABEL_43;
  }
  uint64_t v29 = a1 + 40;
  uint64_t v30 = *(void *)(a1 + 40);
  do
  {
    int v31 = *(_DWORD *)(v30 + 32);
    BOOL v32 = v31 < 2;
    if (v31 >= 2) {
      uint64_t v33 = (uint64_t *)v30;
    }
    else {
      uint64_t v33 = (uint64_t *)(v30 + 8);
    }
    if (!v32) {
      uint64_t v29 = v30;
    }
    uint64_t v30 = *v33;
  }
  while (*v33);
  if (v29 == v23 || *(int *)(v29 + 32) >= 3)
  {
LABEL_43:
    v45[0] = _NSConcreteStackBlock;
    v45[1] = 3221225472;
    void v45[2] = sub_10039B628;
    v45[3] = &unk_1022A3020;
    v45[4] = a1;
    dispatch_group_async(v21, (dispatch_queue_t)[a2 queue], v45);
    uint64_t v28 = *(void *)(a1 + 40);
  }
  if (!v28) {
    goto LABEL_54;
  }
  uint64_t v34 = a1 + 40;
  do
  {
    int v35 = *(_DWORD *)(v28 + 32);
    BOOL v36 = v35 < 3;
    if (v35 >= 3) {
      __int16 v37 = (uint64_t *)v28;
    }
    else {
      __int16 v37 = (uint64_t *)(v28 + 8);
    }
    if (!v36) {
      uint64_t v34 = v28;
    }
    uint64_t v28 = *v37;
  }
  while (*v37);
  if (v34 == v23 || *(int *)(v34 + 32) >= 4)
  {
LABEL_54:
    v44[0] = _NSConcreteStackBlock;
    v44[1] = 3221225472;
    _OWORD v44[2] = sub_10039B76C;
    v44[3] = &unk_1022A3020;
    v44[4] = a1;
    dispatch_group_async(v21, (dispatch_queue_t)[a2 queue], v44);
  }
  v43[0] = _NSConcreteStackBlock;
  v43[1] = 3221225472;
  v43[2] = sub_10039B890;
  v43[3] = &unk_1022ACE00;
  v43[4] = a4;
  v43[5] = a1;
  dispatch_group_async(v21, (dispatch_queue_t)[a2 queue], v43);
  v42[0] = _NSConcreteStackBlock;
  v42[1] = 3221225472;
  v42[2] = sub_10039BC50;
  v42[3] = &unk_1022ACE28;
  v42[5] = a3;
  v42[6] = a1;
  v42[4] = v21;
  dispatch_group_notify(v21, (dispatch_queue_t)[a2 queue], v42);
}

void sub_10039B090(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = objc_alloc_init((Class)NSDateComponents);
  [v2 setDay:1];
  uint64_t v3 = +[HKUnit kilocalorieUnit];
  double v4 = *(double *)(v1 + 8);
  double v5 = *(double *)(v1 + 16);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_10039B164;
  _WORD v6[3] = &unk_1022ACDD8;
  void v6[4] = v1;
  sub_100399C44(v1, 0, (uint64_t)HKQuantityTypeIdentifierActiveEnergyBurned, (uint64_t)v3, (uint64_t)v2, 16, 0, (uint64_t)v6, v4, v5);
}

uint64_t sub_10039B164(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 32);
  uint64_t v3 = a2[1] - *a2;
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v3 >> 3;
    double v6 = 0.0;
    do
      double v6 = v6 + *(double *)(*a2 + 8 * v4++);
    while (v5 != v4);
    double v7 = v6 / (double)(unint64_t)v5;
  }
  else
  {
    double v7 = 0.0;
  }
  *(_DWORD *)(v2 + 96) = (unint64_t)v3 >> 3;
  *(double *)(v2 + 56) = v7;
  return result;
}

void sub_10039B1B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  signed int v3 = 90;
  uint64_t v4 = *(void *)(v2 + 40);
  if (v4)
  {
    uint64_t v5 = v2 + 40;
    do
    {
      int v6 = *(_DWORD *)(v4 + 32);
      BOOL v7 = v6 < 1;
      if (v6 >= 1) {
        uint64_t v8 = (uint64_t *)v4;
      }
      else {
        uint64_t v8 = (uint64_t *)(v4 + 8);
      }
      if (!v7) {
        uint64_t v5 = v4;
      }
      uint64_t v4 = *v8;
    }
    while (*v8);
    if (v5 != v2 + 40 && *(int *)(v5 + 32) <= 1)
    {
      v18[0] = 1;
      *(void *)std::string buf = v18;
      double v9 = *((double *)sub_1000FEE0C((uint64_t **)(v2 + 32), v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5);
      if (v9 > 0.0) {
        signed int v3 = vcvtpd_s64_f64(*(double *)(v2 + 16) / 86400.0) - vcvtpd_s64_f64(v9 / 86400.0);
      }
    }
  }
  if (qword_1024192B0 != -1) {
    dispatch_once(&qword_1024192B0, &stru_1022ACE70);
  }
  uint64_t v10 = qword_1024192B8;
  if (os_log_type_enabled((os_log_t)qword_1024192B8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Starting query for HKQuantityTypeIdentifierHeartRate for %d days", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192B0 != -1) {
      dispatch_once(&qword_1024192B0, &stru_1022ACE70);
    }
    v18[0] = 67109120;
    v18[1] = v3;
    uint64_t v16 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLCardioChange::HealthKitQueryDelegate::queryCardioChangeInputs(CLSilo *, CFAbsoluteTime, CFAbsoluteTime, CardioChangeInputHandler, DeferCheckFunction)_block_invoke", "%s\n", v16);
    if (v16 != (char *)buf) {
      free(v16);
    }
  }
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  float v17[2] = sub_10039B510;
  v17[3] = &unk_1022ACDD8;
  v17[4] = v2;
  id v11 = objc_alloc_init((Class)NSDateComponents);
  [v11 setMinute:5];
  if ((v3 & 0x80000000) == 0)
  {
    do
    {
      id v12 = +[HKUnit _countPerSecondUnit];
      double v13 = *(double *)(v2 + 16);
      double v14 = 86400.0 * (floor(v13 / 86400.0) - (double)v3);
      if (v14 + 86400.0 <= v13) {
        double v13 = v14 + 86400.0;
      }
      if (!sub_100399C44(v2, 1, (uint64_t)HKQuantityTypeIdentifierHeartRate, (uint64_t)v12, (uint64_t)v11, 2, 0, (uint64_t)v17, v14, v13))break; {
      int v15 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
      }
      if (!v3) {
        break;
      }
      --v3;
    }
    while (!v15);
  }
}

double sub_10039B510(uint64_t a1, void *a2)
{
  if (*a2 != a2[1])
  {
    uint64_t v2 = *(void *)(a1 + 32);
    double result = sub_10039B560((uint64_t)a2, 95) + *(double *)(v2 + 64);
    *(double *)(v2 + 64) = result;
    ++*(_DWORD *)(v2 + 100);
  }
  return result;
}

double sub_10039B560(uint64_t a1, int a2)
{
  std::string __p = 0;
  id v11 = 0;
  uint64_t v12 = 0;
  sub_1001DD364(&__p, *(const void **)a1, *(void *)(a1 + 8), (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3);
  int v5 = (int)((((*(void *)(a1 + 8) - *(void *)a1) >> 3) - 1) * a2) / 100;
  int v6 = (double *)__p;
  BOOL v7 = (double *)((char *)__p + 8 * v5);
  if (v7 != v11)
  {
    sub_10039BFC4((double *)__p, v7, v11, v4);
    int v6 = (double *)__p;
  }
  double v8 = v6[v5];
  id v11 = v6;
  operator delete(v6);
  return v8;
}

void sub_10039B60C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10039B628(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = objc_alloc_init((Class)NSDateComponents);
  [v2 setDay:1];
  id v3 = +[HKUnit _countPerMinuteUnit];
  double v4 = *(double *)(v1 + 8);
  double v5 = *(double *)(v1 + 16);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_10039B71C;
  _WORD v6[3] = &unk_1022ACDD8;
  void v6[4] = v1;
  sub_100399C44(v1, 2, (uint64_t)HKQuantityTypeIdentifierRestingHeartRate, (uint64_t)v3, (uint64_t)v2, 2, (uint64_t)+[HKQuery _predicateForObjectsFromAppleWatches], (uint64_t)v6, v4, v5);
}

uint64_t sub_10039B71C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 32);
  uint64_t v3 = a2[1] - *a2;
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v3 >> 3;
    double v6 = 0.0;
    do
      double v6 = v6 + *(double *)(*a2 + 8 * v4++);
    while (v5 != v4);
    double v7 = v6 / (double)(unint64_t)v5;
  }
  else
  {
    double v7 = 0.0;
  }
  *(_DWORD *)(v2 + 104) = (unint64_t)v3 >> 3;
  *(double *)(v2 + 72) = v7;
  return result;
}

void sub_10039B76C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = objc_alloc_init((Class)NSDateComponents);
  [v2 setDay:1];
  uint64_t v3 = +[HKUnit meterUnit];
  double v4 = *(double *)(v1 + 8);
  double v5 = *(double *)(v1 + 16);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_10039B840;
  _WORD v6[3] = &unk_1022ACDD8;
  void v6[4] = v1;
  sub_100399C44(v1, 3, (uint64_t)HKQuantityTypeIdentifierSixMinuteWalkTestDistance, (uint64_t)v3, (uint64_t)v2, 2, 0, (uint64_t)v6, v4, v5);
}

uint64_t sub_10039B840(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 32);
  uint64_t v3 = a2[1] - *a2;
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = v3 >> 3;
    double v6 = 0.0;
    do
      double v6 = v6 + *(double *)(*a2 + 8 * v4++);
    while (v5 != v4);
    double v7 = v6 / (double)(unint64_t)v5;
  }
  else
  {
    double v7 = 0.0;
  }
  *(_DWORD *)(v2 + 108) = (unint64_t)v3 >> 3;
  *(double *)(v2 + 80) = v7;
  return result;
}

void sub_10039B890(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  signed int v3 = 90;
  uint64_t v4 = *(void *)(v2 + 40);
  if (v4)
  {
    uint64_t v5 = v2 + 40;
    do
    {
      int v6 = *(_DWORD *)(v4 + 32);
      BOOL v7 = v6 < 4;
      if (v6 >= 4) {
        double v8 = (uint64_t *)v4;
      }
      else {
        double v8 = (uint64_t *)(v4 + 8);
      }
      if (!v7) {
        uint64_t v5 = v4;
      }
      uint64_t v4 = *v8;
    }
    while (*v8);
    if (v5 != v2 + 40 && *(int *)(v5 + 32) <= 4)
    {
      v18[0] = 4;
      *(void *)std::string buf = v18;
      double v9 = *((double *)sub_1000FEE0C((uint64_t **)(v2 + 32), v18, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5);
      if (v9 > 0.0) {
        signed int v3 = vcvtpd_s64_f64(*(double *)(v2 + 16) / 86400.0) - vcvtpd_s64_f64(v9 / 86400.0);
      }
    }
  }
  if (qword_1024192B0 != -1) {
    dispatch_once(&qword_1024192B0, &stru_1022ACE70);
  }
  uint64_t v10 = qword_1024192B8;
  if (os_log_type_enabled((os_log_t)qword_1024192B8, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)std::string buf = 67109120;
    *(_DWORD *)&uint8_t buf[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Starting query for HKQuantityTypeIdentifierWalkingSpeed for %d days", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192B0 != -1) {
      dispatch_once(&qword_1024192B0, &stru_1022ACE70);
    }
    v18[0] = 67109120;
    v18[1] = v3;
    uint64_t v16 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLCardioChange::HealthKitQueryDelegate::queryCardioChangeInputs(CLSilo *, CFAbsoluteTime, CFAbsoluteTime, CardioChangeInputHandler, DeferCheckFunction)_block_invoke", "%s\n", v16);
    if (v16 != (char *)buf) {
      free(v16);
    }
  }
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  float v17[2] = sub_10039BBF8;
  v17[3] = &unk_1022ACDD8;
  v17[4] = v2;
  id v11 = objc_alloc_init((Class)NSDateComponents);
  [v11 setMinute:5];
  if ((v3 & 0x80000000) == 0)
  {
    do
    {
      uint64_t v12 = +[HKUnit unitFromString:@"m/s"];
      double v13 = *(double *)(v2 + 16);
      double v14 = 86400.0 * (floor(v13 / 86400.0) - (double)v3);
      if (v14 + 86400.0 <= v13) {
        double v13 = v14 + 86400.0;
      }
      if (!sub_100399C44(v2, 4, (uint64_t)HKQuantityTypeIdentifierWalkingSpeed, (uint64_t)v12, (uint64_t)v11, 2, 0, (uint64_t)v17, v14, v13))break; {
      int v15 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
      }
      if (!v3) {
        break;
      }
      --v3;
    }
    while (!v15);
  }
}

double sub_10039BBF8(uint64_t a1, uint64_t *a2, double result)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  if (*a2 != v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = *(void *)(a1 + 32);
    uint64_t v7 = (v4 - v3) >> 3;
    double v8 = 0.0;
    do
      double v8 = v8 + *(double *)(v3 + 8 * v5++);
    while (v7 != v5);
    double result = v8 / (double)(unint64_t)v7 + *(double *)(v6 + 88);
    *(double *)(v6 + 88) = result;
    ++*(_DWORD *)(v6 + 112);
  }
  return result;
}

void sub_10039BC50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  dispatch_release(*(dispatch_object_t *)(a1 + 32));
  int v3 = 0;
  uint64_t v4 = (uint64_t *)(v2 + 40);
  int v5 = 1;
  do
  {
    v16[0] = v3;
    uint64_t v6 = *v4;
    if (!*v4) {
      goto LABEL_12;
    }
    uint64_t v7 = v2 + 40;
    do
    {
      int v8 = *(_DWORD *)(v6 + 32);
      BOOL v9 = v8 < v3;
      if (v8 >= v3) {
        uint64_t v10 = (uint64_t *)v6;
      }
      else {
        uint64_t v10 = (uint64_t *)(v6 + 8);
      }
      if (!v9) {
        uint64_t v7 = v6;
      }
      uint64_t v6 = *v10;
    }
    while (*v10);
    if ((uint64_t *)v7 != v4 && v3 >= *(_DWORD *)(v7 + 32))
    {
      *(void *)std::string buf = v16;
      BOOL v11 = *((double *)sub_1000FEE0C((uint64_t **)(v2 + 32), v16, (uint64_t)&unk_101D0B290, (_DWORD **)buf) + 5) >= *(double *)(v2 + 16);
    }
    else
    {
LABEL_12:
      BOOL v11 = 0;
    }
    v5 &= v11;
    ++v3;
  }
  while (v3 != 5);
  if (qword_1024192B0 != -1) {
    dispatch_once(&qword_1024192B0, &stru_1022ACE70);
  }
  uint64_t v12 = qword_1024192B8;
  if (os_log_type_enabled((os_log_t)qword_1024192B8, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)std::string buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v5;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "CardioChange HealthKit inputs queried success, %{public}d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_1024192B0 != -1) {
      dispatch_once(&qword_1024192B0, &stru_1022ACE70);
    }
    v16[0] = 67240192;
    v16[1] = v5;
    int v15 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "void CLCardioChange::HealthKitQueryDelegate::queryCardioChangeInputs(CLSilo *, CFAbsoluteTime, CFAbsoluteTime, CardioChangeInputHandler, DeferCheckFunction)_block_invoke", "%s\n", v15);
    if (v15 != (char *)buf) {
      free(v15);
    }
  }
  if (v5)
  {
    int v13 = *(_DWORD *)(v2 + 100);
    if (v13 >= 1) {
      *(double *)(v2 + 64) = *(double *)(v2 + 64) / (double)v13;
    }
    int v14 = *(_DWORD *)(v2 + 112);
    if (v14 >= 1) {
      *(double *)(v2 + 88) = *(double *)(v2 + 88) / (double)v14;
    }
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    goto LABEL_28;
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  if (*(unsigned char *)(v2 + 26))
  {
LABEL_28:
    *(_WORD *)(v2 + 25) = 0;
    sub_1000F5BB0(v2 + 32, *(void **)(v2 + 40));
    *(void *)(v2 + 40) = 0;
    *(void *)(v2 + 48) = 0;
    *(void *)(v2 + 32) = v4;
    *(_OWORD *)(v2 + 56) = 0u;
    *(_OWORD *)(v2 + 72) = 0u;
    *(_OWORD *)(v2 + 88) = 0u;
    *(_OWORD *)(v2 + 100) = 0u;
  }
  *(unsigned char *)(v2 + 24) = 0;
}

void sub_10039BF94(id a1)
{
  qword_1024192B8 = (uint64_t)os_log_create("com.apple.locationd.Motion", "CardioChange");
}

double sub_10039BFC4(double *a1, double *a2, double *a3, double result)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    do
    {
      unint64_t v7 = v4 - a1;
      if (v7 < 2) {
        break;
      }
      if (v7 == 3)
      {
        sub_10039C270(a1, a1 + 1, v4 - 1);
        return result;
      }
      if (v7 == 2)
      {
        double result = *(v4 - 1);
        double v30 = *a1;
        if (result < *a1)
        {
          *a1 = result;
          *(v4 - 1) = v30;
        }
        return result;
      }
      if ((char *)v4 - (char *)a1 <= 63)
      {
        return sub_10039C2F8(a1, v4, result);
      }
      int v8 = &a1[v7 >> 1];
      BOOL v9 = v4 - 1;
      int v10 = sub_10039C270(a1, v8, v4 - 1);
      double result = *a1;
      if (*a1 >= *v8)
      {
        BOOL v11 = v4 - 1;
        while (--v11 != a1)
        {
          if (*v11 < *v8)
          {
            *a1 = *v11;
            *BOOL v11 = result;
            ++v10;
            goto LABEL_13;
          }
        }
        int v21 = a1 + 1;
        if (result >= *v9)
        {
          while (v21 != v9)
          {
            double v22 = *v21;
            if (result < *v21)
            {
              *v21++ = *v9;
              *BOOL v9 = v22;
              goto LABEL_45;
            }
            ++v21;
          }
          return result;
        }
LABEL_45:
        if (v21 == v9) {
          return result;
        }
        while (1)
        {
          double v25 = *a1;
          do
          {
            double v26 = *v21++;
            double result = v26;
          }
          while (v25 >= v26);
          uint64_t v27 = v21 - 1;
          do
          {
            double v28 = *--v9;
            double v29 = v28;
          }
          while (v25 < v28);
          if (v27 >= v9) {
            break;
          }
          *uint64_t v27 = v29;
          *BOOL v9 = result;
        }
        a1 = v21 - 1;
        if (v27 > a2) {
          return result;
        }
      }
      else
      {
        BOOL v11 = v4 - 1;
LABEL_13:
        uint64_t v12 = a1 + 1;
        if (a1 + 1 >= v11)
        {
          uint64_t v16 = a1 + 1;
        }
        else
        {
          int v13 = a1 + 1;
          while (1)
          {
            double v14 = *v8;
            do
            {
              double v15 = *v13++;
              double result = v15;
            }
            while (v15 < v14);
            uint64_t v16 = v13 - 1;
            do
            {
              double v17 = *--v11;
              double v18 = v17;
            }
            while (v17 >= v14);
            if (v16 >= v11) {
              break;
            }
            double *v16 = v18;
            *BOOL v11 = result;
            ++v10;
            if (v16 == v8) {
              int v8 = v11;
            }
          }
        }
        if (v16 != v8)
        {
          double result = *v8;
          double v19 = *v16;
          if (*v8 < *v16)
          {
            double *v16 = result;
            *int v8 = v19;
            ++v10;
          }
        }
        if (v16 == a2) {
          return result;
        }
        if (!v10)
        {
          if (v16 <= a2)
          {
            uint64_t v23 = v16 + 1;
            while (v23 != v4)
            {
              double v24 = *(v23 - 1);
              double result = *v23++;
              if (result < v24) {
                goto LABEL_29;
              }
            }
          }
          else
          {
            while (v12 != v16)
            {
              double v20 = *(v12 - 1);
              double result = *v12++;
              if (result < v20) {
                goto LABEL_29;
              }
            }
          }
          return result;
        }
LABEL_29:
        if (v16 <= a2) {
          a1 = v16 + 1;
        }
        else {
          uint64_t v4 = v16;
        }
      }
    }
    while (v4 != a2);
  }
  return result;
}

uint64_t sub_10039C270(double *a1, double *a2, double *a3)
{
  double v3 = *a2;
  double v4 = *a1;
  double v5 = *a3;
  if (*a2 < *a1)
  {
    if (v5 < v3)
    {
      *a1 = v5;
      *a3 = v4;
      return 1;
    }
    *a1 = v3;
    *a2 = v4;
    if (*a3 >= v4) {
      return 1;
    }
    *a2 = *a3;
    *a3 = v4;
    return 2;
  }
  if (v5 < v3)
  {
    *a2 = v5;
    *a3 = v3;
    double v6 = *a1;
    if (*a2 >= *a1) {
      return 1;
    }
    *a1 = *a2;
    *a2 = v6;
    return 2;
  }
  return 0;
}

double sub_10039C2F8(double *a1, double *a2, double result)
{
  while (a1 != a2 - 1)
  {
    double v3 = a1++;
    if (v3 != a2 && a1 != a2)
    {
      double result = *v3;
      double v4 = a1;
      double v5 = v3;
      double v6 = a1;
      do
      {
        double v7 = *v6++;
        double v8 = v7;
        if (v7 < result)
        {
          double result = v8;
          double v5 = v4;
        }
        double v4 = v6;
      }
      while (v6 != a2);
      if (v5 != v3)
      {
        double result = *v3;
        *double v3 = *v5;
        *double v5 = result;
      }
    }
  }
  return result;
}

void sub_10039C36C(void *a1, double *a2, int a3)
{
  if (!a3
    || (uint64_t v5 = a1[18], a1[17] == v5)
    || !sub_1004BABDC(*(double *)(v5 - 16), *(double *)(v5 - 8), *a2, a2[1], 0.0000001))
  {
    unint64_t v6 = a1[19];
    double v7 = (_OWORD *)a1[18];
    if ((unint64_t)v7 >= v6)
    {
      uint64_t v9 = a1[17];
      uint64_t v10 = ((uint64_t)v7 - v9) >> 4;
      unint64_t v11 = v10 + 1;
      if ((unint64_t)(v10 + 1) >> 60) {
        sub_1001D7FD4();
      }
      uint64_t v12 = v6 - v9;
      if (v12 >> 3 > v11) {
        unint64_t v11 = v12 >> 3;
      }
      if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v13 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v13 = v11;
      }
      if (v13) {
        double v14 = (char *)sub_1000C571C((uint64_t)(a1 + 19), v13);
      }
      else {
        double v14 = 0;
      }
      double v15 = &v14[16 * v10];
      uint64_t v16 = &v14[16 * v13];
      *(_OWORD *)double v15 = *(_OWORD *)a2;
      double v8 = v15 + 16;
      double v18 = (char *)a1[17];
      double v17 = (char *)a1[18];
      if (v17 != v18)
      {
        do
        {
          *((_OWORD *)v15 - 1) = *((_OWORD *)v17 - 1);
          v15 -= 16;
          v17 -= 16;
        }
        while (v17 != v18);
        double v17 = (char *)a1[17];
      }
      a1[17] = v15;
      a1[18] = v8;
      a1[19] = v16;
      if (v17) {
        operator delete(v17);
      }
    }
    else
    {
      *double v7 = *(_OWORD *)a2;
      double v8 = v7 + 1;
    }
    a1[18] = v8;
  }
}

uint64_t sub_10039C48C(uint64_t a1, int a2)
{
  if (a2 < 0) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 136);
  if ((int)((unint64_t)(*(void *)(a1 + 144) - v2) >> 4) > a2) {
    return v2 + 16 * a2;
  }
  else {
    return 0;
  }
}

BOOL sub_10039C4B4(void *a1)
{
  uint64_t v1 = a1[20];
  uint64_t v2 = (void **)(a1 + 20);
  if (v1 != a1[21]) {
    return 1;
  }
  a1[5] = 0;
  a1[21] = v1;
  if (a1[17] != a1[18])
  {
    ++qword_102489BE8;
    sub_101171D90((uint64_t)buf);
    sub_10017C3FC(v2, ((uint64_t)(a1[18] - a1[17]) >> 4) - 1);
    uint64_t v5 = a1[17];
    if ((unint64_t)(a1[18] - v5) >= 0x11)
    {
      unint64_t v6 = 1;
      do
      {
        double v7 = sub_1000F1648(buf, *(double *)(v5 + 16 * v6 - 16), *(double *)(v5 + 16 * v6 - 8), *(double *)(v5 + 16 * v6), *(double *)(v5 + 16 * v6 + 8), 0.0);
        double v8 = v7;
        uint64_t v10 = (double *)a1[21];
        unint64_t v9 = a1[22];
        if ((unint64_t)v10 >= v9)
        {
          uint64_t v12 = (double *)*v2;
          uint64_t v13 = ((char *)v10 - (unsigned char *)*v2) >> 3;
          unint64_t v14 = v13 + 1;
          if ((unint64_t)(v13 + 1) >> 61) {
            sub_1001D7FD4();
          }
          uint64_t v15 = v9 - (void)v12;
          if (v15 >> 2 > v14) {
            unint64_t v14 = v15 >> 2;
          }
          if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v16 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v16 = v14;
          }
          if (v16)
          {
            double v17 = (char *)sub_1000DA54C((uint64_t)(a1 + 22), v16);
            uint64_t v12 = (double *)a1[20];
            uint64_t v10 = (double *)a1[21];
          }
          else
          {
            double v17 = 0;
          }
          double v18 = (double *)&v17[8 * v13];
          double *v18 = v8;
          unint64_t v11 = v18 + 1;
          while (v10 != v12)
          {
            uint64_t v19 = *((void *)v10-- - 1);
            *((void *)v18-- - 1) = v19;
          }
          a1[20] = v18;
          a1[21] = v11;
          a1[22] = &v17[8 * v16];
          if (v12) {
            operator delete(v12);
          }
        }
        else
        {
          double *v10 = v7;
          unint64_t v11 = v10 + 1;
        }
        a1[21] = v11;
        *((double *)a1 + 5) = v8 + *((double *)a1 + 5);
        ++v6;
        uint64_t v5 = a1[17];
      }
      while (v6 < (a1[18] - v5) >> 4);
    }
    return 1;
  }
  if (qword_102419430 != -1) {
    dispatch_once(&qword_102419430, &stru_1022ACE90);
  }
  double v20 = qword_102419438;
  if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_ERROR))
  {
    LOWORD(buf[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "CLMM,computeSegmentLengthsAndHeading,CoordinateCount is 0", (uint8_t *)buf, 2u);
  }
  BOOL result = sub_10013D1A0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022ACE90);
    }
    int v21 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLMapRoad::computeSegmentDistances()", "%s\n", v21);
    if (v21 != (char *)buf) {
      free(v21);
    }
    return 0;
  }
  return result;
}

BOOL sub_10039C7D0(void *a1)
{
  uint64_t v1 = (void **)(a1 + 23);
  if (a1[23] != a1[24]) {
    return 1;
  }
  if (a1[17] != a1[18])
  {
    sub_101171D90((uint64_t)v34);
    sub_10017C3FC(v1, ((uint64_t)(a1[18] - a1[17]) >> 4) - 1);
    ++qword_102489BF0;
    uint64_t v4 = a1[17];
    if ((unint64_t)(a1[18] - v4) >= 0x11)
    {
      unint64_t v5 = 1;
      do
      {
        unint64_t v6 = (double *)(v4 + 16 * v5);
        double v7 = v6 - 2;
        double v8 = v6 - 1;
        unint64_t v9 = (uint64_t *)(v6 + 1);
        double v10 = sub_1011722DC(v34, *(v6 - 2), *(v6 - 1), *v6, v6[1]);
        if (v10 < 0.0)
        {
          if (qword_102419430 != -1) {
            dispatch_once(&qword_102419430, &stru_1022ACE90);
          }
          unint64_t v11 = qword_102419438;
          if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_ERROR))
          {
            double v12 = *v6;
            uint64_t v13 = *v9;
            uint64_t v14 = *(void *)v7;
            uint64_t v15 = *(void *)v8;
            *(_DWORD *)std::string buf = 134284289;
            double v44 = v12;
            __int16 v45 = 2049;
            uint64_t v46 = v13;
            __int16 v47 = 2049;
            uint64_t v48 = v14;
            __int16 v49 = 2049;
            uint64_t v50 = v15;
            _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "CLMM,invalid heading for CLMapRoad coordinate,%{private}.7lf,%{private}.7lf,prev,%{private}.7lf,%{private}.7lf", buf, 0x2Au);
          }
          if (sub_10013D1A0(115, 0))
          {
            bzero(buf, 0x65CuLL);
            if (qword_102419430 != -1) {
              dispatch_once(&qword_102419430, &stru_1022ACE90);
            }
            double v27 = *v6;
            uint64_t v28 = *v9;
            uint64_t v29 = *(void *)v7;
            uint64_t v30 = *(void *)v8;
            int v35 = 134284289;
            double v36 = v27;
            __int16 v37 = 2049;
            uint64_t v38 = v28;
            __int16 v39 = 2049;
            uint64_t v40 = v29;
            __int16 v41 = 2049;
            uint64_t v42 = v30;
            int v31 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLMapRoad::computeSegmentHeadings()", "%s\n", v31);
            if (v31 != (char *)buf) {
              free(v31);
            }
          }
        }
        double v17 = (double *)a1[24];
        unint64_t v16 = a1[25];
        if ((unint64_t)v17 >= v16)
        {
          uint64_t v19 = (double *)*v1;
          uint64_t v20 = ((char *)v17 - (unsigned char *)*v1) >> 3;
          unint64_t v21 = v20 + 1;
          if ((unint64_t)(v20 + 1) >> 61) {
            sub_1001D7FD4();
          }
          uint64_t v22 = v16 - (void)v19;
          if (v22 >> 2 > v21) {
            unint64_t v21 = v22 >> 2;
          }
          if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v23 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v23 = v21;
          }
          if (v23)
          {
            double v24 = (char *)sub_1000DA54C((uint64_t)(a1 + 25), v23);
            uint64_t v19 = (double *)a1[23];
            double v17 = (double *)a1[24];
          }
          else
          {
            double v24 = 0;
          }
          double v25 = (double *)&v24[8 * v20];
          double *v25 = v10;
          double v18 = v25 + 1;
          while (v17 != v19)
          {
            uint64_t v26 = *((void *)v17-- - 1);
            *((void *)v25-- - 1) = v26;
          }
          a1[23] = v25;
          a1[24] = v18;
          a1[25] = &v24[8 * v23];
          if (v19) {
            operator delete(v19);
          }
        }
        else
        {
          double *v17 = v10;
          double v18 = v17 + 1;
        }
        a1[24] = v18;
        ++v5;
        uint64_t v4 = a1[17];
      }
      while (v5 < (a1[18] - v4) >> 4);
    }
    return 1;
  }
  if (qword_102419430 != -1) {
    dispatch_once(&qword_102419430, &stru_1022ACE90);
  }
  BOOL v32 = qword_102419438;
  if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_ERROR, "CLMM,computeSegmentLengthsAndHeading,CoordinateCount is 0", buf, 2u);
  }
  BOOL result = sub_10013D1A0(115, 0);
  if (result)
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022ACE90);
    }
    LOWORD(v35) = 0;
    uint64_t v33 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLMapRoad::computeSegmentHeadings()", "%s\n", v33);
    if (v33 != (char *)buf) {
      free(v33);
    }
    return 0;
  }
  return result;
}

double sub_10039CCA0(uint64_t *a1)
{
  return sub_10039CCA8(a1, 0);
}

double sub_10039CCA8(uint64_t *a1, int a2)
{
  sub_10039C7D0(a1);
  uint64_t v4 = a1[23];
  if (a2 < (unint64_t)((a1[24] - v4) >> 3)) {
    return *(double *)(v4 + 8 * a2);
  }
  double v5 = -1.0;
  if (((a1[18] - a1[17]) >> 4) - 1 > (unint64_t)a2)
  {
    double v5 = sub_10039CEF4((uint64_t)a1, a2, a2 + 1);
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022ACE90);
    }
    unint64_t v6 = qword_102419438;
    if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_ERROR))
    {
      uint64_t v7 = *a1;
      *(_DWORD *)std::string buf = 134283777;
      uint64_t v11 = v7;
      __int16 v12 = 1026;
      int v13 = a2;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "CLMM,getHeadingForSegment,stored bearing value unavailble,had to be calculated,%{private}lld,index,%{public}d", buf, 0x12u);
    }
    if (sub_10013D1A0(115, 0))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419430 != -1) {
        dispatch_once(&qword_102419430, &stru_1022ACE90);
      }
      unint64_t v9 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 0, "double CLMapRoad::getHeadingForSegment(const int)", "%s\n", v9);
      if (v9 != (char *)buf) {
        free(v9);
      }
    }
  }
  return v5;
}

double sub_10039CED4(uint64_t *a1)
{
  unint64_t v1 = (unint64_t)(a1[18] - a1[17]) >> 4;
  if ((int)v1 >= 2) {
    return sub_10039CCA8(a1, (int)v1 - 2);
  }
  else {
    return -1.0;
  }
}

double sub_10039CEF4(uint64_t a1, int a2, int a3)
{
  double result = -1.0;
  if ((a2 & 0x80000000) == 0)
  {
    uint64_t v4 = *(void *)(a1 + 136);
    unint64_t v5 = (unint64_t)(*(void *)(a1 + 144) - v4) >> 4;
    if ((int)v5 > a2 && (a3 & 0x80000000) == 0 && v4 && (int)v5 > a3)
    {
      unint64_t v6 = (double *)(v4 + 16 * a2);
      uint64_t v7 = (double *)(v4 + 16 * a3);
      sub_101171D90((uint64_t)v8);
      return sub_1011722DC(v8, *v6, v6[1], *v7, v7[1]);
    }
  }
  return result;
}

uint64_t sub_10039CF68(uint64_t *a1)
{
  unint64_t v1 = (unint64_t)(a1[18] - a1[17]) >> 4;
  if ((int)v1 < 3) {
    return 0;
  }
  int v3 = 0;
  uint64_t v4 = 0;
  int v5 = v1 - 1;
  double v6 = -1.0;
  do
  {
    double v7 = sub_10039CCA8(a1, v3);
    if (v7 >= 0.0)
    {
      double v8 = v7;
      if (v6 >= 0.0)
      {
        double v9 = fmod(v7 - v6, 360.0);
        if (v9 < 0.0) {
          double v9 = v9 + 360.0;
        }
        if (v9 > 180.0) {
          double v9 = v9 + -360.0;
        }
        if (fabs(v9) <= 7.5) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = (v4 + 1);
        }
      }
    }
    else
    {
      double v8 = v6;
    }
    ++v3;
    double v6 = v8;
  }
  while (v5 != v3);
  return v4;
}

BOOL sub_10039D05C(uint64_t a1, int a2, double a3, double a4)
{
  if (((*(void *)(a1 + 144) - *(void *)(a1 + 136)) & 0xFFFFFFFF0) == 0x20) {
    return 0;
  }
  sub_10039C4B4((void *)a1);
  uint64_t v8 = *(void *)(a1 + 160);
  uint64_t v9 = *(void *)(a1 + 168) - v8;
  if (!v9) {
    return 0;
  }
  uint64_t v10 = 0;
  unint64_t v11 = v9 >> 3;
  double v12 = *(double *)(a1 + 40) * a3;
  if (v11 <= 1) {
    unint64_t v11 = 1;
  }
  while (1)
  {
    double v12 = v12 - *(double *)(v8 + 8 * v10);
    if (v12 <= 0.0) {
      break;
    }
    if (v11 == ++v10) {
      return 0;
    }
  }
  if (!v10)
  {
    double v20 = sub_10039CCA8((uint64_t *)a1, 0);
    double v21 = sub_10039CCA8((uint64_t *)a1, 1);
    double v16 = v21;
    if (v20 >= 0.0 && v21 >= 0.0)
    {
      double v22 = fmod(v20 - v21, 360.0);
      if (v22 < 0.0) {
        double v22 = v22 + 360.0;
      }
      if (v22 > 180.0) {
        double v22 = v22 + -360.0;
      }
      if (fabs(v22) > a4) {
        return 1;
      }
    }
    if (a2)
    {
      unint64_t v23 = (uint64_t *)a1;
      int v24 = 2;
      goto LABEL_39;
    }
    return 0;
  }
  double v14 = sub_10039CCA8((uint64_t *)a1, (int)v10 - 1);
  double v15 = sub_10039CCA8((uint64_t *)a1, v10);
  double v16 = v15;
  if (v14 < 0.0 || v15 < 0.0)
  {
    if (a2)
    {
LABEL_31:
      double v25 = sub_10039CCA8((uint64_t *)a1, (int)v10 - 2);
      if (v14 >= 0.0 && v25 >= 0.0)
      {
        double v26 = fmod(v25 - v14, 360.0);
        if (v26 < 0.0) {
          double v26 = v26 + 360.0;
        }
        if (v26 > 180.0) {
          double v26 = v26 + -360.0;
        }
        if (fabs(v26) > a4) {
          return 1;
        }
      }
      int v24 = v10 + 1;
      unint64_t v23 = (uint64_t *)a1;
LABEL_39:
      double v27 = sub_10039CCA8(v23, v24);
      if (v16 >= 0.0 && v27 >= 0.0)
      {
        double v28 = fmod(v16 - v27, 360.0);
        if (v28 < 0.0) {
          double v28 = v28 + 360.0;
        }
        if (v28 > 180.0) {
          double v28 = v28 + -360.0;
        }
        if (fabs(v28) > a4) {
          return 1;
        }
      }
    }
    return 0;
  }
  double v17 = fmod(v14 - v15, 360.0);
  if (v17 < 0.0) {
    double v17 = v17 + 360.0;
  }
  if (v17 > 180.0) {
    double v17 = v17 + -360.0;
  }
  double v18 = fabs(v17);
  BOOL result = v18 > a4;
  if (v18 <= a4 && a2 != 0) {
    goto LABEL_31;
  }
  return result;
}

BOOL sub_10039D2E0(uint64_t a1, uint64_t *a2)
{
  if (!*a2) {
    return 0;
  }
  BOOL result = sub_10039D400(a1, a2);
  if (!result) {
    return result;
  }
  BOOL result = sub_10039D44C(a1, a2);
  if (!result) {
    return result;
  }
  uint64_t v5 = (*(void *)(a1 + 144) - *(void *)(a1 + 136)) >> 4;
  if (v5 != ((*(void *)(*a2 + 144) - *(void *)(*a2 + 136)) >> 4)) {
    return 0;
  }
  if ((int)v5 < 3) {
    return 1;
  }
  uint64_t v6 = (v5 - 1);
  unsigned int v7 = v5 - 2;
  uint64_t v8 = 1;
  uint64_t v9 = 16;
  do
  {
    uint64_t v10 = *(void *)(*a2 + 136);
    uint64_t v11 = *(void *)(*a2 + 144) - v10;
    double v12 = (double *)(v10 + v9);
    if (v8 >= (int)((unint64_t)v11 >> 4)) {
      double v12 = 0;
    }
    if ((v7 & 0x80000000) == 0)
    {
      uint64_t v13 = (int)(v11 >> 4);
      uint64_t v14 = *(void *)(a1 + 136);
      BOOL v15 = (int)v7 < (int)((unint64_t)(*(void *)(a1 + 144) - v14) >> 4) && v8 < v13;
      if (v15 && v14 != 0)
      {
        BOOL result = sub_1004BABDC(*v12, v12[1], *(double *)(v14 + 16 * v7), *(double *)(v14 + 16 * v7 + 8), 0.0000001);
        if (!result) {
          break;
        }
      }
    }
    ++v8;
    v9 += 16;
    --v7;
    BOOL result = 1;
  }
  while (v6 != v8);
  return result;
}

BOOL sub_10039D400(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (!*a2) {
    return 0;
  }
  int v3 = *(double **)(a1 + 136);
  double v4 = 0.0;
  double v5 = 0.0;
  double v6 = 0.0;
  if (*(double **)(a1 + 144) != v3)
  {
    double v5 = *v3;
    double v6 = v3[1];
  }
  uint64_t v7 = *(void *)(v2 + 144);
  double v8 = 0.0;
  if (v7 != *(void *)(v2 + 136))
  {
    double v4 = *(double *)(v7 - 16);
    double v8 = *(double *)(v7 - 8);
  }
  return sub_1004BABDC(v5, v6, v4, v8, 0.0000001);
}

BOOL sub_10039D44C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (!*a2) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 144);
  double v4 = 0.0;
  double v5 = 0.0;
  double v6 = 0.0;
  if (v3 != *(void *)(a1 + 136))
  {
    double v5 = *(double *)(v3 - 16);
    double v6 = *(double *)(v3 - 8);
  }
  uint64_t v8 = v2 + 136;
  uint64_t v7 = *(double **)(v2 + 136);
  double v9 = 0.0;
  if (*(double **)(v8 + 8) != v7)
  {
    double v4 = *v7;
    double v9 = v7[1];
  }
  return sub_1004BABDC(v5, v6, v4, v9, 0.0000001);
}

BOOL sub_10039D498(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (!*a2) {
    return 0;
  }
  uint64_t v3 = *(double **)(a1 + 136);
  double v4 = 0.0;
  double v5 = 0.0;
  double v6 = 0.0;
  if (*(double **)(a1 + 144) != v3)
  {
    double v5 = *v3;
    double v6 = v3[1];
  }
  uint64_t v8 = v2 + 136;
  uint64_t v7 = *(double **)(v2 + 136);
  double v9 = 0.0;
  if (*(double **)(v8 + 8) != v7)
  {
    double v4 = *v7;
    double v9 = v7[1];
  }
  return sub_1004BABDC(v5, v6, v4, v9, 0.0000001);
}

BOOL sub_10039D4E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (!*a2) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 144);
  double v4 = 0.0;
  double v5 = 0.0;
  double v6 = 0.0;
  if (v3 != *(void *)(a1 + 136))
  {
    double v5 = *(double *)(v3 - 16);
    double v6 = *(double *)(v3 - 8);
  }
  uint64_t v7 = *(void *)(v2 + 144);
  double v8 = 0.0;
  if (v7 != *(void *)(v2 + 136))
  {
    double v4 = *(double *)(v7 - 16);
    double v8 = *(double *)(v7 - 8);
  }
  return sub_1004BABDC(v5, v6, v4, v8, 0.0000001);
}

BOOL sub_10039D530(uint64_t a1, uint64_t *a2)
{
  if (!*a2) {
    return 0;
  }
  if (sub_10039D498(a1, a2)) {
    return 1;
  }

  return sub_10039D44C(a1, a2);
}

BOOL sub_10039D594(uint64_t a1, uint64_t *a2)
{
  if (!*a2) {
    return 0;
  }
  if (sub_10039D4E4(a1, a2)) {
    return 1;
  }

  return sub_10039D400(a1, a2);
}

BOOL sub_10039D5F8(uint64_t a1, uint64_t *a2)
{
  if (!*a2) {
    return 0;
  }
  if (sub_10039D498(a1, a2)) {
    return 1;
  }

  return sub_10039D400(a1, a2);
}

BOOL sub_10039D65C(uint64_t a1, uint64_t *a2)
{
  if (!*a2) {
    return 0;
  }
  if (sub_10039D4E4(a1, a2)) {
    return 1;
  }

  return sub_10039D44C(a1, a2);
}

uint64_t sub_10039D6C0(uint64_t a1)
{
  unint64_t v1 = *(double **)(a1 + 136);
  uint64_t v2 = *(void *)(a1 + 144);
  if ((unint64_t)(v2 - (void)v1) >= 0x20
    && (v2 - (void)v1 != 32 || !sub_1004BABDC(*(double *)(v2 - 16), *(double *)(v2 - 8), *v1, v1[1], 0.0000001)))
  {
    return 1;
  }
  uint64_t result = 0;
  ++qword_102489BF8;
  return result;
}

BOOL sub_10039D71C(uint64_t *a1, uint64_t a2, void *a3, int a4)
{
  if (a3)
  {
    if ([a3 valueForKey:@"roadID"]) {
      *a1 = (uint64_t)[objc_msgSend(objc_msgSend(a3, "valueForKey:", @"roadID"), "longLongValue");
    }
    if ([a3 valueForKey:@"roadClass"]) {
      *((_DWORD *)a1 + 5) = [objc_msgSend(objc_msgSend(a3, "valueForKey:", @"roadClass"), "intValue");
    }
    if ([a3 valueForKey:@"formOfWay"]) {
      *((_DWORD *)a1 + 6) = [objc_msgSend(objc_msgSend(a3, "valueForKey:", @"formOfWay"), "intValue");
    }
    if ([a3 valueForKey:@"travelDirection"]) {
      *((_DWORD *)a1 + 18) = [objc_msgSend(objc_msgSend(a3, "valueForKey:", @"travelDirection"), "intValue");
    }
    if ([a3 valueForKey:@"rampType"]) {
      *((_DWORD *)a1 + 19) = [objc_msgSend(objc_msgSend(a3, "valueForKey:", @"rampType"), "intValue");
    }
    if ([a3 valueForKey:@"speedLimit"]) {
      *((double *)a1 + 4) = (double)(int)[objc_msgSend(objc_msgSend(a3, "valueForKey:", @"speedLimit"), "intValue");
    }
    if ([a3 valueForKey:@"isDrivable"]) {
      *((unsigned char *)a1 + 81) = [[objc_msgSend(a3, "valueForKey:", @"isDrivable") boolValue];
    }
    if ([a3 valueForKey:@"isRoadPedestrianNavigable"]) {
      unsigned __int8 v36 = [[objc_msgSend(a3, "valueForKey:", @"isRoadPedestrianNavigable") boolValue];
    }
    else {
      unsigned __int8 v36 = 0;
    }
    if ([a3 valueForKey:@"isTunnel"]) {
      *((unsigned char *)a1 + 18) = [objc_msgSend(objc_msgSend(a3, "valueForKey:", @"isTunnel"), "BOOLValue")];
    }
    if ([a3 valueForKey:@"isBridge"]) {
      *((unsigned char *)a1 + 19) = [objc_msgSend(objc_msgSend(a3, "valueForKey:", @"isBridge"), "BOOLValue")];
    }
    if ([a3 valueForKey:@"isRail"]) {
      *((unsigned char *)a1 + 17) = [objc_msgSend(objc_msgSend(a3, "valueForKey:", @"isRail"), "BOOLValue")];
    }
    if ([a3 valueForKey:@"startJunction"]) {
      *((_DWORD *)a1 + 27) = [objc_msgSend(objc_msgSend(a3, "valueForKey:", @"startJunction"), "intValue");
    }
    if ([a3 valueForKey:@"stopJunction"]) {
      *((_DWORD *)a1 + 28) = [[objc_msgSend(a3, "valueForKey:", @"stopJunction") intValue];
    }
    if ([a3 valueForKey:@"startTileBorder"]) {
      *((unsigned char *)a1 + 116) = [objc_msgSend(objc_msgSend(a3, "valueForKey:", @"startTileBorder"), "BOOLValue")];
    }
    if ([a3 valueForKey:@"endTileBorder"]) {
      *((unsigned char *)a1 + 117) = [objc_msgSend(objc_msgSend(a3, "valueForKey:", @"endTileBorder"), "BOOLValue")];
    }
    if ([a3 valueForKey:@"bikeableSide"]) {
      *((_DWORD *)a1 + 22) = [objc_msgSend(objc_msgSend(a3, "valueForKey:", @"bikeableSide"), "intValue");
    }
    if ([a3 valueForKey:@"walkableSide"]) {
      *((_DWORD *)a1 + 21) = [objc_msgSend(objc_msgSend(a3, "valueForKey:", @"walkableSide"), "intValue");
    }
    if ([a3 valueForKey:@"coordinateCount"])
    {
      int v10 = [[a3 valueForKey:@"coordinateCount"] intValue];
      if (v10 >= 1)
      {
        int v11 = v10;
        uint64_t v12 = 0;
        while (1)
        {
          id v14 = [[objc_msgSend(a3 valueForKey:+[NSString stringWithFormat:](NSString, "stringWithFormat:", @"coord%i", v12)) componentsSeparatedByString:@","];
          if ([v14 count] != (id)3) {
            break;
          }
          [v14[0] doubleValue];
          uint64_t v16 = v15;
          [v14[1] doubleValue];
          *(void *)std::string buf = v16;
          *(void *)&uint8_t buf[8] = v17;
          sub_10039C36C(a1, (double *)buf, 1);
          uint64_t v18 = (a1[18] - a1[17]) & 0xFFFFFFFF0;
          [v14[2] doubleValue];
          if (v18 == 16) {
            uint64_t v20 = 15;
          }
          else {
            uint64_t v20 = 16;
          }
          a1[v20] = v19;
          uint64_t v12 = (v12 + 1);
          if (v11 == v12) {
            goto LABEL_53;
          }
        }
        return 0;
      }
    }
LABEL_53:
    int v21 = *((unsigned __int8 *)a1 + 17);
    char v22 = v36;
    if ((*((_DWORD *)a1 + 21) - 1) < 3) {
      char v22 = 1;
    }
    if (*((unsigned char *)a1 + 17)) {
      char v22 = 0;
    }
    *((unsigned char *)a1 + 80) = v22;
    if (v22)
    {
      char v23 = 1;
    }
    else
    {
      if (v21) {
        BOOL v24 = 1;
      }
      else {
        BOOL v24 = (*((_DWORD *)a1 + 22) - 1) >= 3;
      }
      char v23 = !v24;
    }
    *((unsigned char *)a1 + 82) = v23;
    uint64_t v25 = *((int *)a1 + 5);
    int v26 = *((_DWORD *)a1 + 18);
    if (v25 > 7)
    {
      double v28 = dbl_101D1C3C0[v26 == 0];
    }
    else
    {
      double v27 = (double *)&unk_101D1C3D0;
      if (!v26) {
        double v27 = (double *)&unk_101D1C410;
      }
      double v28 = v27[v25];
    }
    *((double *)a1 + 12) = v28;
    if (v21) {
      BOOL v29 = 1;
    }
    else {
      BOOL v29 = v26 == 0;
    }
    char v30 = !v29;
    *((unsigned char *)a1 + 16) = v30;
    int v31 = (_OWORD *)a1[17];
    unint64_t v32 = a1[18] - (void)v31;
    if (a4)
    {
      if ((int)(v32 >> 4) <= 1)
      {
        if (qword_102419430 != -1) {
          dispatch_once(&qword_102419430, &stru_1022ACE90);
        }
        uint64_t v33 = qword_102419438;
        if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_DEBUG))
        {
          uint64_t v34 = *a1;
          unint64_t v35 = (unint64_t)(a1[18] - a1[17]) >> 4;
          *(_DWORD *)std::string buf = 134283777;
          *(void *)&uint8_t buf[4] = v34;
          *(_WORD *)&unsigned char buf[12] = 1026;
          *(_DWORD *)&buf[14] = v35;
          _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEBUG, "CLMM,CLTSP,id,%{private}lld,has less than two coordinate,%{public}d", buf, 0x12u);
        }
        BOOL result = sub_10013D1A0(115, 2);
        if (result)
        {
          bzero(buf, 0x65CuLL);
          if (qword_102419430 != -1) {
            dispatch_once(&qword_102419430, &stru_1022ACE90);
          }
          double v9 = (unsigned char *)_os_log_send_and_compose_impl();
          sub_1004BA5E4("Generic", 1, 0, 2, "BOOL CLMapRoad::fillFromMapHelperNSDictionaryArray(CLDistanceCalc &, NSDictionary * _Nonnull, BOOL)", "%s\n");
LABEL_86:
          if (v9 != buf) {
            free(v9);
          }
          return 0;
        }
        return result;
      }
    }
    else
    {
      BOOL result = 1;
      if (!v31 || (v32 & 0xFFFFFFFF0) != 0x10) {
        return result;
      }
      *(_OWORD *)std::string buf = *v31;
      sub_10039C36C(a1, (double *)buf, 0);
    }
    return 1;
  }
  if (qword_102419430 != -1) {
    dispatch_once(&qword_102419430, &stru_1022ACE90);
  }
  double v6 = qword_102419438;
  if (os_log_type_enabled((os_log_t)qword_102419438, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "CLMM,CLTSP,fillFromMapHelperNSDictionaryArray,array is null", buf, 2u);
  }
  BOOL v7 = sub_10013D1A0(115, 0);
  BOOL result = 0;
  if (v7)
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419430 != -1) {
      dispatch_once(&qword_102419430, &stru_1022ACE90);
    }
    double v9 = (unsigned char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 0, "BOOL CLMapRoad::fillFromMapHelperNSDictionaryArray(CLDistanceCalc &, NSDictionary * _Nonnull, BOOL)", "%s\n");
    goto LABEL_86;
  }
  return result;
}

void sub_10039DF3C(id a1)
{
  qword_102419438 = (uint64_t)os_log_create("com.apple.locationd.Position", "MapMatcher");
}

uint64_t sub_10039DF6C(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    *(void *)(a1 + 8) = v2;
    operator delete(v2);
  }
  return a1;
}

id sub_10039E1F8()
{
  id v0 = +[NSMutableArray array];
  if (qword_10247A878 - qword_10247A870 != 8)
  {
    unint64_t v2 = 0;
    do
    {
      uint64_t v3 = [GPSCalCoreAnalyticsBin alloc];
      double v4 = (double *)(qword_10247A870 + 8 * v2++);
      [v0 addObject:-[GPSCalCoreAnalyticsBin initWithSpeeds:speedUB:](v3, "initWithSpeeds:speedUB:", *v4, v4[1])];
    }
    while (v2 < ((qword_10247A878 - qword_10247A870) >> 3) - 1);
  }
  return v0;
}

uint64_t sub_10039E2AC(uint64_t a1, char a2, char a3)
{
  id v6 = sub_10039E1F8();
  sub_10039E524(a1, @"GPSSpeedToKValueTable", (uint64_t)v6, 1, a2, a3);
  *(void *)a1 = off_1022ACEC0;
  sub_100513074(a1 + 56, "CMGPSRawSpeedKValueMtex", 0, 1);
  *(void *)(a1 + 48) = sub_10039E1F8();
  if (qword_102419030 != -1) {
    dispatch_once(&qword_102419030, &stru_1022ACF30);
  }
  BOOL v7 = qword_102419038;
  if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_INFO))
  {
    unsigned int v8 = [*(id *)(a1 + 48) count];
    *(_DWORD *)std::string buf = 67109120;
    unsigned int v12 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "GPSRawSpeedToKValueTable: number of def bins: %d", buf, 8u);
  }
  if (sub_10013D1A0(115, 2))
  {
    bzero(buf, 0x65CuLL);
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    [*(id *)(a1 + 48) count];
    int v10 = (char *)_os_log_send_and_compose_impl();
    sub_1004BA5E4("Generic", 1, 0, 2, "CMMobilityCal::GPSRawSpeedToKValueTable::GPSRawSpeedToKValueTable(BOOL, BOOL)", "%s\n", v10);
    if (v10 != (char *)buf) {
      free(v10);
    }
  }
  sub_10039E9E8(a1);
  sub_10039ECEC(a1, 1);
  return a1;
}

void sub_10039E4F4(_Unwind_Exception *a1)
{
  sub_10051310C(v2);
  sub_10039F3E0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10039E524(uint64_t a1, void *a2, uint64_t a3, int a4, char a5, char a6)
{
  *(void *)a1 = &off_1022ACF60;
  *(void *)(a1 + 8) = +[NSMutableArray arrayWithArray:](NSMutableArray, "arrayWithArray:");
  *(_DWORD *)(a1 + 16) = a4;
  *(_DWORD *)(a1 + 20) = -1;
  *(void *)(a1 + 32) = a2;
  *(unsigned char *)(a1 + 40) = a5;
  *(unsigned char *)(a1 + 41) = a6;
  *(void *)(a1 + 24) = sub_1000A6958();
  if ((sub_1003A0F94(a1) & 0x80000000) != 0)
  {
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    int v11 = qword_102419038;
    if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v12 = *(void *)(a1 + 32);
      *(_DWORD *)std::string buf = 138412290;
      uint64_t v22 = v12;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Unable to restore table %@.", buf, 0xCu);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419030 != -1) {
        dispatch_once(&qword_102419030, &stru_1022ACF30);
      }
      uint64_t v18 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::CalTable(NSString *, NSArray<outT *> *, const TableVersion, BOOL, BOOL) [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v18);
      if (v18 != (char *)buf) {
        free(v18);
      }
    }
    uint64_t v13 = *(void **)(a1 + 8);
    if (v13 && [v13 count])
    {
      if (qword_102419030 != -1) {
        dispatch_once(&qword_102419030, &stru_1022ACF30);
      }
      id v14 = qword_102419038;
      if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEFAULT))
      {
        int v15 = *(_DWORD *)(a1 + 16);
        *(_DWORD *)std::string buf = 67109120;
        LODWORD(v22) = v15;
        _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "Use default bins version %d and store them.", buf, 8u);
      }
      if (sub_10013D1A0(115, 2))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419030 != -1) {
          dispatch_once(&qword_102419030, &stru_1022ACF30);
        }
        uint64_t v20 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 2, "CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::CalTable(NSString *, NSArray<outT *> *, const TableVersion, BOOL, BOOL) [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v20);
        if (v20 != (char *)buf) {
          free(v20);
        }
      }
      if (sub_10039FFF4(a1) == 100) {
        *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 16);
      }
    }
    else
    {
      *(void *)(a1 + 8) = 0;
      if (qword_102419030 != -1) {
        dispatch_once(&qword_102419030, &stru_1022ACF30);
      }
      uint64_t v16 = qword_102419038;
      if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Unexpected error in calibration table initialization.", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419030 != -1) {
          dispatch_once(&qword_102419030, &stru_1022ACF30);
        }
        uint64_t v19 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "CMMobilityCal::CalTable<double, GPSCalCoreAnalyticsBin>::CalTable(NSString *, NSArray<outT *> *, const TableVersion, BOOL, BOOL) [inT = double, outT = GPSCalCoreAnalyticsBin]", "%s\n", v19);
        if (v19 != (char *)buf) {
          free(v19);
        }
      }
    }
  }
  return a1;
}

uint64_t sub_10039E9E8(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 16) != *(_DWORD *)(a1 + 20))
  {
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    uint64_t v2 = qword_102419038;
    if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "The version of restored table does not match runtime version. Restoring default.", buf, 2u);
    }
    if (sub_10013D1A0(115, 2))
    {
      bzero(buf, 0x65CuLL);
      if (qword_102419030 != -1) {
        dispatch_once(&qword_102419030, &stru_1022ACF30);
      }
      double v5 = (char *)_os_log_send_and_compose_impl();
      sub_1004BA5E4("Generic", 1, 0, 2, "CMError CMMobilityCal::GPSRawSpeedToKValueTable::version()", "%s\n", v5);
      if (v5 != (char *)buf) {
        free(v5);
      }
    }
    *(void *)(a1 + 8) = +[NSMutableArray arrayWithArray:sub_10039E1F8()];
    if (sub_10039FFF4(a1) == 100)
    {
      *(_DWORD *)(a1 + 20) = *(_DWORD *)(a1 + 16);
    }
    else
    {
      if (qword_102419030 != -1) {
        dispatch_once(&qword_102419030, &stru_1022ACF30);
      }
      uint64_t v3 = qword_102419038;
      if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)std::string buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Table display error.", buf, 2u);
      }
      if (sub_10013D1A0(115, 0))
      {
        bzero(buf, 0x65CuLL);
        if (qword_102419030 != -1) {
          dispatch_once(&qword_102419030, &stru_1022ACF30);
        }
        id v6 = (char *)_os_log_send_and_compose_impl();
        sub_1004BA5E4("Generic", 1, 0, 0, "CMError CMMobilityCal::GPSRawSpeedToKValueTable::version()", "%s\n", v6);
        if (v6 != (char *)buf) {
          free(v6);
        }
      }
    }
  }
  return 100;
}

uint64_t sub_10039ECEC(uint64_t a1, char a2)
{
  char v2 = a2;
  double v4 = &qword_102419000;
  if (a2)
  {
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    double v5 = qword_102419038;
    if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "* CMMobilityCal::GPSRawSpeedToKValueTable *", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_15;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    LOWORD(v44) = 0;
  }
  else
  {
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    id v6 = qword_102419038;
    if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)std::string buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "* CMMobilityCal::GPSRawSpeedToKValueTable *", buf, 2u);
    }
    if (!sub_10013D1A0(115, 2)) {
      goto LABEL_15;
    }
    bzero(buf, 0x65CuLL);
    if (qword_102419030 != -1) {
      dispatch_once(&qword_102419030, &stru_1022ACF30);
    }
    LOWORD(v44) = 0;
  }
  uint64_t v38 = (char *)_os_log_send_and_compose_impl();
  sub_1004BA5E4("Generic", 1, 0, 2, "CMError CMMobilityCal::GPSRawSpeedToKValueTable::show(BOOL)", "%s\n", v38);
  if (v38 != (char *)buf) {
    free(v38);
  }
LABEL_15:
  long long v42 = 0u;
  long long v43 = 0u;
  long long v40 = 0u;
  long long v41 = 0u;
  BOOL v7 = *(void **)(a1 + 8);
  id v8 = [v7 countByEnumeratingWithState:&v40 objects:v54 count:16];
  if (!v8) {
    return 100;
  }
  id v9 = v8;
  int v10 = 0;
  uint64_t v11 = *(void *)v41;
  char v39 = v2;
  do
  {
    uint64_t v12 = 0;
    do
    {
      if (*(void *)v41 != v11) {
        objc_enumerationMutation(v7);
      }
      uint64_t v13 = *(void **)(*((void *)&v40 + 1) + 8 * (void)v12);
      if (v13)
      {
        uint64_t v14 = v4[6];
        if (v2)
        {
          if (v14 != -1) {
            dispatch_once(&qword_102419030, &stru_1022ACF30);
          }
          int v15 = qword_102419038;
          if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEBUG))
          {
            [v13 mean];
            uint64_t v17 = v16;
            [v13 variance];
            uint64_t v19 = v18;
            unsigned int v20 = [v13 updateCount];
            [v13 lastUpdateTime];
            *(_DWORD *)std::string buf = 67110144;
            int v56 = v10;
            __int16 v57 = 2048;
            uint64_t v58 = v17;
            __int16 v59 = 2048;
            uint64_t v60 = v19;
            __int16 v61 = 1024;
            unsigned int v62 = v20;
            double v4 = &qword_102419000;
            __int16 v63 = 2048;
            uint64_t v64 = v21;
            _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEBUG, "Bin #%d | mean: %f | variance: %f | updateCount: %d | lastUpdateTime: %f", buf, 0x2Cu);
            ++v10;
            char v2 = v39;
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (v4[6] != -1) {
              dispatch_once(&qword_102419030, &stru_1022ACF30);
            }
LABEL_39:
            [v13 mean];
            uint64_t v30 = v29;
            [v13 variance];
            uint64_t v32 = v31;
            unsigned int v33 = [v13 updateCount];
            [v13 lastUpdateTime];
            int v44 = 67110144;
            int v45 = v10;
            __int16 v46 = 2048;
            uint64_t v47 = v30;
            __int16 v48 = 2048;
            uint64_t v49 = v32;
            __int16 v50 = 1024;
            unsigned int v51 = v33;
            __int16 v52 = 2048;
            uint64_t v53 = v34;
            unint64_t v35 = (char *)_os_log_send_and_compose_impl();
            sub_1004BA5E4("Generic", 1, 0, 2, "CMError CMMobilityCal::GPSRawSpeedToKValueTable::show(BOOL)", "%s\n", v35);
            if (v35 != (char *)buf) {
              free(v35);
            }
            ++v10;
            double v4 = &qword_102419000;
          }
        }
        else
        {
          if (v14 != -1) {
            dispatch_once(&qword_102419030, &stru_1022ACF30);
          }
          uint64_t v22 = qword_102419038;
          if (os_log_type_enabled((os_log_t)qword_102419038, OS_LOG_TYPE_DEFAULT))
          {
            [v13 mean];
            uint64_t v24 = v23;
            [v13 variance];
            uint64_t v26 = v25;
            unsigned int v27 = [v13 updateCount];
            [v13 lastUpdateTime];
            *(_DWORD *)std::string buf = 67110144;
            int v56 = v10;
            __int16 v57 = 2048;
            uint64_t v58 = v24;
            __int16 v59 = 2048;
            uint64_t v60 = v26;
            __int16 v61 = 1024;
            unsigned int v62 = v27;
            double v4 = &qword_102419000;
            __int16 v63 = 2048;
            uint64_t v64 = v28;
            _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Bin #%d | mean: %f | variance: %f | updateCount: %d | lastUpdateTime: %f", buf, 0x2Cu);
            ++v10;
            char v2 = v39;
          }
          if (sub_10013D1A0(115, 2))
          {
            bzero(buf, 0x65CuLL);
            if (v4[6] != -1) {
              dispatch_once(&qword_102419030, &stru_1022ACF30);
            }
            goto LABEL_39;
          }
        }
      }
      uint64_t v12 = (char *)v12 + 1;
    }
    while (v9 != v12);
    id v36 = [v7 countByEnumeratingWithState:&v40 objects:v54 count:16];
    id v9 = v36;
  }
  while (v36);
  return 100;
}