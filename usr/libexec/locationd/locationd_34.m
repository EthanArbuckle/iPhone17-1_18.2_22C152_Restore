uint64_t sub_1017217AC(uint64_t result, PB::Writer *this)
{
  void *v3;
  const PB::Base *v4;
  const PB::Base *v5;
  const PB::Base *v6;
  const PB::Base *v7;
  const PB::Base *v8;
  const PB::Base *v9;
  const PB::Base *v10;
  const PB::Base *v11;
  const PB::Base *v12;
  const PB::Base *v13;
  const PB::Base *v14;
  const PB::Base *v15;
  const PB::Base *v16;
  const PB::Base *v17;
  const PB::Base *v18;
  const PB::Base *v19;
  const PB::Base *v20;
  const PB::Base *v21;
  const PB::Base *v22;
  const PB::Base *v23;
  const PB::Base *v24;
  const PB::Base *v25;
  const PB::Base *v26;
  const PB::Base *v27;
  const PB::Base *v28;
  const PB::Base *v29;
  const PB::Base *v30;
  const PB::Base *v31;
  const PB::Base *v32;
  const PB::Base *v33;
  const PB::Base *v34;
  const PB::Base *v35;
  const PB::Base *v36;
  const PB::Base *v37;
  const PB::Base *v38;
  const PB::Base *v39;
  const PB::Base *v40;
  const PB::Base *v41;
  const PB::Base *v42;
  const PB::Base *v43;
  const PB::Base *v44;
  const PB::Base *v45;
  const PB::Base *v46;
  const PB::Base *v47;
  const PB::Base *v48;
  const PB::Base *v49;
  const PB::Base *v50;
  const PB::Base *v51;
  const PB::Base *v52;
  const PB::Base *v53;
  const PB::Base *v54;
  const PB::Base *v55;
  const PB::Base *v56;
  const PB::Base *v57;
  const PB::Base *v58;
  const PB::Base *v59;
  const PB::Base *v60;
  const PB::Base *v61;
  const PB::Base *v62;
  const PB::Base *v63;
  const PB::Base *v64;
  const PB::Base *v65;
  const PB::Base *v66;
  const PB::Base *v67;
  const PB::Base *v68;
  const PB::Base *v69;
  const PB::Base *v70;
  const PB::Base *v71;
  const PB::Base *v72;
  const PB::Base *v73;
  const PB::Base *v74;
  const PB::Base *v75;
  const PB::Base *v76;
  const PB::Base *v77;
  const PB::Base *v78;
  const PB::Base *v79;
  const PB::Base *v80;
  const PB::Base *v81;
  const PB::Base *v82;
  const PB::Base *v83;
  const PB::Base *v84;
  const PB::Base *v85;
  const PB::Base *v86;
  const PB::Base *v87;
  const PB::Base *v88;
  const PB::Base *v89;
  const PB::Base *v90;
  const PB::Base *v91;
  const PB::Base *v92;
  const PB::Base *v93;
  const PB::Base *v94;
  const PB::Base *v95;
  const PB::Base *v96;
  const PB::Base *v97;
  const PB::Base *v98;
  const PB::Base *v99;
  const PB::Base *v100;
  const PB::Base *v101;
  const PB::Base *v102;
  const PB::Base *v103;
  const PB::Base *v104;
  const PB::Base *v105;
  const PB::Base *v106;
  const PB::Base *v107;
  const PB::Base *v108;
  const PB::Base *v109;
  const PB::Base *v110;
  const PB::Base *v111;
  const PB::Base *v112;
  const PB::Base *v113;
  const PB::Base *v114;
  const PB::Base *v115;
  const PB::Base *v116;
  const PB::Base *v117;
  const PB::Base *v118;
  const PB::Base *v119;
  const PB::Base *v120;
  const PB::Base *v121;
  const PB::Base *v122;
  const PB::Base *v123;
  const PB::Base *v124;
  const PB::Base *v125;
  const PB::Base *v126;
  const PB::Base *v127;
  const PB::Base *v128;
  const PB::Base *v129;
  const PB::Base *v130;
  const PB::Base *v131;
  const PB::Base *v132;
  const PB::Base *v133;
  const PB::Base *v134;
  const PB::Base *v135;
  const PB::Base *v136;
  const PB::Base *v137;
  const PB::Base *v138;
  const PB::Base *v139;
  const PB::Base *v140;
  const PB::Base *v141;
  const PB::Base *v142;
  const PB::Base *v143;
  const PB::Base *v144;
  const PB::Base *v145;
  const PB::Base *v146;
  const PB::Base *v147;
  const PB::Base *v148;
  const PB::Base *v149;
  const PB::Base *v150;
  const PB::Base *v151;
  const PB::Base *v152;
  const PB::Base *v153;
  const PB::Base *v154;
  const PB::Base *v155;
  const PB::Base *v156;
  const PB::Base *v157;
  const PB::Base *v158;
  const PB::Base *v159;
  const PB::Base *v160;
  const PB::Base *v161;
  const PB::Base *v162;
  const PB::Base *v163;
  const PB::Base *v164;
  const PB::Base *v165;
  const PB::Base *v166;
  const PB::Base *v167;
  const PB::Base *v168;
  const PB::Base *v169;
  const PB::Base *v170;
  const PB::Base *v171;
  const PB::Base *v172;
  const PB::Base *v173;
  const PB::Base *v174;
  const PB::Base *v175;
  const PB::Base *v176;
  const PB::Base *v177;
  const PB::Base *v178;
  const PB::Base *v179;
  const PB::Base *v180;
  const PB::Base *v181;
  const PB::Base *v182;
  const PB::Base *v183;
  const PB::Base *v184;
  const PB::Base *v185;
  const PB::Base *v186;
  const PB::Base *v187;
  const PB::Base *v188;
  const PB::Base *v189;
  const PB::Base *v190;
  const PB::Base *v191;
  const PB::Base *v192;
  const PB::Base *v193;
  const PB::Base *v194;
  const PB::Base *v195;
  const PB::Base *v196;
  const PB::Base *v197;
  const PB::Base *v198;
  const PB::Base *v199;
  const PB::Base *v200;
  const PB::Base *v201;
  const PB::Base *v202;
  const PB::Base *v203;
  const PB::Base *v204;
  const PB::Base *v205;
  const PB::Base *v206;
  const PB::Base *v207;
  const PB::Base *v208;
  const PB::Base *v209;
  const PB::Base *v210;
  const PB::Base *v211;
  const PB::Base *v212;
  const PB::Base *v213;
  const PB::Base *v214;
  const PB::Base *v215;
  const PB::Base *v216;
  const PB::Base *v217;
  const PB::Base *v218;
  const PB::Base *v219;
  const PB::Base *v220;
  const PB::Base *v221;
  const PB::Base *v222;
  const PB::Base *v223;
  const PB::Base *v224;
  const PB::Base *v225;
  const PB::Base *v226;
  const PB::Base *v227;
  const PB::Base *v228;
  const PB::Base *v229;
  const PB::Base *v230;
  const PB::Base *v231;
  const PB::Base *v232;
  const PB::Base *v233;
  const PB::Base *v234;
  const PB::Base *v235;
  const PB::Base *v236;
  const PB::Base *v237;
  const PB::Base *v238;
  const PB::Base *v239;
  const PB::Base *v240;
  const PB::Base *v241;
  const PB::Base *v242;
  const PB::Base *v243;
  const PB::Base *v244;
  const PB::Base *v245;
  const PB::Base *v246;
  const PB::Base *v247;
  const PB::Base *v248;
  const PB::Base *v249;
  const PB::Base *v250;
  const PB::Base *v251;
  const PB::Base *v252;
  const PB::Base *v253;
  const PB::Base *v254;
  const PB::Base *v255;
  const PB::Base *v256;
  const PB::Base *v257;
  const PB::Base *v258;
  const PB::Base *v259;
  const PB::Base *v260;
  const PB::Base *v261;
  const PB::Base *v262;
  const PB::Base *v263;
  const PB::Base *v264;
  const PB::Base *v265;
  const PB::Base *v266;
  const PB::Base *v267;
  const PB::Base *v268;
  const PB::Base *v269;
  const PB::Base *v270;
  const PB::Base *v271;
  const PB::Base *v272;
  const PB::Base *v273;
  const PB::Base *v274;
  const PB::Base *v275;
  const PB::Base *v276;
  const PB::Base *v277;
  const PB::Base *v278;
  const PB::Base *v279;
  const PB::Base *v280;
  const PB::Base *v281;
  const PB::Base *v282;
  const PB::Base *v283;
  const PB::Base *v284;
  const PB::Base *v285;
  const PB::Base *v286;
  const PB::Base *v287;
  const PB::Base *v288;
  const PB::Base *v289;
  const PB::Base *v290;
  const PB::Base *v291;
  const PB::Base *v292;
  const PB::Base *v293;
  const PB::Base *v294;
  const PB::Base *v295;
  const PB::Base *v296;
  const PB::Base *v297;
  const PB::Base *v298;
  const PB::Base *v299;
  const PB::Base *v300;
  const PB::Base *v301;
  const PB::Base *v302;
  const PB::Base *v303;
  const PB::Base *v304;
  const PB::Base *v305;
  const PB::Base *v306;
  const PB::Base *v307;
  const PB::Base *v308;
  const PB::Base *v309;
  const PB::Base *v310;
  const PB::Base *v311;
  const PB::Base *v312;
  const PB::Base *v313;
  const PB::Base *v314;
  const PB::Base *v315;
  const PB::Base *v316;
  const PB::Base *v317;
  const PB::Base *v318;
  const PB::Base *v319;
  const PB::Base *v320;
  const PB::Base *v321;
  const PB::Base *v322;
  const PB::Base *v323;
  const PB::Base *v324;
  const PB::Base *v325;
  const PB::Base *v326;
  const PB::Base *v327;
  const PB::Base *v328;
  const PB::Base *v329;
  const PB::Base *v330;
  const PB::Base *v331;
  const PB::Base *v332;
  const PB::Base *v333;
  const PB::Base *v334;
  const PB::Base *v335;
  const PB::Base *v336;
  const PB::Base *v337;
  const PB::Base *v338;
  const PB::Base *v339;
  const PB::Base *v340;
  const PB::Base *v341;
  const PB::Base *v342;
  const PB::Base *v343;
  const PB::Base *v344;
  const PB::Base *v345;
  const PB::Base *v346;
  const PB::Base *v347;
  const PB::Base *v348;
  const PB::Base *v349;
  const PB::Base *v350;
  const PB::Base *v351;
  const PB::Base *v352;
  const PB::Base *v353;
  const PB::Base *v354;
  const PB::Base *v355;
  const PB::Base *v356;
  const PB::Base *v357;
  const PB::Base *v358;
  const PB::Base *v359;
  const PB::Base *v360;
  const PB::Base *v361;
  const PB::Base *v362;
  const PB::Base *v363;
  const PB::Base *v364;
  const PB::Base *v365;
  const PB::Base *v366;
  const PB::Base *v367;
  const PB::Base *v368;
  const PB::Base *v369;
  const PB::Base *v370;
  const PB::Base *v371;
  const PB::Base *v372;
  const PB::Base *v373;
  const PB::Base *v374;
  const PB::Base *v375;
  const PB::Base *v376;
  const PB::Base *v377;
  const PB::Base *v378;
  const PB::Base *v379;
  const PB::Base *v380;
  const PB::Base *v381;
  const PB::Base *v382;
  const PB::Base *v383;
  const PB::Base *v384;
  const PB::Base *v385;
  const PB::Base *v386;
  const PB::Base *v387;
  const PB::Base *v388;
  const PB::Base *v389;
  const PB::Base *v390;
  const PB::Base *v391;
  const PB::Base *v392;
  const PB::Base *v393;
  const PB::Base *v394;
  const PB::Base *v395;
  const PB::Base *v396;
  const PB::Base *v397;
  const PB::Base *v398;
  const PB::Base *v399;
  const PB::Base *v400;
  const PB::Base *v401;
  const PB::Base *v402;
  const PB::Base *v403;
  const PB::Base *v404;
  const PB::Base *v405;
  const PB::Base *v406;
  const PB::Base *v407;
  const PB::Base *v408;
  const PB::Base *v409;
  const PB::Base *v410;
  const PB::Base *v411;
  const PB::Base *v412;
  const PB::Base *v413;
  const PB::Base *v414;
  const PB::Base *v415;
  const PB::Base *v416;
  const PB::Base *v417;
  const PB::Base *v418;
  const PB::Base *v419;
  const PB::Base *v420;
  const PB::Base *v421;
  const PB::Base *v422;
  const PB::Base *v423;
  const PB::Base *v424;
  const PB::Base *v425;
  const PB::Base *v426;
  const PB::Base *v427;
  const PB::Base *v428;
  const PB::Base *v429;
  const PB::Base *v430;
  const PB::Base *v431;
  const PB::Base *v432;
  const PB::Base *v433;
  const PB::Base *v434;
  const PB::Base *v435;
  const PB::Base *v436;
  const PB::Base *v437;
  const PB::Base *v438;
  const PB::Base *v439;
  const PB::Base *v440;
  const PB::Base *v441;
  const PB::Base *v442;
  const PB::Base *v443;
  const PB::Base *v444;
  const PB::Base *v445;
  const PB::Base *v446;
  const PB::Base *v447;
  const PB::Base *v448;
  const PB::Base *v449;
  const PB::Base *v450;
  const PB::Base *v451;
  const PB::Base *v452;
  const PB::Base *v453;
  uint64_t vars8;

  v3 = (void *)result;
  if (*(unsigned char *)(result + 3616)) {
    result = PB::Writer::write(this, *(double *)(result + 616), 1u);
  }
  v4 = (const PB::Base *)v3[146];
  if (v4) {
    result = PB::Writer::writeSubmessage(this, v4, 2u);
  }
  v5 = (const PB::Base *)v3[145];
  if (v5) {
    result = PB::Writer::writeSubmessage(this, v5, 3u);
  }
  v6 = (const PB::Base *)v3[142];
  if (v6) {
    result = PB::Writer::writeSubmessage(this, v6, 4u);
  }
  v7 = (const PB::Base *)v3[141];
  if (v7) {
    result = PB::Writer::writeSubmessage(this, v7, 5u);
  }
  v8 = (const PB::Base *)v3[85];
  if (v8) {
    result = PB::Writer::writeSubmessage(this, v8, 6u);
  }
  v9 = (const PB::Base *)v3[84];
  if (v9) {
    result = PB::Writer::writeSubmessage(this, v9, 7u);
  }
  v10 = (const PB::Base *)v3[91];
  if (v10) {
    result = PB::Writer::writeSubmessage(this, v10, 8u);
  }
  v11 = (const PB::Base *)v3[90];
  if (v11) {
    result = PB::Writer::writeSubmessage(this, v11, 9u);
  }
  v12 = (const PB::Base *)v3[180];
  if (v12) {
    result = PB::Writer::writeSubmessage(this, v12, 0xAu);
  }
  v13 = (const PB::Base *)v3[95];
  if (v13) {
    result = PB::Writer::writeSubmessage(this, v13, 0xBu);
  }
  v14 = (const PB::Base *)v3[11];
  if (v14) {
    result = PB::Writer::writeSubmessage(this, v14, 0x10u);
  }
  v15 = (const PB::Base *)v3[18];
  if (v15) {
    result = PB::Writer::writeSubmessage(this, v15, 0x11u);
  }
  v16 = (const PB::Base *)v3[27];
  if (v16) {
    result = PB::Writer::writeSubmessage(this, v16, 0x12u);
  }
  v17 = (const PB::Base *)v3[431];
  if (v17) {
    result = PB::Writer::writeSubmessage(this, v17, 0x13u);
  }
  v18 = (const PB::Base *)v3[434];
  if (v18) {
    result = PB::Writer::writeSubmessage(this, v18, 0x14u);
  }
  v19 = (const PB::Base *)v3[436];
  if (v19) {
    result = PB::Writer::writeSubmessage(this, v19, 0x15u);
  }
  v20 = (const PB::Base *)v3[440];
  if (v20) {
    result = PB::Writer::writeSubmessage(this, v20, 0x16u);
  }
  v21 = (const PB::Base *)v3[444];
  if (v21) {
    result = PB::Writer::writeSubmessage(this, v21, 0x17u);
  }
  v22 = (const PB::Base *)v3[442];
  if (v22) {
    result = PB::Writer::writeSubmessage(this, v22, 0x18u);
  }
  v23 = (const PB::Base *)v3[448];
  if (v23) {
    result = PB::Writer::writeSubmessage(this, v23, 0x19u);
  }
  v24 = (const PB::Base *)v3[415];
  if (v24) {
    result = PB::Writer::writeSubmessage(this, v24, 0x1Au);
  }
  v25 = (const PB::Base *)v3[68];
  if (v25) {
    result = PB::Writer::writeSubmessage(this, v25, 0x1Bu);
  }
  v26 = (const PB::Base *)v3[69];
  if (v26) {
    result = PB::Writer::writeSubmessage(this, v26, 0x1Cu);
  }
  v27 = (const PB::Base *)v3[70];
  if (v27) {
    result = PB::Writer::writeSubmessage(this, v27, 0x1Du);
  }
  v28 = (const PB::Base *)v3[67];
  if (v28) {
    result = PB::Writer::writeSubmessage(this, v28, 0x1Eu);
  }
  v29 = (const PB::Base *)v3[71];
  if (v29) {
    result = PB::Writer::writeSubmessage(this, v29, 0x1Fu);
  }
  v30 = (const PB::Base *)v3[439];
  if (v30) {
    result = PB::Writer::writeSubmessage(this, v30, 0x20u);
  }
  v31 = (const PB::Base *)v3[288];
  if (v31) {
    result = PB::Writer::writeSubmessage(this, v31, 0x21u);
  }
  v32 = (const PB::Base *)v3[340];
  if (v32) {
    result = PB::Writer::writeSubmessage(this, v32, 0x22u);
  }
  v33 = (const PB::Base *)v3[446];
  if (v33) {
    result = PB::Writer::writeSubmessage(this, v33, 0x23u);
  }
  v34 = (const PB::Base *)v3[425];
  if (v34) {
    result = PB::Writer::writeSubmessage(this, v34, 0x24u);
  }
  v35 = (const PB::Base *)v3[76];
  if (v35) {
    result = PB::Writer::writeSubmessage(this, v35, 0x25u);
  }
  v36 = (const PB::Base *)v3[427];
  if (v36) {
    result = PB::Writer::writeSubmessage(this, v36, 0x26u);
  }
  v37 = (const PB::Base *)v3[176];
  if (v37) {
    result = PB::Writer::writeSubmessage(this, v37, 0x27u);
  }
  v38 = (const PB::Base *)v3[174];
  if (v38) {
    result = PB::Writer::writeSubmessage(this, v38, 0x28u);
  }
  v39 = (const PB::Base *)v3[169];
  if (v39) {
    result = PB::Writer::writeSubmessage(this, v39, 0x29u);
  }
  v40 = (const PB::Base *)v3[28];
  if (v40) {
    result = PB::Writer::writeSubmessage(this, v40, 0x2Au);
  }
  v41 = (const PB::Base *)v3[29];
  if (v41) {
    result = PB::Writer::writeSubmessage(this, v41, 0x2Bu);
  }
  v42 = (const PB::Base *)v3[34];
  if (v42) {
    result = PB::Writer::writeSubmessage(this, v42, 0x2Cu);
  }
  v43 = (const PB::Base *)v3[114];
  if (v43) {
    result = PB::Writer::writeSubmessage(this, v43, 0x2Du);
  }
  v44 = (const PB::Base *)v3[447];
  if (v44) {
    result = PB::Writer::writeSubmessage(this, v44, 0x2Eu);
  }
  v45 = (const PB::Base *)v3[443];
  if (v45) {
    result = PB::Writer::writeSubmessage(this, v45, 0x2Fu);
  }
  v46 = (const PB::Base *)v3[168];
  if (v46) {
    result = PB::Writer::writeSubmessage(this, v46, 0x30u);
  }
  v47 = (const PB::Base *)v3[410];
  if (v47) {
    result = PB::Writer::writeSubmessage(this, v47, 0x31u);
  }
  v48 = (const PB::Base *)v3[44];
  if (v48) {
    result = PB::Writer::writeSubmessage(this, v48, 0x32u);
  }
  v49 = (const PB::Base *)v3[407];
  if (v49) {
    result = PB::Writer::writeSubmessage(this, v49, 0x33u);
  }
  v50 = (const PB::Base *)v3[235];
  if (v50) {
    result = PB::Writer::writeSubmessage(this, v50, 0x34u);
  }
  v51 = (const PB::Base *)v3[125];
  if (v51) {
    result = PB::Writer::writeSubmessage(this, v51, 0x35u);
  }
  v52 = (const PB::Base *)v3[10];
  if (v52) {
    result = PB::Writer::writeSubmessage(this, v52, 0x36u);
  }
  v53 = (const PB::Base *)v3[259];
  if (v53) {
    result = PB::Writer::writeSubmessage(this, v53, 0x37u);
  }
  v54 = (const PB::Base *)v3[379];
  if (v54) {
    result = PB::Writer::writeSubmessage(this, v54, 0x38u);
  }
  v55 = (const PB::Base *)v3[245];
  if (v55) {
    result = PB::Writer::writeSubmessage(this, v55, 0x39u);
  }
  v56 = (const PB::Base *)v3[89];
  if (v56) {
    result = PB::Writer::writeSubmessage(this, v56, 0x3Au);
  }
  v57 = (const PB::Base *)v3[408];
  if (v57) {
    result = PB::Writer::writeSubmessage(this, v57, 0x3Bu);
  }
  v58 = (const PB::Base *)v3[356];
  if (v58) {
    result = PB::Writer::writeSubmessage(this, v58, 0x3Cu);
  }
  v59 = (const PB::Base *)v3[409];
  if (v59) {
    result = PB::Writer::writeSubmessage(this, v59, 0x3Du);
  }
  v60 = (const PB::Base *)v3[414];
  if (v60) {
    result = PB::Writer::writeSubmessage(this, v60, 0x3Eu);
  }
  v61 = (const PB::Base *)v3[219];
  if (v61) {
    result = PB::Writer::writeSubmessage(this, v61, 0x3Fu);
  }
  v62 = (const PB::Base *)v3[194];
  if (v62) {
    result = PB::Writer::writeSubmessage(this, v62, 0x40u);
  }
  v63 = (const PB::Base *)v3[166];
  if (v63) {
    result = PB::Writer::writeSubmessage(this, v63, 0x41u);
  }
  v64 = (const PB::Base *)v3[215];
  if (v64) {
    result = PB::Writer::writeSubmessage(this, v64, 0x42u);
  }
  v65 = (const PB::Base *)v3[397];
  if (v65) {
    result = PB::Writer::writeSubmessage(this, v65, 0x43u);
  }
  v66 = (const PB::Base *)v3[210];
  if (v66) {
    result = PB::Writer::writeSubmessage(this, v66, 0x44u);
  }
  v67 = (const PB::Base *)v3[16];
  if (v67) {
    result = PB::Writer::writeSubmessage(this, v67, 0x64u);
  }
  v68 = (const PB::Base *)v3[398];
  if (v68) {
    result = PB::Writer::writeSubmessage(this, v68, 0x65u);
  }
  v69 = (const PB::Base *)v3[47];
  if (v69) {
    result = PB::Writer::writeSubmessage(this, v69, 0x66u);
  }
  v70 = (const PB::Base *)v3[391];
  if (v70) {
    result = PB::Writer::writeSubmessage(this, v70, 0x67u);
  }
  v71 = (const PB::Base *)v3[46];
  if (v71) {
    result = PB::Writer::writeSubmessage(this, v71, 0x68u);
  }
  v72 = (const PB::Base *)v3[392];
  if (v72) {
    result = PB::Writer::writeSubmessage(this, v72, 0x69u);
  }
  v73 = (const PB::Base *)v3[432];
  if (v73) {
    result = PB::Writer::writeSubmessage(this, v73, 0x6Au);
  }
  v74 = (const PB::Base *)v3[37];
  if (v74) {
    result = PB::Writer::writeSubmessage(this, v74, 0x6Bu);
  }
  v75 = (const PB::Base *)v3[430];
  if (v75) {
    result = PB::Writer::writeSubmessage(this, v75, 0x6Cu);
  }
  v76 = (const PB::Base *)v3[411];
  if (v76) {
    result = PB::Writer::writeSubmessage(this, v76, 0x6Du);
  }
  v77 = (const PB::Base *)v3[155];
  if (v77) {
    result = PB::Writer::writeSubmessage(this, v77, 0x6Eu);
  }
  v78 = (const PB::Base *)v3[367];
  if (v78) {
    result = PB::Writer::writeSubmessage(this, v78, 0x6Fu);
  }
  v79 = (const PB::Base *)v3[131];
  if (v79) {
    result = PB::Writer::writeSubmessage(this, v79, 0x70u);
  }
  v80 = (const PB::Base *)v3[109];
  if (v80) {
    result = PB::Writer::writeSubmessage(this, v80, 0x71u);
  }
  v81 = (const PB::Base *)v3[4];
  if (v81) {
    result = PB::Writer::writeSubmessage(this, v81, 0x72u);
  }
  v82 = (const PB::Base *)v3[253];
  if (v82) {
    result = PB::Writer::writeSubmessage(this, v82, 0x73u);
  }
  v83 = (const PB::Base *)v3[248];
  if (v83) {
    result = PB::Writer::writeSubmessage(this, v83, 0x74u);
  }
  v84 = (const PB::Base *)v3[62];
  if (v84) {
    result = PB::Writer::writeSubmessage(this, v84, 0x75u);
  }
  v85 = (const PB::Base *)v3[217];
  if (v85) {
    result = PB::Writer::writeSubmessage(this, v85, 0x76u);
  }
  v86 = (const PB::Base *)v3[333];
  if (v86) {
    result = PB::Writer::writeSubmessage(this, v86, 0x77u);
  }
  v87 = (const PB::Base *)v3[183];
  if (v87) {
    result = PB::Writer::writeSubmessage(this, v87, 0x78u);
  }
  v88 = (const PB::Base *)v3[88];
  if (v88) {
    result = PB::Writer::writeSubmessage(this, v88, 0x79u);
  }
  v89 = (const PB::Base *)v3[151];
  if (v89) {
    result = PB::Writer::writeSubmessage(this, v89, 0x7Au);
  }
  v90 = (const PB::Base *)v3[152];
  if (v90) {
    result = PB::Writer::writeSubmessage(this, v90, 0x7Bu);
  }
  v91 = (const PB::Base *)v3[150];
  if (v91) {
    result = PB::Writer::writeSubmessage(this, v91, 0x7Cu);
  }
  v92 = (const PB::Base *)v3[149];
  if (v92) {
    result = PB::Writer::writeSubmessage(this, v92, 0x7Du);
  }
  v93 = (const PB::Base *)v3[59];
  if (v93) {
    result = PB::Writer::writeSubmessage(this, v93, 0x7Eu);
  }
  v94 = (const PB::Base *)v3[132];
  if (v94) {
    result = PB::Writer::writeSubmessage(this, v94, 0x7Fu);
  }
  v95 = (const PB::Base *)v3[247];
  if (v95) {
    result = PB::Writer::writeSubmessage(this, v95, 0x80u);
  }
  v96 = (const PB::Base *)v3[236];
  if (v96) {
    result = PB::Writer::writeSubmessage(this, v96, 0x81u);
  }
  v97 = (const PB::Base *)v3[304];
  if (v97) {
    result = PB::Writer::writeSubmessage(this, v97, 0x82u);
  }
  v98 = (const PB::Base *)v3[305];
  if (v98) {
    result = PB::Writer::writeSubmessage(this, v98, 0x83u);
  }
  v99 = (const PB::Base *)v3[63];
  if (v99) {
    result = PB::Writer::writeSubmessage(this, v99, 0x84u);
  }
  v100 = (const PB::Base *)v3[184];
  if (v100) {
    result = PB::Writer::writeSubmessage(this, v100, 0x85u);
  }
  v101 = (const PB::Base *)v3[87];
  if (v101) {
    result = PB::Writer::writeSubmessage(this, v101, 0x86u);
  }
  v102 = (const PB::Base *)v3[318];
  if (v102) {
    result = PB::Writer::writeSubmessage(this, v102, 0x87u);
  }
  v103 = (const PB::Base *)v3[416];
  if (v103) {
    result = PB::Writer::writeSubmessage(this, v103, 0x88u);
  }
  v104 = (const PB::Base *)v3[238];
  if (v104) {
    result = PB::Writer::writeSubmessage(this, v104, 0x8Bu);
  }
  v105 = (const PB::Base *)v3[239];
  if (v105) {
    result = PB::Writer::writeSubmessage(this, v105, 0x8Cu);
  }
  v106 = (const PB::Base *)v3[317];
  if (v106) {
    result = PB::Writer::writeSubmessage(this, v106, 0x8Du);
  }
  v107 = (const PB::Base *)v3[441];
  if (v107) {
    result = PB::Writer::writeSubmessage(this, v107, 0x8Eu);
  }
  v108 = (const PB::Base *)v3[435];
  if (v108) {
    result = PB::Writer::writeSubmessage(this, v108, 0x8Fu);
  }
  v109 = (const PB::Base *)v3[332];
  if (v109) {
    result = PB::Writer::writeSubmessage(this, v109, 0x90u);
  }
  v110 = (const PB::Base *)v3[73];
  if (v110) {
    result = PB::Writer::writeSubmessage(this, v110, 0x91u);
  }
  v111 = (const PB::Base *)v3[60];
  if (v111) {
    result = PB::Writer::writeSubmessage(this, v111, 0x94u);
  }
  v112 = (const PB::Base *)v3[61];
  if (v112) {
    result = PB::Writer::writeSubmessage(this, v112, 0x96u);
  }
  v113 = (const PB::Base *)v3[266];
  if (v113) {
    result = PB::Writer::writeSubmessage(this, v113, 0x97u);
  }
  v114 = (const PB::Base *)v3[299];
  if (v114) {
    result = PB::Writer::writeSubmessage(this, v114, 0x98u);
  }
  v115 = (const PB::Base *)v3[300];
  if (v115) {
    result = PB::Writer::writeSubmessage(this, v115, 0x99u);
  }
  v116 = (const PB::Base *)v3[48];
  if (v116) {
    result = PB::Writer::writeSubmessage(this, v116, 0x9Au);
  }
  v117 = (const PB::Base *)v3[393];
  if (v117) {
    result = PB::Writer::writeSubmessage(this, v117, 0x9Bu);
  }
  v118 = (const PB::Base *)v3[43];
  if (v118) {
    result = PB::Writer::writeSubmessage(this, v118, 0x9Cu);
  }
  v119 = (const PB::Base *)v3[58];
  if (v119) {
    result = PB::Writer::writeSubmessage(this, v119, 0x9Du);
  }
  v120 = (const PB::Base *)v3[64];
  if (v120) {
    result = PB::Writer::writeSubmessage(this, v120, 0x9Eu);
  }
  v121 = (const PB::Base *)v3[420];
  if (v121) {
    result = PB::Writer::writeSubmessage(this, v121, 0x9Fu);
  }
  v122 = (const PB::Base *)v3[375];
  if (v122) {
    result = PB::Writer::writeSubmessage(this, v122, 0xA0u);
  }
  v123 = (const PB::Base *)v3[370];
  if (v123) {
    result = PB::Writer::writeSubmessage(this, v123, 0xA1u);
  }
  v124 = (const PB::Base *)v3[373];
  if (v124) {
    result = PB::Writer::writeSubmessage(this, v124, 0xA2u);
  }
  v125 = (const PB::Base *)v3[372];
  if (v125) {
    result = PB::Writer::writeSubmessage(this, v125, 0xA3u);
  }
  v126 = (const PB::Base *)v3[376];
  if (v126) {
    result = PB::Writer::writeSubmessage(this, v126, 0xA4u);
  }
  v127 = (const PB::Base *)v3[377];
  if (v127) {
    result = PB::Writer::writeSubmessage(this, v127, 0xA5u);
  }
  v128 = (const PB::Base *)v3[371];
  if (v128) {
    result = PB::Writer::writeSubmessage(this, v128, 0xA6u);
  }
  v129 = (const PB::Base *)v3[242];
  if (v129) {
    result = PB::Writer::writeSubmessage(this, v129, 0xA7u);
  }
  v130 = (const PB::Base *)v3[445];
  if (v130) {
    result = PB::Writer::writeSubmessage(this, v130, 0xA8u);
  }
  v131 = (const PB::Base *)v3[230];
  if (v131) {
    result = PB::Writer::writeSubmessage(this, v131, 0xA9u);
  }
  v132 = (const PB::Base *)v3[24];
  if (v132) {
    result = PB::Writer::writeSubmessage(this, v132, 0xAAu);
  }
  v133 = (const PB::Base *)v3[380];
  if (v133) {
    result = PB::Writer::writeSubmessage(this, v133, 0xABu);
  }
  v134 = (const PB::Base *)v3[381];
  if (v134) {
    result = PB::Writer::writeSubmessage(this, v134, 0xACu);
  }
  v135 = (const PB::Base *)v3[363];
  if (v135) {
    result = PB::Writer::writeSubmessage(this, v135, 0xADu);
  }
  v136 = (const PB::Base *)v3[92];
  if (v136) {
    result = PB::Writer::writeSubmessage(this, v136, 0xAEu);
  }
  v137 = (const PB::Base *)v3[111];
  if (v137) {
    result = PB::Writer::writeSubmessage(this, v137, 0xAFu);
  }
  v138 = (const PB::Base *)v3[57];
  if (v138) {
    result = PB::Writer::writeSubmessage(this, v138, 0xB0u);
  }
  v139 = (const PB::Base *)v3[234];
  if (v139) {
    result = PB::Writer::writeSubmessage(this, v139, 0xB1u);
  }
  v140 = (const PB::Base *)v3[56];
  if (v140) {
    result = PB::Writer::writeSubmessage(this, v140, 0xB2u);
  }
  v141 = (const PB::Base *)v3[308];
  if (v141) {
    result = PB::Writer::writeSubmessage(this, v141, 0xB3u);
  }
  v142 = (const PB::Base *)v3[130];
  if (v142) {
    result = PB::Writer::writeSubmessage(this, v142, 0xB4u);
  }
  v143 = (const PB::Base *)v3[98];
  if (v143) {
    result = PB::Writer::writeSubmessage(this, v143, 0xB5u);
  }
  v144 = (const PB::Base *)v3[1];
  if (v144) {
    result = PB::Writer::writeSubmessage(this, v144, 0xB6u);
  }
  v145 = (const PB::Base *)v3[2];
  if (v145) {
    result = PB::Writer::writeSubmessage(this, v145, 0xB7u);
  }
  v146 = (const PB::Base *)v3[40];
  if (v146) {
    result = PB::Writer::writeSubmessage(this, v146, 0xB8u);
  }
  v147 = (const PB::Base *)v3[231];
  if (v147) {
    result = PB::Writer::writeSubmessage(this, v147, 0xB9u);
  }
  v148 = (const PB::Base *)v3[406];
  if (v148) {
    result = PB::Writer::writeSubmessage(this, v148, 0xBAu);
  }
  v149 = (const PB::Base *)v3[343];
  if (v149) {
    result = PB::Writer::writeSubmessage(this, v149, 0xBBu);
  }
  v150 = (const PB::Base *)v3[450];
  if (v150) {
    result = PB::Writer::writeSubmessage(this, v150, 0xBCu);
  }
  v151 = (const PB::Base *)v3[449];
  if (v151) {
    result = PB::Writer::writeSubmessage(this, v151, 0xBDu);
  }
  v152 = (const PB::Base *)v3[45];
  if (v152) {
    result = PB::Writer::writeSubmessage(this, v152, 0xBEu);
  }
  v153 = (const PB::Base *)v3[281];
  if (v153) {
    result = PB::Writer::writeSubmessage(this, v153, 0xBFu);
  }
  v154 = (const PB::Base *)v3[303];
  if (v154) {
    result = PB::Writer::writeSubmessage(this, v154, 0xC0u);
  }
  v155 = (const PB::Base *)v3[229];
  if (v155) {
    result = PB::Writer::writeSubmessage(this, v155, 0xC1u);
  }
  v156 = (const PB::Base *)v3[232];
  if (v156) {
    result = PB::Writer::writeSubmessage(this, v156, 0xC2u);
  }
  v157 = (const PB::Base *)v3[344];
  if (v157) {
    result = PB::Writer::writeSubmessage(this, v157, 0xC3u);
  }
  v158 = (const PB::Base *)v3[51];
  if (v158) {
    result = PB::Writer::writeSubmessage(this, v158, 0xC4u);
  }
  v159 = (const PB::Base *)v3[52];
  if (v159) {
    result = PB::Writer::writeSubmessage(this, v159, 0xC5u);
  }
  v160 = (const PB::Base *)v3[250];
  if (v160) {
    result = PB::Writer::writeSubmessage(this, v160, 0xC6u);
  }
  v161 = (const PB::Base *)v3[269];
  if (v161) {
    result = PB::Writer::writeSubmessage(this, v161, 0xC7u);
  }
  v162 = (const PB::Base *)v3[9];
  if (v162) {
    result = PB::Writer::writeSubmessage(this, v162, 0xC8u);
  }
  v163 = (const PB::Base *)v3[104];
  if (v163) {
    result = PB::Writer::writeSubmessage(this, v163, 0xC9u);
  }
  v164 = (const PB::Base *)v3[282];
  if (v164) {
    result = PB::Writer::writeSubmessage(this, v164, 0xCAu);
  }
  v165 = (const PB::Base *)v3[136];
  if (v165) {
    result = PB::Writer::writeSubmessage(this, v165, 0xCBu);
  }
  v166 = (const PB::Base *)v3[137];
  if (v166) {
    result = PB::Writer::writeSubmessage(this, v166, 0xCCu);
  }
  v167 = (const PB::Base *)v3[135];
  if (v167) {
    result = PB::Writer::writeSubmessage(this, v167, 0xCDu);
  }
  v168 = (const PB::Base *)v3[112];
  if (v168) {
    result = PB::Writer::writeSubmessage(this, v168, 0xCEu);
  }
  v169 = (const PB::Base *)v3[433];
  if (v169) {
    result = PB::Writer::writeSubmessage(this, v169, 0xCFu);
  }
  v170 = (const PB::Base *)v3[386];
  if (v170) {
    result = PB::Writer::writeSubmessage(this, v170, 0xD0u);
  }
  v171 = (const PB::Base *)v3[346];
  if (v171) {
    result = PB::Writer::writeSubmessage(this, v171, 0xD1u);
  }
  v172 = (const PB::Base *)v3[327];
  if (v172) {
    result = PB::Writer::writeSubmessage(this, v172, 0xD2u);
  }
  v173 = (const PB::Base *)v3[224];
  if (v173) {
    result = PB::Writer::writeSubmessage(this, v173, 0xD4u);
  }
  v174 = (const PB::Base *)v3[225];
  if (v174) {
    result = PB::Writer::writeSubmessage(this, v174, 0xD5u);
  }
  v175 = (const PB::Base *)v3[38];
  if (v175) {
    result = PB::Writer::writeSubmessage(this, v175, 0xD6u);
  }
  v176 = (const PB::Base *)v3[223];
  if (v176) {
    result = PB::Writer::writeSubmessage(this, v176, 0xD7u);
  }
  v177 = (const PB::Base *)v3[417];
  if (v177) {
    result = PB::Writer::writeSubmessage(this, v177, 0xD8u);
  }
  v178 = (const PB::Base *)v3[325];
  if (v178) {
    result = PB::Writer::writeSubmessage(this, v178, 0xD9u);
  }
  v179 = (const PB::Base *)v3[54];
  if (v179) {
    result = PB::Writer::writeSubmessage(this, v179, 0xDAu);
  }
  v180 = (const PB::Base *)v3[339];
  if (v180) {
    result = PB::Writer::writeSubmessage(this, v180, 0xDBu);
  }
  v181 = (const PB::Base *)v3[226];
  if (v181) {
    result = PB::Writer::writeSubmessage(this, v181, 0xDCu);
  }
  v182 = (const PB::Base *)v3[222];
  if (v182) {
    result = PB::Writer::writeSubmessage(this, v182, 0xDDu);
  }
  v183 = (const PB::Base *)v3[50];
  if (v183) {
    result = PB::Writer::writeSubmessage(this, v183, 0xDEu);
  }
  v184 = (const PB::Base *)v3[55];
  if (v184) {
    result = PB::Writer::writeSubmessage(this, v184, 0xDFu);
  }
  v185 = (const PB::Base *)v3[165];
  if (v185) {
    result = PB::Writer::writeSubmessage(this, v185, 0xE0u);
  }
  v186 = (const PB::Base *)v3[362];
  if (v186) {
    result = PB::Writer::writeSubmessage(this, v186, 0xE1u);
  }
  v187 = (const PB::Base *)v3[365];
  if (v187) {
    result = PB::Writer::writeSubmessage(this, v187, 0xE2u);
  }
  v188 = (const PB::Base *)v3[364];
  if (v188) {
    result = PB::Writer::writeSubmessage(this, v188, 0xE3u);
  }
  v189 = (const PB::Base *)v3[129];
  if (v189) {
    result = PB::Writer::writeSubmessage(this, v189, 0xE4u);
  }
  v190 = (const PB::Base *)v3[424];
  if (v190) {
    result = PB::Writer::writeSubmessage(this, v190, 0xE5u);
  }
  v191 = (const PB::Base *)v3[115];
  if (v191) {
    result = PB::Writer::writeSubmessage(this, v191, 0xE6u);
  }
  v192 = (const PB::Base *)v3[421];
  if (v192) {
    result = PB::Writer::writeSubmessage(this, v192, 0xE7u);
  }
  v193 = (const PB::Base *)v3[422];
  if (v193) {
    result = PB::Writer::writeSubmessage(this, v193, 0xE8u);
  }
  v194 = (const PB::Base *)v3[395];
  if (v194) {
    result = PB::Writer::writeSubmessage(this, v194, 0xE9u);
  }
  v195 = (const PB::Base *)v3[139];
  if (v195) {
    result = PB::Writer::writeSubmessage(this, v195, 0xEAu);
  }
  v196 = (const PB::Base *)v3[140];
  if (v196) {
    result = PB::Writer::writeSubmessage(this, v196, 0xEBu);
  }
  v197 = (const PB::Base *)v3[243];
  if (v197) {
    result = PB::Writer::writeSubmessage(this, v197, 0xECu);
  }
  v198 = (const PB::Base *)v3[128];
  if (v198) {
    result = PB::Writer::writeSubmessage(this, v198, 0xEDu);
  }
  v199 = (const PB::Base *)v3[438];
  if (v199) {
    result = PB::Writer::writeSubmessage(this, v199, 0xEEu);
  }
  v200 = (const PB::Base *)v3[14];
  if (v200) {
    result = PB::Writer::writeSubmessage(this, v200, 0xEFu);
  }
  v201 = (const PB::Base *)v3[291];
  if (v201) {
    result = PB::Writer::writeSubmessage(this, v201, 0xF0u);
  }
  v202 = (const PB::Base *)v3[177];
  if (v202) {
    result = PB::Writer::writeSubmessage(this, v202, 0xF1u);
  }
  v203 = (const PB::Base *)v3[301];
  if (v203) {
    result = PB::Writer::writeSubmessage(this, v203, 0xF2u);
  }
  v204 = (const PB::Base *)v3[302];
  if (v204) {
    result = PB::Writer::writeSubmessage(this, v204, 0xF3u);
  }
  v205 = (const PB::Base *)v3[290];
  if (v205) {
    result = PB::Writer::writeSubmessage(this, v205, 0xF4u);
  }
  v206 = (const PB::Base *)v3[108];
  if (v206) {
    result = PB::Writer::writeSubmessage(this, v206, 0xF5u);
  }
  v207 = (const PB::Base *)v3[178];
  if (v207) {
    result = PB::Writer::writeSubmessage(this, v207, 0xF6u);
  }
  v208 = (const PB::Base *)v3[428];
  if (v208) {
    result = PB::Writer::writeSubmessage(this, v208, 0xF7u);
  }
  v209 = (const PB::Base *)v3[294];
  if (v209) {
    result = PB::Writer::writeSubmessage(this, v209, 0xF8u);
  }
  v210 = (const PB::Base *)v3[297];
  if (v210) {
    result = PB::Writer::writeSubmessage(this, v210, 0xF9u);
  }
  v211 = (const PB::Base *)v3[159];
  if (v211) {
    result = PB::Writer::writeSubmessage(this, v211, 0xFAu);
  }
  v212 = (const PB::Base *)v3[374];
  if (v212) {
    result = PB::Writer::writeSubmessage(this, v212, 0xFBu);
  }
  v213 = (const PB::Base *)v3[296];
  if (v213) {
    result = PB::Writer::writeSubmessage(this, v213, 0xFCu);
  }
  v214 = (const PB::Base *)v3[246];
  if (v214) {
    result = PB::Writer::writeSubmessage(this, v214, 0xFDu);
  }
  v215 = (const PB::Base *)v3[423];
  if (v215) {
    result = PB::Writer::writeSubmessage(this, v215, 0xFEu);
  }
  v216 = (const PB::Base *)v3[22];
  if (v216) {
    result = PB::Writer::writeSubmessage(this, v216, 0xFFu);
  }
  v217 = (const PB::Base *)v3[26];
  if (v217) {
    result = PB::Writer::writeSubmessage(this, v217, 0x100u);
  }
  v218 = (const PB::Base *)v3[254];
  if (v218) {
    result = PB::Writer::writeSubmessage(this, v218, 0x101u);
  }
  v219 = (const PB::Base *)v3[97];
  if (v219) {
    result = PB::Writer::writeSubmessage(this, v219, 0x102u);
  }
  v220 = (const PB::Base *)v3[306];
  if (v220) {
    result = PB::Writer::writeSubmessage(this, v220, 0x103u);
  }
  v221 = (const PB::Base *)v3[307];
  if (v221) {
    result = PB::Writer::writeSubmessage(this, v221, 0x104u);
  }
  v222 = (const PB::Base *)v3[167];
  if (v222) {
    result = PB::Writer::writeSubmessage(this, v222, 0x105u);
  }
  v223 = (const PB::Base *)v3[437];
  if (v223) {
    result = PB::Writer::writeSubmessage(this, v223, 0x106u);
  }
  v224 = (const PB::Base *)v3[384];
  if (v224) {
    result = PB::Writer::writeSubmessage(this, v224, 0x107u);
  }
  v225 = (const PB::Base *)v3[396];
  if (v225) {
    result = PB::Writer::writeSubmessage(this, v225, 0x200u);
  }
  v226 = (const PB::Base *)v3[3];
  if (v226) {
    result = PB::Writer::writeSubmessage(this, v226, 0x3E9u);
  }
  v227 = (const PB::Base *)v3[143];
  if (v227) {
    result = PB::Writer::writeSubmessage(this, v227, 0x3EAu);
  }
  v228 = (const PB::Base *)v3[240];
  if (v228) {
    result = PB::Writer::writeSubmessage(this, v228, 0x3EBu);
  }
  v229 = (const PB::Base *)v3[80];
  if (v229) {
    result = PB::Writer::writeSubmessage(this, v229, 0x3ECu);
  }
  v230 = (const PB::Base *)v3[93];
  if (v230) {
    result = PB::Writer::writeSubmessage(this, v230, 0x3EDu);
  }
  v231 = (const PB::Base *)v3[158];
  if (v231) {
    result = PB::Writer::writeSubmessage(this, v231, 0x3EEu);
  }
  v232 = (const PB::Base *)v3[7];
  if (v232) {
    result = PB::Writer::writeSubmessage(this, v232, 0x3EFu);
  }
  v233 = (const PB::Base *)v3[156];
  if (v233) {
    result = PB::Writer::writeSubmessage(this, v233, 0x3F0u);
  }
  v234 = (const PB::Base *)v3[5];
  if (v234) {
    result = PB::Writer::writeSubmessage(this, v234, 0x3F1u);
  }
  v235 = (const PB::Base *)v3[8];
  if (v235) {
    result = PB::Writer::writeSubmessage(this, v235, 0x3F2u);
  }
  v236 = (const PB::Base *)v3[81];
  if (v236) {
    result = PB::Writer::writeSubmessage(this, v236, 0x3F3u);
  }
  v237 = (const PB::Base *)v3[144];
  if (v237) {
    result = PB::Writer::writeSubmessage(this, v237, 0x3F4u);
  }
  v238 = (const PB::Base *)v3[316];
  if (v238) {
    result = PB::Writer::writeSubmessage(this, v238, 0x3F5u);
  }
  v239 = (const PB::Base *)v3[323];
  if (v239) {
    result = PB::Writer::writeSubmessage(this, v239, 0x3F6u);
  }
  v240 = (const PB::Base *)v3[322];
  if (v240) {
    result = PB::Writer::writeSubmessage(this, v240, 0x3F7u);
  }
  v241 = (const PB::Base *)v3[319];
  if (v241) {
    result = PB::Writer::writeSubmessage(this, v241, 0x3F8u);
  }
  v242 = (const PB::Base *)v3[148];
  if (v242) {
    result = PB::Writer::writeSubmessage(this, v242, 0x3F9u);
  }
  v243 = (const PB::Base *)v3[154];
  if (v243) {
    result = PB::Writer::writeSubmessage(this, v243, 0x3FAu);
  }
  v244 = (const PB::Base *)v3[324];
  if (v244) {
    result = PB::Writer::writeSubmessage(this, v244, 0x3FBu);
  }
  v245 = (const PB::Base *)v3[256];
  if (v245) {
    result = PB::Writer::writeSubmessage(this, v245, 0x3FCu);
  }
  v246 = (const PB::Base *)v3[153];
  if (v246) {
    result = PB::Writer::writeSubmessage(this, v246, 0x3FDu);
  }
  v247 = (const PB::Base *)v3[82];
  if (v247) {
    result = PB::Writer::writeSubmessage(this, v247, 0x3FEu);
  }
  v248 = (const PB::Base *)v3[157];
  if (v248) {
    result = PB::Writer::writeSubmessage(this, v248, 0x3FFu);
  }
  v249 = (const PB::Base *)v3[49];
  if (v249) {
    result = PB::Writer::writeSubmessage(this, v249, 0x400u);
  }
  v250 = (const PB::Base *)v3[394];
  if (v250) {
    result = PB::Writer::writeSubmessage(this, v250, 0x401u);
  }
  v251 = (const PB::Base *)v3[355];
  if (v251) {
    result = PB::Writer::writeSubmessage(this, v251, 0x402u);
  }
  v252 = (const PB::Base *)v3[252];
  if (v252) {
    result = PB::Writer::writeSubmessage(this, v252, 0x403u);
  }
  v253 = (const PB::Base *)v3[6];
  if (v253) {
    result = PB::Writer::writeSubmessage(this, v253, 0x404u);
  }
  v254 = (const PB::Base *)v3[233];
  if (v254) {
    result = PB::Writer::writeSubmessage(this, v254, 0x405u);
  }
  v255 = (const PB::Base *)v3[110];
  if (v255) {
    result = PB::Writer::writeSubmessage(this, v255, 0x406u);
  }
  v256 = (const PB::Base *)v3[263];
  if (v256) {
    result = PB::Writer::writeSubmessage(this, v256, 0x407u);
  }
  v257 = (const PB::Base *)v3[262];
  if (v257) {
    result = PB::Writer::writeSubmessage(this, v257, 0x408u);
  }
  v258 = (const PB::Base *)v3[66];
  if (v258) {
    result = PB::Writer::writeSubmessage(this, v258, 0x409u);
  }
  v259 = (const PB::Base *)v3[429];
  if (v259) {
    result = PB::Writer::writeSubmessage(this, v259, 0x40Au);
  }
  v260 = (const PB::Base *)v3[267];
  if (v260) {
    result = PB::Writer::writeSubmessage(this, v260, 0x40Bu);
  }
  v261 = (const PB::Base *)v3[383];
  if (v261) {
    result = PB::Writer::writeSubmessage(this, v261, 0x40Cu);
  }
  v262 = (const PB::Base *)v3[106];
  if (v262) {
    result = PB::Writer::writeSubmessage(this, v262, 0x40Du);
  }
  v263 = (const PB::Base *)v3[251];
  if (v263) {
    result = PB::Writer::writeSubmessage(this, v263, 0x40Eu);
  }
  v264 = (const PB::Base *)v3[258];
  if (v264) {
    result = PB::Writer::writeSubmessage(this, v264, 0x40Fu);
  }
  v265 = (const PB::Base *)v3[385];
  if (v265) {
    result = PB::Writer::writeSubmessage(this, v265, 0x410u);
  }
  v266 = (const PB::Base *)v3[75];
  if (v266) {
    result = PB::Writer::writeSubmessage(this, v266, 0x411u);
  }
  v267 = (const PB::Base *)v3[79];
  if (v267) {
    result = PB::Writer::writeSubmessage(this, v267, 0x412u);
  }
  v268 = (const PB::Base *)v3[264];
  if (v268) {
    result = PB::Writer::writeSubmessage(this, v268, 0x413u);
  }
  v269 = (const PB::Base *)v3[244];
  if (v269) {
    result = PB::Writer::writeSubmessage(this, v269, 0x414u);
  }
  v270 = (const PB::Base *)v3[126];
  if (v270) {
    result = PB::Writer::writeSubmessage(this, v270, 0x415u);
  }
  v271 = (const PB::Base *)v3[53];
  if (v271) {
    result = PB::Writer::writeSubmessage(this, v271, 0x416u);
  }
  v272 = (const PB::Base *)v3[402];
  if (v272) {
    result = PB::Writer::writeSubmessage(this, v272, 0x417u);
  }
  v273 = (const PB::Base *)v3[378];
  if (v273) {
    result = PB::Writer::writeSubmessage(this, v273, 0x418u);
  }
  v274 = (const PB::Base *)v3[426];
  if (v274) {
    result = PB::Writer::writeSubmessage(this, v274, 0x419u);
  }
  v275 = (const PB::Base *)v3[257];
  if (v275) {
    result = PB::Writer::writeSubmessage(this, v275, 0x41Au);
  }
  v276 = (const PB::Base *)v3[255];
  if (v276) {
    result = PB::Writer::writeSubmessage(this, v276, 0x41Bu);
  }
  v277 = (const PB::Base *)v3[265];
  if (v277) {
    result = PB::Writer::writeSubmessage(this, v277, 0x41Cu);
  }
  v278 = (const PB::Base *)v3[321];
  if (v278) {
    result = PB::Writer::writeSubmessage(this, v278, 0x41Du);
  }
  v279 = (const PB::Base *)v3[175];
  if (v279) {
    result = PB::Writer::writeSubmessage(this, v279, 0x800u);
  }
  v280 = (const PB::Base *)v3[78];
  if (v280) {
    result = PB::Writer::writeSubmessage(this, v280, 0x801u);
  }
  v281 = (const PB::Base *)v3[36];
  if (v281) {
    result = PB::Writer::writeSubmessage(this, v281, 0x802u);
  }
  v282 = (const PB::Base *)v3[173];
  if (v282) {
    result = PB::Writer::writeSubmessage(this, v282, 0x803u);
  }
  v283 = (const PB::Base *)v3[171];
  if (v283) {
    result = PB::Writer::writeSubmessage(this, v283, 0x804u);
  }
  v284 = (const PB::Base *)v3[172];
  if (v284) {
    result = PB::Writer::writeSubmessage(this, v284, 0x805u);
  }
  v285 = (const PB::Base *)v3[170];
  if (v285) {
    result = PB::Writer::writeSubmessage(this, v285, 0x806u);
  }
  v286 = (const PB::Base *)v3[15];
  if (v286) {
    result = PB::Writer::writeSubmessage(this, v286, 0x807u);
  }
  v287 = (const PB::Base *)v3[12];
  if (v287) {
    result = PB::Writer::writeSubmessage(this, v287, 0x808u);
  }
  v288 = (const PB::Base *)v3[30];
  if (v288) {
    result = PB::Writer::writeSubmessage(this, v288, 0x809u);
  }
  v289 = (const PB::Base *)v3[390];
  if (v289) {
    result = PB::Writer::writeSubmessage(this, v289, 0x80Au);
  }
  v290 = (const PB::Base *)v3[389];
  if (v290) {
    result = PB::Writer::writeSubmessage(this, v290, 0x80Bu);
  }
  v291 = (const PB::Base *)v3[105];
  if (v291) {
    result = PB::Writer::writeSubmessage(this, v291, 0x80Cu);
  }
  v292 = (const PB::Base *)v3[35];
  if (v292) {
    result = PB::Writer::writeSubmessage(this, v292, 0x80Du);
  }
  v293 = (const PB::Base *)v3[138];
  if (v293) {
    result = PB::Writer::writeSubmessage(this, v293, 0x80Eu);
  }
  v294 = (const PB::Base *)v3[336];
  if (v294) {
    result = PB::Writer::writeSubmessage(this, v294, 0x80Fu);
  }
  v295 = (const PB::Base *)v3[338];
  if (v295) {
    result = PB::Writer::writeSubmessage(this, v295, 0x810u);
  }
  v296 = (const PB::Base *)v3[337];
  if (v296) {
    result = PB::Writer::writeSubmessage(this, v296, 0x811u);
  }
  v297 = (const PB::Base *)v3[451];
  if (v297) {
    result = PB::Writer::writeSubmessage(this, v297, 0x812u);
  }
  v298 = (const PB::Base *)v3[41];
  if (v298) {
    result = PB::Writer::writeSubmessage(this, v298, 0x813u);
  }
  v299 = (const PB::Base *)v3[315];
  if (v299) {
    result = PB::Writer::writeSubmessage(this, v299, 0x814u);
  }
  v300 = (const PB::Base *)v3[261];
  if (v300) {
    result = PB::Writer::writeSubmessage(this, v300, 0x815u);
  }
  v301 = (const PB::Base *)v3[260];
  if (v301) {
    result = PB::Writer::writeSubmessage(this, v301, 0x816u);
  }
  v302 = (const PB::Base *)v3[65];
  if (v302) {
    result = PB::Writer::writeSubmessage(this, v302, 0x817u);
  }
  v303 = (const PB::Base *)v3[20];
  if (v303) {
    result = PB::Writer::writeSubmessage(this, v303, 0x818u);
  }
  v304 = (const PB::Base *)v3[21];
  if (v304) {
    result = PB::Writer::writeSubmessage(this, v304, 0x819u);
  }
  v305 = (const PB::Base *)v3[19];
  if (v305) {
    result = PB::Writer::writeSubmessage(this, v305, 0x81Au);
  }
  v306 = (const PB::Base *)v3[133];
  if (v306) {
    result = PB::Writer::writeSubmessage(this, v306, 0x81Bu);
  }
  v307 = (const PB::Base *)v3[134];
  if (v307) {
    result = PB::Writer::writeSubmessage(this, v307, 0x81Cu);
  }
  v308 = (const PB::Base *)v3[83];
  if (v308) {
    result = PB::Writer::writeSubmessage(this, v308, 0x820u);
  }
  v309 = (const PB::Base *)v3[413];
  if (v309) {
    result = PB::Writer::writeSubmessage(this, v309, 0x829u);
  }
  v310 = (const PB::Base *)v3[412];
  if (v310) {
    result = PB::Writer::writeSubmessage(this, v310, 0x82Au);
  }
  v311 = (const PB::Base *)v3[25];
  if (v311) {
    result = PB::Writer::writeSubmessage(this, v311, 0x82Bu);
  }
  v312 = (const PB::Base *)v3[119];
  if (v312) {
    result = PB::Writer::writeSubmessage(this, v312, 0x832u);
  }
  v313 = (const PB::Base *)v3[120];
  if (v313) {
    result = PB::Writer::writeSubmessage(this, v313, 0x833u);
  }
  v314 = (const PB::Base *)v3[121];
  if (v314) {
    result = PB::Writer::writeSubmessage(this, v314, 0x834u);
  }
  v315 = (const PB::Base *)v3[117];
  if (v315) {
    result = PB::Writer::writeSubmessage(this, v315, 0x835u);
  }
  v316 = (const PB::Base *)v3[124];
  if (v316) {
    result = PB::Writer::writeSubmessage(this, v316, 0x836u);
  }
  v317 = (const PB::Base *)v3[17];
  if (v317) {
    result = PB::Writer::writeSubmessage(this, v317, 0x837u);
  }
  v318 = (const PB::Base *)v3[335];
  if (v318) {
    result = PB::Writer::writeSubmessage(this, v318, 0x838u);
  }
  v319 = (const PB::Base *)v3[334];
  if (v319) {
    result = PB::Writer::writeSubmessage(this, v319, 0x839u);
  }
  v320 = (const PB::Base *)v3[94];
  if (v320) {
    result = PB::Writer::writeSubmessage(this, v320, 0x83Au);
  }
  v321 = (const PB::Base *)v3[118];
  if (v321) {
    result = PB::Writer::writeSubmessage(this, v321, 0x83Bu);
  }
  v322 = (const PB::Base *)v3[419];
  if (v322) {
    result = PB::Writer::writeSubmessage(this, v322, 0x83Cu);
  }
  v323 = (const PB::Base *)v3[23];
  if (v323) {
    result = PB::Writer::writeSubmessage(this, v323, 0x83Du);
  }
  v324 = (const PB::Base *)v3[122];
  if (v324) {
    result = PB::Writer::writeSubmessage(this, v324, 0x83Eu);
  }
  v325 = (const PB::Base *)v3[147];
  if (v325) {
    result = PB::Writer::writeSubmessage(this, v325, 0x83Fu);
  }
  v326 = (const PB::Base *)v3[382];
  if (v326) {
    result = PB::Writer::writeSubmessage(this, v326, 0x840u);
  }
  v327 = (const PB::Base *)v3[127];
  if (v327) {
    result = PB::Writer::writeSubmessage(this, v327, 0x841u);
  }
  v328 = (const PB::Base *)v3[33];
  if (v328) {
    result = PB::Writer::writeSubmessage(this, v328, 0x842u);
  }
  v329 = (const PB::Base *)v3[358];
  if (v329) {
    result = PB::Writer::writeSubmessage(this, v329, 0x843u);
  }
  v330 = (const PB::Base *)v3[361];
  if (v330) {
    result = PB::Writer::writeSubmessage(this, v330, 0x844u);
  }
  v331 = (const PB::Base *)v3[359];
  if (v331) {
    result = PB::Writer::writeSubmessage(this, v331, 0x845u);
  }
  v332 = (const PB::Base *)v3[360];
  if (v332) {
    result = PB::Writer::writeSubmessage(this, v332, 0x846u);
  }
  v333 = (const PB::Base *)v3[366];
  if (v333) {
    result = PB::Writer::writeSubmessage(this, v333, 0x847u);
  }
  v334 = (const PB::Base *)v3[123];
  if (v334) {
    result = PB::Writer::writeSubmessage(this, v334, 0x848u);
  }
  v335 = (const PB::Base *)v3[182];
  if (v335) {
    result = PB::Writer::writeSubmessage(this, v335, 0x849u);
  }
  v336 = (const PB::Base *)v3[320];
  if (v336) {
    result = PB::Writer::writeSubmessage(this, v336, 0x84Au);
  }
  v337 = (const PB::Base *)v3[249];
  if (v337) {
    result = PB::Writer::writeSubmessage(this, v337, 0x84Bu);
  }
  v338 = (const PB::Base *)v3[116];
  if (v338) {
    result = PB::Writer::writeSubmessage(this, v338, 0x84Cu);
  }
  v339 = (const PB::Base *)v3[228];
  if (v339) {
    result = PB::Writer::writeSubmessage(this, v339, 0x84Du);
  }
  v340 = (const PB::Base *)v3[102];
  if (v340) {
    result = PB::Writer::writeSubmessage(this, v340, 0x84Eu);
  }
  v341 = (const PB::Base *)v3[100];
  if (v341) {
    result = PB::Writer::writeSubmessage(this, v341, 0x84Fu);
  }
  v342 = (const PB::Base *)v3[101];
  if (v342) {
    result = PB::Writer::writeSubmessage(this, v342, 0x850u);
  }
  v343 = (const PB::Base *)v3[99];
  if (v343) {
    result = PB::Writer::writeSubmessage(this, v343, 0x851u);
  }
  v344 = (const PB::Base *)v3[268];
  if (v344) {
    result = PB::Writer::writeSubmessage(this, v344, 0x852u);
  }
  v345 = (const PB::Base *)v3[191];
  if (v345) {
    result = PB::Writer::writeSubmessage(this, v345, 0x853u);
  }
  v346 = (const PB::Base *)v3[192];
  if (v346) {
    result = PB::Writer::writeSubmessage(this, v346, 0x854u);
  }
  v347 = (const PB::Base *)v3[195];
  if (v347) {
    result = PB::Writer::writeSubmessage(this, v347, 0x855u);
  }
  v348 = (const PB::Base *)v3[206];
  if (v348) {
    result = PB::Writer::writeSubmessage(this, v348, 0x856u);
  }
  v349 = (const PB::Base *)v3[221];
  if (v349) {
    result = PB::Writer::writeSubmessage(this, v349, 0x857u);
  }
  v350 = (const PB::Base *)v3[220];
  if (v350) {
    result = PB::Writer::writeSubmessage(this, v350, 0x858u);
  }
  v351 = (const PB::Base *)v3[204];
  if (v351) {
    result = PB::Writer::writeSubmessage(this, v351, 0x859u);
  }
  v352 = (const PB::Base *)v3[164];
  if (v352) {
    result = PB::Writer::writeSubmessage(this, v352, 0x85Au);
  }
  v353 = (const PB::Base *)v3[163];
  if (v353) {
    result = PB::Writer::writeSubmessage(this, v353, 0x85Bu);
  }
  v354 = (const PB::Base *)v3[190];
  if (v354) {
    result = PB::Writer::writeSubmessage(this, v354, 0x85Cu);
  }
  v355 = (const PB::Base *)v3[193];
  if (v355) {
    result = PB::Writer::writeSubmessage(this, v355, 0x85Du);
  }
  v356 = (const PB::Base *)v3[207];
  if (v356) {
    result = PB::Writer::writeSubmessage(this, v356, 0x85Eu);
  }
  v357 = (const PB::Base *)v3[208];
  if (v357) {
    result = PB::Writer::writeSubmessage(this, v357, 0x85Fu);
  }
  v358 = (const PB::Base *)v3[212];
  if (v358) {
    result = PB::Writer::writeSubmessage(this, v358, 0x860u);
  }
  v359 = (const PB::Base *)v3[200];
  if (v359) {
    result = PB::Writer::writeSubmessage(this, v359, 0x861u);
  }
  v360 = (const PB::Base *)v3[198];
  if (v360) {
    result = PB::Writer::writeSubmessage(this, v360, 0x862u);
  }
  v361 = (const PB::Base *)v3[213];
  if (v361) {
    result = PB::Writer::writeSubmessage(this, v361, 0x863u);
  }
  v362 = (const PB::Base *)v3[199];
  if (v362) {
    result = PB::Writer::writeSubmessage(this, v362, 0x864u);
  }
  v363 = (const PB::Base *)v3[209];
  if (v363) {
    result = PB::Writer::writeSubmessage(this, v363, 0x865u);
  }
  v364 = (const PB::Base *)v3[96];
  if (v364) {
    result = PB::Writer::writeSubmessage(this, v364, 0x866u);
  }
  v365 = (const PB::Base *)v3[403];
  if (v365) {
    result = PB::Writer::writeSubmessage(this, v365, 0x867u);
  }
  v366 = (const PB::Base *)v3[162];
  if (v366) {
    result = PB::Writer::writeSubmessage(this, v366, 0x868u);
  }
  v367 = (const PB::Base *)v3[404];
  if (v367) {
    result = PB::Writer::writeSubmessage(this, v367, 0x869u);
  }
  v368 = (const PB::Base *)v3[405];
  if (v368) {
    result = PB::Writer::writeSubmessage(this, v368, 0x86Au);
  }
  v369 = (const PB::Base *)v3[341];
  if (v369) {
    result = PB::Writer::writeSubmessage(this, v369, 0x86Bu);
  }
  v370 = (const PB::Base *)v3[342];
  if (v370) {
    result = PB::Writer::writeSubmessage(this, v370, 0x86Cu);
  }
  v371 = (const PB::Base *)v3[345];
  if (v371) {
    result = PB::Writer::writeSubmessage(this, v371, 0x86Du);
  }
  v372 = (const PB::Base *)v3[350];
  if (v372) {
    result = PB::Writer::writeSubmessage(this, v372, 0x86Eu);
  }
  v373 = (const PB::Base *)v3[348];
  if (v373) {
    result = PB::Writer::writeSubmessage(this, v373, 0x86Fu);
  }
  v374 = (const PB::Base *)v3[214];
  if (v374) {
    result = PB::Writer::writeSubmessage(this, v374, 0x870u);
  }
  v375 = (const PB::Base *)v3[203];
  if (v375) {
    result = PB::Writer::writeSubmessage(this, v375, 0x871u);
  }
  v376 = (const PB::Base *)v3[347];
  if (v376) {
    result = PB::Writer::writeSubmessage(this, v376, 0x872u);
  }
  v377 = (const PB::Base *)v3[181];
  if (v377) {
    result = PB::Writer::writeSubmessage(this, v377, 0x873u);
  }
  v378 = (const PB::Base *)v3[197];
  if (v378) {
    result = PB::Writer::writeSubmessage(this, v378, 0x874u);
  }
  v379 = (const PB::Base *)v3[205];
  if (v379) {
    result = PB::Writer::writeSubmessage(this, v379, 0x875u);
  }
  v380 = (const PB::Base *)v3[160];
  if (v380) {
    result = PB::Writer::writeSubmessage(this, v380, 0x876u);
  }
  v381 = (const PB::Base *)v3[74];
  if (v381) {
    result = PB::Writer::writeSubmessage(this, v381, 0x877u);
  }
  v382 = (const PB::Base *)v3[292];
  if (v382) {
    result = PB::Writer::writeSubmessage(this, v382, 0x878u);
  }
  v383 = (const PB::Base *)v3[86];
  if (v383) {
    result = PB::Writer::writeSubmessage(this, v383, 0x879u);
  }
  v384 = (const PB::Base *)v3[107];
  if (v384) {
    result = PB::Writer::writeSubmessage(this, v384, 0x87Au);
  }
  v385 = (const PB::Base *)v3[400];
  if (v385) {
    result = PB::Writer::writeSubmessage(this, v385, 0x87Bu);
  }
  v386 = (const PB::Base *)v3[326];
  if (v386) {
    result = PB::Writer::writeSubmessage(this, v386, 0x87Cu);
  }
  v387 = (const PB::Base *)v3[216];
  if (v387) {
    result = PB::Writer::writeSubmessage(this, v387, 0x87Du);
  }
  v388 = (const PB::Base *)v3[418];
  if (v388) {
    result = PB::Writer::writeSubmessage(this, v388, 0x87Eu);
  }
  v389 = (const PB::Base *)v3[196];
  if (v389) {
    result = PB::Writer::writeSubmessage(this, v389, 0x87Fu);
  }
  v390 = (const PB::Base *)v3[349];
  if (v390) {
    result = PB::Writer::writeSubmessage(this, v390, 0x880u);
  }
  v391 = (const PB::Base *)v3[387];
  if (v391) {
    result = PB::Writer::writeSubmessage(this, v391, 0x881u);
  }
  v392 = (const PB::Base *)v3[289];
  if (v392) {
    result = PB::Writer::writeSubmessage(this, v392, 0x882u);
  }
  v393 = (const PB::Base *)v3[237];
  if (v393) {
    result = PB::Writer::writeSubmessage(this, v393, 0x883u);
  }
  v394 = (const PB::Base *)v3[283];
  if (v394) {
    result = PB::Writer::writeSubmessage(this, v394, 0x884u);
  }
  v395 = (const PB::Base *)v3[284];
  if (v395) {
    result = PB::Writer::writeSubmessage(this, v395, 0x885u);
  }
  v396 = (const PB::Base *)v3[285];
  if (v396) {
    result = PB::Writer::writeSubmessage(this, v396, 0x886u);
  }
  v397 = (const PB::Base *)v3[270];
  if (v397) {
    result = PB::Writer::writeSubmessage(this, v397, 0x887u);
  }
  v398 = (const PB::Base *)v3[287];
  if (v398) {
    result = PB::Writer::writeSubmessage(this, v398, 0x888u);
  }
  v399 = (const PB::Base *)v3[227];
  if (v399) {
    result = PB::Writer::writeSubmessage(this, v399, 0x889u);
  }
  v400 = (const PB::Base *)v3[401];
  if (v400) {
    result = PB::Writer::writeSubmessage(this, v400, 0x88Au);
  }
  v401 = (const PB::Base *)v3[279];
  if (v401) {
    result = PB::Writer::writeSubmessage(this, v401, 0x88Bu);
  }
  v402 = (const PB::Base *)v3[280];
  if (v402) {
    result = PB::Writer::writeSubmessage(this, v402, 0x88Cu);
  }
  v403 = (const PB::Base *)v3[399];
  if (v403) {
    result = PB::Writer::writeSubmessage(this, v403, 0x88Du);
  }
  v404 = (const PB::Base *)v3[388];
  if (v404) {
    result = PB::Writer::writeSubmessage(this, v404, 0x88Eu);
  }
  v405 = (const PB::Base *)v3[103];
  if (v405) {
    result = PB::Writer::writeSubmessage(this, v405, 0x88Fu);
  }
  v406 = (const PB::Base *)v3[218];
  if (v406) {
    result = PB::Writer::writeSubmessage(this, v406, 0x890u);
  }
  v407 = (const PB::Base *)v3[357];
  if (v407) {
    result = PB::Writer::writeSubmessage(this, v407, 0x891u);
  }
  v408 = (const PB::Base *)v3[278];
  if (v408) {
    result = PB::Writer::writeSubmessage(this, v408, 0x892u);
  }
  v409 = (const PB::Base *)v3[272];
  if (v409) {
    result = PB::Writer::writeSubmessage(this, v409, 0x893u);
  }
  v410 = (const PB::Base *)v3[271];
  if (v410) {
    result = PB::Writer::writeSubmessage(this, v410, 0x894u);
  }
  v411 = (const PB::Base *)v3[275];
  if (v411) {
    result = PB::Writer::writeSubmessage(this, v411, 0x895u);
  }
  v412 = (const PB::Base *)v3[13];
  if (v412) {
    result = PB::Writer::writeSubmessage(this, v412, 0x896u);
  }
  v413 = (const PB::Base *)v3[286];
  if (v413) {
    result = PB::Writer::writeSubmessage(this, v413, 0x897u);
  }
  v414 = (const PB::Base *)v3[309];
  if (v414) {
    result = PB::Writer::writeSubmessage(this, v414, 0x898u);
  }
  v415 = (const PB::Base *)v3[312];
  if (v415) {
    result = PB::Writer::writeSubmessage(this, v415, 0x899u);
  }
  v416 = (const PB::Base *)v3[211];
  if (v416) {
    result = PB::Writer::writeSubmessage(this, v416, 0x89Au);
  }
  v417 = (const PB::Base *)v3[313];
  if (v417) {
    result = PB::Writer::writeSubmessage(this, v417, 0x89Bu);
  }
  v418 = (const PB::Base *)v3[310];
  if (v418) {
    result = PB::Writer::writeSubmessage(this, v418, 0x89Cu);
  }
  v419 = (const PB::Base *)v3[277];
  if (v419) {
    result = PB::Writer::writeSubmessage(this, v419, 0x89Du);
  }
  v420 = (const PB::Base *)v3[72];
  if (v420) {
    result = PB::Writer::writeSubmessage(this, v420, 0x89Eu);
  }
  v421 = (const PB::Base *)v3[276];
  if (v421) {
    result = PB::Writer::writeSubmessage(this, v421, 0x89Fu);
  }
  v422 = (const PB::Base *)v3[293];
  if (v422) {
    result = PB::Writer::writeSubmessage(this, v422, 0x8A0u);
  }
  v423 = (const PB::Base *)v3[241];
  if (v423) {
    result = PB::Writer::writeSubmessage(this, v423, 0x8A1u);
  }
  v424 = (const PB::Base *)v3[188];
  if (v424) {
    result = PB::Writer::writeSubmessage(this, v424, 0x8A2u);
  }
  v425 = (const PB::Base *)v3[189];
  if (v425) {
    result = PB::Writer::writeSubmessage(this, v425, 0x8A3u);
  }
  v426 = (const PB::Base *)v3[311];
  if (v426) {
    result = PB::Writer::writeSubmessage(this, v426, 0x8A4u);
  }
  v427 = (const PB::Base *)v3[274];
  if (v427) {
    result = PB::Writer::writeSubmessage(this, v427, 0x8A5u);
  }
  v428 = (const PB::Base *)v3[273];
  if (v428) {
    result = PB::Writer::writeSubmessage(this, v428, 0x8A6u);
  }
  v429 = (const PB::Base *)v3[202];
  if (v429) {
    result = PB::Writer::writeSubmessage(this, v429, 0x8A7u);
  }
  v430 = (const PB::Base *)v3[201];
  if (v430) {
    result = PB::Writer::writeSubmessage(this, v430, 0x8A8u);
  }
  v431 = (const PB::Base *)v3[314];
  if (v431) {
    result = PB::Writer::writeSubmessage(this, v431, 0x8A9u);
  }
  v432 = (const PB::Base *)v3[39];
  if (v432) {
    result = PB::Writer::writeSubmessage(this, v432, 0x8AAu);
  }
  v433 = (const PB::Base *)v3[113];
  if (v433) {
    result = PB::Writer::writeSubmessage(this, v433, 0x8ABu);
  }
  v434 = (const PB::Base *)v3[295];
  if (v434) {
    result = PB::Writer::writeSubmessage(this, v434, 0x8ACu);
  }
  v435 = (const PB::Base *)v3[298];
  if (v435) {
    result = PB::Writer::writeSubmessage(this, v435, 0x8ADu);
  }
  v436 = (const PB::Base *)v3[32];
  if (v436) {
    result = PB::Writer::writeSubmessage(this, v436, 0x8AEu);
  }
  v437 = (const PB::Base *)v3[31];
  if (v437) {
    result = PB::Writer::writeSubmessage(this, v437, 0x8AFu);
  }
  v438 = (const PB::Base *)v3[352];
  if (v438) {
    result = PB::Writer::writeSubmessage(this, v438, 0x8B0u);
  }
  v439 = (const PB::Base *)v3[351];
  if (v439) {
    result = PB::Writer::writeSubmessage(this, v439, 0x8B1u);
  }
  v440 = (const PB::Base *)v3[328];
  if (v440) {
    result = PB::Writer::writeSubmessage(this, v440, 0x8B2u);
  }
  v441 = (const PB::Base *)v3[329];
  if (v441) {
    result = PB::Writer::writeSubmessage(this, v441, 0x8B3u);
  }
  v442 = (const PB::Base *)v3[331];
  if (v442) {
    result = PB::Writer::writeSubmessage(this, v442, 0x8B4u);
  }
  v443 = (const PB::Base *)v3[161];
  if (v443) {
    result = PB::Writer::writeSubmessage(this, v443, 0x8B5u);
  }
  v444 = (const PB::Base *)v3[330];
  if (v444) {
    result = PB::Writer::writeSubmessage(this, v444, 0x8B6u);
  }
  v445 = (const PB::Base *)v3[42];
  if (v445) {
    result = PB::Writer::writeSubmessage(this, v445, 0x8B7u);
  }
  v446 = (const PB::Base *)v3[185];
  if (v446) {
    result = PB::Writer::writeSubmessage(this, v446, 0x8B8u);
  }
  v447 = (const PB::Base *)v3[186];
  if (v447) {
    result = PB::Writer::writeSubmessage(this, v447, 0x8B9u);
  }
  v448 = (const PB::Base *)v3[187];
  if (v448) {
    result = PB::Writer::writeSubmessage(this, v448, 0x8BAu);
  }
  v449 = (const PB::Base *)v3[353];
  if (v449) {
    result = PB::Writer::writeSubmessage(this, v449, 0x8BBu);
  }
  v450 = (const PB::Base *)v3[354];
  if (v450) {
    result = PB::Writer::writeSubmessage(this, v450, 0x8BCu);
  }
  v451 = (const PB::Base *)v3[368];
  if (v451) {
    result = PB::Writer::writeSubmessage(this, v451, 0x7530u);
  }
  v452 = (const PB::Base *)v3[369];
  if (v452) {
    result = PB::Writer::writeSubmessage(this, v452, 0x7531u);
  }
  v453 = (const PB::Base *)v3[179];
  if (v453)
  {
    return PB::Writer::writeSubmessage(this, v453, 0x7532u);
  }
  return result;
}

uint64_t sub_101723B28(uint64_t result)
{
  if (!*(void *)(result + 88)) {
    operator new();
  }
  return result;
}

uint64_t sub_101723BB8(uint64_t result)
{
  if (!*(void *)(result + 144)) {
    operator new();
  }
  return result;
}

uint64_t sub_101723C48(uint64_t result)
{
  if (!*(void *)(result + 216)) {
    operator new();
  }
  return result;
}

uint64_t sub_101723CD8(uint64_t result)
{
  if (!*(void *)(result + 3448)) {
    operator new();
  }
  return result;
}

uint64_t sub_101723D68(uint64_t result)
{
  if (!*(void *)(result + 3472)) {
    operator new();
  }
  return result;
}

uint64_t sub_101723DF8(uint64_t result)
{
  if (!*(void *)(result + 3488)) {
    operator new();
  }
  return result;
}

uint64_t sub_101723E88(uint64_t result)
{
  if (!*(void *)(result + 3520)) {
    operator new();
  }
  return result;
}

uint64_t sub_101723F18(uint64_t result)
{
  if (!*(void *)(result + 3552)) {
    operator new();
  }
  return result;
}

uint64_t sub_101723FA8(uint64_t result)
{
  if (!*(void *)(result + 3536)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724038(uint64_t result)
{
  if (!*(void *)(result + 3584)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017240C8(uint64_t result)
{
  if (!*(void *)(result + 3568)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724158(uint64_t result)
{
  if (!*(void *)(result + 3400)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017241E8(uint64_t result)
{
  if (!*(void *)(result + 608)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724278(uint64_t result)
{
  if (!*(void *)(result + 3416)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724308(uint64_t result)
{
  if (!*(void *)(result + 272)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724398(uint64_t result)
{
  if (!*(void *)(result + 3576)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724428(uint64_t result)
{
  if (!*(void *)(result + 3544)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017244B8(uint64_t result)
{
  if (!*(void *)(result + 1000)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724548(uint64_t result)
{
  if (!*(void *)(result + 2848)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017245D8(uint64_t result)
{
  if (!*(void *)(result + 1328)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724668(uint64_t result)
{
  if (!*(void *)(result + 3176)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017246F8(uint64_t result)
{
  if (!*(void *)(result + 3184)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724788(uint64_t result)
{
  if (!*(void *)(result + 368)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724818(uint64_t result)
{
  if (!*(void *)(result + 3456)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017248A8(uint64_t result)
{
  if (!*(void *)(result + 296)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724938(uint64_t result)
{
  if (!*(void *)(result + 3440)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017249C8(uint64_t result)
{
  if (!*(void *)(result + 3288)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724A58(uint64_t result)
{
  if (!*(void *)(result + 2936)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724AE8(uint64_t result)
{
  if (!*(void *)(result + 2024)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724B78(uint64_t result)
{
  if (!*(void *)(result + 1200)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724C08(uint64_t result)
{
  if (!*(void *)(result + 1192)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724C98(uint64_t result)
{
  if (!*(void *)(result + 2544)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724D28(uint64_t result)
{
  if (!*(void *)(result + 1904)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724DB8(uint64_t result)
{
  if (!*(void *)(result + 1912)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724E48(uint64_t result)
{
  if (!*(void *)(result + 3528)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724ED8(uint64_t result)
{
  if (!*(void *)(result + 3480)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724F68(uint64_t result)
{
  if (!*(void *)(result + 384)) {
    operator new();
  }
  return result;
}

uint64_t sub_101724FF8(uint64_t result)
{
  if (!*(void *)(result + 1936)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725088(uint64_t result)
{
  if (!*(void *)(result + 3560)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725118(uint64_t result)
{
  if (!*(void *)(result + 192)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017251A8(uint64_t result)
{
  if (!*(void *)(result + 456)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725238(uint64_t result)
{
  if (!*(void *)(result + 1872)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017252C8(uint64_t result)
{
  if (!*(void *)(result + 448)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725358(uint64_t result)
{
  if (!*(void *)(result + 2464)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017253E8(uint64_t result)
{
  if (!*(void *)(result + 1040)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725478(uint64_t result)
{
  if (!*(void *)(result + 784)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725508(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725598(uint64_t result)
{
  if (!*(void *)(result + 16)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725628(uint64_t result)
{
  if (!*(void *)(result + 3248)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017256B8(uint64_t result)
{
  if (!*(void *)(result + 3592)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725748(uint64_t result)
{
  if (!*(void *)(result + 408)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017257D8(uint64_t result)
{
  if (!*(void *)(result + 896)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725868(uint64_t result)
{
  if (!*(void *)(result + 3464)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017258F8(uint64_t result)
{
  if (!*(void *)(result + 2616)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725988(uint64_t result)
{
  if (!*(void *)(result + 1800)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725A18(uint64_t result)
{
  if (!*(void *)(result + 304)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725AA8(uint64_t result)
{
  if (!*(void *)(result + 1784)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725B38(uint64_t result)
{
  if (!*(void *)(result + 3336)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725BC8(uint64_t result)
{
  if (!*(void *)(result + 2712)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725C58(uint64_t result)
{
  if (!*(void *)(result + 1808)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725CE8(uint64_t result)
{
  if (!*(void *)(result + 1776)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725D78(uint64_t result)
{
  if (!*(void *)(result + 400)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725E08(uint64_t result)
{
  if (!*(void *)(result + 440)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725E98(uint64_t result)
{
  if (!*(void *)(result + 1112)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725F28(uint64_t result)
{
  if (!*(void *)(result + 1120)) {
    operator new();
  }
  return result;
}

uint64_t sub_101725FB8(uint64_t result)
{
  if (!*(void *)(result + 1944)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726048(uint64_t result)
{
  if (!*(void *)(result + 1024)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017260D8(uint64_t result)
{
  if (!*(void *)(result + 3504)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726168(uint64_t result)
{
  if (!*(void *)(result + 2328)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017261F8(uint64_t result)
{
  if (!*(void *)(result + 1416)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726288(uint64_t result)
{
  if (!*(void *)(result + 864)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726318(uint64_t result)
{
  if (!*(void *)(result + 1424)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017263A8(uint64_t result)
{
  if (!*(void *)(result + 3424)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726438(uint64_t result)
{
  if (!*(void *)(result + 1272)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017264C8(uint64_t result)
{
  if (!*(void *)(result + 3384)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726558(uint64_t result)
{
  if (!*(void *)(result + 176)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017265E8(uint64_t result)
{
  if (!*(void *)(result + 208)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726678(uint64_t result)
{
  if (!*(void *)(result + 2032)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726708(uint64_t result)
{
  if (!*(void *)(result + 1336)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726798(uint64_t result)
{
  if (!*(void *)(result + 3496)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726828(uint64_t result)
{
  if (!*(void *)(result + 3072)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017268B8(uint64_t result)
{
  if (!*(void *)(result + 3168)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726948(uint64_t result)
{
  if (!*(void *)(result + 24)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017269D8(uint64_t result)
{
  if (!*(void *)(result + 64)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726A68(uint64_t result)
{
  if (!*(void *)(result + 1144)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726AF8(uint64_t result)
{
  if (!*(void *)(result + 1256)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726B88(uint64_t result)
{
  if (!*(void *)(result + 1264)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726C18(uint64_t result)
{
  if (!*(void *)(result + 1152)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726CA8(uint64_t result)
{
  if (!*(void *)(result + 1184)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726D38(uint64_t result)
{
  if (!*(void *)(result + 1232)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726DC8(uint64_t result)
{
  if (!*(void *)(result + 1920)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726E58(uint64_t result)
{
  if (!*(void *)(result + 640)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726EE8(uint64_t result)
{
  if (!*(void *)(result + 648)) {
    operator new();
  }
  return result;
}

uint64_t sub_101726F78(uint64_t result)
{
  if (!*(void *)(result + 656)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727008(uint64_t result)
{
  if (!*(void *)(result + 2592)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727098(uint64_t result)
{
  if (!*(void *)(result + 3152)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727128(uint64_t result)
{
  if (!*(void *)(result + 744)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017271B8(uint64_t result)
{
  if (!*(void *)(result + 2048)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727248(uint64_t result)
{
  if (!*(void *)(result + 392)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017272D8(uint64_t result)
{
  if (!*(void *)(result + 2840)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727368(uint64_t result)
{
  if (!*(void *)(result + 1864)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017273F8(uint64_t result)
{
  if (!*(void *)(result + 2016)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727488(uint64_t result)
{
  if (!*(void *)(result + 880)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727518(uint64_t result)
{
  if (!*(void *)(result + 2096)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017275A8(uint64_t result)
{
  if (!*(void *)(result + 528)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727638(uint64_t result)
{
  if (!*(void *)(result + 3432)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017276C8(uint64_t result)
{
  if (!*(void *)(result + 2136)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727758(uint64_t result)
{
  if (!*(void *)(result + 3064)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017277E8(uint64_t result)
{
  if (!*(void *)(result + 632)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727878(uint64_t result)
{
  if (!*(void *)(result + 2008)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727908(uint64_t result)
{
  if (!*(void *)(result + 2064)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727998(uint64_t result)
{
  if (!*(void *)(result + 3080)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727A28(uint64_t result)
{
  if (!*(void *)(result + 600)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727AB8(uint64_t result)
{
  if (!*(void *)(result + 1952)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727B48(uint64_t result)
{
  if (!*(void *)(result + 424)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727BD8(uint64_t result)
{
  if (!*(void *)(result + 3216)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727C68(uint64_t result)
{
  if (!*(void *)(result + 3024)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727CF8(uint64_t result)
{
  if (!*(void *)(result + 3408)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727D88(uint64_t result)
{
  if (!*(void *)(result + 2056)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727E18(uint64_t result)
{
  if (!*(void *)(result + 2040)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727EA8(uint64_t result)
{
  if (!*(void *)(result + 2120)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727F38(uint64_t result)
{
  if (!*(void *)(result + 96)) {
    operator new();
  }
  return result;
}

uint64_t sub_101727FC8(uint64_t result)
{
  if (!*(void *)(result + 240)) {
    operator new();
  }
  return result;
}

uint64_t sub_101728058(uint64_t result)
{
  if (!*(void *)(result + 160)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017280E8(uint64_t result)
{
  if (!*(void *)(result + 200)) {
    operator new();
  }
  return result;
}

uint64_t sub_101728178(uint64_t result)
{
  if (!*(void *)(result + 136)) {
    operator new();
  }
  return result;
}

uint64_t sub_101728208(uint64_t result)
{
  if (!*(void *)(result + 752)) {
    operator new();
  }
  return result;
}

uint64_t sub_101728298(uint64_t result)
{
  if (!*(void *)(result + 2144)) {
    operator new();
  }
  return result;
}

uint64_t sub_101728328(uint64_t result)
{
  if (!*(void *)(result + 2232)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017283B8(uint64_t result)
{
  *(void *)result = &off_1023379C0;
  *(_DWORD *)(result + 208) = 0;
  return result;
}

void sub_1017283E0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_101728418(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023379C0;
  *(_DWORD *)(a1 + 208) = 0;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x400) != 0)
  {
    double result = *(double *)(a2 + 88);
    int v3 = 1024;
    *(_DWORD *)(a1 + 208) = 1024;
    *(double *)(a1 + 88) = result;
    int v2 = *(_DWORD *)(a2 + 208);
    if ((v2 & 0x10000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x10000) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 136);
    v3 |= 0x10000u;
    *(_DWORD *)(a1 + 208) = v3;
    *(double *)(a1 + 136) = result;
    int v2 = *(_DWORD *)(a2 + 208);
  }
LABEL_6:
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    v3 |= 1u;
    *(_DWORD *)(a1 + 208) = v3;
    *(double *)(a1 + 8) = result;
    int v2 = *(_DWORD *)(a2 + 208);
    if ((v2 & 0x800000) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_32;
    }
  }
  else if ((v2 & 0x800000) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 192);
  v3 |= 0x800000u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 192) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x800) == 0) {
      goto LABEL_10;
    }
    goto LABEL_33;
  }
LABEL_32:
  double result = *(double *)(a2 + 56);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 56) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x800) == 0)
  {
LABEL_10:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }
LABEL_33:
  double result = *(double *)(a2 + 96);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 96) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }
LABEL_34:
  double result = *(double *)(a2 + 200);
  v3 |= 0x1000000u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 200) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_36;
  }
LABEL_35:
  double result = *(double *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 48) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x80) == 0)
  {
LABEL_13:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_37;
  }
LABEL_36:
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 64) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x100000) == 0)
  {
LABEL_14:
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = *(double *)(a2 + 168);
  v3 |= 0x100000u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 168) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 8) == 0)
  {
LABEL_15:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = *(double *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 32) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x200000) == 0)
  {
LABEL_16:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = *(double *)(a2 + 176);
  v3 |= 0x200000u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 176) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x8000) == 0)
  {
LABEL_17:
    if ((v2 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_41;
  }
LABEL_40:
  double result = *(double *)(a2 + 128);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 128) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 4) == 0)
  {
LABEL_18:
    if ((v2 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_42;
  }
LABEL_41:
  double result = *(double *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 24) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x200) == 0) {
      goto LABEL_20;
    }
    goto LABEL_43;
  }
LABEL_42:
  double result = *(double *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 40) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x200) == 0)
  {
LABEL_20:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_44;
  }
LABEL_43:
  double result = *(double *)(a2 + 80);
  v3 |= 0x200u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 80) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x2000) == 0)
  {
LABEL_21:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_45;
  }
LABEL_44:
  double result = *(double *)(a2 + 112);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 112) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x1000) == 0)
  {
LABEL_22:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_46;
  }
LABEL_45:
  double result = *(double *)(a2 + 104);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 104) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x4000) == 0)
  {
LABEL_23:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_47;
  }
LABEL_46:
  double result = *(double *)(a2 + 120);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 120) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x80000) == 0)
  {
LABEL_24:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_48;
  }
LABEL_47:
  double result = *(double *)(a2 + 160);
  v3 |= 0x80000u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 160) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x400000) == 0)
  {
LABEL_25:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_49;
  }
LABEL_48:
  double result = *(double *)(a2 + 184);
  v3 |= 0x400000u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 184) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x40000) == 0)
  {
LABEL_26:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_50;
  }
LABEL_49:
  double result = *(double *)(a2 + 152);
  v3 |= 0x40000u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 152) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x20000) == 0)
  {
LABEL_27:
    if ((v2 & 0x100) == 0) {
      goto LABEL_28;
    }
    goto LABEL_51;
  }
LABEL_50:
  double result = *(double *)(a2 + 144);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 144) = result;
  int v2 = *(_DWORD *)(a2 + 208);
  if ((v2 & 0x100) == 0)
  {
LABEL_28:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_52:
    double result = *(double *)(a2 + 16);
    *(_DWORD *)(a1 + 208) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
LABEL_51:
  double result = *(double *)(a2 + 72);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 208) = v3;
  *(double *)(a1 + 72) = result;
  if ((*(_DWORD *)(a2 + 208) & 2) != 0) {
    goto LABEL_52;
  }
  return result;
}

uint64_t sub_101728700(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 208);
  if (v5)
  {
    PB::TextFormatter::format(this, "acceleration", *(double *)(a1 + 8));
    int v5 = *(_DWORD *)(a1 + 208);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_32;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "centerOfMassAccelAmplitude", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "centerOfMassAccelMax", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "centripetalAccelMeanY", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "centripetalAccelMeanZ", *(double *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "height", *(double *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "position", *(double *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "rotationProjectedGravityAmplitude", *(double *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "rotationRateMean", *(double *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "rotationRateMeanX", *(double *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "strideLengthCadence", *(double *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "swingAccelAmplitudeY", *(double *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "swingAccelAmplitudeZ", *(double *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "swingAccelMaxY", *(double *)(a1 + 120));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "swingAccelMaxZ", *(double *)(a1 + 128));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 136));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "userAccelAmplitudeZ", *(double *)(a1 + 144));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x40000) == 0)
  {
LABEL_20:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "userAccelMaxX", *(double *)(a1 + 152));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x80000) == 0)
  {
LABEL_21:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "userAccelMaxY", *(double *)(a1 + 160));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x100000) == 0)
  {
LABEL_22:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "userAccelMean", *(double *)(a1 + 168));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x200000) == 0)
  {
LABEL_23:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "userAccelMeanY", *(double *)(a1 + 176));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x400000) == 0)
  {
LABEL_24:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "userAccelProjectedGravityAmplitudeCadence", *(double *)(a1 + 184));
  int v5 = *(_DWORD *)(a1 + 208);
  if ((v5 & 0x800000) == 0)
  {
LABEL_25:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_53:
  PB::TextFormatter::format(this, "velocity", *(double *)(a1 + 192));
  if ((*(_DWORD *)(a1 + 208) & 0x1000000) != 0) {
LABEL_26:
  }
    PB::TextFormatter::format(this, "weight", *(double *)(a1 + 200));
LABEL_27:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101728A64(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 208) |= 0x400u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 2u:
          *(_DWORD *)(a1 + 208) |= 0x10000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 136) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 3u:
          *(_DWORD *)(a1 + 208) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 4u:
          *(_DWORD *)(a1 + 208) |= 0x800000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 192) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 5u:
          *(_DWORD *)(a1 + 208) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 6u:
          *(_DWORD *)(a1 + 208) |= 0x800u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 96) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 7u:
          *(_DWORD *)(a1 + 208) |= 0x1000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 200) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 8u:
          *(_DWORD *)(a1 + 208) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 9u:
          *(_DWORD *)(a1 + 208) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0xAu:
          *(_DWORD *)(a1 + 208) |= 0x100000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 168) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0xBu:
          *(_DWORD *)(a1 + 208) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0xCu:
          *(_DWORD *)(a1 + 208) |= 0x200000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 176) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0xDu:
          *(_DWORD *)(a1 + 208) |= 0x8000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 128) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0xEu:
          *(_DWORD *)(a1 + 208) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0xFu:
          *(_DWORD *)(a1 + 208) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0x10u:
          *(_DWORD *)(a1 + 208) |= 0x200u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0x11u:
          *(_DWORD *)(a1 + 208) |= 0x2000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 112) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0x12u:
          *(_DWORD *)(a1 + 208) |= 0x1000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0x13u:
          *(_DWORD *)(a1 + 208) |= 0x4000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 120) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0x14u:
          *(_DWORD *)(a1 + 208) |= 0x80000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 160) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0x15u:
          *(_DWORD *)(a1 + 208) |= 0x400000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 184) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0x16u:
          *(_DWORD *)(a1 + 208) |= 0x40000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 152) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0x17u:
          *(_DWORD *)(a1 + 208) |= 0x20000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 144) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0x18u:
          *(_DWORD *)(a1 + 208) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_96;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
          goto LABEL_100;
        case 0x19u:
          *(_DWORD *)(a1 + 208) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_100:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_96:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017291C0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 208);
  if ((v4 & 0x400) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 88), 1u);
    int v4 = *(_DWORD *)(v3 + 208);
    if ((v4 & 0x10000) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_29;
    }
  }
  else if ((v4 & 0x10000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 136), 2u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 3u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x800000) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 192), 4u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 5u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x800) == 0)
  {
LABEL_7:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 96), 6u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_8:
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 200), 7u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x20) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 8u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x80) == 0)
  {
LABEL_10:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 9u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x100000) == 0)
  {
LABEL_11:
    if ((v4 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 168), 0xAu);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 8) == 0)
  {
LABEL_12:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 0xBu);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x200000) == 0)
  {
LABEL_13:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 176), 0xCu);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x8000) == 0)
  {
LABEL_14:
    if ((v4 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 128), 0xDu);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 4) == 0)
  {
LABEL_15:
    if ((v4 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 0xEu);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x10) == 0)
  {
LABEL_16:
    if ((v4 & 0x200) == 0) {
      goto LABEL_17;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 0xFu);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x200) == 0)
  {
LABEL_17:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80), 0x10u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x2000) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 112), 0x11u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 104), 0x12u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x4000) == 0)
  {
LABEL_20:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 120), 0x13u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x80000) == 0)
  {
LABEL_21:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 160), 0x14u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x400000) == 0)
  {
LABEL_22:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 184), 0x15u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x40000) == 0)
  {
LABEL_23:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 152), 0x16u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x20000) == 0)
  {
LABEL_24:
    if ((v4 & 0x100) == 0) {
      goto LABEL_25;
    }
LABEL_50:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72), 0x18u);
    if ((*(_DWORD *)(v3 + 208) & 2) == 0) {
      return result;
    }
    goto LABEL_51;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 144), 0x17u);
  int v4 = *(_DWORD *)(v3 + 208);
  if ((v4 & 0x100) != 0) {
    goto LABEL_50;
  }
LABEL_25:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_51:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5, 0x19u);
}

void *sub_1017294B4(void *result)
{
  *uint64_t result = &off_1023379F8;
  result[1] = 0;
  return result;
}

void sub_1017294D4(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_1023379F8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101729554(PB::Base *a1)
{
  sub_1017294D4(a1);

  operator delete();
}

void *sub_10172958C(void *result, uint64_t a2)
{
  *uint64_t result = &off_1023379F8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_101729634(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1017296B0(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017298AC(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

void *sub_1017298C8(void *result)
{
  *uint64_t result = &off_102337A30;
  result[1] = 0;
  return result;
}

void sub_1017298E8(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102337A30;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101729968(PB::Base *a1)
{
  sub_1017298E8(a1);

  operator delete();
}

void *sub_1017299A0(void *result, uint64_t a2)
{
  *uint64_t result = &off_102337A30;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_101729A48(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101729AC4(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101729CC0(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_101729CDC(uint64_t result)
{
  *(void *)uint64_t result = &off_102337A68;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_101729D04(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101729D3C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102337A68;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_101729DA0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "code", *(_DWORD *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101729E1C(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_64;
            }
            unint64_t v40 = v27++;
            char v41 = *(unsigned char *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_63;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_63:
          unint64_t v3 = v40 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v3 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v3;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }
LABEL_64:
        *(_DWORD *)(a1 + 16) = v31;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v21)
            {
              uint64_t v25 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_60;
            }
            unint64_t v36 = v21++;
            char v37 = *(unsigned char *)(v22 + v36);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v25 = 0;
          }
LABEL_59:
          unint64_t v3 = v36 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v3 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v3;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              break;
            }
          }
        }
LABEL_60:
        *(void *)(a1 + 8) = v25;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10172A148(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    int v5 = *(_DWORD *)(v3 + 16);
    return PB::Writer::writeVarInt(this, v5, 2u);
  }
  return result;
}

uint64_t sub_10172A1B4(uint64_t result)
{
  *(void *)uint64_t result = &off_102337AA0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_10172A1DC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10172A214(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102337AA0;
  *(_DWORD *)(result + 24) = 0;
  char v2 = *(unsigned char *)(a2 + 24);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 24) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 24);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 24) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 24) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 24);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 24) = v3 | 2;
    *(_DWORD *)(result + 16) = v6;
  }
  return result;
}

uint64_t sub_10172A294(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "dramDurationMs", *(_DWORD *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 24);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 24) & 4) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "vehicularFlags", *(_DWORD *)(a1 + 20));
LABEL_5:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10172A338(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v44 = 0;
          unsigned int v45 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_80;
            }
            unint64_t v46 = v27++;
            char v47 = *(unsigned char *)(v28 + v46);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v47 & 0x7F) << v44;
            if ((v47 & 0x80) == 0) {
              break;
            }
            v44 += 7;
            BOOL v14 = v45++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_79;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_79:
          unint64_t v3 = v46 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v3 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v3;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }
LABEL_80:
        *(_DWORD *)(a1 + 16) = v31;
      }
      else if (v20 == 2)
      {
        *(unsigned char *)(a1 + 24) |= 4u;
        unint64_t v33 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v34 = *(void *)this;
        if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
        {
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v37 = 0;
          if (v2 <= v33) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v33)
            {
              LODWORD(v37) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_85;
            }
            unint64_t v50 = v33++;
            char v51 = *(unsigned char *)(v34 + v50);
            *((void *)this + 1) = v33;
            v37 |= (unint64_t)(v51 & 0x7F) << v48;
            if ((v51 & 0x80) == 0) {
              break;
            }
            v48 += 7;
            BOOL v14 = v49++ > 8;
            if (v14)
            {
              LODWORD(v37) = 0;
              goto LABEL_84;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v37) = 0;
          }
LABEL_84:
          unint64_t v3 = v50 + 1;
        }
        else
        {
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          while (1)
          {
            unint64_t v3 = v33 + 1;
            *((void *)this + 1) = v33 + 1;
            char v38 = *(unsigned char *)(v34 + v33);
            v37 |= (unint64_t)(v38 & 0x7F) << v35;
            if ((v38 & 0x80) == 0) {
              break;
            }
            v35 += 7;
            unint64_t v33 = v3;
            BOOL v14 = v36++ > 8;
            if (v14)
            {
              LODWORD(v37) = 0;
              break;
            }
          }
        }
LABEL_85:
        *(_DWORD *)(a1 + 20) = v37;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v21)
            {
              uint64_t v25 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_75;
            }
            unint64_t v42 = v21++;
            char v43 = *(unsigned char *)(v22 + v42);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v43 & 0x7F) << v40;
            if ((v43 & 0x80) == 0) {
              break;
            }
            v40 += 7;
            BOOL v14 = v41++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              goto LABEL_74;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v25 = 0;
          }
LABEL_74:
          unint64_t v3 = v42 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v3 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v3;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              break;
            }
          }
        }
LABEL_75:
        *(void *)(a1 + 8) = v25;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10172A758(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 24) & 4) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 20), 2u);
    if ((*(unsigned char *)(v3 + 24) & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
  char v4 = *(unsigned char *)(v3 + 24);
  if ((v4 & 4) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_7:
  unsigned int v5 = *(_DWORD *)(v3 + 16);

  return PB::Writer::writeVarInt(this, v5, 3u);
}

uint64_t sub_10172A7E4(uint64_t result)
{
  *(void *)uint64_t result = &off_102337AD8;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

void sub_10172A80C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10172A844(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102337AD8;
  *(_DWORD *)(result + 52) = 0;
  char v2 = *(unsigned char *)(a2 + 52);
  if ((v2 & 0x20) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 44);
    char v3 = 32;
    *(unsigned char *)(result + 52) = 32;
    *(_DWORD *)(result + 44) = v4;
    char v2 = *(unsigned char *)(a2 + 52);
    if ((v2 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 52) & 0x40) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 48);
    v3 |= 0x40u;
    *(unsigned char *)(result + 52) = v3;
    *(_DWORD *)(result + 48) = v5;
    char v2 = *(unsigned char *)(a2 + 52);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 40);
    v3 |= 0x10u;
    *(unsigned char *)(result + 52) = v3;
    *(_DWORD *)(result + 40) = v6;
    char v2 = *(unsigned char *)(a2 + 52);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(unsigned char *)(result + 52) = v3;
  *(void *)(result + 32) = v7;
  char v2 = *(unsigned char *)(a2 + 52);
  if ((v2 & 1) == 0)
  {
LABEL_9:
    if ((v2 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v8 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(result + 52) = v3;
  *(void *)(result + 8) = v8;
  char v2 = *(unsigned char *)(a2 + 52);
  if ((v2 & 4) == 0)
  {
LABEL_10:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_16:
    uint64_t v10 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 52) = v3 | 2;
    *(void *)(result + 16) = v10;
    return result;
  }
LABEL_15:
  uint64_t v9 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(unsigned char *)(result + 52) = v3;
  *(void *)(result + 24) = v9;
  if ((*(unsigned char *)(a2 + 52) & 2) != 0) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10172A934(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 52);
  if (v5)
  {
    PB::TextFormatter::format(this, "createdAtTimestamp", *(void *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 52);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 52) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "epochNumber", *(_DWORD *)(a1 + 40));
  char v5 = *(unsigned char *)(a1 + 52);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "epochTimestamp", *(void *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "lastRealTriggerTimestamp", *(void *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 52);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "mode", *(_DWORD *)(a1 + 44));
  char v5 = *(unsigned char *)(a1 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "receivedAtTimestamp", *(void *)(a1 + 32));
  if ((*(unsigned char *)(a1 + 52) & 0x40) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "sessionNumber", *(_DWORD *)(a1 + 48));
LABEL_9:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10172AA58(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v3 > v2) {
          unint64_t v2 = v3;
        }
        while (v2 != v3)
        {
          unint64_t v17 = v3 + 1;
          char v18 = *(unsigned char *)(v8 + v3);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v3 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v3 + 1;
          *((void *)this + 1) = v3 + 1;
          char v13 = *(unsigned char *)(v8 + v3);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v3 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          unint64_t v20 = v11 >> 3;
          switch((v11 >> 3))
          {
            case 2u:
              *(unsigned char *)(a1 + 52) |= 0x20u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v64 = 0;
                unsigned int v65 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_135;
                  }
                  unint64_t v66 = v21++;
                  char v67 = *(unsigned char *)(v22 + v66);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v67 & 0x7F) << v64;
                  if ((v67 & 0x80) == 0) {
                    break;
                  }
                  v64 += 7;
                  BOOL v14 = v65++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
                    goto LABEL_134;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
LABEL_134:
                unint64_t v3 = v66 + 1;
              }
              else
              {
                char v23 = 0;
                unsigned int v24 = 0;
                uint64_t v25 = 0;
                do
                {
                  unint64_t v3 = v21 + 1;
                  *((void *)this + 1) = v21 + 1;
                  char v26 = *(unsigned char *)(v22 + v21);
                  v25 |= (unint64_t)(v26 & 0x7F) << v23;
                  if ((v26 & 0x80) == 0) {
                    goto LABEL_135;
                  }
                  v23 += 7;
                  unint64_t v21 = v3;
                  BOOL v14 = v24++ > 8;
                }
                while (!v14);
                LODWORD(v25) = 0;
              }
LABEL_135:
              *(_DWORD *)(a1 + 44) = v25;
              goto LABEL_166;
            case 3u:
              *(unsigned char *)(a1 + 52) |= 0x40u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v72 = 0;
                unsigned int v73 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_145;
                  }
                  unint64_t v74 = v33++;
                  char v75 = *(unsigned char *)(v34 + v74);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v75 & 0x7F) << v72;
                  if ((v75 & 0x80) == 0) {
                    break;
                  }
                  v72 += 7;
                  BOOL v14 = v73++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_144:
                    unint64_t v3 = v74 + 1;
                    goto LABEL_145;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_144;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v3 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_145;
                }
                v35 += 7;
                unint64_t v33 = v3;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_145:
              *(_DWORD *)(a1 + 48) = v37;
              goto LABEL_166;
            case 4u:
              *(unsigned char *)(a1 + 52) |= 0x10u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v76 = 0;
                unsigned int v77 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_150;
                  }
                  unint64_t v78 = v39++;
                  char v79 = *(unsigned char *)(v40 + v78);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v79 & 0x7F) << v76;
                  if ((v79 & 0x80) == 0) {
                    break;
                  }
                  v76 += 7;
                  BOOL v14 = v77++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_149:
                    unint64_t v3 = v78 + 1;
                    goto LABEL_150;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_149;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v3 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_150;
                }
                v41 += 7;
                unint64_t v39 = v3;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_150:
              *(_DWORD *)(a1 + 40) = v43;
              goto LABEL_166;
            case 5u:
              *(unsigned char *)(a1 + 52) |= 8u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v80 = 0;
                unsigned int v81 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v45)
                  {
                    uint64_t v49 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_155;
                  }
                  unint64_t v82 = v45++;
                  char v83 = *(unsigned char *)(v46 + v82);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v83 & 0x7F) << v80;
                  if ((v83 & 0x80) == 0) {
                    break;
                  }
                  v80 += 7;
                  BOOL v14 = v81++ > 8;
                  if (v14)
                  {
                    uint64_t v49 = 0;
LABEL_154:
                    unint64_t v3 = v82 + 1;
                    goto LABEL_155;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v49 = 0;
                }
                goto LABEL_154;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v3 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_155;
                }
                v47 += 7;
                unint64_t v45 = v3;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              uint64_t v49 = 0;
LABEL_155:
              *(void *)(a1 + 32) = v49;
              goto LABEL_166;
            case 6u:
              *(unsigned char *)(a1 + 52) |= 1u;
              unint64_t v51 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v52 = *(void *)this;
              if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
              {
                char v84 = 0;
                unsigned int v85 = 0;
                uint64_t v55 = 0;
                if (v2 <= v51) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v51)
                  {
                    uint64_t v55 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_160;
                  }
                  unint64_t v86 = v51++;
                  char v87 = *(unsigned char *)(v52 + v86);
                  *((void *)this + 1) = v51;
                  v55 |= (unint64_t)(v87 & 0x7F) << v84;
                  if ((v87 & 0x80) == 0) {
                    break;
                  }
                  v84 += 7;
                  BOOL v14 = v85++ > 8;
                  if (v14)
                  {
                    uint64_t v55 = 0;
LABEL_159:
                    unint64_t v3 = v86 + 1;
                    goto LABEL_160;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v55 = 0;
                }
                goto LABEL_159;
              }
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              do
              {
                unint64_t v3 = v51 + 1;
                *((void *)this + 1) = v51 + 1;
                char v56 = *(unsigned char *)(v52 + v51);
                v55 |= (unint64_t)(v56 & 0x7F) << v53;
                if ((v56 & 0x80) == 0) {
                  goto LABEL_160;
                }
                v53 += 7;
                unint64_t v51 = v3;
                BOOL v14 = v54++ > 8;
              }
              while (!v14);
              uint64_t v55 = 0;
LABEL_160:
              *(void *)(a1 + 8) = v55;
              goto LABEL_166;
            default:
              if (v20 == 100)
              {
                *(unsigned char *)(a1 + 52) |= 4u;
                unint64_t v57 = *((void *)this + 1);
                unint64_t v2 = *((void *)this + 2);
                uint64_t v58 = *(void *)this;
                if (v57 > 0xFFFFFFFFFFFFFFF5 || v57 + 10 > v2)
                {
                  char v88 = 0;
                  unsigned int v89 = 0;
                  uint64_t v61 = 0;
                  if (v2 <= v57) {
                    unint64_t v3 = *((void *)this + 1);
                  }
                  else {
                    unint64_t v3 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v3 == v57)
                    {
                      uint64_t v61 = 0;
                      *((unsigned char *)this + 24) = 1;
                      goto LABEL_165;
                    }
                    unint64_t v90 = v57++;
                    char v91 = *(unsigned char *)(v58 + v90);
                    *((void *)this + 1) = v57;
                    v61 |= (unint64_t)(v91 & 0x7F) << v88;
                    if ((v91 & 0x80) == 0) {
                      break;
                    }
                    v88 += 7;
                    BOOL v14 = v89++ > 8;
                    if (v14)
                    {
                      uint64_t v61 = 0;
                      goto LABEL_164;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v61 = 0;
                  }
LABEL_164:
                  unint64_t v3 = v90 + 1;
                }
                else
                {
                  char v59 = 0;
                  unsigned int v60 = 0;
                  uint64_t v61 = 0;
                  while (1)
                  {
                    unint64_t v3 = v57 + 1;
                    *((void *)this + 1) = v57 + 1;
                    char v62 = *(unsigned char *)(v58 + v57);
                    v61 |= (unint64_t)(v62 & 0x7F) << v59;
                    if ((v62 & 0x80) == 0) {
                      break;
                    }
                    v59 += 7;
                    unint64_t v57 = v3;
                    BOOL v14 = v60++ > 8;
                    if (v14)
                    {
                      uint64_t v61 = 0;
                      break;
                    }
                  }
                }
LABEL_165:
                *(void *)(a1 + 24) = v61;
              }
              else if (v20 == 101)
              {
                *(unsigned char *)(a1 + 52) |= 2u;
                unint64_t v27 = *((void *)this + 1);
                unint64_t v2 = *((void *)this + 2);
                uint64_t v28 = *(void *)this;
                if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
                {
                  char v68 = 0;
                  unsigned int v69 = 0;
                  uint64_t v31 = 0;
                  if (v2 <= v27) {
                    unint64_t v3 = *((void *)this + 1);
                  }
                  else {
                    unint64_t v3 = *((void *)this + 2);
                  }
                  while (1)
                  {
                    if (v3 == v27)
                    {
                      uint64_t v31 = 0;
                      *((unsigned char *)this + 24) = 1;
                      goto LABEL_140;
                    }
                    unint64_t v70 = v27++;
                    char v71 = *(unsigned char *)(v28 + v70);
                    *((void *)this + 1) = v27;
                    v31 |= (unint64_t)(v71 & 0x7F) << v68;
                    if ((v71 & 0x80) == 0) {
                      break;
                    }
                    v68 += 7;
                    BOOL v14 = v69++ > 8;
                    if (v14)
                    {
                      uint64_t v31 = 0;
                      goto LABEL_139;
                    }
                  }
                  if (*((unsigned char *)this + 24)) {
                    uint64_t v31 = 0;
                  }
LABEL_139:
                  unint64_t v3 = v70 + 1;
                }
                else
                {
                  char v29 = 0;
                  unsigned int v30 = 0;
                  uint64_t v31 = 0;
                  while (1)
                  {
                    unint64_t v3 = v27 + 1;
                    *((void *)this + 1) = v27 + 1;
                    char v32 = *(unsigned char *)(v28 + v27);
                    v31 |= (unint64_t)(v32 & 0x7F) << v29;
                    if ((v32 & 0x80) == 0) {
                      break;
                    }
                    v29 += 7;
                    unint64_t v27 = v3;
                    BOOL v14 = v30++ > 8;
                    if (v14)
                    {
                      uint64_t v31 = 0;
                      break;
                    }
                  }
                }
LABEL_140:
                *(void *)(a1 + 16) = v31;
              }
              else
              {
                uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
                if (!result) {
                  return result;
                }
                unint64_t v3 = *((void *)this + 1);
                unint64_t v2 = *((void *)this + 2);
              }
LABEL_166:
              int v4 = *((unsigned __int8 *)this + 24);
              if (v3 >= v2 || *((unsigned char *)this + 24)) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10172B260(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 52);
  if ((v4 & 0x20) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 44), 2u);
    char v4 = *(unsigned char *)(v3 + 52);
    if ((v4 & 0x40) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 52) & 0x40) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 48), 3u);
  char v4 = *(unsigned char *)(v3 + 52);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 40), 4u);
  char v4 = *(unsigned char *)(v3 + 52);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 5u);
  char v4 = *(unsigned char *)(v3 + 52);
  if ((v4 & 1) == 0)
  {
LABEL_6:
    if ((v4 & 4) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0x64u);
    if ((*(unsigned char *)(v3 + 52) & 2) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 6u);
  char v4 = *(unsigned char *)(v3 + 52);
  if ((v4 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_15:
  unint64_t v5 = *(void *)(v3 + 16);

  return PB::Writer::writeVarInt(this, v5, 0x65u);
}

void *sub_10172B35C(void *result)
{
  *uint64_t result = &off_102337B10;
  *(void *)((char *)result + 212) = 0;
  return result;
}

void sub_10172B384(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10172B3BC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102337B10;
  *(void *)(result + 212) = 0;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x800) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 96);
    uint64_t v3 = 2048;
    *(void *)(result + 212) = 2048;
    *(void *)(result + 96) = v4;
    uint64_t v2 = *(void *)(a2 + 212);
    if ((v2 & 0x200000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if ((v2 & 0x200000) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 140);
    v3 |= 0x200000uLL;
    *(void *)(result + 212) = v3;
    *(_DWORD *)(result + 140) = v5;
    uint64_t v2 = *(void *)(a2 + 212);
  }
LABEL_6:
  if ((v2 & 0x40) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 56);
    v3 |= 0x40uLL;
    *(void *)(result + 212) = v3;
    *(void *)(result + 56) = v6;
    uint64_t v2 = *(void *)(a2 + 212);
    if ((v2 & 0x10000) == 0)
    {
LABEL_8:
      if ((v2 & 0x1000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_47;
    }
  }
  else if ((v2 & 0x10000) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 120);
  v3 |= 0x10000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 120) = v7;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_9:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_48;
  }
LABEL_47:
  int v8 = *(_DWORD *)(a2 + 152);
  v3 |= 0x1000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 152) = v8;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x100000) == 0)
  {
LABEL_10:
    if ((v2 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v9 = *(_DWORD *)(a2 + 136);
  v3 |= 0x100000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 136) = v9;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x20) == 0)
  {
LABEL_11:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t v10 = *(void *)(a2 + 48);
  v3 |= 0x20uLL;
  *(void *)(result + 212) = v3;
  *(void *)(result + 48) = v10;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x40000) == 0)
  {
LABEL_12:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v11 = *(_DWORD *)(a2 + 128);
  v3 |= 0x40000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 128) = v11;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x800000) == 0)
  {
LABEL_13:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v12 = *(_DWORD *)(a2 + 148);
  v3 |= 0x800000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 148) = v12;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x400000) == 0)
  {
LABEL_14:
    if ((v2 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v13 = *(_DWORD *)(a2 + 144);
  v3 |= 0x400000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 144) = v13;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x80) == 0)
  {
LABEL_15:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v14 = *(void *)(a2 + 64);
  v3 |= 0x80uLL;
  *(void *)(result + 212) = v3;
  *(void *)(result + 64) = v14;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x20000) == 0)
  {
LABEL_16:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v15 = *(_DWORD *)(a2 + 124);
  v3 |= 0x20000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 124) = v15;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x80000) == 0)
  {
LABEL_17:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v16 = *(_DWORD *)(a2 + 132);
  v3 |= 0x80000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 132) = v16;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_57;
  }
LABEL_56:
  int v17 = *(_DWORD *)(a2 + 176);
  v3 |= 0x40000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 176) = v17;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x200) == 0)
  {
LABEL_19:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t v18 = *(void *)(a2 + 80);
  v3 |= 0x200uLL;
  *(void *)(result + 212) = v3;
  *(void *)(result + 80) = v18;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_20:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v19 = *(_DWORD *)(a2 + 156);
  v3 |= 0x2000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 156) = v19;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_21:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v20 = *(_DWORD *)(a2 + 188);
  v3 |= 0x200000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 188) = v20;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_22:
    if ((v2 & 0x100) == 0) {
      goto LABEL_23;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v21 = *(_DWORD *)(a2 + 172);
  v3 |= 0x20000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 172) = v21;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x100) == 0)
  {
LABEL_23:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t v22 = *(void *)(a2 + 72);
  v3 |= 0x100uLL;
  *(void *)(result + 212) = v3;
  *(void *)(result + 72) = v22;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_24:
    if ((v2 & 0x100000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v23 = *(_DWORD *)(a2 + 164);
  v3 |= 0x8000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 164) = v23;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x100000000) == 0)
  {
LABEL_25:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_64;
  }
LABEL_63:
  int v24 = *(_DWORD *)(a2 + 184);
  v3 |= (unint64_t)&_mh_execute_header;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 184) = v24;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_26:
    if ((v2 & 0x400) == 0) {
      goto LABEL_27;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v25 = *(_DWORD *)(a2 + 180);
  v3 |= 0x80000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 180) = v25;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x400) == 0)
  {
LABEL_27:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t v26 = *(void *)(a2 + 88);
  v3 |= 0x400uLL;
  *(void *)(result + 212) = v3;
  *(void *)(result + 88) = v26;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v27 = *(_DWORD *)(a2 + 160);
  v3 |= 0x4000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 160) = v27;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_29:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v28 = *(_DWORD *)(a2 + 168);
  v3 |= 0x10000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 168) = v28;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x2000) == 0)
  {
LABEL_30:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_69;
  }
LABEL_68:
  int v29 = *(_DWORD *)(a2 + 108);
  v3 |= 0x2000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 108) = v29;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x8000) == 0)
  {
LABEL_31:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_70;
  }
LABEL_69:
  int v30 = *(_DWORD *)(a2 + 116);
  v3 |= 0x8000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 116) = v30;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x4000) == 0)
  {
LABEL_32:
    if ((v2 & 0x10) == 0) {
      goto LABEL_33;
    }
    goto LABEL_71;
  }
LABEL_70:
  int v31 = *(_DWORD *)(a2 + 112);
  v3 |= 0x4000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 112) = v31;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x10) == 0)
  {
LABEL_33:
    if ((v2 & 8) == 0) {
      goto LABEL_34;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t v32 = *(void *)(a2 + 40);
  v3 |= 0x10uLL;
  *(void *)(result + 212) = v3;
  *(void *)(result + 40) = v32;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 8) == 0)
  {
LABEL_34:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t v33 = *(void *)(a2 + 32);
  v3 |= 8uLL;
  *(void *)(result + 212) = v3;
  *(void *)(result + 32) = v33;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_35:
    if ((v2 & 0x2000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_74;
  }
LABEL_73:
  int v34 = *(_DWORD *)(a2 + 196);
  v3 |= 0x800000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 196) = v34;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x2000000000) == 0)
  {
LABEL_36:
    if ((v2 & 0x1000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v35 = *(_DWORD *)(a2 + 204);
  v3 |= 0x2000000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 204) = v35;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x1000000000) == 0)
  {
LABEL_37:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_76;
  }
LABEL_75:
  int v36 = *(_DWORD *)(a2 + 200);
  v3 |= 0x1000000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 200) = v36;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_38:
    if ((v2 & 0x4000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_77;
  }
LABEL_76:
  int v37 = *(_DWORD *)(a2 + 192);
  v3 |= 0x400000000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 192) = v37;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x4000000000) == 0)
  {
LABEL_39:
    if ((v2 & 0x8000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_78;
  }
LABEL_77:
  char v38 = *(unsigned char *)(a2 + 208);
  v3 |= 0x4000000000uLL;
  *(void *)(result + 212) = v3;
  *(unsigned char *)(result + 208) = v38;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x8000000000) == 0)
  {
LABEL_40:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_79;
  }
LABEL_78:
  char v39 = *(unsigned char *)(a2 + 209);
  v3 |= 0x8000000000uLL;
  *(void *)(result + 212) = v3;
  *(unsigned char *)(result + 209) = v39;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 0x1000) == 0)
  {
LABEL_41:
    if ((v2 & 4) == 0) {
      goto LABEL_42;
    }
    goto LABEL_80;
  }
LABEL_79:
  int v40 = *(_DWORD *)(a2 + 104);
  v3 |= 0x1000uLL;
  *(void *)(result + 212) = v3;
  *(_DWORD *)(result + 104) = v40;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 4) == 0)
  {
LABEL_42:
    if ((v2 & 2) == 0) {
      goto LABEL_43;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t v41 = *(void *)(a2 + 24);
  v3 |= 4uLL;
  *(void *)(result + 212) = v3;
  *(void *)(result + 24) = v41;
  uint64_t v2 = *(void *)(a2 + 212);
  if ((v2 & 2) == 0)
  {
LABEL_43:
    if ((v2 & 1) == 0) {
      return result;
    }
LABEL_82:
    uint64_t v43 = *(void *)(a2 + 8);
    *(void *)(result + 212) = v3 | 1;
    *(void *)(result + 8) = v43;
    return result;
  }
LABEL_81:
  uint64_t v42 = *(void *)(a2 + 16);
  v3 |= 2uLL;
  *(void *)(result + 212) = v3;
  *(void *)(result + 16) = v42;
  if (*(void *)(a2 + 212)) {
    goto LABEL_82;
  }
  return result;
}

uint64_t sub_10172B848(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 212);
  if (v5)
  {
    PB::TextFormatter::format(this, "calculationTimestamp", *(void *)(a1 + 8));
    uint64_t v5 = *(void *)(a1 + 212);
    if ((v5 & 0x1000) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_47;
    }
  }
  else if ((v5 & 0x1000) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "dramDuration", *(_DWORD *)(a1 + 104));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "dramMaxTimestamp", *(void *)(a1 + 16));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "dramMinTimestamp", *(void *)(a1 + 24));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "epochMaxTimestamp", *(void *)(a1 + 32));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "epochMinTimestamp", *(void *)(a1 + 40));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x2000) == 0)
  {
LABEL_8:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "maxRMS", *(float *)(a1 + 108));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x4000) == 0)
  {
LABEL_9:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "numPointsInEpoch", *(_DWORD *)(a1 + 112));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x8000) == 0)
  {
LABEL_10:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "numShortAudio", *(_DWORD *)(a1 + 116));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x10000) == 0)
  {
LABEL_11:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "planarChaosAtMaxEnergy", *(float *)(a1 + 120));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x20000) == 0)
  {
LABEL_12:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "planarChaosAtMaxSaturation", *(float *)(a1 + 124));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x40000) == 0)
  {
LABEL_13:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "planarEnergyAtMaxChaos", *(float *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x80000) == 0)
  {
LABEL_14:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "planarEnergyAtMaxSaturation", *(float *)(a1 + 132));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x100000) == 0)
  {
LABEL_15:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "planarMaxChaos", *(float *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x200000) == 0)
  {
LABEL_16:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "planarMaxEnergy", *(float *)(a1 + 140));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x400000) == 0)
  {
LABEL_17:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "planarMaxSaturation", *(float *)(a1 + 144));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x4000000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "planarPassThru", *(unsigned char *)(a1 + 208));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x800000) == 0)
  {
LABEL_19:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "planarSaturationAtMaxChaos", *(float *)(a1 + 148));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_20:
    if ((v5 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "planarSaturationAtMaxEnergy", *(float *)(a1 + 152));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x20) == 0)
  {
LABEL_21:
    if ((v5 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "planarTimestampAtMaxChaos", *(void *)(a1 + 48));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x40) == 0)
  {
LABEL_22:
    if ((v5 & 0x80) == 0) {
      goto LABEL_23;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "planarTimestampAtMaxEnergy", *(void *)(a1 + 56));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x80) == 0)
  {
LABEL_23:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "planarTimestampAtMaxSaturation", *(void *)(a1 + 64));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_24:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "rolloverChaosAtMaxEnergy", *(float *)(a1 + 156));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_25:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "rolloverChaosAtMaxSaturation", *(float *)(a1 + 160));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "rolloverEnergyAtMaxChaos", *(float *)(a1 + 164));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "rolloverEnergyAtMaxSaturation", *(float *)(a1 + 168));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "rolloverMaxChaos", *(float *)(a1 + 172));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "rolloverMaxEnergy", *(float *)(a1 + 176));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "rolloverMaxSaturation", *(float *)(a1 + 180));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x8000000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "rolloverPassThru", *(unsigned char *)(a1 + 209));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "rolloverSaturationAtMaxChaos", *(float *)(a1 + 184));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x100) == 0) {
      goto LABEL_34;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "rolloverSaturationAtMaxEnergy", *(float *)(a1 + 188));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x100) == 0)
  {
LABEL_34:
    if ((v5 & 0x200) == 0) {
      goto LABEL_35;
    }
    goto LABEL_78;
  }
LABEL_77:
  PB::TextFormatter::format(this, "rolloverTimestampAtMaxChaos", *(void *)(a1 + 72));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x200) == 0)
  {
LABEL_35:
    if ((v5 & 0x400) == 0) {
      goto LABEL_36;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(this, "rolloverTimestampAtMaxEnergy", *(void *)(a1 + 80));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x400) == 0)
  {
LABEL_36:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(this, "rolloverTimestampAtMaxSaturation", *(void *)(a1 + 88));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x400000000) == 0)
  {
LABEL_37:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(this, "soundEnvelopeCount", *(float *)(a1 + 192));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x800000000) == 0)
  {
LABEL_38:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "soundMaxMeanOverArmSession", *(float *)(a1 + 196));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x1000000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(this, "soundMeanCurrentWindow", *(float *)(a1 + 200));
  uint64_t v5 = *(void *)(a1 + 212);
  if ((v5 & 0x2000000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x800) == 0) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }
LABEL_83:
  PB::TextFormatter::format(this, "soundMeanLast15s", *(float *)(a1 + 204));
  if ((*(void *)(a1 + 212) & 0x800) != 0) {
LABEL_41:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 96));
LABEL_42:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10172BD8C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(void *)(a1 + 212) |= 0x800uLL;
          unint64_t v20 = *((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v21)
          {
            char v172 = 0;
            unsigned int v173 = 0;
            uint64_t v25 = 0;
            if (v21 <= v20) {
              unint64_t v21 = *((void *)this + 1);
            }
            do
            {
              if (v21 == v20)
              {
                uint64_t v25 = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_321;
              }
              unint64_t v174 = v20 + 1;
              char v175 = *(unsigned char *)(v22 + v20);
              *((void *)this + 1) = v174;
              v25 |= (unint64_t)(v175 & 0x7F) << v172;
              if ((v175 & 0x80) == 0)
              {
                if (*((unsigned char *)this + 24)) {
                  uint64_t v25 = 0;
                }
                goto LABEL_321;
              }
              v172 += 7;
              unint64_t v20 = v174;
              BOOL v14 = v173++ > 8;
            }
            while (!v14);
LABEL_208:
            uint64_t v25 = 0;
          }
          else
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            while (1)
            {
              unint64_t v26 = v20 + 1;
              *((void *)this + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                break;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
              if (v14) {
                goto LABEL_208;
              }
            }
          }
LABEL_321:
          *(void *)(a1 + 96) = v25;
          goto LABEL_313;
        case 2u:
          *(void *)(a1 + 212) |= 0x200000uLL;
          unint64_t v29 = *((void *)this + 1);
          if (v29 > 0xFFFFFFFFFFFFFFFBLL || v29 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v29);
          goto LABEL_312;
        case 3u:
          *(void *)(a1 + 212) |= 0x40uLL;
          unint64_t v30 = *((void *)this + 1);
          unint64_t v31 = *((void *)this + 2);
          uint64_t v32 = *(void *)this;
          if (v30 <= 0xFFFFFFFFFFFFFFF5 && v30 + 10 <= v31)
          {
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v35 = 0;
            do
            {
              unint64_t v36 = v30 + 1;
              *((void *)this + 1) = v30 + 1;
              char v37 = *(unsigned char *)(v32 + v30);
              v35 |= (unint64_t)(v37 & 0x7F) << v33;
              if ((v37 & 0x80) == 0) {
                goto LABEL_325;
              }
              v33 += 7;
              unint64_t v30 = v36;
              BOOL v14 = v34++ > 8;
            }
            while (!v14);
LABEL_215:
            uint64_t v35 = 0;
            goto LABEL_325;
          }
          char v176 = 0;
          unsigned int v177 = 0;
          uint64_t v35 = 0;
          if (v31 <= v30) {
            unint64_t v31 = *((void *)this + 1);
          }
          while (2)
          {
            if (v31 == v30)
            {
              uint64_t v35 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v178 = v30 + 1;
              char v179 = *(unsigned char *)(v32 + v30);
              *((void *)this + 1) = v178;
              v35 |= (unint64_t)(v179 & 0x7F) << v176;
              if (v179 < 0)
              {
                v176 += 7;
                unint64_t v30 = v178;
                BOOL v14 = v177++ > 8;
                if (v14) {
                  goto LABEL_215;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v35 = 0;
              }
            }
            break;
          }
LABEL_325:
          *(void *)(a1 + 56) = v35;
          goto LABEL_313;
        case 4u:
          *(void *)(a1 + 212) |= 0x10000uLL;
          unint64_t v38 = *((void *)this + 1);
          if (v38 > 0xFFFFFFFFFFFFFFFBLL || v38 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v38);
          goto LABEL_312;
        case 5u:
          *(void *)(a1 + 212) |= 0x1000000uLL;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFFBLL || v39 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 152) = *(_DWORD *)(*(void *)this + v39);
          goto LABEL_312;
        case 6u:
          *(void *)(a1 + 212) |= 0x100000uLL;
          unint64_t v40 = *((void *)this + 1);
          if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 136) = *(_DWORD *)(*(void *)this + v40);
          goto LABEL_312;
        case 7u:
          *(void *)(a1 + 212) |= 0x20uLL;
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          uint64_t v43 = *(void *)this;
          if (v41 <= 0xFFFFFFFFFFFFFFF5 && v41 + 10 <= v42)
          {
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            do
            {
              unint64_t v47 = v41 + 1;
              *((void *)this + 1) = v41 + 1;
              char v48 = *(unsigned char *)(v43 + v41);
              v46 |= (unint64_t)(v48 & 0x7F) << v44;
              if ((v48 & 0x80) == 0) {
                goto LABEL_329;
              }
              v44 += 7;
              unint64_t v41 = v47;
              BOOL v14 = v45++ > 8;
            }
            while (!v14);
LABEL_222:
            uint64_t v46 = 0;
            goto LABEL_329;
          }
          char v180 = 0;
          unsigned int v181 = 0;
          uint64_t v46 = 0;
          if (v42 <= v41) {
            unint64_t v42 = *((void *)this + 1);
          }
          while (2)
          {
            if (v42 == v41)
            {
              uint64_t v46 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v182 = v41 + 1;
              char v183 = *(unsigned char *)(v43 + v41);
              *((void *)this + 1) = v182;
              v46 |= (unint64_t)(v183 & 0x7F) << v180;
              if (v183 < 0)
              {
                v180 += 7;
                unint64_t v41 = v182;
                BOOL v14 = v181++ > 8;
                if (v14) {
                  goto LABEL_222;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v46 = 0;
              }
            }
            break;
          }
LABEL_329:
          *(void *)(a1 + 48) = v46;
          goto LABEL_313;
        case 8u:
          *(void *)(a1 + 212) |= 0x40000uLL;
          unint64_t v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v49);
          goto LABEL_312;
        case 9u:
          *(void *)(a1 + 212) |= 0x800000uLL;
          unint64_t v50 = *((void *)this + 1);
          if (v50 > 0xFFFFFFFFFFFFFFFBLL || v50 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v50);
          goto LABEL_312;
        case 0xAu:
          *(void *)(a1 + 212) |= 0x400000uLL;
          unint64_t v51 = *((void *)this + 1);
          if (v51 > 0xFFFFFFFFFFFFFFFBLL || v51 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v51);
          goto LABEL_312;
        case 0xBu:
          *(void *)(a1 + 212) |= 0x80uLL;
          unint64_t v52 = *((void *)this + 1);
          unint64_t v53 = *((void *)this + 2);
          uint64_t v54 = *(void *)this;
          if (v52 <= 0xFFFFFFFFFFFFFFF5 && v52 + 10 <= v53)
          {
            char v55 = 0;
            unsigned int v56 = 0;
            uint64_t v57 = 0;
            do
            {
              unint64_t v58 = v52 + 1;
              *((void *)this + 1) = v52 + 1;
              char v59 = *(unsigned char *)(v54 + v52);
              v57 |= (unint64_t)(v59 & 0x7F) << v55;
              if ((v59 & 0x80) == 0) {
                goto LABEL_333;
              }
              v55 += 7;
              unint64_t v52 = v58;
              BOOL v14 = v56++ > 8;
            }
            while (!v14);
LABEL_229:
            uint64_t v57 = 0;
            goto LABEL_333;
          }
          char v184 = 0;
          unsigned int v185 = 0;
          uint64_t v57 = 0;
          if (v53 <= v52) {
            unint64_t v53 = *((void *)this + 1);
          }
          while (2)
          {
            if (v53 == v52)
            {
              uint64_t v57 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v186 = v52 + 1;
              char v187 = *(unsigned char *)(v54 + v52);
              *((void *)this + 1) = v186;
              v57 |= (unint64_t)(v187 & 0x7F) << v184;
              if (v187 < 0)
              {
                v184 += 7;
                unint64_t v52 = v186;
                BOOL v14 = v185++ > 8;
                if (v14) {
                  goto LABEL_229;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v57 = 0;
              }
            }
            break;
          }
LABEL_333:
          *(void *)(a1 + 64) = v57;
          goto LABEL_313;
        case 0xCu:
          *(void *)(a1 + 212) |= 0x20000uLL;
          unint64_t v60 = *((void *)this + 1);
          if (v60 > 0xFFFFFFFFFFFFFFFBLL || v60 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v60);
          goto LABEL_312;
        case 0xDu:
          *(void *)(a1 + 212) |= 0x80000uLL;
          unint64_t v61 = *((void *)this + 1);
          if (v61 > 0xFFFFFFFFFFFFFFFBLL || v61 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v61);
          goto LABEL_312;
        case 0xEu:
          *(void *)(a1 + 212) |= 0x40000000uLL;
          unint64_t v62 = *((void *)this + 1);
          if (v62 > 0xFFFFFFFFFFFFFFFBLL || v62 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v62);
          goto LABEL_312;
        case 0xFu:
          *(void *)(a1 + 212) |= 0x200uLL;
          unint64_t v63 = *((void *)this + 1);
          unint64_t v64 = *((void *)this + 2);
          uint64_t v65 = *(void *)this;
          if (v63 <= 0xFFFFFFFFFFFFFFF5 && v63 + 10 <= v64)
          {
            char v66 = 0;
            unsigned int v67 = 0;
            uint64_t v68 = 0;
            do
            {
              unint64_t v69 = v63 + 1;
              *((void *)this + 1) = v63 + 1;
              char v70 = *(unsigned char *)(v65 + v63);
              v68 |= (unint64_t)(v70 & 0x7F) << v66;
              if ((v70 & 0x80) == 0) {
                goto LABEL_337;
              }
              v66 += 7;
              unint64_t v63 = v69;
              BOOL v14 = v67++ > 8;
            }
            while (!v14);
LABEL_236:
            uint64_t v68 = 0;
            goto LABEL_337;
          }
          char v188 = 0;
          unsigned int v189 = 0;
          uint64_t v68 = 0;
          if (v64 <= v63) {
            unint64_t v64 = *((void *)this + 1);
          }
          while (2)
          {
            if (v64 == v63)
            {
              uint64_t v68 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v190 = v63 + 1;
              char v191 = *(unsigned char *)(v65 + v63);
              *((void *)this + 1) = v190;
              v68 |= (unint64_t)(v191 & 0x7F) << v188;
              if (v191 < 0)
              {
                v188 += 7;
                unint64_t v63 = v190;
                BOOL v14 = v189++ > 8;
                if (v14) {
                  goto LABEL_236;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v68 = 0;
              }
            }
            break;
          }
LABEL_337:
          *(void *)(a1 + 80) = v68;
          goto LABEL_313;
        case 0x10u:
          *(void *)(a1 + 212) |= 0x2000000uLL;
          unint64_t v71 = *((void *)this + 1);
          if (v71 > 0xFFFFFFFFFFFFFFFBLL || v71 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v71);
          goto LABEL_312;
        case 0x11u:
          *(void *)(a1 + 212) |= 0x200000000uLL;
          unint64_t v72 = *((void *)this + 1);
          if (v72 > 0xFFFFFFFFFFFFFFFBLL || v72 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 188) = *(_DWORD *)(*(void *)this + v72);
          goto LABEL_312;
        case 0x12u:
          *(void *)(a1 + 212) |= 0x20000000uLL;
          unint64_t v73 = *((void *)this + 1);
          if (v73 > 0xFFFFFFFFFFFFFFFBLL || v73 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v73);
          goto LABEL_312;
        case 0x13u:
          *(void *)(a1 + 212) |= 0x100uLL;
          unint64_t v74 = *((void *)this + 1);
          unint64_t v75 = *((void *)this + 2);
          uint64_t v76 = *(void *)this;
          if (v74 <= 0xFFFFFFFFFFFFFFF5 && v74 + 10 <= v75)
          {
            char v77 = 0;
            unsigned int v78 = 0;
            uint64_t v79 = 0;
            do
            {
              unint64_t v80 = v74 + 1;
              *((void *)this + 1) = v74 + 1;
              char v81 = *(unsigned char *)(v76 + v74);
              v79 |= (unint64_t)(v81 & 0x7F) << v77;
              if ((v81 & 0x80) == 0) {
                goto LABEL_341;
              }
              v77 += 7;
              unint64_t v74 = v80;
              BOOL v14 = v78++ > 8;
            }
            while (!v14);
LABEL_243:
            uint64_t v79 = 0;
            goto LABEL_341;
          }
          char v192 = 0;
          unsigned int v193 = 0;
          uint64_t v79 = 0;
          if (v75 <= v74) {
            unint64_t v75 = *((void *)this + 1);
          }
          while (2)
          {
            if (v75 == v74)
            {
              uint64_t v79 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v194 = v74 + 1;
              char v195 = *(unsigned char *)(v76 + v74);
              *((void *)this + 1) = v194;
              v79 |= (unint64_t)(v195 & 0x7F) << v192;
              if (v195 < 0)
              {
                v192 += 7;
                unint64_t v74 = v194;
                BOOL v14 = v193++ > 8;
                if (v14) {
                  goto LABEL_243;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v79 = 0;
              }
            }
            break;
          }
LABEL_341:
          *(void *)(a1 + 72) = v79;
          goto LABEL_313;
        case 0x14u:
          *(void *)(a1 + 212) |= 0x8000000uLL;
          unint64_t v82 = *((void *)this + 1);
          if (v82 > 0xFFFFFFFFFFFFFFFBLL || v82 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 164) = *(_DWORD *)(*(void *)this + v82);
          goto LABEL_312;
        case 0x15u:
          *(void *)(a1 + 212) |= (unint64_t)&_mh_execute_header;
          unint64_t v83 = *((void *)this + 1);
          if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 184) = *(_DWORD *)(*(void *)this + v83);
          goto LABEL_312;
        case 0x16u:
          *(void *)(a1 + 212) |= 0x80000000uLL;
          unint64_t v84 = *((void *)this + 1);
          if (v84 > 0xFFFFFFFFFFFFFFFBLL || v84 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 180) = *(_DWORD *)(*(void *)this + v84);
          goto LABEL_312;
        case 0x17u:
          *(void *)(a1 + 212) |= 0x400uLL;
          unint64_t v85 = *((void *)this + 1);
          unint64_t v86 = *((void *)this + 2);
          uint64_t v87 = *(void *)this;
          if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
          {
            char v88 = 0;
            unsigned int v89 = 0;
            uint64_t v90 = 0;
            do
            {
              unint64_t v91 = v85 + 1;
              *((void *)this + 1) = v85 + 1;
              char v92 = *(unsigned char *)(v87 + v85);
              v90 |= (unint64_t)(v92 & 0x7F) << v88;
              if ((v92 & 0x80) == 0) {
                goto LABEL_345;
              }
              v88 += 7;
              unint64_t v85 = v91;
              BOOL v14 = v89++ > 8;
            }
            while (!v14);
LABEL_250:
            uint64_t v90 = 0;
            goto LABEL_345;
          }
          char v196 = 0;
          unsigned int v197 = 0;
          uint64_t v90 = 0;
          if (v86 <= v85) {
            unint64_t v86 = *((void *)this + 1);
          }
          while (2)
          {
            if (v86 == v85)
            {
              uint64_t v90 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v198 = v85 + 1;
              char v199 = *(unsigned char *)(v87 + v85);
              *((void *)this + 1) = v198;
              v90 |= (unint64_t)(v199 & 0x7F) << v196;
              if (v199 < 0)
              {
                v196 += 7;
                unint64_t v85 = v198;
                BOOL v14 = v197++ > 8;
                if (v14) {
                  goto LABEL_250;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v90 = 0;
              }
            }
            break;
          }
LABEL_345:
          *(void *)(a1 + 88) = v90;
          goto LABEL_313;
        case 0x18u:
          *(void *)(a1 + 212) |= 0x4000000uLL;
          unint64_t v93 = *((void *)this + 1);
          if (v93 > 0xFFFFFFFFFFFFFFFBLL || v93 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 160) = *(_DWORD *)(*(void *)this + v93);
          goto LABEL_312;
        case 0x19u:
          *(void *)(a1 + 212) |= 0x10000000uLL;
          unint64_t v94 = *((void *)this + 1);
          if (v94 > 0xFFFFFFFFFFFFFFFBLL || v94 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v94);
          goto LABEL_312;
        case 0x1Au:
          *(void *)(a1 + 212) |= 0x2000uLL;
          unint64_t v95 = *((void *)this + 1);
          if (v95 > 0xFFFFFFFFFFFFFFFBLL || v95 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v95);
          goto LABEL_312;
        case 0x1Bu:
          *(void *)(a1 + 212) |= 0x8000uLL;
          unint64_t v96 = *((void *)this + 1);
          unint64_t v97 = *((void *)this + 2);
          uint64_t v98 = *(void *)this;
          if (v96 <= 0xFFFFFFFFFFFFFFF5 && v96 + 10 <= v97)
          {
            char v99 = 0;
            unsigned int v100 = 0;
            uint64_t v101 = 0;
            do
            {
              unint64_t v102 = v96 + 1;
              *((void *)this + 1) = v96 + 1;
              char v103 = *(unsigned char *)(v98 + v96);
              v101 |= (unint64_t)(v103 & 0x7F) << v99;
              if ((v103 & 0x80) == 0) {
                goto LABEL_377;
              }
              v99 += 7;
              unint64_t v96 = v102;
              BOOL v14 = v100++ > 8;
            }
            while (!v14);
LABEL_257:
            LODWORD(v101) = 0;
            goto LABEL_377;
          }
          char v200 = 0;
          unsigned int v201 = 0;
          uint64_t v101 = 0;
          if (v97 <= v96) {
            unint64_t v97 = *((void *)this + 1);
          }
          while (2)
          {
            if (v97 == v96)
            {
              LODWORD(v101) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v202 = v96 + 1;
              char v203 = *(unsigned char *)(v98 + v96);
              *((void *)this + 1) = v202;
              v101 |= (unint64_t)(v203 & 0x7F) << v200;
              if (v203 < 0)
              {
                v200 += 7;
                unint64_t v96 = v202;
                BOOL v14 = v201++ > 8;
                if (v14) {
                  goto LABEL_257;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v101) = 0;
              }
            }
            break;
          }
LABEL_377:
          *(_DWORD *)(a1 + 116) = v101;
          goto LABEL_313;
        case 0x1Cu:
          *(void *)(a1 + 212) |= 0x4000uLL;
          unint64_t v104 = *((void *)this + 1);
          unint64_t v105 = *((void *)this + 2);
          uint64_t v106 = *(void *)this;
          if (v104 <= 0xFFFFFFFFFFFFFFF5 && v104 + 10 <= v105)
          {
            char v107 = 0;
            unsigned int v108 = 0;
            uint64_t v109 = 0;
            do
            {
              unint64_t v110 = v104 + 1;
              *((void *)this + 1) = v104 + 1;
              char v111 = *(unsigned char *)(v106 + v104);
              v109 |= (unint64_t)(v111 & 0x7F) << v107;
              if ((v111 & 0x80) == 0) {
                goto LABEL_350;
              }
              v107 += 7;
              unint64_t v104 = v110;
              BOOL v14 = v108++ > 8;
            }
            while (!v14);
LABEL_264:
            LODWORD(v109) = 0;
            goto LABEL_350;
          }
          char v204 = 0;
          unsigned int v205 = 0;
          uint64_t v109 = 0;
          if (v105 <= v104) {
            unint64_t v105 = *((void *)this + 1);
          }
          while (2)
          {
            if (v105 == v104)
            {
              LODWORD(v109) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v206 = v104 + 1;
              char v207 = *(unsigned char *)(v106 + v104);
              *((void *)this + 1) = v206;
              v109 |= (unint64_t)(v207 & 0x7F) << v204;
              if (v207 < 0)
              {
                v204 += 7;
                unint64_t v104 = v206;
                BOOL v14 = v205++ > 8;
                if (v14) {
                  goto LABEL_264;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v109) = 0;
              }
            }
            break;
          }
LABEL_350:
          *(_DWORD *)(a1 + 112) = v109;
          goto LABEL_313;
        case 0x1Du:
          *(void *)(a1 + 212) |= 0x10uLL;
          unint64_t v112 = *((void *)this + 1);
          unint64_t v113 = *((void *)this + 2);
          uint64_t v114 = *(void *)this;
          if (v112 <= 0xFFFFFFFFFFFFFFF5 && v112 + 10 <= v113)
          {
            char v115 = 0;
            unsigned int v116 = 0;
            uint64_t v117 = 0;
            do
            {
              unint64_t v118 = v112 + 1;
              *((void *)this + 1) = v112 + 1;
              char v119 = *(unsigned char *)(v114 + v112);
              v117 |= (unint64_t)(v119 & 0x7F) << v115;
              if ((v119 & 0x80) == 0) {
                goto LABEL_354;
              }
              v115 += 7;
              unint64_t v112 = v118;
              BOOL v14 = v116++ > 8;
            }
            while (!v14);
LABEL_271:
            uint64_t v117 = 0;
            goto LABEL_354;
          }
          char v208 = 0;
          unsigned int v209 = 0;
          uint64_t v117 = 0;
          if (v113 <= v112) {
            unint64_t v113 = *((void *)this + 1);
          }
          while (2)
          {
            if (v113 == v112)
            {
              uint64_t v117 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v210 = v112 + 1;
              char v211 = *(unsigned char *)(v114 + v112);
              *((void *)this + 1) = v210;
              v117 |= (unint64_t)(v211 & 0x7F) << v208;
              if (v211 < 0)
              {
                v208 += 7;
                unint64_t v112 = v210;
                BOOL v14 = v209++ > 8;
                if (v14) {
                  goto LABEL_271;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v117 = 0;
              }
            }
            break;
          }
LABEL_354:
          *(void *)(a1 + 40) = v117;
          goto LABEL_313;
        case 0x1Eu:
          *(void *)(a1 + 212) |= 8uLL;
          unint64_t v120 = *((void *)this + 1);
          unint64_t v121 = *((void *)this + 2);
          uint64_t v122 = *(void *)this;
          if (v120 <= 0xFFFFFFFFFFFFFFF5 && v120 + 10 <= v121)
          {
            char v123 = 0;
            unsigned int v124 = 0;
            uint64_t v125 = 0;
            do
            {
              unint64_t v126 = v120 + 1;
              *((void *)this + 1) = v120 + 1;
              char v127 = *(unsigned char *)(v122 + v120);
              v125 |= (unint64_t)(v127 & 0x7F) << v123;
              if ((v127 & 0x80) == 0) {
                goto LABEL_358;
              }
              v123 += 7;
              unint64_t v120 = v126;
              BOOL v14 = v124++ > 8;
            }
            while (!v14);
LABEL_278:
            uint64_t v125 = 0;
            goto LABEL_358;
          }
          char v212 = 0;
          unsigned int v213 = 0;
          uint64_t v125 = 0;
          if (v121 <= v120) {
            unint64_t v121 = *((void *)this + 1);
          }
          while (2)
          {
            if (v121 == v120)
            {
              uint64_t v125 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v214 = v120 + 1;
              char v215 = *(unsigned char *)(v122 + v120);
              *((void *)this + 1) = v214;
              v125 |= (unint64_t)(v215 & 0x7F) << v212;
              if (v215 < 0)
              {
                v212 += 7;
                unint64_t v120 = v214;
                BOOL v14 = v213++ > 8;
                if (v14) {
                  goto LABEL_278;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v125 = 0;
              }
            }
            break;
          }
LABEL_358:
          *(void *)(a1 + 32) = v125;
          goto LABEL_313;
        case 0x1Fu:
          *(void *)(a1 + 212) |= 0x800000000uLL;
          unint64_t v128 = *((void *)this + 1);
          if (v128 > 0xFFFFFFFFFFFFFFFBLL || v128 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 196) = *(_DWORD *)(*(void *)this + v128);
          goto LABEL_312;
        case 0x20u:
          *(void *)(a1 + 212) |= 0x2000000000uLL;
          unint64_t v129 = *((void *)this + 1);
          if (v129 > 0xFFFFFFFFFFFFFFFBLL || v129 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 204) = *(_DWORD *)(*(void *)this + v129);
          goto LABEL_312;
        case 0x21u:
          *(void *)(a1 + 212) |= 0x1000000000uLL;
          unint64_t v130 = *((void *)this + 1);
          if (v130 > 0xFFFFFFFFFFFFFFFBLL || v130 + 4 > *((void *)this + 2)) {
            goto LABEL_169;
          }
          *(_DWORD *)(a1 + 200) = *(_DWORD *)(*(void *)this + v130);
          goto LABEL_312;
        case 0x22u:
          *(void *)(a1 + 212) |= 0x400000000uLL;
          unint64_t v131 = *((void *)this + 1);
          if (v131 <= 0xFFFFFFFFFFFFFFFBLL && v131 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 192) = *(_DWORD *)(*(void *)this + v131);
LABEL_312:
            *((void *)this + 1) += 4;
          }
          else
          {
LABEL_169:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_313;
        case 0x23u:
          *(void *)(a1 + 212) |= 0x4000000000uLL;
          unint64_t v132 = *((void *)this + 1);
          if (v132 >= *((void *)this + 2))
          {
            BOOL v135 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v133 = v132 + 1;
            int v134 = *(unsigned __int8 *)(*(void *)this + v132);
            *((void *)this + 1) = v133;
            BOOL v135 = v134 != 0;
          }
          *(unsigned char *)(a1 + 208) = v135;
          goto LABEL_313;
        case 0x24u:
          *(void *)(a1 + 212) |= 0x8000000000uLL;
          unint64_t v136 = *((void *)this + 1);
          if (v136 >= *((void *)this + 2))
          {
            BOOL v139 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v137 = v136 + 1;
            int v138 = *(unsigned __int8 *)(*(void *)this + v136);
            *((void *)this + 1) = v137;
            BOOL v139 = v138 != 0;
          }
          *(unsigned char *)(a1 + 209) = v139;
          goto LABEL_313;
        case 0x25u:
          *(void *)(a1 + 212) |= 0x1000uLL;
          unint64_t v140 = *((void *)this + 1);
          unint64_t v141 = *((void *)this + 2);
          uint64_t v142 = *(void *)this;
          if (v140 <= 0xFFFFFFFFFFFFFFF5 && v140 + 10 <= v141)
          {
            char v143 = 0;
            unsigned int v144 = 0;
            uint64_t v145 = 0;
            do
            {
              unint64_t v146 = v140 + 1;
              *((void *)this + 1) = v140 + 1;
              char v147 = *(unsigned char *)(v142 + v140);
              v145 |= (unint64_t)(v147 & 0x7F) << v143;
              if ((v147 & 0x80) == 0) {
                goto LABEL_362;
              }
              v143 += 7;
              unint64_t v140 = v146;
              BOOL v14 = v144++ > 8;
            }
            while (!v14);
LABEL_289:
            LODWORD(v145) = 0;
            goto LABEL_362;
          }
          char v216 = 0;
          unsigned int v217 = 0;
          uint64_t v145 = 0;
          if (v141 <= v140) {
            unint64_t v141 = *((void *)this + 1);
          }
          while (2)
          {
            if (v141 == v140)
            {
              LODWORD(v145) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v218 = v140 + 1;
              char v219 = *(unsigned char *)(v142 + v140);
              *((void *)this + 1) = v218;
              v145 |= (unint64_t)(v219 & 0x7F) << v216;
              if (v219 < 0)
              {
                v216 += 7;
                unint64_t v140 = v218;
                BOOL v14 = v217++ > 8;
                if (v14) {
                  goto LABEL_289;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v145) = 0;
              }
            }
            break;
          }
LABEL_362:
          *(_DWORD *)(a1 + 104) = v145;
          goto LABEL_313;
        case 0x26u:
          *(void *)(a1 + 212) |= 4uLL;
          unint64_t v148 = *((void *)this + 1);
          unint64_t v149 = *((void *)this + 2);
          uint64_t v150 = *(void *)this;
          if (v148 <= 0xFFFFFFFFFFFFFFF5 && v148 + 10 <= v149)
          {
            char v151 = 0;
            unsigned int v152 = 0;
            uint64_t v153 = 0;
            do
            {
              unint64_t v154 = v148 + 1;
              *((void *)this + 1) = v148 + 1;
              char v155 = *(unsigned char *)(v150 + v148);
              v153 |= (unint64_t)(v155 & 0x7F) << v151;
              if ((v155 & 0x80) == 0) {
                goto LABEL_366;
              }
              v151 += 7;
              unint64_t v148 = v154;
              BOOL v14 = v152++ > 8;
            }
            while (!v14);
LABEL_296:
            uint64_t v153 = 0;
            goto LABEL_366;
          }
          char v220 = 0;
          unsigned int v221 = 0;
          uint64_t v153 = 0;
          if (v149 <= v148) {
            unint64_t v149 = *((void *)this + 1);
          }
          while (2)
          {
            if (v149 == v148)
            {
              uint64_t v153 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v222 = v148 + 1;
              char v223 = *(unsigned char *)(v150 + v148);
              *((void *)this + 1) = v222;
              v153 |= (unint64_t)(v223 & 0x7F) << v220;
              if (v223 < 0)
              {
                v220 += 7;
                unint64_t v148 = v222;
                BOOL v14 = v221++ > 8;
                if (v14) {
                  goto LABEL_296;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v153 = 0;
              }
            }
            break;
          }
LABEL_366:
          *(void *)(a1 + 24) = v153;
          goto LABEL_313;
        case 0x27u:
          *(void *)(a1 + 212) |= 2uLL;
          unint64_t v156 = *((void *)this + 1);
          unint64_t v157 = *((void *)this + 2);
          uint64_t v158 = *(void *)this;
          if (v156 <= 0xFFFFFFFFFFFFFFF5 && v156 + 10 <= v157)
          {
            char v159 = 0;
            unsigned int v160 = 0;
            uint64_t v161 = 0;
            do
            {
              unint64_t v162 = v156 + 1;
              *((void *)this + 1) = v156 + 1;
              char v163 = *(unsigned char *)(v158 + v156);
              v161 |= (unint64_t)(v163 & 0x7F) << v159;
              if ((v163 & 0x80) == 0) {
                goto LABEL_370;
              }
              v159 += 7;
              unint64_t v156 = v162;
              BOOL v14 = v160++ > 8;
            }
            while (!v14);
LABEL_303:
            uint64_t v161 = 0;
            goto LABEL_370;
          }
          char v224 = 0;
          unsigned int v225 = 0;
          uint64_t v161 = 0;
          if (v157 <= v156) {
            unint64_t v157 = *((void *)this + 1);
          }
          while (2)
          {
            if (v157 == v156)
            {
              uint64_t v161 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v226 = v156 + 1;
              char v227 = *(unsigned char *)(v158 + v156);
              *((void *)this + 1) = v226;
              v161 |= (unint64_t)(v227 & 0x7F) << v224;
              if (v227 < 0)
              {
                v224 += 7;
                unint64_t v156 = v226;
                BOOL v14 = v225++ > 8;
                if (v14) {
                  goto LABEL_303;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v161 = 0;
              }
            }
            break;
          }
LABEL_370:
          *(void *)(a1 + 16) = v161;
          goto LABEL_313;
        case 0x28u:
          *(void *)(a1 + 212) |= 1uLL;
          unint64_t v164 = *((void *)this + 1);
          unint64_t v165 = *((void *)this + 2);
          uint64_t v166 = *(void *)this;
          if (v164 <= 0xFFFFFFFFFFFFFFF5 && v164 + 10 <= v165)
          {
            char v167 = 0;
            unsigned int v168 = 0;
            uint64_t v169 = 0;
            do
            {
              unint64_t v170 = v164 + 1;
              *((void *)this + 1) = v164 + 1;
              char v171 = *(unsigned char *)(v166 + v164);
              v169 |= (unint64_t)(v171 & 0x7F) << v167;
              if ((v171 & 0x80) == 0) {
                goto LABEL_374;
              }
              v167 += 7;
              unint64_t v164 = v170;
              BOOL v14 = v168++ > 8;
            }
            while (!v14);
LABEL_310:
            uint64_t v169 = 0;
            goto LABEL_374;
          }
          char v228 = 0;
          unsigned int v229 = 0;
          uint64_t v169 = 0;
          if (v165 <= v164) {
            unint64_t v165 = *((void *)this + 1);
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_313;
      }
      while (1)
      {
        if (v165 == v164)
        {
          uint64_t v169 = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_374;
        }
        unint64_t v230 = v164 + 1;
        char v231 = *(unsigned char *)(v166 + v164);
        *((void *)this + 1) = v230;
        v169 |= (unint64_t)(v231 & 0x7F) << v228;
        if ((v231 & 0x80) == 0) {
          break;
        }
        v228 += 7;
        unint64_t v164 = v230;
        BOOL v14 = v229++ > 8;
        if (v14) {
          goto LABEL_310;
        }
      }
      if (*((unsigned char *)this + 24)) {
        uint64_t v169 = 0;
      }
LABEL_374:
      *(void *)(a1 + 8) = v169;
LABEL_313:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10172D2D8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 212);
  if ((v4 & 0x800) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 96), 1u);
    uint64_t v4 = *(void *)(v3 + 212);
    if ((v4 & 0x200000) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_44;
    }
  }
  else if ((v4 & 0x200000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140), 2u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 56), 3u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x10000) == 0)
  {
LABEL_5:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120), 4u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_6:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 152), 5u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x100000) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 136), 6u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 48), 7u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x40000) == 0)
  {
LABEL_9:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 8u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x800000) == 0)
  {
LABEL_10:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148), 9u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x400000) == 0)
  {
LABEL_11:
    if ((v4 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144), 0xAu);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x80) == 0)
  {
LABEL_12:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 64), 0xBu);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x20000) == 0)
  {
LABEL_13:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124), 0xCu);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x80000) == 0)
  {
LABEL_14:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132), 0xDu);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x200) == 0) {
      goto LABEL_16;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 176), 0xEu);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x200) == 0)
  {
LABEL_16:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 80), 0xFu);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156), 0x10u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_18:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 188), 0x11u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_19:
    if ((v4 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 172), 0x12u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x100) == 0)
  {
LABEL_20:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 72), 0x13u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 164), 0x14u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x100000000) == 0)
  {
LABEL_22:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 184), 0x15u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x400) == 0) {
      goto LABEL_24;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 180), 0x16u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x400) == 0)
  {
LABEL_24:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 88), 0x17u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_25:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 160), 0x18u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_26:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 168), 0x19u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x2000) == 0)
  {
LABEL_27:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108), 0x1Au);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x8000) == 0)
  {
LABEL_28:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 116), 0x1Bu);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x4000) == 0)
  {
LABEL_29:
    if ((v4 & 0x10) == 0) {
      goto LABEL_30;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 112), 0x1Cu);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x10) == 0)
  {
LABEL_30:
    if ((v4 & 8) == 0) {
      goto LABEL_31;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 40), 0x1Du);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 8) == 0)
  {
LABEL_31:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 0x1Eu);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_32:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 196), 0x1Fu);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x2000000000) == 0)
  {
LABEL_33:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 204), 0x20u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x1000000000) == 0)
  {
LABEL_34:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 200), 0x21u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_35:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 192), 0x22u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x4000000000) == 0)
  {
LABEL_36:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 208), 0x23u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x8000000000) == 0)
  {
LABEL_37:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 209), 0x24u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 0x1000) == 0)
  {
LABEL_38:
    if ((v4 & 4) == 0) {
      goto LABEL_39;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 104), 0x25u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 4) == 0)
  {
LABEL_39:
    if ((v4 & 2) == 0) {
      goto LABEL_40;
    }
LABEL_80:
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 0x27u);
    if ((*(void *)(v3 + 212) & 1) == 0) {
      return result;
    }
    goto LABEL_81;
  }
LABEL_79:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0x26u);
  uint64_t v4 = *(void *)(v3 + 212);
  if ((v4 & 2) != 0) {
    goto LABEL_80;
  }
LABEL_40:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_81:
  unint64_t v5 = *(void *)(v3 + 8);

  return PB::Writer::writeVarInt(this, v5, 0x28u);
}

uint64_t sub_10172D770(uint64_t result)
{
  *(void *)uint64_t result = &off_102337B48;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_10172D798(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10172D7D0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102337B48;
  *(_DWORD *)(a1 + 20) = 0;
  char v2 = *(unsigned char *)(a2 + 20);
  if ((v2 & 2) != 0)
  {
    float result = *(float *)(a2 + 12);
    char v3 = 2;
    *(unsigned char *)(a1 + 20) = 2;
    *(float *)(a1 + 12) = result;
    char v2 = *(unsigned char *)(a2 + 20);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 20))
  {
LABEL_5:
    float result = *(float *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(a1 + 20) = v3;
    *(float *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 20);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    float result = *(float *)(a2 + 16);
    *(unsigned char *)(a1 + 20) = v3 | 4;
    *(float *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_10172D850(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if (v5)
  {
    PB::TextFormatter::format(this, "azimuthDeg", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 20);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 20) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "elevationDeg", *(float *)(a1 + 12));
  if ((*(unsigned char *)(a1 + 20) & 4) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "l1Cn0", *(float *)(a1 + 16));
LABEL_5:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10172D8F4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    do
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 20) |= 4u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
      }
      else if (v20 == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
      }
      else
      {
        if (v20 != 1)
        {
          uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          goto LABEL_37;
        }
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2))
        {
LABEL_32:
          *((unsigned char *)this + 24) = 1;
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
      }
      unint64_t v2 = *((void *)this + 1) + 4;
      *((void *)this + 1) = v2;
LABEL_37:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v3 && !*((unsigned char *)this + 24));
  }
  return v4 == 0;
}

uint64_t sub_10172DB10(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if ((v4 & 2) == 0)
  {
    if ((*(unsigned char *)(result + 20) & 1) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 8), 2u);
    if ((*(unsigned char *)(v3 + 20) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(result + 12), 1u);
  char v4 = *(unsigned char *)(v3 + 20);
  if (v4) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_7:
  float v5 = *(float *)(v3 + 16);

  return PB::Writer::write(this, v5, 3u);
}

uint64_t sub_10172DB9C(uint64_t result)
{
  *(void *)uint64_t result = &off_102337B80;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_10172DBC4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10172DBFC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102337B80;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_10172DC60(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "sessionType", *(_DWORD *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10172DCDC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v30 = v21++;
            char v31 = *(unsigned char *)(v22 + v30);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_46:
          unint64_t v2 = v30 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_47:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10172DF6C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v5 = *(_DWORD *)(v3 + 16);
    return PB::Writer::writeVarInt(this, v5, 2u);
  }
  return result;
}

void *sub_10172DFD8(void *result)
{
  *uint64_t result = &off_102337BB8;
  result[1] = 0;
  return result;
}

void sub_10172DFFC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10172E034(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102337BB8;
  *(void *)(result + 8) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    int v2 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(_DWORD *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_10172E06C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "type", *(_DWORD *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10172E0CC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v3)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v3 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          else {
            unint64_t v2 = *((void *)this + 2);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_42;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_42:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_43:
        *(_DWORD *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10172E304(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::writeVarInt(this, *(_DWORD *)(result + 8), 1u);
  }
  return result;
}

void *sub_10172E324(void *result)
{
  *uint64_t result = &off_102337BF0;
  result[2] = 0;
  return result;
}

void sub_10172E34C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10172E384(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102337BF0;
  *(void *)(result + 16) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_10172E3E8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if (v5)
  {
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "type", *(_DWORD *)(a1 + 16));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10172E464(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_64;
            }
            unint64_t v40 = v27++;
            char v41 = *(unsigned char *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_63;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_63:
          unint64_t v3 = v40 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v3 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v3;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }
LABEL_64:
        *(_DWORD *)(a1 + 16) = v31;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v21)
            {
              uint64_t v25 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_60;
            }
            unint64_t v36 = v21++;
            char v37 = *(unsigned char *)(v22 + v36);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v25 = 0;
          }
LABEL_59:
          unint64_t v3 = v36 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v3 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v3;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              break;
            }
          }
        }
LABEL_60:
        *(void *)(a1 + 8) = v25;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10172E790(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    int v5 = *(_DWORD *)(v3 + 16);
    return PB::Writer::writeVarInt(this, v5, 2u);
  }
  return result;
}

uint64_t sub_10172E7FC(uint64_t result)
{
  *(void *)uint64_t result = &off_102337C28;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_10172E820(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102337C28;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10172E8A0(PB::Base *a1)
{
  sub_10172E820(a1);

  operator delete();
}

uint64_t sub_10172E8D8(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102337C28;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (*(unsigned char *)(a2 + 24))
  {
    uint64_t v2 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 24) = 1;
    *(void *)(result + 16) = v2;
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10172E9D0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "motionState");
  }
  if (*(unsigned char *)(a1 + 24)) {
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 16));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10172EA68(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2) {
        operator new();
      }
      if (v20 == 1)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        uint64_t v23 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v22)
        {
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v26 = 0;
          if (v22 <= v21) {
            unint64_t v22 = *((void *)this + 1);
          }
          while (1)
          {
            if (v22 == v21)
            {
              uint64_t v26 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v32 = v21 + 1;
            char v33 = *(unsigned char *)(v23 + v21);
            *((void *)this + 1) = v32;
            v26 |= (unint64_t)(v33 & 0x7F) << v30;
            if ((v33 & 0x80) == 0) {
              break;
            }
            v30 += 7;
            unint64_t v21 = v32;
            BOOL v14 = v31++ > 8;
            if (v14)
            {
LABEL_39:
              uint64_t v26 = 0;
              goto LABEL_43;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v26 = 0;
          }
        }
        else
        {
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (1)
          {
            unint64_t v27 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v28 = *(unsigned char *)(v23 + v21);
            v26 |= (unint64_t)(v28 & 0x7F) << v24;
            if ((v28 & 0x80) == 0) {
              break;
            }
            v24 += 7;
            unint64_t v21 = v27;
            BOOL v14 = v25++ > 8;
            if (v14) {
              goto LABEL_39;
            }
          }
        }
LABEL_43:
        *(void *)(a1 + 16) = v26;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10172ED70(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 24)) {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 16), 1u);
  }
  int v4 = *(const PB::Base **)(v3 + 8);
  if (v4)
  {
    return PB::Writer::writeSubmessage(this, v4, 2u);
  }
  return result;
}

void sub_10172EDDC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10172EE14(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "type", *(_DWORD *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10172EE74(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v20 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        uint64_t v21 = *(void *)this;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v3)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v24 = 0;
          if (v3 <= v20) {
            unint64_t v2 = *((void *)this + 1);
          }
          else {
            unint64_t v2 = *((void *)this + 2);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v29 = v20++;
            char v30 = *(unsigned char *)(v21 + v29);
            *((void *)this + 1) = v20;
            v24 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_42;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_42:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)this + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_43:
        *(_DWORD *)(a1 + 8) = v24;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10172F0AC(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::writeVarInt(this, *(_DWORD *)(result + 8), 1u);
  }
  return result;
}

uint64_t sub_10172F0CC(uint64_t result)
{
  *(void *)uint64_t result = &off_102337C98;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_10172F0F4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10172F12C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102337C98;
  *(_DWORD *)(a1 + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 44) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 44) & 0x10) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 28);
    v3 |= 0x10u;
    *(unsigned char *)(a1 + 44) = v3;
    *(_DWORD *)(a1 + 28) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 44) = v3;
    *(_DWORD *)(a1 + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 40);
  v3 |= 0x80u;
  *(unsigned char *)(a1 + 44) = v3;
  *(_DWORD *)(a1 + 40) = v4;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
LABEL_15:
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(unsigned char *)(a1 + 44) = v3;
  *(_DWORD *)(a1 + 24) = v4;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 4) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_17;
  }
LABEL_16:
  LODWORD(v4) = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(a1 + 44) = v3;
  *(_DWORD *)(a1 + 20) = v4;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x40) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_18;
  }
LABEL_17:
  LODWORD(v4) = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(unsigned char *)(a1 + 44) = v3;
  *(_DWORD *)(a1 + 36) = v4;
  if ((*(unsigned char *)(a2 + 44) & 0x20) == 0) {
    return *(float *)&v4;
  }
LABEL_18:
  LODWORD(v4) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 44) = v3 | 0x20;
  *(_DWORD *)(a1 + 32) = v4;
  return *(float *)&v4;
}

uint64_t sub_10172F238(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "magnitudeRangeInertialVertical", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "maxAngleBetweenThighAndShinDeg", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "minAngleBetweenThighAndShinDeg", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "motionPlanarity", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "timeToReachMaxThighAndShinAngleThreshold", *(float *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
    if ((*(unsigned char *)(a1 + 44) & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_17:
  PB::TextFormatter::format(this, "timeToReachMinThighAndShinAngleThreshold", *(float *)(a1 + 36));
  char v5 = *(unsigned char *)(a1 + 44);
  if (v5) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v5 & 0x80) == 0) {
    goto LABEL_9;
  }
LABEL_19:
  PB::TextFormatter::format(this, "vm", *(float *)(a1 + 40));
LABEL_9:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10172F37C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 44) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_50;
        case 2u:
          *(unsigned char *)(a1 + 44) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_49;
        case 3u:
          *(unsigned char *)(a1 + 44) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_49;
        case 4u:
          *(unsigned char *)(a1 + 44) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_49;
        case 5u:
          *(unsigned char *)(a1 + 44) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_49;
        case 6u:
          *(unsigned char *)(a1 + 44) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_49;
        case 7u:
          *(unsigned char *)(a1 + 44) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_49;
        case 8u:
          *(unsigned char *)(a1 + 44) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2))
          {
LABEL_47:
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
LABEL_49:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_50:
            *((void *)this + 1) = v2;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10172F6EC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 2u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 3u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 4u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 5u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 7u);
    if ((*(unsigned char *)(v3 + 44) & 0x20) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 6u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_17:
  float v5 = *(float *)(v3 + 32);

  return PB::Writer::write(this, v5, 8u);
}

uint64_t sub_10172F804(uint64_t result)
{
  *(void *)uint64_t result = &off_102337CD0;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_10172F82C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10172F864(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102337CD0;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 8) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 16) = v4;
    if ((*(unsigned char *)(a2 + 28) & 4) == 0) {
      return *(float *)&v4;
    }
  }
  else if ((v2 & 4) == 0)
  {
    return *(float *)&v4;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 28) = v3 | 4;
  *(_DWORD *)(a1 + 20) = v4;
  return *(float *)&v4;
}

uint64_t sub_10172F900(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "maxPosterior", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "meanPosterior", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "minPosterior", *(float *)(a1 + 24));
  if (*(unsigned char *)(a1 + 28)) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
LABEL_6:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10172F9C4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 28) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_38;
        case 2u:
          *(unsigned char *)(a1 + 28) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 28) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 28) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_38:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10172FC44(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 3u);
      if ((*(unsigned char *)(v3 + 28) & 4) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 2u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_9:
  float v5 = *(float *)(v3 + 20);

  return PB::Writer::write(this, v5, 4u);
}

uint64_t sub_10172FCEC(uint64_t result)
{
  *(void *)uint64_t result = &off_102337D08;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_10172FD14(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10172FD4C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102337D08;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 8) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 16) = v4;
    if ((*(unsigned char *)(a2 + 28) & 4) == 0) {
      return *(float *)&v4;
    }
  }
  else if ((v2 & 4) == 0)
  {
    return *(float *)&v4;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 28) = v3 | 4;
  *(_DWORD *)(a1 + 20) = v4;
  return *(float *)&v4;
}

uint64_t sub_10172FDE8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "maxPosterior", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "meanPosterior", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "minPosterior", *(float *)(a1 + 24));
  if (*(unsigned char *)(a1 + 28)) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
LABEL_6:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10172FEAC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 28) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_38;
        case 2u:
          *(unsigned char *)(a1 + 28) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 28) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 28) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_38:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10173012C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 3u);
      if ((*(unsigned char *)(v3 + 28) & 4) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 2u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_9:
  float v5 = *(float *)(v3 + 20);

  return PB::Writer::write(this, v5, 4u);
}

void *sub_1017301D4(void *result)
{
  *uint64_t result = &off_102337D40;
  result[2] = 0;
  return result;
}

void sub_1017301FC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101730234(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102337D40;
  *(void *)(result + 16) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_101730298(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if (v5)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "transitionType", *(_DWORD *)(a1 + 16));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101730314(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v30 = v21++;
            char v31 = *(unsigned char *)(v22 + v30);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_46:
          unint64_t v2 = v30 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_47:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017305A4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    int v5 = *(_DWORD *)(v3 + 16);
    return PB::Writer::writeVarInt(this, v5, 2u);
  }
  return result;
}

uint64_t sub_101730610(uint64_t result)
{
  *(void *)uint64_t result = off_102337D78;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void sub_10173063C(void **a1)
{
  *a1 = off_102337D78;
  unint64_t v2 = a1 + 2;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

void sub_101730698(void **a1)
{
  *a1 = off_102337D78;
  unint64_t v2 = a1 + 2;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
  operator delete();
}

uint64_t sub_101730708(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = off_102337D78;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 48) = 0;
  if (*(void *)(a2 + 16) != *(void *)(a2 + 24)) {
    sub_1017307C8();
  }
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 2) != 0)
  {
    uint64_t v3 = *(void *)(a2 + 40);
    *(unsigned char *)(result + 48) |= 2u;
    *(void *)(result + 40) = v3;
    char v2 = *(unsigned char *)(a2 + 48);
  }
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 48) |= 1u;
    *(void *)(result + 8) = v4;
  }
  return result;
}

void sub_1017307C8()
{
}

void sub_1017308CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_101730914(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 48)) {
    PB::TextFormatter::format(this, "globalMachtime", *(double *)(a1 + 8));
  }
  int v5 = *(uint64_t **)(a1 + 16);
  uint64_t v6 = *(uint64_t **)(a1 + 24);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "joint");
  }
  if ((*(unsigned char *)(a1 + 48) & 2) != 0) {
    PB::TextFormatter::format(this, "localMachtime", *(double *)(a1 + 40));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1017309EC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3) {
        break;
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 48) |= 2u;
        unint64_t v22 = *((void *)this + 1);
        if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
          goto LABEL_30;
        }
        *(void *)(a1 + 40) = *(void *)(*(void *)this + v22);
LABEL_34:
        *((void *)this + 1) += 8;
        goto LABEL_35;
      }
      if (v20 == 1) {
        sub_101730C48();
      }
      uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
      if (!result) {
        return result;
      }
LABEL_35:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    *(unsigned char *)(a1 + 48) |= 1u;
    unint64_t v21 = *((void *)this + 1);
    if (v21 > 0xFFFFFFFFFFFFFFF7 || v21 + 8 > *((void *)this + 2))
    {
LABEL_30:
      *((unsigned char *)this + 24) = 1;
      goto LABEL_35;
    }
    *(void *)(a1 + 8) = *(void *)(*(void *)this + v21);
    goto LABEL_34;
  }
  return v4 == 0;
}

void sub_101730C48()
{
}

void sub_101730D68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_101730DAC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base ***)(result + 16);
  int v5 = *(const PB::Base ***)(result + 24);
  while (v4 != v5)
  {
    uint64_t v6 = *v4++;
    uint64_t result = PB::Writer::writeSubmessage(this, v6, 1u);
  }
  char v7 = *(unsigned char *)(v3 + 48);
  if ((v7 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 2u);
    char v7 = *(unsigned char *)(v3 + 48);
  }
  if (v7)
  {
    double v8 = *(double *)(v3 + 8);
    return PB::Writer::write(this, v8, 3u);
  }
  return result;
}

void sub_101730E44(PB::Base *this)
{
  *(void *)this = &off_102337DB0;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_101730EA8(PB::Base *a1)
{
  sub_101730E44(a1);

  operator delete();
}

uint64_t sub_101730EE0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (char *)(a1 + 8);
  *(void *)a1 = &off_102337DB0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 36) = 0;
  *(_DWORD *)(a1 + 44) = 0;
  if ((*(unsigned char *)(a2 + 44) & 2) != 0)
  {
    int v5 = *(_DWORD *)(a2 + 36);
    *(unsigned char *)(a1 + 44) = 2;
    *(_DWORD *)(a1 + 36) = v5;
  }
  if (a1 != a2) {
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  char v6 = *(unsigned char *)(a2 + 44);
  if (v6)
  {
    int v7 = *(_DWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 44) |= 1u;
    *(_DWORD *)(a1 + 32) = v7;
    char v6 = *(unsigned char *)(a2 + 44);
  }
  if ((v6 & 4) != 0)
  {
    char v8 = *(unsigned char *)(a2 + 40);
    *(unsigned char *)(a1 + 44) |= 4u;
    *(unsigned char *)(a1 + 40) = v8;
  }
  return a1;
}

uint64_t sub_101730FA0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if (v5)
  {
    PB::TextFormatter::format(this, "confidence", *(float *)(a1 + 32));
    char v5 = *(unsigned char *)(a1 + 44);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "joint", *(_DWORD *)(a1 + 36));
  }
  char v6 = *(float **)(a1 + 8);
  int v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "position", v8);
  }
  if ((*(unsigned char *)(a1 + 44) & 4) != 0) {
    PB::TextFormatter::format(this, "visible", *(unsigned char *)(a1 + 40));
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_101731074(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        BOOL v16 = v12++ > 8;
        if (v16) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v22 = v13 & 7;
      if (v22 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 44) |= 2u;
          unint64_t v23 = *((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          uint64_t v25 = *(void *)this;
          if (v23 <= 0xFFFFFFFFFFFFFFF5 && v23 + 10 <= v24)
          {
            char v26 = 0;
            unsigned int v27 = 0;
            uint64_t v28 = 0;
            do
            {
              unint64_t v29 = v23 + 1;
              *((void *)this + 1) = v23 + 1;
              char v30 = *(unsigned char *)(v25 + v23);
              v28 |= (unint64_t)(v30 & 0x7F) << v26;
              if ((v30 & 0x80) == 0) {
                goto LABEL_83;
              }
              v26 += 7;
              unint64_t v23 = v29;
              BOOL v16 = v27++ > 8;
            }
            while (!v16);
LABEL_67:
            LODWORD(v28) = 0;
            goto LABEL_83;
          }
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v28 = 0;
          if (v24 <= v23) {
            unint64_t v24 = *((void *)this + 1);
          }
          while (2)
          {
            if (v24 == v23)
            {
              LODWORD(v28) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v52 = v23 + 1;
              char v53 = *(unsigned char *)(v25 + v23);
              *((void *)this + 1) = v52;
              v28 |= (unint64_t)(v53 & 0x7F) << v50;
              if (v53 < 0)
              {
                v50 += 7;
                unint64_t v23 = v52;
                BOOL v16 = v51++ > 8;
                if (v16) {
                  goto LABEL_67;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v28) = 0;
              }
            }
            break;
          }
LABEL_83:
          *(_DWORD *)(a1 + 36) = v28;
          goto LABEL_97;
        case 2u:
          if (v22 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v31 = *((void *)this + 1);
            unint64_t v32 = *((void *)this + 2);
            while (v31 < v32 && !*((unsigned char *)this + 24))
            {
              char v34 = *(char **)(a1 + 16);
              unint64_t v33 = *(void *)(a1 + 24);
              if ((unint64_t)v34 >= v33)
              {
                unint64_t v36 = (char *)*v8;
                uint64_t v37 = (v34 - (unsigned char *)*v8) >> 2;
                unint64_t v38 = v37 + 1;
                if ((unint64_t)(v37 + 1) >> 62) {
                  goto LABEL_107;
                }
                uint64_t v39 = v33 - (void)v36;
                if (v39 >> 1 > v38) {
                  unint64_t v38 = v39 >> 1;
                }
                if ((unint64_t)v39 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v40 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v40 = v38;
                }
                if (v40)
                {
                  char v41 = (char *)sub_10017EA34(v9, v40);
                  unint64_t v36 = *(char **)(a1 + 8);
                  char v34 = *(char **)(a1 + 16);
                }
                else
                {
                  char v41 = 0;
                }
                unint64_t v42 = &v41[4 * v37];
                *(_DWORD *)unint64_t v42 = 0;
                unsigned int v35 = v42 + 4;
                while (v34 != v36)
                {
                  int v43 = *((_DWORD *)v34 - 1);
                  v34 -= 4;
                  *((_DWORD *)v42 - 1) = v43;
                  v42 -= 4;
                }
                *(void *)(a1 + 8) = v42;
                *(void *)(a1 + 16) = v35;
                *(void *)(a1 + 24) = &v41[4 * v40];
                if (v36) {
                  operator delete(v36);
                }
              }
              else
              {
                *(_DWORD *)char v34 = 0;
                unsigned int v35 = v34 + 4;
              }
              *(void *)(a1 + 16) = v35;
              unint64_t v44 = *((void *)this + 1);
              if (v44 > 0xFFFFFFFFFFFFFFFBLL || v44 + 4 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v35 - 1) = *(_DWORD *)(*(void *)this + v44);
              unint64_t v32 = *((void *)this + 2);
              unint64_t v31 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v31;
            }
            PB::Reader::recallMark();
          }
          else
          {
            char v55 = *(char **)(a1 + 16);
            unint64_t v54 = *(void *)(a1 + 24);
            if ((unint64_t)v55 >= v54)
            {
              uint64_t v57 = (char *)*v8;
              uint64_t v58 = (v55 - (unsigned char *)*v8) >> 2;
              unint64_t v59 = v58 + 1;
              if ((unint64_t)(v58 + 1) >> 62) {
LABEL_107:
              }
                sub_1001D7FD4();
              uint64_t v60 = v54 - (void)v57;
              if (v60 >> 1 > v59) {
                unint64_t v59 = v60 >> 1;
              }
              if ((unint64_t)v60 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v61 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v61 = v59;
              }
              if (v61)
              {
                unint64_t v62 = (char *)sub_10017EA34(v9, v61);
                uint64_t v57 = *(char **)(a1 + 8);
                char v55 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v62 = 0;
              }
              unint64_t v63 = &v62[4 * v58];
              *(_DWORD *)unint64_t v63 = 0;
              unsigned int v56 = v63 + 4;
              while (v55 != v57)
              {
                int v64 = *((_DWORD *)v55 - 1);
                v55 -= 4;
                *((_DWORD *)v63 - 1) = v64;
                v63 -= 4;
              }
              *(void *)(a1 + 8) = v63;
              *(void *)(a1 + 16) = v56;
              *(void *)(a1 + 24) = &v62[4 * v61];
              if (v57) {
                operator delete(v57);
              }
            }
            else
            {
              *(_DWORD *)char v55 = 0;
              unsigned int v56 = v55 + 4;
            }
            *(void *)(a1 + 16) = v56;
            unint64_t v65 = *((void *)this + 1);
            if (v65 <= 0xFFFFFFFFFFFFFFFBLL && v65 + 4 <= *((void *)this + 2))
            {
              *(v56 - 1) = *(_DWORD *)(*(void *)this + v65);
LABEL_96:
              *((void *)this + 1) += 4;
            }
            else
            {
LABEL_94:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_97:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 3u:
          *(unsigned char *)(a1 + 44) |= 1u;
          unint64_t v45 = *((void *)this + 1);
          if (v45 > 0xFFFFFFFFFFFFFFFBLL || v45 + 4 > *((void *)this + 2)) {
            goto LABEL_94;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v45);
          goto LABEL_96;
        case 4u:
          *(unsigned char *)(a1 + 44) |= 4u;
          unint64_t v46 = *((void *)this + 1);
          if (v46 >= *((void *)this + 2))
          {
            BOOL v49 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v47 = v46 + 1;
            int v48 = *(unsigned __int8 *)(*(void *)this + v46);
            *((void *)this + 1) = v47;
            BOOL v49 = v48 != 0;
          }
          *(unsigned char *)(a1 + 40) = v49;
          goto LABEL_97;
        default:
          if ((PB::Reader::skip(this, v13 >> 3, v22, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_97;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10173157C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if ((*(unsigned char *)(result + 44) & 2) != 0) {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 36), 1u);
  }
  int v4 = *(float **)(v3 + 8);
  char v5 = *(float **)(v3 + 16);
  while (v4 != v5)
  {
    float v6 = *v4++;
    uint64_t result = PB::Writer::write(this, v6, 2u);
  }
  char v7 = *(unsigned char *)(v3 + 44);
  if (v7)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 3u);
    char v7 = *(unsigned char *)(v3 + 44);
  }
  if ((v7 & 4) != 0)
  {
    char v8 = *(unsigned char *)(v3 + 40);
    return PB::Writer::write(this, v8, 4u);
  }
  return result;
}

void *sub_10173162C(void *result)
{
  *uint64_t result = off_102337DE8;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_101731650(void **a1)
{
  *a1 = off_102337DE8;
  unint64_t v2 = a1 + 1;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

void sub_1017316AC(void **a1)
{
  *a1 = off_102337DE8;
  unint64_t v2 = a1 + 1;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
  operator delete();
}

void *sub_10173171C(void *result, uint64_t a2)
{
  result[1] = 0;
  *uint64_t result = off_102337DE8;
  result[2] = 0;
  result[3] = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_101731794();
  }
  return result;
}

void sub_101731794()
{
}

void sub_101731898(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1017318E0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(uint64_t **)(a1 + 8);
  float v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "joint");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101731978(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        sub_101731B34();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_101731B34()
{
}

void sub_101731C5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_101731CA0(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base ***)(result + 8);
  for (i = *(const PB::Base ***)(result + 16); v2 != i; uint64_t result = PB::Writer::writeSubmessage(this, v5, 1u))
    char v5 = *v2++;
  return result;
}

uint64_t sub_101731CEC(uint64_t result)
{
  *(void *)uint64_t result = off_102337E20;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void sub_101731D18(void **a1)
{
  *a1 = off_102337E20;
  unint64_t v2 = a1 + 2;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

void sub_101731D74(void **a1)
{
  *a1 = off_102337E20;
  unint64_t v2 = a1 + 2;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
  operator delete();
}

uint64_t sub_101731DE4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = off_102337E20;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 48) = 0;
  if (*(void *)(a2 + 16) != *(void *)(a2 + 24)) {
    sub_101731EA4();
  }
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 2) != 0)
  {
    uint64_t v3 = *(void *)(a2 + 40);
    *(unsigned char *)(result + 48) |= 2u;
    *(void *)(result + 40) = v3;
    char v2 = *(unsigned char *)(a2 + 48);
  }
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 48) |= 1u;
    *(void *)(result + 8) = v4;
  }
  return result;
}

void sub_101731EA4()
{
}

void sub_101731FA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_101731FF0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 48)) {
    PB::TextFormatter::format(this, "globalMachtime", *(double *)(a1 + 8));
  }
  char v5 = *(uint64_t **)(a1 + 16);
  float v6 = *(uint64_t **)(a1 + 24);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "joint");
  }
  if ((*(unsigned char *)(a1 + 48) & 2) != 0) {
    PB::TextFormatter::format(this, "localMachtime", *(double *)(a1 + 40));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1017320C8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3) {
        break;
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 48) |= 2u;
        unint64_t v22 = *((void *)this + 1);
        if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
          goto LABEL_30;
        }
        *(void *)(a1 + 40) = *(void *)(*(void *)this + v22);
LABEL_34:
        *((void *)this + 1) += 8;
        goto LABEL_35;
      }
      if (v20 == 1) {
        sub_101732324();
      }
      uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
      if (!result) {
        return result;
      }
LABEL_35:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    *(unsigned char *)(a1 + 48) |= 1u;
    unint64_t v21 = *((void *)this + 1);
    if (v21 > 0xFFFFFFFFFFFFFFF7 || v21 + 8 > *((void *)this + 2))
    {
LABEL_30:
      *((unsigned char *)this + 24) = 1;
      goto LABEL_35;
    }
    *(void *)(a1 + 8) = *(void *)(*(void *)this + v21);
    goto LABEL_34;
  }
  return v4 == 0;
}

void sub_101732324()
{
}

void sub_101732444(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_101732488(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base ***)(result + 16);
  char v5 = *(const PB::Base ***)(result + 24);
  while (v4 != v5)
  {
    float v6 = *v4++;
    uint64_t result = PB::Writer::writeSubmessage(this, v6, 1u);
  }
  char v7 = *(unsigned char *)(v3 + 48);
  if ((v7 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 2u);
    char v7 = *(unsigned char *)(v3 + 48);
  }
  if (v7)
  {
    double v8 = *(double *)(v3 + 8);
    return PB::Writer::write(this, v8, 3u);
  }
  return result;
}

void sub_101732520(PB::Base *this)
{
  *(void *)this = &off_102337E58;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_101732584(PB::Base *a1)
{
  sub_101732520(a1);

  operator delete();
}

uint64_t sub_1017325BC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102337E58;
  *(_OWORD *)(a1 + 8) = 0u;
  uint64_t v3 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 24) = 0u;
  if (*(unsigned char *)(a2 + 36))
  {
    int v4 = *(_DWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 36) = 1;
    *(_DWORD *)(a1 + 32) = v4;
  }
  if (a1 != a2) {
    sub_1000FB43C(v3, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  return a1;
}

uint64_t sub_101732640(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 36)) {
    PB::TextFormatter::format(this, "joint", *(_DWORD *)(a1 + 32));
  }
  char v5 = *(float **)(a1 + 8);
  float v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "position", v7);
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1017326D4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        BOOL v16 = v12++ > 8;
        if (v16) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v22 = v13 & 7;
      if (v22 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v23 = v13 >> 3;
      if ((v13 >> 3) == 2)
      {
        if (v22 == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v32 = *((void *)this + 1);
          unint64_t v33 = *((void *)this + 2);
          while (v32 < v33 && !*((unsigned char *)this + 24))
          {
            unsigned int v35 = *(char **)(a1 + 16);
            unint64_t v34 = *(void *)(a1 + 24);
            if ((unint64_t)v35 >= v34)
            {
              uint64_t v37 = (char *)*v8;
              uint64_t v38 = (v35 - (unsigned char *)*v8) >> 2;
              unint64_t v39 = v38 + 1;
              if ((unint64_t)(v38 + 1) >> 62) {
                goto LABEL_100;
              }
              uint64_t v40 = v34 - (void)v37;
              if (v40 >> 1 > v39) {
                unint64_t v39 = v40 >> 1;
              }
              if ((unint64_t)v40 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v41 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v41 = v39;
              }
              if (v41)
              {
                unint64_t v42 = (char *)sub_10017EA34(v9, v41);
                uint64_t v37 = *(char **)(a1 + 8);
                unsigned int v35 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v42 = 0;
              }
              int v43 = &v42[4 * v38];
              *(_DWORD *)int v43 = 0;
              unint64_t v36 = v43 + 4;
              while (v35 != v37)
              {
                int v44 = *((_DWORD *)v35 - 1);
                v35 -= 4;
                *((_DWORD *)v43 - 1) = v44;
                v43 -= 4;
              }
              *(void *)(a1 + 8) = v43;
              *(void *)(a1 + 16) = v36;
              *(void *)(a1 + 24) = &v42[4 * v41];
              if (v37) {
                operator delete(v37);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v35 = 0;
              unint64_t v36 = v35 + 4;
            }
            *(void *)(a1 + 16) = v36;
            unint64_t v45 = *((void *)this + 1);
            if (v45 > 0xFFFFFFFFFFFFFFFBLL || v45 + 4 > *((void *)this + 2))
            {
              *((unsigned char *)this + 24) = 1;
              break;
            }
            *(v36 - 1) = *(_DWORD *)(*(void *)this + v45);
            unint64_t v33 = *((void *)this + 2);
            unint64_t v32 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v32;
          }
          PB::Reader::recallMark();
        }
        else
        {
          unsigned int v51 = *(char **)(a1 + 16);
          unint64_t v50 = *(void *)(a1 + 24);
          if ((unint64_t)v51 >= v50)
          {
            char v53 = (char *)*v8;
            uint64_t v54 = (v51 - (unsigned char *)*v8) >> 2;
            unint64_t v55 = v54 + 1;
            if ((unint64_t)(v54 + 1) >> 62) {
LABEL_100:
            }
              sub_1001D7FD4();
            uint64_t v56 = v50 - (void)v53;
            if (v56 >> 1 > v55) {
              unint64_t v55 = v56 >> 1;
            }
            if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v57 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v57 = v55;
            }
            if (v57)
            {
              uint64_t v58 = (char *)sub_10017EA34(v9, v57);
              char v53 = *(char **)(a1 + 8);
              unsigned int v51 = *(char **)(a1 + 16);
            }
            else
            {
              uint64_t v58 = 0;
            }
            unint64_t v59 = &v58[4 * v54];
            *(_DWORD *)unint64_t v59 = 0;
            unint64_t v52 = v59 + 4;
            while (v51 != v53)
            {
              int v60 = *((_DWORD *)v51 - 1);
              v51 -= 4;
              *((_DWORD *)v59 - 1) = v60;
              v59 -= 4;
            }
            *(void *)(a1 + 8) = v59;
            *(void *)(a1 + 16) = v52;
            *(void *)(a1 + 24) = &v58[4 * v57];
            if (v53) {
              operator delete(v53);
            }
          }
          else
          {
            *(_DWORD *)unsigned int v51 = 0;
            unint64_t v52 = v51 + 4;
          }
          *(void *)(a1 + 16) = v52;
          unint64_t v61 = *((void *)this + 1);
          if (v61 <= 0xFFFFFFFFFFFFFFFBLL && v61 + 4 <= *((void *)this + 2))
          {
            *(v52 - 1) = *(_DWORD *)(*(void *)this + v61);
            *((void *)this + 1) += 4;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
        }
      }
      else if (v23 == 1)
      {
        *(unsigned char *)(a1 + 36) |= 1u;
        unint64_t v24 = *((void *)this + 1);
        unint64_t v25 = *((void *)this + 2);
        uint64_t v26 = *(void *)this;
        if (v24 > 0xFFFFFFFFFFFFFFF5 || v24 + 10 > v25)
        {
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v29 = 0;
          if (v25 <= v24) {
            unint64_t v25 = *((void *)this + 1);
          }
          while (1)
          {
            if (v25 == v24)
            {
              LODWORD(v29) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_77;
            }
            unint64_t v48 = v24 + 1;
            char v49 = *(unsigned char *)(v26 + v24);
            *((void *)this + 1) = v48;
            v29 |= (unint64_t)(v49 & 0x7F) << v46;
            if ((v49 & 0x80) == 0) {
              break;
            }
            v46 += 7;
            unint64_t v24 = v48;
            BOOL v16 = v47++ > 8;
            if (v16)
            {
LABEL_63:
              LODWORD(v29) = 0;
              goto LABEL_77;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v29) = 0;
          }
        }
        else
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v29 = 0;
          while (1)
          {
            unint64_t v30 = v24 + 1;
            *((void *)this + 1) = v24 + 1;
            char v31 = *(unsigned char *)(v26 + v24);
            v29 |= (unint64_t)(v31 & 0x7F) << v27;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            unint64_t v24 = v30;
            BOOL v16 = v28++ > 8;
            if (v16) {
              goto LABEL_63;
            }
          }
        }
LABEL_77:
        *(_DWORD *)(a1 + 32) = v29;
      }
      else if ((PB::Reader::skip(this, v23, v22, 0) & 1) == 0)
      {
        return 0;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101732B34(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 36)) {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 32), 1u);
  }
  char v5 = *(float **)(v3 + 8);
  int v4 = *(float **)(v3 + 16);
  while (v5 != v4)
  {
    float v6 = *v5++;
    uint64_t result = PB::Writer::write(this, v6, 2u);
  }
  return result;
}

uint64_t sub_101732B98(uint64_t result)
{
  *(void *)uint64_t result = off_102337E90;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void sub_101732BC4(void **a1)
{
  *a1 = off_102337E90;
  unint64_t v2 = a1 + 2;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

void sub_101732C20(void **a1)
{
  *a1 = off_102337E90;
  unint64_t v2 = a1 + 2;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
  operator delete();
}

uint64_t sub_101732C90(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = off_102337E90;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 48) = 0;
  if (*(void *)(a2 + 16) != *(void *)(a2 + 24)) {
    sub_101731794();
  }
  char v2 = *(unsigned char *)(a2 + 48);
  if ((v2 & 2) != 0)
  {
    uint64_t v3 = *(void *)(a2 + 40);
    *(unsigned char *)(result + 48) |= 2u;
    *(void *)(result + 40) = v3;
    char v2 = *(unsigned char *)(a2 + 48);
  }
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 48) |= 1u;
    *(void *)(result + 8) = v4;
  }
  return result;
}

uint64_t sub_101732D54(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 48)) {
    PB::TextFormatter::format(this, "globalMachtime", *(double *)(a1 + 8));
  }
  char v5 = *(uint64_t **)(a1 + 16);
  float v6 = *(uint64_t **)(a1 + 24);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "joint");
  }
  if ((*(unsigned char *)(a1 + 48) & 2) != 0) {
    PB::TextFormatter::format(this, "localMachtime", *(double *)(a1 + 40));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101732E2C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3) {
        break;
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 48) |= 2u;
        unint64_t v22 = *((void *)this + 1);
        if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
          goto LABEL_30;
        }
        *(void *)(a1 + 40) = *(void *)(*(void *)this + v22);
LABEL_34:
        *((void *)this + 1) += 8;
        goto LABEL_35;
      }
      if (v20 == 1) {
        sub_101731B34();
      }
      uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
      if (!result) {
        return result;
      }
LABEL_35:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    *(unsigned char *)(a1 + 48) |= 1u;
    unint64_t v21 = *((void *)this + 1);
    if (v21 > 0xFFFFFFFFFFFFFFF7 || v21 + 8 > *((void *)this + 2))
    {
LABEL_30:
      *((unsigned char *)this + 24) = 1;
      goto LABEL_35;
    }
    *(void *)(a1 + 8) = *(void *)(*(void *)this + v21);
    goto LABEL_34;
  }
  return v4 == 0;
}

uint64_t sub_101733088(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base ***)(result + 16);
  char v5 = *(const PB::Base ***)(result + 24);
  while (v4 != v5)
  {
    float v6 = *v4++;
    uint64_t result = PB::Writer::writeSubmessage(this, v6, 1u);
  }
  char v7 = *(unsigned char *)(v3 + 48);
  if ((v7 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 2u);
    char v7 = *(unsigned char *)(v3 + 48);
  }
  if (v7)
  {
    double v8 = *(double *)(v3 + 8);
    return PB::Writer::write(this, v8, 3u);
  }
  return result;
}

void sub_101733120(PB::Base *this)
{
  *(void *)this = &off_102337EC8;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_101733194(PB::Base *a1)
{
  sub_101733120(a1);

  operator delete();
}

uint64_t sub_1017331CC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102337EC8;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  if (*(unsigned char *)(a2 + 60))
  {
    int v5 = *(_DWORD *)(a2 + 56);
    *(unsigned char *)(a1 + 60) = 1;
    *(_DWORD *)(a1 + 56) = v5;
  }
  if (a1 != a2)
  {
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
  }
  return a1;
}

uint64_t sub_10173326C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 60)) {
    PB::TextFormatter::format(this, "joint", *(_DWORD *)(a1 + 56));
  }
  int v5 = *(float **)(a1 + 8);
  float v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "position", v7);
  }
  double v8 = *(float **)(a1 + 32);
  char v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "quaternion", v10);
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_101733334(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    float v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        unint64_t v15 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v21 = v2 + 1;
          char v22 = *(unsigned char *)(v12 + v2);
          *((void *)this + 1) = v21;
          v15 |= (unint64_t)(v22 & 0x7F) << v19;
          if ((v22 & 0x80) == 0) {
            goto LABEL_21;
          }
          v19 += 7;
          unint64_t v2 = v21;
          if (v20++ >= 9)
          {
LABEL_20:
            unint64_t v15 = 0;
            goto LABEL_21;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v25 = v15 >> 3;
      if ((v15 >> 3) == 3) {
        break;
      }
      if (v25 == 2)
      {
        if (v24 != 2)
        {
          char v70 = *(char **)(a1 + 16);
          unint64_t v69 = *(void *)(a1 + 24);
          if ((unint64_t)v70 >= v69)
          {
            char v77 = (char *)*v10;
            uint64_t v78 = (v70 - (unsigned char *)*v10) >> 2;
            unint64_t v79 = v78 + 1;
            if ((unint64_t)(v78 + 1) >> 62) {
LABEL_144:
            }
              sub_1001D7FD4();
            uint64_t v80 = v69 - (void)v77;
            if (v80 >> 1 > v79) {
              unint64_t v79 = v80 >> 1;
            }
            if ((unint64_t)v80 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v81 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v81 = v79;
            }
            if (v81)
            {
              unint64_t v82 = (char *)sub_10017EA34(v11, v81);
              char v77 = *(char **)(a1 + 8);
              char v70 = *(char **)(a1 + 16);
            }
            else
            {
              unint64_t v82 = 0;
            }
            unint64_t v85 = &v82[4 * v78];
            *(_DWORD *)unint64_t v85 = 0;
            uint64_t v68 = v85 + 4;
            while (v70 != v77)
            {
              int v86 = *((_DWORD *)v70 - 1);
              v70 -= 4;
              *((_DWORD *)v85 - 1) = v86;
              v85 -= 4;
            }
            *(void *)(a1 + 8) = v85;
            *(void *)(a1 + 16) = v68;
            *(void *)(a1 + 24) = &v82[4 * v81];
            if (v77) {
              operator delete(v77);
            }
          }
          else
          {
            *(_DWORD *)char v70 = 0;
            uint64_t v68 = v70 + 4;
          }
          *(void *)(a1 + 16) = v68;
LABEL_129:
          unint64_t v87 = *((void *)this + 1);
          if (v87 <= 0xFFFFFFFFFFFFFFFBLL && v87 + 4 <= *((void *)this + 2))
          {
            *(v68 - 1) = *(_DWORD *)(*(void *)this + v87);
            *((void *)this + 1) += 4;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_133;
        }
        if (PB::Reader::placeMark()) {
          return 0;
        }
        unint64_t v48 = *((void *)this + 1);
        unint64_t v49 = *((void *)this + 2);
        while (v48 < v49 && !*((unsigned char *)this + 24))
        {
          unsigned int v51 = *(char **)(a1 + 16);
          unint64_t v50 = *(void *)(a1 + 24);
          if ((unint64_t)v51 >= v50)
          {
            char v53 = (char *)*v10;
            uint64_t v54 = (v51 - (unsigned char *)*v10) >> 2;
            unint64_t v55 = v54 + 1;
            if ((unint64_t)(v54 + 1) >> 62) {
              goto LABEL_144;
            }
            uint64_t v56 = v50 - (void)v53;
            if (v56 >> 1 > v55) {
              unint64_t v55 = v56 >> 1;
            }
            if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v57 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v57 = v55;
            }
            if (v57)
            {
              uint64_t v58 = (char *)sub_10017EA34(v11, v57);
              char v53 = *(char **)(a1 + 8);
              unsigned int v51 = *(char **)(a1 + 16);
            }
            else
            {
              uint64_t v58 = 0;
            }
            unint64_t v59 = &v58[4 * v54];
            *(_DWORD *)unint64_t v59 = 0;
            unint64_t v52 = v59 + 4;
            while (v51 != v53)
            {
              int v60 = *((_DWORD *)v51 - 1);
              v51 -= 4;
              *((_DWORD *)v59 - 1) = v60;
              v59 -= 4;
            }
            *(void *)(a1 + 8) = v59;
            *(void *)(a1 + 16) = v52;
            *(void *)(a1 + 24) = &v58[4 * v57];
            if (v53) {
              operator delete(v53);
            }
          }
          else
          {
            *(_DWORD *)unsigned int v51 = 0;
            unint64_t v52 = v51 + 4;
          }
          *(void *)(a1 + 16) = v52;
          unint64_t v61 = *((void *)this + 1);
          if (v61 > 0xFFFFFFFFFFFFFFFBLL || v61 + 4 > *((void *)this + 2)) {
            goto LABEL_93;
          }
          *(v52 - 1) = *(_DWORD *)(*(void *)this + v61);
          unint64_t v49 = *((void *)this + 2);
          unint64_t v48 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v48;
        }
LABEL_94:
        PB::Reader::recallMark();
        goto LABEL_133;
      }
      if (v25 == 1)
      {
        *(unsigned char *)(a1 + 60) |= 1u;
        unint64_t v26 = *((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v27)
        {
          char v62 = 0;
          unsigned int v63 = 0;
          uint64_t v31 = 0;
          if (v27 <= v26) {
            unint64_t v27 = *((void *)this + 1);
          }
          while (1)
          {
            if (v27 == v26)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_114;
            }
            unint64_t v64 = v26 + 1;
            char v65 = *(unsigned char *)(v28 + v26);
            *((void *)this + 1) = v64;
            v31 |= (unint64_t)(v65 & 0x7F) << v62;
            if ((v65 & 0x80) == 0) {
              break;
            }
            v62 += 7;
            unint64_t v26 = v64;
            BOOL v18 = v63++ > 8;
            if (v18)
            {
LABEL_88:
              LODWORD(v31) = 0;
              goto LABEL_114;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v32 = v26 + 1;
            *((void *)this + 1) = v26 + 1;
            char v33 = *(unsigned char *)(v28 + v26);
            v31 |= (unint64_t)(v33 & 0x7F) << v29;
            if ((v33 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v26 = v32;
            BOOL v18 = v30++ > 8;
            if (v18) {
              goto LABEL_88;
            }
          }
        }
LABEL_114:
        *(_DWORD *)(a1 + 56) = v31;
      }
      else if ((PB::Reader::skip(this, v25, v24, 0) & 1) == 0)
      {
        return 0;
      }
LABEL_133:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    if (v24 != 2)
    {
      unsigned int v67 = *(char **)(a1 + 40);
      unint64_t v66 = *(void *)(a1 + 48);
      if ((unint64_t)v67 >= v66)
      {
        unint64_t v71 = (char *)*v8;
        uint64_t v72 = (v67 - (unsigned char *)*v8) >> 2;
        unint64_t v73 = v72 + 1;
        if ((unint64_t)(v72 + 1) >> 62) {
LABEL_143:
        }
          sub_1001D7FD4();
        uint64_t v74 = v66 - (void)v71;
        if (v74 >> 1 > v73) {
          unint64_t v73 = v74 >> 1;
        }
        if ((unint64_t)v74 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v75 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v75 = v73;
        }
        if (v75)
        {
          uint64_t v76 = (char *)sub_10017EA34(v9, v75);
          unint64_t v71 = *(char **)(a1 + 32);
          unsigned int v67 = *(char **)(a1 + 40);
        }
        else
        {
          uint64_t v76 = 0;
        }
        unint64_t v83 = &v76[4 * v72];
        *(_DWORD *)unint64_t v83 = 0;
        uint64_t v68 = v83 + 4;
        while (v67 != v71)
        {
          int v84 = *((_DWORD *)v67 - 1);
          v67 -= 4;
          *((_DWORD *)v83 - 1) = v84;
          v83 -= 4;
        }
        *(void *)(a1 + 32) = v83;
        *(void *)(a1 + 40) = v68;
        *(void *)(a1 + 48) = &v76[4 * v75];
        if (v71) {
          operator delete(v71);
        }
      }
      else
      {
        *(_DWORD *)unsigned int v67 = 0;
        uint64_t v68 = v67 + 4;
      }
      *(void *)(a1 + 40) = v68;
      goto LABEL_129;
    }
    if (PB::Reader::placeMark()) {
      return 0;
    }
    unint64_t v34 = *((void *)this + 1);
    unint64_t v35 = *((void *)this + 2);
    while (v34 < v35 && !*((unsigned char *)this + 24))
    {
      uint64_t v37 = *(char **)(a1 + 40);
      unint64_t v36 = *(void *)(a1 + 48);
      if ((unint64_t)v37 >= v36)
      {
        unint64_t v39 = (char *)*v8;
        uint64_t v40 = (v37 - (unsigned char *)*v8) >> 2;
        unint64_t v41 = v40 + 1;
        if ((unint64_t)(v40 + 1) >> 62) {
          goto LABEL_143;
        }
        uint64_t v42 = v36 - (void)v39;
        if (v42 >> 1 > v41) {
          unint64_t v41 = v42 >> 1;
        }
        if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v43 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v43 = v41;
        }
        if (v43)
        {
          int v44 = (char *)sub_10017EA34(v9, v43);
          unint64_t v39 = *(char **)(a1 + 32);
          uint64_t v37 = *(char **)(a1 + 40);
        }
        else
        {
          int v44 = 0;
        }
        unint64_t v45 = &v44[4 * v40];
        *(_DWORD *)unint64_t v45 = 0;
        uint64_t v38 = v45 + 4;
        while (v37 != v39)
        {
          int v46 = *((_DWORD *)v37 - 1);
          v37 -= 4;
          *((_DWORD *)v45 - 1) = v46;
          v45 -= 4;
        }
        *(void *)(a1 + 32) = v45;
        *(void *)(a1 + 40) = v38;
        *(void *)(a1 + 48) = &v44[4 * v43];
        if (v39) {
          operator delete(v39);
        }
      }
      else
      {
        *(_DWORD *)uint64_t v37 = 0;
        uint64_t v38 = v37 + 4;
      }
      *(void *)(a1 + 40) = v38;
      unint64_t v47 = *((void *)this + 1);
      if (v47 > 0xFFFFFFFFFFFFFFFBLL || v47 + 4 > *((void *)this + 2))
      {
LABEL_93:
        *((unsigned char *)this + 24) = 1;
        goto LABEL_94;
      }
      *(v38 - 1) = *(_DWORD *)(*(void *)this + v47);
      unint64_t v35 = *((void *)this + 2);
      unint64_t v34 = *((void *)this + 1) + 4;
      *((void *)this + 1) = v34;
    }
    goto LABEL_94;
  }
  return v4 == 0;
}

uint64_t sub_101733954(uint64_t result, PB::Writer *this)
{
  unint64_t v3 = (void *)result;
  if (*(unsigned char *)(result + 60)) {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 56), 1u);
  }
  int v4 = (float *)v3[1];
  int v5 = (float *)v3[2];
  while (v4 != v5)
  {
    float v6 = *v4++;
    uint64_t result = PB::Writer::write(this, v6, 2u);
  }
  double v8 = (float *)v3[4];
  float v7 = (float *)v3[5];
  while (v8 != v7)
  {
    float v9 = *v8++;
    uint64_t result = PB::Writer::write(this, v9, 3u);
  }
  return result;
}

uint64_t sub_1017339D8(uint64_t result)
{
  *(void *)uint64_t result = &off_102337F00;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_101733A00(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101733A38(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102337F00;
  *(_DWORD *)(result + 20) = 0;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
    int v3 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = 2;
    *(_DWORD *)(result + 16) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 1) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 20))
  {
LABEL_5:
    uint64_t v4 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = v2;
    *(void *)(result + 8) = v4;
  }
  return result;
}

uint64_t sub_101733A9C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "rms", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101733B18(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              uint64_t v25 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v30 = v21++;
            char v31 = *(unsigned char *)(v22 + v30);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v25 = 0;
          }
LABEL_46:
          unint64_t v2 = v30 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              break;
            }
          }
        }
LABEL_47:
        *(void *)(a1 + 8) = v25;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101733DA8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 16), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if (v4)
  {
    unint64_t v5 = *(void *)(v3 + 8);
    return PB::Writer::writeVarInt(this, v5, 2u);
  }
  return result;
}

void *sub_101733E14(void *result)
{
  *uint64_t result = &off_102337F38;
  result[2] = 0;
  return result;
}

void sub_101733E3C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_101733E74(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102337F38;
  *(void *)(a1 + 16) = 0;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
    int v3 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 20) = 2;
    *(_DWORD *)(a1 + 16) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 1) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 20))
  {
LABEL_5:
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 20) = v2;
    *(double *)(a1 + 8) = result;
  }
  return result;
}

uint64_t sub_101733ED8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "event", *(_DWORD *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101733F54(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v30 = v21++;
            char v31 = *(unsigned char *)(v22 + v30);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_46:
          unint64_t v2 = v30 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_47:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017341E4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 16), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if (v4)
  {
    double v5 = *(double *)(v3 + 8);
    return PB::Writer::write(this, v5, 2u);
  }
  return result;
}

uint64_t sub_101734250(uint64_t result)
{
  *(void *)uint64_t result = &off_102337F70;
  *(_DWORD *)(result + 60) = 0;
  return result;
}

void sub_101734278(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_1017342B0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102337F70;
  *(_DWORD *)(a1 + 60) = 0;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 8) != 0)
  {
    double result = *(double *)(a2 + 32);
    __int16 v3 = 8;
    *(_WORD *)(a1 + 60) = 8;
    *(double *)(a1 + 32) = result;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 48);
    v3 |= 0x20u;
    *(_WORD *)(a1 + 60) = v3;
    *(_DWORD *)(a1 + 48) = v5;
    __int16 v2 = *(_WORD *)(a2 + 60);
  }
LABEL_6:
  if ((v2 & 0x200) != 0)
  {
    char v6 = *(unsigned char *)(a2 + 55);
    v3 |= 0x200u;
    *(_WORD *)(a1 + 60) = v3;
    *(unsigned char *)(a1 + 55) = v6;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x400) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_8;
  }
  char v7 = *(unsigned char *)(a2 + 56);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 60) = v3;
  *(unsigned char *)(a1 + 56) = v7;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v8 = *(unsigned char *)(a2 + 52);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 60) = v3;
  *(unsigned char *)(a1 + 52) = v8;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x80) == 0)
  {
LABEL_10:
    if ((v2 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  char v9 = *(unsigned char *)(a2 + 53);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 60) = v3;
  *(unsigned char *)(a1 + 53) = v9;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x100) == 0)
  {
LABEL_11:
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  char v10 = *(unsigned char *)(a2 + 54);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 60) = v3;
  *(unsigned char *)(a1 + 54) = v10;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 2) == 0)
  {
LABEL_12:
    if ((v2 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  double result = *(double *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(a1 + 60) = v3;
  *(double *)(a1 + 16) = result;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 1) == 0)
  {
LABEL_13:
    if ((v2 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  double result = *(double *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(a1 + 60) = v3;
  *(double *)(a1 + 8) = result;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 4) == 0)
  {
LABEL_14:
    if ((v2 & 0x10) == 0) {
      return result;
    }
LABEL_24:
    double result = *(double *)(a2 + 40);
    *(_WORD *)(a1 + 60) = v3 | 0x10;
    *(double *)(a1 + 40) = result;
    return result;
  }
LABEL_23:
  double result = *(double *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(a1 + 60) = v3;
  *(double *)(a1 + 24) = result;
  if ((*(_WORD *)(a2 + 60) & 0x10) != 0) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_101734410(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "isBlockoutPeriodLow", *(unsigned char *)(a1 + 52));
    __int16 v5 = *(_WORD *)(a1 + 60);
    if ((v5 & 0x80) == 0)
    {
LABEL_3:
      if ((v5 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "isBlockoutPeriodVeryLow", *(unsigned char *)(a1 + 53));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x100) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "isSampleRecent", *(unsigned char *)(a1 + 54));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "percentLow", *(double *)(a1 + 8));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 2) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "percentOK", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "percentVeryLow", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "totalValidDuration", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "userHasOnboarded", *(unsigned char *)(a1 + 55));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x20) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "value", *(_DWORD *)(a1 + 48));
  if ((*(_WORD *)(a1 + 60) & 0x400) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "writtenToHealthKit", *(unsigned char *)(a1 + 56));
LABEL_13:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1017345B4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 60) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 2u:
              *(_WORD *)(a1 + 60) |= 0x20u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_79;
                  }
                  unint64_t v39 = v21++;
                  char v40 = *(unsigned char *)(v22 + v39);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_78:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_79;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_78;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_79;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_79:
              *(_DWORD *)(a1 + 48) = v25;
LABEL_80:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 3u:
              *(_WORD *)(a1 + 60) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 55) = v28;
              goto LABEL_80;
            case 4u:
              *(_WORD *)(a1 + 60) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 56) = v30;
              goto LABEL_80;
            case 5u:
              *(_WORD *)(a1 + 60) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v32 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v31 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v32 = v31 != 0;
              }
              *(unsigned char *)(a1 + 52) = v32;
              goto LABEL_80;
            case 6u:
              *(_WORD *)(a1 + 60) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 53) = v34;
              goto LABEL_80;
            case 7u:
              *(_WORD *)(a1 + 60) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v36 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v36 = v35 != 0;
              }
              *(unsigned char *)(a1 + 54) = v36;
              goto LABEL_80;
            case 8u:
              *(_WORD *)(a1 + 60) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 9u:
              *(_WORD *)(a1 + 60) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 0xAu:
              *(_WORD *)(a1 + 60) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 0xBu:
              *(_WORD *)(a1 + 60) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
LABEL_74:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_55:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_80;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_80;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101734AC0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 60);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32), 1u);
    __int16 v4 = *(_WORD *)(v3 + 60);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x200) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 48), 2u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x200) == 0)
  {
LABEL_4:
    if ((v4 & 0x400) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 55), 3u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x400) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 56), 4u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 52), 5u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x80) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 53), 6u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 54), 7u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 2) == 0)
  {
LABEL_9:
    if ((v4 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 8u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 1) == 0)
  {
LABEL_10:
    if ((v4 & 4) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 0xAu);
    if ((*(_WORD *)(v3 + 60) & 0x10) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 9u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 4) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_23:
  double v5 = *(double *)(v3 + 40);

  return PB::Writer::write(this, v5, 0xBu);
}

uint64_t sub_101734C2C(uint64_t result)
{
  *(void *)uint64_t result = &off_102337FA8;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_101734C54(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_101734C8C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102337FA8;
  *(_DWORD *)(a1 + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(a1 + 40) = 2;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 40))
  {
LABEL_5:
    double result = *(double *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(a1 + 40) = v3;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = v3 | 8;
    *(double *)(a1 + 32) = result;
    return result;
  }
  double result = *(double *)(a2 + 24);
  v3 |= 4u;
  *(unsigned char *)(a1 + 40) = v3;
  *(double *)(a1 + 24) = result;
  if ((*(unsigned char *)(a2 + 40) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_101734D28(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if (v5)
  {
    PB::TextFormatter::format(this, "intermediateBoutsAsymmetryPercentageCv", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "intermediateBoutsAsymmetryPercentageMedian", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "intermediateBoutsDoubleSupportPercentageMedian", *(double *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 40) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "intermediateBoutsDoubleSupportPercentageStd", *(double *)(a1 + 32));
LABEL_6:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101734DEC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 40) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_37;
        case 2u:
          *(unsigned char *)(a1 + 40) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 40) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 40) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101735064(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16), 1u);
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 3u);
      if ((*(unsigned char *)(v3 + 40) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 2u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:
  double v5 = *(double *)(v3 + 32);

  return PB::Writer::write(this, v5, 4u);
}

uint64_t sub_10173510C(uint64_t result)
{
  *(void *)uint64_t result = &off_102337FE0;
  *(_DWORD *)(result + 176) = 0;
  return result;
}

void sub_101735134(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_10173516C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102337FE0;
  *(_DWORD *)(a1 + 176) = 0;
  int v2 = *(_DWORD *)(a2 + 176);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    int v3 = 1;
    *(_DWORD *)(a1 + 176) = 1;
    *(double *)(a1 + 8) = result;
    int v2 = *(_DWORD *)(a2 + 176);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(_DWORD *)(a1 + 176) = v3;
    *(double *)(a1 + 16) = result;
    int v2 = *(_DWORD *)(a2 + 176);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    double result = *(double *)(a2 + 24);
    v3 |= 4u;
    *(_DWORD *)(a1 + 176) = v3;
    *(double *)(a1 + 24) = result;
    int v2 = *(_DWORD *)(a2 + 176);
    if ((v2 & 0x400) == 0)
    {
LABEL_8:
      if ((v2 & 0x200) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 88);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 88) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x200) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  double result = *(double *)(a2 + 80);
  v3 |= 0x200u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 80) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  double result = *(double *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 40) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 8) == 0)
  {
LABEL_11:
    if ((v2 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  double result = *(double *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 32) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x80) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 64) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  double result = *(double *)(a2 + 56);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 56) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x20) == 0)
  {
LABEL_14:
    if ((v2 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  double result = *(double *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 48) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x800) == 0)
  {
LABEL_15:
    if ((v2 & 0x100) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  double result = *(double *)(a2 + 96);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 96) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x100) == 0)
  {
LABEL_16:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  double result = *(double *)(a2 + 72);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 72) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x80000) == 0)
  {
LABEL_17:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  double result = *(double *)(a2 + 160);
  v3 |= 0x80000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 160) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x100000) == 0)
  {
LABEL_18:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = *(double *)(a2 + 168);
  v3 |= 0x100000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 168) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x20000) == 0)
  {
LABEL_19:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = *(double *)(a2 + 144);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 144) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x4000) == 0)
  {
LABEL_20:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = *(double *)(a2 + 120);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 120) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x8000) == 0)
  {
LABEL_21:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_41;
  }
LABEL_40:
  double result = *(double *)(a2 + 128);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 128) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x40000) == 0)
  {
LABEL_22:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_42;
  }
LABEL_41:
  double result = *(double *)(a2 + 152);
  v3 |= 0x40000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 152) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x2000) == 0)
  {
LABEL_23:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_43;
  }
LABEL_42:
  double result = *(double *)(a2 + 112);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 112) = result;
  int v2 = *(_DWORD *)(a2 + 176);
  if ((v2 & 0x10000) == 0)
  {
LABEL_24:
    if ((v2 & 0x1000) == 0) {
      return result;
    }
LABEL_44:
    double result = *(double *)(a2 + 104);
    *(_DWORD *)(a1 + 176) = v3 | 0x1000;
    *(double *)(a1 + 104) = result;
    return result;
  }
LABEL_43:
  double result = *(double *)(a2 + 136);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 176) = v3;
  *(double *)(a1 + 136) = result;
  if ((*(_DWORD *)(a2 + 176) & 0x1000) != 0) {
    goto LABEL_44;
  }
  return result;
}

uint64_t sub_1017353E4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 176);
  if (v5)
  {
    PB::TextFormatter::format(this, "allBoutsBoutDurationSecCv", *(double *)(a1 + 8));
    int v5 = *(_DWORD *)(a1 + 176);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_28;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "allBoutsBoutDurationSecMedian", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "allBoutsCycleTimeCv", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "intermediateBoutsCycleTimeCv", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "intermediateBoutsCycleTimeMedian", *(double *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "intermediateBoutsDoubleSupportPercentageMedian", *(double *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "intermediateBoutsStepLengthCv", *(double *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "intermediateBoutsStepLengthMedian", *(double *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "intermediateBoutsStepLengthMedianHeightnorm", *(double *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "intermediateBoutsWalkingSpeedCv", *(double *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "intermediateBoutsWalkingSpeedMedian", *(double *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "intermediateBoutsWalkingSpeedMedianSqrtheightnorm", *(double *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "longBoutsWalkingSpeedCountRatioLog", *(double *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "shortBoutsCycleTimeCv", *(double *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "shortBoutsCycleTimeMedian", *(double *)(a1 + 120));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "shortBoutsDoubleSupportPercentageMedian", *(double *)(a1 + 128));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "shortBoutsStepLengthCv", *(double *)(a1 + 136));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "shortBoutsStepLengthMedianHeightnorm", *(double *)(a1 + 144));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x40000) == 0)
  {
LABEL_20:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "shortBoutsWalkingSpeedCv", *(double *)(a1 + 152));
  int v5 = *(_DWORD *)(a1 + 176);
  if ((v5 & 0x80000) == 0)
  {
LABEL_21:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_45:
  PB::TextFormatter::format(this, "shortBoutsWalkingSpeedMedian", *(double *)(a1 + 160));
  if ((*(_DWORD *)(a1 + 176) & 0x100000) != 0) {
LABEL_22:
  }
    PB::TextFormatter::format(this, "shortBoutsWalkingSpeedMedianSqrtheightnorm", *(double *)(a1 + 168));
LABEL_23:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1017356C8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 176) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 2u:
          *(_DWORD *)(a1 + 176) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 3u:
          *(_DWORD *)(a1 + 176) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 4u:
          *(_DWORD *)(a1 + 176) |= 0x400u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 5u:
          *(_DWORD *)(a1 + 176) |= 0x200u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 6u:
          *(_DWORD *)(a1 + 176) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 7u:
          *(_DWORD *)(a1 + 176) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 8u:
          *(_DWORD *)(a1 + 176) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 9u:
          *(_DWORD *)(a1 + 176) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 0xAu:
          *(_DWORD *)(a1 + 176) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 0xBu:
          *(_DWORD *)(a1 + 176) |= 0x800u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 96) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 0xCu:
          *(_DWORD *)(a1 + 176) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 0xDu:
          *(_DWORD *)(a1 + 176) |= 0x80000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 160) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 0xEu:
          *(_DWORD *)(a1 + 176) |= 0x100000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 168) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 0xFu:
          *(_DWORD *)(a1 + 176) |= 0x20000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 144) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 0x10u:
          *(_DWORD *)(a1 + 176) |= 0x4000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 120) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 0x11u:
          *(_DWORD *)(a1 + 176) |= 0x8000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 128) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 0x12u:
          *(_DWORD *)(a1 + 176) |= 0x40000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 152) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 0x13u:
          *(_DWORD *)(a1 + 176) |= 0x2000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 112) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 0x14u:
          *(_DWORD *)(a1 + 176) |= 0x10000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_86;
          }
          *(void *)(a1 + 136) = *(void *)(*(void *)this + v2);
          goto LABEL_88;
        case 0x15u:
          *(_DWORD *)(a1 + 176) |= 0x1000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
          {
LABEL_86:
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            *(void *)(a1 + 104) = *(void *)(*(void *)this + v2);
LABEL_88:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101735D3C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 176);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    int v4 = *(_DWORD *)(v3 + 176);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 2u);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 0x400) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 3u);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x400) == 0)
  {
LABEL_5:
    if ((v4 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 88), 4u);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x200) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80), 5u);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 6u);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 7u);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 8u);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x40) == 0)
  {
LABEL_10:
    if ((v4 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 9u);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x20) == 0)
  {
LABEL_11:
    if ((v4 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 0xAu);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x800) == 0)
  {
LABEL_12:
    if ((v4 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 96), 0xBu);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x100) == 0)
  {
LABEL_13:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72), 0xCu);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x80000) == 0)
  {
LABEL_14:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 160), 0xDu);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x100000) == 0)
  {
LABEL_15:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 168), 0xEu);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x20000) == 0)
  {
LABEL_16:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 144), 0xFu);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x4000) == 0)
  {
LABEL_17:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 120), 0x10u);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x8000) == 0)
  {
LABEL_18:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 128), 0x11u);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x40000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 152), 0x12u);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_21;
    }
LABEL_42:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 136), 0x14u);
    if ((*(_DWORD *)(v3 + 176) & 0x1000) == 0) {
      return result;
    }
    goto LABEL_43;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 112), 0x13u);
  int v4 = *(_DWORD *)(v3 + 176);
  if ((v4 & 0x10000) != 0) {
    goto LABEL_42;
  }
LABEL_21:
  if ((v4 & 0x1000) == 0) {
    return result;
  }
LABEL_43:
  double v5 = *(double *)(v3 + 104);

  return PB::Writer::write(this, v5, 0x15u);
}

uint64_t sub_101735FC0(uint64_t result)
{
  *(void *)uint64_t result = &off_102338018;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

void sub_101735FE8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_101736020(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338018;
  *(_DWORD *)(a1 + 88) = 0;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(a1 + 88) = 1;
    *(double *)(a1 + 8) = result;
    __int16 v2 = *(_WORD *)(a2 + 88);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(a1 + 88) = v3;
    *(double *)(a1 + 16) = result;
    __int16 v2 = *(_WORD *)(a2 + 88);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    double result = *(double *)(a2 + 24);
    v3 |= 4u;
    *(_WORD *)(a1 + 88) = v3;
    *(double *)(a1 + 24) = result;
    __int16 v2 = *(_WORD *)(a2 + 88);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 0x200) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 64) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x200) == 0)
  {
LABEL_9:
    if ((v2 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_18;
  }
LABEL_17:
  double result = *(double *)(a2 + 80);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 80) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x100) == 0)
  {
LABEL_10:
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_19;
  }
LABEL_18:
  double result = *(double *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 72) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 8) == 0)
  {
LABEL_11:
    if ((v2 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_19:
  double result = *(double *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 32) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x40) == 0)
  {
LABEL_12:
    if ((v2 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_20:
  double result = *(double *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 56) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_22:
    double result = *(double *)(a2 + 48);
    *(_WORD *)(a1 + 88) = v3 | 0x20;
    *(double *)(a1 + 48) = result;
    return result;
  }
LABEL_21:
  double result = *(double *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 40) = result;
  if ((*(_WORD *)(a2 + 88) & 0x20) != 0) {
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_101736164(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 88);
  if (v5)
  {
    PB::TextFormatter::format(this, "asymmetryPercentageMedian", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 88);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "asymmetryPercentageStd", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "doubleSupportPercentageMedian", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "height", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "intermediateBoutsStepLengthQ95Heightnorm", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "intermediateBoutsWalkingSpeedQ95Sqrtheightnorm", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "modelOutputBalancePrior", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "stepLengthMedian", *(double *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_23:
  PB::TextFormatter::format(this, "stepLengthXWalkingSpeedMedian", *(double *)(a1 + 72));
  if ((*(_WORD *)(a1 + 88) & 0x200) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "walkingSpeedMedian", *(double *)(a1 + 80));
LABEL_12:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1017362E8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 88) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_53;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_55;
        case 2u:
          *(_WORD *)(a1 + 88) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_53;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_55;
        case 3u:
          *(_WORD *)(a1 + 88) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_53;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_55;
        case 4u:
          *(_WORD *)(a1 + 88) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_53;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
          goto LABEL_55;
        case 5u:
          *(_WORD *)(a1 + 88) |= 0x200u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_53;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
          goto LABEL_55;
        case 6u:
          *(_WORD *)(a1 + 88) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_53;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
          goto LABEL_55;
        case 7u:
          *(_WORD *)(a1 + 88) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_53;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
          goto LABEL_55;
        case 8u:
          *(_WORD *)(a1 + 88) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_53;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
          goto LABEL_55;
        case 9u:
          *(_WORD *)(a1 + 88) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_53;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
          goto LABEL_55;
        case 0xAu:
          *(_WORD *)(a1 + 88) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
LABEL_55:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_53:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017366C8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 88);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    __int16 v4 = *(_WORD *)(v3 + 88);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 2u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 3u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 4u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x200) == 0)
  {
LABEL_6:
    if ((v4 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80), 5u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x100) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72), 6u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 7u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 9u);
    if ((*(_WORD *)(v3 + 88) & 0x20) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 8u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x10) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_21:
  double v5 = *(double *)(v3 + 48);

  return PB::Writer::write(this, v5, 0xAu);
}

uint64_t sub_101736818(uint64_t result)
{
  *(void *)uint64_t result = &off_102338050;
  *(_DWORD *)(result + 248) = 0;
  return result;
}

void sub_101736840(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_101736878(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338050;
  *(_DWORD *)(a1 + 248) = 0;
  int v2 = *(_DWORD *)(a2 + 248);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    int v3 = 1;
    *(_DWORD *)(a1 + 248) = 1;
    *(double *)(a1 + 8) = result;
    int v2 = *(_DWORD *)(a2 + 248);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(_DWORD *)(a1 + 248) = v3;
    *(double *)(a1 + 16) = result;
    int v2 = *(_DWORD *)(a2 + 248);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    double result = *(double *)(a2 + 24);
    v3 |= 4u;
    *(_DWORD *)(a1 + 248) = v3;
    *(double *)(a1 + 24) = result;
    int v2 = *(_DWORD *)(a2 + 248);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_37;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 32) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = *(double *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 40) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = *(double *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 48) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x40) == 0)
  {
LABEL_11:
    if ((v2 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = *(double *)(a2 + 56);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 56) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x80) == 0)
  {
LABEL_12:
    if ((v2 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_41;
  }
LABEL_40:
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 64) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x100) == 0)
  {
LABEL_13:
    if ((v2 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_42;
  }
LABEL_41:
  double result = *(double *)(a2 + 72);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 72) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x200) == 0)
  {
LABEL_14:
    if ((v2 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_43;
  }
LABEL_42:
  double result = *(double *)(a2 + 80);
  v3 |= 0x200u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 80) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x400) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_44;
  }
LABEL_43:
  double result = *(double *)(a2 + 88);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 88) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_45;
  }
LABEL_44:
  double result = *(double *)(a2 + 96);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 96) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x1000) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_46;
  }
LABEL_45:
  double result = *(double *)(a2 + 104);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 104) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x2000) == 0)
  {
LABEL_18:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_47;
  }
LABEL_46:
  double result = *(double *)(a2 + 112);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 112) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x4000) == 0)
  {
LABEL_19:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_48;
  }
LABEL_47:
  double result = *(double *)(a2 + 120);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 120) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x8000) == 0)
  {
LABEL_20:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_49;
  }
LABEL_48:
  double result = *(double *)(a2 + 128);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 128) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x10000) == 0)
  {
LABEL_21:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_50;
  }
LABEL_49:
  double result = *(double *)(a2 + 136);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 136) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x20000) == 0)
  {
LABEL_22:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_51;
  }
LABEL_50:
  double result = *(double *)(a2 + 144);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 144) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x40000) == 0)
  {
LABEL_23:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_52;
  }
LABEL_51:
  double result = *(double *)(a2 + 152);
  v3 |= 0x40000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 152) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x80000) == 0)
  {
LABEL_24:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_53;
  }
LABEL_52:
  double result = *(double *)(a2 + 160);
  v3 |= 0x80000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 160) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x100000) == 0)
  {
LABEL_25:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_54;
  }
LABEL_53:
  double result = *(double *)(a2 + 168);
  v3 |= 0x100000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 168) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x200000) == 0)
  {
LABEL_26:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_55;
  }
LABEL_54:
  double result = *(double *)(a2 + 176);
  v3 |= 0x200000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 176) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x400000) == 0)
  {
LABEL_27:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_56;
  }
LABEL_55:
  double result = *(double *)(a2 + 184);
  v3 |= 0x400000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 184) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x800000) == 0)
  {
LABEL_28:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_57;
  }
LABEL_56:
  double result = *(double *)(a2 + 192);
  v3 |= 0x800000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 192) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_29:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_58;
  }
LABEL_57:
  double result = *(double *)(a2 + 200);
  v3 |= 0x1000000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 200) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_30:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_59;
  }
LABEL_58:
  double result = *(double *)(a2 + 216);
  v3 |= 0x4000000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 216) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_31:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_60;
  }
LABEL_59:
  double result = *(double *)(a2 + 224);
  v3 |= 0x8000000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 224) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_61;
  }
LABEL_60:
  double result = *(double *)(a2 + 232);
  v3 |= 0x10000000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 232) = result;
  int v2 = *(_DWORD *)(a2 + 248);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_33:
    if ((v2 & 0x2000000) == 0) {
      return result;
    }
LABEL_62:
    double result = *(double *)(a2 + 208);
    *(_DWORD *)(a1 + 248) = v3 | 0x2000000;
    *(double *)(a1 + 208) = result;
    return result;
  }
LABEL_61:
  double result = *(double *)(a2 + 240);
  v3 |= 0x20000000u;
  *(_DWORD *)(a1 + 248) = v3;
  *(double *)(a1 + 240) = result;
  if ((*(_DWORD *)(a2 + 248) & 0x2000000) != 0) {
    goto LABEL_62;
  }
  return result;
}

uint64_t sub_101736BEC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 248);
  if (v5)
  {
    PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityApCv", *(double *)(a1 + 8));
    int v5 = *(_DWORD *)(a1 + 248);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_37;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityApMean", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityApMedian", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityApQ5", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityApQ95", *(double *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityMlCv", *(double *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityMlMean", *(double *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityMlMedian", *(double *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityMlQ5", *(double *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityMlQ95", *(double *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityVtCv", *(double *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityVtMean", *(double *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityVtMedian", *(double *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityVtQ5", *(double *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "allBoutsStepIndexOfHarmonicityVtQ95", *(double *)(a1 + 120));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityApCv", *(double *)(a1 + 128));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityApMean", *(double *)(a1 + 136));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityApMedian", *(double *)(a1 + 144));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x40000) == 0)
  {
LABEL_20:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityApQ5", *(double *)(a1 + 152));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x80000) == 0)
  {
LABEL_21:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityApQ95", *(double *)(a1 + 160));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x100000) == 0)
  {
LABEL_22:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityMlCv", *(double *)(a1 + 168));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x200000) == 0)
  {
LABEL_23:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityMlMean", *(double *)(a1 + 176));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x400000) == 0)
  {
LABEL_24:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityMlMedian", *(double *)(a1 + 184));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x800000) == 0)
  {
LABEL_25:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityMlQ5", *(double *)(a1 + 192));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityMlQ95", *(double *)(a1 + 200));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityVtCv", *(double *)(a1 + 208));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityVtMean", *(double *)(a1 + 216));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityVtMedian", *(double *)(a1 + 224));
  int v5 = *(_DWORD *)(a1 + 248);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
LABEL_63:
  PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityVtQ5", *(double *)(a1 + 232));
  if ((*(_DWORD *)(a1 + 248) & 0x20000000) != 0) {
LABEL_31:
  }
    PB::TextFormatter::format(this, "allBoutsSwingIndexOfHarmonicityVtQ95", *(double *)(a1 + 240));
LABEL_32:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101736FF0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 248) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 2u:
          *(_DWORD *)(a1 + 248) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 3u:
          *(_DWORD *)(a1 + 248) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 4u:
          *(_DWORD *)(a1 + 248) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 5u:
          *(_DWORD *)(a1 + 248) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 6u:
          *(_DWORD *)(a1 + 248) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 7u:
          *(_DWORD *)(a1 + 248) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 8u:
          *(_DWORD *)(a1 + 248) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 9u:
          *(_DWORD *)(a1 + 248) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0xAu:
          *(_DWORD *)(a1 + 248) |= 0x200u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0xBu:
          *(_DWORD *)(a1 + 248) |= 0x400u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0xCu:
          *(_DWORD *)(a1 + 248) |= 0x800u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 96) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0xDu:
          *(_DWORD *)(a1 + 248) |= 0x1000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0xEu:
          *(_DWORD *)(a1 + 248) |= 0x2000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 112) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0xFu:
          *(_DWORD *)(a1 + 248) |= 0x4000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 120) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x10u:
          *(_DWORD *)(a1 + 248) |= 0x8000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 128) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x11u:
          *(_DWORD *)(a1 + 248) |= 0x10000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 136) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x12u:
          *(_DWORD *)(a1 + 248) |= 0x20000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 144) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x13u:
          *(_DWORD *)(a1 + 248) |= 0x40000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 152) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x14u:
          *(_DWORD *)(a1 + 248) |= 0x80000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 160) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x15u:
          *(_DWORD *)(a1 + 248) |= 0x100000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 168) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x16u:
          *(_DWORD *)(a1 + 248) |= 0x200000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 176) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x17u:
          *(_DWORD *)(a1 + 248) |= 0x400000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 184) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x18u:
          *(_DWORD *)(a1 + 248) |= 0x800000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 192) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x19u:
          *(_DWORD *)(a1 + 248) |= 0x1000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 200) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x1Au:
          *(_DWORD *)(a1 + 248) |= 0x4000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 216) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x1Bu:
          *(_DWORD *)(a1 + 248) |= 0x8000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 224) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x1Cu:
          *(_DWORD *)(a1 + 248) |= 0x10000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 232) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x1Du:
          *(_DWORD *)(a1 + 248) |= 0x20000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_113;
          }
          *(void *)(a1 + 240) = *(void *)(*(void *)this + v2);
          goto LABEL_115;
        case 0x1Eu:
          *(_DWORD *)(a1 + 248) |= 0x2000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
          {
LABEL_113:
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            *(void *)(a1 + 208) = *(void *)(*(void *)this + v2);
LABEL_115:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101737878(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 248);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    int v4 = *(_DWORD *)(v3 + 248);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_34;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 2u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 3u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 4u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 5u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 6u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 7u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 8u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72), 9u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x200) == 0)
  {
LABEL_11:
    if ((v4 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80), 0xAu);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x400) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 88), 0xBu);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 96), 0xCu);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x1000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 104), 0xDu);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x2000) == 0)
  {
LABEL_15:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 112), 0xEu);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x4000) == 0)
  {
LABEL_16:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 120), 0xFu);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x8000) == 0)
  {
LABEL_17:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 128), 0x10u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x10000) == 0)
  {
LABEL_18:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 136), 0x11u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x20000) == 0)
  {
LABEL_19:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 144), 0x12u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x40000) == 0)
  {
LABEL_20:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 152), 0x13u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x80000) == 0)
  {
LABEL_21:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 160), 0x14u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x100000) == 0)
  {
LABEL_22:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 168), 0x15u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x200000) == 0)
  {
LABEL_23:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 176), 0x16u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x400000) == 0)
  {
LABEL_24:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 184), 0x17u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x800000) == 0)
  {
LABEL_25:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 192), 0x18u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 200), 0x19u);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_27:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 216), 0x1Au);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_28:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 224), 0x1Bu);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_30;
    }
LABEL_60:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 240), 0x1Du);
    if ((*(_DWORD *)(v3 + 248) & 0x2000000) == 0) {
      return result;
    }
    goto LABEL_61;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 232), 0x1Cu);
  int v4 = *(_DWORD *)(v3 + 248);
  if ((v4 & 0x20000000) != 0) {
    goto LABEL_60;
  }
LABEL_30:
  if ((v4 & 0x2000000) == 0) {
    return result;
  }
LABEL_61:
  double v5 = *(double *)(v3 + 208);

  return PB::Writer::write(this, v5, 0x1Eu);
}

uint64_t sub_101737BF8(uint64_t result)
{
  *(void *)uint64_t result = &off_102338088;
  *(_DWORD *)(result + 52) = 0;
  return result;
}

void sub_101737C20(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101737C58(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338088;
  *(_DWORD *)(result + 52) = 0;
  char v2 = *(unsigned char *)(a2 + 52);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(result + 52) = 4;
    *(void *)(result + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 52);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 52) & 2) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 52) = v3;
    *(void *)(result + 16) = v5;
    char v2 = *(unsigned char *)(a2 + 52);
  }
LABEL_6:
  if (v2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 52) = v3;
    *(void *)(result + 8) = v6;
    char v2 = *(unsigned char *)(a2 + 52);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 48);
  v3 |= 0x80u;
  *(unsigned char *)(result + 52) = v3;
  *(_DWORD *)(result + 48) = v7;
  char v2 = *(unsigned char *)(a2 + 52);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
LABEL_15:
  int v8 = *(_DWORD *)(a2 + 36);
  v3 |= 0x10u;
  *(unsigned char *)(result + 52) = v3;
  *(_DWORD *)(result + 36) = v8;
  char v2 = *(unsigned char *)(a2 + 52);
  if ((v2 & 8) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v9 = *(_DWORD *)(a2 + 32);
  v3 |= 8u;
  *(unsigned char *)(result + 52) = v3;
  *(_DWORD *)(result + 32) = v9;
  char v2 = *(unsigned char *)(a2 + 52);
  if ((v2 & 0x40) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_18:
    int v11 = *(_DWORD *)(a2 + 40);
    *(unsigned char *)(result + 52) = v3 | 0x20;
    *(_DWORD *)(result + 40) = v11;
    return result;
  }
LABEL_17:
  int v10 = *(_DWORD *)(a2 + 44);
  v3 |= 0x40u;
  *(unsigned char *)(result + 52) = v3;
  *(_DWORD *)(result + 44) = v10;
  if ((*(unsigned char *)(a2 + 52) & 0x20) != 0) {
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_101737D64(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 52);
  if (v5)
  {
    PB::TextFormatter::format(this, "likelihoodNotOK", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 52) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "likelihoodOK", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "numDaysWithDataLast30Days", *(_DWORD *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 52);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "numDaysWithDataLast7Days", *(_DWORD *)(a1 + 36));
  char v5 = *(unsigned char *)(a1 + 52);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "numValidBouts28Days", *(_DWORD *)(a1 + 40));
  char v5 = *(unsigned char *)(a1 + 52);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 4) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    PB::TextFormatter::format(this, "rawSteadiness", *(double *)(a1 + 24));
    if ((*(unsigned char *)(a1 + 52) & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_17:
  PB::TextFormatter::format(this, "numValidBouts7Days", *(_DWORD *)(a1 + 44));
  char v5 = *(unsigned char *)(a1 + 52);
  if ((v5 & 4) != 0) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v5 & 0x80) == 0) {
    goto LABEL_9;
  }
LABEL_19:
  PB::TextFormatter::format(this, "rejectionStatus", *(_DWORD *)(a1 + 48));
LABEL_9:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101737EA8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 52) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_32;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_104;
            case 2u:
              *(unsigned char *)(a1 + 52) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_32;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_104;
            case 3u:
              *(unsigned char *)(a1 + 52) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_104:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_32:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_130;
            case 4u:
              *(unsigned char *)(a1 + 52) |= 0x80u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_109;
                  }
                  unint64_t v53 = v21++;
                  char v54 = *(unsigned char *)(v22 + v53);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_108:
                    unint64_t v2 = v53 + 1;
                    goto LABEL_109;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_108;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_109;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_109:
              *(_DWORD *)(a1 + 48) = v25;
              goto LABEL_130;
            case 5u:
              *(unsigned char *)(a1 + 52) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v55 = 0;
                unsigned int v56 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_114;
                  }
                  unint64_t v57 = v27++;
                  char v58 = *(unsigned char *)(v28 + v57);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  BOOL v14 = v56++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_113:
                    unint64_t v2 = v57 + 1;
                    goto LABEL_114;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_113;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_114;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_114:
              *(_DWORD *)(a1 + 36) = v31;
              goto LABEL_130;
            case 6u:
              *(unsigned char *)(a1 + 52) |= 8u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_119;
                  }
                  unint64_t v61 = v33++;
                  char v62 = *(unsigned char *)(v34 + v61);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_118:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_119;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_118;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_119;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_119:
              *(_DWORD *)(a1 + 32) = v37;
              goto LABEL_130;
            case 7u:
              *(unsigned char *)(a1 + 52) |= 0x40u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_124;
                  }
                  unint64_t v65 = v39++;
                  char v66 = *(unsigned char *)(v40 + v65);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_123:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_124;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_123;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_124;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_124:
              *(_DWORD *)(a1 + 44) = v43;
              goto LABEL_130;
            case 8u:
              *(unsigned char *)(a1 + 52) |= 0x20u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_129;
                  }
                  unint64_t v69 = v45++;
                  char v70 = *(unsigned char *)(v46 + v69);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_128:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_129;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_128;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_129;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_129:
              *(_DWORD *)(a1 + 40) = v49;
LABEL_130:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_130;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101738594(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 52);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24), 1u);
    char v4 = *(unsigned char *)(v3 + 52);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(result + 52) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 2u);
  char v4 = *(unsigned char *)(v3 + 52);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 3u);
  char v4 = *(unsigned char *)(v3 + 52);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 48), 4u);
  char v4 = *(unsigned char *)(v3 + 52);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 36), 5u);
  char v4 = *(unsigned char *)(v3 + 52);
  if ((v4 & 8) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 44), 7u);
    if ((*(unsigned char *)(v3 + 52) & 0x20) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 32), 6u);
  char v4 = *(unsigned char *)(v3 + 52);
  if ((v4 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_17:
  int v5 = *(_DWORD *)(v3 + 40);

  return PB::Writer::writeVarInt(this, v5, 8u);
}

uint64_t sub_1017386AC(uint64_t result)
{
  *(void *)uint64_t result = &off_1023380C0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_1017386D4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_10173870C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023380C0;
  *(_DWORD *)(a1 + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 8) != 0)
  {
    double result = *(double *)(a2 + 32);
    char v3 = 8;
    *(unsigned char *)(a1 + 40) = 8;
    *(double *)(a1 + 32) = result;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 4) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 40) = v3;
    *(double *)(a1 + 24) = result;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 2) == 0)
  {
    if ((v2 & 1) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 40) = v3 | 1;
    *(double *)(a1 + 8) = result;
    return result;
  }
  double result = *(double *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(a1 + 40) = v3;
  *(double *)(a1 + 16) = result;
  if (*(unsigned char *)(a2 + 40)) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1017387A8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if (v5)
  {
    PB::TextFormatter::format(this, "centroidSlopeHeightNormDoubleSupportPercentageCadence", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "centroidSlopeHeightNormWalkingSpeedStepLength", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "l2DispersionHeightNormDoubleSupportPercentageCadence", *(double *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 40) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "l2DispersionHeightNormWalkingSpeedStepLength", *(double *)(a1 + 32));
LABEL_6:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10173886C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 40) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
          goto LABEL_37;
        case 2u:
          *(unsigned char *)(a1 + 40) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 40) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 40) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101738AE4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32), 1u);
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 3u);
      if ((*(unsigned char *)(v3 + 40) & 1) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 2u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_9:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5, 4u);
}

uint64_t sub_101738B8C(uint64_t result)
{
  *(void *)uint64_t result = &off_1023380F8;
  *(_DWORD *)(result + 216) = 0;
  return result;
}

void sub_101738BB4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_101738BEC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023380F8;
  *(_DWORD *)(a1 + 216) = 0;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x80000) != 0)
  {
    double result = *(double *)(a2 + 160);
    int v3 = 0x80000;
    *(_DWORD *)(a1 + 216) = 0x80000;
    *(double *)(a1 + 160) = result;
    int v2 = *(_DWORD *)(a2 + 216);
    if ((v2 & 0x40000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x40000) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 152);
    v3 |= 0x40000u;
    *(_DWORD *)(a1 + 216) = v3;
    *(double *)(a1 + 152) = result;
    int v2 = *(_DWORD *)(a2 + 216);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(_DWORD *)(a1 + 216) = v3;
    *(double *)(a1 + 16) = result;
    int v2 = *(_DWORD *)(a2 + 216);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 0x100000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 8) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x100000) == 0)
  {
LABEL_9:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_33:
  double result = *(double *)(a2 + 168);
  v3 |= 0x100000u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 168) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x400000) == 0)
  {
LABEL_10:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
LABEL_34:
  double result = *(double *)(a2 + 184);
  v3 |= 0x400000u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 184) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x200000) == 0)
  {
LABEL_11:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  double result = *(double *)(a2 + 176);
  v3 |= 0x200000u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 176) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x800000) == 0)
  {
LABEL_12:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }
LABEL_36:
  double result = *(double *)(a2 + 192);
  v3 |= 0x800000u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 192) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_13:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = *(double *)(a2 + 208);
  v3 |= 0x2000000u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 208) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_14:
    if ((v2 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = *(double *)(a2 + 200);
  v3 |= 0x1000000u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 200) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 4) == 0)
  {
LABEL_15:
    if ((v2 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = *(double *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 24) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x10) == 0)
  {
LABEL_16:
    if ((v2 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_41;
  }
LABEL_40:
  double result = *(double *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 40) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 8) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_42;
  }
LABEL_41:
  double result = *(double *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 32) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_43;
  }
LABEL_42:
  double result = *(double *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 48) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x80) == 0)
  {
LABEL_19:
    if ((v2 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_44;
  }
LABEL_43:
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 64) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x40) == 0)
  {
LABEL_20:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_45;
  }
LABEL_44:
  double result = *(double *)(a2 + 56);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 56) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x2000) == 0)
  {
LABEL_21:
    if ((v2 & 0x200) == 0) {
      goto LABEL_22;
    }
    goto LABEL_46;
  }
LABEL_45:
  double result = *(double *)(a2 + 112);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 112) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x200) == 0)
  {
LABEL_22:
    if ((v2 & 0x100) == 0) {
      goto LABEL_23;
    }
    goto LABEL_47;
  }
LABEL_46:
  double result = *(double *)(a2 + 80);
  v3 |= 0x200u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 80) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x100) == 0)
  {
LABEL_23:
    if ((v2 & 0x400) == 0) {
      goto LABEL_24;
    }
    goto LABEL_48;
  }
LABEL_47:
  double result = *(double *)(a2 + 72);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 72) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x400) == 0)
  {
LABEL_24:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_49;
  }
LABEL_48:
  double result = *(double *)(a2 + 88);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 88) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x4000) == 0)
  {
LABEL_25:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_50;
  }
LABEL_49:
  double result = *(double *)(a2 + 120);
  v3 |= 0x4000u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 120) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x8000) == 0)
  {
LABEL_26:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_51;
  }
LABEL_50:
  double result = *(double *)(a2 + 128);
  v3 |= 0x8000u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 128) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x20000) == 0)
  {
LABEL_27:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_52;
  }
LABEL_51:
  double result = *(double *)(a2 + 144);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 144) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x10000) == 0)
  {
LABEL_28:
    if ((v2 & 0x800) == 0) {
      goto LABEL_29;
    }
    goto LABEL_53;
  }
LABEL_52:
  double result = *(double *)(a2 + 136);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 136) = result;
  int v2 = *(_DWORD *)(a2 + 216);
  if ((v2 & 0x800) == 0)
  {
LABEL_29:
    if ((v2 & 0x1000) == 0) {
      return result;
    }
LABEL_54:
    double result = *(double *)(a2 + 104);
    *(_DWORD *)(a1 + 216) = v3 | 0x1000;
    *(double *)(a1 + 104) = result;
    return result;
  }
LABEL_53:
  double result = *(double *)(a2 + 96);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 216) = v3;
  *(double *)(a1 + 96) = result;
  if ((*(_DWORD *)(a2 + 216) & 0x1000) != 0) {
    goto LABEL_54;
  }
  return result;
}

uint64_t sub_101738EF0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 216);
  if (v5)
  {
    PB::TextFormatter::format(this, "allBoutsCycleTimeEntropy5thTo95th", *(double *)(a1 + 8));
    int v5 = *(_DWORD *)(a1 + 216);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_33;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "allBoutsCycleTimeEntropyMean", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "allBoutsCycleTimePoincareSd1Mean", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "allBoutsCycleTimePoincareSd1P5", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "allBoutsCycleTimePoincareSd1P95", *(double *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "allBoutsCycleTimePoincareSd2Mean", *(double *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "allBoutsCycleTimePoincareSd2P5", *(double *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "allBoutsCycleTimePoincareSd2P95", *(double *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "allBoutsMinGaitMetrics21CycleTimeEntropy5thTo95thLog", *(double *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "allBoutsMinGaitMetrics21CycleTimeEntropyMeanLog", *(double *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "allBoutsMinGaitMetrics21CycleTimeEntropyP5Log", *(double *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "allBoutsMinGaitMetrics21CycleTimePoincareSd1P5Log", *(double *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "allBoutsMinGaitMetrics21CycleTimePoincareSd2P5Log", *(double *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "allBoutsMinGaitMetrics21StepLengthEntropyMeanLog", *(double *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "allBoutsMinGaitMetrics21StepLengthPoincareSd1P5Log", *(double *)(a1 + 120));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "allBoutsMinGaitMetrics21StepLengthPoincareSd1P95Log", *(double *)(a1 + 128));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "allBoutsMinGaitMetrics21StepLengthPoincareSd2MeanLog", *(double *)(a1 + 136));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "allBoutsMinGaitMetrics21StepLengthPoincareSd2P5Log", *(double *)(a1 + 144));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x40000) == 0)
  {
LABEL_20:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "allBoutsStepLengthEntropy5thTo95th", *(double *)(a1 + 152));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x80000) == 0)
  {
LABEL_21:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "allBoutsStepLengthEntropyMean", *(double *)(a1 + 160));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x100000) == 0)
  {
LABEL_22:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "allBoutsStepLengthPoincareSd1Mean", *(double *)(a1 + 168));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x200000) == 0)
  {
LABEL_23:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "allBoutsStepLengthPoincareSd1P5", *(double *)(a1 + 176));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x400000) == 0)
  {
LABEL_24:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "allBoutsStepLengthPoincareSd1P95", *(double *)(a1 + 184));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x800000) == 0)
  {
LABEL_25:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "allBoutsStepLengthPoincareSd2Mean", *(double *)(a1 + 192));
  int v5 = *(_DWORD *)(a1 + 216);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_55:
  PB::TextFormatter::format(this, "allBoutsStepLengthPoincareSd2P5", *(double *)(a1 + 200));
  if ((*(_DWORD *)(a1 + 216) & 0x2000000) != 0) {
LABEL_27:
  }
    PB::TextFormatter::format(this, "allBoutsStepLengthPoincareSd2P95", *(double *)(a1 + 208));
LABEL_28:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101739274(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 216) |= 0x80000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 160) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 2u:
          *(_DWORD *)(a1 + 216) |= 0x40000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 152) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 3u:
          *(_DWORD *)(a1 + 216) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 4u:
          *(_DWORD *)(a1 + 216) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 5u:
          *(_DWORD *)(a1 + 216) |= 0x100000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 168) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 6u:
          *(_DWORD *)(a1 + 216) |= 0x400000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 184) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 7u:
          *(_DWORD *)(a1 + 216) |= 0x200000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 176) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 8u:
          *(_DWORD *)(a1 + 216) |= 0x800000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 192) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 9u:
          *(_DWORD *)(a1 + 216) |= 0x2000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 208) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0xAu:
          *(_DWORD *)(a1 + 216) |= 0x1000000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 200) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0xBu:
          *(_DWORD *)(a1 + 216) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0xCu:
          *(_DWORD *)(a1 + 216) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0xDu:
          *(_DWORD *)(a1 + 216) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0xEu:
          *(_DWORD *)(a1 + 216) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0xFu:
          *(_DWORD *)(a1 + 216) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0x10u:
          *(_DWORD *)(a1 + 216) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0x11u:
          *(_DWORD *)(a1 + 216) |= 0x2000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 112) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0x12u:
          *(_DWORD *)(a1 + 216) |= 0x200u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0x13u:
          *(_DWORD *)(a1 + 216) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0x14u:
          *(_DWORD *)(a1 + 216) |= 0x400u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0x15u:
          *(_DWORD *)(a1 + 216) |= 0x4000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 120) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0x16u:
          *(_DWORD *)(a1 + 216) |= 0x8000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 128) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0x17u:
          *(_DWORD *)(a1 + 216) |= 0x20000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 144) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0x18u:
          *(_DWORD *)(a1 + 216) |= 0x10000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 136) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0x19u:
          *(_DWORD *)(a1 + 216) |= 0x800u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_101;
          }
          *(void *)(a1 + 96) = *(void *)(*(void *)this + v2);
          goto LABEL_103;
        case 0x1Au:
          *(_DWORD *)(a1 + 216) |= 0x1000u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2))
          {
LABEL_101:
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            *(void *)(a1 + 104) = *(void *)(*(void *)this + v2);
LABEL_103:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101739A0C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 216);
  if ((v4 & 0x80000) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 160), 1u);
    int v4 = *(_DWORD *)(v3 + 216);
    if ((v4 & 0x40000) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x40000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 152), 2u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 3u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 4u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x100000) == 0)
  {
LABEL_6:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 168), 5u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x400000) == 0)
  {
LABEL_7:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 184), 6u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x200000) == 0)
  {
LABEL_8:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 176), 7u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x800000) == 0)
  {
LABEL_9:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 192), 8u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 208), 9u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_11:
    if ((v4 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 200), 0xAu);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 4) == 0)
  {
LABEL_12:
    if ((v4 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 0xBu);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x10) == 0)
  {
LABEL_13:
    if ((v4 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 0xCu);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 8) == 0)
  {
LABEL_14:
    if ((v4 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 0xDu);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x20) == 0)
  {
LABEL_15:
    if ((v4 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 0xEu);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x80) == 0)
  {
LABEL_16:
    if ((v4 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 0xFu);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x40) == 0)
  {
LABEL_17:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 0x10u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x2000) == 0)
  {
LABEL_18:
    if ((v4 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 112), 0x11u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x200) == 0)
  {
LABEL_19:
    if ((v4 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80), 0x12u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x100) == 0)
  {
LABEL_20:
    if ((v4 & 0x400) == 0) {
      goto LABEL_21;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72), 0x13u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x400) == 0)
  {
LABEL_21:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 88), 0x14u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x4000) == 0)
  {
LABEL_22:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 120), 0x15u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x8000) == 0)
  {
LABEL_23:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 128), 0x16u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x20000) == 0)
  {
LABEL_24:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 144), 0x17u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x10000) == 0)
  {
LABEL_25:
    if ((v4 & 0x800) == 0) {
      goto LABEL_26;
    }
LABEL_52:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 96), 0x19u);
    if ((*(_DWORD *)(v3 + 216) & 0x1000) == 0) {
      return result;
    }
    goto LABEL_53;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 136), 0x18u);
  int v4 = *(_DWORD *)(v3 + 216);
  if ((v4 & 0x800) != 0) {
    goto LABEL_52;
  }
LABEL_26:
  if ((v4 & 0x1000) == 0) {
    return result;
  }
LABEL_53:
  double v5 = *(double *)(v3 + 104);

  return PB::Writer::write(this, v5, 0x1Au);
}

uint64_t sub_101739D1C(uint64_t result)
{
  *(void *)uint64_t result = &off_102338130;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_101739D44(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_101739D7C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338130;
  *(_DWORD *)(a1 + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 8) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 32);
    char v3 = 8;
    *(unsigned char *)(a1 + 40) = 8;
    *(_DWORD *)(a1 + 32) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 40))
  {
LABEL_5:
    double result = *(double *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(a1 + 40) = v3;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 40) = v3;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        return result;
      }
LABEL_12:
      double result = *(double *)(a2 + 24);
      *(unsigned char *)(a1 + 40) = v3 | 4;
      *(double *)(a1 + 24) = result;
      return result;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v6 = *(_DWORD *)(a2 + 36);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 36) = v6;
  if ((*(unsigned char *)(a2 + 40) & 4) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_101739E34(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if (v5)
  {
    PB::TextFormatter::format(this, "begin", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "bin", *(_DWORD *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "end", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 36));
  if ((*(unsigned char *)(a1 + 40) & 4) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "strideLength", *(double *)(a1 + 24));
LABEL_7:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101739F18(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 40) |= 8u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    LODWORD(v24) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_67;
                  }
                  unint64_t v35 = v20++;
                  char v36 = *(unsigned char *)(v21 + v35);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_66;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v24) = 0;
                }
LABEL_66:
                unint64_t v2 = v35 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_67;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                LODWORD(v24) = 0;
              }
LABEL_67:
              *(_DWORD *)(a1 + 32) = v24;
              goto LABEL_73;
            case 2u:
              *(unsigned char *)(a1 + 40) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_46;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_62;
            case 3u:
              *(unsigned char *)(a1 + 40) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_46;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_62;
            case 4u:
              *(unsigned char *)(a1 + 40) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_72;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_71:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_72;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_71;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_72;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_72:
              *(_DWORD *)(a1 + 36) = v31;
LABEL_73:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 5u:
              *(unsigned char *)(a1 + 40) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_62:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_46:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_73;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_73;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10173A334(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 32), 1u);
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 2u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 36), 4u);
    if ((*(unsigned char *)(v3 + 40) & 4) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 3u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x10) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_11:
  double v5 = *(double *)(v3 + 24);

  return PB::Writer::write(this, v5, 5u);
}

uint64_t sub_10173A3F8(uint64_t result)
{
  *(void *)uint64_t result = &off_102338168;
  *(void *)(result + 8) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 72) = 0;
  *(_DWORD *)(result + 152) = 0;
  return result;
}

void sub_10173A424(PB::Base *this)
{
  *(void *)this = &off_102338168;
  uint64_t v4 = *((void *)this + 9);
  unint64_t v2 = (void *)((char *)this + 72);
  uint64_t v3 = v4;
  *unint64_t v2 = 0;
  if (v4) {
    sub_10068D784((uint64_t)v2, v3);
  }
  uint64_t v5 = *((void *)this + 7);
  *((void *)this + 7) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }

  PB::Base::~Base(this);
}

void sub_10173A4E8(PB::Base *a1)
{
  sub_10173A424(a1);

  operator delete();
}

uint64_t sub_10173A520(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338168;
  *(void *)(result + 8) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 72) = 0;
  *(_DWORD *)(result + 152) = 0;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x80) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 88);
    int v3 = 128;
    *(_DWORD *)(result + 152) = 128;
    *(void *)(result + 88) = v4;
    int v2 = *(_DWORD *)(a2 + 152);
    if ((v2 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x40) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 80);
    v3 |= 0x40u;
    *(_DWORD *)(result + 152) = v3;
    *(void *)(result + 80) = v5;
    int v2 = *(_DWORD *)(a2 + 152);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 48);
    v3 |= 0x10u;
    *(_DWORD *)(result + 152) = v3;
    *(void *)(result + 48) = v7;
    int v2 = *(_DWORD *)(a2 + 152);
    if ((v2 & 0x100) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 0x100) == 0)
  {
    goto LABEL_8;
  }
  int v8 = *(_DWORD *)(a2 + 96);
  v3 |= 0x100u;
  *(_DWORD *)(result + 152) = v3;
  *(_DWORD *)(result + 96) = v8;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v9 = *(void *)(a2 + 40);
  v3 |= 8u;
  *(_DWORD *)(result + 152) = v3;
  *(void *)(result + 40) = v9;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v10 = *(void *)(a2 + 64);
  v3 |= 0x20u;
  *(_DWORD *)(result + 152) = v3;
  *(void *)(result + 64) = v10;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x4000) == 0)
  {
LABEL_11:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v11 = *(_DWORD *)(a2 + 120);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 152) = v3;
  *(_DWORD *)(result + 120) = v11;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 0x8000) == 0)
  {
LABEL_12:
    if ((v2 & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v12 = *(_DWORD *)(a2 + 124);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 152) = v3;
  *(_DWORD *)(result + 124) = v12;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 4) == 0)
  {
LABEL_13:
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v13 = *(void *)(a2 + 32);
  v3 |= 4u;
  *(_DWORD *)(result + 152) = v3;
  *(void *)(result + 32) = v13;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 2) == 0)
  {
LABEL_14:
    if ((v2 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v14 = *(void *)(a2 + 24);
  v3 |= 2u;
  *(_DWORD *)(result + 152) = v3;
  *(void *)(result + 24) = v14;
  int v2 = *(_DWORD *)(a2 + 152);
  if ((v2 & 1) == 0)
  {
LABEL_15:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_27:
  uint64_t v15 = *(void *)(a2 + 16);
  v3 |= 1u;
  *(_DWORD *)(result + 152) = v3;
  *(void *)(result + 16) = v15;
  if ((*(_DWORD *)(a2 + 152) & 0x80000) != 0)
  {
LABEL_16:
    int v6 = *(_DWORD *)(a2 + 140);
    *(_DWORD *)(result + 152) = v3 | 0x80000;
    *(_DWORD *)(result + 140) = v6;
  }
LABEL_17:
  if (*(void *)(a2 + 72)) {
    operator new();
  }
  int v16 = *(_DWORD *)(a2 + 152);
  if ((v16 & 0x200000) != 0)
  {
    char v17 = *(unsigned char *)(a2 + 148);
    *(_DWORD *)(result + 152) |= 0x200000u;
    *(unsigned char *)(result + 148) = v17;
    int v16 = *(_DWORD *)(a2 + 152);
  }
  if ((v16 & 0x400000) != 0)
  {
    char v18 = *(unsigned char *)(a2 + 149);
    *(_DWORD *)(result + 152) |= 0x400000u;
    *(unsigned char *)(result + 149) = v18;
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  int v19 = *(_DWORD *)(a2 + 152);
  if ((v19 & 0x40000) != 0)
  {
    int v22 = *(_DWORD *)(a2 + 136);
    *(_DWORD *)(result + 152) |= 0x40000u;
    *(_DWORD *)(result + 136) = v22;
    int v19 = *(_DWORD *)(a2 + 152);
    if ((v19 & 0x100000) == 0)
    {
LABEL_37:
      if ((v19 & 0x20000) == 0) {
        goto LABEL_38;
      }
      goto LABEL_51;
    }
  }
  else if ((v19 & 0x100000) == 0)
  {
    goto LABEL_37;
  }
  int v23 = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(result + 152) |= 0x100000u;
  *(_DWORD *)(result + 144) = v23;
  int v19 = *(_DWORD *)(a2 + 152);
  if ((v19 & 0x20000) == 0)
  {
LABEL_38:
    if ((v19 & 0x400) == 0) {
      goto LABEL_39;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v24 = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(result + 152) |= 0x20000u;
  *(_DWORD *)(result + 132) = v24;
  int v19 = *(_DWORD *)(a2 + 152);
  if ((v19 & 0x400) == 0)
  {
LABEL_39:
    if ((v19 & 0x800) == 0) {
      goto LABEL_40;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v25 = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(result + 152) |= 0x400u;
  *(_DWORD *)(result + 104) = v25;
  int v19 = *(_DWORD *)(a2 + 152);
  if ((v19 & 0x800) == 0)
  {
LABEL_40:
    if ((v19 & 0x2000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v26 = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(result + 152) |= 0x800u;
  *(_DWORD *)(result + 108) = v26;
  int v19 = *(_DWORD *)(a2 + 152);
  if ((v19 & 0x2000) == 0)
  {
LABEL_41:
    if ((v19 & 0x200) == 0) {
      goto LABEL_42;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v27 = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(result + 152) |= 0x2000u;
  *(_DWORD *)(result + 116) = v27;
  int v19 = *(_DWORD *)(a2 + 152);
  if ((v19 & 0x200) == 0)
  {
LABEL_42:
    if ((v19 & 0x1000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_43;
  }
LABEL_55:
  int v28 = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(result + 152) |= 0x200u;
  *(_DWORD *)(result + 100) = v28;
  if ((*(_DWORD *)(a2 + 152) & 0x1000) != 0)
  {
LABEL_43:
    int v20 = *(_DWORD *)(a2 + 112);
    *(_DWORD *)(result + 152) |= 0x1000u;
    *(_DWORD *)(result + 112) = v20;
  }
LABEL_44:
  if (*(void *)(a2 + 56)) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 154))
  {
    int v21 = *(_DWORD *)(a2 + 128);
    *(_DWORD *)(result + 152) |= 0x10000u;
    *(_DWORD *)(result + 128) = v21;
  }
  return result;
}

uint64_t sub_10173A948(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "accelerometerPace");
  }
  int v6 = *(_DWORD *)(a1 + 152);
  if (v6)
  {
    PB::TextFormatter::format(this, "activeTime", *(double *)(a1 + 16));
    int v6 = *(_DWORD *)(a1 + 152);
    if ((v6 & 0x100) == 0)
    {
LABEL_5:
      if ((v6 & 2) == 0) {
        goto LABEL_6;
      }
      goto LABEL_38;
    }
  }
  else if ((v6 & 0x100) == 0)
  {
    goto LABEL_5;
  }
  PB::TextFormatter::format(this, "count", *(_DWORD *)(a1 + 96));
  int v6 = *(_DWORD *)(a1 + 152);
  if ((v6 & 2) == 0)
  {
LABEL_6:
    if ((v6 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "currentCadence", *(double *)(a1 + 24));
  int v6 = *(_DWORD *)(a1 + 152);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "currentPace", *(double *)(a1 + 32));
  int v6 = *(_DWORD *)(a1 + 152);
  if ((v6 & 8) == 0)
  {
LABEL_8:
    if ((v6 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "distance", *(double *)(a1 + 40));
  int v6 = *(_DWORD *)(a1 + 152);
  if ((v6 & 0x200) == 0)
  {
LABEL_9:
    if ((v6 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "distanceSource", *(_DWORD *)(a1 + 100));
  int v6 = *(_DWORD *)(a1 + 152);
  if ((v6 & 0x400) == 0)
  {
LABEL_10:
    if ((v6 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "elevationAscended", *(_DWORD *)(a1 + 104));
  int v6 = *(_DWORD *)(a1 + 152);
  if ((v6 & 0x800) == 0)
  {
LABEL_11:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "elevationDescended", *(_DWORD *)(a1 + 108));
  int v6 = *(_DWORD *)(a1 + 152);
  if ((v6 & 0x1000) == 0)
  {
LABEL_12:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "falseStepDetectorState", *(_DWORD *)(a1 + 112));
  int v6 = *(_DWORD *)(a1 + 152);
  if ((v6 & 0x2000) == 0)
  {
LABEL_13:
    if ((v6 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "falseStepsSuppressed", *(_DWORD *)(a1 + 116));
  int v6 = *(_DWORD *)(a1 + 152);
  if ((v6 & 0x10) == 0)
  {
LABEL_14:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "firstStepTime", *(double *)(a1 + 48));
  int v6 = *(_DWORD *)(a1 + 152);
  if ((v6 & 0x4000) == 0)
  {
LABEL_15:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "floorsAscended", *(_DWORD *)(a1 + 120));
  int v6 = *(_DWORD *)(a1 + 152);
  if ((v6 & 0x8000) == 0)
  {
LABEL_16:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "floorsDescended", *(_DWORD *)(a1 + 124));
  int v6 = *(_DWORD *)(a1 + 152);
  if ((v6 & 0x200000) == 0)
  {
LABEL_17:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_49:
  PB::TextFormatter::format(this, "isOdometerDistance", *(unsigned char *)(a1 + 148));
  if ((*(_DWORD *)(a1 + 152) & 0x400000) != 0) {
LABEL_18:
  }
    PB::TextFormatter::format(this, "isOdometerPace", *(unsigned char *)(a1 + 149));
LABEL_19:
  uint64_t v7 = *(void *)(a1 + 56);
  if (v7) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "movementStats");
  }
  int v8 = *(_DWORD *)(a1 + 152);
  if ((v8 & 0x10000) != 0)
  {
    PB::TextFormatter::format(this, "paceSource", *(_DWORD *)(a1 + 128));
    int v8 = *(_DWORD *)(a1 + 152);
    if ((v8 & 0x20000) == 0)
    {
LABEL_23:
      if ((v8 & 0x40000) == 0) {
        goto LABEL_24;
      }
      goto LABEL_53;
    }
  }
  else if ((v8 & 0x20000) == 0)
  {
    goto LABEL_23;
  }
  PB::TextFormatter::format(this, "pedometerArmConstrainedState", *(_DWORD *)(a1 + 132));
  int v8 = *(_DWORD *)(a1 + 152);
  if ((v8 & 0x40000) == 0)
  {
LABEL_24:
    if ((v8 & 0x20) == 0) {
      goto LABEL_25;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "pushCount", *(_DWORD *)(a1 + 136));
  int v8 = *(_DWORD *)(a1 + 152);
  if ((v8 & 0x20) == 0)
  {
LABEL_25:
    if ((v8 & 0x80000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_54:
  PB::TextFormatter::format(this, "rawDistance", *(double *)(a1 + 64));
  if ((*(_DWORD *)(a1 + 152) & 0x80000) != 0) {
LABEL_26:
  }
    PB::TextFormatter::format(this, "recordId", *(_DWORD *)(a1 + 140));
LABEL_27:
  if (*(void *)(a1 + 72)) {
    PB::TextFormatter::format();
  }
  int v9 = *(_DWORD *)(a1 + 152);
  if ((v9 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 80));
    int v9 = *(_DWORD *)(a1 + 152);
    if ((v9 & 0x80) == 0)
    {
LABEL_31:
      if ((v9 & 0x100000) == 0) {
        goto LABEL_33;
      }
      goto LABEL_32;
    }
  }
  else if ((v9 & 0x80) == 0)
  {
    goto LABEL_31;
  }
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 88));
  if ((*(_DWORD *)(a1 + 152) & 0x100000) != 0) {
LABEL_32:
  }
    PB::TextFormatter::format(this, "workoutType", *(_DWORD *)(a1 + 144));
LABEL_33:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10173ACF4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 152) |= 0x80u;
          unint64_t v20 = *((void *)this + 1);
          if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v20);
          goto LABEL_242;
        case 2u:
          *(_DWORD *)(a1 + 152) |= 0x40u;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v22);
          goto LABEL_242;
        case 3u:
          *(_DWORD *)(a1 + 152) |= 0x10u;
          unint64_t v23 = *((void *)this + 1);
          if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v23);
          goto LABEL_242;
        case 4u:
          *(_DWORD *)(a1 + 152) |= 0x100u;
          unint64_t v24 = *((void *)this + 1);
          unint64_t v25 = *((void *)this + 2);
          uint64_t v26 = *(void *)this;
          if (v24 <= 0xFFFFFFFFFFFFFFF5 && v24 + 10 <= v25)
          {
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            do
            {
              unint64_t v30 = v24 + 1;
              *((void *)this + 1) = v24 + 1;
              char v31 = *(unsigned char *)(v26 + v24);
              v29 |= (unint64_t)(v31 & 0x7F) << v27;
              if ((v31 & 0x80) == 0) {
                goto LABEL_246;
              }
              v27 += 7;
              unint64_t v24 = v30;
              BOOL v14 = v28++ > 8;
            }
            while (!v14);
LABEL_152:
            LODWORD(v29) = 0;
            goto LABEL_246;
          }
          char v141 = 0;
          unsigned int v142 = 0;
          uint64_t v29 = 0;
          if (v25 <= v24) {
            unint64_t v25 = *((void *)this + 1);
          }
          while (2)
          {
            if (v25 == v24)
            {
              LODWORD(v29) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v143 = v24 + 1;
              char v144 = *(unsigned char *)(v26 + v24);
              *((void *)this + 1) = v143;
              v29 |= (unint64_t)(v144 & 0x7F) << v141;
              if (v144 < 0)
              {
                v141 += 7;
                unint64_t v24 = v143;
                BOOL v14 = v142++ > 8;
                if (v14) {
                  goto LABEL_152;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v29) = 0;
              }
            }
            break;
          }
LABEL_246:
          *(_DWORD *)(a1 + 96) = v29;
          goto LABEL_295;
        case 5u:
          *(_DWORD *)(a1 + 152) |= 8u;
          unint64_t v32 = *((void *)this + 1);
          if (v32 > 0xFFFFFFFFFFFFFFF7 || v32 + 8 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v32);
          goto LABEL_242;
        case 6u:
          *(_DWORD *)(a1 + 152) |= 0x20u;
          unint64_t v33 = *((void *)this + 1);
          if (v33 > 0xFFFFFFFFFFFFFFF7 || v33 + 8 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v33);
          goto LABEL_242;
        case 7u:
          *(_DWORD *)(a1 + 152) |= 0x4000u;
          unint64_t v34 = *((void *)this + 1);
          unint64_t v35 = *((void *)this + 2);
          uint64_t v36 = *(void *)this;
          if (v34 <= 0xFFFFFFFFFFFFFFF5 && v34 + 10 <= v35)
          {
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v39 = 0;
            do
            {
              unint64_t v40 = v34 + 1;
              *((void *)this + 1) = v34 + 1;
              char v41 = *(unsigned char *)(v36 + v34);
              v39 |= (unint64_t)(v41 & 0x7F) << v37;
              if ((v41 & 0x80) == 0) {
                goto LABEL_250;
              }
              v37 += 7;
              unint64_t v34 = v40;
              BOOL v14 = v38++ > 8;
            }
            while (!v14);
LABEL_159:
            LODWORD(v39) = 0;
            goto LABEL_250;
          }
          char v145 = 0;
          unsigned int v146 = 0;
          uint64_t v39 = 0;
          if (v35 <= v34) {
            unint64_t v35 = *((void *)this + 1);
          }
          while (2)
          {
            if (v35 == v34)
            {
              LODWORD(v39) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v147 = v34 + 1;
              char v148 = *(unsigned char *)(v36 + v34);
              *((void *)this + 1) = v147;
              v39 |= (unint64_t)(v148 & 0x7F) << v145;
              if (v148 < 0)
              {
                v145 += 7;
                unint64_t v34 = v147;
                BOOL v14 = v146++ > 8;
                if (v14) {
                  goto LABEL_159;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v39) = 0;
              }
            }
            break;
          }
LABEL_250:
          *(_DWORD *)(a1 + 120) = v39;
          goto LABEL_295;
        case 8u:
          *(_DWORD *)(a1 + 152) |= 0x8000u;
          unint64_t v42 = *((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
          uint64_t v44 = *(void *)this;
          if (v42 <= 0xFFFFFFFFFFFFFFF5 && v42 + 10 <= v43)
          {
            char v45 = 0;
            unsigned int v46 = 0;
            uint64_t v47 = 0;
            do
            {
              unint64_t v48 = v42 + 1;
              *((void *)this + 1) = v42 + 1;
              char v49 = *(unsigned char *)(v44 + v42);
              v47 |= (unint64_t)(v49 & 0x7F) << v45;
              if ((v49 & 0x80) == 0) {
                goto LABEL_254;
              }
              v45 += 7;
              unint64_t v42 = v48;
              BOOL v14 = v46++ > 8;
            }
            while (!v14);
LABEL_166:
            LODWORD(v47) = 0;
            goto LABEL_254;
          }
          char v149 = 0;
          unsigned int v150 = 0;
          uint64_t v47 = 0;
          if (v43 <= v42) {
            unint64_t v43 = *((void *)this + 1);
          }
          while (2)
          {
            if (v43 == v42)
            {
              LODWORD(v47) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v151 = v42 + 1;
              char v152 = *(unsigned char *)(v44 + v42);
              *((void *)this + 1) = v151;
              v47 |= (unint64_t)(v152 & 0x7F) << v149;
              if (v152 < 0)
              {
                v149 += 7;
                unint64_t v42 = v151;
                BOOL v14 = v150++ > 8;
                if (v14) {
                  goto LABEL_166;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v47) = 0;
              }
            }
            break;
          }
LABEL_254:
          *(_DWORD *)(a1 + 124) = v47;
          goto LABEL_295;
        case 9u:
          *(_DWORD *)(a1 + 152) |= 4u;
          unint64_t v50 = *((void *)this + 1);
          if (v50 > 0xFFFFFFFFFFFFFFF7 || v50 + 8 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v50);
          goto LABEL_242;
        case 0xAu:
          *(_DWORD *)(a1 + 152) |= 2u;
          unint64_t v51 = *((void *)this + 1);
          if (v51 > 0xFFFFFFFFFFFFFFF7 || v51 + 8 > *((void *)this + 2)) {
            goto LABEL_68;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v51);
          goto LABEL_242;
        case 0xBu:
          *(_DWORD *)(a1 + 152) |= 1u;
          unint64_t v52 = *((void *)this + 1);
          if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v52);
LABEL_242:
            *((void *)this + 1) += 8;
          }
          else
          {
LABEL_68:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_295;
        case 0xCu:
          *(_DWORD *)(a1 + 152) |= 0x80000u;
          unint64_t v53 = *((void *)this + 1);
          unint64_t v54 = *((void *)this + 2);
          uint64_t v55 = *(void *)this;
          if (v53 <= 0xFFFFFFFFFFFFFFF5 && v53 + 10 <= v54)
          {
            char v56 = 0;
            unsigned int v57 = 0;
            uint64_t v58 = 0;
            do
            {
              unint64_t v59 = v53 + 1;
              *((void *)this + 1) = v53 + 1;
              char v60 = *(unsigned char *)(v55 + v53);
              v58 |= (unint64_t)(v60 & 0x7F) << v56;
              if ((v60 & 0x80) == 0) {
                goto LABEL_258;
              }
              v56 += 7;
              unint64_t v53 = v59;
              BOOL v14 = v57++ > 8;
            }
            while (!v14);
LABEL_173:
            LODWORD(v58) = 0;
            goto LABEL_258;
          }
          char v153 = 0;
          unsigned int v154 = 0;
          uint64_t v58 = 0;
          if (v54 <= v53) {
            unint64_t v54 = *((void *)this + 1);
          }
          while (2)
          {
            if (v54 == v53)
            {
              LODWORD(v58) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v155 = v53 + 1;
              char v156 = *(unsigned char *)(v55 + v53);
              *((void *)this + 1) = v155;
              v58 |= (unint64_t)(v156 & 0x7F) << v153;
              if (v156 < 0)
              {
                v153 += 7;
                unint64_t v53 = v155;
                BOOL v14 = v154++ > 8;
                if (v14) {
                  goto LABEL_173;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v58) = 0;
              }
            }
            break;
          }
LABEL_258:
          *(_DWORD *)(a1 + 140) = v58;
          goto LABEL_295;
        case 0xDu:
          operator new();
        case 0xEu:
          *(_DWORD *)(a1 + 152) |= 0x200000u;
          unint64_t v61 = *((void *)this + 1);
          if (v61 >= *((void *)this + 2))
          {
            BOOL v64 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v62 = v61 + 1;
            int v63 = *(unsigned __int8 *)(*(void *)this + v61);
            *((void *)this + 1) = v62;
            BOOL v64 = v63 != 0;
          }
          *(unsigned char *)(a1 + 148) = v64;
          goto LABEL_295;
        case 0xFu:
          *(_DWORD *)(a1 + 152) |= 0x400000u;
          unint64_t v65 = *((void *)this + 1);
          if (v65 >= *((void *)this + 2))
          {
            BOOL v68 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v66 = v65 + 1;
            int v67 = *(unsigned __int8 *)(*(void *)this + v65);
            *((void *)this + 1) = v66;
            BOOL v68 = v67 != 0;
          }
          *(unsigned char *)(a1 + 149) = v68;
          goto LABEL_295;
        case 0x10u:
          operator new();
        case 0x11u:
          *(_DWORD *)(a1 + 152) |= 0x40000u;
          unint64_t v69 = *((void *)this + 1);
          unint64_t v70 = *((void *)this + 2);
          uint64_t v71 = *(void *)this;
          if (v69 <= 0xFFFFFFFFFFFFFFF5 && v69 + 10 <= v70)
          {
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            do
            {
              unint64_t v75 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              char v76 = *(unsigned char *)(v71 + v69);
              v74 |= (unint64_t)(v76 & 0x7F) << v72;
              if ((v76 & 0x80) == 0) {
                goto LABEL_262;
              }
              v72 += 7;
              unint64_t v69 = v75;
              BOOL v14 = v73++ > 8;
            }
            while (!v14);
LABEL_184:
            LODWORD(v74) = 0;
            goto LABEL_262;
          }
          char v157 = 0;
          unsigned int v158 = 0;
          uint64_t v74 = 0;
          if (v70 <= v69) {
            unint64_t v70 = *((void *)this + 1);
          }
          while (2)
          {
            if (v70 == v69)
            {
              LODWORD(v74) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v159 = v69 + 1;
              char v160 = *(unsigned char *)(v71 + v69);
              *((void *)this + 1) = v159;
              v74 |= (unint64_t)(v160 & 0x7F) << v157;
              if (v160 < 0)
              {
                v157 += 7;
                unint64_t v69 = v159;
                BOOL v14 = v158++ > 8;
                if (v14) {
                  goto LABEL_184;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v74) = 0;
              }
            }
            break;
          }
LABEL_262:
          *(_DWORD *)(a1 + 136) = v74;
          goto LABEL_295;
        case 0x12u:
          *(_DWORD *)(a1 + 152) |= 0x100000u;
          unint64_t v77 = *((void *)this + 1);
          unint64_t v78 = *((void *)this + 2);
          uint64_t v79 = *(void *)this;
          if (v77 <= 0xFFFFFFFFFFFFFFF5 && v77 + 10 <= v78)
          {
            char v80 = 0;
            unsigned int v81 = 0;
            uint64_t v82 = 0;
            do
            {
              unint64_t v83 = v77 + 1;
              *((void *)this + 1) = v77 + 1;
              char v84 = *(unsigned char *)(v79 + v77);
              v82 |= (unint64_t)(v84 & 0x7F) << v80;
              if ((v84 & 0x80) == 0) {
                goto LABEL_266;
              }
              v80 += 7;
              unint64_t v77 = v83;
              BOOL v14 = v81++ > 8;
            }
            while (!v14);
LABEL_191:
            LODWORD(v82) = 0;
            goto LABEL_266;
          }
          char v161 = 0;
          unsigned int v162 = 0;
          uint64_t v82 = 0;
          if (v78 <= v77) {
            unint64_t v78 = *((void *)this + 1);
          }
          while (2)
          {
            if (v78 == v77)
            {
              LODWORD(v82) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v163 = v77 + 1;
              char v164 = *(unsigned char *)(v79 + v77);
              *((void *)this + 1) = v163;
              v82 |= (unint64_t)(v164 & 0x7F) << v161;
              if (v164 < 0)
              {
                v161 += 7;
                unint64_t v77 = v163;
                BOOL v14 = v162++ > 8;
                if (v14) {
                  goto LABEL_191;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v82) = 0;
              }
            }
            break;
          }
LABEL_266:
          *(_DWORD *)(a1 + 144) = v82;
          goto LABEL_295;
        case 0x13u:
          *(_DWORD *)(a1 + 152) |= 0x20000u;
          unint64_t v85 = *((void *)this + 1);
          unint64_t v86 = *((void *)this + 2);
          uint64_t v87 = *(void *)this;
          if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
          {
            char v88 = 0;
            unsigned int v89 = 0;
            uint64_t v90 = 0;
            do
            {
              unint64_t v91 = v85 + 1;
              *((void *)this + 1) = v85 + 1;
              char v92 = *(unsigned char *)(v87 + v85);
              v90 |= (unint64_t)(v92 & 0x7F) << v88;
              if ((v92 & 0x80) == 0) {
                goto LABEL_270;
              }
              v88 += 7;
              unint64_t v85 = v91;
              BOOL v14 = v89++ > 8;
            }
            while (!v14);
LABEL_198:
            LODWORD(v90) = 0;
            goto LABEL_270;
          }
          char v165 = 0;
          unsigned int v166 = 0;
          uint64_t v90 = 0;
          if (v86 <= v85) {
            unint64_t v86 = *((void *)this + 1);
          }
          while (2)
          {
            if (v86 == v85)
            {
              LODWORD(v90) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v167 = v85 + 1;
              char v168 = *(unsigned char *)(v87 + v85);
              *((void *)this + 1) = v167;
              v90 |= (unint64_t)(v168 & 0x7F) << v165;
              if (v168 < 0)
              {
                v165 += 7;
                unint64_t v85 = v167;
                BOOL v14 = v166++ > 8;
                if (v14) {
                  goto LABEL_198;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v90) = 0;
              }
            }
            break;
          }
LABEL_270:
          *(_DWORD *)(a1 + 132) = v90;
          goto LABEL_295;
        case 0x14u:
          *(_DWORD *)(a1 + 152) |= 0x400u;
          unint64_t v93 = *((void *)this + 1);
          unint64_t v94 = *((void *)this + 2);
          uint64_t v95 = *(void *)this;
          if (v93 <= 0xFFFFFFFFFFFFFFF5 && v93 + 10 <= v94)
          {
            char v96 = 0;
            unsigned int v97 = 0;
            uint64_t v98 = 0;
            do
            {
              unint64_t v99 = v93 + 1;
              *((void *)this + 1) = v93 + 1;
              char v100 = *(unsigned char *)(v95 + v93);
              v98 |= (unint64_t)(v100 & 0x7F) << v96;
              if ((v100 & 0x80) == 0) {
                goto LABEL_274;
              }
              v96 += 7;
              unint64_t v93 = v99;
              BOOL v14 = v97++ > 8;
            }
            while (!v14);
LABEL_205:
            LODWORD(v98) = 0;
            goto LABEL_274;
          }
          char v169 = 0;
          unsigned int v170 = 0;
          uint64_t v98 = 0;
          if (v94 <= v93) {
            unint64_t v94 = *((void *)this + 1);
          }
          while (2)
          {
            if (v94 == v93)
            {
              LODWORD(v98) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v171 = v93 + 1;
              char v172 = *(unsigned char *)(v95 + v93);
              *((void *)this + 1) = v171;
              v98 |= (unint64_t)(v172 & 0x7F) << v169;
              if (v172 < 0)
              {
                v169 += 7;
                unint64_t v93 = v171;
                BOOL v14 = v170++ > 8;
                if (v14) {
                  goto LABEL_205;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v98) = 0;
              }
            }
            break;
          }
LABEL_274:
          *(_DWORD *)(a1 + 104) = v98;
          goto LABEL_295;
        case 0x15u:
          *(_DWORD *)(a1 + 152) |= 0x800u;
          unint64_t v101 = *((void *)this + 1);
          unint64_t v102 = *((void *)this + 2);
          uint64_t v103 = *(void *)this;
          if (v101 <= 0xFFFFFFFFFFFFFFF5 && v101 + 10 <= v102)
          {
            char v104 = 0;
            unsigned int v105 = 0;
            uint64_t v106 = 0;
            do
            {
              unint64_t v107 = v101 + 1;
              *((void *)this + 1) = v101 + 1;
              char v108 = *(unsigned char *)(v103 + v101);
              v106 |= (unint64_t)(v108 & 0x7F) << v104;
              if ((v108 & 0x80) == 0) {
                goto LABEL_278;
              }
              v104 += 7;
              unint64_t v101 = v107;
              BOOL v14 = v105++ > 8;
            }
            while (!v14);
LABEL_212:
            LODWORD(v106) = 0;
            goto LABEL_278;
          }
          char v173 = 0;
          unsigned int v174 = 0;
          uint64_t v106 = 0;
          if (v102 <= v101) {
            unint64_t v102 = *((void *)this + 1);
          }
          while (2)
          {
            if (v102 == v101)
            {
              LODWORD(v106) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v175 = v101 + 1;
              char v176 = *(unsigned char *)(v103 + v101);
              *((void *)this + 1) = v175;
              v106 |= (unint64_t)(v176 & 0x7F) << v173;
              if (v176 < 0)
              {
                v173 += 7;
                unint64_t v101 = v175;
                BOOL v14 = v174++ > 8;
                if (v14) {
                  goto LABEL_212;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v106) = 0;
              }
            }
            break;
          }
LABEL_278:
          *(_DWORD *)(a1 + 108) = v106;
          goto LABEL_295;
        case 0x16u:
          *(_DWORD *)(a1 + 152) |= 0x2000u;
          unint64_t v109 = *((void *)this + 1);
          unint64_t v110 = *((void *)this + 2);
          uint64_t v111 = *(void *)this;
          if (v109 <= 0xFFFFFFFFFFFFFFF5 && v109 + 10 <= v110)
          {
            char v112 = 0;
            unsigned int v113 = 0;
            uint64_t v114 = 0;
            do
            {
              unint64_t v115 = v109 + 1;
              *((void *)this + 1) = v109 + 1;
              char v116 = *(unsigned char *)(v111 + v109);
              v114 |= (unint64_t)(v116 & 0x7F) << v112;
              if ((v116 & 0x80) == 0) {
                goto LABEL_282;
              }
              v112 += 7;
              unint64_t v109 = v115;
              BOOL v14 = v113++ > 8;
            }
            while (!v14);
LABEL_219:
            LODWORD(v114) = 0;
            goto LABEL_282;
          }
          char v177 = 0;
          unsigned int v178 = 0;
          uint64_t v114 = 0;
          if (v110 <= v109) {
            unint64_t v110 = *((void *)this + 1);
          }
          while (2)
          {
            if (v110 == v109)
            {
              LODWORD(v114) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v179 = v109 + 1;
              char v180 = *(unsigned char *)(v111 + v109);
              *((void *)this + 1) = v179;
              v114 |= (unint64_t)(v180 & 0x7F) << v177;
              if (v180 < 0)
              {
                v177 += 7;
                unint64_t v109 = v179;
                BOOL v14 = v178++ > 8;
                if (v14) {
                  goto LABEL_219;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v114) = 0;
              }
            }
            break;
          }
LABEL_282:
          *(_DWORD *)(a1 + 116) = v114;
          goto LABEL_295;
        case 0x17u:
          *(_DWORD *)(a1 + 152) |= 0x200u;
          unint64_t v117 = *((void *)this + 1);
          unint64_t v118 = *((void *)this + 2);
          uint64_t v119 = *(void *)this;
          if (v117 <= 0xFFFFFFFFFFFFFFF5 && v117 + 10 <= v118)
          {
            char v120 = 0;
            unsigned int v121 = 0;
            uint64_t v122 = 0;
            do
            {
              unint64_t v123 = v117 + 1;
              *((void *)this + 1) = v117 + 1;
              char v124 = *(unsigned char *)(v119 + v117);
              v122 |= (unint64_t)(v124 & 0x7F) << v120;
              if ((v124 & 0x80) == 0) {
                goto LABEL_286;
              }
              v120 += 7;
              unint64_t v117 = v123;
              BOOL v14 = v121++ > 8;
            }
            while (!v14);
LABEL_226:
            LODWORD(v122) = 0;
            goto LABEL_286;
          }
          char v181 = 0;
          unsigned int v182 = 0;
          uint64_t v122 = 0;
          if (v118 <= v117) {
            unint64_t v118 = *((void *)this + 1);
          }
          while (2)
          {
            if (v118 == v117)
            {
              LODWORD(v122) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v183 = v117 + 1;
              char v184 = *(unsigned char *)(v119 + v117);
              *((void *)this + 1) = v183;
              v122 |= (unint64_t)(v184 & 0x7F) << v181;
              if (v184 < 0)
              {
                v181 += 7;
                unint64_t v117 = v183;
                BOOL v14 = v182++ > 8;
                if (v14) {
                  goto LABEL_226;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v122) = 0;
              }
            }
            break;
          }
LABEL_286:
          *(_DWORD *)(a1 + 100) = v122;
          goto LABEL_295;
        case 0x18u:
          *(_DWORD *)(a1 + 152) |= 0x1000u;
          unint64_t v125 = *((void *)this + 1);
          unint64_t v126 = *((void *)this + 2);
          uint64_t v127 = *(void *)this;
          if (v125 <= 0xFFFFFFFFFFFFFFF5 && v125 + 10 <= v126)
          {
            char v128 = 0;
            unsigned int v129 = 0;
            uint64_t v130 = 0;
            do
            {
              unint64_t v131 = v125 + 1;
              *((void *)this + 1) = v125 + 1;
              char v132 = *(unsigned char *)(v127 + v125);
              v130 |= (unint64_t)(v132 & 0x7F) << v128;
              if ((v132 & 0x80) == 0) {
                goto LABEL_290;
              }
              v128 += 7;
              unint64_t v125 = v131;
              BOOL v14 = v129++ > 8;
            }
            while (!v14);
LABEL_233:
            LODWORD(v130) = 0;
            goto LABEL_290;
          }
          char v185 = 0;
          unsigned int v186 = 0;
          uint64_t v130 = 0;
          if (v126 <= v125) {
            unint64_t v126 = *((void *)this + 1);
          }
          while (2)
          {
            if (v126 == v125)
            {
              LODWORD(v130) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v187 = v125 + 1;
              char v188 = *(unsigned char *)(v127 + v125);
              *((void *)this + 1) = v187;
              v130 |= (unint64_t)(v188 & 0x7F) << v185;
              if (v188 < 0)
              {
                v185 += 7;
                unint64_t v125 = v187;
                BOOL v14 = v186++ > 8;
                if (v14) {
                  goto LABEL_233;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v130) = 0;
              }
            }
            break;
          }
LABEL_290:
          *(_DWORD *)(a1 + 112) = v130;
          goto LABEL_295;
        case 0x19u:
          operator new();
        case 0x1Au:
          *(_DWORD *)(a1 + 152) |= 0x10000u;
          unint64_t v133 = *((void *)this + 1);
          unint64_t v134 = *((void *)this + 2);
          uint64_t v135 = *(void *)this;
          if (v133 <= 0xFFFFFFFFFFFFFFF5 && v133 + 10 <= v134)
          {
            char v136 = 0;
            unsigned int v137 = 0;
            uint64_t v138 = 0;
            do
            {
              unint64_t v139 = v133 + 1;
              *((void *)this + 1) = v133 + 1;
              char v140 = *(unsigned char *)(v135 + v133);
              v138 |= (unint64_t)(v140 & 0x7F) << v136;
              if ((v140 & 0x80) == 0) {
                goto LABEL_294;
              }
              v136 += 7;
              unint64_t v133 = v139;
              BOOL v14 = v137++ > 8;
            }
            while (!v14);
LABEL_240:
            LODWORD(v138) = 0;
            goto LABEL_294;
          }
          char v189 = 0;
          unsigned int v190 = 0;
          uint64_t v138 = 0;
          if (v134 <= v133) {
            unint64_t v134 = *((void *)this + 1);
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_295;
      }
      while (1)
      {
        if (v134 == v133)
        {
          LODWORD(v138) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_294;
        }
        unint64_t v191 = v133 + 1;
        char v192 = *(unsigned char *)(v135 + v133);
        *((void *)this + 1) = v191;
        v138 |= (unint64_t)(v192 & 0x7F) << v189;
        if ((v192 & 0x80) == 0) {
          break;
        }
        v189 += 7;
        unint64_t v133 = v191;
        BOOL v14 = v190++ > 8;
        if (v14) {
          goto LABEL_240;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v138) = 0;
      }
LABEL_294:
      *(_DWORD *)(a1 + 128) = v138;
LABEL_295:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10173BE64(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 152);
  if ((v4 & 0x80) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 88), 1u);
    int v4 = *(_DWORD *)(v3 + 152);
    if ((v4 & 0x40) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_37;
    }
  }
  else if ((v4 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80), 2u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 0x100) == 0) {
      goto LABEL_5;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 3u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x100) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 96), 4u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 5u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 6u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x4000) == 0)
  {
LABEL_8:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 120), 7u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x8000) == 0)
  {
LABEL_9:
    if ((v4 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 124), 8u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 4) == 0)
  {
LABEL_10:
    if ((v4 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 9u);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 2) == 0)
  {
LABEL_11:
    if ((v4 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 0xAu);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 1) == 0)
  {
LABEL_12:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 0xBu);
  if ((*(_DWORD *)(v3 + 152) & 0x80000) != 0) {
LABEL_13:
  }
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 140), 0xCu);
LABEL_14:
  if (*(void *)(v3 + 72)) {
    uint64_t result = PB::Writer::write();
  }
  int v5 = *(_DWORD *)(v3 + 152);
  if ((v5 & 0x200000) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 148), 0xEu);
    int v5 = *(_DWORD *)(v3 + 152);
  }
  if ((v5 & 0x400000) != 0) {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 149), 0xFu);
  }
  int v6 = *(const PB::Base **)(v3 + 8);
  if (v6) {
    uint64_t result = PB::Writer::writeSubmessage(this, v6, 0x10u);
  }
  int v7 = *(_DWORD *)(v3 + 152);
  if ((v7 & 0x40000) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 136), 0x11u);
    int v7 = *(_DWORD *)(v3 + 152);
    if ((v7 & 0x100000) == 0)
    {
LABEL_24:
      if ((v7 & 0x20000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_49;
    }
  }
  else if ((v7 & 0x100000) == 0)
  {
    goto LABEL_24;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 144), 0x12u);
  int v7 = *(_DWORD *)(v3 + 152);
  if ((v7 & 0x20000) == 0)
  {
LABEL_25:
    if ((v7 & 0x400) == 0) {
      goto LABEL_26;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 132), 0x13u);
  int v7 = *(_DWORD *)(v3 + 152);
  if ((v7 & 0x400) == 0)
  {
LABEL_26:
    if ((v7 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 104), 0x14u);
  int v7 = *(_DWORD *)(v3 + 152);
  if ((v7 & 0x800) == 0)
  {
LABEL_27:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 108), 0x15u);
  int v7 = *(_DWORD *)(v3 + 152);
  if ((v7 & 0x2000) == 0)
  {
LABEL_28:
    if ((v7 & 0x200) == 0) {
      goto LABEL_29;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 116), 0x16u);
  int v7 = *(_DWORD *)(v3 + 152);
  if ((v7 & 0x200) == 0)
  {
LABEL_29:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_53:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 100), 0x17u);
  if ((*(_DWORD *)(v3 + 152) & 0x1000) != 0) {
LABEL_30:
  }
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 112), 0x18u);
LABEL_31:
  uint64_t v8 = *(const PB::Base **)(v3 + 56);
  if (v8) {
    uint64_t result = PB::Writer::writeSubmessage(this, v8, 0x19u);
  }
  if (*(unsigned char *)(v3 + 154))
  {
    int v9 = *(_DWORD *)(v3 + 128);
    return PB::Writer::writeVarInt(this, v9, 0x1Au);
  }
  return result;
}

uint64_t sub_10173C154(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10173C1E4(uint64_t result)
{
  *(void *)uint64_t result = &off_1023381A0;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

void sub_10173C20C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10173C244(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023381A0;
  *(_DWORD *)(result + 72) = 0;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 0x20) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 48);
    __int16 v3 = 32;
    *(_WORD *)(result + 72) = 32;
    *(void *)(result + 48) = v4;
    __int16 v2 = *(_WORD *)(a2 + 72);
    if ((v2 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x80) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 64);
    v3 |= 0x80u;
    *(_WORD *)(result + 72) = v3;
    *(_DWORD *)(result + 64) = v5;
    __int16 v2 = *(_WORD *)(a2 + 72);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    v3 |= 4u;
    *(_WORD *)(result + 72) = v3;
    *(void *)(result + 24) = v6;
    __int16 v2 = *(_WORD *)(a2 + 72);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 72) = v3;
  *(void *)(result + 32) = v7;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v8 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 72) = v3;
  *(void *)(result + 40) = v8;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 0x200) == 0)
  {
LABEL_10:
    if ((v2 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  char v9 = *(unsigned char *)(a2 + 69);
  v3 |= 0x200u;
  *(_WORD *)(result + 72) = v3;
  *(unsigned char *)(result + 69) = v9;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 1) == 0)
  {
LABEL_11:
    if ((v2 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v10 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 72) = v3;
  *(void *)(result + 8) = v10;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 0x40) == 0)
  {
LABEL_12:
    if ((v2 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v11 = *(void *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(result + 72) = v3;
  *(void *)(result + 56) = v11;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 0x400) == 0)
  {
LABEL_13:
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  char v12 = *(unsigned char *)(a2 + 70);
  v3 |= 0x400u;
  *(_WORD *)(result + 72) = v3;
  *(unsigned char *)(result + 70) = v12;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 2) == 0)
  {
LABEL_14:
    if ((v2 & 0x100) == 0) {
      return result;
    }
LABEL_24:
    char v14 = *(unsigned char *)(a2 + 68);
    *(_WORD *)(result + 72) = v3 | 0x100;
    *(unsigned char *)(result + 68) = v14;
    return result;
  }
LABEL_23:
  uint64_t v13 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 72) = v3;
  *(void *)(result + 16) = v13;
  if ((*(_WORD *)(a2 + 72) & 0x100) != 0) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_10173C3A4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 72);
  if (v5)
  {
    PB::TextFormatter::format(this, "calibratedDistance", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 72);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "energyDeltaDistance", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 0x100) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "energyIsCalibrated", *(unsigned char *)(a1 + 68));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "incrementalActiveTime", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 0x80) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "incrementalSteps", *(_DWORD *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 8) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "lastStepTime", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "odometerSpeed", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "rawPace", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "rawPaceDidJump", *(unsigned char *)(a1 + 69));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 0x40) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "stepCadenceDeltaDistance", *(double *)(a1 + 56));
  if ((*(_WORD *)(a1 + 72) & 0x400) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "stepCadenceIsCalibrated", *(unsigned char *)(a1 + 70));
LABEL_13:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10173C548(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 72) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_72;
            case 2u:
              *(_WORD *)(a1 + 72) |= 0x80u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_77;
                  }
                  unint64_t v35 = v21++;
                  char v36 = *(unsigned char *)(v22 + v35);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_76:
                    unint64_t v2 = v35 + 1;
                    goto LABEL_77;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_76;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_77;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_77:
              *(_DWORD *)(a1 + 64) = v25;
LABEL_78:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 3u:
              *(_WORD *)(a1 + 72) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_72;
            case 4u:
              *(_WORD *)(a1 + 72) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_72;
            case 5u:
              *(_WORD *)(a1 + 72) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_72;
            case 6u:
              *(_WORD *)(a1 + 72) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 69) = v28;
              goto LABEL_78;
            case 7u:
              *(_WORD *)(a1 + 72) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_72;
            case 8u:
              *(_WORD *)(a1 + 72) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_55;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_72;
            case 9u:
              *(_WORD *)(a1 + 72) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 70) = v30;
              goto LABEL_78;
            case 0xAu:
              *(_WORD *)(a1 + 72) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_72:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_55:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_78;
            case 0xBu:
              *(_WORD *)(a1 + 72) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v32 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v31 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v32 = v31 != 0;
              }
              *(unsigned char *)(a1 + 68) = v32;
              goto LABEL_78;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_78;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10173CA3C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 72);
  if ((v4 & 0x20) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 48), 1u);
    __int16 v4 = *(_WORD *)(v3 + 72);
    if ((v4 & 0x80) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 64), 2u);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 3u);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 4u);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 5u);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 0x200) == 0)
  {
LABEL_7:
    if ((v4 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 69), 6u);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 1) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 7u);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 8u);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 0x400) == 0)
  {
LABEL_10:
    if ((v4 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 0xAu);
    if ((*(_WORD *)(v3 + 72) & 0x100) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 70), 9u);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 2) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v4 & 0x100) == 0) {
    return result;
  }
LABEL_23:
  char v5 = *(unsigned char *)(v3 + 68);

  return PB::Writer::write(this, v5, 0xBu);
}

uint64_t sub_10173CBA8(uint64_t result)
{
  *(_DWORD *)(result + 100) = 0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)uint64_t result = &off_1023381D8;
  return result;
}

void sub_10173CBD0(PB::Base *this)
{
  *(void *)this = &off_1023381D8;
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 1);
  *((void *)this + 1) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }

  PB::Base::~Base(this);
}

void sub_10173CC84(PB::Base *a1)
{
  sub_10173CBD0(a1);

  operator delete();
}

uint64_t sub_10173CCBC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023381D8;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 100) = 0;
  *(void *)(result + 16) = 0;
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  __int16 v2 = *(_WORD *)(a2 + 100);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    *(_WORD *)(result + 100) |= 1u;
    *(void *)(result + 24) = v4;
    __int16 v2 = *(_WORD *)(a2 + 100);
    if ((v2 & 2) == 0)
    {
LABEL_7:
      if ((v2 & 0x80) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  *(_WORD *)(result + 100) |= 2u;
  *(void *)(result + 32) = v5;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x80) == 0)
  {
LABEL_8:
    if ((v2 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v6 = *(void *)(a2 + 80);
  *(_WORD *)(result + 100) |= 0x80u;
  *(void *)(result + 80) = v6;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v7 = *(void *)(a2 + 64);
  *(_WORD *)(result + 100) |= 0x20u;
  *(void *)(result + 64) = v7;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v8 = *(void *)(a2 + 72);
  *(_WORD *)(result + 100) |= 0x40u;
  *(void *)(result + 72) = v8;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 4) == 0)
  {
LABEL_11:
    if ((v2 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v9 = *(void *)(a2 + 40);
  *(_WORD *)(result + 100) |= 4u;
  *(void *)(result + 40) = v9;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 8) == 0)
  {
LABEL_12:
    if ((v2 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v10 = *(void *)(a2 + 48);
  *(_WORD *)(result + 100) |= 8u;
  *(void *)(result + 48) = v10;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v11 = *(void *)(a2 + 56);
  *(_WORD *)(result + 100) |= 0x10u;
  *(void *)(result + 56) = v11;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x400) == 0)
  {
LABEL_14:
    if ((v2 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v12 = *(unsigned char *)(a2 + 96);
  *(_WORD *)(result + 100) |= 0x400u;
  *(unsigned char *)(result + 96) = v12;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x200) == 0)
  {
LABEL_15:
    if ((v2 & 0x100) == 0) {
      return result;
    }
    goto LABEL_16;
  }
LABEL_27:
  int v13 = *(_DWORD *)(a2 + 92);
  *(_WORD *)(result + 100) |= 0x200u;
  *(_DWORD *)(result + 92) = v13;
  if ((*(_WORD *)(a2 + 100) & 0x100) == 0) {
    return result;
  }
LABEL_16:
  int v3 = *(_DWORD *)(a2 + 88);
  *(_WORD *)(result + 100) |= 0x100u;
  *(_DWORD *)(result + 88) = v3;
  return result;
}

uint64_t sub_10173CF38(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "addition");
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "fused");
  }
  __int16 v7 = *(_WORD *)(a1 + 100);
  if ((v7 & 0x400) != 0)
  {
    PB::TextFormatter::format(this, "isVehicular", *(unsigned char *)(a1 + 96));
    __int16 v7 = *(_WORD *)(a1 + 100);
    if ((v7 & 1) == 0)
    {
LABEL_7:
      if ((v7 & 0x100) == 0) {
        goto LABEL_8;
      }
      goto LABEL_22;
    }
  }
  else if ((v7 & 1) == 0)
  {
    goto LABEL_7;
  }
  PB::TextFormatter::format(this, "odometerDeltaDistance", *(double *)(a1 + 24));
  __int16 v7 = *(_WORD *)(a1 + 100);
  if ((v7 & 0x100) == 0)
  {
LABEL_8:
    if ((v7 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "odometerQuality", *(_DWORD *)(a1 + 88));
  __int16 v7 = *(_WORD *)(a1 + 100);
  if ((v7 & 2) == 0)
  {
LABEL_9:
    if ((v7 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "odometerSmoothMeanPace", *(double *)(a1 + 32));
  __int16 v7 = *(_WORD *)(a1 + 100);
  if ((v7 & 0x200) == 0)
  {
LABEL_10:
    if ((v7 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "pedometerDistanceSource", *(_DWORD *)(a1 + 92));
  __int16 v7 = *(_WORD *)(a1 + 100);
  if ((v7 & 4) == 0)
  {
LABEL_11:
    if ((v7 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "speedStdDevOdometer", *(double *)(a1 + 40));
  __int16 v7 = *(_WORD *)(a1 + 100);
  if ((v7 & 8) == 0)
  {
LABEL_12:
    if ((v7 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "speedStdDevPedometer", *(double *)(a1 + 48));
  __int16 v7 = *(_WORD *)(a1 + 100);
  if ((v7 & 0x10) == 0)
  {
LABEL_13:
    if ((v7 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "speedStdDevResidualTolerance", *(double *)(a1 + 56));
  __int16 v7 = *(_WORD *)(a1 + 100);
  if ((v7 & 0x20) == 0)
  {
LABEL_14:
    if ((v7 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "totalDistanceCalibratedPedometer", *(double *)(a1 + 64));
  __int16 v7 = *(_WORD *)(a1 + 100);
  if ((v7 & 0x40) == 0)
  {
LABEL_15:
    if ((v7 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_29:
  PB::TextFormatter::format(this, "totalDistanceFused", *(double *)(a1 + 72));
  if ((*(_WORD *)(a1 + 100) & 0x80) != 0) {
LABEL_16:
  }
    PB::TextFormatter::format(this, "totalDistanceOdometer", *(double *)(a1 + 80));
LABEL_17:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10173D14C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          operator new();
        case 2u:
          operator new();
        case 3u:
          *(_WORD *)(a1 + 100) |= 1u;
          unint64_t v21 = *((void *)this + 1);
          if (v21 > 0xFFFFFFFFFFFFFFF7 || v21 + 8 > *((void *)this + 2)) {
            goto LABEL_49;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v21);
          goto LABEL_83;
        case 4u:
          *(_WORD *)(a1 + 100) |= 2u;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
            goto LABEL_49;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v22);
          goto LABEL_83;
        case 5u:
          *(_WORD *)(a1 + 100) |= 0x80u;
          unint64_t v23 = *((void *)this + 1);
          if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > *((void *)this + 2)) {
            goto LABEL_49;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v23);
          goto LABEL_83;
        case 6u:
          *(_WORD *)(a1 + 100) |= 0x20u;
          unint64_t v24 = *((void *)this + 1);
          if (v24 > 0xFFFFFFFFFFFFFFF7 || v24 + 8 > *((void *)this + 2)) {
            goto LABEL_49;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v24);
          goto LABEL_83;
        case 7u:
          *(_WORD *)(a1 + 100) |= 0x40u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_49;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v25);
          goto LABEL_83;
        case 8u:
          *(_WORD *)(a1 + 100) |= 4u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_49;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v26);
          goto LABEL_83;
        case 9u:
          *(_WORD *)(a1 + 100) |= 8u;
          unint64_t v27 = *((void *)this + 1);
          if (v27 > 0xFFFFFFFFFFFFFFF7 || v27 + 8 > *((void *)this + 2)) {
            goto LABEL_49;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v27);
          goto LABEL_83;
        case 0xAu:
          *(_WORD *)(a1 + 100) |= 0x10u;
          unint64_t v28 = *((void *)this + 1);
          if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 56) = *(void *)(*(void *)this + v28);
LABEL_83:
            *((void *)this + 1) += 8;
          }
          else
          {
LABEL_49:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_92;
        case 0xBu:
          *(_WORD *)(a1 + 100) |= 0x400u;
          unint64_t v29 = *((void *)this + 1);
          if (v29 >= *((void *)this + 2))
          {
            BOOL v32 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v30 = v29 + 1;
            int v31 = *(unsigned __int8 *)(*(void *)this + v29);
            *((void *)this + 1) = v30;
            BOOL v32 = v31 != 0;
          }
          *(unsigned char *)(a1 + 96) = v32;
          goto LABEL_92;
        case 0xCu:
          *(_WORD *)(a1 + 100) |= 0x200u;
          unint64_t v33 = *((void *)this + 1);
          unint64_t v34 = *((void *)this + 2);
          uint64_t v35 = *(void *)this;
          if (v33 <= 0xFFFFFFFFFFFFFFF5 && v33 + 10 <= v34)
          {
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v38 = 0;
            do
            {
              unint64_t v39 = v33 + 1;
              *((void *)this + 1) = v33 + 1;
              char v40 = *(unsigned char *)(v35 + v33);
              v38 |= (unint64_t)(v40 & 0x7F) << v36;
              if ((v40 & 0x80) == 0) {
                goto LABEL_87;
              }
              v36 += 7;
              unint64_t v33 = v39;
              BOOL v14 = v37++ > 8;
            }
            while (!v14);
LABEL_74:
            LODWORD(v38) = 0;
            goto LABEL_87;
          }
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v38 = 0;
          if (v34 <= v33) {
            unint64_t v34 = *((void *)this + 1);
          }
          while (2)
          {
            if (v34 == v33)
            {
              LODWORD(v38) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v51 = v33 + 1;
              char v52 = *(unsigned char *)(v35 + v33);
              *((void *)this + 1) = v51;
              v38 |= (unint64_t)(v52 & 0x7F) << v49;
              if (v52 < 0)
              {
                v49 += 7;
                unint64_t v33 = v51;
                BOOL v14 = v50++ > 8;
                if (v14) {
                  goto LABEL_74;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v38) = 0;
              }
            }
            break;
          }
LABEL_87:
          *(_DWORD *)(a1 + 92) = v38;
          goto LABEL_92;
        case 0xDu:
          *(_WORD *)(a1 + 100) |= 0x100u;
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          uint64_t v43 = *(void *)this;
          if (v41 <= 0xFFFFFFFFFFFFFFF5 && v41 + 10 <= v42)
          {
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            do
            {
              unint64_t v47 = v41 + 1;
              *((void *)this + 1) = v41 + 1;
              char v48 = *(unsigned char *)(v43 + v41);
              v46 |= (unint64_t)(v48 & 0x7F) << v44;
              if ((v48 & 0x80) == 0) {
                goto LABEL_91;
              }
              v44 += 7;
              unint64_t v41 = v47;
              BOOL v14 = v45++ > 8;
            }
            while (!v14);
LABEL_81:
            LODWORD(v46) = 0;
            goto LABEL_91;
          }
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v46 = 0;
          if (v42 <= v41) {
            unint64_t v42 = *((void *)this + 1);
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_92;
      }
      while (1)
      {
        if (v42 == v41)
        {
          LODWORD(v46) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_91;
        }
        unint64_t v55 = v41 + 1;
        char v56 = *(unsigned char *)(v43 + v41);
        *((void *)this + 1) = v55;
        v46 |= (unint64_t)(v56 & 0x7F) << v53;
        if ((v56 & 0x80) == 0) {
          break;
        }
        v53 += 7;
        unint64_t v41 = v55;
        BOOL v14 = v54++ > 8;
        if (v14) {
          goto LABEL_81;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v46) = 0;
      }
LABEL_91:
      *(_DWORD *)(a1 + 88) = v46;
LABEL_92:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10173D81C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 16);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4, 1u);
  }
  uint64_t v5 = *(const PB::Base **)(v3 + 8);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5, 2u);
  }
  __int16 v6 = *(_WORD *)(v3 + 100);
  if (v6)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 3u);
    __int16 v6 = *(_WORD *)(v3 + 100);
    if ((v6 & 2) == 0)
    {
LABEL_7:
      if ((v6 & 0x80) == 0) {
        goto LABEL_8;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 4u);
  __int16 v6 = *(_WORD *)(v3 + 100);
  if ((v6 & 0x80) == 0)
  {
LABEL_8:
    if ((v6 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80), 5u);
  __int16 v6 = *(_WORD *)(v3 + 100);
  if ((v6 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 6u);
  __int16 v6 = *(_WORD *)(v3 + 100);
  if ((v6 & 0x40) == 0)
  {
LABEL_10:
    if ((v6 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72), 7u);
  __int16 v6 = *(_WORD *)(v3 + 100);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 8u);
  __int16 v6 = *(_WORD *)(v3 + 100);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 9u);
  __int16 v6 = *(_WORD *)(v3 + 100);
  if ((v6 & 0x10) == 0)
  {
LABEL_13:
    if ((v6 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 0xAu);
  __int16 v6 = *(_WORD *)(v3 + 100);
  if ((v6 & 0x400) == 0)
  {
LABEL_14:
    if ((v6 & 0x200) == 0) {
      goto LABEL_15;
    }
LABEL_26:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 92), 0xCu);
    if ((*(_WORD *)(v3 + 100) & 0x100) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 96), 0xBu);
  __int16 v6 = *(_WORD *)(v3 + 100);
  if ((v6 & 0x200) != 0) {
    goto LABEL_26;
  }
LABEL_15:
  if ((v6 & 0x100) == 0) {
    return result;
  }
LABEL_27:
  int v7 = *(_DWORD *)(v3 + 88);

  return PB::Writer::writeVarInt(this, v7, 0xDu);
}

uint64_t sub_10173D9B0(uint64_t result)
{
  *(void *)uint64_t result = &off_102338210;
  *(_DWORD *)(result + 96) = 0;
  return result;
}

void sub_10173D9D8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_10173DA10(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338210;
  *(_DWORD *)(a1 + 96) = 0;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x40) != 0)
  {
    double result = *(double *)(a2 + 56);
    __int16 v3 = 64;
    *(_WORD *)(a1 + 96) = 64;
    *(double *)(a1 + 56) = result;
    __int16 v2 = *(_WORD *)(a2 + 96);
    if ((v2 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 96) & 0x400) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 88);
    v3 |= 0x400u;
    *(_WORD *)(a1 + 96) = v3;
    *(double *)(a1 + 88) = result;
    __int16 v2 = *(_WORD *)(a2 + 96);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    double result = *(double *)(a2 + 48);
    v3 |= 0x20u;
    *(_WORD *)(a1 + 96) = v3;
    *(double *)(a1 + 48) = result;
    __int16 v2 = *(_WORD *)(a2 + 96);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x200) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(a1 + 96) = v3;
  *(double *)(a1 + 32) = result;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x200) == 0)
  {
LABEL_9:
    if ((v2 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  double result = *(double *)(a2 + 80);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 96) = v3;
  *(double *)(a1 + 80) = result;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x100) == 0)
  {
LABEL_10:
    if ((v2 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  double result = *(double *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 96) = v3;
  *(double *)(a1 + 72) = result;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  double result = *(double *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(a1 + 96) = v3;
  *(double *)(a1 + 40) = result;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  double result = *(double *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(a1 + 96) = v3;
  *(double *)(a1 + 24) = result;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 2) == 0)
  {
LABEL_13:
    if ((v2 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  double result = *(double *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(a1 + 96) = v3;
  *(double *)(a1 + 16) = result;
  __int16 v2 = *(_WORD *)(a2 + 96);
  if ((v2 & 0x80) == 0)
  {
LABEL_14:
    if ((v2 & 1) == 0) {
      return result;
    }
LABEL_24:
    double result = *(double *)(a2 + 8);
    *(_WORD *)(a1 + 96) = v3 | 1;
    *(double *)(a1 + 8) = result;
    return result;
  }
LABEL_23:
  double result = *(double *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 96) = v3;
  *(double *)(a1 + 64) = result;
  if (*(_WORD *)(a2 + 96)) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_10173DB70(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 96);
  if (v5)
  {
    PB::TextFormatter::format(this, "bobbiness", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 96);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "bufferAvgSampleRateHz", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "concavityDeltaDeg", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "deltaInertialZVel", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "horizontalDisplacement", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "impulseDurationSec", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "likelihoodRatio", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "peakiness", *(double *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "thetaPitchFaceDeg", *(double *)(a1 + 72));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "thetaRollFaceDeg", *(double *)(a1 + 80));
  if ((*(_WORD *)(a1 + 96) & 0x400) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "timeSinceLastStepSec", *(double *)(a1 + 88));
LABEL_13:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10173DD14(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 96) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
          goto LABEL_58;
        case 2u:
          *(_WORD *)(a1 + 96) |= 0x400u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v2);
          goto LABEL_58;
        case 3u:
          *(_WORD *)(a1 + 96) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
          goto LABEL_58;
        case 4u:
          *(_WORD *)(a1 + 96) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
          goto LABEL_58;
        case 5u:
          *(_WORD *)(a1 + 96) |= 0x200u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
          goto LABEL_58;
        case 6u:
          *(_WORD *)(a1 + 96) |= 0x100u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
          goto LABEL_58;
        case 7u:
          *(_WORD *)(a1 + 96) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
          goto LABEL_58;
        case 8u:
          *(_WORD *)(a1 + 96) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_58;
        case 9u:
          *(_WORD *)(a1 + 96) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_58;
        case 0xAu:
          *(_WORD *)(a1 + 96) |= 0x80u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_54;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
          goto LABEL_58;
        case 0xBu:
          *(_WORD *)(a1 + 96) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_58:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_54:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10173E130(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 96);
  if ((v4 & 0x40) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 56), 1u);
    __int16 v4 = *(_WORD *)(v3 + 96);
    if ((v4 & 0x400) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((*(_WORD *)(result + 96) & 0x400) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 88), 2u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 3u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 4u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x200) == 0)
  {
LABEL_6:
    if ((v4 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80), 5u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x100) == 0)
  {
LABEL_7:
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72), 6u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x10) == 0)
  {
LABEL_8:
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 7u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 4) == 0)
  {
LABEL_9:
    if ((v4 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 8u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 2) == 0)
  {
LABEL_10:
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 0xAu);
    if ((*(_WORD *)(v3 + 96) & 1) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 9u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x80) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_23:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5, 0xBu);
}

void *sub_10173E29C(void *result)
{
  *uint64_t result = &off_102338248;
  result[1] = 0;
  return result;
}

void sub_10173E2BC(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338248;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10173E33C(PB::Base *a1)
{
  sub_10173E2BC(a1);

  operator delete();
}

void *sub_10173E374(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338248;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10173E41C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10173E498(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10173E694(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_10173E6B0(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void *sub_10173E740(void *result)
{
  *uint64_t result = &off_102338280;
  result[1] = 0;
  return result;
}

void sub_10173E760(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338280;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10173E7E0(PB::Base *a1)
{
  sub_10173E760(a1);

  operator delete();
}

void *sub_10173E818(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338280;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10173E8C0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10173E93C(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10173EB38(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_10173EB54(uint64_t result)
{
  *(void *)uint64_t result = &off_1023382B8;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_10173EB7C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_10173EBB4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023382B8;
  *(_DWORD *)(a1 + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 8) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 32);
    char v3 = 8;
    *(unsigned char *)(a1 + 40) = 8;
    *(_DWORD *)(a1 + 32) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 40))
  {
LABEL_5:
    double result = *(double *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(a1 + 40) = v3;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 40) = v3;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        return result;
      }
LABEL_12:
      double result = *(double *)(a2 + 24);
      *(unsigned char *)(a1 + 40) = v3 | 4;
      *(double *)(a1 + 24) = result;
      return result;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v6 = *(_DWORD *)(a2 + 36);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 36) = v6;
  if ((*(unsigned char *)(a2 + 40) & 4) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_10173EC6C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if (v5)
  {
    PB::TextFormatter::format(this, "begin", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "bin", *(_DWORD *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "end", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "kValue", *(double *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 40) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 36));
LABEL_7:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10173ED50(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 40) |= 8u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    LODWORD(v24) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_67;
                  }
                  unint64_t v35 = v20++;
                  char v36 = *(unsigned char *)(v21 + v35);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_66;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v24) = 0;
                }
LABEL_66:
                unint64_t v2 = v35 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_67;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                LODWORD(v24) = 0;
              }
LABEL_67:
              *(_DWORD *)(a1 + 32) = v24;
              goto LABEL_73;
            case 2u:
              *(unsigned char *)(a1 + 40) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_46;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_62;
            case 3u:
              *(unsigned char *)(a1 + 40) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_46;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_62;
            case 4u:
              *(unsigned char *)(a1 + 40) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_72;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_71:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_72;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_71;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_72;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_72:
              *(_DWORD *)(a1 + 36) = v31;
LABEL_73:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 5u:
              *(unsigned char *)(a1 + 40) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_62:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_46:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_73;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_73;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10173F16C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 32), 1u);
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 2u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 36), 4u);
    if ((*(unsigned char *)(v3 + 40) & 4) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 3u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x10) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_11:
  double v5 = *(double *)(v3 + 24);

  return PB::Writer::write(this, v5, 5u);
}

uint64_t sub_10173F230(uint64_t result)
{
  *(void *)uint64_t result = &off_1023382F0;
  *(_DWORD *)(result + 92) = 0;
  return result;
}

void sub_10173F258(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10173F290(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023382F0;
  *(_DWORD *)(result + 92) = 0;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x100) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 72);
    __int16 v3 = 256;
    *(_WORD *)(result + 92) = 256;
    *(void *)(result + 72) = v4;
    __int16 v2 = *(_WORD *)(a2 + 92);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(result + 92) = v3;
    *(void *)(result + 16) = v5;
    __int16 v2 = *(_WORD *)(a2 + 92);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 32);
    v3 |= 8u;
    *(_WORD *)(result + 92) = v3;
    *(void *)(result + 32) = v6;
    __int16 v2 = *(_WORD *)(a2 + 92);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 40) = v7;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 1) == 0)
  {
LABEL_9:
    if ((v2 & 0x800) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v8 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 8) = v8;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x800) == 0)
  {
LABEL_10:
    if ((v2 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v9 = *(_DWORD *)(a2 + 88);
  v3 |= 0x800u;
  *(_WORD *)(result + 92) = v3;
  *(_DWORD *)(result + 88) = v9;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x400) == 0)
  {
LABEL_11:
    if ((v2 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v10 = *(_DWORD *)(a2 + 84);
  v3 |= 0x400u;
  *(_WORD *)(result + 92) = v3;
  *(_DWORD *)(result + 84) = v10;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x80) == 0)
  {
LABEL_12:
    if ((v2 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v11 = *(void *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 64) = v11;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x20) == 0)
  {
LABEL_13:
    if ((v2 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v12 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 48) = v12;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 4) == 0)
  {
LABEL_14:
    if ((v2 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v13 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 24) = v13;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x40) == 0)
  {
LABEL_15:
    if ((v2 & 0x200) == 0) {
      return result;
    }
LABEL_26:
    int v15 = *(_DWORD *)(a2 + 80);
    *(_WORD *)(result + 92) = v3 | 0x200;
    *(_DWORD *)(result + 80) = v15;
    return result;
  }
LABEL_25:
  uint64_t v14 = *(void *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 56) = v14;
  if ((*(_WORD *)(a2 + 92) & 0x200) != 0) {
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_10173F40C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 92);
  if (v5)
  {
    PB::TextFormatter::format(this, "distance", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 92);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "endTime", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "gpsSource", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "kvalue", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "kvalueTrack", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "percentGrade", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "runningFormStrideLength", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x200) == 0)
  {
LABEL_9:
    if ((v5 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "runningFormStrideLengthMetrics", *(_DWORD *)(a1 + 80));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x400) == 0)
  {
LABEL_10:
    if ((v5 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "session", *(_DWORD *)(a1 + 84));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x80) == 0)
  {
LABEL_11:
    if ((v5 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "speed", *(double *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x100) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_27:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 72));
  if ((*(_WORD *)(a1 + 92) & 0x800) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "steps", *(_DWORD *)(a1 + 88));
LABEL_14:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10173F5D0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 92) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
              goto LABEL_94;
            case 2u:
              *(_WORD *)(a1 + 92) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_94;
            case 3u:
              *(_WORD *)(a1 + 92) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_94;
            case 4u:
              *(_WORD *)(a1 + 92) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_94;
            case 5u:
              *(_WORD *)(a1 + 92) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_94;
            case 6u:
              *(_WORD *)(a1 + 92) |= 0x800u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_99;
                  }
                  unint64_t v41 = v21++;
                  char v42 = *(unsigned char *)(v22 + v41);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_98:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_99;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_98;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_99;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_99:
              *(_DWORD *)(a1 + 88) = v25;
              goto LABEL_110;
            case 7u:
              *(_WORD *)(a1 + 92) |= 0x400u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_104;
                  }
                  unint64_t v45 = v27++;
                  char v46 = *(unsigned char *)(v28 + v45);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_103:
                    unint64_t v2 = v45 + 1;
                    goto LABEL_104;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_103;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_104;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_104:
              *(_DWORD *)(a1 + 84) = v31;
              goto LABEL_110;
            case 8u:
              *(_WORD *)(a1 + 92) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_94;
            case 9u:
              *(_WORD *)(a1 + 92) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_94;
            case 0xAu:
              *(_WORD *)(a1 + 92) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_94;
            case 0xBu:
              *(_WORD *)(a1 + 92) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
LABEL_94:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_64:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_110;
            case 0xCu:
              *(_WORD *)(a1 + 92) |= 0x200u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_109;
                  }
                  unint64_t v49 = v33++;
                  char v50 = *(unsigned char *)(v34 + v49);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_108:
                    unint64_t v2 = v49 + 1;
                    goto LABEL_109;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_108;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_109;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_109:
              *(_DWORD *)(a1 + 80) = v37;
LABEL_110:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_110;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10173FC44(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 92);
  if ((v4 & 0x100) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 72), 1u);
    __int16 v4 = *(_WORD *)(v3 + 92);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 2u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 3u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x10) == 0)
  {
LABEL_5:
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 4u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 1) == 0)
  {
LABEL_6:
    if ((v4 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 5u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x800) == 0)
  {
LABEL_7:
    if ((v4 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 88), 6u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x400) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 84), 7u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 8u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 9u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 4) == 0)
  {
LABEL_11:
    if ((v4 & 0x40) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 0xBu);
    if ((*(_WORD *)(v3 + 92) & 0x200) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 0xAu);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x40) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v4 & 0x200) == 0) {
    return result;
  }
LABEL_25:
  int v5 = *(_DWORD *)(v3 + 80);

  return PB::Writer::writeVarInt(this, v5, 0xCu);
}

uint64_t sub_10173FDCC(uint64_t result)
{
  *(void *)uint64_t result = &off_102338328;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void sub_10173FDF4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10173FE2C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338328;
  *(_DWORD *)(a1 + 56) = 0;
  __int16 v2 = *(_WORD *)(a2 + 56);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(a1 + 56) = 1;
    *(void *)(a1 + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 56);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 32);
    v3 |= 0x20u;
    *(_WORD *)(a1 + 56) = v3;
    *(_DWORD *)(a1 + 32) = v5;
    __int16 v2 = *(_WORD *)(a2 + 56);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    float result = *(float *)(a2 + 20);
    v3 |= 4u;
    *(_WORD *)(a1 + 56) = v3;
    *(float *)(a1 + 20) = result;
    __int16 v2 = *(_WORD *)(a2 + 56);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 28);
  v3 |= 0x10u;
  *(_WORD *)(a1 + 56) = v3;
  *(float *)(a1 + 28) = result;
  __int16 v2 = *(_WORD *)(a2 + 56);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  float result = *(float *)(a2 + 24);
  v3 |= 8u;
  *(_WORD *)(a1 + 56) = v3;
  *(float *)(a1 + 24) = result;
  __int16 v2 = *(_WORD *)(a2 + 56);
  if ((v2 & 0x200) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  float result = *(float *)(a2 + 48);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 56) = v3;
  *(float *)(a1 + 48) = result;
  __int16 v2 = *(_WORD *)(a2 + 56);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  float result = *(float *)(a2 + 40);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 56) = v3;
  *(float *)(a1 + 40) = result;
  __int16 v2 = *(_WORD *)(a2 + 56);
  if ((v2 & 0x400) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  char v7 = *(unsigned char *)(a2 + 52);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 56) = v3;
  *(unsigned char *)(a1 + 52) = v7;
  __int16 v2 = *(_WORD *)(a2 + 56);
  if ((v2 & 2) == 0)
  {
LABEL_13:
    if ((v2 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v8 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(a1 + 56) = v3;
  *(_DWORD *)(a1 + 16) = v8;
  __int16 v2 = *(_WORD *)(a2 + 56);
  if ((v2 & 0x100) == 0)
  {
LABEL_14:
    if ((v2 & 0x40) == 0) {
      return result;
    }
LABEL_24:
    float result = *(float *)(a2 + 36);
    *(_WORD *)(a1 + 56) = v3 | 0x40;
    *(float *)(a1 + 36) = result;
    return result;
  }
LABEL_23:
  int v9 = *(_DWORD *)(a2 + 44);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 56) = v3;
  *(_DWORD *)(a1 + 44) = v9;
  if ((*(_WORD *)(a2 + 56) & 0x40) != 0) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_10173FF8C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "classifierCall", *(_DWORD *)(a1 + 16));
    __int16 v5 = *(_WORD *)(a1 + 56);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "featureSlope", *(float *)(a1 + 20));
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "maxAccel", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "maxMinPressure", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "model", *(_DWORD *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "sCal", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "slopeNxCorr", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 1) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
  __int16 v5 = *(_WORD *)(a1 + 56);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "xCorr", *(float *)(a1 + 48));
  if ((*(_WORD *)(a1 + 56) & 0x400) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "zoh", *(unsigned char *)(a1 + 52));
LABEL_13:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101740130(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 56) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_108;
                  }
                  unint64_t v49 = v20++;
                  char v50 = *(unsigned char *)(v21 + v49);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_107;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_107:
                unint64_t v2 = v49 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_108;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_108:
              *(void *)(a1 + 8) = v24;
              goto LABEL_124;
            case 2u:
              *(_WORD *)(a1 + 56) |= 0x20u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_113;
                  }
                  unint64_t v53 = v27++;
                  char v54 = *(unsigned char *)(v28 + v53);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_112:
                    unint64_t v2 = v53 + 1;
                    goto LABEL_113;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_112;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_113;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_113:
              *(_DWORD *)(a1 + 32) = v31;
              goto LABEL_124;
            case 3u:
              *(_WORD *)(a1 + 56) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_71;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_103;
            case 4u:
              *(_WORD *)(a1 + 56) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_71;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_103;
            case 5u:
              *(_WORD *)(a1 + 56) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_71;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_103;
            case 6u:
              *(_WORD *)(a1 + 56) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_71;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_103;
            case 7u:
              *(_WORD *)(a1 + 56) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_71;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_103;
            case 8u:
              *(_WORD *)(a1 + 56) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 52) = v34;
              goto LABEL_124;
            case 9u:
              *(_WORD *)(a1 + 56) |= 2u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v55 = 0;
                unsigned int v56 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_118;
                  }
                  unint64_t v57 = v35++;
                  char v58 = *(unsigned char *)(v36 + v57);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  BOOL v14 = v56++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_117:
                    unint64_t v2 = v57 + 1;
                    goto LABEL_118;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_117;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_118;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_118:
              *(_DWORD *)(a1 + 16) = v39;
              goto LABEL_124;
            case 0xAu:
              *(_WORD *)(a1 + 56) |= 0x100u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    LODWORD(v45) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_123;
                  }
                  unint64_t v61 = v41++;
                  char v62 = *(unsigned char *)(v42 + v61);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v45) = 0;
LABEL_122:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_123;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v45) = 0;
                }
                goto LABEL_122;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_123;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              LODWORD(v45) = 0;
LABEL_123:
              *(_DWORD *)(a1 + 44) = v45;
LABEL_124:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xBu:
              *(_WORD *)(a1 + 56) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
LABEL_103:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_71:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_124;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_124;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101740828(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 56);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    __int16 v4 = *(_WORD *)(v3 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 32), 2u);
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 3u);
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 0x10) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 4u);
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 5u);
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 0x200) == 0)
  {
LABEL_7:
    if ((v4 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 6u);
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 0x80) == 0)
  {
LABEL_8:
    if ((v4 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 7u);
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 0x400) == 0)
  {
LABEL_9:
    if ((v4 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 52), 8u);
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 2) == 0)
  {
LABEL_10:
    if ((v4 & 0x100) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 44), 0xAu);
    if ((*(_WORD *)(v3 + 56) & 0x40) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 16), 9u);
  __int16 v4 = *(_WORD *)(v3 + 56);
  if ((v4 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v4 & 0x40) == 0) {
    return result;
  }
LABEL_23:
  float v5 = *(float *)(v3 + 36);

  return PB::Writer::write(this, v5, 0xBu);
}

uint64_t sub_101740994(uint64_t result)
{
  *(void *)uint64_t result = &off_102338360;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_1017409BC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_1017409F4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338360;
  *(_DWORD *)(a1 + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if ((v2 & 8) != 0)
  {
    LODWORD(result) = *(_DWORD *)(a2 + 28);
    char v3 = 8;
    *(unsigned char *)(a1 + 32) = 8;
    *(_DWORD *)(a1 + 28) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
LABEL_5:
    LODWORD(result) = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 32) = v3;
    *(_DWORD *)(a1 + 24) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
  double result = *(double *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(a1 + 32) = v3;
  *(double *)(a1 + 8) = result;
  if ((*(unsigned char *)(a2 + 32) & 2) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_101740A90(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "dirAngleRad", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "extremaVal", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "peakTimestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "valleyTimestamp", *(double *)(a1 + 16));
LABEL_6:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101740B54(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 32) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_30;
        case 2u:
          *(unsigned char *)(a1 + 32) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
LABEL_30:
          unint64_t v2 = *((void *)this + 1) + 4;
          goto LABEL_39;
        case 3u:
          *(unsigned char *)(a1 + 32) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_36;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_38;
        case 4u:
          *(unsigned char *)(a1 + 32) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_38:
            unint64_t v2 = *((void *)this + 1) + 8;
LABEL_39:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_36:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101740DD4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 28), 1u);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 3u);
      if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 2u);
  char v4 = *(unsigned char *)(v3 + 32);
  if (v4) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_9:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5, 4u);
}

uint64_t sub_101740E7C(uint64_t result)
{
  *(void *)uint64_t result = &off_102338398;
  *(_DWORD *)(result + 36) = -1;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_101740EAC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101740EE4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338398;
  *(_DWORD *)(result + 36) = -1;
  *(_DWORD *)(result + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(result + 44) = 2;
    *(void *)(result + 16) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 44) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(result + 44) = v3;
    *(_DWORD *)(result + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 44);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 36);
    v3 |= 0x20u;
    *(unsigned char *)(result + 44) = v3;
    *(_DWORD *)(result + 36) = v6;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 32);
  v3 |= 0x10u;
  *(unsigned char *)(result + 44) = v3;
  *(_DWORD *)(result + 32) = v7;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v8 = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(unsigned char *)(result + 44) = v3;
  *(_DWORD *)(result + 28) = v8;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 1) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      return result;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 40);
    *(unsigned char *)(result + 44) = v3 | 0x40;
    *(_DWORD *)(result + 40) = v10;
    return result;
  }
LABEL_15:
  uint64_t v9 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(result + 44) = v3;
  *(void *)(result + 8) = v9;
  if ((*(unsigned char *)(a2 + 44) & 0x40) != 0) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_101740FDC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "location", *(_DWORD *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "peakHalfWidth", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "peakMagnitude", *(float *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "peakTime", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "tapAcceptStatus", *(_DWORD *)(a1 + 36));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "tapCounter", *(_DWORD *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 2) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
LABEL_9:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101741100(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 44) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_50;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_80;
            case 2u:
              *(unsigned char *)(a1 + 44) |= 4u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_86;
                  }
                  unint64_t v41 = v21++;
                  char v42 = *(unsigned char *)(v22 + v41);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_85:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_86;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_85;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_86;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_86:
              *(_DWORD *)(a1 + 24) = v25;
              goto LABEL_97;
            case 3u:
              *(unsigned char *)(a1 + 44) |= 0x20u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_91;
                  }
                  unint64_t v45 = v27++;
                  char v46 = *(unsigned char *)(v28 + v45);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_90:
                    unint64_t v2 = v45 + 1;
                    goto LABEL_91;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_90;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_91;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_91:
              *(_DWORD *)(a1 + 36) = v31;
              goto LABEL_97;
            case 4u:
              *(unsigned char *)(a1 + 44) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_50;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_47;
            case 5u:
              *(unsigned char *)(a1 + 44) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_50;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_47:
              unint64_t v2 = *((void *)this + 1) + 4;
              goto LABEL_81;
            case 6u:
              *(unsigned char *)(a1 + 44) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_80:
                unint64_t v2 = *((void *)this + 1) + 8;
LABEL_81:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_50:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_97;
            case 7u:
              *(unsigned char *)(a1 + 44) |= 0x40u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_96;
                  }
                  unint64_t v49 = v33++;
                  char v50 = *(unsigned char *)(v34 + v49);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_95:
                    unint64_t v2 = v49 + 1;
                    goto LABEL_96;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_95;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_96;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_96:
              *(_DWORD *)(a1 + 40) = v37;
LABEL_97:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_97;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101741650(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16), 1u);
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 24), 2u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 36), 3u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x10) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 4u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 1) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 6u);
    if ((*(unsigned char *)(v3 + 44) & 0x40) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 5u);
  char v4 = *(unsigned char *)(v3 + 44);
  if (v4) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 0x40) == 0) {
    return result;
  }
LABEL_15:
  unsigned int v5 = *(_DWORD *)(v3 + 40);

  return PB::Writer::writeVarInt(this, v5, 7u);
}

double sub_10174174C(uint64_t a1)
{
  *(void *)a1 = &off_1023383D0;
  *(_DWORD *)(a1 + 28) = -2;
  double result = NAN;
  *(_OWORD *)(a1 + 52) = xmmword_101E330B0;
  return result;
}

void sub_101741784(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_1017417BC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023383D0;
  *(_DWORD *)(a1 + 28) = -2;
  double result = NAN;
  *(_OWORD *)(a1 + 52) = xmmword_101E330B0;
  __int16 v3 = *(_WORD *)(a2 + 64);
  if ((v3 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    __int16 v4 = 2;
    *(_WORD *)(a1 + 64) = 2;
    *(double *)(a1 + 16) = result;
    __int16 v3 = *(_WORD *)(a2 + 64);
    if ((v3 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v4 = 0;
  if ((v3 & 0x20) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 36);
    v4 |= 0x20u;
    *(_WORD *)(a1 + 64) = v4;
    *(_DWORD *)(a1 + 36) = v5;
    __int16 v3 = *(_WORD *)(a2 + 64);
  }
LABEL_6:
  if ((v3 & 0x400) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 56);
    v4 |= 0x400u;
    *(_WORD *)(a1 + 64) = v4;
    *(_DWORD *)(a1 + 56) = v6;
    __int16 v3 = *(_WORD *)(a2 + 64);
    if ((v3 & 4) == 0)
    {
LABEL_8:
      if ((v3 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v3 & 4) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 24);
  v4 |= 4u;
  *(_WORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 24) = v7;
  __int16 v3 = *(_WORD *)(a2 + 64);
  if ((v3 & 0x10) == 0)
  {
LABEL_9:
    if ((v3 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v8 = *(_DWORD *)(a2 + 32);
  v4 |= 0x10u;
  *(_WORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 32) = v8;
  __int16 v3 = *(_WORD *)(a2 + 64);
  if ((v3 & 0x200) == 0)
  {
LABEL_10:
    if ((v3 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v9 = *(_DWORD *)(a2 + 52);
  v4 |= 0x200u;
  *(_WORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 52) = v9;
  __int16 v3 = *(_WORD *)(a2 + 64);
  if ((v3 & 0x800) == 0)
  {
LABEL_11:
    if ((v3 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v10 = *(_DWORD *)(a2 + 60);
  v4 |= 0x800u;
  *(_WORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 60) = v10;
  __int16 v3 = *(_WORD *)(a2 + 64);
  if ((v3 & 8) == 0)
  {
LABEL_12:
    if ((v3 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v11 = *(_DWORD *)(a2 + 28);
  v4 |= 8u;
  *(_WORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 28) = v11;
  __int16 v3 = *(_WORD *)(a2 + 64);
  if ((v3 & 0x100) == 0)
  {
LABEL_13:
    if ((v3 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  LODWORD(result) = *(_DWORD *)(a2 + 48);
  v4 |= 0x100u;
  *(_WORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 48) = LODWORD(result);
  __int16 v3 = *(_WORD *)(a2 + 64);
  if ((v3 & 0x80) == 0)
  {
LABEL_14:
    if ((v3 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  LODWORD(result) = *(_DWORD *)(a2 + 44);
  v4 |= 0x80u;
  *(_WORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 44) = LODWORD(result);
  __int16 v3 = *(_WORD *)(a2 + 64);
  if ((v3 & 0x40) == 0)
  {
LABEL_15:
    if ((v3 & 1) == 0) {
      return result;
    }
LABEL_26:
    double result = *(double *)(a2 + 8);
    *(_WORD *)(a1 + 64) = v4 | 1;
    *(double *)(a1 + 8) = result;
    return result;
  }
LABEL_25:
  LODWORD(result) = *(_DWORD *)(a2 + 40);
  v4 |= 0x40u;
  *(_WORD *)(a1 + 64) = v4;
  *(_DWORD *)(a1 + 40) = LODWORD(result);
  if (*(_WORD *)(a2 + 64)) {
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_101741948(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "axis", *(_DWORD *)(a1 + 24));
    __int16 v5 = *(_WORD *)(a1 + 64);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "clippedPeakType", *(_DWORD *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "direction", *(_DWORD *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "location", *(_DWORD *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "peakHalfWidth", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "peakMagnitude", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 1) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "peakTime", *(double *)(a1 + 8));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "peakValue", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "strideDirection", *(_DWORD *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "tapDetectStatus", *(_DWORD *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 2) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_27:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
  if ((*(_WORD *)(a1 + 64) & 0x800) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "widthCalculationMethod", *(_DWORD *)(a1 + 60));
LABEL_14:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101741B0C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 64) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_88;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_139;
            case 2u:
              *(_WORD *)(a1 + 64) |= 0x20u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_145;
                  }
                  unint64_t v65 = v21++;
                  char v66 = *(unsigned char *)(v22 + v65);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_144:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_145;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_144;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_145;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_145:
              *(_DWORD *)(a1 + 36) = v25;
              goto LABEL_176;
            case 3u:
              *(_WORD *)(a1 + 64) |= 0x400u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_150;
                  }
                  unint64_t v69 = v27++;
                  char v70 = *(unsigned char *)(v28 + v69);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_149:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_150;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_149;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_150;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_150:
              *(_DWORD *)(a1 + 56) = v31;
              goto LABEL_176;
            case 4u:
              *(_WORD *)(a1 + 64) |= 4u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v71 = 0;
                unsigned int v72 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_155;
                  }
                  unint64_t v73 = v33++;
                  char v74 = *(unsigned char *)(v34 + v73);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v74 & 0x7F) << v71;
                  if ((v74 & 0x80) == 0) {
                    break;
                  }
                  v71 += 7;
                  BOOL v14 = v72++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_154:
                    unint64_t v2 = v73 + 1;
                    goto LABEL_155;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_154;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_155;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_155:
              *(_DWORD *)(a1 + 24) = v37;
              goto LABEL_176;
            case 5u:
              *(_WORD *)(a1 + 64) |= 0x10u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v75 = 0;
                unsigned int v76 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_160;
                  }
                  unint64_t v77 = v39++;
                  char v78 = *(unsigned char *)(v40 + v77);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v78 & 0x7F) << v75;
                  if ((v78 & 0x80) == 0) {
                    break;
                  }
                  v75 += 7;
                  BOOL v14 = v76++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_159:
                    unint64_t v2 = v77 + 1;
                    goto LABEL_160;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_159;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_160;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_160:
              *(_DWORD *)(a1 + 32) = v43;
              goto LABEL_176;
            case 6u:
              *(_WORD *)(a1 + 64) |= 0x200u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v79 = 0;
                unsigned int v80 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_165;
                  }
                  unint64_t v81 = v45++;
                  char v82 = *(unsigned char *)(v46 + v81);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v82 & 0x7F) << v79;
                  if ((v82 & 0x80) == 0) {
                    break;
                  }
                  v79 += 7;
                  BOOL v14 = v80++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_164:
                    unint64_t v2 = v81 + 1;
                    goto LABEL_165;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_164;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_165;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_165:
              *(_DWORD *)(a1 + 52) = v49;
              goto LABEL_176;
            case 7u:
              *(_WORD *)(a1 + 64) |= 0x800u;
              unint64_t v51 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v52 = *(void *)this;
              if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
              {
                char v83 = 0;
                unsigned int v84 = 0;
                uint64_t v55 = 0;
                if (v2 <= v51) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v51)
                  {
                    LODWORD(v55) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_170;
                  }
                  unint64_t v85 = v51++;
                  char v86 = *(unsigned char *)(v52 + v85);
                  *((void *)this + 1) = v51;
                  v55 |= (unint64_t)(v86 & 0x7F) << v83;
                  if ((v86 & 0x80) == 0) {
                    break;
                  }
                  v83 += 7;
                  BOOL v14 = v84++ > 8;
                  if (v14)
                  {
                    LODWORD(v55) = 0;
LABEL_169:
                    unint64_t v2 = v85 + 1;
                    goto LABEL_170;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v55) = 0;
                }
                goto LABEL_169;
              }
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              do
              {
                unint64_t v2 = v51 + 1;
                *((void *)this + 1) = v51 + 1;
                char v56 = *(unsigned char *)(v52 + v51);
                v55 |= (unint64_t)(v56 & 0x7F) << v53;
                if ((v56 & 0x80) == 0) {
                  goto LABEL_170;
                }
                v53 += 7;
                unint64_t v51 = v2;
                BOOL v14 = v54++ > 8;
              }
              while (!v14);
              LODWORD(v55) = 0;
LABEL_170:
              *(_DWORD *)(a1 + 60) = v55;
              goto LABEL_176;
            case 8u:
              *(_WORD *)(a1 + 64) |= 8u;
              unint64_t v57 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v58 = *(void *)this;
              if (v57 > 0xFFFFFFFFFFFFFFF5 || v57 + 10 > v2)
              {
                char v87 = 0;
                unsigned int v88 = 0;
                uint64_t v61 = 0;
                if (v2 <= v57) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v57)
                  {
                    LODWORD(v61) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_175;
                  }
                  unint64_t v89 = v57++;
                  char v90 = *(unsigned char *)(v58 + v89);
                  *((void *)this + 1) = v57;
                  v61 |= (unint64_t)(v90 & 0x7F) << v87;
                  if ((v90 & 0x80) == 0) {
                    break;
                  }
                  v87 += 7;
                  BOOL v14 = v88++ > 8;
                  if (v14)
                  {
                    LODWORD(v61) = 0;
LABEL_174:
                    unint64_t v2 = v89 + 1;
                    goto LABEL_175;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v61) = 0;
                }
                goto LABEL_174;
              }
              char v59 = 0;
              unsigned int v60 = 0;
              uint64_t v61 = 0;
              do
              {
                unint64_t v2 = v57 + 1;
                *((void *)this + 1) = v57 + 1;
                char v62 = *(unsigned char *)(v58 + v57);
                v61 |= (unint64_t)(v62 & 0x7F) << v59;
                if ((v62 & 0x80) == 0) {
                  goto LABEL_175;
                }
                v59 += 7;
                unint64_t v57 = v2;
                BOOL v14 = v60++ > 8;
              }
              while (!v14);
              LODWORD(v61) = 0;
LABEL_175:
              *(_DWORD *)(a1 + 28) = v61;
LABEL_176:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 9u:
              *(_WORD *)(a1 + 64) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_88;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_85;
            case 0xAu:
              *(_WORD *)(a1 + 64) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_88;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_85;
            case 0xBu:
              *(_WORD *)(a1 + 64) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_88;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
LABEL_85:
              unint64_t v2 = *((void *)this + 1) + 4;
              goto LABEL_140;
            case 0xCu:
              *(_WORD *)(a1 + 64) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_139:
                unint64_t v2 = *((void *)this + 1) + 8;
LABEL_140:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_88:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_176;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_176;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101742458(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 64);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16), 1u);
    __int16 v4 = *(_WORD *)(v3 + 64);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x400) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 36), 2u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x400) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 56), 3u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 24), 4u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 32), 5u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x200) == 0)
  {
LABEL_7:
    if ((v4 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 52), 6u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x800) == 0)
  {
LABEL_8:
    if ((v4 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 60), 7u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 28), 8u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 9u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x80) == 0)
  {
LABEL_11:
    if ((v4 & 0x40) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 0xBu);
    if ((*(_WORD *)(v3 + 64) & 1) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 0xAu);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x40) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_25:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5, 0xCu);
}

uint64_t sub_1017425E0(uint64_t result)
{
  *(void *)uint64_t result = &off_102338408;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 80) = 0;
  *(_DWORD *)(result + 104) = 0;
  return result;
}

void sub_10174260C(PB::Base *this)
{
  *(void *)this = &off_102338408;
  uint64_t v2 = *((void *)this + 10);
  *((void *)this + 10) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_1017426A0(PB::Base *a1)
{
  sub_10174260C(a1);

  operator delete();
}

uint64_t sub_1017426D8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = &off_102338408;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 104) = 0;
  if (*(void *)(a2 + 80)) {
    operator new();
  }
  if (a1 != a2) {
    sub_1000FB43C((char *)(a1 + 8), *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  __int16 v4 = *(_WORD *)(a2 + 104);
  if ((v4 & 0x80) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 92);
    *(_WORD *)(a1 + 104) |= 0x80u;
    *(_DWORD *)(a1 + 92) = v7;
    __int16 v4 = *(_WORD *)(a2 + 104);
    if ((v4 & 0x40) == 0)
    {
LABEL_7:
      if ((v4 & 0x100) == 0) {
        goto LABEL_8;
      }
      goto LABEL_19;
    }
  }
  else if ((v4 & 0x40) == 0)
  {
    goto LABEL_7;
  }
  int v8 = *(_DWORD *)(a2 + 88);
  *(_WORD *)(a1 + 104) |= 0x40u;
  *(_DWORD *)(a1 + 88) = v8;
  __int16 v4 = *(_WORD *)(a2 + 104);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v9 = *(_DWORD *)(a2 + 96);
  *(_WORD *)(a1 + 104) |= 0x100u;
  *(_DWORD *)(a1 + 96) = v9;
  __int16 v4 = *(_WORD *)(a2 + 104);
  if ((v4 & 0x200) == 0)
  {
LABEL_9:
    if ((v4 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v10 = *(_DWORD *)(a2 + 100);
  *(_WORD *)(a1 + 104) |= 0x200u;
  *(_DWORD *)(a1 + 100) = v10;
  __int16 v4 = *(_WORD *)(a2 + 104);
  if ((v4 & 2) == 0)
  {
LABEL_10:
    if ((v4 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v11 = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 104) |= 2u;
  *(void *)(a1 + 40) = v11;
  __int16 v4 = *(_WORD *)(a2 + 104);
  if ((v4 & 4) == 0)
  {
LABEL_11:
    if ((v4 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v12 = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 104) |= 4u;
  *(void *)(a1 + 48) = v12;
  __int16 v4 = *(_WORD *)(a2 + 104);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v13 = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 104) |= 0x10u;
  *(void *)(a1 + 64) = v13;
  __int16 v4 = *(_WORD *)(a2 + 104);
  if ((v4 & 0x20) == 0)
  {
LABEL_13:
    if ((v4 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_25:
    uint64_t v15 = *(void *)(a2 + 32);
    *(_WORD *)(a1 + 104) |= 1u;
    *(void *)(a1 + 32) = v15;
    if ((*(_WORD *)(a2 + 104) & 8) == 0) {
      return a1;
    }
    goto LABEL_15;
  }
LABEL_24:
  uint64_t v14 = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 104) |= 0x20u;
  *(void *)(a1 + 72) = v14;
  __int16 v4 = *(_WORD *)(a2 + 104);
  if (v4) {
    goto LABEL_25;
  }
LABEL_14:
  if ((v4 & 8) != 0)
  {
LABEL_15:
    uint64_t v5 = *(void *)(a2 + 56);
    *(_WORD *)(a1 + 104) |= 8u;
    *(void *)(a1 + 56) = v5;
  }
  return a1;
}

uint64_t sub_1017428F8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(_WORD *)(a1 + 104)) {
    PB::TextFormatter::format(this, "auxiliaryIosTimeUncertainty", *(double *)(a1 + 32));
  }
  uint64_t v5 = *(float **)(a1 + 8);
  int v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "filteredAcceleration", v7);
  }
  __int16 v8 = *(_WORD *)(a1 + 104);
  if ((v8 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "quiescentMode", *(_DWORD *)(a1 + 88));
    __int16 v8 = *(_WORD *)(a1 + 104);
    if ((v8 & 0x80) == 0)
    {
LABEL_7:
      if ((v8 & 2) == 0) {
        goto LABEL_8;
      }
      goto LABEL_23;
    }
  }
  else if ((v8 & 0x80) == 0)
  {
    goto LABEL_7;
  }
  PB::TextFormatter::format(this, "quiescentNoise", *(float *)(a1 + 92));
  __int16 v8 = *(_WORD *)(a1 + 104);
  if ((v8 & 2) == 0)
  {
LABEL_8:
    if ((v8 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "sensorTimeBeforeAlignment", *(double *)(a1 + 40));
  __int16 v8 = *(_WORD *)(a1 + 104);
  if ((v8 & 4) == 0)
  {
LABEL_9:
    if ((v8 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "sentCftime", *(double *)(a1 + 48));
  __int16 v8 = *(_WORD *)(a1 + 104);
  if ((v8 & 0x100) == 0)
  {
LABEL_10:
    if ((v8 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "sequenceNumber", *(_DWORD *)(a1 + 96));
  __int16 v8 = *(_WORD *)(a1 + 104);
  if ((v8 & 8) == 0)
  {
LABEL_11:
    if ((v8 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "sourceIosTimeUncertainty", *(double *)(a1 + 56));
  __int16 v8 = *(_WORD *)(a1 + 104);
  if ((v8 & 0x10) == 0)
  {
LABEL_12:
    if ((v8 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_27:
  PB::TextFormatter::format(this, "sourceReceiveCftime", *(double *)(a1 + 64));
  if ((*(_WORD *)(a1 + 104) & 0x20) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "sourceReceiveSensorTimestamp", *(double *)(a1 + 72));
LABEL_14:
  uint64_t v9 = *(void *)(a1 + 80);
  if (v9) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v9 + 32))(v9, this, "super");
  }
  if ((*(_WORD *)(a1 + 104) & 0x200) != 0) {
    PB::TextFormatter::format(this, "version", *(float *)(a1 + 100));
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_101742AE8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    __int16 v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        BOOL v16 = v12++ > 8;
        if (v16) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v22 = v13 & 7;
      if (v22 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          operator new();
        case 2u:
          if (v22 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v23 = *((void *)this + 1);
            unint64_t v24 = *((void *)this + 2);
            while (v23 < v24 && !*((unsigned char *)this + 24))
            {
              char v26 = *(char **)(a1 + 16);
              unint64_t v25 = *(void *)(a1 + 24);
              if ((unint64_t)v26 >= v25)
              {
                uint64_t v28 = (char *)*v8;
                uint64_t v29 = (v26 - (unsigned char *)*v8) >> 2;
                unint64_t v30 = v29 + 1;
                if ((unint64_t)(v29 + 1) >> 62) {
                  goto LABEL_145;
                }
                uint64_t v31 = v25 - (void)v28;
                if (v31 >> 1 > v30) {
                  unint64_t v30 = v31 >> 1;
                }
                if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v32 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v32 = v30;
                }
                if (v32)
                {
                  unint64_t v33 = (char *)sub_10017EA34(v9, v32);
                  uint64_t v28 = *(char **)(a1 + 8);
                  char v26 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v33 = 0;
                }
                uint64_t v34 = &v33[4 * v29];
                *(_DWORD *)uint64_t v34 = 0;
                unint64_t v27 = v34 + 4;
                while (v26 != v28)
                {
                  int v35 = *((_DWORD *)v26 - 1);
                  v26 -= 4;
                  *((_DWORD *)v34 - 1) = v35;
                  v34 -= 4;
                }
                *(void *)(a1 + 8) = v34;
                *(void *)(a1 + 16) = v27;
                *(void *)(a1 + 24) = &v33[4 * v32];
                if (v28) {
                  operator delete(v28);
                }
              }
              else
              {
                *(_DWORD *)char v26 = 0;
                unint64_t v27 = v26 + 4;
              }
              *(void *)(a1 + 16) = v27;
              unint64_t v36 = *((void *)this + 1);
              if (v36 > 0xFFFFFFFFFFFFFFFBLL || v36 + 4 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v27 - 1) = *(_DWORD *)(*(void *)this + v36);
              unint64_t v24 = *((void *)this + 2);
              unint64_t v23 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v23;
            }
            PB::Reader::recallMark();
          }
          else
          {
            char v63 = *(char **)(a1 + 16);
            unint64_t v62 = *(void *)(a1 + 24);
            if ((unint64_t)v63 >= v62)
            {
              unint64_t v73 = (char *)*v8;
              uint64_t v74 = (v63 - (unsigned char *)*v8) >> 2;
              unint64_t v75 = v74 + 1;
              if ((unint64_t)(v74 + 1) >> 62) {
LABEL_145:
              }
                sub_1001D7FD4();
              uint64_t v76 = v62 - (void)v73;
              if (v76 >> 1 > v75) {
                unint64_t v75 = v76 >> 1;
              }
              if ((unint64_t)v76 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v77 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v77 = v75;
              }
              if (v77)
              {
                char v78 = (char *)sub_10017EA34(v9, v77);
                unint64_t v73 = *(char **)(a1 + 8);
                char v63 = *(char **)(a1 + 16);
              }
              else
              {
                char v78 = 0;
              }
              char v79 = &v78[4 * v74];
              *(_DWORD *)char v79 = 0;
              unsigned int v64 = v79 + 4;
              while (v63 != v73)
              {
                int v80 = *((_DWORD *)v63 - 1);
                v63 -= 4;
                *((_DWORD *)v79 - 1) = v80;
                v79 -= 4;
              }
              *(void *)(a1 + 8) = v79;
              *(void *)(a1 + 16) = v64;
              *(void *)(a1 + 24) = &v78[4 * v77];
              if (v73) {
                operator delete(v73);
              }
            }
            else
            {
              *(_DWORD *)char v63 = 0;
              unsigned int v64 = v63 + 4;
            }
            *(void *)(a1 + 16) = v64;
            unint64_t v81 = *((void *)this + 1);
            if (v81 <= 0xFFFFFFFFFFFFFFFBLL && v81 + 4 <= *((void *)this + 2))
            {
              *(v64 - 1) = *(_DWORD *)(*(void *)this + v81);
LABEL_133:
              uint64_t v61 = *((void *)this + 1) + 4;
LABEL_134:
              *((void *)this + 1) = v61;
            }
            else
            {
LABEL_131:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_135:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 3u:
          *(_WORD *)(a1 + 104) |= 0x80u;
          unint64_t v37 = *((void *)this + 1);
          if (v37 > 0xFFFFFFFFFFFFFFFBLL || v37 + 4 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v37);
          goto LABEL_133;
        case 4u:
          *(_WORD *)(a1 + 104) |= 0x40u;
          unint64_t v38 = *((void *)this + 1);
          unint64_t v39 = *((void *)this + 2);
          uint64_t v40 = *(void *)this;
          if (v38 <= 0xFFFFFFFFFFFFFFF5 && v38 + 10 <= v39)
          {
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            do
            {
              unint64_t v44 = v38 + 1;
              *((void *)this + 1) = v38 + 1;
              char v45 = *(unsigned char *)(v40 + v38);
              v43 |= (unint64_t)(v45 & 0x7F) << v41;
              if ((v45 & 0x80) == 0) {
                goto LABEL_118;
              }
              v41 += 7;
              unint64_t v38 = v44;
              BOOL v16 = v42++ > 8;
            }
            while (!v16);
LABEL_98:
            LODWORD(v43) = 0;
            goto LABEL_118;
          }
          char v65 = 0;
          unsigned int v66 = 0;
          uint64_t v43 = 0;
          if (v39 <= v38) {
            unint64_t v39 = *((void *)this + 1);
          }
          while (2)
          {
            if (v39 == v38)
            {
              LODWORD(v43) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v67 = v38 + 1;
              char v68 = *(unsigned char *)(v40 + v38);
              *((void *)this + 1) = v67;
              v43 |= (unint64_t)(v68 & 0x7F) << v65;
              if (v68 < 0)
              {
                v65 += 7;
                unint64_t v38 = v67;
                BOOL v16 = v66++ > 8;
                if (v16) {
                  goto LABEL_98;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v43) = 0;
              }
            }
            break;
          }
LABEL_118:
          *(_DWORD *)(a1 + 88) = v43;
          goto LABEL_135;
        case 5u:
          *(_WORD *)(a1 + 104) |= 0x100u;
          unint64_t v46 = *((void *)this + 1);
          unint64_t v47 = *((void *)this + 2);
          uint64_t v48 = *(void *)this;
          if (v46 <= 0xFFFFFFFFFFFFFFF5 && v46 + 10 <= v47)
          {
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            do
            {
              unint64_t v52 = v46 + 1;
              *((void *)this + 1) = v46 + 1;
              char v53 = *(unsigned char *)(v48 + v46);
              v51 |= (unint64_t)(v53 & 0x7F) << v49;
              if ((v53 & 0x80) == 0) {
                goto LABEL_121;
              }
              v49 += 7;
              unint64_t v46 = v52;
              BOOL v16 = v50++ > 8;
            }
            while (!v16);
LABEL_105:
            LODWORD(v51) = 0;
            goto LABEL_121;
          }
          char v69 = 0;
          unsigned int v70 = 0;
          uint64_t v51 = 0;
          if (v47 <= v46) {
            unint64_t v47 = *((void *)this + 1);
          }
          while (2)
          {
            if (v47 == v46)
            {
              LODWORD(v51) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v71 = v46 + 1;
              char v72 = *(unsigned char *)(v48 + v46);
              *((void *)this + 1) = v71;
              v51 |= (unint64_t)(v72 & 0x7F) << v69;
              if (v72 < 0)
              {
                v69 += 7;
                unint64_t v46 = v71;
                BOOL v16 = v70++ > 8;
                if (v16) {
                  goto LABEL_105;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v51) = 0;
              }
            }
            break;
          }
LABEL_121:
          *(_DWORD *)(a1 + 96) = v51;
          goto LABEL_135;
        case 6u:
          *(_WORD *)(a1 + 104) |= 0x200u;
          unint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFFBLL || v54 + 4 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v54);
          goto LABEL_133;
        case 7u:
          *(_WORD *)(a1 + 104) |= 2u;
          unint64_t v55 = *((void *)this + 1);
          if (v55 > 0xFFFFFFFFFFFFFFF7 || v55 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v55);
          goto LABEL_89;
        case 8u:
          *(_WORD *)(a1 + 104) |= 4u;
          unint64_t v56 = *((void *)this + 1);
          if (v56 > 0xFFFFFFFFFFFFFFF7 || v56 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v56);
          goto LABEL_89;
        case 9u:
          *(_WORD *)(a1 + 104) |= 0x10u;
          unint64_t v57 = *((void *)this + 1);
          if (v57 > 0xFFFFFFFFFFFFFFF7 || v57 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v57);
          goto LABEL_89;
        case 0xAu:
          *(_WORD *)(a1 + 104) |= 0x20u;
          unint64_t v58 = *((void *)this + 1);
          if (v58 > 0xFFFFFFFFFFFFFFF7 || v58 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v58);
          goto LABEL_89;
        case 0xBu:
          *(_WORD *)(a1 + 104) |= 1u;
          unint64_t v59 = *((void *)this + 1);
          if (v59 > 0xFFFFFFFFFFFFFFF7 || v59 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v59);
          goto LABEL_89;
        case 0xCu:
          *(_WORD *)(a1 + 104) |= 8u;
          unint64_t v60 = *((void *)this + 1);
          if (v60 > 0xFFFFFFFFFFFFFFF7 || v60 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v60);
LABEL_89:
          uint64_t v61 = *((void *)this + 1) + 8;
          goto LABEL_134;
        default:
          if ((PB::Reader::skip(this, v13 >> 3, v22, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_135;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017432D8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 80);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4, 1u);
  }
  uint64_t v5 = *(float **)(v3 + 8);
  int v6 = *(float **)(v3 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    uint64_t result = PB::Writer::write(this, v7, 2u);
  }
  __int16 v8 = *(_WORD *)(v3 + 104);
  if ((v8 & 0x80) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92), 3u);
    __int16 v8 = *(_WORD *)(v3 + 104);
    if ((v8 & 0x40) == 0)
    {
LABEL_8:
      if ((v8 & 0x100) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v8 & 0x40) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 88), 4u);
  __int16 v8 = *(_WORD *)(v3 + 104);
  if ((v8 & 0x100) == 0)
  {
LABEL_9:
    if ((v8 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 96), 5u);
  __int16 v8 = *(_WORD *)(v3 + 104);
  if ((v8 & 0x200) == 0)
  {
LABEL_10:
    if ((v8 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100), 6u);
  __int16 v8 = *(_WORD *)(v3 + 104);
  if ((v8 & 2) == 0)
  {
LABEL_11:
    if ((v8 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 7u);
  __int16 v8 = *(_WORD *)(v3 + 104);
  if ((v8 & 4) == 0)
  {
LABEL_12:
    if ((v8 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 8u);
  __int16 v8 = *(_WORD *)(v3 + 104);
  if ((v8 & 0x10) == 0)
  {
LABEL_13:
    if ((v8 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 9u);
  __int16 v8 = *(_WORD *)(v3 + 104);
  if ((v8 & 0x20) == 0)
  {
LABEL_14:
    if ((v8 & 1) == 0) {
      goto LABEL_15;
    }
LABEL_25:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 0xBu);
    if ((*(_WORD *)(v3 + 104) & 8) == 0) {
      return result;
    }
    goto LABEL_26;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72), 0xAu);
  __int16 v8 = *(_WORD *)(v3 + 104);
  if (v8) {
    goto LABEL_25;
  }
LABEL_15:
  if ((v8 & 8) == 0) {
    return result;
  }
LABEL_26:
  double v9 = *(double *)(v3 + 56);

  return PB::Writer::write(this, v9, 0xCu);
}

uint64_t sub_101743468(uint64_t result)
{
  *(void *)uint64_t result = &off_102338440;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 96) = 0;
  return result;
}

void sub_101743490(PB::Base *this)
{
  *(void *)this = &off_102338440;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_1017434F4(PB::Base *a1)
{
  sub_101743490(a1);

  operator delete();
}

uint64_t sub_10174352C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338440;
  *(void *)(a1 + 8) = 0;
  int v4 = (char *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 96) = 0;
  __int16 v5 = *(_WORD *)(a2 + 96);
  if ((v5 & 0x10) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    __int16 v6 = 16;
    *(_WORD *)(a1 + 96) = 16;
    *(void *)(a1 + 64) = v7;
    __int16 v5 = *(_WORD *)(a2 + 96);
    if ((v5 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v6 = 0;
  if ((*(_WORD *)(a2 + 96) & 0x200) != 0)
  {
LABEL_5:
    int v8 = *(_DWORD *)(a2 + 88);
    v6 |= 0x200u;
    *(_WORD *)(a1 + 96) = v6;
    *(_DWORD *)(a1 + 88) = v8;
    __int16 v5 = *(_WORD *)(a2 + 96);
  }
LABEL_6:
  if ((v5 & 0x80) == 0)
  {
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v13 = *(_DWORD *)(a2 + 80);
  v6 |= 0x80u;
  *(_WORD *)(a1 + 96) = v6;
  *(_DWORD *)(a1 + 80) = v13;
  if ((*(_WORD *)(a2 + 96) & 0x100) != 0)
  {
LABEL_8:
    int v9 = *(_DWORD *)(a2 + 84);
    *(_WORD *)(a1 + 96) = v6 | 0x100;
    *(_DWORD *)(a1 + 84) = v9;
  }
LABEL_9:
  if (a1 != a2) {
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  __int16 v10 = *(_WORD *)(a2 + 96);
  if ((v10 & 0x400) != 0)
  {
    char v14 = *(unsigned char *)(a2 + 92);
    *(_WORD *)(a1 + 96) |= 0x400u;
    *(unsigned char *)(a1 + 92) = v14;
    __int16 v10 = *(_WORD *)(a2 + 96);
    if ((v10 & 0x20) == 0)
    {
LABEL_13:
      if ((v10 & 0x40) == 0) {
        goto LABEL_14;
      }
      goto LABEL_24;
    }
  }
  else if ((v10 & 0x20) == 0)
  {
    goto LABEL_13;
  }
  int v15 = *(_DWORD *)(a2 + 72);
  *(_WORD *)(a1 + 96) |= 0x20u;
  *(_DWORD *)(a1 + 72) = v15;
  __int16 v10 = *(_WORD *)(a2 + 96);
  if ((v10 & 0x40) == 0)
  {
LABEL_14:
    if ((v10 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v16 = *(_DWORD *)(a2 + 76);
  *(_WORD *)(a1 + 96) |= 0x40u;
  *(_DWORD *)(a1 + 76) = v16;
  __int16 v10 = *(_WORD *)(a2 + 96);
  if ((v10 & 8) == 0)
  {
LABEL_15:
    if ((v10 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v17 = *(void *)(a2 + 56);
  *(_WORD *)(a1 + 96) |= 8u;
  *(void *)(a1 + 56) = v17;
  __int16 v10 = *(_WORD *)(a2 + 96);
  if ((v10 & 1) == 0)
  {
LABEL_16:
    if ((v10 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_27:
    uint64_t v19 = *(void *)(a2 + 48);
    *(_WORD *)(a1 + 96) |= 4u;
    *(void *)(a1 + 48) = v19;
    if ((*(_WORD *)(a2 + 96) & 2) == 0) {
      return a1;
    }
    goto LABEL_18;
  }
LABEL_26:
  uint64_t v18 = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 96) |= 1u;
  *(void *)(a1 + 32) = v18;
  __int16 v10 = *(_WORD *)(a2 + 96);
  if ((v10 & 4) != 0) {
    goto LABEL_27;
  }
LABEL_17:
  if ((v10 & 2) != 0)
  {
LABEL_18:
    uint64_t v11 = *(void *)(a2 + 40);
    *(_WORD *)(a1 + 96) |= 2u;
    *(void *)(a1 + 40) = v11;
  }
  return a1;
}

uint64_t sub_1017436F0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x20) != 0)
  {
    PB::TextFormatter::format(this, "angularVelocityConstraintRps", *(float *)(a1 + 72));
    __int16 v5 = *(_WORD *)(a1 + 96);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "consumedAuxTimestamp", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 0x400) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "dthetaNormRad", *(float *)(a1 + 76));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x400) == 0)
  {
LABEL_5:
    if ((v5 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "inBTZ", *(unsigned char *)(a1 + 92));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x80) == 0)
  {
LABEL_6:
    if ((v5 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "listenerPitch", *(float *)(a1 + 80));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x100) == 0)
  {
LABEL_7:
    if ((v5 & 0x200) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "listenerRoll", *(float *)(a1 + 84));
  __int16 v5 = *(_WORD *)(a1 + 96);
  if ((v5 & 0x200) == 0)
  {
LABEL_8:
    if ((v5 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_25:
  PB::TextFormatter::format(this, "listenerYaw", *(float *)(a1 + 88));
  if ((*(_WORD *)(a1 + 96) & 2) != 0) {
LABEL_9:
  }
    PB::TextFormatter::format(this, "machAbsTimestamp", *(double *)(a1 + 40));
LABEL_10:
  __int16 v6 = *(float **)(a1 + 8);
  uint64_t v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "quaternion", v8);
  }
  __int16 v9 = *(_WORD *)(a1 + 96);
  if ((v9 & 4) != 0)
  {
    PB::TextFormatter::format(this, "receivedAuxTimestamp", *(double *)(a1 + 48));
    __int16 v9 = *(_WORD *)(a1 + 96);
    if ((v9 & 8) == 0)
    {
LABEL_14:
      if ((v9 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
  }
  else if ((v9 & 8) == 0)
  {
    goto LABEL_14;
  }
  PB::TextFormatter::format(this, "srcTimestamp", *(double *)(a1 + 56));
  if ((*(_WORD *)(a1 + 96) & 0x10) != 0) {
LABEL_15:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 64));
LABEL_16:

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1017438D0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        if (v12++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v22 = v13 & 7;
      if (v22 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 96) |= 0x10u;
          unint64_t v23 = *((void *)this + 1);
          if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v23);
          goto LABEL_81;
        case 2u:
          *(_WORD *)(a1 + 96) |= 0x200u;
          unint64_t v24 = *((void *)this + 1);
          if (v24 > 0xFFFFFFFFFFFFFFFBLL || v24 + 4 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v24);
          goto LABEL_106;
        case 3u:
          *(_WORD *)(a1 + 96) |= 0x80u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFFBLL || v25 + 4 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v25);
          goto LABEL_106;
        case 4u:
          *(_WORD *)(a1 + 96) |= 0x100u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFFBLL || v26 + 4 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v26);
          goto LABEL_106;
        case 5u:
          if (v22 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v27 = *((void *)this + 1);
            unint64_t v28 = *((void *)this + 2);
            while (v27 < v28 && !*((unsigned char *)this + 24))
            {
              unint64_t v30 = *(char **)(a1 + 16);
              unint64_t v29 = *(void *)(a1 + 24);
              if ((unint64_t)v30 >= v29)
              {
                unint64_t v32 = (char *)*v8;
                uint64_t v33 = (v30 - (unsigned char *)*v8) >> 2;
                unint64_t v34 = v33 + 1;
                if ((unint64_t)(v33 + 1) >> 62) {
                  goto LABEL_116;
                }
                uint64_t v35 = v29 - (void)v32;
                if (v35 >> 1 > v34) {
                  unint64_t v34 = v35 >> 1;
                }
                if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v36 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v36 = v34;
                }
                if (v36)
                {
                  unint64_t v37 = (char *)sub_10017EA34(v9, v36);
                  unint64_t v32 = *(char **)(a1 + 8);
                  unint64_t v30 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v37 = 0;
                }
                unint64_t v38 = &v37[4 * v33];
                *(_DWORD *)unint64_t v38 = 0;
                uint64_t v31 = v38 + 4;
                while (v30 != v32)
                {
                  int v39 = *((_DWORD *)v30 - 1);
                  v30 -= 4;
                  *((_DWORD *)v38 - 1) = v39;
                  v38 -= 4;
                }
                *(void *)(a1 + 8) = v38;
                *(void *)(a1 + 16) = v31;
                *(void *)(a1 + 24) = &v37[4 * v36];
                if (v32) {
                  operator delete(v32);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v30 = 0;
                uint64_t v31 = v30 + 4;
              }
              *(void *)(a1 + 16) = v31;
              unint64_t v40 = *((void *)this + 1);
              if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v31 - 1) = *(_DWORD *)(*(void *)this + v40);
              unint64_t v28 = *((void *)this + 2);
              unint64_t v27 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v27;
            }
            PB::Reader::recallMark();
          }
          else
          {
            char v53 = *(char **)(a1 + 16);
            unint64_t v52 = *(void *)(a1 + 24);
            if ((unint64_t)v53 >= v52)
            {
              unint64_t v55 = (char *)*v8;
              uint64_t v56 = (v53 - (unsigned char *)*v8) >> 2;
              unint64_t v57 = v56 + 1;
              if ((unint64_t)(v56 + 1) >> 62) {
LABEL_116:
              }
                sub_1001D7FD4();
              uint64_t v58 = v52 - (void)v55;
              if (v58 >> 1 > v57) {
                unint64_t v57 = v58 >> 1;
              }
              if ((unint64_t)v58 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v59 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v59 = v57;
              }
              if (v59)
              {
                unint64_t v60 = (char *)sub_10017EA34(v9, v59);
                unint64_t v55 = *(char **)(a1 + 8);
                char v53 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v60 = 0;
              }
              uint64_t v61 = &v60[4 * v56];
              *(_DWORD *)uint64_t v61 = 0;
              unint64_t v54 = v61 + 4;
              while (v53 != v55)
              {
                int v62 = *((_DWORD *)v53 - 1);
                v53 -= 4;
                *((_DWORD *)v61 - 1) = v62;
                v61 -= 4;
              }
              *(void *)(a1 + 8) = v61;
              *(void *)(a1 + 16) = v54;
              *(void *)(a1 + 24) = &v60[4 * v59];
              if (v55) {
                operator delete(v55);
              }
            }
            else
            {
              *(_DWORD *)char v53 = 0;
              unint64_t v54 = v53 + 4;
            }
            *(void *)(a1 + 16) = v54;
            unint64_t v63 = *((void *)this + 1);
            if (v63 <= 0xFFFFFFFFFFFFFFFBLL && v63 + 4 <= *((void *)this + 2))
            {
              *(v54 - 1) = *(_DWORD *)(*(void *)this + v63);
LABEL_106:
              uint64_t v51 = *((void *)this + 1) + 4;
LABEL_107:
              *((void *)this + 1) = v51;
            }
            else
            {
LABEL_104:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_108:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 6u:
          *(_WORD *)(a1 + 96) |= 0x400u;
          unint64_t v41 = *((void *)this + 1);
          if (v41 >= *((void *)this + 2))
          {
            BOOL v44 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v42 = v41 + 1;
            int v43 = *(unsigned __int8 *)(*(void *)this + v41);
            *((void *)this + 1) = v42;
            BOOL v44 = v43 != 0;
          }
          *(unsigned char *)(a1 + 92) = v44;
          goto LABEL_108;
        case 7u:
          *(_WORD *)(a1 + 96) |= 0x20u;
          unint64_t v45 = *((void *)this + 1);
          if (v45 > 0xFFFFFFFFFFFFFFFBLL || v45 + 4 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v45);
          goto LABEL_106;
        case 8u:
          *(_WORD *)(a1 + 96) |= 0x40u;
          unint64_t v46 = *((void *)this + 1);
          if (v46 > 0xFFFFFFFFFFFFFFFBLL || v46 + 4 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v46);
          goto LABEL_106;
        case 9u:
          *(_WORD *)(a1 + 96) |= 8u;
          unint64_t v47 = *((void *)this + 1);
          if (v47 > 0xFFFFFFFFFFFFFFF7 || v47 + 8 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v47);
          goto LABEL_81;
        case 0xAu:
          *(_WORD *)(a1 + 96) |= 1u;
          unint64_t v48 = *((void *)this + 1);
          if (v48 > 0xFFFFFFFFFFFFFFF7 || v48 + 8 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v48);
          goto LABEL_81;
        case 0xBu:
          *(_WORD *)(a1 + 96) |= 4u;
          unint64_t v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFF7 || v49 + 8 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v49);
          goto LABEL_81;
        case 0xCu:
          *(_WORD *)(a1 + 96) |= 2u;
          unint64_t v50 = *((void *)this + 1);
          if (v50 > 0xFFFFFFFFFFFFFFF7 || v50 + 8 > *((void *)this + 2)) {
            goto LABEL_104;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v50);
LABEL_81:
          uint64_t v51 = *((void *)this + 1) + 8;
          goto LABEL_107;
        default:
          if ((PB::Reader::skip(this, v13 >> 3, v22, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_108;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101743F14(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 96);
  if ((v4 & 0x10) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 64), 1u);
    __int16 v4 = *(_WORD *)(v3 + 96);
    if ((v4 & 0x200) == 0)
    {
LABEL_3:
      if ((v4 & 0x80) == 0) {
        goto LABEL_4;
      }
LABEL_19:
      uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 3u);
      if ((*(_WORD *)(v3 + 96) & 0x100) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((*(_WORD *)(result + 96) & 0x200) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88), 2u);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x80) != 0) {
    goto LABEL_19;
  }
LABEL_4:
  if ((v4 & 0x100) != 0) {
LABEL_5:
  }
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 4u);
LABEL_6:
  __int16 v5 = *(float **)(v3 + 8);
  __int16 v6 = *(float **)(v3 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    uint64_t result = PB::Writer::write(this, v7, 5u);
  }
  __int16 v8 = *(_WORD *)(v3 + 96);
  if ((v8 & 0x400) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 92), 6u);
    __int16 v8 = *(_WORD *)(v3 + 96);
    if ((v8 & 0x20) == 0)
    {
LABEL_11:
      if ((v8 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_23;
    }
  }
  else if ((v8 & 0x20) == 0)
  {
    goto LABEL_11;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 7u);
  __int16 v8 = *(_WORD *)(v3 + 96);
  if ((v8 & 0x40) == 0)
  {
LABEL_12:
    if ((v8 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 8u);
  __int16 v8 = *(_WORD *)(v3 + 96);
  if ((v8 & 8) == 0)
  {
LABEL_13:
    if ((v8 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 9u);
  __int16 v8 = *(_WORD *)(v3 + 96);
  if ((v8 & 1) == 0)
  {
LABEL_14:
    if ((v8 & 4) == 0) {
      goto LABEL_15;
    }
LABEL_26:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 0xBu);
    if ((*(_WORD *)(v3 + 96) & 2) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 0xAu);
  __int16 v8 = *(_WORD *)(v3 + 96);
  if ((v8 & 4) != 0) {
    goto LABEL_26;
  }
LABEL_15:
  if ((v8 & 2) == 0) {
    return result;
  }
LABEL_27:
  double v9 = *(double *)(v3 + 40);

  return PB::Writer::write(this, v9, 0xCu);
}

void *sub_1017440AC(void *result)
{
  *uint64_t result = &off_102338478;
  result[2] = 0;
  return result;
}

void sub_1017440D4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10174410C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338478;
  *(void *)(result + 16) = 0;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
    int v3 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = 2;
    *(_DWORD *)(result + 16) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 1) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 20))
  {
LABEL_5:
    uint64_t v4 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = v2;
    *(void *)(result + 8) = v4;
  }
  return result;
}

uint64_t sub_101744170(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "source", *(_DWORD *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1017441EC(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v27)
            {
              uint64_t v31 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_64;
            }
            unint64_t v40 = v27++;
            char v41 = *(unsigned char *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
              uint64_t v31 = 0;
              goto LABEL_63;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v31 = 0;
          }
LABEL_63:
          unint64_t v3 = v40 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v3 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v3;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              uint64_t v31 = 0;
              break;
            }
          }
        }
LABEL_64:
        *(void *)(a1 + 8) = v31;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_60;
            }
            unint64_t v36 = v21++;
            char v37 = *(unsigned char *)(v22 + v36);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_59:
          unint64_t v3 = v36 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v3 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v3;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_60:
        *(_DWORD *)(a1 + 16) = v25;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101744518(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 16), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if (v4)
  {
    unint64_t v5 = *(void *)(v3 + 8);
    return PB::Writer::writeVarInt(this, v5, 2u);
  }
  return result;
}

uint64_t sub_101744584(uint64_t result)
{
  *(void *)uint64_t result = &off_1023384B0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_1017445AC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1017445E4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023384B0;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(unsigned char *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_101744648(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if (v5)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "touchDetected", *(unsigned char *)(a1 + 16));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1017446C4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 >= *((void *)this + 2))
        {
          BOOL v22 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v22 = v21 != 0;
        }
        *(unsigned char *)(a1 + 16) = v22;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017448AC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    char v5 = *(unsigned char *)(v3 + 16);
    return PB::Writer::write(this, v5, 2u);
  }
  return result;
}

uint64_t sub_101744918(uint64_t result)
{
  *(void *)uint64_t result = &off_1023384E8;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_101744940(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101744978(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023384E8;
  *(_DWORD *)(result + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x10) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 28);
    char v3 = 16;
    *(unsigned char *)(result + 40) = 16;
    *(_DWORD *)(result + 28) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 40) = v3;
    *(_DWORD *)(result + 20) = v5;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(result + 40) = v3;
    *(_DWORD *)(result + 24) = v6;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(result + 40) = v3;
  *(_DWORD *)(result + 16) = v7;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v8 = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(unsigned char *)(result + 40) = v3;
  *(_DWORD *)(result + 32) = v8;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 1) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      return result;
    }
LABEL_16:
    char v10 = *(unsigned char *)(a2 + 36);
    *(unsigned char *)(result + 40) = v3 | 0x40;
    *(unsigned char *)(result + 36) = v10;
    return result;
  }
LABEL_15:
  uint64_t v9 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(result + 40) = v3;
  *(void *)(result + 8) = v9;
  if ((*(unsigned char *)(a2 + 40) & 0x40) != 0) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_101744A68(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if (v5)
  {
    PB::TextFormatter::format(this, "distanceToTrackMeters", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "estimatedLaneConfidence", *(_DWORD *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "estimatedLaneNumber", *(_DWORD *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "laneCount", *(_DWORD *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "laneNumber", *(_DWORD *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "odometerHasBeenCorrected", *(unsigned char *)(a1 + 36));
  if ((*(unsigned char *)(a1 + 40) & 0x20) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "trackProximity", *(_DWORD *)(a1 + 32));
LABEL_9:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101744B8C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 40) |= 0x10u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    LODWORD(v24) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_106;
                  }
                  unint64_t v55 = v20++;
                  char v56 = *(unsigned char *)(v21 + v55);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_105;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v24) = 0;
                }
LABEL_105:
                unint64_t v2 = v55 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_106;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                LODWORD(v24) = 0;
              }
LABEL_106:
              *(_DWORD *)(a1 + 28) = v24;
              goto LABEL_127;
            case 2u:
              *(unsigned char *)(a1 + 40) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_111;
                  }
                  unint64_t v59 = v27++;
                  char v60 = *(unsigned char *)(v28 + v59);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_110:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_111;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_110;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_111;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_111:
              *(_DWORD *)(a1 + 20) = v31;
              goto LABEL_127;
            case 3u:
              *(unsigned char *)(a1 + 40) |= 8u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v61 = 0;
                unsigned int v62 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_116;
                  }
                  unint64_t v63 = v33++;
                  char v64 = *(unsigned char *)(v34 + v63);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v64 & 0x7F) << v61;
                  if ((v64 & 0x80) == 0) {
                    break;
                  }
                  v61 += 7;
                  BOOL v14 = v62++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_115:
                    unint64_t v2 = v63 + 1;
                    goto LABEL_116;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_115;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_116;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_116:
              *(_DWORD *)(a1 + 24) = v37;
              goto LABEL_127;
            case 4u:
              *(unsigned char *)(a1 + 40) |= 2u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v65 = 0;
                unsigned int v66 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_121;
                  }
                  unint64_t v67 = v39++;
                  char v68 = *(unsigned char *)(v40 + v67);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v68 & 0x7F) << v65;
                  if ((v68 & 0x80) == 0) {
                    break;
                  }
                  v65 += 7;
                  BOOL v14 = v66++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_120:
                    unint64_t v2 = v67 + 1;
                    goto LABEL_121;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_120;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_121;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_121:
              *(_DWORD *)(a1 + 16) = v43;
              goto LABEL_127;
            case 5u:
              *(unsigned char *)(a1 + 40) |= 0x20u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v69 = 0;
                unsigned int v70 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_126;
                  }
                  unint64_t v71 = v45++;
                  char v72 = *(unsigned char *)(v46 + v71);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v72 & 0x7F) << v69;
                  if ((v72 & 0x80) == 0) {
                    break;
                  }
                  v69 += 7;
                  BOOL v14 = v70++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_125:
                    unint64_t v2 = v71 + 1;
                    goto LABEL_126;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_125;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_126;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_126:
              *(_DWORD *)(a1 + 32) = v49;
LABEL_127:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 6u:
              *(unsigned char *)(a1 + 40) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_127;
            case 7u:
              *(unsigned char *)(a1 + 40) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v52 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v51 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v52 = v51 != 0;
              }
              *(unsigned char *)(a1 + 36) = v52;
              goto LABEL_127;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_127;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101745248(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if ((v4 & 0x10) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 28), 1u);
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 20), 2u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 24), 3u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 16), 4u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x20) == 0)
  {
LABEL_6:
    if ((v4 & 1) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 6u);
    if ((*(unsigned char *)(v3 + 40) & 0x40) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 32), 5u);
  char v4 = *(unsigned char *)(v3 + 40);
  if (v4) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 0x40) == 0) {
    return result;
  }
LABEL_15:
  char v5 = *(unsigned char *)(v3 + 36);

  return PB::Writer::write(this, v5, 7u);
}

uint64_t sub_101745344(uint64_t result)
{
  *(void *)uint64_t result = &off_102338520;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void sub_10174536C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_1017453A4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338520;
  *(_DWORD *)(a1 + 56) = 0;
  char v2 = *(unsigned char *)(a2 + 56);
  if ((v2 & 8) != 0)
  {
    double result = *(double *)(a2 + 32);
    char v3 = 8;
    *(unsigned char *)(a1 + 56) = 8;
    *(double *)(a1 + 32) = result;
    char v2 = *(unsigned char *)(a2 + 56);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 56) & 4) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 56) = v3;
    *(double *)(a1 + 24) = result;
    char v2 = *(unsigned char *)(a2 + 56);
  }
LABEL_6:
  if (v2)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(a1 + 56) = v3;
    *(void *)(a1 + 8) = v5;
    char v2 = *(unsigned char *)(a2 + 56);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(a1 + 56) = v3;
  *(void *)(a1 + 16) = v6;
  char v2 = *(unsigned char *)(a2 + 56);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_14:
    double result = *(double *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = v3 | 0x20;
    *(double *)(a1 + 48) = result;
    return result;
  }
LABEL_13:
  double result = *(double *)(a2 + 40);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 56) = v3;
  *(double *)(a1 + 40) = result;
  if ((*(unsigned char *)(a2 + 56) & 0x20) != 0) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_101745478(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 56);
  if (v5)
  {
    PB::TextFormatter::format(this, "cycleIndex", *(void *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 56);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 56) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "error", *(void *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 56);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "machAbsoluteTimestamp", *(double *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 56);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "machContinuousTimestamp", *(double *)(a1 + 32));
  char v5 = *(unsigned char *)(a1 + 56);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "range", *(double *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 56) & 0x20) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "rssi", *(double *)(a1 + 48));
LABEL_8:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10174557C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 56) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_49;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_65;
            case 2u:
              *(unsigned char *)(a1 + 56) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_49;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_65;
            case 3u:
              *(unsigned char *)(a1 + 56) |= 1u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    uint64_t v25 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_70;
                  }
                  unint64_t v35 = v21++;
                  char v36 = *(unsigned char *)(v22 + v35);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    uint64_t v25 = 0;
LABEL_69:
                    unint64_t v2 = v35 + 1;
                    goto LABEL_70;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v25 = 0;
                }
                goto LABEL_69;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_70;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              uint64_t v25 = 0;
LABEL_70:
              *(void *)(a1 + 8) = v25;
              goto LABEL_76;
            case 4u:
              *(unsigned char *)(a1 + 56) |= 2u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_75;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_74:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_75;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_74;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_75;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_75:
              *(void *)(a1 + 16) = v31;
LABEL_76:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 5u:
              *(unsigned char *)(a1 + 56) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_49;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_65;
            case 6u:
              *(unsigned char *)(a1 + 56) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
LABEL_65:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_49:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_76;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_76;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_1017459D4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 56);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32), 1u);
    char v4 = *(unsigned char *)(v3 + 56);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 56) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 2u);
  char v4 = *(unsigned char *)(v3 + 56);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 3u);
  char v4 = *(unsigned char *)(v3 + 56);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 5u);
    if ((*(unsigned char *)(v3 + 56) & 0x20) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 4u);
  char v4 = *(unsigned char *)(v3 + 56);
  if ((v4 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_13:
  double v5 = *(double *)(v3 + 48);

  return PB::Writer::write(this, v5, 6u);
}

uint64_t sub_101745AB4(uint64_t result)
{
  *(void *)uint64_t result = &off_102338558;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_101745ADC(PB::Base *this)
{
  *(void *)this = &off_102338558;
  uint64_t v2 = *((void *)this + 2);
  *((void *)this + 2) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101745B60(PB::Base *a1)
{
  sub_101745ADC(a1);

  operator delete();
}

uint64_t sub_101745B98(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338558;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (*(void *)(a2 + 16)) {
    operator new();
  }
  if (*(unsigned char *)(a2 + 24))
  {
    uint64_t v2 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 24) |= 1u;
    *(void *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_101745C64(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 24)) {
    PB::TextFormatter::format(this, "aopTimestamp", *(void *)(a1 + 8));
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101745CFC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        uint64_t v23 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v22)
        {
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v26 = 0;
          if (v22 <= v21) {
            unint64_t v22 = *((void *)this + 1);
          }
          while (1)
          {
            if (v22 == v21)
            {
              uint64_t v26 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v32 = v21 + 1;
            char v33 = *(unsigned char *)(v23 + v21);
            *((void *)this + 1) = v32;
            v26 |= (unint64_t)(v33 & 0x7F) << v30;
            if ((v33 & 0x80) == 0) {
              break;
            }
            v30 += 7;
            unint64_t v21 = v32;
            BOOL v14 = v31++ > 8;
            if (v14)
            {
LABEL_39:
              uint64_t v26 = 0;
              goto LABEL_43;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v26 = 0;
          }
        }
        else
        {
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (1)
          {
            unint64_t v27 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v28 = *(unsigned char *)(v23 + v21);
            v26 |= (unint64_t)(v28 & 0x7F) << v24;
            if ((v28 & 0x80) == 0) {
              break;
            }
            v24 += 7;
            unint64_t v21 = v27;
            BOOL v14 = v25++ > 8;
            if (v14) {
              goto LABEL_39;
            }
          }
        }
LABEL_43:
        *(void *)(a1 + 8) = v26;
      }
      else
      {
        if (v20 == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101745FE8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(const PB::Base **)(result + 16);
  if (v4) {
    uint64_t result = PB::Writer::writeSubmessage(this, v4, 1u);
  }
  if (*(unsigned char *)(v3 + 24))
  {
    unint64_t v5 = *(void *)(v3 + 8);
    return PB::Writer::writeVarInt(this, v5, 2u);
  }
  return result;
}

uint64_t sub_101746050(uint64_t result)
{
  *(void *)uint64_t result = &off_102338590;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_101746074(PB::Base *this)
{
  *(void *)this = &off_102338590;
  uint64_t v4 = *((void *)this + 1);
  unint64_t v2 = (void *)((char *)this + 8);
  uint64_t v3 = v4;
  *unint64_t v2 = 0;
  if (v4) {
    sub_10068D784((uint64_t)v2, v3);
  }

  PB::Base::~Base(this);
}

void sub_1017460D8(PB::Base *a1)
{
  sub_101746074(a1);

  operator delete();
}

uint64_t sub_101746110(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338590;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (*(unsigned char *)(a2 + 24))
  {
    uint64_t v2 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 24) = 1;
    *(void *)(result + 16) = v2;
  }
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017461EC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(void *)(a1 + 8)) {
    PB::TextFormatter::format();
  }
  if (*(unsigned char *)(a1 + 24)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101746264(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2) {
        operator new();
      }
      if (v20 == 1)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v21);
          *((void *)this + 1) += 8;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10174646C(uint64_t result, PB::Writer *this)
{
  uint64_t v2 = result;
  if (*(unsigned char *)(result + 24)) {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16), 1u);
  }
  if (*(void *)(v2 + 8))
  {
    return PB::Writer::write();
  }
  return result;
}

double sub_1017464D4(uint64_t a1)
{
  *(void *)a1 = &off_1023385C8;
  *(void *)(a1 + 336) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  return result;
}

void sub_101746544(PB::Base *this)
{
  *(void *)this = &off_1023385C8;
  uint64_t v2 = (void *)*((void *)this + 34);
  if (v2)
  {
    *((void *)this + 35) = v2;
    operator delete(v2);
  }
  unint64_t v3 = (void *)*((void *)this + 31);
  if (v3)
  {
    *((void *)this + 32) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 28);
  if (v4)
  {
    *((void *)this + 29) = v4;
    operator delete(v4);
  }
  unint64_t v5 = (void *)*((void *)this + 25);
  if (v5)
  {
    *((void *)this + 26) = v5;
    operator delete(v5);
  }
  uint64_t v6 = (void *)*((void *)this + 22);
  if (v6)
  {
    *((void *)this + 23) = v6;
    operator delete(v6);
  }
  int v7 = (void *)*((void *)this + 19);
  if (v7)
  {
    *((void *)this + 20) = v7;
    operator delete(v7);
  }
  uint64_t v8 = (void *)*((void *)this + 16);
  if (v8)
  {
    *((void *)this + 17) = v8;
    operator delete(v8);
  }
  char v9 = (void *)*((void *)this + 13);
  if (v9)
  {
    *((void *)this + 14) = v9;
    operator delete(v9);
  }
  unsigned int v10 = (void *)*((void *)this + 10);
  if (v10)
  {
    *((void *)this + 11) = v10;
    operator delete(v10);
  }
  unint64_t v11 = (void *)*((void *)this + 7);
  if (v11)
  {
    *((void *)this + 8) = v11;
    operator delete(v11);
  }
  unint64_t v12 = (void *)*((void *)this + 4);
  if (v12)
  {
    *((void *)this + 5) = v12;
    operator delete(v12);
  }
  char v13 = (void *)*((void *)this + 1);
  if (v13)
  {
    *((void *)this + 2) = v13;
    operator delete(v13);
  }

  PB::Base::~Base(this);
}

void sub_101746658(PB::Base *a1)
{
  sub_101746544(a1);

  operator delete();
}

uint64_t sub_101746690(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023385C8;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  unint64_t v5 = (char *)(a1 + 56);
  *(_OWORD *)(a1 + 104) = 0u;
  uint64_t v6 = (char *)(a1 + 104);
  *(_OWORD *)(a1 + 152) = 0u;
  int v7 = (char *)(a1 + 152);
  *(_OWORD *)(a1 + 200) = 0u;
  uint64_t v8 = (char *)(a1 + 200);
  *(_OWORD *)(a1 + 248) = 0u;
  char v9 = (char *)(a1 + 248);
  *(void *)(a1 + 336) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  char v10 = *(unsigned char *)(a2 + 340);
  if ((v10 & 0x40) != 0)
  {
    int v12 = *(_DWORD *)(a2 + 336);
    char v11 = 64;
    *(unsigned char *)(a1 + 340) = 64;
    *(_DWORD *)(a1 + 336) = v12;
    char v10 = *(unsigned char *)(a2 + 340);
    if ((v10 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v11 = 0;
  if ((*(unsigned char *)(a2 + 340) & 4) != 0)
  {
LABEL_5:
    uint64_t v13 = *(void *)(a2 + 312);
    v11 |= 4u;
    *(unsigned char *)(a1 + 340) = v11;
    *(void *)(a1 + 312) = v13;
    char v10 = *(unsigned char *)(a2 + 340);
  }
LABEL_6:
  if (v10)
  {
    uint64_t v19 = *(void *)(a2 + 296);
    v11 |= 1u;
    *(unsigned char *)(a1 + 340) = v11;
    *(void *)(a1 + 296) = v19;
    char v10 = *(unsigned char *)(a2 + 340);
    if ((v10 & 8) == 0)
    {
LABEL_8:
      if ((v10 & 2) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
  }
  else if ((v10 & 8) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v20 = *(void *)(a2 + 320);
  v11 |= 8u;
  *(unsigned char *)(a1 + 340) = v11;
  *(void *)(a1 + 320) = v20;
  if ((*(unsigned char *)(a2 + 340) & 2) != 0)
  {
LABEL_9:
    uint64_t v14 = *(void *)(a2 + 304);
    *(unsigned char *)(a1 + 340) = v11 | 2;
    *(void *)(a1 + 304) = v14;
  }
LABEL_10:
  if (a1 != a2)
  {
    sub_1002DD194((char *)(a1 + 176), *(char **)(a2 + 176), *(void *)(a2 + 184), (uint64_t)(*(void *)(a2 + 184) - *(void *)(a2 + 176)) >> 3);
    sub_1002DD194(v6, *(char **)(a2 + 104), *(void *)(a2 + 112), (uint64_t)(*(void *)(a2 + 112) - *(void *)(a2 + 104)) >> 3);
    sub_1002DD194((char *)(a1 + 272), *(char **)(a2 + 272), *(void *)(a2 + 280), (uint64_t)(*(void *)(a2 + 280) - *(void *)(a2 + 272)) >> 3);
    sub_1002DD194(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_1002DD194((char *)(a1 + 224), *(char **)(a2 + 224), *(void *)(a2 + 232), (uint64_t)(*(void *)(a2 + 232) - *(void *)(a2 + 224)) >> 3);
    sub_1002DD194(v7, *(char **)(a2 + 152), *(void *)(a2 + 160), (uint64_t)(*(void *)(a2 + 160) - *(void *)(a2 + 152)) >> 3);
    sub_1002DD194((char *)(a1 + 128), *(char **)(a2 + 128), *(void *)(a2 + 136), (uint64_t)(*(void *)(a2 + 136) - *(void *)(a2 + 128)) >> 3);
    sub_1002DD194(v9, *(char **)(a2 + 248), *(void *)(a2 + 256), (uint64_t)(*(void *)(a2 + 256) - *(void *)(a2 + 248)) >> 3);
    sub_1002DD194((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_1002DD194(v8, *(char **)(a2 + 200), *(void *)(a2 + 208), (uint64_t)(*(void *)(a2 + 208) - *(void *)(a2 + 200)) >> 3);
    sub_1002DD194((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 3);
    sub_1002DD194(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 3);
  }
  char v15 = *(unsigned char *)(a2 + 340);
  if ((v15 & 0x20) != 0)
  {
    int v16 = *(_DWORD *)(a2 + 332);
    *(unsigned char *)(a1 + 340) |= 0x20u;
    *(_DWORD *)(a1 + 332) = v16;
    char v15 = *(unsigned char *)(a2 + 340);
  }
  if ((v15 & 0x10) != 0)
  {
    int v17 = *(_DWORD *)(a2 + 328);
    *(unsigned char *)(a1 + 340) |= 0x10u;
    *(_DWORD *)(a1 + 328) = v17;
  }
  return a1;
}

uint64_t sub_101746918(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  unint64_t v5 = *(double **)(a1 + 8);
  uint64_t v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "accelBias", v7);
  }
  uint64_t v8 = *(double **)(a1 + 32);
  char v9 = *(double **)(a1 + 40);
  while (v8 != v9)
  {
    double v10 = *v8++;
    PB::TextFormatter::format(this, "accelBiasCov", v10);
  }
  char v11 = *(unsigned char *)(a1 + 340);
  if ((v11 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "cameraImageResolutionHeight", *(float *)(a1 + 328));
    char v11 = *(unsigned char *)(a1 + 340);
  }
  if ((v11 & 0x20) != 0) {
    PB::TextFormatter::format(this, "cameraImageResolutionWidth", *(float *)(a1 + 332));
  }
  int v12 = *(double **)(a1 + 56);
  uint64_t v13 = *(double **)(a1 + 64);
  while (v12 != v13)
  {
    double v14 = *v12++;
    PB::TextFormatter::format(this, "cameraIntrinsics", v14);
  }
  char v15 = *(double **)(a1 + 80);
  int v16 = *(double **)(a1 + 88);
  while (v15 != v16)
  {
    double v17 = *v15++;
    PB::TextFormatter::format(this, "cameraPose", v17);
  }
  char v18 = *(double **)(a1 + 104);
  uint64_t v19 = *(double **)(a1 + 112);
  while (v18 != v19)
  {
    double v20 = *v18++;
    PB::TextFormatter::format(this, "gyroBias", v20);
  }
  unint64_t v21 = *(double **)(a1 + 128);
  unint64_t v22 = *(double **)(a1 + 136);
  while (v21 != v22)
  {
    double v23 = *v21++;
    PB::TextFormatter::format(this, "gyroBiasCov", v23);
  }
  char v24 = *(unsigned char *)(a1 + 340);
  if (v24)
  {
    PB::TextFormatter::format(this, "machContinuousOriginTimestamp", *(double *)(a1 + 296));
    char v24 = *(unsigned char *)(a1 + 340);
  }
  if ((v24 & 2) != 0) {
    PB::TextFormatter::format(this, "machContinuousTimestamp", *(double *)(a1 + 304));
  }
  unsigned int v25 = *(double **)(a1 + 176);
  uint64_t v26 = *(double **)(a1 + 184);
  while (v25 != v26)
  {
    double v27 = *v25++;
    PB::TextFormatter::format(this, "orientation", v27);
  }
  char v28 = *(double **)(a1 + 152);
  char v29 = *(double **)(a1 + 160);
  while (v28 != v29)
  {
    double v30 = *v28++;
    PB::TextFormatter::format(this, "orientationCov", v30);
  }
  if ((*(unsigned char *)(a1 + 340) & 4) != 0) {
    PB::TextFormatter::format(this, "originTimestamp", *(double *)(a1 + 312));
  }
  unsigned int v31 = *(double **)(a1 + 224);
  unint64_t v32 = *(double **)(a1 + 232);
  while (v31 != v32)
  {
    double v33 = *v31++;
    PB::TextFormatter::format(this, "position", v33);
  }
  unsigned int v34 = *(double **)(a1 + 200);
  unint64_t v35 = *(double **)(a1 + 208);
  while (v34 != v35)
  {
    double v36 = *v34++;
    PB::TextFormatter::format(this, "positionCov", v36);
  }
  char v37 = *(unsigned char *)(a1 + 340);
  if ((v37 & 8) != 0)
  {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 320));
    char v37 = *(unsigned char *)(a1 + 340);
  }
  if ((v37 & 0x40) != 0) {
    PB::TextFormatter::format(this, "trackingState", *(_DWORD *)(a1 + 336));
  }
  unsigned int v38 = *(double **)(a1 + 272);
  unint64_t v39 = *(double **)(a1 + 280);
  while (v38 != v39)
  {
    double v40 = *v38++;
    PB::TextFormatter::format(this, "velocity", v40);
  }
  char v41 = *(double **)(a1 + 248);
  unsigned int v42 = *(double **)(a1 + 256);
  while (v41 != v42)
  {
    double v43 = *v41++;
    PB::TextFormatter::format(this, "velocityCov", v43);
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_101746C40(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    v355 = (void **)(a1 + 56);
    uint64_t v347 = a1 + 72;
    v354 = (void **)(a1 + 80);
    uint64_t v346 = a1 + 96;
    v353 = (void **)(a1 + 200);
    v352 = (void **)(a1 + 32);
    uint64_t v344 = a1 + 48;
    uint64_t v345 = a1 + 216;
    uint64_t v343 = a1 + 264;
    v350 = (void **)(a1 + 128);
    v351 = (void **)(a1 + 248);
    v349 = (void **)(a1 + 152);
    uint64_t v341 = a1 + 168;
    uint64_t v342 = a1 + 144;
    v348 = (void **)(a1 + 224);
    uint64_t v8 = (void **)(a1 + 8);
    uint64_t v339 = a1 + 24;
    uint64_t v340 = a1 + 240;
    char v9 = (void **)(a1 + 272);
    double v10 = (void **)(a1 + 104);
    uint64_t v337 = a1 + 120;
    uint64_t v338 = a1 + 288;
    char v11 = (void **)(a1 + 176);
    uint64_t v336 = a1 + 192;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 340) |= 0x40u;
          unint64_t v25 = *((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
          uint64_t v27 = *(void *)this;
          if (v25 <= 0xFFFFFFFFFFFFFFF5 && v25 + 10 <= v26)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            do
            {
              unint64_t v31 = v25 + 1;
              *((void *)this + 1) = v25 + 1;
              char v32 = *(unsigned char *)(v27 + v25);
              v30 |= (unint64_t)(v32 & 0x7F) << v28;
              if ((v32 & 0x80) == 0) {
                goto LABEL_471;
              }
              v28 += 7;
              unint64_t v25 = v31;
              BOOL v18 = v29++ > 8;
            }
            while (!v18);
LABEL_347:
            LODWORD(v30) = 0;
            goto LABEL_471;
          }
          char v208 = 0;
          unsigned int v209 = 0;
          uint64_t v30 = 0;
          if (v26 <= v25) {
            unint64_t v26 = *((void *)this + 1);
          }
          while (2)
          {
            if (v26 == v25)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v210 = v25 + 1;
              char v211 = *(unsigned char *)(v27 + v25);
              *((void *)this + 1) = v210;
              v30 |= (unint64_t)(v211 & 0x7F) << v208;
              if (v211 < 0)
              {
                v208 += 7;
                unint64_t v25 = v210;
                BOOL v18 = v209++ > 8;
                if (v18) {
                  goto LABEL_347;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v30) = 0;
              }
            }
            break;
          }
LABEL_471:
          *(_DWORD *)(a1 + 336) = v30;
          goto LABEL_562;
        case 2u:
          *(unsigned char *)(a1 + 340) |= 4u;
          unint64_t v33 = *((void *)this + 1);
          if (v33 > 0xFFFFFFFFFFFFFFF7 || v33 + 8 > *((void *)this + 2)) {
            goto LABEL_558;
          }
          *(void *)(a1 + 312) = *(void *)(*(void *)this + v33);
          goto LABEL_560;
        case 3u:
          *(unsigned char *)(a1 + 340) |= 1u;
          unint64_t v34 = *((void *)this + 1);
          if (v34 > 0xFFFFFFFFFFFFFFF7 || v34 + 8 > *((void *)this + 2)) {
            goto LABEL_558;
          }
          *(void *)(a1 + 296) = *(void *)(*(void *)this + v34);
          goto LABEL_560;
        case 4u:
          *(unsigned char *)(a1 + 340) |= 8u;
          unint64_t v35 = *((void *)this + 1);
          if (v35 > 0xFFFFFFFFFFFFFFF7 || v35 + 8 > *((void *)this + 2)) {
            goto LABEL_558;
          }
          *(void *)(a1 + 320) = *(void *)(*(void *)this + v35);
          goto LABEL_560;
        case 5u:
          *(unsigned char *)(a1 + 340) |= 2u;
          unint64_t v36 = *((void *)this + 1);
          if (v36 > 0xFFFFFFFFFFFFFFF7 || v36 + 8 > *((void *)this + 2)) {
            goto LABEL_558;
          }
          *(void *)(a1 + 304) = *(void *)(*(void *)this + v36);
          goto LABEL_560;
        case 6u:
          if (v24 != 2)
          {
            unsigned int v213 = *(char **)(a1 + 184);
            unint64_t v212 = *(void *)(a1 + 192);
            if ((unint64_t)v213 >= v212)
            {
              v237 = (char *)*v11;
              uint64_t v238 = (v213 - (unsigned char *)*v11) >> 3;
              unint64_t v239 = v238 + 1;
              if ((unint64_t)(v238 + 1) >> 61) {
LABEL_572:
              }
                sub_1001D7FD4();
              uint64_t v240 = v212 - (void)v237;
              if (v240 >> 2 > v239) {
                unint64_t v239 = v240 >> 2;
              }
              if ((unint64_t)v240 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v241 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v241 = v239;
              }
              if (v241)
              {
                v242 = (char *)sub_1000DA54C(v336, v241);
                v237 = *(char **)(a1 + 176);
                unsigned int v213 = *(char **)(a1 + 184);
              }
              else
              {
                v242 = 0;
              }
              v309 = &v242[8 * v238];
              *(void *)v309 = 0;
              unint64_t v214 = v309 + 8;
              while (v213 != v237)
              {
                uint64_t v310 = *((void *)v213 - 1);
                v213 -= 8;
                *((void *)v309 - 1) = v310;
                v309 -= 8;
              }
              *(void *)(a1 + 176) = v309;
              *(void *)(a1 + 184) = v214;
              *(void *)(a1 + 192) = &v242[8 * v241];
              if (v237) {
                operator delete(v237);
              }
            }
            else
            {
              *(void *)unsigned int v213 = 0;
              unint64_t v214 = v213 + 8;
            }
            *(void *)(a1 + 184) = v214;
            goto LABEL_556;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v37 = *((void *)this + 1);
          unint64_t v38 = *((void *)this + 2);
          while (v37 < v38 && !*((unsigned char *)this + 24))
          {
            double v40 = *(char **)(a1 + 184);
            unint64_t v39 = *(void *)(a1 + 192);
            if ((unint64_t)v40 >= v39)
            {
              unsigned int v42 = (char *)*v11;
              uint64_t v43 = (v40 - (unsigned char *)*v11) >> 3;
              unint64_t v44 = v43 + 1;
              if ((unint64_t)(v43 + 1) >> 61) {
                goto LABEL_572;
              }
              uint64_t v45 = v39 - (void)v42;
              if (v45 >> 2 > v44) {
                unint64_t v44 = v45 >> 2;
              }
              if ((unint64_t)v45 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v46 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v46 = v44;
              }
              if (v46)
              {
                char v47 = (char *)sub_1000DA54C(v336, v46);
                unsigned int v42 = *(char **)(a1 + 176);
                double v40 = *(char **)(a1 + 184);
              }
              else
              {
                char v47 = 0;
              }
              unsigned int v48 = &v47[8 * v43];
              *(void *)unsigned int v48 = 0;
              char v41 = v48 + 8;
              while (v40 != v42)
              {
                uint64_t v49 = *((void *)v40 - 1);
                v40 -= 8;
                *((void *)v48 - 1) = v49;
                v48 -= 8;
              }
              *(void *)(a1 + 176) = v48;
              *(void *)(a1 + 184) = v41;
              *(void *)(a1 + 192) = &v47[8 * v46];
              if (v42) {
                operator delete(v42);
              }
            }
            else
            {
              *(void *)double v40 = 0;
              char v41 = v40 + 8;
            }
            *(void *)(a1 + 184) = v41;
            unint64_t v50 = *((void *)this + 1);
            if (v50 > 0xFFFFFFFFFFFFFFF7 || v50 + 8 > *((void *)this + 2)) {
              goto LABEL_332;
            }
            *(v41 - 1) = *(void *)(*(void *)this + v50);
            unint64_t v38 = *((void *)this + 2);
            unint64_t v37 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v37;
          }
          goto LABEL_333;
        case 7u:
          if (v24 != 2)
          {
            char v216 = *(char **)(a1 + 112);
            unint64_t v215 = *(void *)(a1 + 120);
            if ((unint64_t)v216 >= v215)
            {
              v243 = (char *)*v10;
              uint64_t v244 = (v216 - (unsigned char *)*v10) >> 3;
              unint64_t v245 = v244 + 1;
              if ((unint64_t)(v244 + 1) >> 61) {
LABEL_573:
              }
                sub_1001D7FD4();
              uint64_t v246 = v215 - (void)v243;
              if (v246 >> 2 > v245) {
                unint64_t v245 = v246 >> 2;
              }
              if ((unint64_t)v246 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v247 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v247 = v245;
              }
              if (v247)
              {
                v248 = (char *)sub_1000DA54C(v337, v247);
                v243 = *(char **)(a1 + 104);
                char v216 = *(char **)(a1 + 112);
              }
              else
              {
                v248 = 0;
              }
              v311 = &v248[8 * v244];
              *(void *)v311 = 0;
              unint64_t v214 = v311 + 8;
              while (v216 != v243)
              {
                uint64_t v312 = *((void *)v216 - 1);
                v216 -= 8;
                *((void *)v311 - 1) = v312;
                v311 -= 8;
              }
              *(void *)(a1 + 104) = v311;
              *(void *)(a1 + 112) = v214;
              *(void *)(a1 + 120) = &v248[8 * v247];
              if (v243) {
                operator delete(v243);
              }
            }
            else
            {
              *(void *)char v216 = 0;
              unint64_t v214 = v216 + 8;
            }
            *(void *)(a1 + 112) = v214;
            goto LABEL_556;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v51 = *((void *)this + 1);
          unint64_t v52 = *((void *)this + 2);
          while (v51 < v52 && !*((unsigned char *)this + 24))
          {
            unsigned int v54 = *(char **)(a1 + 112);
            unint64_t v53 = *(void *)(a1 + 120);
            if ((unint64_t)v54 >= v53)
            {
              char v56 = (char *)*v10;
              uint64_t v57 = (v54 - (unsigned char *)*v10) >> 3;
              unint64_t v58 = v57 + 1;
              if ((unint64_t)(v57 + 1) >> 61) {
                goto LABEL_573;
              }
              uint64_t v59 = v53 - (void)v56;
              if (v59 >> 2 > v58) {
                unint64_t v58 = v59 >> 2;
              }
              if ((unint64_t)v59 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v60 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v60 = v58;
              }
              if (v60)
              {
                char v61 = (char *)sub_1000DA54C(v337, v60);
                char v56 = *(char **)(a1 + 104);
                unsigned int v54 = *(char **)(a1 + 112);
              }
              else
              {
                char v61 = 0;
              }
              unsigned int v62 = &v61[8 * v57];
              *(void *)unsigned int v62 = 0;
              unint64_t v55 = v62 + 8;
              while (v54 != v56)
              {
                uint64_t v63 = *((void *)v54 - 1);
                v54 -= 8;
                *((void *)v62 - 1) = v63;
                v62 -= 8;
              }
              *(void *)(a1 + 104) = v62;
              *(void *)(a1 + 112) = v55;
              *(void *)(a1 + 120) = &v61[8 * v60];
              if (v56) {
                operator delete(v56);
              }
            }
            else
            {
              *(void *)unsigned int v54 = 0;
              unint64_t v55 = v54 + 8;
            }
            *(void *)(a1 + 112) = v55;
            unint64_t v64 = *((void *)this + 1);
            if (v64 > 0xFFFFFFFFFFFFFFF7 || v64 + 8 > *((void *)this + 2)) {
              goto LABEL_332;
            }
            *(v55 - 1) = *(void *)(*(void *)this + v64);
            unint64_t v52 = *((void *)this + 2);
            unint64_t v51 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v51;
          }
          goto LABEL_333;
        case 8u:
          if (v24 != 2)
          {
            unint64_t v218 = *(char **)(a1 + 280);
            unint64_t v217 = *(void *)(a1 + 288);
            if ((unint64_t)v218 >= v217)
            {
              v249 = (char *)*v9;
              uint64_t v250 = (v218 - (unsigned char *)*v9) >> 3;
              unint64_t v251 = v250 + 1;
              if ((unint64_t)(v250 + 1) >> 61) {
LABEL_574:
              }
                sub_1001D7FD4();
              uint64_t v252 = v217 - (void)v249;
              if (v252 >> 2 > v251) {
                unint64_t v251 = v252 >> 2;
              }
              if ((unint64_t)v252 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v253 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v253 = v251;
              }
              if (v253)
              {
                v254 = (char *)sub_1000DA54C(v338, v253);
                v249 = *(char **)(a1 + 272);
                unint64_t v218 = *(char **)(a1 + 280);
              }
              else
              {
                v254 = 0;
              }
              v313 = &v254[8 * v250];
              *(void *)v313 = 0;
              unint64_t v214 = v313 + 8;
              while (v218 != v249)
              {
                uint64_t v314 = *((void *)v218 - 1);
                v218 -= 8;
                *((void *)v313 - 1) = v314;
                v313 -= 8;
              }
              *(void *)(a1 + 272) = v313;
              *(void *)(a1 + 280) = v214;
              *(void *)(a1 + 288) = &v254[8 * v253];
              if (v249) {
                operator delete(v249);
              }
            }
            else
            {
              *(void *)unint64_t v218 = 0;
              unint64_t v214 = v218 + 8;
            }
            *(void *)(a1 + 280) = v214;
            goto LABEL_556;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v65 = *((void *)this + 1);
          unint64_t v66 = *((void *)this + 2);
          while (v65 < v66 && !*((unsigned char *)this + 24))
          {
            char v68 = *(char **)(a1 + 280);
            unint64_t v67 = *(void *)(a1 + 288);
            if ((unint64_t)v68 >= v67)
            {
              unsigned int v70 = (char *)*v9;
              uint64_t v71 = (v68 - (unsigned char *)*v9) >> 3;
              unint64_t v72 = v71 + 1;
              if ((unint64_t)(v71 + 1) >> 61) {
                goto LABEL_574;
              }
              uint64_t v73 = v67 - (void)v70;
              if (v73 >> 2 > v72) {
                unint64_t v72 = v73 >> 2;
              }
              if ((unint64_t)v73 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v74 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v74 = v72;
              }
              if (v74)
              {
                unint64_t v75 = (char *)sub_1000DA54C(v338, v74);
                unsigned int v70 = *(char **)(a1 + 272);
                char v68 = *(char **)(a1 + 280);
              }
              else
              {
                unint64_t v75 = 0;
              }
              uint64_t v76 = &v75[8 * v71];
              *(void *)uint64_t v76 = 0;
              char v69 = v76 + 8;
              while (v68 != v70)
              {
                uint64_t v77 = *((void *)v68 - 1);
                v68 -= 8;
                *((void *)v76 - 1) = v77;
                v76 -= 8;
              }
              *(void *)(a1 + 272) = v76;
              *(void *)(a1 + 280) = v69;
              *(void *)(a1 + 288) = &v75[8 * v74];
              if (v70) {
                operator delete(v70);
              }
            }
            else
            {
              *(void *)char v68 = 0;
              char v69 = v68 + 8;
            }
            *(void *)(a1 + 280) = v69;
            unint64_t v78 = *((void *)this + 1);
            if (v78 > 0xFFFFFFFFFFFFFFF7 || v78 + 8 > *((void *)this + 2)) {
              goto LABEL_332;
            }
            *(v69 - 1) = *(void *)(*(void *)this + v78);
            unint64_t v66 = *((void *)this + 2);
            unint64_t v65 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v65;
          }
          goto LABEL_333;
        case 9u:
          if (v24 != 2)
          {
            char v220 = *(char **)(a1 + 16);
            unint64_t v219 = *(void *)(a1 + 24);
            if ((unint64_t)v220 >= v219)
            {
              v255 = (char *)*v8;
              uint64_t v256 = (v220 - (unsigned char *)*v8) >> 3;
              unint64_t v257 = v256 + 1;
              if ((unint64_t)(v256 + 1) >> 61) {
LABEL_575:
              }
                sub_1001D7FD4();
              uint64_t v258 = v219 - (void)v255;
              if (v258 >> 2 > v257) {
                unint64_t v257 = v258 >> 2;
              }
              if ((unint64_t)v258 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v259 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v259 = v257;
              }
              if (v259)
              {
                v260 = (char *)sub_1000DA54C(v339, v259);
                v255 = *(char **)(a1 + 8);
                char v220 = *(char **)(a1 + 16);
              }
              else
              {
                v260 = 0;
              }
              v315 = &v260[8 * v256];
              *(void *)v315 = 0;
              unint64_t v214 = v315 + 8;
              while (v220 != v255)
              {
                uint64_t v316 = *((void *)v220 - 1);
                v220 -= 8;
                *((void *)v315 - 1) = v316;
                v315 -= 8;
              }
              *(void *)(a1 + 8) = v315;
              *(void *)(a1 + 16) = v214;
              *(void *)(a1 + 24) = &v260[8 * v259];
              if (v255) {
                operator delete(v255);
              }
            }
            else
            {
              *(void *)char v220 = 0;
              unint64_t v214 = v220 + 8;
            }
            *(void *)(a1 + 16) = v214;
            goto LABEL_556;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v79 = *((void *)this + 1);
          unint64_t v80 = *((void *)this + 2);
          while (v79 < v80 && !*((unsigned char *)this + 24))
          {
            char v82 = *(char **)(a1 + 16);
            unint64_t v81 = *(void *)(a1 + 24);
            if ((unint64_t)v82 >= v81)
            {
              unsigned int v84 = (char *)*v8;
              uint64_t v85 = (v82 - (unsigned char *)*v8) >> 3;
              unint64_t v86 = v85 + 1;
              if ((unint64_t)(v85 + 1) >> 61) {
                goto LABEL_575;
              }
              uint64_t v87 = v81 - (void)v84;
              if (v87 >> 2 > v86) {
                unint64_t v86 = v87 >> 2;
              }
              if ((unint64_t)v87 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v88 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v88 = v86;
              }
              if (v88)
              {
                unint64_t v89 = (char *)sub_1000DA54C(v339, v88);
                unsigned int v84 = *(char **)(a1 + 8);
                char v82 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v89 = 0;
              }
              char v90 = &v89[8 * v85];
              *(void *)char v90 = 0;
              char v83 = v90 + 8;
              while (v82 != v84)
              {
                uint64_t v91 = *((void *)v82 - 1);
                v82 -= 8;
                *((void *)v90 - 1) = v91;
                v90 -= 8;
              }
              *(void *)(a1 + 8) = v90;
              *(void *)(a1 + 16) = v83;
              *(void *)(a1 + 24) = &v89[8 * v88];
              if (v84) {
                operator delete(v84);
              }
            }
            else
            {
              *(void *)char v82 = 0;
              char v83 = v82 + 8;
            }
            *(void *)(a1 + 16) = v83;
            unint64_t v92 = *((void *)this + 1);
            if (v92 > 0xFFFFFFFFFFFFFFF7 || v92 + 8 > *((void *)this + 2)) {
              goto LABEL_332;
            }
            *(v83 - 1) = *(void *)(*(void *)this + v92);
            unint64_t v80 = *((void *)this + 2);
            unint64_t v79 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v79;
          }
          goto LABEL_333;
        case 0xAu:
          if (v24 != 2)
          {
            unint64_t v222 = *(char **)(a1 + 232);
            unint64_t v221 = *(void *)(a1 + 240);
            if ((unint64_t)v222 >= v221)
            {
              v261 = (char *)*v348;
              uint64_t v262 = (v222 - (unsigned char *)*v348) >> 3;
              unint64_t v263 = v262 + 1;
              if ((unint64_t)(v262 + 1) >> 61) {
LABEL_576:
              }
                sub_1001D7FD4();
              uint64_t v264 = v221 - (void)v261;
              if (v264 >> 2 > v263) {
                unint64_t v263 = v264 >> 2;
              }
              if ((unint64_t)v264 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v265 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v265 = v263;
              }
              if (v265)
              {
                v266 = (char *)sub_1000DA54C(v340, v265);
                v261 = *(char **)(a1 + 224);
                unint64_t v222 = *(char **)(a1 + 232);
              }
              else
              {
                v266 = 0;
              }
              v317 = &v266[8 * v262];
              *(void *)v317 = 0;
              unint64_t v214 = v317 + 8;
              while (v222 != v261)
              {
                uint64_t v318 = *((void *)v222 - 1);
                v222 -= 8;
                *((void *)v317 - 1) = v318;
                v317 -= 8;
              }
              *(void *)(a1 + 224) = v317;
              *(void *)(a1 + 232) = v214;
              *(void *)(a1 + 240) = &v266[8 * v265];
              if (v261) {
                operator delete(v261);
              }
            }
            else
            {
              *(void *)unint64_t v222 = 0;
              unint64_t v214 = v222 + 8;
            }
            *(void *)(a1 + 232) = v214;
            goto LABEL_556;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v93 = *((void *)this + 1);
          unint64_t v94 = *((void *)this + 2);
          while (v93 < v94 && !*((unsigned char *)this + 24))
          {
            char v96 = *(char **)(a1 + 232);
            unint64_t v95 = *(void *)(a1 + 240);
            if ((unint64_t)v96 >= v95)
            {
              uint64_t v98 = (char *)*v348;
              uint64_t v99 = (v96 - (unsigned char *)*v348) >> 3;
              unint64_t v100 = v99 + 1;
              if ((unint64_t)(v99 + 1) >> 61) {
                goto LABEL_576;
              }
              uint64_t v101 = v95 - (void)v98;
              if (v101 >> 2 > v100) {
                unint64_t v100 = v101 >> 2;
              }
              if ((unint64_t)v101 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v102 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v102 = v100;
              }
              if (v102)
              {
                uint64_t v103 = (char *)sub_1000DA54C(v340, v102);
                uint64_t v98 = *(char **)(a1 + 224);
                char v96 = *(char **)(a1 + 232);
              }
              else
              {
                uint64_t v103 = 0;
              }
              char v104 = &v103[8 * v99];
              *(void *)char v104 = 0;
              unsigned int v97 = v104 + 8;
              while (v96 != v98)
              {
                uint64_t v105 = *((void *)v96 - 1);
                v96 -= 8;
                *((void *)v104 - 1) = v105;
                v104 -= 8;
              }
              *(void *)(a1 + 224) = v104;
              *(void *)(a1 + 232) = v97;
              *(void *)(a1 + 240) = &v103[8 * v102];
              if (v98) {
                operator delete(v98);
              }
            }
            else
            {
              *(void *)char v96 = 0;
              unsigned int v97 = v96 + 8;
            }
            *(void *)(a1 + 232) = v97;
            unint64_t v106 = *((void *)this + 1);
            if (v106 > 0xFFFFFFFFFFFFFFF7 || v106 + 8 > *((void *)this + 2)) {
              goto LABEL_332;
            }
            *(v97 - 1) = *(void *)(*(void *)this + v106);
            unint64_t v94 = *((void *)this + 2);
            unint64_t v93 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v93;
          }
          goto LABEL_333;
        case 0xBu:
          if (v24 != 2)
          {
            char v224 = *(char **)(a1 + 160);
            unint64_t v223 = *(void *)(a1 + 168);
            if ((unint64_t)v224 >= v223)
            {
              v267 = (char *)*v349;
              uint64_t v268 = (v224 - (unsigned char *)*v349) >> 3;
              unint64_t v269 = v268 + 1;
              if ((unint64_t)(v268 + 1) >> 61) {
LABEL_577:
              }
                sub_1001D7FD4();
              uint64_t v270 = v223 - (void)v267;
              if (v270 >> 2 > v269) {
                unint64_t v269 = v270 >> 2;
              }
              if ((unint64_t)v270 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v271 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v271 = v269;
              }
              if (v271)
              {
                v272 = (char *)sub_1000DA54C(v341, v271);
                v267 = *(char **)(a1 + 152);
                char v224 = *(char **)(a1 + 160);
              }
              else
              {
                v272 = 0;
              }
              v319 = &v272[8 * v268];
              *(void *)v319 = 0;
              unint64_t v214 = v319 + 8;
              while (v224 != v267)
              {
                uint64_t v320 = *((void *)v224 - 1);
                v224 -= 8;
                *((void *)v319 - 1) = v320;
                v319 -= 8;
              }
              *(void *)(a1 + 152) = v319;
              *(void *)(a1 + 160) = v214;
              *(void *)(a1 + 168) = &v272[8 * v271];
              if (v267) {
                operator delete(v267);
              }
            }
            else
            {
              *(void *)char v224 = 0;
              unint64_t v214 = v224 + 8;
            }
            *(void *)(a1 + 160) = v214;
            goto LABEL_556;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v107 = *((void *)this + 1);
          unint64_t v108 = *((void *)this + 2);
          while (v107 < v108 && !*((unsigned char *)this + 24))
          {
            unint64_t v110 = *(char **)(a1 + 160);
            unint64_t v109 = *(void *)(a1 + 168);
            if ((unint64_t)v110 >= v109)
            {
              char v112 = (char *)*v349;
              uint64_t v113 = (v110 - (unsigned char *)*v349) >> 3;
              unint64_t v114 = v113 + 1;
              if ((unint64_t)(v113 + 1) >> 61) {
                goto LABEL_577;
              }
              uint64_t v115 = v109 - (void)v112;
              if (v115 >> 2 > v114) {
                unint64_t v114 = v115 >> 2;
              }
              if ((unint64_t)v115 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v116 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v116 = v114;
              }
              if (v116)
              {
                unint64_t v117 = (char *)sub_1000DA54C(v341, v116);
                char v112 = *(char **)(a1 + 152);
                unint64_t v110 = *(char **)(a1 + 160);
              }
              else
              {
                unint64_t v117 = 0;
              }
              unint64_t v118 = &v117[8 * v113];
              *(void *)unint64_t v118 = 0;
              uint64_t v111 = v118 + 8;
              while (v110 != v112)
              {
                uint64_t v119 = *((void *)v110 - 1);
                v110 -= 8;
                *((void *)v118 - 1) = v119;
                v118 -= 8;
              }
              *(void *)(a1 + 152) = v118;
              *(void *)(a1 + 160) = v111;
              *(void *)(a1 + 168) = &v117[8 * v116];
              if (v112) {
                operator delete(v112);
              }
            }
            else
            {
              *(void *)unint64_t v110 = 0;
              uint64_t v111 = v110 + 8;
            }
            *(void *)(a1 + 160) = v111;
            unint64_t v120 = *((void *)this + 1);
            if (v120 > 0xFFFFFFFFFFFFFFF7 || v120 + 8 > *((void *)this + 2)) {
              goto LABEL_332;
            }
            *(v111 - 1) = *(void *)(*(void *)this + v120);
            unint64_t v108 = *((void *)this + 2);
            unint64_t v107 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v107;
          }
          goto LABEL_333;
        case 0xCu:
          if (v24 != 2)
          {
            unint64_t v226 = *(char **)(a1 + 136);
            unint64_t v225 = *(void *)(a1 + 144);
            if ((unint64_t)v226 >= v225)
            {
              v273 = (char *)*v350;
              uint64_t v274 = (v226 - (unsigned char *)*v350) >> 3;
              unint64_t v275 = v274 + 1;
              if ((unint64_t)(v274 + 1) >> 61) {
LABEL_578:
              }
                sub_1001D7FD4();
              uint64_t v276 = v225 - (void)v273;
              if (v276 >> 2 > v275) {
                unint64_t v275 = v276 >> 2;
              }
              if ((unint64_t)v276 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v277 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v277 = v275;
              }
              if (v277)
              {
                v278 = (char *)sub_1000DA54C(v342, v277);
                v273 = *(char **)(a1 + 128);
                unint64_t v226 = *(char **)(a1 + 136);
              }
              else
              {
                v278 = 0;
              }
              v321 = &v278[8 * v274];
              *(void *)v321 = 0;
              unint64_t v214 = v321 + 8;
              while (v226 != v273)
              {
                uint64_t v322 = *((void *)v226 - 1);
                v226 -= 8;
                *((void *)v321 - 1) = v322;
                v321 -= 8;
              }
              *(void *)(a1 + 128) = v321;
              *(void *)(a1 + 136) = v214;
              *(void *)(a1 + 144) = &v278[8 * v277];
              if (v273) {
                operator delete(v273);
              }
            }
            else
            {
              *(void *)unint64_t v226 = 0;
              unint64_t v214 = v226 + 8;
            }
            *(void *)(a1 + 136) = v214;
            goto LABEL_556;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v121 = *((void *)this + 1);
          unint64_t v122 = *((void *)this + 2);
          while (v121 < v122 && !*((unsigned char *)this + 24))
          {
            char v124 = *(char **)(a1 + 136);
            unint64_t v123 = *(void *)(a1 + 144);
            if ((unint64_t)v124 >= v123)
            {
              unint64_t v126 = (char *)*v350;
              uint64_t v127 = (v124 - (unsigned char *)*v350) >> 3;
              unint64_t v128 = v127 + 1;
              if ((unint64_t)(v127 + 1) >> 61) {
                goto LABEL_578;
              }
              uint64_t v129 = v123 - (void)v126;
              if (v129 >> 2 > v128) {
                unint64_t v128 = v129 >> 2;
              }
              if ((unint64_t)v129 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v130 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v130 = v128;
              }
              if (v130)
              {
                unint64_t v131 = (char *)sub_1000DA54C(v342, v130);
                unint64_t v126 = *(char **)(a1 + 128);
                char v124 = *(char **)(a1 + 136);
              }
              else
              {
                unint64_t v131 = 0;
              }
              char v132 = &v131[8 * v127];
              *(void *)char v132 = 0;
              unint64_t v125 = v132 + 8;
              while (v124 != v126)
              {
                uint64_t v133 = *((void *)v124 - 1);
                v124 -= 8;
                *((void *)v132 - 1) = v133;
                v132 -= 8;
              }
              *(void *)(a1 + 128) = v132;
              *(void *)(a1 + 136) = v125;
              *(void *)(a1 + 144) = &v131[8 * v130];
              if (v126) {
                operator delete(v126);
              }
            }
            else
            {
              *(void *)char v124 = 0;
              unint64_t v125 = v124 + 8;
            }
            *(void *)(a1 + 136) = v125;
            unint64_t v134 = *((void *)this + 1);
            if (v134 > 0xFFFFFFFFFFFFFFF7 || v134 + 8 > *((void *)this + 2)) {
              goto LABEL_332;
            }
            *(v125 - 1) = *(void *)(*(void *)this + v134);
            unint64_t v122 = *((void *)this + 2);
            unint64_t v121 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v121;
          }
          goto LABEL_333;
        case 0xDu:
          if (v24 != 2)
          {
            char v228 = *(char **)(a1 + 256);
            unint64_t v227 = *(void *)(a1 + 264);
            if ((unint64_t)v228 >= v227)
            {
              v279 = (char *)*v351;
              uint64_t v280 = (v228 - (unsigned char *)*v351) >> 3;
              unint64_t v281 = v280 + 1;
              if ((unint64_t)(v280 + 1) >> 61) {
LABEL_579:
              }
                sub_1001D7FD4();
              uint64_t v282 = v227 - (void)v279;
              if (v282 >> 2 > v281) {
                unint64_t v281 = v282 >> 2;
              }
              if ((unint64_t)v282 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v283 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v283 = v281;
              }
              if (v283)
              {
                v284 = (char *)sub_1000DA54C(v343, v283);
                v279 = *(char **)(a1 + 248);
                char v228 = *(char **)(a1 + 256);
              }
              else
              {
                v284 = 0;
              }
              v323 = &v284[8 * v280];
              *(void *)v323 = 0;
              unint64_t v214 = v323 + 8;
              while (v228 != v279)
              {
                uint64_t v324 = *((void *)v228 - 1);
                v228 -= 8;
                *((void *)v323 - 1) = v324;
                v323 -= 8;
              }
              *(void *)(a1 + 248) = v323;
              *(void *)(a1 + 256) = v214;
              *(void *)(a1 + 264) = &v284[8 * v283];
              if (v279) {
                operator delete(v279);
              }
            }
            else
            {
              *(void *)char v228 = 0;
              unint64_t v214 = v228 + 8;
            }
            *(void *)(a1 + 256) = v214;
            goto LABEL_556;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v135 = *((void *)this + 1);
          unint64_t v136 = *((void *)this + 2);
          while (v135 < v136 && !*((unsigned char *)this + 24))
          {
            uint64_t v138 = *(char **)(a1 + 256);
            unint64_t v137 = *(void *)(a1 + 264);
            if ((unint64_t)v138 >= v137)
            {
              char v140 = (char *)*v351;
              uint64_t v141 = (v138 - (unsigned char *)*v351) >> 3;
              unint64_t v142 = v141 + 1;
              if ((unint64_t)(v141 + 1) >> 61) {
                goto LABEL_579;
              }
              uint64_t v143 = v137 - (void)v140;
              if (v143 >> 2 > v142) {
                unint64_t v142 = v143 >> 2;
              }
              if ((unint64_t)v143 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v144 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v144 = v142;
              }
              if (v144)
              {
                char v145 = (char *)sub_1000DA54C(v343, v144);
                char v140 = *(char **)(a1 + 248);
                uint64_t v138 = *(char **)(a1 + 256);
              }
              else
              {
                char v145 = 0;
              }
              unsigned int v146 = &v145[8 * v141];
              *(void *)unsigned int v146 = 0;
              unint64_t v139 = v146 + 8;
              while (v138 != v140)
              {
                uint64_t v147 = *((void *)v138 - 1);
                v138 -= 8;
                *((void *)v146 - 1) = v147;
                v146 -= 8;
              }
              *(void *)(a1 + 248) = v146;
              *(void *)(a1 + 256) = v139;
              *(void *)(a1 + 264) = &v145[8 * v144];
              if (v140) {
                operator delete(v140);
              }
            }
            else
            {
              *(void *)uint64_t v138 = 0;
              unint64_t v139 = v138 + 8;
            }
            *(void *)(a1 + 256) = v139;
            unint64_t v148 = *((void *)this + 1);
            if (v148 > 0xFFFFFFFFFFFFFFF7 || v148 + 8 > *((void *)this + 2)) {
              goto LABEL_332;
            }
            *(v139 - 1) = *(void *)(*(void *)this + v148);
            unint64_t v136 = *((void *)this + 2);
            unint64_t v135 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v135;
          }
          goto LABEL_333;
        case 0xEu:
          if (v24 != 2)
          {
            unint64_t v230 = *(char **)(a1 + 40);
            unint64_t v229 = *(void *)(a1 + 48);
            if ((unint64_t)v230 >= v229)
            {
              v285 = (char *)*v352;
              uint64_t v286 = (v230 - (unsigned char *)*v352) >> 3;
              unint64_t v287 = v286 + 1;
              if ((unint64_t)(v286 + 1) >> 61) {
LABEL_580:
              }
                sub_1001D7FD4();
              uint64_t v288 = v229 - (void)v285;
              if (v288 >> 2 > v287) {
                unint64_t v287 = v288 >> 2;
              }
              if ((unint64_t)v288 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v289 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v289 = v287;
              }
              if (v289)
              {
                v290 = (char *)sub_1000DA54C(v344, v289);
                v285 = *(char **)(a1 + 32);
                unint64_t v230 = *(char **)(a1 + 40);
              }
              else
              {
                v290 = 0;
              }
              v325 = &v290[8 * v286];
              *(void *)v325 = 0;
              unint64_t v214 = v325 + 8;
              while (v230 != v285)
              {
                uint64_t v326 = *((void *)v230 - 1);
                v230 -= 8;
                *((void *)v325 - 1) = v326;
                v325 -= 8;
              }
              *(void *)(a1 + 32) = v325;
              *(void *)(a1 + 40) = v214;
              *(void *)(a1 + 48) = &v290[8 * v289];
              if (v285) {
                operator delete(v285);
              }
            }
            else
            {
              *(void *)unint64_t v230 = 0;
              unint64_t v214 = v230 + 8;
            }
            *(void *)(a1 + 40) = v214;
            goto LABEL_556;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v149 = *((void *)this + 1);
          unint64_t v150 = *((void *)this + 2);
          while (v149 < v150 && !*((unsigned char *)this + 24))
          {
            char v152 = *(char **)(a1 + 40);
            unint64_t v151 = *(void *)(a1 + 48);
            if ((unint64_t)v152 >= v151)
            {
              unsigned int v154 = (char *)*v352;
              uint64_t v155 = (v152 - (unsigned char *)*v352) >> 3;
              unint64_t v156 = v155 + 1;
              if ((unint64_t)(v155 + 1) >> 61) {
                goto LABEL_580;
              }
              uint64_t v157 = v151 - (void)v154;
              if (v157 >> 2 > v156) {
                unint64_t v156 = v157 >> 2;
              }
              if ((unint64_t)v157 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v158 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v158 = v156;
              }
              if (v158)
              {
                unint64_t v159 = (char *)sub_1000DA54C(v344, v158);
                unsigned int v154 = *(char **)(a1 + 32);
                char v152 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v159 = 0;
              }
              char v160 = &v159[8 * v155];
              *(void *)char v160 = 0;
              char v153 = v160 + 8;
              while (v152 != v154)
              {
                uint64_t v161 = *((void *)v152 - 1);
                v152 -= 8;
                *((void *)v160 - 1) = v161;
                v160 -= 8;
              }
              *(void *)(a1 + 32) = v160;
              *(void *)(a1 + 40) = v153;
              *(void *)(a1 + 48) = &v159[8 * v158];
              if (v154) {
                operator delete(v154);
              }
            }
            else
            {
              *(void *)char v152 = 0;
              char v153 = v152 + 8;
            }
            *(void *)(a1 + 40) = v153;
            unint64_t v162 = *((void *)this + 1);
            if (v162 > 0xFFFFFFFFFFFFFFF7 || v162 + 8 > *((void *)this + 2)) {
              goto LABEL_332;
            }
            *(v153 - 1) = *(void *)(*(void *)this + v162);
            unint64_t v150 = *((void *)this + 2);
            unint64_t v149 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v149;
          }
          goto LABEL_333;
        case 0xFu:
          if (v24 != 2)
          {
            v232 = *(char **)(a1 + 208);
            unint64_t v231 = *(void *)(a1 + 216);
            if ((unint64_t)v232 >= v231)
            {
              v291 = (char *)*v353;
              uint64_t v292 = (v232 - (unsigned char *)*v353) >> 3;
              unint64_t v293 = v292 + 1;
              if ((unint64_t)(v292 + 1) >> 61) {
LABEL_581:
              }
                sub_1001D7FD4();
              uint64_t v294 = v231 - (void)v291;
              if (v294 >> 2 > v293) {
                unint64_t v293 = v294 >> 2;
              }
              if ((unint64_t)v294 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v295 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v295 = v293;
              }
              if (v295)
              {
                v296 = (char *)sub_1000DA54C(v345, v295);
                v291 = *(char **)(a1 + 200);
                v232 = *(char **)(a1 + 208);
              }
              else
              {
                v296 = 0;
              }
              v327 = &v296[8 * v292];
              *(void *)v327 = 0;
              unint64_t v214 = v327 + 8;
              while (v232 != v291)
              {
                uint64_t v328 = *((void *)v232 - 1);
                v232 -= 8;
                *((void *)v327 - 1) = v328;
                v327 -= 8;
              }
              *(void *)(a1 + 200) = v327;
              *(void *)(a1 + 208) = v214;
              *(void *)(a1 + 216) = &v296[8 * v295];
              if (v291) {
                operator delete(v291);
              }
            }
            else
            {
              *(void *)v232 = 0;
              unint64_t v214 = v232 + 8;
            }
            *(void *)(a1 + 208) = v214;
            goto LABEL_556;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v163 = *((void *)this + 1);
          unint64_t v164 = *((void *)this + 2);
          while (v163 < v164 && !*((unsigned char *)this + 24))
          {
            unsigned int v166 = *(char **)(a1 + 208);
            unint64_t v165 = *(void *)(a1 + 216);
            if ((unint64_t)v166 >= v165)
            {
              char v168 = (char *)*v353;
              uint64_t v169 = (v166 - (unsigned char *)*v353) >> 3;
              unint64_t v170 = v169 + 1;
              if ((unint64_t)(v169 + 1) >> 61) {
                goto LABEL_581;
              }
              uint64_t v171 = v165 - (void)v168;
              if (v171 >> 2 > v170) {
                unint64_t v170 = v171 >> 2;
              }
              if ((unint64_t)v171 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v172 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v172 = v170;
              }
              if (v172)
              {
                char v173 = (char *)sub_1000DA54C(v345, v172);
                char v168 = *(char **)(a1 + 200);
                unsigned int v166 = *(char **)(a1 + 208);
              }
              else
              {
                char v173 = 0;
              }
              unsigned int v174 = &v173[8 * v169];
              *(void *)unsigned int v174 = 0;
              unint64_t v167 = v174 + 8;
              while (v166 != v168)
              {
                uint64_t v175 = *((void *)v166 - 1);
                v166 -= 8;
                *((void *)v174 - 1) = v175;
                v174 -= 8;
              }
              *(void *)(a1 + 200) = v174;
              *(void *)(a1 + 208) = v167;
              *(void *)(a1 + 216) = &v173[8 * v172];
              if (v168) {
                operator delete(v168);
              }
            }
            else
            {
              *(void *)unsigned int v166 = 0;
              unint64_t v167 = v166 + 8;
            }
            *(void *)(a1 + 208) = v167;
            unint64_t v176 = *((void *)this + 1);
            if (v176 > 0xFFFFFFFFFFFFFFF7 || v176 + 8 > *((void *)this + 2)) {
              goto LABEL_332;
            }
            *(v167 - 1) = *(void *)(*(void *)this + v176);
            unint64_t v164 = *((void *)this + 2);
            unint64_t v163 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v163;
          }
          goto LABEL_333;
        case 0x10u:
          if (v24 != 2)
          {
            v234 = *(char **)(a1 + 88);
            unint64_t v233 = *(void *)(a1 + 96);
            if ((unint64_t)v234 >= v233)
            {
              v297 = (char *)*v354;
              uint64_t v298 = (v234 - (unsigned char *)*v354) >> 3;
              unint64_t v299 = v298 + 1;
              if ((unint64_t)(v298 + 1) >> 61) {
LABEL_582:
              }
                sub_1001D7FD4();
              uint64_t v300 = v233 - (void)v297;
              if (v300 >> 2 > v299) {
                unint64_t v299 = v300 >> 2;
              }
              if ((unint64_t)v300 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v301 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v301 = v299;
              }
              if (v301)
              {
                v302 = (char *)sub_1000DA54C(v346, v301);
                v297 = *(char **)(a1 + 80);
                v234 = *(char **)(a1 + 88);
              }
              else
              {
                v302 = 0;
              }
              v329 = &v302[8 * v298];
              *(void *)v329 = 0;
              unint64_t v214 = v329 + 8;
              while (v234 != v297)
              {
                uint64_t v330 = *((void *)v234 - 1);
                v234 -= 8;
                *((void *)v329 - 1) = v330;
                v329 -= 8;
              }
              *(void *)(a1 + 80) = v329;
              *(void *)(a1 + 88) = v214;
              *(void *)(a1 + 96) = &v302[8 * v301];
              if (v297) {
                operator delete(v297);
              }
            }
            else
            {
              *(void *)v234 = 0;
              unint64_t v214 = v234 + 8;
            }
            *(void *)(a1 + 88) = v214;
            goto LABEL_556;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v177 = *((void *)this + 1);
          unint64_t v178 = *((void *)this + 2);
          while (v177 < v178 && !*((unsigned char *)this + 24))
          {
            char v180 = *(char **)(a1 + 88);
            unint64_t v179 = *(void *)(a1 + 96);
            if ((unint64_t)v180 >= v179)
            {
              unsigned int v182 = (char *)*v354;
              uint64_t v183 = (v180 - (unsigned char *)*v354) >> 3;
              unint64_t v184 = v183 + 1;
              if ((unint64_t)(v183 + 1) >> 61) {
                goto LABEL_582;
              }
              uint64_t v185 = v179 - (void)v182;
              if (v185 >> 2 > v184) {
                unint64_t v184 = v185 >> 2;
              }
              if ((unint64_t)v185 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v186 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v186 = v184;
              }
              if (v186)
              {
                unint64_t v187 = (char *)sub_1000DA54C(v346, v186);
                unsigned int v182 = *(char **)(a1 + 80);
                char v180 = *(char **)(a1 + 88);
              }
              else
              {
                unint64_t v187 = 0;
              }
              char v188 = &v187[8 * v183];
              *(void *)char v188 = 0;
              char v181 = v188 + 8;
              while (v180 != v182)
              {
                uint64_t v189 = *((void *)v180 - 1);
                v180 -= 8;
                *((void *)v188 - 1) = v189;
                v188 -= 8;
              }
              *(void *)(a1 + 80) = v188;
              *(void *)(a1 + 88) = v181;
              *(void *)(a1 + 96) = &v187[8 * v186];
              if (v182) {
                operator delete(v182);
              }
            }
            else
            {
              *(void *)char v180 = 0;
              char v181 = v180 + 8;
            }
            *(void *)(a1 + 88) = v181;
            unint64_t v190 = *((void *)this + 1);
            if (v190 > 0xFFFFFFFFFFFFFFF7 || v190 + 8 > *((void *)this + 2)) {
              goto LABEL_332;
            }
            *(v181 - 1) = *(void *)(*(void *)this + v190);
            unint64_t v178 = *((void *)this + 2);
            unint64_t v177 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v177;
          }
          goto LABEL_333;
        case 0x11u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v191 = *((void *)this + 1);
            unint64_t v192 = *((void *)this + 2);
            while (v191 < v192 && !*((unsigned char *)this + 24))
            {
              unint64_t v194 = *(char **)(a1 + 64);
              unint64_t v193 = *(void *)(a1 + 72);
              if ((unint64_t)v194 >= v193)
              {
                char v196 = (char *)*v355;
                uint64_t v197 = (v194 - (unsigned char *)*v355) >> 3;
                unint64_t v198 = v197 + 1;
                if ((unint64_t)(v197 + 1) >> 61) {
                  goto LABEL_583;
                }
                uint64_t v199 = v193 - (void)v196;
                if (v199 >> 2 > v198) {
                  unint64_t v198 = v199 >> 2;
                }
                if ((unint64_t)v199 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v200 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v200 = v198;
                }
                if (v200)
                {
                  unsigned int v201 = (char *)sub_1000DA54C(v347, v200);
                  char v196 = *(char **)(a1 + 56);
                  unint64_t v194 = *(char **)(a1 + 64);
                }
                else
                {
                  unsigned int v201 = 0;
                }
                unint64_t v202 = &v201[8 * v197];
                *(void *)unint64_t v202 = 0;
                char v195 = v202 + 8;
                while (v194 != v196)
                {
                  uint64_t v203 = *((void *)v194 - 1);
                  v194 -= 8;
                  *((void *)v202 - 1) = v203;
                  v202 -= 8;
                }
                *(void *)(a1 + 56) = v202;
                *(void *)(a1 + 64) = v195;
                *(void *)(a1 + 72) = &v201[8 * v200];
                if (v196) {
                  operator delete(v196);
                }
              }
              else
              {
                *(void *)unint64_t v194 = 0;
                char v195 = v194 + 8;
              }
              *(void *)(a1 + 64) = v195;
              unint64_t v204 = *((void *)this + 1);
              if (v204 > 0xFFFFFFFFFFFFFFF7 || v204 + 8 > *((void *)this + 2))
              {
LABEL_332:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v195 - 1) = *(void *)(*(void *)this + v204);
              unint64_t v192 = *((void *)this + 2);
              unint64_t v191 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v191;
            }
LABEL_333:
            PB::Reader::recallMark();
          }
          else
          {
            v236 = *(char **)(a1 + 64);
            unint64_t v235 = *(void *)(a1 + 72);
            if ((unint64_t)v236 >= v235)
            {
              v303 = (char *)*v355;
              uint64_t v304 = (v236 - (unsigned char *)*v355) >> 3;
              unint64_t v305 = v304 + 1;
              if ((unint64_t)(v304 + 1) >> 61) {
LABEL_583:
              }
                sub_1001D7FD4();
              uint64_t v306 = v235 - (void)v303;
              if (v306 >> 2 > v305) {
                unint64_t v305 = v306 >> 2;
              }
              if ((unint64_t)v306 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v307 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v307 = v305;
              }
              if (v307)
              {
                v308 = (char *)sub_1000DA54C(v347, v307);
                v303 = *(char **)(a1 + 56);
                v236 = *(char **)(a1 + 64);
              }
              else
              {
                v308 = 0;
              }
              v331 = &v308[8 * v304];
              *(void *)v331 = 0;
              unint64_t v214 = v331 + 8;
              while (v236 != v303)
              {
                uint64_t v332 = *((void *)v236 - 1);
                v236 -= 8;
                *((void *)v331 - 1) = v332;
                v331 -= 8;
              }
              *(void *)(a1 + 56) = v331;
              *(void *)(a1 + 64) = v214;
              *(void *)(a1 + 72) = &v308[8 * v307];
              if (v303) {
                operator delete(v303);
              }
            }
            else
            {
              *(void *)v236 = 0;
              unint64_t v214 = v236 + 8;
            }
            *(void *)(a1 + 64) = v214;
LABEL_556:
            unint64_t v333 = *((void *)this + 1);
            if (v333 <= 0xFFFFFFFFFFFFFFF7 && v333 + 8 <= *((void *)this + 2))
            {
              *(v214 - 1) = *(void *)(*(void *)this + v333);
LABEL_560:
              uint64_t v207 = *((void *)this + 1) + 8;
LABEL_561:
              *((void *)this + 1) = v207;
            }
            else
            {
LABEL_558:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_562:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 0x12u:
          *(unsigned char *)(a1 + 340) |= 0x20u;
          unint64_t v205 = *((void *)this + 1);
          if (v205 > 0xFFFFFFFFFFFFFFFBLL || v205 + 4 > *((void *)this + 2)) {
            goto LABEL_558;
          }
          *(_DWORD *)(a1 + 332) = *(_DWORD *)(*(void *)this + v205);
          goto LABEL_340;
        case 0x13u:
          *(unsigned char *)(a1 + 340) |= 0x10u;
          unint64_t v206 = *((void *)this + 1);
          if (v206 > 0xFFFFFFFFFFFFFFFBLL || v206 + 4 > *((void *)this + 2)) {
            goto LABEL_558;
          }
          *(_DWORD *)(a1 + 328) = *(_DWORD *)(*(void *)this + v206);
LABEL_340:
          uint64_t v207 = *((void *)this + 1) + 4;
          goto LABEL_561;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v24, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_562;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101748574(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 340);
  if ((v4 & 0x40) != 0)
  {
    double result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 336), 1u);
    char v4 = *(unsigned char *)(v3 + 340);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_49;
    }
  }
  else if ((*(unsigned char *)(result + 340) & 4) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::write(this, *(double *)(v3 + 312), 2u);
  char v4 = *(unsigned char *)(v3 + 340);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_50:
    double result = PB::Writer::write(this, *(double *)(v3 + 320), 4u);
    if ((*(unsigned char *)(v3 + 340) & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_49:
  double result = PB::Writer::write(this, *(double *)(v3 + 296), 3u);
  char v4 = *(unsigned char *)(v3 + 340);
  if ((v4 & 8) != 0) {
    goto LABEL_50;
  }
LABEL_5:
  if ((v4 & 2) != 0) {
LABEL_6:
  }
    double result = PB::Writer::write(this, *(double *)(v3 + 304), 5u);
LABEL_7:
  unint64_t v5 = *(double **)(v3 + 176);
  uint64_t v6 = *(double **)(v3 + 184);
  while (v5 != v6)
  {
    double v7 = *v5++;
    double result = PB::Writer::write(this, v7, 6u);
  }
  uint64_t v8 = *(double **)(v3 + 104);
  char v9 = *(double **)(v3 + 112);
  while (v8 != v9)
  {
    double v10 = *v8++;
    double result = PB::Writer::write(this, v10, 7u);
  }
  char v11 = *(double **)(v3 + 272);
  uint64_t v12 = *(double **)(v3 + 280);
  while (v11 != v12)
  {
    double v13 = *v11++;
    double result = PB::Writer::write(this, v13, 8u);
  }
  unsigned int v14 = *(double **)(v3 + 8);
  unint64_t v15 = *(double **)(v3 + 16);
  while (v14 != v15)
  {
    double v16 = *v14++;
    double result = PB::Writer::write(this, v16, 9u);
  }
  char v17 = *(double **)(v3 + 224);
  BOOL v18 = *(double **)(v3 + 232);
  while (v17 != v18)
  {
    double v19 = *v17++;
    double result = PB::Writer::write(this, v19, 0xAu);
  }
  unsigned int v20 = *(double **)(v3 + 152);
  unint64_t v21 = *(double **)(v3 + 160);
  while (v20 != v21)
  {
    double v22 = *v20++;
    double result = PB::Writer::write(this, v22, 0xBu);
  }
  double v23 = *(double **)(v3 + 128);
  int v24 = *(double **)(v3 + 136);
  while (v23 != v24)
  {
    double v25 = *v23++;
    double result = PB::Writer::write(this, v25, 0xCu);
  }
  unint64_t v26 = *(double **)(v3 + 248);
  uint64_t v27 = *(double **)(v3 + 256);
  while (v26 != v27)
  {
    double v28 = *v26++;
    double result = PB::Writer::write(this, v28, 0xDu);
  }
  unsigned int v29 = *(double **)(v3 + 32);
  uint64_t v30 = *(double **)(v3 + 40);
  while (v29 != v30)
  {
    double v31 = *v29++;
    double result = PB::Writer::write(this, v31, 0xEu);
  }
  char v32 = *(double **)(v3 + 200);
  unint64_t v33 = *(double **)(v3 + 208);
  while (v32 != v33)
  {
    double v34 = *v32++;
    double result = PB::Writer::write(this, v34, 0xFu);
  }
  unint64_t v35 = *(double **)(v3 + 80);
  unint64_t v36 = *(double **)(v3 + 88);
  while (v35 != v36)
  {
    double v37 = *v35++;
    double result = PB::Writer::write(this, v37, 0x10u);
  }
  unint64_t v38 = *(double **)(v3 + 56);
  unint64_t v39 = *(double **)(v3 + 64);
  while (v38 != v39)
  {
    double v40 = *v38++;
    double result = PB::Writer::write(this, v40, 0x11u);
  }
  char v41 = *(unsigned char *)(v3 + 340);
  if ((v41 & 0x20) != 0)
  {
    double result = PB::Writer::write(this, *(float *)(v3 + 332), 0x12u);
    char v41 = *(unsigned char *)(v3 + 340);
  }
  if ((v41 & 0x10) != 0)
  {
    float v42 = *(float *)(v3 + 328);
    return PB::Writer::write(this, v42, 0x13u);
  }
  return result;
}

uint64_t sub_1017487F8(uint64_t result)
{
  *(void *)double result = &off_102338600;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 112) = 0;
  return result;
}

void sub_101748820(PB::Base *this)
{
  *(void *)this = &off_102338600;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_101748884(PB::Base *a1)
{
  sub_101748820(a1);

  operator delete();
}

uint64_t sub_1017488BC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338600;
  *(void *)(a1 + 8) = 0;
  char v4 = (char *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  __int16 v5 = *(_WORD *)(a2 + 112);
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    __int16 v6 = 1;
    *(_WORD *)(a1 + 112) = 1;
    *(void *)(a1 + 32) = v7;
    __int16 v5 = *(_WORD *)(a2 + 112);
    if ((v5 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v6 = 0;
  if ((*(_WORD *)(a2 + 112) & 0x200) != 0)
  {
LABEL_5:
    uint64_t v8 = *(void *)(a2 + 104);
    v6 |= 0x200u;
    *(_WORD *)(a1 + 112) = v6;
    *(void *)(a1 + 104) = v8;
    __int16 v5 = *(_WORD *)(a2 + 112);
  }
LABEL_6:
  if ((v5 & 2) != 0)
  {
    uint64_t v9 = *(void *)(a2 + 40);
    *(_WORD *)(a1 + 112) = v6 | 2;
    *(void *)(a1 + 40) = v9;
  }
  if (a1 != a2) {
    sub_1002DD194(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
  }
  __int16 v10 = *(_WORD *)(a2 + 112);
  if ((v10 & 8) != 0)
  {
    uint64_t v13 = *(void *)(a2 + 56);
    *(_WORD *)(a1 + 112) |= 8u;
    *(void *)(a1 + 56) = v13;
    __int16 v10 = *(_WORD *)(a2 + 112);
    if ((v10 & 0x10) == 0)
    {
LABEL_12:
      if ((v10 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_21;
    }
  }
  else if ((v10 & 0x10) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v14 = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 112) |= 0x10u;
  *(void *)(a1 + 64) = v14;
  __int16 v10 = *(_WORD *)(a2 + 112);
  if ((v10 & 0x20) == 0)
  {
LABEL_13:
    if ((v10 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v15 = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 112) |= 0x20u;
  *(void *)(a1 + 72) = v15;
  __int16 v10 = *(_WORD *)(a2 + 112);
  if ((v10 & 4) == 0)
  {
LABEL_14:
    if ((v10 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v16 = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 112) |= 4u;
  *(void *)(a1 + 48) = v16;
  __int16 v10 = *(_WORD *)(a2 + 112);
  if ((v10 & 0x80) == 0)
  {
LABEL_15:
    if ((v10 & 0x100) == 0) {
      goto LABEL_16;
    }
LABEL_24:
    uint64_t v18 = *(void *)(a2 + 96);
    *(_WORD *)(a1 + 112) |= 0x100u;
    *(void *)(a1 + 96) = v18;
    if ((*(_WORD *)(a2 + 112) & 0x40) == 0) {
      return a1;
    }
    goto LABEL_17;
  }
LABEL_23:
  uint64_t v17 = *(void *)(a2 + 88);
  *(_WORD *)(a1 + 112) |= 0x80u;
  *(void *)(a1 + 88) = v17;
  __int16 v10 = *(_WORD *)(a2 + 112);
  if ((v10 & 0x100) != 0) {
    goto LABEL_24;
  }
LABEL_16:
  if ((v10 & 0x40) != 0)
  {
LABEL_17:
    uint64_t v11 = *(void *)(a2 + 80);
    *(_WORD *)(a1 + 112) |= 0x40u;
    *(void *)(a1 + 80) = v11;
  }
  return a1;
}

uint64_t sub_101748A60(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 112);
  if (v5)
  {
    PB::TextFormatter::format(this, "currentTimestamp", *(double *)(a1 + 32));
    __int16 v5 = *(_WORD *)(a1 + 112);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "latestInertialTimestamp", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 112);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "latestInertialTimestampMeta", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 112);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "positionX", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 112);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "positionY", *(double *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 112);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "positionZ", *(double *)(a1 + 72));
  __int16 v5 = *(_WORD *)(a1 + 112);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "predictionComputeTimeMeta", *(double *)(a1 + 80));
  __int16 v5 = *(_WORD *)(a1 + 112);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_25:
  PB::TextFormatter::format(this, "predictionTimeMeta", *(double *)(a1 + 88));
  if ((*(_WORD *)(a1 + 112) & 0x100) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "propagationTimeMeta", *(double *)(a1 + 96));
LABEL_11:
  __int16 v6 = *(double **)(a1 + 8);
  uint64_t v7 = *(double **)(a1 + 16);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(this, "rotationMatrixElement", v8);
  }
  if ((*(_WORD *)(a1 + 112) & 0x200) != 0) {
    PB::TextFormatter::format(this, "targetTimestamp", *(double *)(a1 + 104));
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_101748C1C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    double v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        if (v12++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v22 = v13 & 7;
      if (v22 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 112) |= 1u;
          unint64_t v23 = *((void *)this + 1);
          if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v23);
          goto LABEL_101;
        case 2u:
          *(_WORD *)(a1 + 112) |= 0x200u;
          unint64_t v24 = *((void *)this + 1);
          if (v24 > 0xFFFFFFFFFFFFFFF7 || v24 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v24);
          goto LABEL_101;
        case 3u:
          *(_WORD *)(a1 + 112) |= 2u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v25);
          goto LABEL_101;
        case 4u:
          if (v22 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v26 = *((void *)this + 1);
            unint64_t v27 = *((void *)this + 2);
            while (v26 < v27 && !*((unsigned char *)this + 24))
            {
              unsigned int v29 = *(char **)(a1 + 16);
              unint64_t v28 = *(void *)(a1 + 24);
              if ((unint64_t)v29 >= v28)
              {
                double v31 = (char *)*v8;
                uint64_t v32 = (v29 - (unsigned char *)*v8) >> 3;
                unint64_t v33 = v32 + 1;
                if ((unint64_t)(v32 + 1) >> 61) {
                  goto LABEL_110;
                }
                uint64_t v34 = v28 - (void)v31;
                if (v34 >> 2 > v33) {
                  unint64_t v33 = v34 >> 2;
                }
                if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v35 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v35 = v33;
                }
                if (v35)
                {
                  unint64_t v36 = (char *)sub_1000DA54C(v9, v35);
                  double v31 = *(char **)(a1 + 8);
                  unsigned int v29 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v36 = 0;
                }
                double v37 = &v36[8 * v32];
                *(void *)double v37 = 0;
                uint64_t v30 = v37 + 8;
                while (v29 != v31)
                {
                  uint64_t v38 = *((void *)v29 - 1);
                  v29 -= 8;
                  *((void *)v37 - 1) = v38;
                  v37 -= 8;
                }
                *(void *)(a1 + 8) = v37;
                *(void *)(a1 + 16) = v30;
                *(void *)(a1 + 24) = &v36[8 * v35];
                if (v31) {
                  operator delete(v31);
                }
              }
              else
              {
                *(void *)unsigned int v29 = 0;
                uint64_t v30 = v29 + 8;
              }
              *(void *)(a1 + 16) = v30;
              unint64_t v39 = *((void *)this + 1);
              if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v30 - 1) = *(void *)(*(void *)this + v39);
              unint64_t v27 = *((void *)this + 2);
              unint64_t v26 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v26;
            }
            PB::Reader::recallMark();
          }
          else
          {
            unsigned int v48 = *(char **)(a1 + 16);
            unint64_t v47 = *(void *)(a1 + 24);
            if ((unint64_t)v48 >= v47)
            {
              unint64_t v50 = (char *)*v8;
              uint64_t v51 = (v48 - (unsigned char *)*v8) >> 3;
              unint64_t v52 = v51 + 1;
              if ((unint64_t)(v51 + 1) >> 61) {
LABEL_110:
              }
                sub_1001D7FD4();
              uint64_t v53 = v47 - (void)v50;
              if (v53 >> 2 > v52) {
                unint64_t v52 = v53 >> 2;
              }
              if ((unint64_t)v53 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v54 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v54 = v52;
              }
              if (v54)
              {
                unint64_t v55 = (char *)sub_1000DA54C(v9, v54);
                unint64_t v50 = *(char **)(a1 + 8);
                unsigned int v48 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v55 = 0;
              }
              char v56 = &v55[8 * v51];
              *(void *)char v56 = 0;
              uint64_t v49 = v56 + 8;
              while (v48 != v50)
              {
                uint64_t v57 = *((void *)v48 - 1);
                v48 -= 8;
                *((void *)v56 - 1) = v57;
                v56 -= 8;
              }
              *(void *)(a1 + 8) = v56;
              *(void *)(a1 + 16) = v49;
              *(void *)(a1 + 24) = &v55[8 * v54];
              if (v50) {
                operator delete(v50);
              }
            }
            else
            {
              *(void *)unsigned int v48 = 0;
              uint64_t v49 = v48 + 8;
            }
            *(void *)(a1 + 16) = v49;
            unint64_t v58 = *((void *)this + 1);
            if (v58 <= 0xFFFFFFFFFFFFFFF7 && v58 + 8 <= *((void *)this + 2))
            {
              *(v49 - 1) = *(void *)(*(void *)this + v58);
LABEL_101:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_99:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_102:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 5u:
          *(_WORD *)(a1 + 112) |= 8u;
          unint64_t v40 = *((void *)this + 1);
          if (v40 > 0xFFFFFFFFFFFFFFF7 || v40 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v40);
          goto LABEL_101;
        case 6u:
          *(_WORD *)(a1 + 112) |= 0x10u;
          unint64_t v41 = *((void *)this + 1);
          if (v41 > 0xFFFFFFFFFFFFFFF7 || v41 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v41);
          goto LABEL_101;
        case 7u:
          *(_WORD *)(a1 + 112) |= 0x20u;
          unint64_t v42 = *((void *)this + 1);
          if (v42 > 0xFFFFFFFFFFFFFFF7 || v42 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v42);
          goto LABEL_101;
        case 8u:
          *(_WORD *)(a1 + 112) |= 4u;
          unint64_t v43 = *((void *)this + 1);
          if (v43 > 0xFFFFFFFFFFFFFFF7 || v43 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v43);
          goto LABEL_101;
        case 9u:
          *(_WORD *)(a1 + 112) |= 0x80u;
          unint64_t v44 = *((void *)this + 1);
          if (v44 > 0xFFFFFFFFFFFFFFF7 || v44 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v44);
          goto LABEL_101;
        case 0xAu:
          *(_WORD *)(a1 + 112) |= 0x100u;
          unint64_t v45 = *((void *)this + 1);
          if (v45 > 0xFFFFFFFFFFFFFFF7 || v45 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 96) = *(void *)(*(void *)this + v45);
          goto LABEL_101;
        case 0xBu:
          *(_WORD *)(a1 + 112) |= 0x40u;
          unint64_t v46 = *((void *)this + 1);
          if (v46 > 0xFFFFFFFFFFFFFFF7 || v46 + 8 > *((void *)this + 2)) {
            goto LABEL_99;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v46);
          goto LABEL_101;
        default:
          if ((PB::Reader::skip(this, v13 >> 3, v22, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_102;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101749210(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 112);
  if ((v4 & 1) == 0)
  {
    if ((*(_WORD *)(result + 112) & 0x200) == 0) {
      goto LABEL_3;
    }
LABEL_17:
    double result = PB::Writer::write(this, *(double *)(v3 + 104), 2u);
    if ((*(_WORD *)(v3 + 112) & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  double result = PB::Writer::write(this, *(double *)(result + 32), 1u);
  __int16 v4 = *(_WORD *)(v3 + 112);
  if ((v4 & 0x200) != 0) {
    goto LABEL_17;
  }
LABEL_3:
  if ((v4 & 2) != 0) {
LABEL_4:
  }
    double result = PB::Writer::write(this, *(double *)(v3 + 40), 3u);
LABEL_5:
  __int16 v5 = *(double **)(v3 + 8);
  __int16 v6 = *(double **)(v3 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    double result = PB::Writer::write(this, v7, 4u);
  }
  __int16 v8 = *(_WORD *)(v3 + 112);
  if ((v8 & 8) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(v3 + 56), 5u);
    __int16 v8 = *(_WORD *)(v3 + 112);
    if ((v8 & 0x10) == 0)
    {
LABEL_10:
      if ((v8 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_21;
    }
  }
  else if ((v8 & 0x10) == 0)
  {
    goto LABEL_10;
  }
  double result = PB::Writer::write(this, *(double *)(v3 + 64), 6u);
  __int16 v8 = *(_WORD *)(v3 + 112);
  if ((v8 & 0x20) == 0)
  {
LABEL_11:
    if ((v8 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  double result = PB::Writer::write(this, *(double *)(v3 + 72), 7u);
  __int16 v8 = *(_WORD *)(v3 + 112);
  if ((v8 & 4) == 0)
  {
LABEL_12:
    if ((v8 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  double result = PB::Writer::write(this, *(double *)(v3 + 48), 8u);
  __int16 v8 = *(_WORD *)(v3 + 112);
  if ((v8 & 0x80) == 0)
  {
LABEL_13:
    if ((v8 & 0x100) == 0) {
      goto LABEL_14;
    }
LABEL_24:
    double result = PB::Writer::write(this, *(double *)(v3 + 96), 0xAu);
    if ((*(_WORD *)(v3 + 112) & 0x40) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  double result = PB::Writer::write(this, *(double *)(v3 + 88), 9u);
  __int16 v8 = *(_WORD *)(v3 + 112);
  if ((v8 & 0x100) != 0) {
    goto LABEL_24;
  }
LABEL_14:
  if ((v8 & 0x40) == 0) {
    return result;
  }
LABEL_25:
  double v9 = *(double *)(v3 + 80);

  return PB::Writer::write(this, v9, 0xBu);
}

double sub_10174938C(uint64_t a1)
{
  *(void *)a1 = &off_102338638;
  *(_DWORD *)(a1 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_1017493C0(PB::Base *this)
{
  *(void *)this = &off_102338638;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_101749434(PB::Base *a1)
{
  sub_1017493C0(a1);

  operator delete();
}

uint64_t sub_10174946C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338638;
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if (*(unsigned char *)(a2 + 64))
  {
    uint64_t v5 = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = 1;
    *(void *)(a1 + 56) = v5;
  }
  if (a1 != a2)
  {
    sub_1002DD194(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_1002DD194((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
  }
  return a1;
}

uint64_t sub_101749510(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(double **)(a1 + 8);
  __int16 v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "so3", v7);
  }
  if (*(unsigned char *)(a1 + 64)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 56));
  }
  __int16 v8 = *(double **)(a1 + 32);
  double v9 = *(double **)(a1 + 40);
  while (v8 != v9)
  {
    double v10 = *v8++;
    PB::TextFormatter::format(this, "translation", v10);
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1017495D8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    __int16 v8 = (void **)(a1 + 32);
    uint64_t v9 = a1 + 48;
    double v10 = (void **)(a1 + 8);
    uint64_t v11 = a1 + 24;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        unint64_t v15 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v21 = v2 + 1;
          char v22 = *(unsigned char *)(v12 + v2);
          *((void *)this + 1) = v21;
          v15 |= (unint64_t)(v22 & 0x7F) << v19;
          if ((v22 & 0x80) == 0) {
            goto LABEL_21;
          }
          v19 += 7;
          unint64_t v2 = v21;
          if (v20++ >= 9)
          {
LABEL_20:
            unint64_t v15 = 0;
            goto LABEL_21;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v25 = v15 >> 3;
      if ((v15 >> 3) == 3) {
        break;
      }
      if (v25 == 2)
      {
        if (v24 == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          while (v41 < v42 && !*((unsigned char *)this + 24))
          {
            unint64_t v44 = *(char **)(a1 + 16);
            unint64_t v43 = *(void *)(a1 + 24);
            if ((unint64_t)v44 >= v43)
            {
              unint64_t v46 = (char *)*v10;
              uint64_t v47 = (v44 - (unsigned char *)*v10) >> 3;
              unint64_t v48 = v47 + 1;
              if ((unint64_t)(v47 + 1) >> 61) {
                goto LABEL_128;
              }
              uint64_t v49 = v43 - (void)v46;
              if (v49 >> 2 > v48) {
                unint64_t v48 = v49 >> 2;
              }
              if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v50 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v50 = v48;
              }
              if (v50)
              {
                uint64_t v51 = (char *)sub_1000DA54C(v11, v50);
                unint64_t v46 = *(char **)(a1 + 8);
                unint64_t v44 = *(char **)(a1 + 16);
              }
              else
              {
                uint64_t v51 = 0;
              }
              unint64_t v52 = &v51[8 * v47];
              *(void *)unint64_t v52 = 0;
              unint64_t v45 = v52 + 8;
              while (v44 != v46)
              {
                uint64_t v53 = *((void *)v44 - 1);
                v44 -= 8;
                *((void *)v52 - 1) = v53;
                v52 -= 8;
              }
              *(void *)(a1 + 8) = v52;
              *(void *)(a1 + 16) = v45;
              *(void *)(a1 + 24) = &v51[8 * v50];
              if (v46) {
                operator delete(v46);
              }
            }
            else
            {
              *(void *)unint64_t v44 = 0;
              unint64_t v45 = v44 + 8;
            }
            *(void *)(a1 + 16) = v45;
            unint64_t v54 = *((void *)this + 1);
            if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > *((void *)this + 2)) {
              goto LABEL_82;
            }
            *(v45 - 1) = *(void *)(*(void *)this + v54);
            unint64_t v42 = *((void *)this + 2);
            unint64_t v41 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v41;
          }
          goto LABEL_83;
        }
        uint64_t v59 = *(char **)(a1 + 16);
        unint64_t v58 = *(void *)(a1 + 24);
        if ((unint64_t)v59 >= v58)
        {
          unint64_t v66 = (char *)*v10;
          uint64_t v67 = (v59 - (unsigned char *)*v10) >> 3;
          unint64_t v68 = v67 + 1;
          if ((unint64_t)(v67 + 1) >> 61) {
LABEL_128:
          }
            sub_1001D7FD4();
          uint64_t v69 = v58 - (void)v66;
          if (v69 >> 2 > v68) {
            unint64_t v68 = v69 >> 2;
          }
          if ((unint64_t)v69 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v70 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v70 = v68;
          }
          if (v70)
          {
            uint64_t v71 = (char *)sub_1000DA54C(v11, v70);
            unint64_t v66 = *(char **)(a1 + 8);
            uint64_t v59 = *(char **)(a1 + 16);
          }
          else
          {
            uint64_t v71 = 0;
          }
          unint64_t v74 = &v71[8 * v67];
          *(void *)unint64_t v74 = 0;
          uint64_t v57 = v74 + 8;
          while (v59 != v66)
          {
            uint64_t v75 = *((void *)v59 - 1);
            v59 -= 8;
            *((void *)v74 - 1) = v75;
            v74 -= 8;
          }
          *(void *)(a1 + 8) = v74;
          *(void *)(a1 + 16) = v57;
          *(void *)(a1 + 24) = &v71[8 * v70];
          if (v66) {
            operator delete(v66);
          }
        }
        else
        {
          *(void *)uint64_t v59 = 0;
          uint64_t v57 = v59 + 8;
        }
        *(void *)(a1 + 16) = v57;
LABEL_114:
        unint64_t v76 = *((void *)this + 1);
        if (v76 > 0xFFFFFFFFFFFFFFF7 || v76 + 8 > *((void *)this + 2))
        {
LABEL_116:
          *((unsigned char *)this + 24) = 1;
          goto LABEL_119;
        }
        *(v57 - 1) = *(void *)(*(void *)this + v76);
        goto LABEL_118;
      }
      if (v25 == 1)
      {
        *(unsigned char *)(a1 + 64) |= 1u;
        unint64_t v26 = *((void *)this + 1);
        if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
          goto LABEL_116;
        }
        *(void *)(a1 + 56) = *(void *)(*(void *)this + v26);
LABEL_118:
        *((void *)this + 1) += 8;
        goto LABEL_119;
      }
      if ((PB::Reader::skip(this, v25, v24, 0) & 1) == 0) {
        return 0;
      }
LABEL_119:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    if (v24 == 2)
    {
      if (PB::Reader::placeMark()) {
        return 0;
      }
      unint64_t v27 = *((void *)this + 1);
      unint64_t v28 = *((void *)this + 2);
      while (v27 < v28 && !*((unsigned char *)this + 24))
      {
        uint64_t v30 = *(char **)(a1 + 40);
        unint64_t v29 = *(void *)(a1 + 48);
        if ((unint64_t)v30 >= v29)
        {
          uint64_t v32 = (char *)*v8;
          uint64_t v33 = (v30 - (unsigned char *)*v8) >> 3;
          unint64_t v34 = v33 + 1;
          if ((unint64_t)(v33 + 1) >> 61) {
            goto LABEL_127;
          }
          uint64_t v35 = v29 - (void)v32;
          if (v35 >> 2 > v34) {
            unint64_t v34 = v35 >> 2;
          }
          if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v36 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v36 = v34;
          }
          if (v36)
          {
            double v37 = (char *)sub_1000DA54C(v9, v36);
            uint64_t v32 = *(char **)(a1 + 32);
            uint64_t v30 = *(char **)(a1 + 40);
          }
          else
          {
            double v37 = 0;
          }
          uint64_t v38 = &v37[8 * v33];
          *(void *)uint64_t v38 = 0;
          double v31 = v38 + 8;
          while (v30 != v32)
          {
            uint64_t v39 = *((void *)v30 - 1);
            v30 -= 8;
            *((void *)v38 - 1) = v39;
            v38 -= 8;
          }
          *(void *)(a1 + 32) = v38;
          *(void *)(a1 + 40) = v31;
          *(void *)(a1 + 48) = &v37[8 * v36];
          if (v32) {
            operator delete(v32);
          }
        }
        else
        {
          *(void *)uint64_t v30 = 0;
          double v31 = v30 + 8;
        }
        *(void *)(a1 + 40) = v31;
        unint64_t v40 = *((void *)this + 1);
        if (v40 > 0xFFFFFFFFFFFFFFF7 || v40 + 8 > *((void *)this + 2))
        {
LABEL_82:
          *((unsigned char *)this + 24) = 1;
          break;
        }
        *(v31 - 1) = *(void *)(*(void *)this + v40);
        unint64_t v28 = *((void *)this + 2);
        unint64_t v27 = *((void *)this + 1) + 8;
        *((void *)this + 1) = v27;
      }
LABEL_83:
      PB::Reader::recallMark();
      goto LABEL_119;
    }
    char v56 = *(char **)(a1 + 40);
    unint64_t v55 = *(void *)(a1 + 48);
    if ((unint64_t)v56 >= v55)
    {
      unint64_t v60 = (char *)*v8;
      uint64_t v61 = (v56 - (unsigned char *)*v8) >> 3;
      unint64_t v62 = v61 + 1;
      if ((unint64_t)(v61 + 1) >> 61) {
LABEL_127:
      }
        sub_1001D7FD4();
      uint64_t v63 = v55 - (void)v60;
      if (v63 >> 2 > v62) {
        unint64_t v62 = v63 >> 2;
      }
      if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v64 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v64 = v62;
      }
      if (v64)
      {
        unint64_t v65 = (char *)sub_1000DA54C(v9, v64);
        unint64_t v60 = *(char **)(a1 + 32);
        char v56 = *(char **)(a1 + 40);
      }
      else
      {
        unint64_t v65 = 0;
      }
      unint64_t v72 = &v65[8 * v61];
      *(void *)unint64_t v72 = 0;
      uint64_t v57 = v72 + 8;
      while (v56 != v60)
      {
        uint64_t v73 = *((void *)v56 - 1);
        v56 -= 8;
        *((void *)v72 - 1) = v73;
        v72 -= 8;
      }
      *(void *)(a1 + 32) = v72;
      *(void *)(a1 + 40) = v57;
      *(void *)(a1 + 48) = &v65[8 * v64];
      if (v60) {
        operator delete(v60);
      }
    }
    else
    {
      *(void *)char v56 = 0;
      uint64_t v57 = v56 + 8;
    }
    *(void *)(a1 + 40) = v57;
    goto LABEL_114;
  }
  return v4 == 0;
}

uint64_t sub_101749B4C(uint64_t result, PB::Writer *this)
{
  unint64_t v3 = (void *)result;
  if (*(unsigned char *)(result + 64)) {
    double result = PB::Writer::write(this, *(double *)(result + 56), 1u);
  }
  int v4 = (double *)v3[1];
  uint64_t v5 = (double *)v3[2];
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6, 2u);
  }
  __int16 v8 = (double *)v3[4];
  double v7 = (double *)v3[5];
  while (v8 != v7)
  {
    double v9 = *v8++;
    double result = PB::Writer::write(this, v9, 3u);
  }
  return result;
}

uint64_t sub_101749BD0(uint64_t result)
{
  *(void *)double result = &off_102338670;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

void sub_101749BF8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_101749C30(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338670;
  *(_DWORD *)(a1 + 88) = 0;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x80) != 0)
  {
    double result = *(double *)(a2 + 64);
    __int16 v3 = 128;
    *(_WORD *)(a1 + 88) = 128;
    *(double *)(a1 + 64) = result;
    __int16 v2 = *(_WORD *)(a2 + 88);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 48);
    v3 |= 0x20u;
    *(_WORD *)(a1 + 88) = v3;
    *(double *)(a1 + 48) = result;
    __int16 v2 = *(_WORD *)(a2 + 88);
  }
LABEL_6:
  if ((v2 & 0x200) != 0)
  {
    int v5 = *(_DWORD *)(a2 + 76);
    v3 |= 0x200u;
    *(_WORD *)(a1 + 88) = v3;
    *(_DWORD *)(a1 + 76) = v5;
    __int16 v2 = *(_WORD *)(a2 + 88);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  double result = *(double *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 24) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  double result = *(double *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 32) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 2) == 0)
  {
LABEL_10:
    if ((v2 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  double result = *(double *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 16) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x100) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v6 = *(_DWORD *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 88) = v3;
  *(_DWORD *)(a1 + 72) = v6;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  double result = *(double *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 8) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = *(double *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 88) = v3;
  *(double *)(a1 + 56) = result;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x800) == 0)
  {
LABEL_14:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v7 = *(unsigned char *)(a2 + 84);
  v3 |= 0x800u;
  *(_WORD *)(a1 + 88) = v3;
  *(unsigned char *)(a1 + 84) = v7;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x1000) == 0)
  {
LABEL_15:
    if ((v2 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_27:
  char v8 = *(unsigned char *)(a2 + 85);
  v3 |= 0x1000u;
  *(_WORD *)(a1 + 88) = v3;
  *(unsigned char *)(a1 + 85) = v8;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v9 = *(_DWORD *)(a2 + 80);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 88) = v3;
  *(_DWORD *)(a1 + 80) = v9;
  __int16 v2 = *(_WORD *)(a2 + 88);
  if ((v2 & 0x2000) == 0)
  {
LABEL_17:
    if ((v2 & 0x10) == 0) {
      return result;
    }
LABEL_30:
    double result = *(double *)(a2 + 40);
    *(_WORD *)(a1 + 88) = v3 | 0x10;
    *(double *)(a1 + 40) = result;
    return result;
  }
LABEL_29:
  char v10 = *(unsigned char *)(a2 + 86);
  v3 |= 0x2000u;
  *(_WORD *)(a1 + 88) = v3;
  *(unsigned char *)(a1 + 86) = v10;
  if ((*(_WORD *)(a2 + 88) & 0x10) != 0) {
    goto LABEL_30;
  }
  return result;
}

uint64_t sub_101749DE4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 88);
  if (v5)
  {
    PB::TextFormatter::format(this, "cadence", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 88);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "grade", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x100) == 0)
  {
LABEL_4:
    if ((v5 & 0x800) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "gradeType", *(_DWORD *)(a1 + 72));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x800) == 0)
  {
LABEL_5:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "hasGps", *(unsigned char *)(a1 + 84));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x1000) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "hasStrideCal", *(unsigned char *)(a1 + 85));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "heartRate", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "heartRateConfidence", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "hrTime", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x2000) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "isStroller", *(unsigned char *)(a1 + 86));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "metSource", *(_DWORD *)(a1 + 76));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x20) == 0)
  {
LABEL_12:
    if ((v5 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "mets", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x40) == 0)
  {
LABEL_13:
    if ((v5 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "pace", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 88);
  if ((v5 & 0x80) == 0)
  {
LABEL_14:
    if ((v5 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_31:
  PB::TextFormatter::format(this, "startDate", *(double *)(a1 + 64));
  if ((*(_WORD *)(a1 + 88) & 0x400) != 0) {
LABEL_15:
  }
    PB::TextFormatter::format(this, "workoutType", *(_DWORD *)(a1 + 80));
LABEL_16:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101749FE8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 88) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_103;
            case 2u:
              *(_WORD *)(a1 + 88) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_103;
            case 3u:
              *(_WORD *)(a1 + 88) |= 0x200u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_108;
                  }
                  unint64_t v47 = v21++;
                  char v48 = *(unsigned char *)(v22 + v47);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_107:
                    unint64_t v2 = v47 + 1;
                    goto LABEL_108;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_107;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_108;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_108:
              *(_DWORD *)(a1 + 76) = v25;
              goto LABEL_119;
            case 4u:
              *(_WORD *)(a1 + 88) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_103;
            case 5u:
              *(_WORD *)(a1 + 88) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_103;
            case 6u:
              *(_WORD *)(a1 + 88) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_103;
            case 7u:
              *(_WORD *)(a1 + 88) |= 0x100u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_113;
                  }
                  unint64_t v51 = v27++;
                  char v52 = *(unsigned char *)(v28 + v51);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_112:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_113;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_112;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_113;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_113:
              *(_DWORD *)(a1 + 72) = v31;
              goto LABEL_119;
            case 8u:
              *(_WORD *)(a1 + 88) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_103;
            case 9u:
              *(_WORD *)(a1 + 88) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_74;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_103;
            case 0xAu:
              *(_WORD *)(a1 + 88) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 84) = v34;
              goto LABEL_119;
            case 0xBu:
              *(_WORD *)(a1 + 88) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v36 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v36 = v35 != 0;
              }
              *(unsigned char *)(a1 + 85) = v36;
              goto LABEL_119;
            case 0xCu:
              *(_WORD *)(a1 + 88) |= 0x400u;
              unint64_t v37 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v38 = *(void *)this;
              if (v37 > 0xFFFFFFFFFFFFFFF5 || v37 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v41 = 0;
                if (v2 <= v37) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v37)
                  {
                    LODWORD(v41) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_118;
                  }
                  unint64_t v55 = v37++;
                  char v56 = *(unsigned char *)(v38 + v55);
                  *((void *)this + 1) = v37;
                  v41 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v41) = 0;
LABEL_117:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_118;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v41) = 0;
                }
                goto LABEL_117;
              }
              char v39 = 0;
              unsigned int v40 = 0;
              uint64_t v41 = 0;
              do
              {
                unint64_t v2 = v37 + 1;
                *((void *)this + 1) = v37 + 1;
                char v42 = *(unsigned char *)(v38 + v37);
                v41 |= (unint64_t)(v42 & 0x7F) << v39;
                if ((v42 & 0x80) == 0) {
                  goto LABEL_118;
                }
                v39 += 7;
                unint64_t v37 = v2;
                BOOL v14 = v40++ > 8;
              }
              while (!v14);
              LODWORD(v41) = 0;
LABEL_118:
              *(_DWORD *)(a1 + 80) = v41;
LABEL_119:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xDu:
              *(_WORD *)(a1 + 88) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v44 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v43 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v44 = v43 != 0;
              }
              *(unsigned char *)(a1 + 86) = v44;
              goto LABEL_119;
            case 0xEu:
              *(_WORD *)(a1 + 88) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
LABEL_103:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_74:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_119;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_119;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10174A6F8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 88);
  if ((v4 & 0x80) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 64), 1u);
    __int16 v4 = *(_WORD *)(v3 + 88);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x200) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 2u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x200) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 76), 3u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 4u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 5u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 2) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 6u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 72), 7u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 8u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x40) == 0)
  {
LABEL_10:
    if ((v4 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 9u);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x800) == 0)
  {
LABEL_11:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 84), 0xAu);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x1000) == 0)
  {
LABEL_12:
    if ((v4 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 85), 0xBu);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x400) == 0)
  {
LABEL_13:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 86), 0xDu);
    if ((*(_WORD *)(v3 + 88) & 0x10) == 0) {
      return result;
    }
    goto LABEL_29;
  }
LABEL_27:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 80), 0xCu);
  __int16 v4 = *(_WORD *)(v3 + 88);
  if ((v4 & 0x2000) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_29:
  double v5 = *(double *)(v3 + 40);

  return PB::Writer::write(this, v5, 0xEu);
}

uint64_t sub_10174A8B8(uint64_t result)
{
  *(void *)uint64_t result = &off_1023386A8;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_10174A8E0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_10174A918(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023386A8;
  *(_DWORD *)(a1 + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 4) != 0)
  {
    double result = *(double *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(a1 + 40) = 4;
    *(double *)(a1 + 24) = result;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 2) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 40) = v3;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 1) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    double result = *(double *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = v3 | 8;
    *(double *)(a1 + 32) = result;
    return result;
  }
  double result = *(double *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(a1 + 40) = v3;
  *(double *)(a1 + 8) = result;
  if ((*(unsigned char *)(a2 + 40) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_10174A9B4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if (v5)
  {
    PB::TextFormatter::format(this, "hr", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "hrTime", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "time", *(double *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 40) & 8) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "vo2", *(double *)(a1 + 32));
LABEL_6:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10174AA78(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 40) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
          goto LABEL_37;
        case 2u:
          *(unsigned char *)(a1 + 40) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          goto LABEL_37;
        case 3u:
          *(unsigned char *)(a1 + 40) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_35;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          goto LABEL_37;
        case 4u:
          *(unsigned char *)(a1 + 40) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
LABEL_37:
            unint64_t v2 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_35:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10174ACF0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24), 1u);
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 3u);
      if ((*(unsigned char *)(v3 + 40) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 2u);
  char v4 = *(unsigned char *)(v3 + 40);
  if (v4) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:
  double v5 = *(double *)(v3 + 32);

  return PB::Writer::write(this, v5, 4u);
}

uint64_t sub_10174AD98(uint64_t result)
{
  *(void *)uint64_t result = &off_1023386E0;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

void sub_10174ADC0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10174ADF8(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023386E0;
  *(_DWORD *)(result + 72) = 0;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 0x20) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 48);
    __int16 v3 = 32;
    *(_WORD *)(result + 72) = 32;
    *(void *)(result + 48) = v4;
    __int16 v2 = *(_WORD *)(a2 + 72);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(result + 72) = v3;
    *(void *)(result + 16) = v5;
    __int16 v2 = *(_WORD *)(a2 + 72);
  }
LABEL_6:
  if ((v2 & 0x100) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 68);
    v3 |= 0x100u;
    *(_WORD *)(result + 72) = v3;
    *(_DWORD *)(result + 68) = v6;
    __int16 v2 = *(_WORD *)(a2 + 72);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 72) = v3;
  *(void *)(result + 8) = v7;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v8 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 72) = v3;
  *(void *)(result + 32) = v8;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v9 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 72) = v3;
  *(void *)(result + 40) = v9;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 0x40) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v10 = *(void *)(a2 + 56);
  v3 |= 0x40u;
  *(_WORD *)(result + 72) = v3;
  *(void *)(result + 56) = v10;
  __int16 v2 = *(_WORD *)(a2 + 72);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_20:
    int v12 = *(_DWORD *)(a2 + 64);
    *(_WORD *)(result + 72) = v3 | 0x80;
    *(_DWORD *)(result + 64) = v12;
    return result;
  }
LABEL_19:
  uint64_t v11 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 72) = v3;
  *(void *)(result + 24) = v11;
  if ((*(_WORD *)(a2 + 72) & 0x80) != 0) {
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_10174AF20(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 72);
  if (v5)
  {
    PB::TextFormatter::format(this, "durationInSeconds", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 72);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "estimatedVo2Max", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "filteredVo2Max", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "hrMax", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "hrMin", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "sessionType", *(_DWORD *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 0x20) == 0)
  {
LABEL_8:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 72);
  if ((v5 & 0x40) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(this, "variance", *(double *)(a1 + 56));
  if ((*(_WORD *)(a1 + 72) & 0x100) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "workoutType", *(_DWORD *)(a1 + 68));
LABEL_11:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10174B084(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 72) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 2u:
              *(_WORD *)(a1 + 72) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 3u:
              *(_WORD *)(a1 + 72) |= 0x100u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_79;
                  }
                  unint64_t v35 = v21++;
                  char v36 = *(unsigned char *)(v22 + v35);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v36 & 0x7F) << v33;
                  if ((v36 & 0x80) == 0) {
                    break;
                  }
                  v33 += 7;
                  BOOL v14 = v34++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_78:
                    unint64_t v2 = v35 + 1;
                    goto LABEL_79;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_78;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_79;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_79:
              *(_DWORD *)(a1 + 68) = v25;
              goto LABEL_85;
            case 4u:
              *(_WORD *)(a1 + 72) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 5u:
              *(_WORD *)(a1 + 72) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 6u:
              *(_WORD *)(a1 + 72) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 7u:
              *(_WORD *)(a1 + 72) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_51;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_74;
            case 8u:
              *(_WORD *)(a1 + 72) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_74:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_51:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_85;
            case 9u:
              *(_WORD *)(a1 + 72) |= 0x80u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_84;
                  }
                  unint64_t v39 = v27++;
                  char v40 = *(unsigned char *)(v28 + v39);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_83:
                    unint64_t v2 = v39 + 1;
                    goto LABEL_84;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_83;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_84;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_84:
              *(_DWORD *)(a1 + 64) = v31;
LABEL_85:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_85;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10174B590(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 72);
  if ((v4 & 0x20) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 48), 1u);
    __int16 v4 = *(_WORD *)(v3 + 72);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 2u);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 0x100) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 68), 3u);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 4u);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 5u);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 6u);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 8u);
    if ((*(_WORD *)(v3 + 72) & 0x80) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 7u);
  __int16 v4 = *(_WORD *)(v3 + 72);
  if ((v4 & 4) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 0x80) == 0) {
    return result;
  }
LABEL_19:
  int v5 = *(_DWORD *)(v3 + 64);

  return PB::Writer::writeVarInt(this, v5, 9u);
}

uint64_t sub_10174B6C4(uint64_t result)
{
  *(void *)uint64_t result = &off_102338718;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_10174B6EC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10174B724(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338718;
  *(_DWORD *)(result + 20) = 0;
  char v2 = *(unsigned char *)(a2 + 20);
  if ((v2 & 0x10) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 15);
    char v3 = 16;
    *(unsigned char *)(result + 20) = 16;
    *(unsigned char *)(result + 15) = v4;
    char v2 = *(unsigned char *)(a2 + 20);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 20) & 8) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 14);
    v3 |= 8u;
    *(unsigned char *)(result + 20) = v3;
    *(unsigned char *)(result + 14) = v5;
    char v2 = *(unsigned char *)(a2 + 20);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    char v6 = *(unsigned char *)(a2 + 12);
    v3 |= 2u;
    *(unsigned char *)(result + 20) = v3;
    *(unsigned char *)(result + 12) = v6;
    char v2 = *(unsigned char *)(a2 + 20);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  char v7 = *(unsigned char *)(a2 + 16);
  v3 |= 0x20u;
  *(unsigned char *)(result + 20) = v3;
  *(unsigned char *)(result + 16) = v7;
  char v2 = *(unsigned char *)(a2 + 20);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 1) == 0) {
      return result;
    }
LABEL_14:
    int v9 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 20) = v3 | 1;
    *(_DWORD *)(result + 8) = v9;
    return result;
  }
LABEL_13:
  char v8 = *(unsigned char *)(a2 + 13);
  v3 |= 4u;
  *(unsigned char *)(result + 20) = v3;
  *(unsigned char *)(result + 13) = v8;
  if (*(unsigned char *)(a2 + 20)) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_10174B7F8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "basebandHint", *(unsigned char *)(a1 + 12));
    char v5 = *(unsigned char *)(a1 + 20);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 20) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "btHint", *(unsigned char *)(a1 + 13));
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "gpsHint", *(unsigned char *)(a1 + 14));
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "motionHint", *(unsigned char *)(a1 + 15));
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 1) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "vehicularData", *(_DWORD *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 20) & 0x20) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "wifiHint", *(unsigned char *)(a1 + 16));
LABEL_8:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10174B8FC(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v3 > v2) {
          unint64_t v2 = v3;
        }
        while (v2 != v3)
        {
          unint64_t v17 = v3 + 1;
          char v18 = *(unsigned char *)(v8 + v3);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v3 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v3 + 1;
          *((void *)this + 1) = v3 + 1;
          char v13 = *(unsigned char *)(v8 + v3);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v3 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 20) |= 0x10u;
              unint64_t v3 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              if (v3 >= v2)
              {
                BOOL v21 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v20 = *(unsigned __int8 *)(*(void *)this + v3++);
                *((void *)this + 1) = v3;
                BOOL v21 = v20 != 0;
              }
              *(unsigned char *)(a1 + 15) = v21;
              goto LABEL_64;
            case 2u:
              *(unsigned char *)(a1 + 20) |= 8u;
              unint64_t v3 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              if (v3 >= v2)
              {
                BOOL v24 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v23 = *(unsigned __int8 *)(*(void *)this + v3++);
                *((void *)this + 1) = v3;
                BOOL v24 = v23 != 0;
              }
              *(unsigned char *)(a1 + 14) = v24;
              goto LABEL_64;
            case 3u:
              *(unsigned char *)(a1 + 20) |= 2u;
              unint64_t v3 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              if (v3 >= v2)
              {
                BOOL v26 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v25 = *(unsigned __int8 *)(*(void *)this + v3++);
                *((void *)this + 1) = v3;
                BOOL v26 = v25 != 0;
              }
              *(unsigned char *)(a1 + 12) = v26;
              goto LABEL_64;
            case 4u:
              *(unsigned char *)(a1 + 20) |= 0x20u;
              unint64_t v3 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              if (v3 >= v2)
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v3++);
                *((void *)this + 1) = v3;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 16) = v28;
              goto LABEL_64;
            case 5u:
              *(unsigned char *)(a1 + 20) |= 4u;
              unint64_t v3 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              if (v3 >= v2)
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v3++);
                *((void *)this + 1) = v3;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 13) = v30;
              goto LABEL_64;
            case 6u:
              *(unsigned char *)(a1 + 20) |= 1u;
              unint64_t v31 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v32 = *(void *)this;
              if (v31 > 0xFFFFFFFFFFFFFFF5 || v31 + 10 > v2)
              {
                char v37 = 0;
                unsigned int v38 = 0;
                uint64_t v35 = 0;
                if (v2 <= v31) {
                  unint64_t v3 = *((void *)this + 1);
                }
                else {
                  unint64_t v3 = *((void *)this + 2);
                }
                while (1)
                {
                  if (v3 == v31)
                  {
                    LODWORD(v35) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_63;
                  }
                  unint64_t v39 = v31++;
                  char v40 = *(unsigned char *)(v32 + v39);
                  *((void *)this + 1) = v31;
                  v35 |= (unint64_t)(v40 & 0x7F) << v37;
                  if ((v40 & 0x80) == 0) {
                    break;
                  }
                  v37 += 7;
                  BOOL v14 = v38++ > 8;
                  if (v14)
                  {
                    LODWORD(v35) = 0;
LABEL_62:
                    unint64_t v3 = v39 + 1;
                    goto LABEL_63;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v35) = 0;
                }
                goto LABEL_62;
              }
              char v33 = 0;
              unsigned int v34 = 0;
              uint64_t v35 = 0;
              do
              {
                unint64_t v3 = v31 + 1;
                *((void *)this + 1) = v31 + 1;
                char v36 = *(unsigned char *)(v32 + v31);
                v35 |= (unint64_t)(v36 & 0x7F) << v33;
                if ((v36 & 0x80) == 0) {
                  goto LABEL_63;
                }
                v33 += 7;
                unint64_t v31 = v3;
                BOOL v14 = v34++ > 8;
              }
              while (!v14);
              LODWORD(v35) = 0;
LABEL_63:
              *(_DWORD *)(a1 + 8) = v35;
LABEL_64:
              int v4 = *((unsigned __int8 *)this + 24);
              if (v3 >= v2 || *((unsigned char *)this + 24)) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v3 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              goto LABEL_64;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10174BCC4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if ((v4 & 0x10) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(result + 15), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 20) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 14), 2u);
  char v4 = *(unsigned char *)(v3 + 20);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 12), 3u);
  char v4 = *(unsigned char *)(v3 + 20);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 13), 5u);
    if ((*(unsigned char *)(v3 + 20) & 1) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 16), 4u);
  char v4 = *(unsigned char *)(v3 + 20);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_13:
  unsigned int v5 = *(_DWORD *)(v3 + 8);

  return PB::Writer::writeVarInt(this, v5, 6u);
}

uint64_t sub_10174BDA4(uint64_t result)
{
  *(void *)uint64_t result = &off_102338750;
  *(_DWORD *)(result + 60) = 0;
  return result;
}

void sub_10174BDCC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_10174BE04(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338750;
  *(_DWORD *)(a1 + 60) = 0;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(a1 + 60) = 1;
    *(double *)(a1 + 8) = result;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 60) & 0x100) != 0)
  {
LABEL_5:
    LODWORD(result) = *(_DWORD *)(a2 + 48);
    v3 |= 0x100u;
    *(_WORD *)(a1 + 60) = v3;
    *(_DWORD *)(a1 + 48) = LODWORD(result);
    __int16 v2 = *(_WORD *)(a2 + 60);
  }
LABEL_6:
  if ((v2 & 0x200) != 0)
  {
    LODWORD(result) = *(_DWORD *)(a2 + 52);
    v3 |= 0x200u;
    *(_WORD *)(a1 + 60) = v3;
    *(_DWORD *)(a1 + 52) = LODWORD(result);
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x400) == 0)
    {
LABEL_8:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(result) = *(_DWORD *)(a2 + 56);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 60) = v3;
  *(_DWORD *)(a1 + 56) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  LODWORD(result) = *(_DWORD *)(a2 + 36);
  v3 |= 0x20u;
  *(_WORD *)(a1 + 60) = v3;
  *(_DWORD *)(a1 + 36) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  LODWORD(result) = *(_DWORD *)(a2 + 40);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 60) = v3;
  *(_DWORD *)(a1 + 40) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  LODWORD(result) = *(_DWORD *)(a2 + 44);
  v3 |= 0x80u;
  *(_WORD *)(a1 + 60) = v3;
  *(_DWORD *)(a1 + 44) = LODWORD(result);
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v5 = *(_DWORD *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(a1 + 60) = v3;
  *(_DWORD *)(a1 + 24) = v5;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v6 = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(_WORD *)(a1 + 60) = v3;
  *(_DWORD *)(a1 + 28) = v6;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_24:
    double result = *(double *)(a2 + 16);
    *(_WORD *)(a1 + 60) = v3 | 2;
    *(double *)(a1 + 16) = result;
    return result;
  }
LABEL_23:
  int v7 = *(_DWORD *)(a2 + 32);
  v3 |= 0x10u;
  *(_WORD *)(a1 + 60) = v3;
  *(_DWORD *)(a1 + 32) = v7;
  if ((*(_WORD *)(a2 + 60) & 2) != 0) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_10174BF64(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "sourceX", *(_DWORD *)(a1 + 24));
    __int16 v5 = *(_WORD *)(a1 + 60);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "sourceY", *(_DWORD *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "sourceZ", *(_DWORD *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 2) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "timestampPast", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "velocityUncX", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "velocityUncY", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "velocityUncZ", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "velocityX", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "velocityY", *(float *)(a1 + 52));
  if ((*(_WORD *)(a1 + 60) & 0x400) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "velocityZ", *(float *)(a1 + 56));
LABEL_13:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10174C108(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 60) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_92;
            case 2u:
              *(_WORD *)(a1 + 60) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_45;
            case 3u:
              *(_WORD *)(a1 + 60) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_45;
            case 4u:
              *(_WORD *)(a1 + 60) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_45;
            case 5u:
              *(_WORD *)(a1 + 60) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_45;
            case 6u:
              *(_WORD *)(a1 + 60) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_45;
            case 7u:
              *(_WORD *)(a1 + 60) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_69;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
LABEL_45:
              unint64_t v2 = *((void *)this + 1) + 4;
              goto LABEL_93;
            case 8u:
              *(_WORD *)(a1 + 60) |= 4u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_98;
                  }
                  unint64_t v41 = v21++;
                  char v42 = *(unsigned char *)(v22 + v41);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_97:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_98;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_97;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_98:
              *(_DWORD *)(a1 + 24) = v25;
              goto LABEL_109;
            case 9u:
              *(_WORD *)(a1 + 60) |= 8u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_103;
                  }
                  unint64_t v45 = v27++;
                  char v46 = *(unsigned char *)(v28 + v45);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_102:
                    unint64_t v2 = v45 + 1;
                    goto LABEL_103;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_102;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_103;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_103:
              *(_DWORD *)(a1 + 28) = v31;
              goto LABEL_109;
            case 0xAu:
              *(_WORD *)(a1 + 60) |= 0x10u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_108;
                  }
                  unint64_t v49 = v33++;
                  char v50 = *(unsigned char *)(v34 + v49);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_107:
                    unint64_t v2 = v49 + 1;
                    goto LABEL_108;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_107;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_108;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_108:
              *(_DWORD *)(a1 + 32) = v37;
LABEL_109:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xBu:
              *(_WORD *)(a1 + 60) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_92:
                unint64_t v2 = *((void *)this + 1) + 8;
LABEL_93:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_69:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_109;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_109;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10174C748(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 60);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    __int16 v4 = *(_WORD *)(v3 + 60);
    if ((v4 & 0x100) == 0)
    {
LABEL_3:
      if ((v4 & 0x200) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((*(_WORD *)(result + 60) & 0x100) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 2u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x200) == 0)
  {
LABEL_4:
    if ((v4 & 0x400) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 3u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x400) == 0)
  {
LABEL_5:
    if ((v4 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 4u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x20) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 5u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x40) == 0)
  {
LABEL_7:
    if ((v4 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 6u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x80) == 0)
  {
LABEL_8:
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 7u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 4) == 0)
  {
LABEL_9:
    if ((v4 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 24), 8u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 32), 0xAu);
    if ((*(_WORD *)(v3 + 60) & 2) == 0) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 28), 9u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x10) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_23:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5, 0xBu);
}

uint64_t sub_10174C8B4(uint64_t result)
{
  *(void *)uint64_t result = &off_102338788;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

void sub_10174C8DC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10174C914(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338788;
  *(_DWORD *)(result + 12) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    char v2 = *(unsigned char *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(unsigned char *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_10174C950(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "isDeviceVibrating", *(unsigned char *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10174C9B0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        if (v2 >= v3)
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 8) = v21;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10174CB40(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::write(this, *(unsigned char *)(result + 8), 1u);
  }
  return result;
}

uint64_t sub_10174CB60(uint64_t result)
{
  *(void *)uint64_t result = &off_1023387C0;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_10174CB88(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10174CBC0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023387C0;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *(unsigned char *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(unsigned char *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_10174CC24(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "shouldSuppress", *(unsigned char *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10174CCA0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        if (v2 >= v3)
        {
          BOOL v28 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v28 = v27 != 0;
        }
        *(unsigned char *)(a1 + 16) = v28;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v3)
        {
          char v30 = 0;
          unsigned int v31 = 0;
          uint64_t v25 = 0;
          if (v3 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          else {
            unint64_t v2 = *((void *)this + 2);
          }
          while (1)
          {
            if (v2 == v21)
            {
              uint64_t v25 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_48;
            }
            unint64_t v32 = v21++;
            char v33 = *(unsigned char *)(v22 + v32);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v33 & 0x7F) << v30;
            if ((v33 & 0x80) == 0) {
              break;
            }
            v30 += 7;
            BOOL v14 = v31++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              goto LABEL_47;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v25 = 0;
          }
LABEL_47:
          unint64_t v2 = v32 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              break;
            }
          }
        }
LABEL_48:
        *(void *)(a1 + 8) = v25;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10174CF24(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    char v5 = *(unsigned char *)(v3 + 16);
    return PB::Writer::write(this, v5, 2u);
  }
  return result;
}

uint64_t sub_10174CF90(uint64_t result)
{
  *(void *)uint64_t result = &off_1023387F8;
  *(_DWORD *)(result + 116) = 0;
  return result;
}

void sub_10174CFB8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10174CFF0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023387F8;
  *(_DWORD *)(a1 + 116) = 0;
  int v2 = *(_DWORD *)(a2 + 116);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    int v3 = 1;
    *(_DWORD *)(a1 + 116) = 1;
    *(void *)(a1 + 8) = v4;
    int v2 = *(_DWORD *)(a2 + 116);
    if ((v2 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x4000) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 68);
    v3 |= 0x4000u;
    *(_DWORD *)(a1 + 116) = v3;
    *(float *)(a1 + 68) = result;
    int v2 = *(_DWORD *)(a2 + 116);
  }
LABEL_6:
  if ((v2 & 0x8000) != 0)
  {
    float result = *(float *)(a2 + 72);
    v3 |= 0x8000u;
    *(_DWORD *)(a1 + 116) = v3;
    *(float *)(a1 + 72) = result;
    int v2 = *(_DWORD *)(a2 + 116);
    if ((v2 & 0x10000) == 0)
    {
LABEL_8:
      if ((v2 & 0x200) == 0) {
        goto LABEL_9;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 0x10000) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 76);
  v3 |= 0x10000u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 76) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x200) == 0)
  {
LABEL_9:
    if ((v2 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_33:
  float result = *(float *)(a2 + 48);
  v3 |= 0x200u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 48) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x400) == 0)
  {
LABEL_10:
    if ((v2 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
LABEL_34:
  float result = *(float *)(a2 + 52);
  v3 |= 0x400u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 52) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x800) == 0)
  {
LABEL_11:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  float result = *(float *)(a2 + 56);
  v3 |= 0x800u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 56) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x1000) == 0)
  {
LABEL_12:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }
LABEL_36:
  float result = *(float *)(a2 + 60);
  v3 |= 0x1000u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 60) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x2000) == 0)
  {
LABEL_13:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_37:
  float result = *(float *)(a2 + 64);
  v3 |= 0x2000u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 64) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_14:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_38:
  float result = *(float *)(a2 + 112);
  v3 |= 0x2000000u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 112) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x40000) == 0)
  {
LABEL_15:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_40;
  }
LABEL_39:
  float result = *(float *)(a2 + 84);
  v3 |= 0x40000u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 84) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x20000) == 0)
  {
LABEL_16:
    if ((v2 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_41;
  }
LABEL_40:
  float result = *(float *)(a2 + 80);
  v3 |= 0x20000u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 80) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 4) == 0)
  {
LABEL_17:
    if ((v2 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_42;
  }
LABEL_41:
  float result = *(float *)(a2 + 20);
  v3 |= 4u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 20) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 8) == 0)
  {
LABEL_18:
    if ((v2 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_43;
  }
LABEL_42:
  float result = *(float *)(a2 + 24);
  v3 |= 8u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 24) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_44;
  }
LABEL_43:
  float result = *(float *)(a2 + 28);
  v3 |= 0x10u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 28) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x20) == 0)
  {
LABEL_20:
    if ((v2 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_45;
  }
LABEL_44:
  float result = *(float *)(a2 + 32);
  v3 |= 0x20u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 32) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x40) == 0)
  {
LABEL_21:
    if ((v2 & 0x80) == 0) {
      goto LABEL_22;
    }
    goto LABEL_46;
  }
LABEL_45:
  float result = *(float *)(a2 + 36);
  v3 |= 0x40u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 36) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x80) == 0)
  {
LABEL_22:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_47;
  }
LABEL_46:
  float result = *(float *)(a2 + 40);
  v3 |= 0x80u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 40) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x80000) == 0)
  {
LABEL_23:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_48;
  }
LABEL_47:
  float result = *(float *)(a2 + 88);
  v3 |= 0x80000u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 88) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x100000) == 0)
  {
LABEL_24:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_49;
  }
LABEL_48:
  float result = *(float *)(a2 + 92);
  v3 |= 0x100000u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 92) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x200000) == 0)
  {
LABEL_25:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_50;
  }
LABEL_49:
  float result = *(float *)(a2 + 96);
  v3 |= 0x200000u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 96) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x400000) == 0)
  {
LABEL_26:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_51;
  }
LABEL_50:
  float result = *(float *)(a2 + 100);
  v3 |= 0x400000u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 100) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x800000) == 0)
  {
LABEL_27:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_52;
  }
LABEL_51:
  float result = *(float *)(a2 + 104);
  v3 |= 0x800000u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 104) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_28:
    if ((v2 & 0x100) == 0) {
      goto LABEL_29;
    }
    goto LABEL_53;
  }
LABEL_52:
  float result = *(float *)(a2 + 108);
  v3 |= 0x1000000u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 108) = result;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x100) == 0)
  {
LABEL_29:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_54:
    float result = *(float *)(a2 + 16);
    *(_DWORD *)(a1 + 116) = v3 | 2;
    *(float *)(a1 + 16) = result;
    return result;
  }
LABEL_53:
  float result = *(float *)(a2 + 44);
  v3 |= 0x100u;
  *(_DWORD *)(a1 + 116) = v3;
  *(float *)(a1 + 44) = result;
  if ((*(_DWORD *)(a2 + 116) & 2) != 0) {
    goto LABEL_54;
  }
  return result;
}

uint64_t sub_10174D2F4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "absMeanGravX", *(float *)(a1 + 16));
    int v5 = *(_DWORD *)(a1 + 116);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_33;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "accelFFTBin1", *(float *)(a1 + 20));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "accelFFTBin2", *(float *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "accelFFTBin3", *(float *)(a1 + 28));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "accelFFTBin4", *(float *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "accelFFTBin5", *(float *)(a1 + 36));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "accelFFTBin6", *(float *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "accelFFTBinDotPressureFFTBin", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "fFTBin1", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "fFTBin2", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x800) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "fFTBin3", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "fFTBin4", *(float *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x2000) == 0)
  {
LABEL_14:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "fFTBin5", *(float *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x4000) == 0)
  {
LABEL_15:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "meanGravX", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x8000) == 0)
  {
LABEL_16:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "meanGravY", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x10000) == 0)
  {
LABEL_17:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "meanGravZ", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x20000) == 0)
  {
LABEL_18:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "medianLux", *(float *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x40000) == 0)
  {
LABEL_19:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "medianPocketProbability", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x80000) == 0)
  {
LABEL_20:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "pressureFFTBin1", *(float *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x100000) == 0)
  {
LABEL_21:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "pressureFFTBin2", *(float *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x200000) == 0)
  {
LABEL_22:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "pressureFFTBin3", *(float *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x400000) == 0)
  {
LABEL_23:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "pressureFFTBin4", *(float *)(a1 + 100));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x800000) == 0)
  {
LABEL_24:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "pressureFFTBin5", *(float *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_25:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "pressureFFTBin6", *(float *)(a1 + 108));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_26:
    if ((v5 & 1) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_55:
  PB::TextFormatter::format(this, "stdPressure", *(float *)(a1 + 112));
  if (*(_DWORD *)(a1 + 116)) {
LABEL_27:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
LABEL_28:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10174D678(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 116) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_124;
                  }
                  unint64_t v29 = v20++;
                  char v30 = *(unsigned char *)(v21 + v29);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_123;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_123:
                unint64_t v2 = v29 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_124;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_124:
              *(void *)(a1 + 8) = v24;
              goto LABEL_115;
            case 2u:
              *(_DWORD *)(a1 + 116) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 3u:
              *(_DWORD *)(a1 + 116) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 4u:
              *(_DWORD *)(a1 + 116) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 5u:
              *(_DWORD *)(a1 + 116) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 6u:
              *(_DWORD *)(a1 + 116) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 7u:
              *(_DWORD *)(a1 + 116) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 8u:
              *(_DWORD *)(a1 + 116) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 9u:
              *(_DWORD *)(a1 + 116) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0xAu:
              *(_DWORD *)(a1 + 116) |= 0x2000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0xBu:
              *(_DWORD *)(a1 + 116) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0xCu:
              *(_DWORD *)(a1 + 116) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0xDu:
              *(_DWORD *)(a1 + 116) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0xEu:
              *(_DWORD *)(a1 + 116) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0xFu:
              *(_DWORD *)(a1 + 116) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0x10u:
              *(_DWORD *)(a1 + 116) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0x11u:
              *(_DWORD *)(a1 + 116) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0x12u:
              *(_DWORD *)(a1 + 116) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0x13u:
              *(_DWORD *)(a1 + 116) |= 0x80000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0x14u:
              *(_DWORD *)(a1 + 116) |= 0x100000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 92) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0x15u:
              *(_DWORD *)(a1 + 116) |= 0x200000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0x16u:
              *(_DWORD *)(a1 + 116) |= 0x400000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 100) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0x17u:
              *(_DWORD *)(a1 + 116) |= 0x800000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 104) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0x18u:
              *(_DWORD *)(a1 + 116) |= 0x1000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0x19u:
              *(_DWORD *)(a1 + 116) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_105;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_114;
            case 0x1Au:
              *(_DWORD *)(a1 + 116) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
LABEL_114:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_105:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_115;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
LABEL_115:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10174DEC8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 116);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    int v4 = *(_DWORD *)(v3 + 116);
    if ((v4 & 0x4000) == 0)
    {
LABEL_3:
      if ((v4 & 0x8000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x4000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68), 2u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x8000) == 0)
  {
LABEL_4:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 3u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x10000) == 0)
  {
LABEL_5:
    if ((v4 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 4u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x200) == 0)
  {
LABEL_6:
    if ((v4 & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 5u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x400) == 0)
  {
LABEL_7:
    if ((v4 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 6u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x800) == 0)
  {
LABEL_8:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 7u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x1000) == 0)
  {
LABEL_9:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60), 8u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x2000) == 0)
  {
LABEL_10:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 9u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112), 0xAu);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x40000) == 0)
  {
LABEL_12:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 0xBu);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x20000) == 0)
  {
LABEL_13:
    if ((v4 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0xCu);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 4) == 0)
  {
LABEL_14:
    if ((v4 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 0xDu);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 8) == 0)
  {
LABEL_15:
    if ((v4 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 0xEu);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x10) == 0)
  {
LABEL_16:
    if ((v4 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 0xFu);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x20) == 0)
  {
LABEL_17:
    if ((v4 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 0x10u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x40) == 0)
  {
LABEL_18:
    if ((v4 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 0x11u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x80) == 0)
  {
LABEL_19:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 0x12u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x80000) == 0)
  {
LABEL_20:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88), 0x13u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x100000) == 0)
  {
LABEL_21:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 92), 0x14u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x200000) == 0)
  {
LABEL_22:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96), 0x15u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x400000) == 0)
  {
LABEL_23:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 100), 0x16u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x800000) == 0)
  {
LABEL_24:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 104), 0x17u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_25:
    if ((v4 & 0x100) == 0) {
      goto LABEL_26;
    }
LABEL_52:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 0x19u);
    if ((*(_DWORD *)(v3 + 116) & 2) == 0) {
      return result;
    }
    goto LABEL_53;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108), 0x18u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x100) != 0) {
    goto LABEL_52;
  }
LABEL_26:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_53:
  float v5 = *(float *)(v3 + 16);

  return PB::Writer::write(this, v5, 0x1Au);
}

uint64_t sub_10174E1D8(uint64_t result)
{
  *(void *)uint64_t result = &off_102338830;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_10174E200(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10174E238(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338830;
  *(_DWORD *)(a1 + 64) = 0;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(a1 + 64) = 1;
    *(void *)(a1 + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 4) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 20);
    v3 |= 4u;
    *(_WORD *)(a1 + 64) = v3;
    *(float *)(a1 + 20) = result;
    __int16 v2 = *(_WORD *)(a2 + 64);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    float result = *(float *)(a2 + 28);
    v3 |= 0x10u;
    *(_WORD *)(a1 + 64) = v3;
    *(float *)(a1 + 28) = result;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  float result = *(float *)(a2 + 32);
  v3 |= 0x20u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 32) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  float result = *(float *)(a2 + 36);
  v3 |= 0x40u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 36) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x400) == 0)
  {
LABEL_10:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  float result = *(float *)(a2 + 52);
  v3 |= 0x400u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 52) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x1000) == 0)
  {
LABEL_11:
    if ((v2 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  float result = *(float *)(a2 + 60);
  v3 |= 0x1000u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 60) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x200) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  float result = *(float *)(a2 + 48);
  v3 |= 0x200u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 48) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 2) == 0)
  {
LABEL_13:
    if ((v2 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  float result = *(float *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 16) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x800) == 0)
  {
LABEL_14:
    if ((v2 & 0x100) == 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  float result = *(float *)(a2 + 56);
  v3 |= 0x800u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 56) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x100) == 0)
  {
LABEL_15:
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  float result = *(float *)(a2 + 44);
  v3 |= 0x100u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 44) = result;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 8) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_28:
    float result = *(float *)(a2 + 40);
    *(_WORD *)(a1 + 64) = v3 | 0x80;
    *(float *)(a1 + 40) = result;
    return result;
  }
LABEL_27:
  float result = *(float *)(a2 + 24);
  v3 |= 8u;
  *(_WORD *)(a1 + 64) = v3;
  *(float *)(a1 + 24) = result;
  if ((*(_WORD *)(a2 + 64) & 0x80) != 0) {
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_10174E3D0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "bagObstructed", *(float *)(a1 + 16));
    __int16 v5 = *(_WORD *)(a1 + 64);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "closeCoveredBagObstructed", *(float *)(a1 + 20));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "closeCoveredObstructed", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "closeCoveredPocketObstructed", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "inHandObstructed", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "looseCoveredBagObstructed", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "looseCoveredObstructed", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "looseCoveredPocketObstructed", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "obstructed", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "otherObstructed", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x800) == 0)
  {
LABEL_12:
    if ((v5 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "pocketObstructed", *(float *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 1) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_29:
  PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
  if ((*(_WORD *)(a1 + 64) & 0x1000) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(this, "visible", *(float *)(a1 + 60));
LABEL_15:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10174E5B4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 64) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_80;
                  }
                  unint64_t v29 = v20++;
                  char v30 = *(unsigned char *)(v21 + v29);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_79;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_79:
                unint64_t v2 = v29 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_80;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_80:
              *(void *)(a1 + 8) = v24;
              goto LABEL_81;
            case 2u:
              *(_WORD *)(a1 + 64) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_75;
            case 3u:
              *(_WORD *)(a1 + 64) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_75;
            case 4u:
              *(_WORD *)(a1 + 64) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_75;
            case 5u:
              *(_WORD *)(a1 + 64) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_75;
            case 6u:
              *(_WORD *)(a1 + 64) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_75;
            case 7u:
              *(_WORD *)(a1 + 64) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 60) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_75;
            case 8u:
              *(_WORD *)(a1 + 64) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_75;
            case 9u:
              *(_WORD *)(a1 + 64) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_75;
            case 0xAu:
              *(_WORD *)(a1 + 64) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_75;
            case 0xBu:
              *(_WORD *)(a1 + 64) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_75;
            case 0xCu:
              *(_WORD *)(a1 + 64) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_66;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_75;
            case 0xDu:
              *(_WORD *)(a1 + 64) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
LABEL_75:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_66:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_81;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
LABEL_81:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10174EAFC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 64);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    __int16 v4 = *(_WORD *)(v3 + 64);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 2u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 3u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 4u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 5u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x400) == 0)
  {
LABEL_7:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 6u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x1000) == 0)
  {
LABEL_8:
    if ((v4 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 60), 7u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x200) == 0)
  {
LABEL_9:
    if ((v4 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 8u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 2) == 0)
  {
LABEL_10:
    if ((v4 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 9u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x800) == 0)
  {
LABEL_11:
    if ((v4 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0xAu);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x100) == 0)
  {
LABEL_12:
    if ((v4 & 8) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 0xCu);
    if ((*(_WORD *)(v3 + 64) & 0x80) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 0xBu);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 8) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v4 & 0x80) == 0) {
    return result;
  }
LABEL_27:
  float v5 = *(float *)(v3 + 40);

  return PB::Writer::write(this, v5, 0xDu);
}

uint64_t sub_10174ECA0(uint64_t result)
{
  *(void *)uint64_t result = &off_102338868;
  *(_DWORD *)(result + 84) = 0;
  return result;
}

void sub_10174ECC8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10174ED00(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338868;
  *(_DWORD *)(result + 84) = 0;
  int v2 = *(_DWORD *)(a2 + 84);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    int v3 = 1;
    *(_DWORD *)(result + 84) = 1;
    *(void *)(result + 8) = v4;
    int v2 = *(_DWORD *)(a2 + 84);
    if ((v2 & 0x20000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x20000) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 80);
    v3 |= 0x20000u;
    *(_DWORD *)(result + 84) = v3;
    *(unsigned char *)(result + 80) = v5;
    int v2 = *(_DWORD *)(a2 + 84);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(_DWORD *)(result + 84) = v3;
    *(_DWORD *)(result + 20) = v6;
    int v2 = *(_DWORD *)(a2 + 84);
    if ((v2 & 0x2000) == 0)
    {
LABEL_8:
      if ((v2 & 0x1000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 0x2000) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 64);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 64) = v7;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x1000) == 0)
  {
LABEL_9:
    if ((v2 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v8 = *(_DWORD *)(a2 + 60);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 60) = v8;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x200) == 0)
  {
LABEL_10:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  int v9 = *(_DWORD *)(a2 + 48);
  v3 |= 0x200u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 48) = v9;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x10000) == 0)
  {
LABEL_11:
    if ((v2 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v10 = *(_DWORD *)(a2 + 76);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 76) = v10;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x400) == 0)
  {
LABEL_12:
    if ((v2 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v11 = *(_DWORD *)(a2 + 52);
  v3 |= 0x400u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 52) = v11;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x800) == 0)
  {
LABEL_13:
    if ((v2 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v12 = *(_DWORD *)(a2 + 56);
  v3 |= 0x800u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 56) = v12;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x40) == 0)
  {
LABEL_14:
    if ((v2 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v13 = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 36) = v13;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x80) == 0)
  {
LABEL_15:
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v14 = *(_DWORD *)(a2 + 40);
  v3 |= 0x80u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 40) = v14;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 8) == 0)
  {
LABEL_16:
    if ((v2 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v15 = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 24) = v15;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x10) == 0)
  {
LABEL_17:
    if ((v2 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v16 = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 28) = v16;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x20) == 0)
  {
LABEL_18:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v17 = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 32) = v17;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x4000) == 0)
  {
LABEL_19:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v18 = *(_DWORD *)(a2 + 68);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 68) = v18;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x8000) == 0)
  {
LABEL_20:
    if ((v2 & 0x100) == 0) {
      goto LABEL_21;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v19 = *(_DWORD *)(a2 + 72);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 72) = v19;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x100) == 0)
  {
LABEL_21:
    if ((v2 & 2) == 0) {
      goto LABEL_22;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v20 = *(_DWORD *)(a2 + 44);
  v3 |= 0x100u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 44) = v20;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 2) == 0)
  {
LABEL_22:
    if ((v2 & 0x40000) == 0) {
      return result;
    }
LABEL_40:
    char v22 = *(unsigned char *)(a2 + 81);
    *(_DWORD *)(result + 84) = v3 | 0x40000;
    *(unsigned char *)(result + 81) = v22;
    return result;
  }
LABEL_39:
  int v21 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 16) = v21;
  if ((*(_DWORD *)(a2 + 84) & 0x40000) != 0) {
    goto LABEL_40;
  }
  return result;
}

uint64_t sub_10174EF40(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "currentEventTag", *(_DWORD *)(a1 + 16));
    int v5 = *(_DWORD *)(a1 + 84);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "currentState", *(_DWORD *)(a1 + 20));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "filteredGravityX", *(float *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "filteredGravityY", *(float *)(a1 + 28));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "filteredGravityZ", *(float *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "gravityAngle", *(float *)(a1 + 36));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "gravityShift", *(float *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "isMovingFiltered", *(float *)(a1 + 44));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x200) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "lux", *(float *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "luxBaseline", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x800) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "luxShift", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "motionType", *(_DWORD *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x2000) == 0)
  {
LABEL_14:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "orientation", *(_DWORD *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x4000) == 0)
  {
LABEL_15:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "pocketProbEnter", *(float *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x8000) == 0)
  {
LABEL_16:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "pocketProbExit", *(float *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x10000) == 0)
  {
LABEL_17:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "pocketProbability", *(float *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x20000) == 0)
  {
LABEL_18:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "shouldSuppress", *(unsigned char *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x40000) == 0)
  {
LABEL_19:
    if ((v5 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_41:
  PB::TextFormatter::format(this, "sufficientMotion", *(unsigned char *)(a1 + 81));
  if (*(_DWORD *)(a1 + 84)) {
LABEL_20:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
LABEL_21:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10174F1E4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 84) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v55 = 0;
                unsigned int v56 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_144;
                  }
                  unint64_t v57 = v20++;
                  char v58 = *(unsigned char *)(v21 + v57);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  BOOL v14 = v56++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_143;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_143:
                unint64_t v2 = v57 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_144;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_144:
              *(void *)(a1 + 8) = v24;
              goto LABEL_165;
            case 2u:
              *(_DWORD *)(a1 + 84) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 80) = v28;
              goto LABEL_165;
            case 3u:
              *(_DWORD *)(a1 + 84) |= 4u;
              unint64_t v29 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v30 = *(void *)this;
              if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v33 = 0;
                if (v2 <= v29) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v29)
                  {
                    LODWORD(v33) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_149;
                  }
                  unint64_t v61 = v29++;
                  char v62 = *(unsigned char *)(v30 + v61);
                  *((void *)this + 1) = v29;
                  v33 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v33) = 0;
LABEL_148:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_149;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v33) = 0;
                }
                goto LABEL_148;
              }
              char v31 = 0;
              unsigned int v32 = 0;
              uint64_t v33 = 0;
              do
              {
                unint64_t v2 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v34 = *(unsigned char *)(v30 + v29);
                v33 |= (unint64_t)(v34 & 0x7F) << v31;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_149;
                }
                v31 += 7;
                unint64_t v29 = v2;
                BOOL v14 = v32++ > 8;
              }
              while (!v14);
              LODWORD(v33) = 0;
LABEL_149:
              *(_DWORD *)(a1 + 20) = v33;
              goto LABEL_165;
            case 4u:
              *(_DWORD *)(a1 + 84) |= 0x2000u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_154;
                  }
                  unint64_t v65 = v35++;
                  char v66 = *(unsigned char *)(v36 + v65);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_153:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_154;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_153;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_154;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_154:
              *(_DWORD *)(a1 + 64) = v39;
              goto LABEL_165;
            case 5u:
              *(_DWORD *)(a1 + 84) |= 0x1000u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    LODWORD(v45) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_159;
                  }
                  unint64_t v69 = v41++;
                  char v70 = *(unsigned char *)(v42 + v69);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v45) = 0;
LABEL_158:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_159;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v45) = 0;
                }
                goto LABEL_158;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_159;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              LODWORD(v45) = 0;
LABEL_159:
              *(_DWORD *)(a1 + 60) = v45;
              goto LABEL_165;
            case 6u:
              *(_DWORD *)(a1 + 84) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_89;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_139;
            case 7u:
              *(_DWORD *)(a1 + 84) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_89;
              }
              *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_139;
            case 8u:
              *(_DWORD *)(a1 + 84) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_89;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_139;
            case 9u:
              *(_DWORD *)(a1 + 84) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_89;
              }
              *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_139;
            case 0xAu:
              *(_DWORD *)(a1 + 84) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_89;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_139;
            case 0xBu:
              *(_DWORD *)(a1 + 84) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_89;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_139;
            case 0xCu:
              *(_DWORD *)(a1 + 84) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_89;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_139;
            case 0xDu:
              *(_DWORD *)(a1 + 84) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_89;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_139;
            case 0xEu:
              *(_DWORD *)(a1 + 84) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_89;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_139;
            case 0xFu:
              *(_DWORD *)(a1 + 84) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_89;
              }
              *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_139;
            case 0x10u:
              *(_DWORD *)(a1 + 84) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_89;
              }
              *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_139;
            case 0x11u:
              *(_DWORD *)(a1 + 84) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
LABEL_139:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_89:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_165;
            case 0x12u:
              *(_DWORD *)(a1 + 84) |= 2u;
              unint64_t v47 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v48 = *(void *)this;
              if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
              {
                char v71 = 0;
                unsigned int v72 = 0;
                uint64_t v51 = 0;
                if (v2 <= v47) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v47)
                  {
                    LODWORD(v51) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_164;
                  }
                  unint64_t v73 = v47++;
                  char v74 = *(unsigned char *)(v48 + v73);
                  *((void *)this + 1) = v47;
                  v51 |= (unint64_t)(v74 & 0x7F) << v71;
                  if ((v74 & 0x80) == 0) {
                    break;
                  }
                  v71 += 7;
                  BOOL v14 = v72++ > 8;
                  if (v14)
                  {
                    LODWORD(v51) = 0;
LABEL_163:
                    unint64_t v2 = v73 + 1;
                    goto LABEL_164;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v51) = 0;
                }
                goto LABEL_163;
              }
              char v49 = 0;
              unsigned int v50 = 0;
              uint64_t v51 = 0;
              do
              {
                unint64_t v2 = v47 + 1;
                *((void *)this + 1) = v47 + 1;
                char v52 = *(unsigned char *)(v48 + v47);
                v51 |= (unint64_t)(v52 & 0x7F) << v49;
                if ((v52 & 0x80) == 0) {
                  goto LABEL_164;
                }
                v49 += 7;
                unint64_t v47 = v2;
                BOOL v14 = v50++ > 8;
              }
              while (!v14);
              LODWORD(v51) = 0;
LABEL_164:
              *(_DWORD *)(a1 + 16) = v51;
LABEL_165:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0x13u:
              *(_DWORD *)(a1 + 84) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v54 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v53 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v54 = v53 != 0;
              }
              *(unsigned char *)(a1 + 81) = v54;
              goto LABEL_165;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_165;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10174FB7C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 84);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    int v4 = *(_DWORD *)(v3 + 84);
    if ((v4 & 0x20000) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 80), 2u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 20), 3u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x2000) == 0)
  {
LABEL_5:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 64), 4u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x1000) == 0)
  {
LABEL_6:
    if ((v4 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 60), 5u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x200) == 0)
  {
LABEL_7:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 6u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x10000) == 0)
  {
LABEL_8:
    if ((v4 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 7u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x400) == 0)
  {
LABEL_9:
    if ((v4 & 0x800) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 8u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x800) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 9u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x40) == 0)
  {
LABEL_11:
    if ((v4 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 0xAu);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x80) == 0)
  {
LABEL_12:
    if ((v4 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 0xBu);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 0xCu);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x10) == 0)
  {
LABEL_14:
    if ((v4 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 0xDu);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x20) == 0)
  {
LABEL_15:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 0xEu);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x4000) == 0)
  {
LABEL_16:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68), 0xFu);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x8000) == 0)
  {
LABEL_17:
    if ((v4 & 0x100) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 72), 0x10u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x100) == 0)
  {
LABEL_18:
    if ((v4 & 2) == 0) {
      goto LABEL_19;
    }
LABEL_38:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 16), 0x12u);
    if ((*(_DWORD *)(v3 + 84) & 0x40000) == 0) {
      return result;
    }
    goto LABEL_39;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 0x11u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 2) != 0) {
    goto LABEL_38;
  }
LABEL_19:
  if ((v4 & 0x40000) == 0) {
    return result;
  }
LABEL_39:
  char v5 = *(unsigned char *)(v3 + 81);

  return PB::Writer::write(this, v5, 0x13u);
}

uint64_t sub_10174FDC8(uint64_t result)
{
  *(void *)uint64_t result = &off_1023388A0;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 76) = 0;
  return result;
}

void sub_10174FDF0(PB::Base *this)
{
  *(void *)this = &off_1023388A0;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_10174FE54(PB::Base *a1)
{
  sub_10174FDF0(a1);

  operator delete();
}

uint64_t sub_10174FE8C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023388A0;
  *(void *)(a1 + 8) = 0;
  int v4 = (char *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 76) = 0;
  __int16 v5 = *(_WORD *)(a2 + 76);
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    __int16 v6 = 1;
    *(_WORD *)(a1 + 76) = 1;
    *(void *)(a1 + 32) = v7;
    __int16 v5 = *(_WORD *)(a2 + 76);
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v6 = 0;
  if ((v5 & 2) != 0)
  {
LABEL_5:
    uint64_t v8 = *(void *)(a2 + 40);
    v6 |= 2u;
    *(_WORD *)(a1 + 76) = v6;
    *(void *)(a1 + 40) = v8;
    __int16 v5 = *(_WORD *)(a2 + 76);
  }
LABEL_6:
  if ((v5 & 4) != 0)
  {
    int v13 = *(_DWORD *)(a2 + 48);
    v6 |= 4u;
    *(_WORD *)(a1 + 76) = v6;
    *(_DWORD *)(a1 + 48) = v13;
    __int16 v5 = *(_WORD *)(a2 + 76);
    if ((v5 & 0x10) == 0)
    {
LABEL_8:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v14 = *(_DWORD *)(a2 + 56);
  v6 |= 0x10u;
  *(_WORD *)(a1 + 76) = v6;
  *(_DWORD *)(a1 + 56) = v14;
  if ((*(_WORD *)(a2 + 76) & 8) != 0)
  {
LABEL_9:
    int v9 = *(_DWORD *)(a2 + 52);
    *(_WORD *)(a1 + 76) = v6 | 8;
    *(_DWORD *)(a1 + 52) = v9;
  }
LABEL_10:
  if (a1 != a2) {
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  __int16 v10 = *(_WORD *)(a2 + 76);
  if ((v10 & 0x40) != 0)
  {
    int v15 = *(_DWORD *)(a2 + 64);
    *(_WORD *)(a1 + 76) |= 0x40u;
    *(_DWORD *)(a1 + 64) = v15;
    __int16 v10 = *(_WORD *)(a2 + 76);
    if ((v10 & 0x80) == 0)
    {
LABEL_14:
      if ((v10 & 0x100) == 0) {
        goto LABEL_15;
      }
LABEL_23:
      int v17 = *(_DWORD *)(a2 + 72);
      *(_WORD *)(a1 + 76) |= 0x100u;
      *(_DWORD *)(a1 + 72) = v17;
      if ((*(_WORD *)(a2 + 76) & 0x20) == 0) {
        return a1;
      }
      goto LABEL_16;
    }
  }
  else if ((v10 & 0x80) == 0)
  {
    goto LABEL_14;
  }
  int v16 = *(_DWORD *)(a2 + 68);
  *(_WORD *)(a1 + 76) |= 0x80u;
  *(_DWORD *)(a1 + 68) = v16;
  __int16 v10 = *(_WORD *)(a2 + 76);
  if ((v10 & 0x100) != 0) {
    goto LABEL_23;
  }
LABEL_15:
  if ((v10 & 0x20) != 0)
  {
LABEL_16:
    int v11 = *(_DWORD *)(a2 + 60);
    *(_WORD *)(a1 + 76) |= 0x20u;
    *(_DWORD *)(a1 + 60) = v11;
  }
  return a1;
}

uint64_t sub_10175000C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "compassBias", *(float *)(a1 + 48));
    __int16 v5 = *(_WORD *)(a1 + 76);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "estimatedBiasUncertainty", *(float *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 76);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_19:
  PB::TextFormatter::format(this, "estimatedHeading", *(float *)(a1 + 56));
  if ((*(_WORD *)(a1 + 76) & 0x20) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "globalReferenceFrame", *(_DWORD *)(a1 + 60));
LABEL_6:
  __int16 v6 = *(float **)(a1 + 8);
  uint64_t v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "lslGlobalToDeviceFrameRotationMatrix", v8);
  }
  __int16 v9 = *(_WORD *)(a1 + 76);
  if ((v9 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "lslHeadingAccuracy", *(float *)(a1 + 64));
    __int16 v9 = *(_WORD *)(a1 + 76);
    if ((v9 & 0x80) == 0)
    {
LABEL_10:
      if ((v9 & 1) == 0) {
        goto LABEL_11;
      }
      goto LABEL_23;
    }
  }
  else if ((v9 & 0x80) == 0)
  {
    goto LABEL_10;
  }
  PB::TextFormatter::format(this, "lslHeadingConfidence", *(float *)(a1 + 68));
  __int16 v9 = *(_WORD *)(a1 + 76);
  if ((v9 & 1) == 0)
  {
LABEL_11:
    if ((v9 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "machContinuousTimestamp", *(double *)(a1 + 32));
  __int16 v9 = *(_WORD *)(a1 + 76);
  if ((v9 & 0x100) == 0)
  {
LABEL_12:
    if ((v9 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_24:
  PB::TextFormatter::format(this, "roadID", *(_DWORD *)(a1 + 72));
  if ((*(_WORD *)(a1 + 76) & 2) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 40));
LABEL_14:

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1017501AC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        BOOL v16 = v12++ > 8;
        if (v16) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v22 = v13 & 7;
      if (v22 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          *(_WORD *)(a1 + 76) |= 1u;
          unint64_t v23 = *((void *)this + 1);
          if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v23);
          goto LABEL_31;
        case 2u:
          *(_WORD *)(a1 + 76) |= 2u;
          unint64_t v24 = *((void *)this + 1);
          if (v24 > 0xFFFFFFFFFFFFFFF7 || v24 + 8 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v24);
LABEL_31:
          uint64_t v25 = *((void *)this + 1) + 8;
          goto LABEL_130;
        case 3u:
          *(_WORD *)(a1 + 76) |= 4u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFFBLL || v26 + 4 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v26);
          goto LABEL_129;
        case 4u:
          *(_WORD *)(a1 + 76) |= 0x10u;
          unint64_t v27 = *((void *)this + 1);
          if (v27 > 0xFFFFFFFFFFFFFFFBLL || v27 + 4 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v27);
          goto LABEL_129;
        case 5u:
          *(_WORD *)(a1 + 76) |= 8u;
          unint64_t v28 = *((void *)this + 1);
          if (v28 > 0xFFFFFFFFFFFFFFFBLL || v28 + 4 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v28);
          goto LABEL_129;
        case 6u:
          if (v22 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v29 = *((void *)this + 1);
            unint64_t v30 = *((void *)this + 2);
            while (v29 < v30 && !*((unsigned char *)this + 24))
            {
              unsigned int v32 = *(char **)(a1 + 16);
              unint64_t v31 = *(void *)(a1 + 24);
              if ((unint64_t)v32 >= v31)
              {
                char v34 = (char *)*v8;
                uint64_t v35 = (v32 - (unsigned char *)*v8) >> 2;
                unint64_t v36 = v35 + 1;
                if ((unint64_t)(v35 + 1) >> 62) {
                  goto LABEL_141;
                }
                uint64_t v37 = v31 - (void)v34;
                if (v37 >> 1 > v36) {
                  unint64_t v36 = v37 >> 1;
                }
                if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v38 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v38 = v36;
                }
                if (v38)
                {
                  uint64_t v39 = (char *)sub_10017EA34(v9, v38);
                  char v34 = *(char **)(a1 + 8);
                  unsigned int v32 = *(char **)(a1 + 16);
                }
                else
                {
                  uint64_t v39 = 0;
                }
                char v40 = &v39[4 * v35];
                *(_DWORD *)char v40 = 0;
                uint64_t v33 = v40 + 4;
                while (v32 != v34)
                {
                  int v41 = *((_DWORD *)v32 - 1);
                  v32 -= 4;
                  *((_DWORD *)v40 - 1) = v41;
                  v40 -= 4;
                }
                *(void *)(a1 + 8) = v40;
                *(void *)(a1 + 16) = v33;
                *(void *)(a1 + 24) = &v39[4 * v38];
                if (v34) {
                  operator delete(v34);
                }
              }
              else
              {
                *(_DWORD *)unsigned int v32 = 0;
                uint64_t v33 = v32 + 4;
              }
              *(void *)(a1 + 16) = v33;
              unint64_t v42 = *((void *)this + 1);
              if (v42 > 0xFFFFFFFFFFFFFFFBLL || v42 + 4 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v33 - 1) = *(_DWORD *)(*(void *)this + v42);
              unint64_t v30 = *((void *)this + 2);
              unint64_t v29 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v29;
            }
            PB::Reader::recallMark();
          }
          else
          {
            char v62 = *(char **)(a1 + 16);
            unint64_t v61 = *(void *)(a1 + 24);
            if ((unint64_t)v62 >= v61)
            {
              unsigned int v72 = (char *)*v8;
              uint64_t v73 = (v62 - (unsigned char *)*v8) >> 2;
              unint64_t v74 = v73 + 1;
              if ((unint64_t)(v73 + 1) >> 62) {
LABEL_141:
              }
                sub_1001D7FD4();
              uint64_t v75 = v61 - (void)v72;
              if (v75 >> 1 > v74) {
                unint64_t v74 = v75 >> 1;
              }
              if ((unint64_t)v75 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v76 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v76 = v74;
              }
              if (v76)
              {
                uint64_t v77 = (char *)sub_10017EA34(v9, v76);
                unsigned int v72 = *(char **)(a1 + 8);
                char v62 = *(char **)(a1 + 16);
              }
              else
              {
                uint64_t v77 = 0;
              }
              unint64_t v78 = &v77[4 * v73];
              *(_DWORD *)unint64_t v78 = 0;
              char v63 = v78 + 4;
              while (v62 != v72)
              {
                int v79 = *((_DWORD *)v62 - 1);
                v62 -= 4;
                *((_DWORD *)v78 - 1) = v79;
                v78 -= 4;
              }
              *(void *)(a1 + 8) = v78;
              *(void *)(a1 + 16) = v63;
              *(void *)(a1 + 24) = &v77[4 * v76];
              if (v72) {
                operator delete(v72);
              }
            }
            else
            {
              *(_DWORD *)char v62 = 0;
              char v63 = v62 + 4;
            }
            *(void *)(a1 + 16) = v63;
            unint64_t v80 = *((void *)this + 1);
            if (v80 <= 0xFFFFFFFFFFFFFFFBLL && v80 + 4 <= *((void *)this + 2))
            {
              *(v63 - 1) = *(_DWORD *)(*(void *)this + v80);
LABEL_129:
              uint64_t v25 = *((void *)this + 1) + 4;
LABEL_130:
              *((void *)this + 1) = v25;
            }
            else
            {
LABEL_127:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_131:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 7u:
          *(_WORD *)(a1 + 76) |= 0x40u;
          unint64_t v43 = *((void *)this + 1);
          if (v43 > 0xFFFFFFFFFFFFFFFBLL || v43 + 4 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v43);
          goto LABEL_129;
        case 8u:
          *(_WORD *)(a1 + 76) |= 0x80u;
          unint64_t v44 = *((void *)this + 1);
          if (v44 > 0xFFFFFFFFFFFFFFFBLL || v44 + 4 > *((void *)this + 2)) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 68) = *(_DWORD *)(*(void *)this + v44);
          goto LABEL_129;
        case 9u:
          *(_WORD *)(a1 + 76) |= 0x100u;
          unint64_t v45 = *((void *)this + 1);
          unint64_t v46 = *((void *)this + 2);
          uint64_t v47 = *(void *)this;
          if (v45 <= 0xFFFFFFFFFFFFFFF5 && v45 + 10 <= v46)
          {
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v50 = 0;
            do
            {
              unint64_t v51 = v45 + 1;
              *((void *)this + 1) = v45 + 1;
              char v52 = *(unsigned char *)(v47 + v45);
              v50 |= (unint64_t)(v52 & 0x7F) << v48;
              if ((v52 & 0x80) == 0) {
                goto LABEL_113;
              }
              v48 += 7;
              unint64_t v45 = v51;
              BOOL v16 = v49++ > 8;
            }
            while (!v16);
LABEL_93:
            LODWORD(v50) = 0;
            goto LABEL_113;
          }
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v50 = 0;
          if (v46 <= v45) {
            unint64_t v46 = *((void *)this + 1);
          }
          while (2)
          {
            if (v46 == v45)
            {
              LODWORD(v50) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v66 = v45 + 1;
              char v67 = *(unsigned char *)(v47 + v45);
              *((void *)this + 1) = v66;
              v50 |= (unint64_t)(v67 & 0x7F) << v64;
              if (v67 < 0)
              {
                v64 += 7;
                unint64_t v45 = v66;
                BOOL v16 = v65++ > 8;
                if (v16) {
                  goto LABEL_93;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v50) = 0;
              }
            }
            break;
          }
LABEL_113:
          *(_DWORD *)(a1 + 72) = v50;
          goto LABEL_131;
        case 0xAu:
          *(_WORD *)(a1 + 76) |= 0x20u;
          unint64_t v53 = *((void *)this + 1);
          unint64_t v54 = *((void *)this + 2);
          uint64_t v55 = *(void *)this;
          if (v53 <= 0xFFFFFFFFFFFFFFF5 && v53 + 10 <= v54)
          {
            char v56 = 0;
            unsigned int v57 = 0;
            uint64_t v58 = 0;
            do
            {
              unint64_t v59 = v53 + 1;
              *((void *)this + 1) = v53 + 1;
              char v60 = *(unsigned char *)(v55 + v53);
              v58 |= (unint64_t)(v60 & 0x7F) << v56;
              if ((v60 & 0x80) == 0) {
                goto LABEL_116;
              }
              v56 += 7;
              unint64_t v53 = v59;
              BOOL v16 = v57++ > 8;
            }
            while (!v16);
LABEL_100:
            LODWORD(v58) = 0;
            goto LABEL_116;
          }
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v58 = 0;
          if (v54 <= v53) {
            unint64_t v54 = *((void *)this + 1);
          }
          while (2)
          {
            if (v54 == v53)
            {
              LODWORD(v58) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v70 = v53 + 1;
              char v71 = *(unsigned char *)(v55 + v53);
              *((void *)this + 1) = v70;
              v58 |= (unint64_t)(v71 & 0x7F) << v68;
              if (v71 < 0)
              {
                v68 += 7;
                unint64_t v53 = v70;
                BOOL v16 = v69++ > 8;
                if (v16) {
                  goto LABEL_100;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v58) = 0;
              }
            }
            break;
          }
LABEL_116:
          *(_DWORD *)(a1 + 60) = v58;
          goto LABEL_131;
        default:
          if ((PB::Reader::skip(this, v13 >> 3, v22, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_131;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017508C4(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 76);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 32), 1u);
    __int16 v4 = *(_WORD *)(v3 + 76);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 2u);
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
LABEL_18:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 4u);
    if ((*(_WORD *)(v3 + 76) & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 3u);
  __int16 v4 = *(_WORD *)(v3 + 76);
  if ((v4 & 0x10) != 0) {
    goto LABEL_18;
  }
LABEL_5:
  if ((v4 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 5u);
LABEL_7:
  __int16 v5 = *(float **)(v3 + 8);
  __int16 v6 = *(float **)(v3 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    uint64_t result = PB::Writer::write(this, v7, 6u);
  }
  __int16 v8 = *(_WORD *)(v3 + 76);
  if ((v8 & 0x40) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 7u);
    __int16 v8 = *(_WORD *)(v3 + 76);
    if ((v8 & 0x80) == 0)
    {
LABEL_12:
      if ((v8 & 0x100) == 0) {
        goto LABEL_13;
      }
LABEL_22:
      uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 72), 9u);
      if ((*(_WORD *)(v3 + 76) & 0x20) == 0) {
        return result;
      }
      goto LABEL_23;
    }
  }
  else if ((v8 & 0x80) == 0)
  {
    goto LABEL_12;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 68), 8u);
  __int16 v8 = *(_WORD *)(v3 + 76);
  if ((v8 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_13:
  if ((v8 & 0x20) == 0) {
    return result;
  }
LABEL_23:
  unsigned int v9 = *(_DWORD *)(v3 + 60);

  return PB::Writer::writeVarInt(this, v9, 0xAu);
}

double sub_101750A24(uint64_t a1)
{
  *(void *)a1 = &off_1023388D8;
  *(_DWORD *)(a1 + 100) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_101750A58(PB::Base *this)
{
  *(void *)this = &off_1023388D8;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_101750ACC(PB::Base *a1)
{
  sub_101750A58(a1);

  operator delete();
}

uint64_t sub_101750B04(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023388D8;
  *(_OWORD *)(a1 + 8) = 0u;
  __int16 v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 100) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  char v5 = *(unsigned char *)(a2 + 100);
  if ((v5 & 0x10) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 88);
    char v6 = 16;
    *(unsigned char *)(a1 + 100) = 16;
    *(void *)(a1 + 88) = v7;
    char v5 = *(unsigned char *)(a2 + 100);
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v6 = 0;
  if ((*(unsigned char *)(a2 + 100) & 4) != 0)
  {
LABEL_5:
    uint64_t v8 = *(void *)(a2 + 72);
    v6 |= 4u;
    *(unsigned char *)(a1 + 100) = v6;
    *(void *)(a1 + 72) = v8;
    char v5 = *(unsigned char *)(a2 + 100);
  }
LABEL_6:
  if ((v5 & 8) != 0)
  {
    uint64_t v12 = *(void *)(a2 + 80);
    v6 |= 8u;
    *(unsigned char *)(a1 + 100) = v6;
    *(void *)(a1 + 80) = v12;
    char v5 = *(unsigned char *)(a2 + 100);
    if ((v5 & 1) == 0)
    {
LABEL_8:
      if ((v5 & 2) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v13 = *(void *)(a2 + 56);
  v6 |= 1u;
  *(unsigned char *)(a1 + 100) = v6;
  *(void *)(a1 + 56) = v13;
  if ((*(unsigned char *)(a2 + 100) & 2) != 0)
  {
LABEL_9:
    uint64_t v9 = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 100) = v6 | 2;
    *(void *)(a1 + 64) = v9;
  }
LABEL_10:
  if (a1 != a2)
  {
    sub_1002DD194((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  if ((*(unsigned char *)(a2 + 100) & 0x20) != 0)
  {
    int v10 = *(_DWORD *)(a2 + 96);
    *(unsigned char *)(a1 + 100) |= 0x20u;
    *(_DWORD *)(a1 + 96) = v10;
  }
  return a1;
}

uint64_t sub_101750C4C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 100);
  if (v5)
  {
    PB::TextFormatter::format(this, "altitudeOfLocalizedPoseInEcefCoordinate", *(double *)(a1 + 56));
    char v5 = *(unsigned char *)(a1 + 100);
  }
  if ((v5 & 0x20) != 0) {
    PB::TextFormatter::format(this, "confidence", *(float *)(a1 + 96));
  }
  char v6 = *(float **)(a1 + 8);
  uint64_t v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "covariance", v8);
  }
  char v9 = *(unsigned char *)(a1 + 100);
  if ((v9 & 2) != 0)
  {
    PB::TextFormatter::format(this, "horizontalAccuracyOfLocalizedPoseInEcefCoordinate", *(double *)(a1 + 64));
    char v9 = *(unsigned char *)(a1 + 100);
    if ((v9 & 4) == 0)
    {
LABEL_9:
      if ((v9 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_19;
    }
  }
  else if ((*(unsigned char *)(a1 + 100) & 4) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(this, "latitudeOfLocalizedPoseInEcefCoordinate", *(double *)(a1 + 72));
  char v9 = *(unsigned char *)(a1 + 100);
  if ((v9 & 8) == 0)
  {
LABEL_10:
    if ((v9 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_19:
  PB::TextFormatter::format(this, "longitudeOfLocalizedPoseInEcefCoordinate", *(double *)(a1 + 80));
  if ((*(unsigned char *)(a1 + 100) & 0x10) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 88));
LABEL_12:
  int v10 = *(double **)(a1 + 32);
  char v11 = *(double **)(a1 + 40);
  while (v10 != v11)
  {
    double v12 = *v10++;
    PB::TextFormatter::format(this, "transformMatrixFromCameraToEcefCoordinate", v12);
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_101750DB0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    int v10 = (void **)(a1 + 32);
    uint64_t v11 = a1 + 48;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 100) |= 0x10u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v25);
          goto LABEL_122;
        case 2u:
          *(unsigned char *)(a1 + 100) |= 4u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v26);
          goto LABEL_122;
        case 3u:
          *(unsigned char *)(a1 + 100) |= 8u;
          unint64_t v27 = *((void *)this + 1);
          if (v27 > 0xFFFFFFFFFFFFFFF7 || v27 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v27);
          goto LABEL_122;
        case 4u:
          *(unsigned char *)(a1 + 100) |= 1u;
          unint64_t v28 = *((void *)this + 1);
          if (v28 > 0xFFFFFFFFFFFFFFF7 || v28 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v28);
          goto LABEL_122;
        case 5u:
          *(unsigned char *)(a1 + 100) |= 2u;
          unint64_t v29 = *((void *)this + 1);
          if (v29 > 0xFFFFFFFFFFFFFFF7 || v29 + 8 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v29);
          goto LABEL_122;
        case 6u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v30 = *((void *)this + 1);
            unint64_t v31 = *((void *)this + 2);
            while (v30 < v31 && !*((unsigned char *)this + 24))
            {
              uint64_t v33 = *(char **)(a1 + 40);
              unint64_t v32 = *(void *)(a1 + 48);
              if ((unint64_t)v33 >= v32)
              {
                uint64_t v35 = (char *)*v10;
                uint64_t v36 = (v33 - (unsigned char *)*v10) >> 3;
                unint64_t v37 = v36 + 1;
                if ((unint64_t)(v36 + 1) >> 61) {
                  goto LABEL_143;
                }
                uint64_t v38 = v32 - (void)v35;
                if (v38 >> 2 > v37) {
                  unint64_t v37 = v38 >> 2;
                }
                if ((unint64_t)v38 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v39 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v39 = v37;
                }
                if (v39)
                {
                  char v40 = (char *)sub_1000DA54C(v11, v39);
                  uint64_t v35 = *(char **)(a1 + 32);
                  uint64_t v33 = *(char **)(a1 + 40);
                }
                else
                {
                  char v40 = 0;
                }
                int v41 = &v40[8 * v36];
                *(void *)int v41 = 0;
                char v34 = v41 + 8;
                while (v33 != v35)
                {
                  uint64_t v42 = *((void *)v33 - 1);
                  v33 -= 8;
                  *((void *)v41 - 1) = v42;
                  v41 -= 8;
                }
                *(void *)(a1 + 32) = v41;
                *(void *)(a1 + 40) = v34;
                *(void *)(a1 + 48) = &v40[8 * v39];
                if (v35) {
                  operator delete(v35);
                }
              }
              else
              {
                *(void *)uint64_t v33 = 0;
                char v34 = v33 + 8;
              }
              *(void *)(a1 + 40) = v34;
              unint64_t v43 = *((void *)this + 1);
              if (v43 > 0xFFFFFFFFFFFFFFF7 || v43 + 8 > *((void *)this + 2)) {
                goto LABEL_95;
              }
              *(v34 - 1) = *(void *)(*(void *)this + v43);
              unint64_t v31 = *((void *)this + 2);
              unint64_t v30 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v30;
            }
            goto LABEL_96;
          }
          char v60 = *(char **)(a1 + 40);
          unint64_t v59 = *(void *)(a1 + 48);
          if ((unint64_t)v60 >= v59)
          {
            unsigned int v65 = (char *)*v10;
            uint64_t v66 = (v60 - (unsigned char *)*v10) >> 3;
            unint64_t v67 = v66 + 1;
            if ((unint64_t)(v66 + 1) >> 61) {
LABEL_143:
            }
              sub_1001D7FD4();
            uint64_t v68 = v59 - (void)v65;
            if (v68 >> 2 > v67) {
              unint64_t v67 = v68 >> 2;
            }
            if ((unint64_t)v68 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v69 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v69 = v67;
            }
            if (v69)
            {
              unint64_t v70 = (char *)sub_1000DA54C(v11, v69);
              unsigned int v65 = *(char **)(a1 + 32);
              char v60 = *(char **)(a1 + 40);
            }
            else
            {
              unint64_t v70 = 0;
            }
            uint64_t v77 = &v70[8 * v66];
            *(void *)uint64_t v77 = 0;
            unint64_t v61 = v77 + 8;
            while (v60 != v65)
            {
              uint64_t v78 = *((void *)v60 - 1);
              v60 -= 8;
              *((void *)v77 - 1) = v78;
              v77 -= 8;
            }
            *(void *)(a1 + 32) = v77;
            *(void *)(a1 + 40) = v61;
            *(void *)(a1 + 48) = &v70[8 * v69];
            if (v65) {
              operator delete(v65);
            }
          }
          else
          {
            *(void *)char v60 = 0;
            unint64_t v61 = v60 + 8;
          }
          *(void *)(a1 + 40) = v61;
          unint64_t v79 = *((void *)this + 1);
          if (v79 <= 0xFFFFFFFFFFFFFFF7 && v79 + 8 <= *((void *)this + 2))
          {
            *(v61 - 1) = *(void *)(*(void *)this + v79);
LABEL_122:
            uint64_t v80 = *((void *)this + 1) + 8;
            goto LABEL_134;
          }
          goto LABEL_131;
        case 7u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v44 = *((void *)this + 1);
            unint64_t v45 = *((void *)this + 2);
            while (v44 < v45 && !*((unsigned char *)this + 24))
            {
              uint64_t v47 = *(char **)(a1 + 16);
              unint64_t v46 = *(void *)(a1 + 24);
              if ((unint64_t)v47 >= v46)
              {
                unsigned int v49 = (char *)*v8;
                uint64_t v50 = (v47 - (unsigned char *)*v8) >> 2;
                unint64_t v51 = v50 + 1;
                if ((unint64_t)(v50 + 1) >> 62) {
                  goto LABEL_144;
                }
                uint64_t v52 = v46 - (void)v49;
                if (v52 >> 1 > v51) {
                  unint64_t v51 = v52 >> 1;
                }
                if ((unint64_t)v52 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v53 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v53 = v51;
                }
                if (v53)
                {
                  unint64_t v54 = (char *)sub_10017EA34(v9, v53);
                  unsigned int v49 = *(char **)(a1 + 8);
                  uint64_t v47 = *(char **)(a1 + 16);
                }
                else
                {
                  unint64_t v54 = 0;
                }
                uint64_t v55 = &v54[4 * v50];
                *(_DWORD *)uint64_t v55 = 0;
                char v48 = v55 + 4;
                while (v47 != v49)
                {
                  int v56 = *((_DWORD *)v47 - 1);
                  v47 -= 4;
                  *((_DWORD *)v55 - 1) = v56;
                  v55 -= 4;
                }
                *(void *)(a1 + 8) = v55;
                *(void *)(a1 + 16) = v48;
                *(void *)(a1 + 24) = &v54[4 * v53];
                if (v49) {
                  operator delete(v49);
                }
              }
              else
              {
                *(_DWORD *)uint64_t v47 = 0;
                char v48 = v47 + 4;
              }
              *(void *)(a1 + 16) = v48;
              unint64_t v57 = *((void *)this + 1);
              if (v57 > 0xFFFFFFFFFFFFFFFBLL || v57 + 4 > *((void *)this + 2))
              {
LABEL_95:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v48 - 1) = *(_DWORD *)(*(void *)this + v57);
              unint64_t v45 = *((void *)this + 2);
              unint64_t v44 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v44;
            }
LABEL_96:
            PB::Reader::recallMark();
          }
          else
          {
            char v63 = *(char **)(a1 + 16);
            unint64_t v62 = *(void *)(a1 + 24);
            if ((unint64_t)v63 >= v62)
            {
              char v71 = (char *)*v8;
              uint64_t v72 = (v63 - (unsigned char *)*v8) >> 2;
              unint64_t v73 = v72 + 1;
              if ((unint64_t)(v72 + 1) >> 62) {
LABEL_144:
              }
                sub_1001D7FD4();
              uint64_t v74 = v62 - (void)v71;
              if (v74 >> 1 > v73) {
                unint64_t v73 = v74 >> 1;
              }
              if ((unint64_t)v74 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v75 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v75 = v73;
              }
              if (v75)
              {
                unint64_t v76 = (char *)sub_10017EA34(v9, v75);
                char v71 = *(char **)(a1 + 8);
                char v63 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v76 = 0;
              }
              unint64_t v81 = &v76[4 * v72];
              *(_DWORD *)unint64_t v81 = 0;
              char v64 = v81 + 4;
              while (v63 != v71)
              {
                int v82 = *((_DWORD *)v63 - 1);
                v63 -= 4;
                *((_DWORD *)v81 - 1) = v82;
                v81 -= 4;
              }
              *(void *)(a1 + 8) = v81;
              *(void *)(a1 + 16) = v64;
              *(void *)(a1 + 24) = &v76[4 * v75];
              if (v71) {
                operator delete(v71);
              }
            }
            else
            {
              *(_DWORD *)char v63 = 0;
              char v64 = v63 + 4;
            }
            *(void *)(a1 + 16) = v64;
            unint64_t v83 = *((void *)this + 1);
            if (v83 <= 0xFFFFFFFFFFFFFFFBLL && v83 + 4 <= *((void *)this + 2))
            {
              *(v64 - 1) = *(_DWORD *)(*(void *)this + v83);
LABEL_133:
              uint64_t v80 = *((void *)this + 1) + 4;
LABEL_134:
              *((void *)this + 1) = v80;
            }
            else
            {
LABEL_131:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_135:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 8u:
          *(unsigned char *)(a1 + 100) |= 0x20u;
          unint64_t v58 = *((void *)this + 1);
          if (v58 > 0xFFFFFFFFFFFFFFFBLL || v58 + 4 > *((void *)this + 2)) {
            goto LABEL_131;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v58);
          goto LABEL_133;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v24, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_135;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017514B0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 100);
  if ((v4 & 0x10) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(result + 88), 1u);
    char v4 = *(unsigned char *)(v3 + 100);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((*(unsigned char *)(result + 100) & 4) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::write(this, *(double *)(v3 + 72), 2u);
  char v4 = *(unsigned char *)(v3 + 100);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_18:
    double result = PB::Writer::write(this, *(double *)(v3 + 56), 4u);
    if ((*(unsigned char *)(v3 + 100) & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_17:
  double result = PB::Writer::write(this, *(double *)(v3 + 80), 3u);
  char v4 = *(unsigned char *)(v3 + 100);
  if (v4) {
    goto LABEL_18;
  }
LABEL_5:
  if ((v4 & 2) != 0) {
LABEL_6:
  }
    double result = PB::Writer::write(this, *(double *)(v3 + 64), 5u);
LABEL_7:
  char v5 = *(double **)(v3 + 32);
  char v6 = *(double **)(v3 + 40);
  while (v5 != v6)
  {
    double v7 = *v5++;
    double result = PB::Writer::write(this, v7, 6u);
  }
  float v8 = *(float **)(v3 + 8);
  uint64_t v9 = *(float **)(v3 + 16);
  while (v8 != v9)
  {
    float v10 = *v8++;
    double result = PB::Writer::write(this, v10, 7u);
  }
  if ((*(unsigned char *)(v3 + 100) & 0x20) != 0)
  {
    float v11 = *(float *)(v3 + 96);
    return PB::Writer::write(this, v11, 8u);
  }
  return result;
}

uint64_t sub_1017515DC(uint64_t result)
{
  *(void *)double result = &off_102338910;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 60) = 0;
  return result;
}

void sub_101751604(PB::Base *this)
{
  *(void *)this = &off_102338910;
  unint64_t v2 = (void *)*((void *)this + 1);
  if (v2)
  {
    *((void *)this + 2) = v2;
    operator delete(v2);
  }

  PB::Base::~Base(this);
}

void sub_101751668(PB::Base *a1)
{
  sub_101751604(a1);

  operator delete();
}

uint64_t sub_1017516A0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338910;
  *(void *)(a1 + 8) = 0;
  char v4 = (char *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 60) = 0;
  char v5 = *(unsigned char *)(a2 + 60);
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    char v6 = 2;
    *(unsigned char *)(a1 + 60) = 2;
    *(void *)(a1 + 40) = v7;
    char v5 = *(unsigned char *)(a2 + 60);
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v6 = 0;
  if (*(unsigned char *)(a2 + 60))
  {
LABEL_5:
    uint64_t v8 = *(void *)(a2 + 32);
    v6 |= 1u;
    *(unsigned char *)(a1 + 60) = v6;
    *(void *)(a1 + 32) = v8;
    char v5 = *(unsigned char *)(a2 + 60);
  }
LABEL_6:
  if ((v5 & 0x10) == 0)
  {
    if ((v5 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v12 = *(_DWORD *)(a2 + 56);
  v6 |= 0x10u;
  *(unsigned char *)(a1 + 60) = v6;
  *(_DWORD *)(a1 + 56) = v12;
  if ((*(unsigned char *)(a2 + 60) & 8) != 0)
  {
LABEL_8:
    int v9 = *(_DWORD *)(a2 + 52);
    *(unsigned char *)(a1 + 60) = v6 | 8;
    *(_DWORD *)(a1 + 52) = v9;
  }
LABEL_9:
  if (a1 != a2) {
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  if ((*(unsigned char *)(a2 + 60) & 4) != 0)
  {
    int v10 = *(_DWORD *)(a2 + 48);
    *(unsigned char *)(a1 + 60) |= 4u;
    *(_DWORD *)(a1 + 48) = v10;
  }
  return a1;
}

uint64_t sub_1017517A0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 60);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "deltaHeading", *(float *)(a1 + 48));
    char v5 = *(unsigned char *)(a1 + 60);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(a1 + 60) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "gravityZ", *(float *)(a1 + 52));
  char v5 = *(unsigned char *)(a1 + 60);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_15:
  PB::TextFormatter::format(this, "lastStateTimestamp", *(double *)(a1 + 32));
  if ((*(unsigned char *)(a1 + 60) & 0x10) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "meanRotRate", *(float *)(a1 + 56));
LABEL_6:
  char v6 = *(float **)(a1 + 8);
  uint64_t v7 = *(float **)(a1 + 16);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(this, "quaternion", v8);
  }
  if ((*(unsigned char *)(a1 + 60) & 2) != 0) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 40));
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1017518BC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    float v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    while (1)
    {
      uint64_t v10 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v11 = 0;
      unsigned int v12 = 0;
      unint64_t v13 = 0;
      while (1)
      {
        unint64_t v14 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v15 = *(unsigned char *)(v10 + v2);
        v13 |= (unint64_t)(v15 & 0x7F) << v11;
        if ((v15 & 0x80) == 0) {
          break;
        }
        v11 += 7;
        unint64_t v2 = v14;
        if (v12++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v22 = v13 & 7;
      if (v22 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v13 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 60) |= 2u;
          unint64_t v23 = *((void *)this + 1);
          if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > *((void *)this + 2)) {
            goto LABEL_85;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v23);
          goto LABEL_31;
        case 2u:
          *(unsigned char *)(a1 + 60) |= 1u;
          unint64_t v24 = *((void *)this + 1);
          if (v24 > 0xFFFFFFFFFFFFFFF7 || v24 + 8 > *((void *)this + 2)) {
            goto LABEL_85;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v24);
LABEL_31:
          uint64_t v25 = *((void *)this + 1) + 8;
          goto LABEL_88;
        case 3u:
          *(unsigned char *)(a1 + 60) |= 0x10u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFFBLL || v26 + 4 > *((void *)this + 2)) {
            goto LABEL_85;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v26);
          goto LABEL_87;
        case 4u:
          *(unsigned char *)(a1 + 60) |= 8u;
          unint64_t v27 = *((void *)this + 1);
          if (v27 > 0xFFFFFFFFFFFFFFFBLL || v27 + 4 > *((void *)this + 2)) {
            goto LABEL_85;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v27);
          goto LABEL_87;
        case 5u:
          if (v22 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v28 = *((void *)this + 1);
            unint64_t v29 = *((void *)this + 2);
            while (v28 < v29 && !*((unsigned char *)this + 24))
            {
              unint64_t v31 = *(char **)(a1 + 16);
              unint64_t v30 = *(void *)(a1 + 24);
              if ((unint64_t)v31 >= v30)
              {
                uint64_t v33 = (char *)*v8;
                uint64_t v34 = (v31 - (unsigned char *)*v8) >> 2;
                unint64_t v35 = v34 + 1;
                if ((unint64_t)(v34 + 1) >> 62) {
                  goto LABEL_97;
                }
                uint64_t v36 = v30 - (void)v33;
                if (v36 >> 1 > v35) {
                  unint64_t v35 = v36 >> 1;
                }
                if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v37 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v37 = v35;
                }
                if (v37)
                {
                  uint64_t v38 = (char *)sub_10017EA34(v9, v37);
                  uint64_t v33 = *(char **)(a1 + 8);
                  unint64_t v31 = *(char **)(a1 + 16);
                }
                else
                {
                  uint64_t v38 = 0;
                }
                unint64_t v39 = &v38[4 * v34];
                *(_DWORD *)unint64_t v39 = 0;
                unint64_t v32 = v39 + 4;
                while (v31 != v33)
                {
                  int v40 = *((_DWORD *)v31 - 1);
                  v31 -= 4;
                  *((_DWORD *)v39 - 1) = v40;
                  v39 -= 4;
                }
                *(void *)(a1 + 8) = v39;
                *(void *)(a1 + 16) = v32;
                *(void *)(a1 + 24) = &v38[4 * v37];
                if (v33) {
                  operator delete(v33);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v31 = 0;
                unint64_t v32 = v31 + 4;
              }
              *(void *)(a1 + 16) = v32;
              unint64_t v41 = *((void *)this + 1);
              if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > *((void *)this + 2))
              {
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v32 - 1) = *(_DWORD *)(*(void *)this + v41);
              unint64_t v29 = *((void *)this + 2);
              unint64_t v28 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v28;
            }
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v44 = *(char **)(a1 + 16);
            unint64_t v43 = *(void *)(a1 + 24);
            if ((unint64_t)v44 >= v43)
            {
              unint64_t v46 = (char *)*v8;
              uint64_t v47 = (v44 - (unsigned char *)*v8) >> 2;
              unint64_t v48 = v47 + 1;
              if ((unint64_t)(v47 + 1) >> 62) {
LABEL_97:
              }
                sub_1001D7FD4();
              uint64_t v49 = v43 - (void)v46;
              if (v49 >> 1 > v48) {
                unint64_t v48 = v49 >> 1;
              }
              if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v50 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v50 = v48;
              }
              if (v50)
              {
                unint64_t v51 = (char *)sub_10017EA34(v9, v50);
                unint64_t v46 = *(char **)(a1 + 8);
                unint64_t v44 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v51 = 0;
              }
              uint64_t v52 = &v51[4 * v47];
              *(_DWORD *)uint64_t v52 = 0;
              unint64_t v45 = v52 + 4;
              while (v44 != v46)
              {
                int v53 = *((_DWORD *)v44 - 1);
                v44 -= 4;
                *((_DWORD *)v52 - 1) = v53;
                v52 -= 4;
              }
              *(void *)(a1 + 8) = v52;
              *(void *)(a1 + 16) = v45;
              *(void *)(a1 + 24) = &v51[4 * v50];
              if (v46) {
                operator delete(v46);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v44 = 0;
              unint64_t v45 = v44 + 4;
            }
            *(void *)(a1 + 16) = v45;
            unint64_t v54 = *((void *)this + 1);
            if (v54 <= 0xFFFFFFFFFFFFFFFBLL && v54 + 4 <= *((void *)this + 2))
            {
              *(v45 - 1) = *(_DWORD *)(*(void *)this + v54);
LABEL_87:
              uint64_t v25 = *((void *)this + 1) + 4;
LABEL_88:
              *((void *)this + 1) = v25;
            }
            else
            {
LABEL_85:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_89:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        case 6u:
          *(unsigned char *)(a1 + 60) |= 4u;
          unint64_t v42 = *((void *)this + 1);
          if (v42 > 0xFFFFFFFFFFFFFFFBLL || v42 + 4 > *((void *)this + 2)) {
            goto LABEL_85;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v42);
          goto LABEL_87;
        default:
          if ((PB::Reader::skip(this, v13 >> 3, v22, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_89;
      }
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v13 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v19 = v2 + 1;
      char v20 = *(unsigned char *)(v10 + v2);
      *((void *)this + 1) = v19;
      v13 |= (unint64_t)(v20 & 0x7F) << v17;
      if ((v20 & 0x80) == 0) {
        goto LABEL_21;
      }
      v17 += 7;
      unint64_t v2 = v19;
      if (v18++ >= 9)
      {
LABEL_20:
        unint64_t v13 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101751D8C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 60);
  if ((v4 & 2) != 0)
  {
    double result = PB::Writer::write(this, *(double *)(result + 40), 1u);
    char v4 = *(unsigned char *)(v3 + 60);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
LABEL_13:
      double result = PB::Writer::write(this, *(float *)(v3 + 56), 3u);
      if ((*(unsigned char *)(v3 + 60) & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  else if ((*(unsigned char *)(result + 60) & 1) == 0)
  {
    goto LABEL_3;
  }
  double result = PB::Writer::write(this, *(double *)(v3 + 32), 2u);
  char v4 = *(unsigned char *)(v3 + 60);
  if ((v4 & 0x10) != 0) {
    goto LABEL_13;
  }
LABEL_4:
  if ((v4 & 8) != 0) {
LABEL_5:
  }
    double result = PB::Writer::write(this, *(float *)(v3 + 52), 4u);
LABEL_6:
  char v5 = *(float **)(v3 + 8);
  char v6 = *(float **)(v3 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    double result = PB::Writer::write(this, v7, 5u);
  }
  if ((*(unsigned char *)(v3 + 60) & 4) != 0)
  {
    float v8 = *(float *)(v3 + 48);
    return PB::Writer::write(this, v8, 6u);
  }
  return result;
}

void *sub_101751E7C(void *result)
{
  *double result = &off_102338948;
  result[1] = 0;
  return result;
}

void sub_101751E9C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338948;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101751F1C(PB::Base *a1)
{
  sub_101751E9C(a1);

  operator delete();
}

void *sub_101751F54(void *result, uint64_t a2)
{
  *double result = &off_102338948;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_101751FFC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "correction");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101752078(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101752274(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

double sub_101752290(uint64_t a1)
{
  *(void *)a1 = &off_102338980;
  *(_DWORD *)(a1 + 96) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)(a1 + 72) = 0;
  return result;
}

void sub_1017522CC(PB::Base *this)
{
  *(void *)this = &off_102338980;
  unint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  unint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }

  PB::Base::~Base(this);
}

void sub_101752350(PB::Base *a1)
{
  sub_1017522CC(a1);

  operator delete();
}

uint64_t sub_101752388(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  *(void *)a1 = &off_102338980;
  *(_DWORD *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  if (*(unsigned char *)(a2 + 96))
  {
    uint64_t v5 = *(void *)(a2 + 80);
    *(unsigned char *)(a1 + 96) = 1;
    *(void *)(a1 + 80) = v5;
  }
  if (a1 != a2)
  {
    sub_1002DD194(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_1002DD194((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
    sub_1002DD194((char *)(a1 + 56), *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 3);
  }
  char v6 = *(unsigned char *)(a2 + 96);
  if ((v6 & 4) != 0)
  {
    char v7 = *(unsigned char *)(a2 + 92);
    *(unsigned char *)(a1 + 96) |= 4u;
    *(unsigned char *)(a1 + 92) = v7;
    char v6 = *(unsigned char *)(a2 + 96);
  }
  if ((v6 & 2) != 0)
  {
    int v8 = *(_DWORD *)(a2 + 88);
    *(unsigned char *)(a1 + 96) |= 2u;
    *(_DWORD *)(a1 + 88) = v8;
  }
  return a1;
}

uint64_t sub_10175248C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(double **)(a1 + 8);
  char v6 = *(double **)(a1 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "attitude", v7);
  }
  char v8 = *(unsigned char *)(a1 + 96);
  if ((v8 & 4) != 0)
  {
    PB::TextFormatter::format(this, "isInitFinished", *(unsigned char *)(a1 + 92));
    char v8 = *(unsigned char *)(a1 + 96);
    if ((v8 & 1) == 0)
    {
LABEL_5:
      if ((v8 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((*(unsigned char *)(a1 + 96) & 1) == 0)
  {
    goto LABEL_5;
  }
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 80));
  if ((*(unsigned char *)(a1 + 96) & 2) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "trackingState", *(_DWORD *)(a1 + 88));
LABEL_7:
  unsigned int v9 = *(double **)(a1 + 32);
  unint64_t v10 = *(double **)(a1 + 40);
  while (v9 != v10)
  {
    double v11 = *v9++;
    PB::TextFormatter::format(this, "translation", v11);
  }
  char v12 = *(double **)(a1 + 56);
  unint64_t v13 = *(double **)(a1 + 64);
  while (v12 != v13)
  {
    double v14 = *v12++;
    PB::TextFormatter::format(this, "velocity", v14);
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_1017525C4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    char v8 = (void **)(a1 + 56);
    uint64_t v119 = a1 + 72;
    unsigned int v9 = (void **)(a1 + 32);
    uint64_t v10 = a1 + 48;
    double v11 = (void **)(a1 + 8);
    uint64_t v12 = a1 + 24;
    while (1)
    {
      uint64_t v13 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        unint64_t v17 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v18 = *(unsigned char *)(v13 + v2);
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          break;
        }
        v14 += 7;
        unint64_t v2 = v17;
        BOOL v19 = v15++ > 8;
        if (v19) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v16 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v16 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 96) |= 1u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_177;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v26);
          goto LABEL_179;
        case 2u:
          if (v25 != 2)
          {
            int v82 = *(char **)(a1 + 16);
            unint64_t v81 = *(void *)(a1 + 24);
            if ((unint64_t)v82 >= v81)
            {
              unint64_t v92 = (char *)*v11;
              uint64_t v93 = (v82 - (unsigned char *)*v11) >> 3;
              unint64_t v94 = v93 + 1;
              if ((unint64_t)(v93 + 1) >> 61) {
LABEL_190:
              }
                sub_1001D7FD4();
              uint64_t v95 = v81 - (void)v92;
              if (v95 >> 2 > v94) {
                unint64_t v94 = v95 >> 2;
              }
              if ((unint64_t)v95 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v96 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v96 = v94;
              }
              if (v96)
              {
                unsigned int v97 = (char *)sub_1000DA54C(v12, v96);
                unint64_t v92 = *(char **)(a1 + 8);
                int v82 = *(char **)(a1 + 16);
              }
              else
              {
                unsigned int v97 = 0;
              }
              unint64_t v110 = &v97[8 * v93];
              *(void *)unint64_t v110 = 0;
              unint64_t v83 = v110 + 8;
              while (v82 != v92)
              {
                uint64_t v111 = *((void *)v82 - 1);
                v82 -= 8;
                *((void *)v110 - 1) = v111;
                v110 -= 8;
              }
              *(void *)(a1 + 8) = v110;
              *(void *)(a1 + 16) = v83;
              *(void *)(a1 + 24) = &v97[8 * v96];
              if (v92) {
                operator delete(v92);
              }
            }
            else
            {
              *(void *)int v82 = 0;
              unint64_t v83 = v82 + 8;
            }
            *(void *)(a1 + 16) = v83;
            goto LABEL_175;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v27 = *((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          while (v27 < v28 && !*((unsigned char *)this + 24))
          {
            unint64_t v30 = *(char **)(a1 + 16);
            unint64_t v29 = *(void *)(a1 + 24);
            if ((unint64_t)v30 >= v29)
            {
              unint64_t v32 = (char *)*v11;
              uint64_t v33 = (v30 - (unsigned char *)*v11) >> 3;
              unint64_t v34 = v33 + 1;
              if ((unint64_t)(v33 + 1) >> 61) {
                goto LABEL_190;
              }
              uint64_t v35 = v29 - (void)v32;
              if (v35 >> 2 > v34) {
                unint64_t v34 = v35 >> 2;
              }
              if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v36 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v36 = v34;
              }
              if (v36)
              {
                unint64_t v37 = (char *)sub_1000DA54C(v12, v36);
                unint64_t v32 = *(char **)(a1 + 8);
                unint64_t v30 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v37 = 0;
              }
              uint64_t v38 = &v37[8 * v33];
              *(void *)uint64_t v38 = 0;
              unint64_t v31 = v38 + 8;
              while (v30 != v32)
              {
                uint64_t v39 = *((void *)v30 - 1);
                v30 -= 8;
                *((void *)v38 - 1) = v39;
                v38 -= 8;
              }
              *(void *)(a1 + 8) = v38;
              *(void *)(a1 + 16) = v31;
              *(void *)(a1 + 24) = &v37[8 * v36];
              if (v32) {
                operator delete(v32);
              }
            }
            else
            {
              *(void *)unint64_t v30 = 0;
              unint64_t v31 = v30 + 8;
            }
            *(void *)(a1 + 16) = v31;
            unint64_t v40 = *((void *)this + 1);
            if (v40 > 0xFFFFFFFFFFFFFFF7 || v40 + 8 > *((void *)this + 2)) {
              goto LABEL_124;
            }
            *(v31 - 1) = *(void *)(*(void *)this + v40);
            unint64_t v28 = *((void *)this + 2);
            unint64_t v27 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v27;
          }
          goto LABEL_125;
        case 3u:
          if (v25 != 2)
          {
            uint64_t v85 = *(char **)(a1 + 40);
            unint64_t v84 = *(void *)(a1 + 48);
            if ((unint64_t)v85 >= v84)
            {
              uint64_t v98 = (char *)*v9;
              uint64_t v99 = (v85 - (unsigned char *)*v9) >> 3;
              unint64_t v100 = v99 + 1;
              if ((unint64_t)(v99 + 1) >> 61) {
LABEL_191:
              }
                sub_1001D7FD4();
              uint64_t v101 = v84 - (void)v98;
              if (v101 >> 2 > v100) {
                unint64_t v100 = v101 >> 2;
              }
              if ((unint64_t)v101 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v102 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v102 = v100;
              }
              if (v102)
              {
                uint64_t v103 = (char *)sub_1000DA54C(v10, v102);
                uint64_t v98 = *(char **)(a1 + 32);
                uint64_t v85 = *(char **)(a1 + 40);
              }
              else
              {
                uint64_t v103 = 0;
              }
              char v112 = &v103[8 * v99];
              *(void *)char v112 = 0;
              unint64_t v83 = v112 + 8;
              while (v85 != v98)
              {
                uint64_t v113 = *((void *)v85 - 1);
                v85 -= 8;
                *((void *)v112 - 1) = v113;
                v112 -= 8;
              }
              *(void *)(a1 + 32) = v112;
              *(void *)(a1 + 40) = v83;
              *(void *)(a1 + 48) = &v103[8 * v102];
              if (v98) {
                operator delete(v98);
              }
            }
            else
            {
              *(void *)uint64_t v85 = 0;
              unint64_t v83 = v85 + 8;
            }
            *(void *)(a1 + 40) = v83;
            goto LABEL_175;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          while (v41 < v42 && !*((unsigned char *)this + 24))
          {
            unint64_t v44 = *(char **)(a1 + 40);
            unint64_t v43 = *(void *)(a1 + 48);
            if ((unint64_t)v44 >= v43)
            {
              unint64_t v46 = (char *)*v9;
              uint64_t v47 = (v44 - (unsigned char *)*v9) >> 3;
              unint64_t v48 = v47 + 1;
              if ((unint64_t)(v47 + 1) >> 61) {
                goto LABEL_191;
              }
              uint64_t v49 = v43 - (void)v46;
              if (v49 >> 2 > v48) {
                unint64_t v48 = v49 >> 2;
              }
              if ((unint64_t)v49 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v50 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v50 = v48;
              }
              if (v50)
              {
                unint64_t v51 = (char *)sub_1000DA54C(v10, v50);
                unint64_t v46 = *(char **)(a1 + 32);
                unint64_t v44 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v51 = 0;
              }
              uint64_t v52 = &v51[8 * v47];
              *(void *)uint64_t v52 = 0;
              unint64_t v45 = v52 + 8;
              while (v44 != v46)
              {
                uint64_t v53 = *((void *)v44 - 1);
                v44 -= 8;
                *((void *)v52 - 1) = v53;
                v52 -= 8;
              }
              *(void *)(a1 + 32) = v52;
              *(void *)(a1 + 40) = v45;
              *(void *)(a1 + 48) = &v51[8 * v50];
              if (v46) {
                operator delete(v46);
              }
            }
            else
            {
              *(void *)unint64_t v44 = 0;
              unint64_t v45 = v44 + 8;
            }
            *(void *)(a1 + 40) = v45;
            unint64_t v54 = *((void *)this + 1);
            if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > *((void *)this + 2)) {
              goto LABEL_124;
            }
            *(v45 - 1) = *(void *)(*(void *)this + v54);
            unint64_t v42 = *((void *)this + 2);
            unint64_t v41 = *((void *)this + 1) + 8;
            *((void *)this + 1) = v41;
          }
          goto LABEL_125;
        case 4u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v55 = *((void *)this + 1);
            unint64_t v56 = *((void *)this + 2);
            while (v55 < v56 && !*((unsigned char *)this + 24))
            {
              unint64_t v58 = *(char **)(a1 + 64);
              unint64_t v57 = *(void *)(a1 + 72);
              if ((unint64_t)v58 >= v57)
              {
                char v60 = (char *)*v8;
                uint64_t v61 = (v58 - (unsigned char *)*v8) >> 3;
                unint64_t v62 = v61 + 1;
                if ((unint64_t)(v61 + 1) >> 61) {
                  goto LABEL_192;
                }
                uint64_t v63 = v57 - (void)v60;
                if (v63 >> 2 > v62) {
                  unint64_t v62 = v63 >> 2;
                }
                if ((unint64_t)v63 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v64 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v64 = v62;
                }
                if (v64)
                {
                  unsigned int v65 = (char *)sub_1000DA54C(v119, v64);
                  char v60 = *(char **)(a1 + 56);
                  unint64_t v58 = *(char **)(a1 + 64);
                }
                else
                {
                  unsigned int v65 = 0;
                }
                uint64_t v66 = &v65[8 * v61];
                *(void *)uint64_t v66 = 0;
                unint64_t v59 = v66 + 8;
                while (v58 != v60)
                {
                  uint64_t v67 = *((void *)v58 - 1);
                  v58 -= 8;
                  *((void *)v66 - 1) = v67;
                  v66 -= 8;
                }
                *(void *)(a1 + 56) = v66;
                *(void *)(a1 + 64) = v59;
                *(void *)(a1 + 72) = &v65[8 * v64];
                if (v60) {
                  operator delete(v60);
                }
              }
              else
              {
                *(void *)unint64_t v58 = 0;
                unint64_t v59 = v58 + 8;
              }
              *(void *)(a1 + 64) = v59;
              unint64_t v68 = *((void *)this + 1);
              if (v68 > 0xFFFFFFFFFFFFFFF7 || v68 + 8 > *((void *)this + 2))
              {
LABEL_124:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v59 - 1) = *(void *)(*(void *)this + v68);
              unint64_t v56 = *((void *)this + 2);
              unint64_t v55 = *((void *)this + 1) + 8;
              *((void *)this + 1) = v55;
            }
LABEL_125:
            PB::Reader::recallMark();
          }
          else
          {
            uint64_t v87 = *(char **)(a1 + 64);
            unint64_t v86 = *(void *)(a1 + 72);
            if ((unint64_t)v87 >= v86)
            {
              char v104 = (char *)*v8;
              uint64_t v105 = (v87 - (unsigned char *)*v8) >> 3;
              unint64_t v106 = v105 + 1;
              if ((unint64_t)(v105 + 1) >> 61) {
LABEL_192:
              }
                sub_1001D7FD4();
              uint64_t v107 = v86 - (void)v104;
              if (v107 >> 2 > v106) {
                unint64_t v106 = v107 >> 2;
              }
              if ((unint64_t)v107 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v108 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v108 = v106;
              }
              if (v108)
              {
                unint64_t v109 = (char *)sub_1000DA54C(v119, v108);
                char v104 = *(char **)(a1 + 56);
                uint64_t v87 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v109 = 0;
              }
              unint64_t v114 = &v109[8 * v105];
              *(void *)unint64_t v114 = 0;
              unint64_t v83 = v114 + 8;
              while (v87 != v104)
              {
                uint64_t v115 = *((void *)v87 - 1);
                v87 -= 8;
                *((void *)v114 - 1) = v115;
                v114 -= 8;
              }
              *(void *)(a1 + 56) = v114;
              *(void *)(a1 + 64) = v83;
              *(void *)(a1 + 72) = &v109[8 * v108];
              if (v104) {
                operator delete(v104);
              }
            }
            else
            {
              *(void *)uint64_t v87 = 0;
              unint64_t v83 = v87 + 8;
            }
            *(void *)(a1 + 64) = v83;
LABEL_175:
            unint64_t v116 = *((void *)this + 1);
            if (v116 <= 0xFFFFFFFFFFFFFFF7 && v116 + 8 <= *((void *)this + 2))
            {
              *(v83 - 1) = *(void *)(*(void *)this + v116);
LABEL_179:
              *((void *)this + 1) += 8;
            }
            else
            {
LABEL_177:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_180:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        case 5u:
          *(unsigned char *)(a1 + 96) |= 4u;
          unint64_t v69 = *((void *)this + 1);
          if (v69 >= *((void *)this + 2))
          {
            BOOL v72 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v70 = v69 + 1;
            int v71 = *(unsigned __int8 *)(*(void *)this + v69);
            *((void *)this + 1) = v70;
            BOOL v72 = v71 != 0;
          }
          *(unsigned char *)(a1 + 92) = v72;
          goto LABEL_180;
        case 6u:
          *(unsigned char *)(a1 + 96) |= 2u;
          unint64_t v73 = *((void *)this + 1);
          unint64_t v74 = *((void *)this + 2);
          uint64_t v75 = *(void *)this;
          if (v73 <= 0xFFFFFFFFFFFFFFF5 && v73 + 10 <= v74)
          {
            char v76 = 0;
            unsigned int v77 = 0;
            uint64_t v78 = 0;
            do
            {
              unint64_t v79 = v73 + 1;
              *((void *)this + 1) = v73 + 1;
              char v80 = *(unsigned char *)(v75 + v73);
              v78 |= (unint64_t)(v80 & 0x7F) << v76;
              if ((v80 & 0x80) == 0) {
                goto LABEL_153;
              }
              v76 += 7;
              unint64_t v73 = v79;
              BOOL v19 = v77++ > 8;
            }
            while (!v19);
LABEL_123:
            LODWORD(v78) = 0;
            goto LABEL_153;
          }
          char v88 = 0;
          unsigned int v89 = 0;
          uint64_t v78 = 0;
          if (v74 <= v73) {
            unint64_t v74 = *((void *)this + 1);
          }
          while (2)
          {
            if (v74 == v73)
            {
              LODWORD(v78) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v90 = v73 + 1;
              char v91 = *(unsigned char *)(v75 + v73);
              *((void *)this + 1) = v90;
              v78 |= (unint64_t)(v91 & 0x7F) << v88;
              if (v91 < 0)
              {
                v88 += 7;
                unint64_t v73 = v90;
                BOOL v19 = v89++ > 8;
                if (v19) {
                  goto LABEL_123;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v78) = 0;
              }
            }
            break;
          }
LABEL_153:
          *(_DWORD *)(a1 + 88) = v78;
          goto LABEL_180;
        default:
          if ((PB::Reader::skip(this, v16 >> 3, v25, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_180;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v16 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v13 + v2);
      *((void *)this + 1) = v22;
      v16 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v16 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101752E4C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(result + 96)) {
    double result = PB::Writer::write(this, *(double *)(result + 80), 1u);
  }
  int v4 = *(double **)(v3 + 8);
  uint64_t v5 = *(double **)(v3 + 16);
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6, 2u);
  }
  double v7 = *(double **)(v3 + 32);
  char v8 = *(double **)(v3 + 40);
  while (v7 != v8)
  {
    double v9 = *v7++;
    double result = PB::Writer::write(this, v9, 3u);
  }
  uint64_t v10 = *(double **)(v3 + 56);
  double v11 = *(double **)(v3 + 64);
  while (v10 != v11)
  {
    double v12 = *v10++;
    double result = PB::Writer::write(this, v12, 4u);
  }
  char v13 = *(unsigned char *)(v3 + 96);
  if ((v13 & 4) != 0)
  {
    double result = PB::Writer::write(this, *(unsigned char *)(v3 + 92), 5u);
    char v13 = *(unsigned char *)(v3 + 96);
  }
  if ((v13 & 2) != 0)
  {
    unsigned int v14 = *(_DWORD *)(v3 + 88);
    return PB::Writer::writeVarInt(this, v14, 6u);
  }
  return result;
}

uint64_t sub_101752F3C(uint64_t result)
{
  *(void *)double result = &off_1023389B8;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_101752F64(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_101752F9C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_1023389B8;
  *(_DWORD *)(a1 + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    char v3 = 2;
    *(unsigned char *)(a1 + 44) = 2;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 44) & 4) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 44) = v3;
    *(void *)(a1 + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 44);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 36);
    v3 |= 0x10u;
    *(unsigned char *)(a1 + 44) = v3;
    *(_DWORD *)(a1 + 36) = v6;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 32);
  v3 |= 8u;
  *(unsigned char *)(a1 + 44) = v3;
  *(_DWORD *)(a1 + 32) = v7;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 1) == 0) {
      return result;
    }
LABEL_14:
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 44) = v3 | 1;
    *(double *)(a1 + 8) = result;
    return result;
  }
LABEL_13:
  char v8 = *(unsigned char *)(a2 + 40);
  v3 |= 0x20u;
  *(unsigned char *)(a1 + 44) = v3;
  *(unsigned char *)(a1 + 40) = v8;
  if (*(unsigned char *)(a2 + 44)) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_101753070(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "gestureType", *(_DWORD *)(a1 + 32));
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "hostPowerState", *(unsigned char *)(a1 + 40));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "machContinuousTime", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "receivedTime", *(double *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 36));
  if ((*(unsigned char *)(a1 + 44) & 4) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "timestampPossible", *(void *)(a1 + 24));
LABEL_8:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101753174(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 44) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_52;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_77;
            case 2u:
              *(unsigned char *)(a1 + 44) |= 4u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v41 = 0;
                unsigned int v42 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    uint64_t v25 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_82;
                  }
                  unint64_t v43 = v21++;
                  char v44 = *(unsigned char *)(v22 + v43);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v44 & 0x7F) << v41;
                  if ((v44 & 0x80) == 0) {
                    break;
                  }
                  v41 += 7;
                  BOOL v14 = v42++ > 8;
                  if (v14)
                  {
                    uint64_t v25 = 0;
LABEL_81:
                    unint64_t v2 = v43 + 1;
                    goto LABEL_82;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v25 = 0;
                }
                goto LABEL_81;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_82;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              uint64_t v25 = 0;
LABEL_82:
              *(void *)(a1 + 24) = v25;
              goto LABEL_93;
            case 3u:
              *(unsigned char *)(a1 + 44) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_87;
                  }
                  unint64_t v47 = v27++;
                  char v48 = *(unsigned char *)(v28 + v47);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_86:
                    unint64_t v2 = v47 + 1;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_86;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_87;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_87:
              *(_DWORD *)(a1 + 36) = v31;
              goto LABEL_93;
            case 4u:
              *(unsigned char *)(a1 + 44) |= 8u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_92;
                  }
                  unint64_t v51 = v33++;
                  char v52 = *(unsigned char *)(v34 + v51);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_91:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_92;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_91;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_92;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_92:
              *(_DWORD *)(a1 + 32) = v37;
LABEL_93:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 5u:
              *(unsigned char *)(a1 + 44) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v40 = v39 != 0;
              }
              *(unsigned char *)(a1 + 40) = v40;
              goto LABEL_93;
            case 6u:
              *(unsigned char *)(a1 + 44) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_77:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_52:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_93;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_93;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10175368C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16), 1u);
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 2u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 36), 3u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x20) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 40), 5u);
    if ((*(unsigned char *)(v3 + 44) & 1) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 32), 4u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x20) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_13:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5, 6u);
}

uint64_t sub_10175376C(uint64_t result)
{
  *(void *)uint64_t result = &off_1023389F0;
  *(_DWORD *)(result + 84) = 0;
  return result;
}

void sub_101753794(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1017537CC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_1023389F0;
  *(_DWORD *)(result + 84) = 0;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x10) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 40);
    int v3 = 16;
    *(_DWORD *)(result + 84) = 16;
    *(void *)(result + 40) = v4;
    int v2 = *(_DWORD *)(a2 + 84);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 48);
    v3 |= 0x20u;
    *(_DWORD *)(result + 84) = v3;
    *(void *)(result + 48) = v5;
    int v2 = *(_DWORD *)(a2 + 84);
  }
LABEL_6:
  if ((v2 & 0x200) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 68);
    v3 |= 0x200u;
    *(_DWORD *)(result + 84) = v3;
    *(_DWORD *)(result + 68) = v6;
    int v2 = *(_DWORD *)(a2 + 84);
    if ((v2 & 0x400) == 0)
    {
LABEL_8:
      if ((v2 & 0x800) == 0) {
        goto LABEL_9;
      }
      goto LABEL_25;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 72);
  v3 |= 0x400u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 72) = v7;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x800) == 0)
  {
LABEL_9:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  char v8 = *(unsigned char *)(a2 + 76);
  v3 |= 0x800u;
  *(_DWORD *)(result + 84) = v3;
  *(unsigned char *)(result + 76) = v8;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x10000) == 0)
  {
LABEL_10:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v9 = *(unsigned char *)(a2 + 81);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 84) = v3;
  *(unsigned char *)(result + 81) = v9;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x4000) == 0)
  {
LABEL_11:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  char v10 = *(unsigned char *)(a2 + 79);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 84) = v3;
  *(unsigned char *)(result + 79) = v10;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x8000) == 0)
  {
LABEL_12:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  char v11 = *(unsigned char *)(a2 + 80);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 84) = v3;
  *(unsigned char *)(result + 80) = v11;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x2000) == 0)
  {
LABEL_13:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  char v12 = *(unsigned char *)(a2 + 78);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 84) = v3;
  *(unsigned char *)(result + 78) = v12;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x20000) == 0)
  {
LABEL_14:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  char v13 = *(unsigned char *)(a2 + 82);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 84) = v3;
  *(unsigned char *)(result + 82) = v13;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x1000) == 0)
  {
LABEL_15:
    if ((v2 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_31:
  char v14 = *(unsigned char *)(a2 + 77);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 84) = v3;
  *(unsigned char *)(result + 77) = v14;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 2) == 0)
  {
LABEL_16:
    if ((v2 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v15 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 84) = v3;
  *(void *)(result + 16) = v15;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 1) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v16 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 84) = v3;
  *(void *)(result + 8) = v16;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x80) == 0)
  {
LABEL_18:
    if ((v2 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v17 = *(_DWORD *)(a2 + 60);
  v3 |= 0x80u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 60) = v17;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 8) == 0)
  {
LABEL_19:
    if ((v2 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v18 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(result + 84) = v3;
  *(void *)(result + 32) = v18;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 0x100) == 0)
  {
LABEL_20:
    if ((v2 & 4) == 0) {
      goto LABEL_21;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v19 = *(_DWORD *)(a2 + 64);
  v3 |= 0x100u;
  *(_DWORD *)(result + 84) = v3;
  *(_DWORD *)(result + 64) = v19;
  int v2 = *(_DWORD *)(a2 + 84);
  if ((v2 & 4) == 0)
  {
LABEL_21:
    if ((v2 & 0x40) == 0) {
      return result;
    }
LABEL_38:
    int v21 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(result + 84) = v3 | 0x40;
    *(_DWORD *)(result + 56) = v21;
    return result;
  }
LABEL_37:
  uint64_t v20 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(result + 84) = v3;
  *(void *)(result + 24) = v20;
  if ((*(_DWORD *)(a2 + 84) & 0x40) != 0) {
    goto LABEL_38;
  }
  return result;
}

uint64_t sub_1017539F0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "detectionMode", *(_DWORD *)(a1 + 56));
    int v5 = *(_DWORD *)(a1 + 84);
    if ((v5 & 0x800) == 0)
    {
LABEL_3:
      if ((v5 & 0x1000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 0x800) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "detectorRunning", *(unsigned char *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x1000) == 0)
  {
LABEL_4:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "enableStateDetected", *(unsigned char *)(a1 + 77));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x2000) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "fireAll", *(unsigned char *)(a1 + 78));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 1) == 0)
  {
LABEL_6:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "gestureDetectionDelay", *(double *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x4000) == 0)
  {
LABEL_7:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "gyroInUse", *(unsigned char *)(a1 + 79));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x8000) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "hostAwake", *(unsigned char *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "hostWakeCount", *(_DWORD *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 2) == 0)
  {
LABEL_10:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "hostWakeDelay", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x10000) == 0)
  {
LABEL_11:
    if ((v5 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "invertSensors", *(unsigned char *)(a1 + 81));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 4) == 0)
  {
LABEL_12:
    if ((v5 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(this, "runningModeDuration", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 8) == 0)
  {
LABEL_13:
    if ((v5 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "runningModeStartTime", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x100) == 0)
  {
LABEL_14:
    if ((v5 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "runningSwitchCount", *(_DWORD *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x200) == 0)
  {
LABEL_15:
    if ((v5 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x10) == 0)
  {
LABEL_16:
    if ((v5 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x20) == 0)
  {
LABEL_17:
    if ((v5 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "timestampPossible", *(double *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 84);
  if ((v5 & 0x400) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_39:
  PB::TextFormatter::format(this, "type", *(_DWORD *)(a1 + 72));
  if ((*(_DWORD *)(a1 + 84) & 0x20000) != 0) {
LABEL_19:
  }
    PB::TextFormatter::format(this, "wakePending", *(unsigned char *)(a1 + 82));
LABEL_20:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101753C74(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 84) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_141;
            case 2u:
              *(_DWORD *)(a1 + 84) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_141;
            case 3u:
              *(_DWORD *)(a1 + 84) |= 0x200u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v65 = 0;
                unsigned int v66 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_146;
                  }
                  unint64_t v67 = v21++;
                  char v68 = *(unsigned char *)(v22 + v67);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v68 & 0x7F) << v65;
                  if ((v68 & 0x80) == 0) {
                    break;
                  }
                  v65 += 7;
                  BOOL v14 = v66++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_145:
                    unint64_t v2 = v67 + 1;
                    goto LABEL_146;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_145;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_146;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_146:
              *(_DWORD *)(a1 + 68) = v25;
              goto LABEL_167;
            case 4u:
              *(_DWORD *)(a1 + 84) |= 0x400u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v69 = 0;
                unsigned int v70 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_151;
                  }
                  unint64_t v71 = v27++;
                  char v72 = *(unsigned char *)(v28 + v71);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v72 & 0x7F) << v69;
                  if ((v72 & 0x80) == 0) {
                    break;
                  }
                  v69 += 7;
                  BOOL v14 = v70++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_150:
                    unint64_t v2 = v71 + 1;
                    goto LABEL_151;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_150;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_151;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_151:
              *(_DWORD *)(a1 + 72) = v31;
              goto LABEL_167;
            case 5u:
              *(_DWORD *)(a1 + 84) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 76) = v34;
              goto LABEL_167;
            case 6u:
              *(_DWORD *)(a1 + 84) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v36 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v36 = v35 != 0;
              }
              *(unsigned char *)(a1 + 81) = v36;
              goto LABEL_167;
            case 7u:
              *(_DWORD *)(a1 + 84) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v38 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v37 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v38 = v37 != 0;
              }
              *(unsigned char *)(a1 + 79) = v38;
              goto LABEL_167;
            case 8u:
              *(_DWORD *)(a1 + 84) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v40 = v39 != 0;
              }
              *(unsigned char *)(a1 + 80) = v40;
              goto LABEL_167;
            case 9u:
              *(_DWORD *)(a1 + 84) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v42 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v41 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v42 = v41 != 0;
              }
              *(unsigned char *)(a1 + 78) = v42;
              goto LABEL_167;
            case 0xAu:
              *(_DWORD *)(a1 + 84) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v44 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v43 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v44 = v43 != 0;
              }
              *(unsigned char *)(a1 + 82) = v44;
              goto LABEL_167;
            case 0xBu:
              *(_DWORD *)(a1 + 84) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v46 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v45 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v46 = v45 != 0;
              }
              *(unsigned char *)(a1 + 77) = v46;
              goto LABEL_167;
            case 0xCu:
              *(_DWORD *)(a1 + 84) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_141;
            case 0xDu:
              *(_DWORD *)(a1 + 84) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_141;
            case 0xEu:
              *(_DWORD *)(a1 + 84) |= 0x80u;
              unint64_t v47 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v48 = *(void *)this;
              if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
              {
                char v73 = 0;
                unsigned int v74 = 0;
                uint64_t v51 = 0;
                if (v2 <= v47) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v47)
                  {
                    LODWORD(v51) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_156;
                  }
                  unint64_t v75 = v47++;
                  char v76 = *(unsigned char *)(v48 + v75);
                  *((void *)this + 1) = v47;
                  v51 |= (unint64_t)(v76 & 0x7F) << v73;
                  if ((v76 & 0x80) == 0) {
                    break;
                  }
                  v73 += 7;
                  BOOL v14 = v74++ > 8;
                  if (v14)
                  {
                    LODWORD(v51) = 0;
LABEL_155:
                    unint64_t v2 = v75 + 1;
                    goto LABEL_156;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v51) = 0;
                }
                goto LABEL_155;
              }
              char v49 = 0;
              unsigned int v50 = 0;
              uint64_t v51 = 0;
              do
              {
                unint64_t v2 = v47 + 1;
                *((void *)this + 1) = v47 + 1;
                char v52 = *(unsigned char *)(v48 + v47);
                v51 |= (unint64_t)(v52 & 0x7F) << v49;
                if ((v52 & 0x80) == 0) {
                  goto LABEL_156;
                }
                v49 += 7;
                unint64_t v47 = v2;
                BOOL v14 = v50++ > 8;
              }
              while (!v14);
              LODWORD(v51) = 0;
LABEL_156:
              *(_DWORD *)(a1 + 60) = v51;
              goto LABEL_167;
            case 0xFu:
              *(_DWORD *)(a1 + 84) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_83;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_141;
            case 0x10u:
              *(_DWORD *)(a1 + 84) |= 0x100u;
              unint64_t v53 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v54 = *(void *)this;
              if (v53 > 0xFFFFFFFFFFFFFFF5 || v53 + 10 > v2)
              {
                char v77 = 0;
                unsigned int v78 = 0;
                uint64_t v57 = 0;
                if (v2 <= v53) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v53)
                  {
                    LODWORD(v57) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_161;
                  }
                  unint64_t v79 = v53++;
                  char v80 = *(unsigned char *)(v54 + v79);
                  *((void *)this + 1) = v53;
                  v57 |= (unint64_t)(v80 & 0x7F) << v77;
                  if ((v80 & 0x80) == 0) {
                    break;
                  }
                  v77 += 7;
                  BOOL v14 = v78++ > 8;
                  if (v14)
                  {
                    LODWORD(v57) = 0;
LABEL_160:
                    unint64_t v2 = v79 + 1;
                    goto LABEL_161;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v57) = 0;
                }
                goto LABEL_160;
              }
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              do
              {
                unint64_t v2 = v53 + 1;
                *((void *)this + 1) = v53 + 1;
                char v58 = *(unsigned char *)(v54 + v53);
                v57 |= (unint64_t)(v58 & 0x7F) << v55;
                if ((v58 & 0x80) == 0) {
                  goto LABEL_161;
                }
                v55 += 7;
                unint64_t v53 = v2;
                BOOL v14 = v56++ > 8;
              }
              while (!v14);
              LODWORD(v57) = 0;
LABEL_161:
              *(_DWORD *)(a1 + 64) = v57;
              goto LABEL_167;
            case 0x11u:
              *(_DWORD *)(a1 + 84) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_141:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_83:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_167;
            case 0x12u:
              *(_DWORD *)(a1 + 84) |= 0x40u;
              unint64_t v59 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v60 = *(void *)this;
              if (v59 > 0xFFFFFFFFFFFFFFF5 || v59 + 10 > v2)
              {
                char v81 = 0;
                unsigned int v82 = 0;
                uint64_t v63 = 0;
                if (v2 <= v59) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v59)
                  {
                    LODWORD(v63) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_166;
                  }
                  unint64_t v83 = v59++;
                  char v84 = *(unsigned char *)(v60 + v83);
                  *((void *)this + 1) = v59;
                  v63 |= (unint64_t)(v84 & 0x7F) << v81;
                  if ((v84 & 0x80) == 0) {
                    break;
                  }
                  v81 += 7;
                  BOOL v14 = v82++ > 8;
                  if (v14)
                  {
                    LODWORD(v63) = 0;
LABEL_165:
                    unint64_t v2 = v83 + 1;
                    goto LABEL_166;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v63) = 0;
                }
                goto LABEL_165;
              }
              char v61 = 0;
              unsigned int v62 = 0;
              uint64_t v63 = 0;
              do
              {
                unint64_t v2 = v59 + 1;
                *((void *)this + 1) = v59 + 1;
                char v64 = *(unsigned char *)(v60 + v59);
                v63 |= (unint64_t)(v64 & 0x7F) << v61;
                if ((v64 & 0x80) == 0) {
                  goto LABEL_166;
                }
                v61 += 7;
                unint64_t v59 = v2;
                BOOL v14 = v62++ > 8;
              }
              while (!v14);
              LODWORD(v63) = 0;
LABEL_166:
              *(_DWORD *)(a1 + 56) = v63;
LABEL_167:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_167;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10175460C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 84);
  if ((v4 & 0x10) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 40), 1u);
    int v4 = *(_DWORD *)(v3 + 84);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x200) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 2u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x200) == 0)
  {
LABEL_4:
    if ((v4 & 0x400) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 68), 3u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x400) == 0)
  {
LABEL_5:
    if ((v4 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 72), 4u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x800) == 0)
  {
LABEL_6:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 76), 5u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x10000) == 0)
  {
LABEL_7:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 81), 6u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x4000) == 0)
  {
LABEL_8:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 79), 7u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x8000) == 0)
  {
LABEL_9:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 80), 8u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x2000) == 0)
  {
LABEL_10:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 78), 9u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x20000) == 0)
  {
LABEL_11:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 82), 0xAu);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x1000) == 0)
  {
LABEL_12:
    if ((v4 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 77), 0xBu);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 2) == 0)
  {
LABEL_13:
    if ((v4 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 0xCu);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 1) == 0)
  {
LABEL_14:
    if ((v4 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 0xDu);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x80) == 0)
  {
LABEL_15:
    if ((v4 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 60), 0xEu);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 8) == 0)
  {
LABEL_16:
    if ((v4 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 0xFu);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 0x100) == 0)
  {
LABEL_17:
    if ((v4 & 4) == 0) {
      goto LABEL_18;
    }
LABEL_36:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 0x11u);
    if ((*(_DWORD *)(v3 + 84) & 0x40) == 0) {
      return result;
    }
    goto LABEL_37;
  }
LABEL_35:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 64), 0x10u);
  int v4 = *(_DWORD *)(v3 + 84);
  if ((v4 & 4) != 0) {
    goto LABEL_36;
  }
LABEL_18:
  if ((v4 & 0x40) == 0) {
    return result;
  }
LABEL_37:
  int v5 = *(_DWORD *)(v3 + 56);

  return PB::Writer::writeVarInt(this, v5, 0x12u);
}

uint64_t sub_10175483C(uint64_t result)
{
  *(void *)uint64_t result = &off_102338A28;
  *(_DWORD *)(result + 60) = 0;
  return result;
}

void sub_101754864(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10175489C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338A28;
  *(_DWORD *)(result + 60) = 0;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 8) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 24);
    __int16 v3 = 8;
    *(_WORD *)(result + 60) = 8;
    *(_DWORD *)(result + 24) = v4;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 28);
    v3 |= 0x10u;
    *(_WORD *)(result + 60) = v3;
    *(_DWORD *)(result + 28) = v5;
    __int16 v2 = *(_WORD *)(a2 + 60);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 32);
    v3 |= 0x20u;
    *(_WORD *)(result + 60) = v3;
    *(_DWORD *)(result + 32) = v6;
    __int16 v2 = *(_WORD *)(a2 + 60);
    if ((v2 & 0x40) == 0)
    {
LABEL_8:
      if ((v2 & 0x200) == 0) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 36);
  v3 |= 0x40u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 36) = v7;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x200) == 0)
  {
LABEL_9:
    if ((v2 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v8 = *(_DWORD *)(a2 + 48);
  v3 |= 0x200u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 48) = v8;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x100) == 0)
  {
LABEL_10:
    if ((v2 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v9 = *(_DWORD *)(a2 + 44);
  v3 |= 0x100u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 44) = v9;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x400) == 0)
  {
LABEL_11:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v10 = *(_DWORD *)(a2 + 52);
  v3 |= 0x400u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 52) = v10;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x4000) == 0)
  {
LABEL_12:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
LABEL_25:
  char v11 = *(unsigned char *)(a2 + 59);
  v3 |= 0x4000u;
  *(_WORD *)(result + 60) = v3;
  *(unsigned char *)(result + 59) = v11;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x2000) == 0)
  {
LABEL_13:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v12 = *(unsigned char *)(a2 + 58);
  v3 |= 0x2000u;
  *(_WORD *)(result + 60) = v3;
  *(unsigned char *)(result + 58) = v12;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x1000) == 0)
  {
LABEL_14:
    if ((v2 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_28;
  }
LABEL_27:
  char v13 = *(unsigned char *)(a2 + 57);
  v3 |= 0x1000u;
  *(_WORD *)(result + 60) = v3;
  *(unsigned char *)(result + 57) = v13;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 1) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v14 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 60) = v3;
  *(void *)(result + 8) = v14;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_30;
  }
LABEL_29:
  char v15 = *(unsigned char *)(a2 + 56);
  v3 |= 0x800u;
  *(_WORD *)(result + 60) = v3;
  *(unsigned char *)(result + 56) = v15;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 2) == 0)
  {
LABEL_17:
    if ((v2 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v16 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 16) = v16;
  __int16 v2 = *(_WORD *)(a2 + 60);
  if ((v2 & 4) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0) {
      return result;
    }
LABEL_32:
    int v18 = *(_DWORD *)(a2 + 40);
    *(_WORD *)(result + 60) = v3 | 0x80;
    *(_DWORD *)(result + 40) = v18;
    return result;
  }
LABEL_31:
  int v17 = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(_WORD *)(result + 60) = v3;
  *(_DWORD *)(result + 20) = v17;
  if ((*(_WORD *)(a2 + 60) & 0x80) != 0) {
    goto LABEL_32;
  }
  return result;
}

uint64_t sub_101754A6C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "dataRate", *(float *)(a1 + 16));
    __int16 v5 = *(_WORD *)(a1 + 60);
    if ((v5 & 0x800) == 0)
    {
LABEL_3:
      if ((v5 & 0x1000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((*(_WORD *)(a1 + 60) & 0x800) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "isInterpolated", *(unsigned char *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x1000) == 0)
  {
LABEL_4:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "isMissingSamples", *(unsigned char *)(a1 + 57));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x2000) == 0)
  {
LABEL_5:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "isWalkingFiltered", *(unsigned char *)(a1 + 58));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x4000) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "isWalkingRaw", *(unsigned char *)(a1 + 59));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "maxSampleDeltaInSecond", *(float *)(a1 + 20));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "pedEnergyPlane", *(float *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "pedEnergyZ", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "pedEnergyZByPlane", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x40) == 0)
  {
LABEL_11:
    if ((v5 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(this, "pedEnergyZPeak", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x80) == 0)
  {
LABEL_12:
    if ((v5 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(this, "reversedTimestampCounts", *(_DWORD *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x100) == 0)
  {
LABEL_13:
    if ((v5 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(this, "thetaPitchFaceDeg", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x200) == 0)
  {
LABEL_14:
    if ((v5 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(this, "thetaRollFaceDeg", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 60);
  if ((v5 & 0x400) == 0)
  {
LABEL_15:
    if ((v5 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_33:
  PB::TextFormatter::format(this, "thetaYawFaceDeg", *(float *)(a1 + 52));
  if (*(_WORD *)(a1 + 60)) {
LABEL_16:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
LABEL_17:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101754C90(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 60) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 2u:
              *(_WORD *)(a1 + 60) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 3u:
              *(_WORD *)(a1 + 60) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 4u:
              *(_WORD *)(a1 + 60) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 5u:
              *(_WORD *)(a1 + 60) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 6u:
              *(_WORD *)(a1 + 60) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 7u:
              *(_WORD *)(a1 + 60) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 8u:
              *(_WORD *)(a1 + 60) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v22 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v22 = v21 != 0;
              }
              *(unsigned char *)(a1 + 59) = v22;
              goto LABEL_107;
            case 9u:
              *(_WORD *)(a1 + 60) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v24 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v23 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v24 = v23 != 0;
              }
              *(unsigned char *)(a1 + 58) = v24;
              goto LABEL_107;
            case 0xAu:
              *(_WORD *)(a1 + 60) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v26 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v25 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v26 = v25 != 0;
              }
              *(unsigned char *)(a1 + 57) = v26;
              goto LABEL_107;
            case 0xBu:
              *(_WORD *)(a1 + 60) |= 1u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v41 = 0;
                unsigned int v42 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_101;
                  }
                  unint64_t v43 = v27++;
                  char v44 = *(unsigned char *)(v28 + v43);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v44 & 0x7F) << v41;
                  if ((v44 & 0x80) == 0) {
                    break;
                  }
                  v41 += 7;
                  BOOL v14 = v42++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_100:
                    unint64_t v2 = v43 + 1;
                    goto LABEL_101;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_100;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_101;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_101:
              *(void *)(a1 + 8) = v31;
              goto LABEL_107;
            case 0xCu:
              *(_WORD *)(a1 + 60) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 56) = v34;
              goto LABEL_107;
            case 0xDu:
              *(_WORD *)(a1 + 60) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_65;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_96;
            case 0xEu:
              *(_WORD *)(a1 + 60) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
LABEL_96:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_65:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_107;
            case 0xFu:
              *(_WORD *)(a1 + 60) |= 0x80u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_106;
                  }
                  unint64_t v47 = v35++;
                  char v48 = *(unsigned char *)(v36 + v47);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_105:
                    unint64_t v2 = v47 + 1;
                    goto LABEL_106;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_105;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_106;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_106:
              *(_DWORD *)(a1 + 40) = v39;
LABEL_107:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_107;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101755334(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 60);
  if ((v4 & 8) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 24), 1u);
    __int16 v4 = *(_WORD *)(v3 + 60);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 2u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 3u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x40) == 0)
  {
LABEL_5:
    if ((v4 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 4u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x200) == 0)
  {
LABEL_6:
    if ((v4 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 5u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x100) == 0)
  {
LABEL_7:
    if ((v4 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 6u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x400) == 0)
  {
LABEL_8:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 7u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x4000) == 0)
  {
LABEL_9:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 59), 8u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x2000) == 0)
  {
LABEL_10:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 58), 9u);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x1000) == 0)
  {
LABEL_11:
    if ((v4 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 57), 0xAu);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 1) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 0xBu);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 56), 0xCu);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 2) == 0)
  {
LABEL_14:
    if ((v4 & 4) == 0) {
      goto LABEL_15;
    }
LABEL_30:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 0xEu);
    if ((*(_WORD *)(v3 + 60) & 0x80) == 0) {
      return result;
    }
    goto LABEL_31;
  }
LABEL_29:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 0xDu);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 4) != 0) {
    goto LABEL_30;
  }
LABEL_15:
  if ((v4 & 0x80) == 0) {
    return result;
  }
LABEL_31:
  unsigned int v5 = *(_DWORD *)(v3 + 40);

  return PB::Writer::writeVarInt(this, v5, 0xFu);
}

double sub_101755510(uint64_t a1)
{
  *(void *)a1 = &off_102338A60;
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 244) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(void *)(a1 + 168) = 0;
  return result;
}

void sub_101755554(PB::Base *this)
{
  *(void *)this = &off_102338A60;
  uint64_t v2 = *((void *)this + 21);
  *((void *)this + 21) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *((void *)this + 20);
  *((void *)this + 20) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *((void *)this + 19);
  *((void *)this + 19) = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = *((void *)this + 18);
  *((void *)this + 18) = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = *((void *)this + 17);
  *((void *)this + 17) = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = *((void *)this + 16);
  *((void *)this + 16) = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  uint64_t v8 = *((void *)this + 15);
  *((void *)this + 15) = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  uint64_t v9 = *((void *)this + 14);
  *((void *)this + 14) = 0;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  uint64_t v10 = *((void *)this + 13);
  *((void *)this + 13) = 0;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  uint64_t v11 = *((void *)this + 12);
  *((void *)this + 12) = 0;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  uint64_t v12 = *((void *)this + 11);
  *((void *)this + 11) = 0;
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  uint64_t v13 = *((void *)this + 8);
  *((void *)this + 8) = 0;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
  }

  PB::Base::~Base(this);
}

void sub_1017557E8(PB::Base *a1)
{
  sub_101755554(a1);

  operator delete();
}

uint64_t sub_101755820(uint64_t result, uint64_t a2)
{
  *(void *)double result = &off_102338A60;
  *(void *)(result + 64) = 0;
  *(_OWORD *)(result + 88) = 0u;
  *(_DWORD *)(result + 244) = 0;
  *(_OWORD *)(result + 104) = 0u;
  *(_OWORD *)(result + 120) = 0u;
  *(_OWORD *)(result + 136) = 0u;
  *(_OWORD *)(result + 152) = 0u;
  *(void *)(result + 168) = 0;
  int v2 = *(_DWORD *)(a2 + 244);
  if ((v2 & 0x100) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 80);
    int v3 = 256;
    *(_DWORD *)(result + 244) = 256;
    *(void *)(result + 80) = v4;
    int v2 = *(_DWORD *)(a2 + 244);
    if ((v2 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x80) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 72);
    v3 |= 0x80u;
    *(_DWORD *)(result + 244) = v3;
    *(void *)(result + 72) = v5;
    int v2 = *(_DWORD *)(a2 + 244);
  }
LABEL_6:
  if ((v2 & 0x10000) != 0)
  {
    int v12 = *(_DWORD *)(a2 + 220);
    v3 |= 0x10000u;
    *(_DWORD *)(result + 244) = v3;
    *(_DWORD *)(result + 220) = v12;
    int v2 = *(_DWORD *)(a2 + 244);
    if ((v2 & 0x8000) == 0)
    {
LABEL_8:
      if ((v2 & 0x40000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_62;
    }
  }
  else if ((v2 & 0x8000) == 0)
  {
    goto LABEL_8;
  }
  int v13 = *(_DWORD *)(a2 + 216);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 244) = v3;
  *(_DWORD *)(result + 216) = v13;
  int v2 = *(_DWORD *)(a2 + 244);
  if ((v2 & 0x40000) == 0)
  {
LABEL_9:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v14 = *(_DWORD *)(a2 + 228);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 244) = v3;
  *(_DWORD *)(result + 228) = v14;
  int v2 = *(_DWORD *)(a2 + 244);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_10:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_64;
  }
LABEL_63:
  char v15 = *(unsigned char *)(a2 + 241);
  v3 |= 0x2000000u;
  *(_DWORD *)(result + 244) = v3;
  *(unsigned char *)(result + 241) = v15;
  int v2 = *(_DWORD *)(a2 + 244);
  if ((v2 & 0x80000) == 0)
  {
LABEL_11:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v16 = *(_DWORD *)(a2 + 232);
  v3 |= 0x80000u;
  *(_DWORD *)(result + 244) = v3;
  *(_DWORD *)(result + 232) = v16;
  int v2 = *(_DWORD *)(a2 + 244);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_66;
  }
LABEL_65:
  char v17 = *(unsigned char *)(a2 + 242);
  v3 |= 0x4000000u;
  *(_DWORD *)(result + 244) = v3;
  *(unsigned char *)(result + 242) = v17;
  int v2 = *(_DWORD *)(a2 + 244);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_66:
  uint64_t v18 = *(void *)(a2 + 176);
  v3 |= 0x200u;
  *(_DWORD *)(result + 244) = v3;
  *(void *)(result + 176) = v18;
  if ((*(_DWORD *)(a2 + 244) & 0x400000) != 0)
  {
LABEL_14:
    char v6 = *(unsigned char *)(a2 + 238);
    *(_DWORD *)(result + 244) = v3 | 0x400000;
    *(unsigned char *)(result + 238) = v6;
  }
LABEL_15:
  if (*(void *)(a2 + 64)) {
    operator new();
  }
  int v7 = *(_DWORD *)(a2 + 244);
  if ((v7 & 0x800) != 0)
  {
    uint64_t v19 = *(void *)(a2 + 192);
    *(_DWORD *)(result + 244) |= 0x800u;
    *(void *)(result + 192) = v19;
    int v7 = *(_DWORD *)(a2 + 244);
    if ((v7 & 0x800000) == 0)
    {
LABEL_19:
      if ((v7 & 0x400) == 0) {
        goto LABEL_20;
      }
      goto LABEL_70;
    }
  }
  else if ((v7 & 0x800000) == 0)
  {
    goto LABEL_19;
  }
  char v20 = *(unsigned char *)(a2 + 239);
  *(_DWORD *)(result + 244) |= 0x800000u;
  *(unsigned char *)(result + 239) = v20;
  int v7 = *(_DWORD *)(a2 + 244);
  if ((v7 & 0x400) == 0)
  {
LABEL_20:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_70:
  uint64_t v21 = *(void *)(a2 + 184);
  *(_DWORD *)(result + 244) |= 0x400u;
  *(void *)(result + 184) = v21;
  if ((*(_DWORD *)(a2 + 244) & 0x200000) != 0)
  {
LABEL_21:
    char v8 = *(unsigned char *)(a2 + 237);
    *(_DWORD *)(result + 244) |= 0x200000u;
    *(unsigned char *)(result + 237) = v8;
  }
LABEL_22:
  if (*(void *)(a2 + 120)) {
    operator new();
  }
  if (*(void *)(a2 + 112)) {
    operator new();
  }
  if (*(void *)(a2 + 104)) {
    operator new();
  }
  if (*(void *)(a2 + 96)) {
    operator new();
  }
  if (*(void *)(a2 + 152)) {
    operator new();
  }
  if (*(void *)(a2 + 144)) {
    operator new();
  }
  if (*(void *)(a2 + 168)) {
    operator new();
  }
  if (*(void *)(a2 + 160)) {
    operator new();
  }
  if ((*(unsigned char *)(a2 + 246) & 0x10) != 0)
  {
    char v9 = *(unsigned char *)(a2 + 236);
    *(_DWORD *)(result + 244) |= 0x100000u;
    *(unsigned char *)(result + 236) = v9;
  }
  if (*(void *)(a2 + 88)) {
    operator new();
  }
  int v10 = *(_DWORD *)(a2 + 244);
  if (v10)
  {
    uint64_t v22 = *(void *)(a2 + 8);
    *(_DWORD *)(result + 244) |= 1u;
    *(void *)(result + 8) = v22;
    int v10 = *(_DWORD *)(a2 + 244);
    if ((v10 & 8) == 0)
    {
LABEL_44:
      if ((v10 & 0x20000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_74;
    }
  }
  else if ((v10 & 8) == 0)
  {
    goto LABEL_44;
  }
  uint64_t v23 = *(void *)(a2 + 32);
  *(_DWORD *)(result + 244) |= 8u;
  *(void *)(result + 32) = v23;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x20000) == 0)
  {
LABEL_45:
    if ((v10 & 0x1000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v24 = *(_DWORD *)(a2 + 224);
  *(_DWORD *)(result + 244) |= 0x20000u;
  *(_DWORD *)(result + 224) = v24;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x1000000) == 0)
  {
LABEL_46:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_76;
  }
LABEL_75:
  char v25 = *(unsigned char *)(a2 + 240);
  *(_DWORD *)(result + 244) |= 0x1000000u;
  *(unsigned char *)(result + 240) = v25;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x1000) == 0)
  {
LABEL_47:
    if ((v10 & 0x40) == 0) {
      goto LABEL_48;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t v26 = *(void *)(a2 + 200);
  *(_DWORD *)(result + 244) |= 0x1000u;
  *(void *)(result + 200) = v26;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x40) == 0)
  {
LABEL_48:
    if ((v10 & 2) == 0) {
      goto LABEL_49;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t v27 = *(void *)(a2 + 56);
  *(_DWORD *)(result + 244) |= 0x40u;
  *(void *)(result + 56) = v27;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 2) == 0)
  {
LABEL_49:
    if ((v10 & 0x10) == 0) {
      goto LABEL_50;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t v28 = *(void *)(a2 + 16);
  *(_DWORD *)(result + 244) |= 2u;
  *(void *)(result + 16) = v28;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x10) == 0)
  {
LABEL_50:
    if ((v10 & 0x4000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t v29 = *(void *)(a2 + 40);
  *(_DWORD *)(result + 244) |= 0x10u;
  *(void *)(result + 40) = v29;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x4000) == 0)
  {
LABEL_51:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_81;
  }
LABEL_80:
  int v30 = *(_DWORD *)(a2 + 212);
  *(_DWORD *)(result + 244) |= 0x4000u;
  *(_DWORD *)(result + 212) = v30;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x2000) == 0)
  {
LABEL_52:
    if ((v10 & 0x20) == 0) {
      goto LABEL_53;
    }
    goto LABEL_82;
  }
LABEL_81:
  int v31 = *(_DWORD *)(a2 + 208);
  *(_DWORD *)(result + 244) |= 0x2000u;
  *(_DWORD *)(result + 208) = v31;
  int v10 = *(_DWORD *)(a2 + 244);
  if ((v10 & 0x20) == 0)
  {
LABEL_53:
    if ((v10 & 4) == 0) {
      goto LABEL_55;
    }
    goto LABEL_54;
  }
LABEL_82:
  uint64_t v32 = *(void *)(a2 + 48);
  *(_DWORD *)(result + 244) |= 0x20u;
  *(void *)(result + 48) = v32;
  if ((*(_DWORD *)(a2 + 244) & 4) != 0)
  {
LABEL_54:
    uint64_t v11 = *(void *)(a2 + 24);
    *(_DWORD *)(result + 244) |= 4u;
    *(void *)(result + 24) = v11;
  }
LABEL_55:
  if (*(void *)(a2 + 136)) {
    operator new();
  }
  if (*(void *)(a2 + 128)) {
    operator new();
  }
  return result;
}

uint64_t sub_101756024(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 0x100000) != 0)
  {
    PB::TextFormatter::format(this, "appliedBoutMetricCorrections", *(unsigned char *)(a1 + 236));
    int v5 = *(_DWORD *)(a1 + 244);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_60;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "dailyFlights30daysMax", *(double *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "dailyFlights30daysMean", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "dailySteps30DaysTotal", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "dailySteps30daysMax", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "dailySteps30daysMean", *(double *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 0x20) == 0)
  {
LABEL_8:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "dailySteps7DaysTotal", *(double *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 0x40) == 0)
  {
LABEL_9:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "dailySteps7daysMean", *(double *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 0x2000) == 0)
  {
LABEL_10:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "daysWithSteps30Days", *(_DWORD *)(a1 + 208));
  int v5 = *(_DWORD *)(a1 + 244);
  if ((v5 & 0x4000) == 0)
  {
LABEL_11:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_67:
  PB::TextFormatter::format(this, "daysWithSteps7Days", *(_DWORD *)(a1 + 212));
  if ((*(_DWORD *)(a1 + 244) & 0x8000) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "errorStatus", *(_DWORD *)(a1 + 216));
LABEL_13:
  uint64_t v6 = *(void *)(a1 + 64);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "eventResult");
  }
  int v7 = *(_DWORD *)(a1 + 244);
  if ((v7 & 0x200000) != 0)
  {
    PB::TextFormatter::format(this, "fusionSuccess", *(unsigned char *)(a1 + 237));
    int v7 = *(_DWORD *)(a1 + 244);
    if ((v7 & 0x80) == 0)
    {
LABEL_17:
      if ((v7 & 0x100) == 0) {
        goto LABEL_18;
      }
      goto LABEL_71;
    }
  }
  else if ((v7 & 0x80) == 0)
  {
    goto LABEL_17;
  }
  PB::TextFormatter::format(this, "hkEndTime", *(double *)(a1 + 72));
  int v7 = *(_DWORD *)(a1 + 244);
  if ((v7 & 0x100) == 0)
  {
LABEL_18:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_71:
  PB::TextFormatter::format(this, "hkStartTime", *(double *)(a1 + 80));
  if ((*(_DWORD *)(a1 + 244) & 0x400000) != 0) {
LABEL_19:
  }
    PB::TextFormatter::format(this, "isHistoricalCompute", *(unsigned char *)(a1 + 238));
LABEL_20:
  uint64_t v8 = *(void *)(a1 + 88);
  if (v8) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v8 + 32))(v8, this, "modelBalanceFeatures");
  }
  uint64_t v9 = *(void *)(a1 + 96);
  if (v9) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v9 + 32))(v9, this, "modelContinuousWalkingFeatures");
  }
  uint64_t v10 = *(void *)(a1 + 104);
  if (v10) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v10 + 32))(v10, this, "modelContinuousWalkingResult");
  }
  uint64_t v11 = *(void *)(a1 + 112);
  if (v11) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v11 + 32))(v11, this, "modelGaitBaselineFeatures");
  }
  uint64_t v12 = *(void *)(a1 + 120);
  if (v12) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v12 + 32))(v12, this, "modelGaitBaselineResult");
  }
  uint64_t v13 = *(void *)(a1 + 128);
  if (v13) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v13 + 32))(v13, this, "modelHarmonicFeatures");
  }
  uint64_t v14 = *(void *)(a1 + 136);
  if (v14) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v14 + 32))(v14, this, "modelHarmonicResult");
  }
  uint64_t v15 = *(void *)(a1 + 144);
  if (v15) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v15 + 32))(v15, this, "modelTemporalDispersionFeatures");
  }
  uint64_t v16 = *(void *)(a1 + 152);
  if (v16) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v16 + 32))(v16, this, "modelTemporalDispersionResult");
  }
  uint64_t v17 = *(void *)(a1 + 160);
  if (v17) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v17 + 32))(v17, this, "modelTemporalEntropyFeatures");
  }
  uint64_t v18 = *(void *)(a1 + 168);
  if (v18) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v18 + 32))(v18, this, "modelTemporalEntropyResult");
  }
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x200) != 0)
  {
    PB::TextFormatter::format(this, "nextClassificationTime", *(double *)(a1 + 176));
    int v19 = *(_DWORD *)(a1 + 244);
    if ((v19 & 0x400) == 0)
    {
LABEL_44:
      if ((v19 & 0x10000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_75;
    }
  }
  else if ((v19 & 0x400) == 0)
  {
    goto LABEL_44;
  }
  PB::TextFormatter::format(this, "rawSteadiness", *(double *)(a1 + 184));
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x10000) == 0)
  {
LABEL_45:
    if ((v19 & 0x800) == 0) {
      goto LABEL_46;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "rejectionStatus", *(_DWORD *)(a1 + 220));
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x800) == 0)
  {
LABEL_46:
    if ((v19 & 0x800000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "steadinessScore", *(double *)(a1 + 192));
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x800000) == 0)
  {
LABEL_47:
    if ((v19 & 0x1000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_78;
  }
LABEL_77:
  PB::TextFormatter::format(this, "steadinessScoreIsValid", *(unsigned char *)(a1 + 239));
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x1000) == 0)
  {
LABEL_48:
    if ((v19 & 0x20000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(this, "unadjustedScore", *(double *)(a1 + 200));
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x20000) == 0)
  {
LABEL_49:
    if ((v19 & 0x40000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(this, "userAge", *(float *)(a1 + 224));
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x40000) == 0)
  {
LABEL_50:
    if ((v19 & 0x1000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(this, "userHeight", *(float *)(a1 + 228));
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x1000000) == 0)
  {
LABEL_51:
    if ((v19 & 0x2000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "userIsAgeSet", *(unsigned char *)(a1 + 240));
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x2000000) == 0)
  {
LABEL_52:
    if ((v19 & 0x4000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(this, "userIsHeightSet", *(unsigned char *)(a1 + 241));
  int v19 = *(_DWORD *)(a1 + 244);
  if ((v19 & 0x4000000) == 0)
  {
LABEL_53:
    if ((v19 & 0x80000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_54;
  }
LABEL_83:
  PB::TextFormatter::format(this, "userIsWeightSet", *(unsigned char *)(a1 + 242));
  if ((*(_DWORD *)(a1 + 244) & 0x80000) != 0) {
LABEL_54:
  }
    PB::TextFormatter::format(this, "userWeight", *(float *)(a1 + 232));
LABEL_55:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101756668(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 244) |= 0x100u;
          unint64_t v20 = *((void *)this + 1);
          if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v20);
          goto LABEL_170;
        case 2u:
          *(_DWORD *)(a1 + 244) |= 0x80u;
          unint64_t v21 = *((void *)this + 1);
          if (v21 > 0xFFFFFFFFFFFFFFF7 || v21 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v21);
          goto LABEL_170;
        case 4u:
          *(_DWORD *)(a1 + 244) |= 0x10000u;
          unint64_t v23 = *((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          uint64_t v25 = *(void *)this;
          if (v23 <= 0xFFFFFFFFFFFFFFF5 && v23 + 10 <= v24)
          {
            char v26 = 0;
            unsigned int v27 = 0;
            uint64_t v28 = 0;
            do
            {
              unint64_t v29 = v23 + 1;
              *((void *)this + 1) = v23 + 1;
              char v30 = *(unsigned char *)(v25 + v23);
              v28 |= (unint64_t)(v30 & 0x7F) << v26;
              if ((v30 & 0x80) == 0) {
                goto LABEL_175;
              }
              v26 += 7;
              unint64_t v23 = v29;
              BOOL v14 = v27++ > 8;
            }
            while (!v14);
LABEL_133:
            LODWORD(v28) = 0;
            goto LABEL_175;
          }
          char v98 = 0;
          unsigned int v99 = 0;
          uint64_t v28 = 0;
          if (v24 <= v23) {
            unint64_t v24 = *((void *)this + 1);
          }
          while (2)
          {
            if (v24 == v23)
            {
              LODWORD(v28) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v100 = v23 + 1;
              char v101 = *(unsigned char *)(v25 + v23);
              *((void *)this + 1) = v100;
              v28 |= (unint64_t)(v101 & 0x7F) << v98;
              if (v101 < 0)
              {
                v98 += 7;
                unint64_t v23 = v100;
                BOOL v14 = v99++ > 8;
                if (v14) {
                  goto LABEL_133;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v28) = 0;
              }
            }
            break;
          }
LABEL_175:
          *(_DWORD *)(a1 + 220) = v28;
          goto LABEL_188;
        case 5u:
          *(_DWORD *)(a1 + 244) |= 0x8000u;
          unint64_t v31 = *((void *)this + 1);
          unint64_t v32 = *((void *)this + 2);
          uint64_t v33 = *(void *)this;
          if (v31 <= 0xFFFFFFFFFFFFFFF5 && v31 + 10 <= v32)
          {
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            do
            {
              unint64_t v37 = v31 + 1;
              *((void *)this + 1) = v31 + 1;
              char v38 = *(unsigned char *)(v33 + v31);
              v36 |= (unint64_t)(v38 & 0x7F) << v34;
              if ((v38 & 0x80) == 0) {
                goto LABEL_179;
              }
              v34 += 7;
              unint64_t v31 = v37;
              BOOL v14 = v35++ > 8;
            }
            while (!v14);
LABEL_140:
            LODWORD(v36) = 0;
            goto LABEL_179;
          }
          char v102 = 0;
          unsigned int v103 = 0;
          uint64_t v36 = 0;
          if (v32 <= v31) {
            unint64_t v32 = *((void *)this + 1);
          }
          while (2)
          {
            if (v32 == v31)
            {
              LODWORD(v36) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v104 = v31 + 1;
              char v105 = *(unsigned char *)(v33 + v31);
              *((void *)this + 1) = v104;
              v36 |= (unint64_t)(v105 & 0x7F) << v102;
              if (v105 < 0)
              {
                v102 += 7;
                unint64_t v31 = v104;
                BOOL v14 = v103++ > 8;
                if (v14) {
                  goto LABEL_140;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v36) = 0;
              }
            }
            break;
          }
LABEL_179:
          *(_DWORD *)(a1 + 216) = v36;
          goto LABEL_188;
        case 6u:
          *(_DWORD *)(a1 + 244) |= 0x40000u;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFFBLL || v39 + 4 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(_DWORD *)(a1 + 228) = *(_DWORD *)(*(void *)this + v39);
          goto LABEL_90;
        case 7u:
          *(_DWORD *)(a1 + 244) |= 0x2000000u;
          unint64_t v40 = *((void *)this + 1);
          if (v40 >= *((void *)this + 2))
          {
            BOOL v43 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v41 = v40 + 1;
            int v42 = *(unsigned __int8 *)(*(void *)this + v40);
            *((void *)this + 1) = v41;
            BOOL v43 = v42 != 0;
          }
          *(unsigned char *)(a1 + 241) = v43;
          goto LABEL_188;
        case 8u:
          *(_DWORD *)(a1 + 244) |= 0x80000u;
          unint64_t v44 = *((void *)this + 1);
          if (v44 > 0xFFFFFFFFFFFFFFFBLL || v44 + 4 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(_DWORD *)(a1 + 232) = *(_DWORD *)(*(void *)this + v44);
          goto LABEL_90;
        case 9u:
          *(_DWORD *)(a1 + 244) |= 0x4000000u;
          unint64_t v45 = *((void *)this + 1);
          if (v45 >= *((void *)this + 2))
          {
            BOOL v48 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v46 = v45 + 1;
            int v47 = *(unsigned __int8 *)(*(void *)this + v45);
            *((void *)this + 1) = v46;
            BOOL v48 = v47 != 0;
          }
          *(unsigned char *)(a1 + 242) = v48;
          goto LABEL_188;
        case 0xAu:
          *(_DWORD *)(a1 + 244) |= 0x200u;
          unint64_t v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFF7 || v49 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 176) = *(void *)(*(void *)this + v49);
          goto LABEL_170;
        case 0xBu:
          *(_DWORD *)(a1 + 244) |= 0x400000u;
          unint64_t v50 = *((void *)this + 1);
          if (v50 >= *((void *)this + 2))
          {
            BOOL v53 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v51 = v50 + 1;
            int v52 = *(unsigned __int8 *)(*(void *)this + v50);
            *((void *)this + 1) = v51;
            BOOL v53 = v52 != 0;
          }
          *(unsigned char *)(a1 + 238) = v53;
          goto LABEL_188;
        case 0xCu:
          operator new();
        case 0xDu:
          *(_DWORD *)(a1 + 244) |= 0x800u;
          unint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 192) = *(void *)(*(void *)this + v54);
          goto LABEL_170;
        case 0xEu:
          *(_DWORD *)(a1 + 244) |= 0x800000u;
          unint64_t v55 = *((void *)this + 1);
          if (v55 >= *((void *)this + 2))
          {
            BOOL v58 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v56 = v55 + 1;
            int v57 = *(unsigned __int8 *)(*(void *)this + v55);
            *((void *)this + 1) = v56;
            BOOL v58 = v57 != 0;
          }
          *(unsigned char *)(a1 + 239) = v58;
          goto LABEL_188;
        case 0xFu:
          *(_DWORD *)(a1 + 244) |= 0x400u;
          unint64_t v59 = *((void *)this + 1);
          if (v59 > 0xFFFFFFFFFFFFFFF7 || v59 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 184) = *(void *)(*(void *)this + v59);
          goto LABEL_170;
        case 0x10u:
          *(_DWORD *)(a1 + 244) |= 0x200000u;
          unint64_t v60 = *((void *)this + 1);
          if (v60 >= *((void *)this + 2))
          {
            BOOL v63 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v61 = v60 + 1;
            int v62 = *(unsigned __int8 *)(*(void *)this + v60);
            *((void *)this + 1) = v61;
            BOOL v63 = v62 != 0;
          }
          *(unsigned char *)(a1 + 237) = v63;
          goto LABEL_188;
        case 0x11u:
          operator new();
        case 0x12u:
          operator new();
        case 0x13u:
          operator new();
        case 0x14u:
          operator new();
        case 0x15u:
          operator new();
        case 0x16u:
          operator new();
        case 0x17u:
          operator new();
        case 0x18u:
          operator new();
        case 0x19u:
          *(_DWORD *)(a1 + 244) |= 0x100000u;
          unint64_t v64 = *((void *)this + 1);
          if (v64 >= *((void *)this + 2))
          {
            BOOL v67 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v65 = v64 + 1;
            int v66 = *(unsigned __int8 *)(*(void *)this + v64);
            *((void *)this + 1) = v65;
            BOOL v67 = v66 != 0;
          }
          *(unsigned char *)(a1 + 236) = v67;
          goto LABEL_188;
        case 0x1Au:
          operator new();
        case 0x1Bu:
          *(_DWORD *)(a1 + 244) |= 1u;
          unint64_t v68 = *((void *)this + 1);
          if (v68 > 0xFFFFFFFFFFFFFFF7 || v68 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v68);
          goto LABEL_170;
        case 0x1Cu:
          *(_DWORD *)(a1 + 244) |= 8u;
          unint64_t v69 = *((void *)this + 1);
          if (v69 > 0xFFFFFFFFFFFFFFF7 || v69 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v69);
          goto LABEL_170;
        case 0x1Du:
          *(_DWORD *)(a1 + 244) |= 0x20000u;
          unint64_t v70 = *((void *)this + 1);
          if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(_DWORD *)(a1 + 224) = *(_DWORD *)(*(void *)this + v70);
LABEL_90:
          uint64_t v71 = *((void *)this + 1) + 4;
          goto LABEL_171;
        case 0x1Eu:
          *(_DWORD *)(a1 + 244) |= 0x1000000u;
          unint64_t v72 = *((void *)this + 1);
          if (v72 >= *((void *)this + 2))
          {
            BOOL v75 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v73 = v72 + 1;
            int v74 = *(unsigned __int8 *)(*(void *)this + v72);
            *((void *)this + 1) = v73;
            BOOL v75 = v74 != 0;
          }
          *(unsigned char *)(a1 + 240) = v75;
          goto LABEL_188;
        case 0x1Fu:
          *(_DWORD *)(a1 + 244) |= 0x1000u;
          unint64_t v76 = *((void *)this + 1);
          if (v76 > 0xFFFFFFFFFFFFFFF7 || v76 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 200) = *(void *)(*(void *)this + v76);
          goto LABEL_170;
        case 0x20u:
          *(_DWORD *)(a1 + 244) |= 0x40u;
          unint64_t v77 = *((void *)this + 1);
          if (v77 > 0xFFFFFFFFFFFFFFF7 || v77 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v77);
          goto LABEL_170;
        case 0x21u:
          *(_DWORD *)(a1 + 244) |= 2u;
          unint64_t v78 = *((void *)this + 1);
          if (v78 > 0xFFFFFFFFFFFFFFF7 || v78 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v78);
          goto LABEL_170;
        case 0x22u:
          *(_DWORD *)(a1 + 244) |= 0x10u;
          unint64_t v79 = *((void *)this + 1);
          if (v79 > 0xFFFFFFFFFFFFFFF7 || v79 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v79);
          goto LABEL_170;
        case 0x23u:
          *(_DWORD *)(a1 + 244) |= 0x4000u;
          unint64_t v80 = *((void *)this + 1);
          unint64_t v81 = *((void *)this + 2);
          uint64_t v82 = *(void *)this;
          if (v80 <= 0xFFFFFFFFFFFFFFF5 && v80 + 10 <= v81)
          {
            char v83 = 0;
            unsigned int v84 = 0;
            uint64_t v85 = 0;
            do
            {
              unint64_t v86 = v80 + 1;
              *((void *)this + 1) = v80 + 1;
              char v87 = *(unsigned char *)(v82 + v80);
              v85 |= (unint64_t)(v87 & 0x7F) << v83;
              if ((v87 & 0x80) == 0) {
                goto LABEL_183;
              }
              v83 += 7;
              unint64_t v80 = v86;
              BOOL v14 = v84++ > 8;
            }
            while (!v14);
LABEL_161:
            LODWORD(v85) = 0;
            goto LABEL_183;
          }
          char v106 = 0;
          unsigned int v107 = 0;
          uint64_t v85 = 0;
          if (v81 <= v80) {
            unint64_t v81 = *((void *)this + 1);
          }
          while (2)
          {
            if (v81 == v80)
            {
              LODWORD(v85) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v108 = v80 + 1;
              char v109 = *(unsigned char *)(v82 + v80);
              *((void *)this + 1) = v108;
              v85 |= (unint64_t)(v109 & 0x7F) << v106;
              if (v109 < 0)
              {
                v106 += 7;
                unint64_t v80 = v108;
                BOOL v14 = v107++ > 8;
                if (v14) {
                  goto LABEL_161;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v85) = 0;
              }
            }
            break;
          }
LABEL_183:
          *(_DWORD *)(a1 + 212) = v85;
          goto LABEL_188;
        case 0x24u:
          *(_DWORD *)(a1 + 244) |= 0x2000u;
          unint64_t v88 = *((void *)this + 1);
          unint64_t v89 = *((void *)this + 2);
          uint64_t v90 = *(void *)this;
          if (v88 <= 0xFFFFFFFFFFFFFFF5 && v88 + 10 <= v89)
          {
            char v91 = 0;
            unsigned int v92 = 0;
            uint64_t v93 = 0;
            do
            {
              unint64_t v94 = v88 + 1;
              *((void *)this + 1) = v88 + 1;
              char v95 = *(unsigned char *)(v90 + v88);
              v93 |= (unint64_t)(v95 & 0x7F) << v91;
              if ((v95 & 0x80) == 0) {
                goto LABEL_187;
              }
              v91 += 7;
              unint64_t v88 = v94;
              BOOL v14 = v92++ > 8;
            }
            while (!v14);
LABEL_168:
            LODWORD(v93) = 0;
            goto LABEL_187;
          }
          char v110 = 0;
          unsigned int v111 = 0;
          uint64_t v93 = 0;
          if (v89 <= v88) {
            unint64_t v89 = *((void *)this + 1);
          }
          break;
        case 0x25u:
          *(_DWORD *)(a1 + 244) |= 0x20u;
          unint64_t v96 = *((void *)this + 1);
          if (v96 > 0xFFFFFFFFFFFFFFF7 || v96 + 8 > *((void *)this + 2)) {
            goto LABEL_124;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v96);
          goto LABEL_170;
        case 0x26u:
          *(_DWORD *)(a1 + 244) |= 4u;
          unint64_t v97 = *((void *)this + 1);
          if (v97 <= 0xFFFFFFFFFFFFFFF7 && v97 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 24) = *(void *)(*(void *)this + v97);
LABEL_170:
            uint64_t v71 = *((void *)this + 1) + 8;
LABEL_171:
            *((void *)this + 1) = v71;
          }
          else
          {
LABEL_124:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_188;
        case 0x27u:
          operator new();
        case 0x28u:
          operator new();
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_188;
      }
      while (1)
      {
        if (v89 == v88)
        {
          LODWORD(v93) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_187;
        }
        unint64_t v112 = v88 + 1;
        char v113 = *(unsigned char *)(v90 + v88);
        *((void *)this + 1) = v112;
        v93 |= (unint64_t)(v113 & 0x7F) << v110;
        if ((v113 & 0x80) == 0) {
          break;
        }
        v110 += 7;
        unint64_t v88 = v112;
        BOOL v14 = v111++ > 8;
        if (v14) {
          goto LABEL_168;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v93) = 0;
      }
LABEL_187:
      *(_DWORD *)(a1 + 208) = v93;
LABEL_188:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101757778(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 244);
  if ((v4 & 0x100) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 80), 1u);
    int v4 = *(_DWORD *)(v3 + 244);
    if ((v4 & 0x80) == 0)
    {
LABEL_3:
      if ((v4 & 0x10000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_60;
    }
  }
  else if ((v4 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72), 2u);
  int v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x10000) == 0)
  {
LABEL_4:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 220), 4u);
  int v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x8000) == 0)
  {
LABEL_5:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 216), 5u);
  int v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x40000) == 0)
  {
LABEL_6:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 228), 6u);
  int v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_7:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 241), 7u);
  int v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x80000) == 0)
  {
LABEL_8:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 232), 8u);
  int v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 242), 9u);
  int v4 = *(_DWORD *)(v3 + 244);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_66:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 176), 0xAu);
  if ((*(_DWORD *)(v3 + 244) & 0x400000) != 0) {
LABEL_11:
  }
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 238), 0xBu);
LABEL_12:
  int v5 = *(const PB::Base **)(v3 + 64);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5, 0xCu);
  }
  int v6 = *(_DWORD *)(v3 + 244);
  if ((v6 & 0x800) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 192), 0xDu);
    int v6 = *(_DWORD *)(v3 + 244);
    if ((v6 & 0x800000) == 0)
    {
LABEL_16:
      if ((v6 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_70;
    }
  }
  else if ((v6 & 0x800000) == 0)
  {
    goto LABEL_16;
  }
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 239), 0xEu);
  int v6 = *(_DWORD *)(v3 + 244);
  if ((v6 & 0x400) == 0)
  {
LABEL_17:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_70:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 184), 0xFu);
  if ((*(_DWORD *)(v3 + 244) & 0x200000) != 0) {
LABEL_18:
  }
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 237), 0x10u);
LABEL_19:
  int v7 = *(const PB::Base **)(v3 + 120);
  if (v7) {
    uint64_t result = PB::Writer::writeSubmessage(this, v7, 0x11u);
  }
  uint64_t v8 = *(const PB::Base **)(v3 + 112);
  if (v8) {
    uint64_t result = PB::Writer::writeSubmessage(this, v8, 0x12u);
  }
  char v9 = *(const PB::Base **)(v3 + 104);
  if (v9) {
    uint64_t result = PB::Writer::writeSubmessage(this, v9, 0x13u);
  }
  unsigned int v10 = *(const PB::Base **)(v3 + 96);
  if (v10) {
    uint64_t result = PB::Writer::writeSubmessage(this, v10, 0x14u);
  }
  unint64_t v11 = *(const PB::Base **)(v3 + 152);
  if (v11) {
    uint64_t result = PB::Writer::writeSubmessage(this, v11, 0x15u);
  }
  unint64_t v12 = *(const PB::Base **)(v3 + 144);
  if (v12) {
    uint64_t result = PB::Writer::writeSubmessage(this, v12, 0x16u);
  }
  char v13 = *(const PB::Base **)(v3 + 168);
  if (v13) {
    uint64_t result = PB::Writer::writeSubmessage(this, v13, 0x17u);
  }
  BOOL v14 = *(const PB::Base **)(v3 + 160);
  if (v14) {
    uint64_t result = PB::Writer::writeSubmessage(this, v14, 0x18u);
  }
  if ((*(unsigned char *)(v3 + 246) & 0x10) != 0) {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 236), 0x19u);
  }
  char v15 = *(const PB::Base **)(v3 + 88);
  if (v15) {
    uint64_t result = PB::Writer::writeSubmessage(this, v15, 0x1Au);
  }
  int v16 = *(_DWORD *)(v3 + 244);
  if (v16)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 0x1Bu);
    int v16 = *(_DWORD *)(v3 + 244);
    if ((v16 & 8) == 0)
    {
LABEL_41:
      if ((v16 & 0x20000) == 0) {
        goto LABEL_42;
      }
      goto LABEL_74;
    }
  }
  else if ((v16 & 8) == 0)
  {
    goto LABEL_41;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 0x1Cu);
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x20000) == 0)
  {
LABEL_42:
    if ((v16 & 0x1000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 224), 0x1Du);
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x1000000) == 0)
  {
LABEL_43:
    if ((v16 & 0x1000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 240), 0x1Eu);
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x1000) == 0)
  {
LABEL_44:
    if ((v16 & 0x40) == 0) {
      goto LABEL_45;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 200), 0x1Fu);
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x40) == 0)
  {
LABEL_45:
    if ((v16 & 2) == 0) {
      goto LABEL_46;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 0x20u);
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 2) == 0)
  {
LABEL_46:
    if ((v16 & 0x10) == 0) {
      goto LABEL_47;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 0x21u);
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x10) == 0)
  {
LABEL_47:
    if ((v16 & 0x4000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 0x22u);
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x4000) == 0)
  {
LABEL_48:
    if ((v16 & 0x2000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 212), 0x23u);
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x2000) == 0)
  {
LABEL_49:
    if ((v16 & 0x20) == 0) {
      goto LABEL_50;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 208), 0x24u);
  int v16 = *(_DWORD *)(v3 + 244);
  if ((v16 & 0x20) == 0)
  {
LABEL_50:
    if ((v16 & 4) == 0) {
      goto LABEL_52;
    }
    goto LABEL_51;
  }
LABEL_82:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 0x25u);
  if ((*(_DWORD *)(v3 + 244) & 4) != 0) {
LABEL_51:
  }
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 0x26u);
LABEL_52:
  unint64_t v17 = *(const PB::Base **)(v3 + 136);
  if (v17) {
    uint64_t result = PB::Writer::writeSubmessage(this, v17, 0x27u);
  }
  char v18 = *(const PB::Base **)(v3 + 128);
  if (v18)
  {
    return PB::Writer::writeSubmessage(this, v18, 0x28u);
  }
  return result;
}

uint64_t sub_101757B94(uint64_t result)
{
  *(void *)uint64_t result = &off_102338A98;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_101757BBC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_101757BF4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338A98;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if ((v2 & 4) != 0)
  {
    LODWORD(result) = *(_DWORD *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(a1 + 28) = 4;
    *(_DWORD *)(a1 + 24) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 28) = v3;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 28) = v3 | 1;
    *(double *)(a1 + 8) = result;
  }
  return result;
}

uint64_t sub_101757C74(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "calories_kCal", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "globalMachtime", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 28) & 2) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "localMachtime", *(double *)(a1 + 16));
LABEL_5:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101757D18(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3) {
        break;
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 28) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
          goto LABEL_32;
        }
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_36:
        unint64_t v2 = *((void *)this + 1) + 8;
        goto LABEL_37;
      }
      if (v20 != 1)
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        goto LABEL_38;
      }
      *(unsigned char *)(a1 + 28) |= 4u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2))
      {
LABEL_32:
        *((unsigned char *)this + 24) = 1;
        goto LABEL_38;
      }
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
      unint64_t v2 = *((void *)this + 1) + 4;
LABEL_37:
      *((void *)this + 1) = v2;
LABEL_38:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    *(unsigned char *)(a1 + 28) |= 1u;
    unint64_t v2 = *((void *)this + 1);
    if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
      goto LABEL_32;
    }
    *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
    goto LABEL_36;
  }
  return v4 == 0;
}

uint64_t sub_101757F3C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if ((v4 & 4) == 0)
  {
    if ((*(unsigned char *)(result + 28) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 2u);
    if ((*(unsigned char *)(v3 + 28) & 1) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(result + 24), 1u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5, 3u);
}

uint64_t sub_101757FC8(uint64_t result)
{
  *(void *)uint64_t result = &off_102338AD0;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_101757FF0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_101758028(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338AD0;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if ((v2 & 4) != 0)
  {
    LODWORD(result) = *(_DWORD *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(a1 + 28) = 4;
    *(_DWORD *)(a1 + 24) = LODWORD(result);
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
LABEL_5:
    double result = *(double *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(a1 + 28) = v3;
    *(double *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    *(unsigned char *)(a1 + 28) = v3 | 1;
    *(double *)(a1 + 8) = result;
  }
  return result;
}

uint64_t sub_1017580A8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "calories_kCal", *(float *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "globalMachtime", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 28) & 2) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "localMachtime", *(double *)(a1 + 16));
LABEL_5:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175814C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3) {
        break;
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 28) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
          goto LABEL_32;
        }
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_36:
        unint64_t v2 = *((void *)this + 1) + 8;
        goto LABEL_37;
      }
      if (v20 != 1)
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        goto LABEL_38;
      }
      *(unsigned char *)(a1 + 28) |= 4u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2))
      {
LABEL_32:
        *((unsigned char *)this + 24) = 1;
        goto LABEL_38;
      }
      *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
      unint64_t v2 = *((void *)this + 1) + 4;
LABEL_37:
      *((void *)this + 1) = v2;
LABEL_38:
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    *(unsigned char *)(a1 + 28) |= 1u;
    unint64_t v2 = *((void *)this + 1);
    if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
      goto LABEL_32;
    }
    *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
    goto LABEL_36;
  }
  return v4 == 0;
}

uint64_t sub_101758370(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if ((v4 & 4) == 0)
  {
    if ((*(unsigned char *)(result + 28) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 2u);
    if ((*(unsigned char *)(v3 + 28) & 1) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(result + 24), 1u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 8);

  return PB::Writer::write(this, v5, 3u);
}

uint64_t sub_1017583FC(uint64_t result)
{
  *(void *)uint64_t result = &off_102338B08;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_101758424(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10175845C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338B08;
  *(_DWORD *)(result + 24) = 0;
  if ((*(unsigned char *)(a2 + 24) & 2) != 0)
  {
    uint64_t v3 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 24) = 2;
    *(void *)(result + 16) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 24))
  {
LABEL_5:
    uint64_t v4 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 24) = v2;
    *(void *)(result + 8) = v4;
  }
  return result;
}

uint64_t sub_1017584C0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if (v5)
  {
    PB::TextFormatter::format(this, "enclosureMaterial", *(void *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 24);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175853C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              uint64_t v25 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v30 = v21++;
            char v31 = *(unsigned char *)(v22 + v30);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v25 = 0;
          }
LABEL_46:
          unint64_t v2 = v30 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              break;
            }
          }
        }
LABEL_47:
        *(void *)(a1 + 8) = v25;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017587CC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16), 1u);
    char v4 = *(unsigned char *)(v3 + 24);
  }
  if (v4)
  {
    unint64_t v5 = *(void *)(v3 + 8);
    return PB::Writer::writeVarInt(this, v5, 2u);
  }
  return result;
}

uint64_t sub_101758838(uint64_t result)
{
  *(void *)uint64_t result = &off_102338B40;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void sub_101758860(PB::Base *this)
{
  *(void *)this = &off_102338B40;
  uint64_t v2 = *((void *)this + 3);
  *((void *)this + 3) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_1017588E4(PB::Base *a1)
{
  sub_101758860(a1);

  operator delete();
}

uint64_t sub_10175891C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338B40;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  if ((*(unsigned char *)(a2 + 32) & 2) != 0)
  {
    uint64_t v3 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 32) = 2;
    *(void *)(result + 16) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 32))
  {
LABEL_5:
    uint64_t v4 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 32) = v2;
    *(void *)(result + 8) = v4;
  }
LABEL_6:
  if (*(void *)(a2 + 24)) {
    operator new();
  }
  return result;
}

uint64_t sub_101758A08(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if (v5)
  {
    PB::TextFormatter::format(this, "globalMachtime", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 32);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "localMachtime", *(double *)(a1 + 16));
  }
  uint64_t v6 = *(void *)(a1 + 24);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101758ABC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    do
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3) {
        operator new();
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 32) |= 1u;
        unint64_t v22 = *((void *)this + 1);
        if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
          goto LABEL_30;
        }
        *(void *)(a1 + 8) = *(void *)(*(void *)this + v22);
      }
      else
      {
        if (v20 != 1)
        {
          uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_35;
        }
        *(unsigned char *)(a1 + 32) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        if (v21 > 0xFFFFFFFFFFFFFFF7 || v21 + 8 > *((void *)this + 2))
        {
LABEL_30:
          *((unsigned char *)this + 24) = 1;
          goto LABEL_35;
        }
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v21);
      }
      *((void *)this + 1) += 8;
LABEL_35:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
    }
    while (v2 < v3 && !*((unsigned char *)this + 24));
  }
  return v4 == 0;
}

uint64_t sub_101758D50(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 16), 1u);
    char v4 = *(unsigned char *)(v3 + 32);
  }
  if (v4) {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 2u);
  }
  char v5 = *(const PB::Base **)(v3 + 24);
  if (v5)
  {
    return PB::Writer::writeSubmessage(this, v5, 3u);
  }
  return result;
}

uint64_t sub_101758DD0(uint64_t result)
{
  *(void *)uint64_t result = &off_102338B78;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_101758DF8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101758E30(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338B78;
  *(_DWORD *)(result + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 40) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(result + 40) = v3;
    *(_DWORD *)(result + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 32);
    v3 |= 0x10u;
    *(unsigned char *)(result + 40) = v3;
    *(_DWORD *)(result + 32) = v6;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(unsigned char *)(result + 40) = v3;
  *(_DWORD *)(result + 28) = v7;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_16;
  }
LABEL_15:
  char v8 = *(unsigned char *)(a2 + 37);
  v3 |= 0x40u;
  *(unsigned char *)(result + 40) = v3;
  *(unsigned char *)(result + 37) = v8;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_17;
  }
LABEL_16:
  char v9 = *(unsigned char *)(a2 + 36);
  v3 |= 0x20u;
  *(unsigned char *)(result + 40) = v3;
  *(unsigned char *)(result + 36) = v9;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_18:
    uint64_t v11 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 40) = v3 | 2;
    *(void *)(result + 16) = v11;
    return result;
  }
LABEL_17:
  char v10 = *(unsigned char *)(a2 + 38);
  v3 |= 0x80u;
  *(unsigned char *)(result + 40) = v3;
  *(unsigned char *)(result + 38) = v10;
  if ((*(unsigned char *)(a2 + 40) & 2) != 0) {
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_101758F3C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if (v5)
  {
    PB::TextFormatter::format(this, "date", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "isForcedOnWristEnabled", *(unsigned char *)(a1 + 36));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "isOnCharger", *(unsigned char *)(a1 + 37));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x80) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "isWristDetectionEnabled", *(unsigned char *)(a1 + 38));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 4) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "onWrist", *(_DWORD *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "onWristConfidence", *(_DWORD *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_19:
  PB::TextFormatter::format(this, "onWristSensor", *(_DWORD *)(a1 + 32));
  if ((*(unsigned char *)(a1 + 40) & 2) != 0) {
LABEL_9:
  }
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 16));
LABEL_10:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101759080(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 40) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_116;
            case 2u:
              *(unsigned char *)(a1 + 40) |= 4u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_100;
                  }
                  unint64_t v53 = v21++;
                  char v54 = *(unsigned char *)(v22 + v53);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_99:
                    unint64_t v2 = v53 + 1;
                    goto LABEL_100;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_99;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_100;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_100:
              *(_DWORD *)(a1 + 24) = v25;
              goto LABEL_116;
            case 3u:
              *(unsigned char *)(a1 + 40) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v55 = 0;
                unsigned int v56 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_105;
                  }
                  unint64_t v57 = v27++;
                  char v58 = *(unsigned char *)(v28 + v57);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v58 & 0x7F) << v55;
                  if ((v58 & 0x80) == 0) {
                    break;
                  }
                  v55 += 7;
                  BOOL v14 = v56++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_104:
                    unint64_t v2 = v57 + 1;
                    goto LABEL_105;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_104;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_105;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_105:
              *(_DWORD *)(a1 + 32) = v31;
              goto LABEL_116;
            case 4u:
              *(unsigned char *)(a1 + 40) |= 8u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_110;
                  }
                  unint64_t v61 = v33++;
                  char v62 = *(unsigned char *)(v34 + v61);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_109:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_110;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_109;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_110;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_110:
              *(_DWORD *)(a1 + 28) = v37;
              goto LABEL_116;
            case 5u:
              *(unsigned char *)(a1 + 40) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v40 = v39 != 0;
              }
              *(unsigned char *)(a1 + 37) = v40;
              goto LABEL_116;
            case 6u:
              *(unsigned char *)(a1 + 40) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v42 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v41 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v42 = v41 != 0;
              }
              *(unsigned char *)(a1 + 36) = v42;
              goto LABEL_116;
            case 7u:
              *(unsigned char *)(a1 + 40) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v44 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v43 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v44 = v43 != 0;
              }
              *(unsigned char *)(a1 + 38) = v44;
              goto LABEL_116;
            case 8u:
              *(unsigned char *)(a1 + 40) |= 2u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    uint64_t v49 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_115;
                  }
                  unint64_t v65 = v45++;
                  char v66 = *(unsigned char *)(v46 + v65);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    uint64_t v49 = 0;
LABEL_114:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_115;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v49 = 0;
                }
                goto LABEL_114;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_115;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              uint64_t v49 = 0;
LABEL_115:
              *(void *)(a1 + 16) = v49;
LABEL_116:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_116;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_1017596DC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 24), 2u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 32), 3u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 28), 4u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 37), 5u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x80) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 38), 7u);
    if ((*(unsigned char *)(v3 + 40) & 2) == 0) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 36), 6u);
  char v4 = *(unsigned char *)(v3 + 40);
  if (v4 < 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_17:
  unint64_t v5 = *(void *)(v3 + 16);

  return PB::Writer::writeVarInt(this, v5, 8u);
}

uint64_t sub_1017597F4(uint64_t result)
{
  *(void *)uint64_t result = &off_102338BB0;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void sub_10175981C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101759854(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338BB0;
  *(_DWORD *)(result + 16) = 0;
  if ((*(unsigned char *)(a2 + 16) & 2) != 0)
  {
    int v3 = *(_DWORD *)(a2 + 12);
    *(unsigned char *)(result + 16) = 2;
    *(_DWORD *)(result + 12) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 16))
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 16) = v2;
    *(_DWORD *)(result + 8) = v4;
  }
  return result;
}

uint64_t sub_1017598B8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 16);
  if (v5)
  {
    PB::TextFormatter::format(this, "crown", *(_DWORD *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 16);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "wrist", *(_DWORD *)(a1 + 12));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101759934(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 16) |= 1u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_64;
            }
            unint64_t v40 = v27++;
            char v41 = *(unsigned char *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_63;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_63:
          unint64_t v3 = v40 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v3 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v3;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }
LABEL_64:
        *(_DWORD *)(a1 + 8) = v31;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 16) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_60;
            }
            unint64_t v36 = v21++;
            char v37 = *(unsigned char *)(v22 + v36);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_59:
          unint64_t v3 = v36 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v3 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v3;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_60:
        *(_DWORD *)(a1 + 12) = v25;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101759C60(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 16);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 12), 1u);
    char v4 = *(unsigned char *)(v3 + 16);
  }
  if (v4)
  {
    unsigned int v5 = *(_DWORD *)(v3 + 8);
    return PB::Writer::writeVarInt(this, v5, 2u);
  }
  return result;
}

void sub_101759CD0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101759D08(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338BE8;
  *(_DWORD *)(result + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 32) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 2) == 0)
  {
    if ((v2 & 8) == 0) {
      return result;
    }
LABEL_10:
    char v7 = *(unsigned char *)(a2 + 28);
    *(unsigned char *)(result + 32) = v3 | 8;
    *(unsigned char *)(result + 28) = v7;
    return result;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(result + 32) = v3;
  *(void *)(result + 16) = v6;
  if ((*(unsigned char *)(a2 + 32) & 8) != 0) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_101759DA0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if (v5)
  {
    PB::TextFormatter::format(this, "entryId", *(void *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "isMoving", *(unsigned char *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(this, "rssi", *(_DWORD *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
LABEL_6:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101759E64(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v35 = 0;
                unsigned int v36 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    uint64_t v24 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_64;
                  }
                  unint64_t v37 = v20++;
                  char v38 = *(unsigned char *)(v21 + v37);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v38 & 0x7F) << v35;
                  if ((v38 & 0x80) == 0) {
                    break;
                  }
                  v35 += 7;
                  BOOL v14 = v36++ > 8;
                  if (v14)
                  {
                    uint64_t v24 = 0;
                    goto LABEL_63;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v24 = 0;
                }
LABEL_63:
                unint64_t v2 = v37 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_64;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                uint64_t v24 = 0;
              }
LABEL_64:
              *(void *)(a1 + 8) = v24;
              goto LABEL_70;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_69;
                  }
                  unint64_t v41 = v27++;
                  char v42 = *(unsigned char *)(v28 + v41);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_68:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_69;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_68;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_69;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_69:
              *(_DWORD *)(a1 + 24) = -(v31 & 1) ^ ((int)v31 >> 1);
LABEL_70:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_70;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 28) = v34;
              goto LABEL_70;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_70;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10175A25C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 3u);
      if ((*(unsigned char *)(v3 + 32) & 8) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeSInt(this, *(_DWORD *)(v3 + 24), 2u);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return result;
  }
LABEL_9:
  char v5 = *(unsigned char *)(v3 + 28);

  return PB::Writer::write(this, v5, 4u);
}

void *sub_10175A304(void *result)
{
  *uint64_t result = off_102338C20;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void sub_10175A328(void **a1)
{
  *a1 = off_102338C20;
  unint64_t v2 = a1 + 1;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

void sub_10175A384(void **a1)
{
  *a1 = off_102338C20;
  unint64_t v2 = a1 + 1;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
  operator delete();
}

void *sub_10175A3F4(void *result, uint64_t a2)
{
  result[1] = 0;
  *uint64_t result = off_102338C20;
  result[2] = 0;
  result[3] = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_10175A46C();
  }
  return result;
}

void sub_10175A46C()
{
}

void sub_10175A570(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10175A5B8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(uint64_t **)(a1 + 8);
  uint64_t v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "entries");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175A650(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        sub_10175A80C();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_10175A80C()
{
}

void sub_10175A924(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10175A968(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base ***)(result + 8);
  for (i = *(const PB::Base ***)(result + 16); v2 != i; uint64_t result = PB::Writer::writeSubmessage(this, v5, 1u))
    char v5 = *v2++;
  return result;
}

uint64_t sub_10175A9B4(uint64_t result)
{
  *(void *)uint64_t result = &off_102338C58;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void sub_10175A9DC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10175AA14(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338C58;
  *(_DWORD *)(result + 16) = 0;
  if ((*(unsigned char *)(a2 + 16) & 2) != 0)
  {
    int v3 = *(_DWORD *)(a2 + 12);
    *(unsigned char *)(result + 16) = 2;
    *(_DWORD *)(result + 12) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 16) & 1) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 16))
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 8);
    *(unsigned char *)(result + 16) = v2;
    *(_DWORD *)(result + 8) = v4;
  }
  return result;
}

uint64_t sub_10175AA78(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 16);
  if (v5)
  {
    PB::TextFormatter::format(this, "activityType", *(_DWORD *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 16);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "motionNotification", *(_DWORD *)(a1 + 12));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175AAF4(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 16) |= 1u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_64;
            }
            unint64_t v40 = v27++;
            char v41 = *(unsigned char *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_63;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_63:
          unint64_t v3 = v40 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v3 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v3;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }
LABEL_64:
        *(_DWORD *)(a1 + 8) = v31;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 16) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_60;
            }
            unint64_t v36 = v21++;
            char v37 = *(unsigned char *)(v22 + v36);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_59:
          unint64_t v3 = v36 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v3 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v3;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_60:
        *(_DWORD *)(a1 + 12) = v25;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10175AE20(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 16);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 12), 1u);
    char v4 = *(unsigned char *)(v3 + 16);
  }
  if (v4)
  {
    unsigned int v5 = *(_DWORD *)(v3 + 8);
    return PB::Writer::writeVarInt(this, v5, 2u);
  }
  return result;
}

uint64_t sub_10175AE8C(uint64_t result)
{
  *(void *)uint64_t result = &off_102338C90;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_10175AEB4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10175AEEC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338C90;
  *(_DWORD *)(result + 64) = 0;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x200) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 60);
    __int16 v3 = 512;
    *(_WORD *)(result + 64) = 512;
    *(_DWORD *)(result + 60) = v4;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 40);
    v3 |= 0x10u;
    *(_WORD *)(result + 64) = v3;
    *(_DWORD *)(result + 40) = v5;
    __int16 v2 = *(_WORD *)(a2 + 64);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(_WORD *)(result + 64) = v3;
    *(void *)(result + 16) = v6;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 32) = v7;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 1) == 0)
  {
LABEL_9:
    if ((v2 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v8 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 8) = v8;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x80) == 0)
  {
LABEL_10:
    if ((v2 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v9 = *(_DWORD *)(a2 + 52);
  v3 |= 0x80u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 52) = v9;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x100) == 0)
  {
LABEL_11:
    if ((v2 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v10 = *(_DWORD *)(a2 + 56);
  v3 |= 0x100u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 56) = v10;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x40) == 0)
  {
LABEL_12:
    if ((v2 & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v11 = *(_DWORD *)(a2 + 48);
  v3 |= 0x40u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 48) = v11;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 4) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_22:
    int v13 = *(_DWORD *)(a2 + 44);
    *(_WORD *)(result + 64) = v3 | 0x20;
    *(_DWORD *)(result + 44) = v13;
    return result;
  }
LABEL_21:
  uint64_t v12 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 24) = v12;
  if ((*(_WORD *)(a2 + 64) & 0x20) != 0) {
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_10175B030(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 64);
  if (v5)
  {
    PB::TextFormatter::format(this, "endTime", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 64);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "eventTime", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "eventType", *(_DWORD *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "genericWorkoutLabel", *(_DWORD *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 4) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "poolLength", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 8) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "swimLocation", *(_DWORD *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "workoutLocationType", *(_DWORD *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_23:
  PB::TextFormatter::format(this, "workoutMode", *(_DWORD *)(a1 + 56));
  if ((*(_WORD *)(a1 + 64) & 0x200) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(this, "workoutType", *(_DWORD *)(a1 + 60));
LABEL_12:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175B1B4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 64) |= 0x200u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    LODWORD(v24) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_126;
                  }
                  unint64_t v59 = v20++;
                  char v60 = *(unsigned char *)(v21 + v59);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_125;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v24) = 0;
                }
LABEL_125:
                unint64_t v2 = v59 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_126;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                LODWORD(v24) = 0;
              }
LABEL_126:
              *(_DWORD *)(a1 + 60) = v24;
              goto LABEL_152;
            case 2u:
              *(_WORD *)(a1 + 64) |= 0x10u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v61 = 0;
                unsigned int v62 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_131;
                  }
                  unint64_t v63 = v27++;
                  char v64 = *(unsigned char *)(v28 + v63);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v64 & 0x7F) << v61;
                  if ((v64 & 0x80) == 0) {
                    break;
                  }
                  v61 += 7;
                  BOOL v14 = v62++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_130:
                    unint64_t v2 = v63 + 1;
                    goto LABEL_131;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_130;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_131;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_131:
              *(_DWORD *)(a1 + 40) = v31;
              goto LABEL_152;
            case 3u:
              *(_WORD *)(a1 + 64) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_70;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_121;
            case 4u:
              *(_WORD *)(a1 + 64) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_70;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_121;
            case 5u:
              *(_WORD *)(a1 + 64) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_70;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_121;
            case 6u:
              *(_WORD *)(a1 + 64) |= 0x80u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v65 = 0;
                unsigned int v66 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_136;
                  }
                  unint64_t v67 = v33++;
                  char v68 = *(unsigned char *)(v34 + v67);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v68 & 0x7F) << v65;
                  if ((v68 & 0x80) == 0) {
                    break;
                  }
                  v65 += 7;
                  BOOL v14 = v66++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_135:
                    unint64_t v2 = v67 + 1;
                    goto LABEL_136;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_135;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_136;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_136:
              *(_DWORD *)(a1 + 52) = v37;
              goto LABEL_152;
            case 7u:
              *(_WORD *)(a1 + 64) |= 0x100u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v69 = 0;
                unsigned int v70 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_141;
                  }
                  unint64_t v71 = v39++;
                  char v72 = *(unsigned char *)(v40 + v71);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v72 & 0x7F) << v69;
                  if ((v72 & 0x80) == 0) {
                    break;
                  }
                  v69 += 7;
                  BOOL v14 = v70++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_140:
                    unint64_t v2 = v71 + 1;
                    goto LABEL_141;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_140;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_141;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_141:
              *(_DWORD *)(a1 + 56) = v43;
              goto LABEL_152;
            case 8u:
              *(_WORD *)(a1 + 64) |= 0x40u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v73 = 0;
                unsigned int v74 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_146;
                  }
                  unint64_t v75 = v45++;
                  char v76 = *(unsigned char *)(v46 + v75);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v76 & 0x7F) << v73;
                  if ((v76 & 0x80) == 0) {
                    break;
                  }
                  v73 += 7;
                  BOOL v14 = v74++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_145:
                    unint64_t v2 = v75 + 1;
                    goto LABEL_146;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_145;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_146;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_146:
              *(_DWORD *)(a1 + 48) = v49;
              goto LABEL_152;
            case 9u:
              *(_WORD *)(a1 + 64) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_121:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_70:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_152;
            case 0xAu:
              *(_WORD *)(a1 + 64) |= 0x20u;
              unint64_t v51 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v52 = *(void *)this;
              if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
              {
                char v77 = 0;
                unsigned int v78 = 0;
                uint64_t v55 = 0;
                if (v2 <= v51) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v51)
                  {
                    LODWORD(v55) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_151;
                  }
                  unint64_t v79 = v51++;
                  char v80 = *(unsigned char *)(v52 + v79);
                  *((void *)this + 1) = v51;
                  v55 |= (unint64_t)(v80 & 0x7F) << v77;
                  if ((v80 & 0x80) == 0) {
                    break;
                  }
                  v77 += 7;
                  BOOL v14 = v78++ > 8;
                  if (v14)
                  {
                    LODWORD(v55) = 0;
LABEL_150:
                    unint64_t v2 = v79 + 1;
                    goto LABEL_151;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v55) = 0;
                }
                goto LABEL_150;
              }
              char v53 = 0;
              unsigned int v54 = 0;
              uint64_t v55 = 0;
              do
              {
                unint64_t v2 = v51 + 1;
                *((void *)this + 1) = v51 + 1;
                char v56 = *(unsigned char *)(v52 + v51);
                v55 |= (unint64_t)(v56 & 0x7F) << v53;
                if ((v56 & 0x80) == 0) {
                  goto LABEL_151;
                }
                v53 += 7;
                unint64_t v51 = v2;
                BOOL v14 = v54++ > 8;
              }
              while (!v14);
              LODWORD(v55) = 0;
LABEL_151:
              *(_DWORD *)(a1 + 44) = v55;
LABEL_152:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_152;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10175B9CC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 64);
  if ((v4 & 0x200) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 60), 1u);
    __int16 v4 = *(_WORD *)(v3 + 64);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 40), 2u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 3u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 4u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 1) == 0)
  {
LABEL_6:
    if ((v4 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 5u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x80) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 52), 6u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 56), 7u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 4) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 9u);
    if ((*(_WORD *)(v3 + 64) & 0x20) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 48), 8u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 4) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_21:
  unsigned int v5 = *(_DWORD *)(v3 + 44);

  return PB::Writer::writeVarInt(this, v5, 0xAu);
}

void sub_10175BB20(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10175BB58(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102338CC8;
  *(_DWORD *)(result + 32) = 0;
  char v2 = *(unsigned char *)(a2 + 32);
  if ((v2 & 0x10) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 28);
    char v3 = 16;
    *(unsigned char *)(result + 32) = 16;
    *(_DWORD *)(result + 28) = v4;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 32) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 20);
    v3 |= 4u;
    *(unsigned char *)(result + 32) = v3;
    *(_DWORD *)(result + 20) = v6;
    char v2 = *(unsigned char *)(a2 + 32);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        return result;
      }
LABEL_12:
      int v8 = *(_DWORD *)(a2 + 16);
      *(unsigned char *)(result + 32) = v3 | 2;
      *(_DWORD *)(result + 16) = v8;
      return result;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(unsigned char *)(result + 32) = v3;
  *(void *)(result + 8) = v7;
  if ((*(unsigned char *)(a2 + 32) & 2) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_10175BC0C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "genericWorkoutLabel", *(_DWORD *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 32);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "poolLength", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "swimLocation", *(_DWORD *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 32);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "workoutLocationType", *(_DWORD *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 32) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "workoutType", *(_DWORD *)(a1 + 28));
LABEL_7:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175BCF0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 32) |= 0x10u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    LODWORD(v24) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_88;
                  }
                  unint64_t v47 = v20++;
                  char v48 = *(unsigned char *)(v21 + v47);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_87;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v24) = 0;
                }
LABEL_87:
                unint64_t v2 = v47 + 1;
              }
              else
              {
                char v22 = 0;
                unsigned int v23 = 0;
                uint64_t v24 = 0;
                do
                {
                  unint64_t v2 = v20 + 1;
                  *((void *)this + 1) = v20 + 1;
                  char v25 = *(unsigned char *)(v21 + v20);
                  v24 |= (unint64_t)(v25 & 0x7F) << v22;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_88;
                  }
                  v22 += 7;
                  unint64_t v20 = v2;
                  BOOL v14 = v23++ > 8;
                }
                while (!v14);
                LODWORD(v24) = 0;
              }
LABEL_88:
              *(_DWORD *)(a1 + 28) = v24;
              goto LABEL_104;
            case 2u:
              *(unsigned char *)(a1 + 32) |= 8u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_93;
                  }
                  unint64_t v51 = v27++;
                  char v52 = *(unsigned char *)(v28 + v51);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_92:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_93;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_92;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_93;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_93:
              *(_DWORD *)(a1 + 24) = v31;
              goto LABEL_104;
            case 3u:
              *(unsigned char *)(a1 + 32) |= 4u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_98;
                  }
                  unint64_t v55 = v33++;
                  char v56 = *(unsigned char *)(v34 + v55);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_97:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_98;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_97;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_98;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_98:
              *(_DWORD *)(a1 + 20) = v37;
              goto LABEL_104;
            case 4u:
              *(unsigned char *)(a1 + 32) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_104;
            case 5u:
              *(unsigned char *)(a1 + 32) |= 2u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_103;
                  }
                  unint64_t v59 = v39++;
                  char v60 = *(unsigned char *)(v40 + v59);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_102:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_103;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_102;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_103;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_103:
              *(_DWORD *)(a1 + 16) = v43;
LABEL_104:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_104;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10175C274(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 32);
  if ((v4 & 0x10) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 28), 1u);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 24), 2u);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 4u);
    if ((*(unsigned char *)(v3 + 32) & 2) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 20), 3u);
  char v4 = *(unsigned char *)(v3 + 32);
  if (v4) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_11:
  unsigned int v5 = *(_DWORD *)(v3 + 16);

  return PB::Writer::writeVarInt(this, v5, 5u);
}

void *sub_10175C338(void *result)
{
  *uint64_t result = &off_102338D00;
  result[1] = 0;
  return result;
}

void sub_10175C358(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338D00;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10175C3D8(PB::Base *a1)
{
  sub_10175C358(a1);

  operator delete();
}

void *sub_10175C410(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338D00;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10175C4B8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175C534(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10175C730(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_10175C74C(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void *sub_10175C7DC(void *result)
{
  *uint64_t result = &off_102338D38;
  result[1] = 0;
  return result;
}

void sub_10175C7FC(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338D38;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10175C87C(PB::Base *a1)
{
  sub_10175C7FC(a1);

  operator delete();
}

void *sub_10175C8B4(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338D38;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10175C95C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175C9D8(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10175CBD4(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

void *sub_10175CBF0(void *result)
{
  *uint64_t result = &off_102338D70;
  result[1] = 0;
  return result;
}

void sub_10175CC10(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338D70;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10175CC90(PB::Base *a1)
{
  sub_10175CC10(a1);

  operator delete();
}

void *sub_10175CCC8(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338D70;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10175CD70(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175CDEC(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10175CFE8(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

void *sub_10175D004(void *result)
{
  *uint64_t result = &off_102338DA8;
  result[1] = 0;
  return result;
}

void sub_10175D024(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338DA8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10175D0A4(PB::Base *a1)
{
  sub_10175D024(a1);

  operator delete();
}

void *sub_10175D0DC(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338DA8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10175D184(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175D200(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10175D3FC(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_10175D418(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void *sub_10175D4A8(void *result)
{
  *uint64_t result = &off_102338DE0;
  result[1] = 0;
  return result;
}

void sub_10175D4C8(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338DE0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10175D548(PB::Base *a1)
{
  sub_10175D4C8(a1);

  operator delete();
}

void *sub_10175D580(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338DE0;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10175D628(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175D6A4(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10175D8A0(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_10175D8BC(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void *sub_10175D94C(void *result)
{
  *uint64_t result = &off_102338E18;
  result[1] = 0;
  return result;
}

void sub_10175D96C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338E18;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10175D9EC(PB::Base *a1)
{
  sub_10175D96C(a1);

  operator delete();
}

void *sub_10175DA24(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338E18;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10175DACC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175DB48(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10175DD44(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_10175DD60(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void *sub_10175DDF0(void *result)
{
  *uint64_t result = &off_102338E50;
  result[1] = 0;
  return result;
}

void sub_10175DE10(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338E50;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10175DE90(PB::Base *a1)
{
  sub_10175DE10(a1);

  operator delete();
}

void *sub_10175DEC8(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338E50;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10175DF70(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175DFEC(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10175E1E8(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_10175E204(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void *sub_10175E294(void *result)
{
  *uint64_t result = &off_102338E88;
  result[1] = 0;
  return result;
}

void sub_10175E2B4(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338E88;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10175E334(PB::Base *a1)
{
  sub_10175E2B4(a1);

  operator delete();
}

void *sub_10175E36C(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338E88;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10175E414(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175E490(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10175E68C(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_10175E6A8(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void *sub_10175E738(void *result)
{
  *uint64_t result = &off_102338EC0;
  result[1] = 0;
  return result;
}

void sub_10175E758(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338EC0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10175E7D8(PB::Base *a1)
{
  sub_10175E758(a1);

  operator delete();
}

void *sub_10175E810(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338EC0;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10175E8B8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175E934(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10175EB30(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_10175EB4C(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10175EBDC(uint64_t result)
{
  *(void *)uint64_t result = &off_102338EF8;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_10175EC04(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_10175EC3C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102338EF8;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if ((v2 & 4) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(a1 + 28) = 4;
    *(_DWORD *)(a1 + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*(unsigned char *)(a2 + 28))
  {
LABEL_5:
    double result = *(double *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(a1 + 28) = v3;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 28) = v3 | 2;
    *(double *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_10175ECBC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if (v5)
  {
    PB::TextFormatter::format(this, "restingHeartRate", *(double *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "walkingHeartRateAverage", *(double *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 28) & 4) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "workoutActivityType", *(_DWORD *)(a1 + 24));
LABEL_5:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175ED60(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  for (int i = *((unsigned __int8 *)this + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)this + 24))
  {
    uint64_t v8 = *(void *)this;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)this + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_20;
        }
        v15 += 7;
        unint64_t v2 = v17;
        if (v16++ >= 9)
        {
LABEL_19:
          unint64_t v11 = 0;
          goto LABEL_20;
        }
      }
      int i = 1;
      *((unsigned char *)this + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)this + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_20:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v20 = v11 >> 3;
    if ((v11 >> 3) == 3)
    {
      *(unsigned char *)(a1 + 28) |= 2u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_47:
        unint64_t v2 = *((void *)this + 1) + 8;
        *((void *)this + 1) = v2;
        goto LABEL_53;
      }
    }
    else
    {
      if (v20 != 2)
      {
        if (v20 == 1)
        {
          *(unsigned char *)(a1 + 28) |= 4u;
          unint64_t v21 = *((void *)this + 1);
          unint64_t v2 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v25 = 0;
            if (v2 <= v21) {
              unint64_t v2 = *((void *)this + 1);
            }
            while (1)
            {
              if (v2 == v21)
              {
                LODWORD(v25) = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_52;
              }
              unint64_t v30 = v21++;
              char v31 = *(unsigned char *)(v22 + v30);
              *((void *)this + 1) = v21;
              v25 |= (unint64_t)(v31 & 0x7F) << v28;
              if ((v31 & 0x80) == 0) {
                break;
              }
              v28 += 7;
              BOOL v14 = v29++ > 8;
              if (v14)
              {
                LODWORD(v25) = 0;
                goto LABEL_51;
              }
            }
            if (*((unsigned char *)this + 24)) {
              LODWORD(v25) = 0;
            }
LABEL_51:
            unint64_t v2 = v30 + 1;
          }
          else
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            while (1)
            {
              unint64_t v2 = v21 + 1;
              *((void *)this + 1) = v21 + 1;
              char v26 = *(unsigned char *)(v22 + v21);
              v25 |= (unint64_t)(v26 & 0x7F) << v23;
              if ((v26 & 0x80) == 0) {
                break;
              }
              v23 += 7;
              unint64_t v21 = v2;
              BOOL v14 = v24++ > 8;
              if (v14)
              {
                LODWORD(v25) = 0;
                break;
              }
            }
          }
LABEL_52:
          *(_DWORD *)(a1 + 24) = v25;
        }
        else
        {
          uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
        }
        goto LABEL_53;
      }
      *(unsigned char *)(a1 + 28) |= 1u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
        goto LABEL_47;
      }
    }
    *((unsigned char *)this + 24) = 1;
LABEL_53:
    unint64_t v3 = *((void *)this + 2);
  }
  return i == 0;
}

uint64_t sub_10175F030(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if ((v4 & 4) == 0)
  {
    if ((*(unsigned char *)(result + 28) & 1) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 2u);
    if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 24), 1u);
  char v4 = *(unsigned char *)(v3 + 28);
  if (v4) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5, 3u);
}

void *sub_10175F0BC(void *result)
{
  *uint64_t result = &off_102338F30;
  result[1] = 0;
  return result;
}

void sub_10175F0DC(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338F30;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10175F15C(PB::Base *a1)
{
  sub_10175F0DC(a1);

  operator delete();
}

void *sub_10175F194(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338F30;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10175F23C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175F2B8(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10175F4B4(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

void *sub_10175F4D0(void *result)
{
  *uint64_t result = &off_102338F68;
  result[1] = 0;
  return result;
}

void sub_10175F4F0(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338F68;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10175F570(PB::Base *a1)
{
  sub_10175F4F0(a1);

  operator delete();
}

void *sub_10175F5A8(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338F68;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10175F650(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175F6CC(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10175F8C8(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

void *sub_10175F8E4(void *result)
{
  *uint64_t result = &off_102338FA0;
  result[1] = 0;
  return result;
}

void sub_10175F904(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338FA0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10175F984(PB::Base *a1)
{
  sub_10175F904(a1);

  operator delete();
}

void *sub_10175F9BC(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338FA0;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10175FA64(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175FAE0(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10175FCDC(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_10175FCF8(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void *sub_10175FD88(void *result)
{
  *uint64_t result = &off_102338FD8;
  result[1] = 0;
  return result;
}

void sub_10175FDA8(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102338FD8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10175FE28(PB::Base *a1)
{
  sub_10175FDA8(a1);

  operator delete();
}

void *sub_10175FE60(void *result, uint64_t a2)
{
  *uint64_t result = &off_102338FD8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10175FF08(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10175FF84(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101760180(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_10176019C(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void *sub_10176022C(void *result)
{
  *uint64_t result = &off_102339010;
  result[1] = 0;
  return result;
}

void sub_10176024C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102339010;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_1017602CC(PB::Base *a1)
{
  sub_10176024C(a1);

  operator delete();
}

void *sub_101760304(void *result, uint64_t a2)
{
  *uint64_t result = &off_102339010;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017603AC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101760428(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101760624(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_101760640(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void *sub_1017606D0(void *result)
{
  *uint64_t result = &off_102339048;
  result[1] = 0;
  return result;
}

void sub_1017606F0(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102339048;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101760770(PB::Base *a1)
{
  sub_1017606F0(a1);

  operator delete();
}

void *sub_1017607A8(void *result, uint64_t a2)
{
  *uint64_t result = &off_102339048;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_101760850(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1017608CC(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101760AE4(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_101760B00(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void *sub_101760BAC(void *result)
{
  *uint64_t result = &off_102339080;
  result[1] = 0;
  return result;
}

void sub_101760BCC(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102339080;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101760C4C(PB::Base *a1)
{
  sub_101760BCC(a1);

  operator delete();
}

void *sub_101760C84(void *result, uint64_t a2)
{
  *uint64_t result = &off_102339080;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_101760D2C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101760DA8(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101760FC0(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_101760FDC(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void *sub_101761088(void *result)
{
  *uint64_t result = &off_1023390B8;
  result[1] = 0;
  return result;
}

void sub_1017610A8(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_1023390B8;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101761128(PB::Base *a1)
{
  sub_1017610A8(a1);

  operator delete();
}

void *sub_101761160(void *result, uint64_t a2)
{
  *uint64_t result = &off_1023390B8;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_101761208(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101761284(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10176149C(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_1017614B8(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void *sub_101761564(void *result)
{
  *uint64_t result = &off_1023390F0;
  result[1] = 0;
  return result;
}

void sub_101761584(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_1023390F0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101761604(PB::Base *a1)
{
  sub_101761584(a1);

  operator delete();
}

void *sub_10176163C(void *result, uint64_t a2)
{
  *uint64_t result = &off_1023390F0;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017616E4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101761760(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101761978(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_101761994(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void *sub_101761A40(void *result)
{
  *uint64_t result = &off_102339128;
  result[1] = 0;
  return result;
}

void sub_101761A60(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102339128;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101761AE0(PB::Base *a1)
{
  sub_101761A60(a1);

  operator delete();
}

void *sub_101761B18(void *result, uint64_t a2)
{
  *uint64_t result = &off_102339128;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_101761BC4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101761C40(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void *sub_101761E58(void *result)
{
  *uint64_t result = off_102339160;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_101761E7C(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_101761E98(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

void sub_101761F44(void **a1)
{
  *a1 = off_102339160;
  unint64_t v2 = a1 + 1;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
}

void sub_101761FA0(void **a1)
{
  *a1 = off_102339160;
  unint64_t v2 = a1 + 1;
  sub_1016B1E74(&v2);
  PB::Base::~Base((PB::Base *)a1);
  operator delete();
}

void *sub_101762010(void *result, uint64_t a2)
{
  result[1] = 0;
  *uint64_t result = off_102339160;
  result[2] = 0;
  result[3] = 0;
  if (*(void *)(a2 + 8) != *(void *)(a2 + 16)) {
    sub_101762088();
  }
  return result;
}

void sub_101762088()
{
}

void sub_10176218C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1017621D0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(uint64_t **)(a1 + 8);
  int v6 = *(uint64_t **)(a1 + 16);
  while (v5 != v6)
  {
    uint64_t v7 = *v5++;
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v7 + 32))(v7, this, "workoutPriors");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101762268(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 2) {
        sub_101762424();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

void sub_101762424()
{
}

void sub_10176253C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100C341AC((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_101762580(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base ***)(result + 8);
  for (i = *(const PB::Base ***)(result + 16); v2 != i; uint64_t result = PB::Writer::writeSubmessage(this, v5, 2u))
    uint64_t v5 = *v2++;
  return result;
}

void *sub_1017625CC(void *result)
{
  *uint64_t result = &off_102339198;
  result[1] = 0;
  return result;
}

void sub_1017625EC(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102339198;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10176266C(PB::Base *a1)
{
  sub_1017625EC(a1);

  operator delete();
}

void *sub_1017626A4(void *result, uint64_t a2)
{
  *uint64_t result = &off_102339198;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10176274C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "correction");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1017627C8(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017629C4(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_1017629E0(uint64_t *a1, void *a2)
{
  uint64_t result = sub_101762A58((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_101762A58(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    unsigned int v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_101762AF0((uint64_t)v13);
  return v11;
}

uint64_t sub_101762AF0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100C34144((void *)a1);
  }
  return a1;
}

uint64_t sub_101762B28(uint64_t *a1, void *a2)
{
  uint64_t result = sub_101762BA0((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_101762BA0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    unsigned int v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_101762C38((uint64_t)v13);
  return v11;
}

uint64_t sub_101762C38(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100C34144((void *)a1);
  }
  return a1;
}

uint64_t sub_101762C70(uint64_t *a1, void *a2)
{
  uint64_t result = sub_101762CE8((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_101762CE8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    unsigned int v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_101762D80((uint64_t)v13);
  return v11;
}

uint64_t sub_101762D80(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100C34144((void *)a1);
  }
  return a1;
}

uint64_t sub_101762DB8(uint64_t *a1, void *a2)
{
  uint64_t result = sub_101762E30((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_101762E30(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    unsigned int v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_101762EC8((uint64_t)v13);
  return v11;
}

uint64_t sub_101762EC8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_100C34144((void *)a1);
  }
  return a1;
}

void sub_101762F00()
{
}

void sub_101763084()
{
}

double sub_101763150@<D0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  int v3 = *(_DWORD *)(a1 + 36);
  int v4 = sub_1017A4334(a2);
  uint64_t v5 = v4[28];
  *(_OWORD *)(v4 + 7) = *(_OWORD *)a1;
  uint64_t v6 = *(void *)(a1 + 24);
  v4[2] = *(void *)(a1 + 16);
  v4[20] = v6;
  int v7 = *(_DWORD *)(a1 + 32);
  int v8 = *(_DWORD *)(a1 + 36);
  *((unsigned char *)v4 + 220) = (v7 & 0xFFFFFFBF) == 0;
  BOOL v9 = 1;
  if (v8 && v8 != 64) {
    BOOL v9 = v8 == 256;
  }
  *((unsigned char *)v4 + 217) = v9;
  int v10 = *(_DWORD *)(a1 + 40);
  *((unsigned char *)v4 + 221) = (v10 & 0xFFFFFFBF) == 0;
  *((unsigned char *)v4 + 218) = (v3 & 4) == 0;
  uint64_t v11 = *(void *)(a1 + 56);
  v4[19] = *(void *)(a1 + 48);
  v4[15] = v11;
  *((_DWORD *)v4 + 51) = v8;
  *((_DWORD *)v4 + 52) = v7;
  *((_DWORD *)v4 + 53) = v10;
  uint64_t v12 = *(void *)(a1 + 64);
  int v13 = *(_DWORD *)(a1 + 72);
  int v14 = *(_DWORD *)(a1 + 76);
  int v15 = *(_DWORD *)(a1 + 80);
  *((_DWORD *)v4 + 49) = *(_DWORD *)(a1 + 84);
  *((_DWORD *)v4 + 50) = v13;
  uint64_t v16 = *(void *)(a1 + 128);
  uint64_t v17 = *(void *)(a1 + 96);
  uint64_t v18 = *(void *)(a1 + 104);
  v4[3] = *(void *)(a1 + 136);
  v4[4] = v17;
  LOBYTE(v13) = *(unsigned char *)(a1 + 120);
  *(int8x16_t *)(v4 + 17) = vextq_s8(*(int8x16_t *)(a1 + 160), *(int8x16_t *)(a1 + 160), 8uLL);
  uint64_t v19 = *(void *)(a1 + 176);
  uint64_t v20 = *(void *)(a1 + 184);
  v4[5] = v16;
  v4[6] = v19;
  uint64_t v22 = *(void *)(a1 + 144);
  uint64_t v21 = *(void *)(a1 + 152);
  uint64_t v23 = *(void *)(a1 + 192);
  v4[13] = v12;
  v4[14] = v23;
  uint64_t v24 = *(void *)(a1 + 112);
  v4[9] = v21;
  v4[10] = v24;
  v4[21] = v18;
  *((double *)v4 + 22) = (double)v14;
  v4[23] = v20;
  double result = (double)v15;
  *((unsigned char *)v4 + 219) = v13;
  v4[28] = v5 | 0x7DF7F7FFELL;
  *((double *)v4 + 11) = (double)v15;
  v4[12] = v22;
  return result;
}

double sub_101763268@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_10165C714(a2);
  *(unsigned char *)(v3 + 84) = *(unsigned char *)(a1 + 68);
  *(_WORD *)(v3 + 85) = *(_WORD *)(a1 + 69);
  int v5 = *(_DWORD *)(a1 + 72);
  int v4 = *(_DWORD *)(a1 + 76);
  __int16 v6 = *(_WORD *)(v3 + 88);
  *(_OWORD *)(v3 + 8) = *(_OWORD *)a1;
  *(void *)(v3 + 48) = *(void *)(a1 + 16);
  *(int8x16_t *)(v3 + 56) = vextq_s8(*(int8x16_t *)(a1 + 40), *(int8x16_t *)(a1 + 40), 8uLL);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(a1 + 24);
  double result = *(double *)(a1 + 56);
  *(double *)(v3 + 24) = result;
  int v8 = *(_DWORD *)(a1 + 64);
  *(_WORD *)(v3 + 88) = v6 | 0x3FFF;
  *(_DWORD *)(v3 + 76) = v8;
  *(_DWORD *)(v3 + 80) = v5;
  *(_DWORD *)(v3 + 72) = v4;
  return result;
}

__n128 sub_1017632E8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_10165D3FC(a2);
  char v4 = *(unsigned char *)(v3 + 48);
  *(unsigned char *)(v3 + 44) = *(unsigned char *)(a1 + 36);
  __n128 result = *(__n128 *)a1;
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 + 8) = *(_OWORD *)a1;
  *(_DWORD *)(v3 + 40) = *(_DWORD *)(a1 + 32);
  *(unsigned char *)(v3 + 48) = v4 | 0x3F;
  *(_OWORD *)(v3 + 24) = v6;
  return result;
}

uint64_t sub_101763338@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10165BEA4(a2);
  __int16 v4 = *(_WORD *)(result + 76);
  *(void *)(result + 48) = *((void *)a1 + 4);
  *(int8x16_t *)(result + 56) = vextq_s8(*(int8x16_t *)((char *)a1 + 40), *(int8x16_t *)((char *)a1 + 40), 8uLL);
  long long v5 = *a1;
  int8x16_t v6 = vextq_s8(*((int8x16_t *)a1 + 1), *((int8x16_t *)a1 + 1), 8uLL);
  *(unsigned char *)(result + 73) = *((_DWORD *)a1 + 14) == 0;
  *(_WORD *)(result + 76) = v4 | 0x2FE;
  *(_OWORD *)(result + 16) = v5;
  *(int8x16_t *)(result + 32) = v6;
  return result;
}

double sub_1017633A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_10173F230(a2);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(a1 + 24);
  *(int8x16_t *)(v3 + 8) = vextq_s8(*(int8x16_t *)(a1 + 48), *(int8x16_t *)(a1 + 48), 8uLL);
  unint64_t v4 = *(void *)(a1 + 72);
  *(int32x2_t *)(v3 + 84) = vrev64_s32(*(int32x2_t *)(a1 + 64));
  uint64_t v5 = *(void *)(a1 + 8);
  __int16 v6 = *(_WORD *)(v3 + 92);
  *(void *)(v3 + 64) = v4;
  *(void *)(v3 + 72) = v5;
  double result = *(double *)(a1 + 80);
  LODWORD(v4) = *(_DWORD *)(a1 + 88);
  *(double *)(v3 + 24) = (double)v4;
  uint64_t v8 = *(void *)(a1 + 104);
  *(double *)(v3 + 48) = result;
  *(void *)(v3 + 56) = v8;
  int v9 = *(_DWORD *)(a1 + 112);
  *(_WORD *)(v3 + 92) = v6 | 0xFFF;
  *(_DWORD *)(v3 + 80) = v9;
  return result;
}

float sub_10176341C@<S0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_1016EFAB0(a2);
  __int16 v4 = *(_WORD *)(v3 + 60);
  *(int8x16_t *)(v3 + 8) = vextq_s8(*(int8x16_t *)a1, *(int8x16_t *)a1, 8uLL);
  *(void *)(v3 + 32) = *(void *)(a1 + 16);
  int v5 = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(v3 + 28) = *(_DWORD *)(a1 + 44);
  *(_DWORD *)(v3 + 40) = *(_DWORD *)(a1 + 48);
  int v6 = *(unsigned __int16 *)(a1 + 54);
  *(_DWORD *)(v3 + 48) = *(unsigned __int8 *)(a1 + 52);
  *(_DWORD *)(v3 + 52) = v5;
  *(_DWORD *)(v3 + 44) = v6;
  float result = *(float *)(a1 + 56);
  *(float *)(v3 + 24) = result;
  char v8 = *(unsigned char *)(a1 + 60);
  *(_WORD *)(v3 + 60) = v4 | 0x7FF;
  *(unsigned char *)(v3 + 56) = v8;
  return result;
}

uint64_t sub_101763494(uint64_t *a1)
{
  unint64_t v2 = +[NSFileManager defaultManager];
  if (*((char *)a1 + 23) >= 0) {
    uint64_t v3 = a1;
  }
  else {
    uint64_t v3 = (uint64_t *)*a1;
  }
  __int16 v4 = +[NSString stringWithUTF8String:v3];
  char v12 = 0;
  if ([v2 fileExistsAtPath:v4 isDirectory:&v12])
  {
    if (!v12)
    {
LABEL_15:
      uint64_t v8 = 0;
      goto LABEL_16;
    }
  }
  else
  {
    id v11 = 0;
    unsigned __int8 v5 = [v2 createDirectoryAtPath:v4 withIntermediateDirectories:1 attributes:0 error:&v11];
    id v6 = v11;
    int v7 = v6;
    if ((v5 & 1) == 0)
    {
      if (qword_102489028 != -1) {
        dispatch_once(&qword_102489028, &stru_102339C10);
      }
      int v9 = qword_102489020;
      if (os_log_type_enabled((os_log_t)qword_102489020, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138543618;
        int v14 = v4;
        __int16 v15 = 2114;
        uint64_t v16 = v7;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Unable to create directory at path: %{public}@, error, %{public}@", buf, 0x16u);
      }

      goto LABEL_15;
    }
  }
  uint64_t v8 = 1;
LABEL_16:

  return v8;
}

void sub_10176361C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_101763644(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  id v6 = +[NSFileManager defaultManager];
  if (*((char *)a1 + 23) >= 0) {
    int v7 = a1;
  }
  else {
    int v7 = (uint64_t *)*a1;
  }
  uint64_t v8 = +[NSString stringWithUTF8String:v7];
  int v9 = +[NSURL fileURLWithPath:v8];
  id v33 = 0;
  char v28 = [v6 contentsOfDirectoryAtURL:v9 includingPropertiesForKeys:0 options:4 error:&v33];
  id v10 = v33;

  if (v10)
  {
    if (qword_102489028 != -1) {
      dispatch_once(&qword_102489028, &stru_102339C10);
    }
    id v11 = qword_102489020;
    if (os_log_type_enabled((os_log_t)qword_102489020, OS_LOG_TYPE_INFO))
    {
      if (*((char *)a1 + 23) >= 0) {
        char v12 = a1;
      }
      else {
        char v12 = (uint64_t *)*a1;
      }
      *(_DWORD *)buf = 136446466;
      *(void *)&uint8_t buf[4] = v12;
      __int16 v37 = 2114;
      id v38 = v10;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Unable to list files at path: %{public}s, error, %{public}@", buf, 0x16u);
    }
  }
  else
  {
    if (*((char *)a2 + 23) >= 0) {
      int v13 = a2;
    }
    else {
      int v13 = (uint64_t *)*a2;
    }
    int v14 = +[NSString stringWithUTF8String:v13];
    long long v31 = 0u;
    long long v32 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    id v15 = v28;
    id v16 = [v15 countByEnumeratingWithState:&v29 objects:v35 count:16];
    if (v16)
    {
      uint64_t v17 = *(void *)v30;
      do
      {
        for (int i = 0; i != v16; int i = (char *)i + 1)
        {
          if (*(void *)v30 != v17) {
            objc_enumerationMutation(v15);
          }
          uint64_t v19 = *(void **)(*((void *)&v29 + 1) + 8 * i);
          uint64_t v20 = [v19 pathExtension];
          BOOL v21 = [v20 compare:v14 options:1] == 0;

          if (v21)
          {
            uint64_t v22 = (char *)[v19 fileSystemRepresentation];
            *(void *)buf = v22;
            unint64_t v23 = a3[1];
            if (v23 >= a3[2])
            {
              uint64_t v24 = sub_101763BAC(a3, (char **)buf);
            }
            else
            {
              sub_100134750((void *)a3[1], v22);
              uint64_t v24 = v23 + 24;
              a3[1] = v23 + 24;
            }
            a3[1] = v24;
          }
        }
        id v16 = [v15 countByEnumeratingWithState:&v29 objects:v35 count:16];
      }
      while (v16);
    }

    uint64_t v25 = (long long *)a3[1];
    unint64_t v26 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((uint64_t)v25 - *a3) >> 3));
    if (v25 == (long long *)*a3) {
      uint64_t v27 = 0;
    }
    else {
      uint64_t v27 = v26;
    }
    sub_101763CB4(*a3, v25, (uint64_t)&v34, v27, 1);
  }
}

void sub_101763954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  *(void *)(v12 - 128) = v10;
  sub_1000A7B4C((void ***)(v12 - 128));
  _Unwind_Resume(a1);
}

void sub_1017639E4(uint64_t *a1)
{
  unint64_t v2 = +[NSFileManager defaultManager];
  if (*((char *)a1 + 23) >= 0) {
    uint64_t v3 = a1;
  }
  else {
    uint64_t v3 = (uint64_t *)*a1;
  }
  __int16 v4 = +[NSString stringWithUTF8String:v3];
  id v9 = 0;
  unsigned __int8 v5 = [v2 removeItemAtPath:v4 error:&v9];
  id v6 = v9;

  if ((v5 & 1) == 0)
  {
    if (qword_102489028 != -1) {
      dispatch_once(&qword_102489028, &stru_102339C10);
    }
    int v7 = qword_102489020;
    if (os_log_type_enabled((os_log_t)qword_102489020, OS_LOG_TYPE_INFO))
    {
      if (*((char *)a1 + 23) >= 0) {
        uint64_t v8 = a1;
      }
      else {
        uint64_t v8 = (uint64_t *)*a1;
      }
      *(_DWORD *)buf = 136446466;
      id v11 = v8;
      __int16 v12 = 2114;
      id v13 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Unable to delete file %{public}s, error, %{public}@", buf, 0x16u);
    }
  }
}

void sub_101763B44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_101763B68(id a1)
{
  qword_102489020 = (uint64_t)os_log_create("com.apple.MotionSensorLogging", "MSL");

  _objc_release_x1();
}

uint64_t sub_101763BAC(uint64_t *a1, char **a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_1001D7FD4();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_1000DA5D8(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  id v13 = v10;
  int v14 = &v10[24 * v4];
  id v15 = v14;
  id v16 = &v10[24 * v9];
  sub_100134750(v14, *a2);
  id v15 = v14 + 24;
  sub_1001D7FEC(a1, &v13);
  uint64_t v11 = a1[1];
  sub_1001D8184((uint64_t)&v13);
  return v11;
}

void sub_101763CA0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001D8184((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_101763CB4(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, char a5)
{
void sub_1017640DC(uint64_t a1, const void **a2, uint64_t a3)
{
  if ((const void **)a1 != a2)
  {
    uint64_t v19 = v3;
    uint64_t v20 = v4;
    uint64_t v7 = (const void **)(a1 + 24);
    if ((const void **)(a1 + 24) != a2)
    {
      uint64_t v9 = 0;
      uint64_t v10 = (const void **)a1;
      do
      {
        uint64_t v11 = v10;
        uint64_t v10 = v7;
        if (sub_100130070(a3, v7, v11))
        {
          long long v17 = *(_OWORD *)v10;
          uint64_t v18 = v10[2];
          v10[1] = 0;
          v10[2] = 0;
          *uint64_t v10 = 0;
          uint64_t v12 = v9;
          do
          {
            uint64_t v13 = a1 + v12;
            uint64_t v14 = (void **)(a1 + v12 + 24);
            if (*(char *)(a1 + v12 + 47) < 0) {
              operator delete(*v14);
            }
            *(_OWORD *)uint64_t v14 = *(_OWORD *)v13;
            *(void *)(a1 + v12 + 40) = *(void *)(v13 + 16);
            *(unsigned char *)(v13 + 23) = 0;
            *(unsigned char *)uint64_t v13 = 0;
            if (!v12)
            {
              uint64_t v16 = a1;
              goto LABEL_13;
            }
            v12 -= 24;
          }
          while (sub_100130070(a3, (const void **)&v17, (const void **)(v12 + a1)));
          int v15 = *(char *)(a1 + v12 + 47);
          uint64_t v16 = a1 + v12 + 24;
          if (v15 < 0) {
            operator delete(*(void **)v16);
          }
LABEL_13:
          *(_OWORD *)uint64_t v16 = v17;
          *(void *)(v16 + 16) = v18;
        }
        uint64_t v7 = v10 + 3;
        v9 += 24;
      }
      while (v10 + 3 != a2);
    }
  }
}

void sub_101764204(const void **a1, const void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v18 = v3;
    uint64_t v19 = v4;
    char v6 = a1;
    uint64_t v7 = a1 + 3;
    if (a1 + 3 != a2)
    {
      uint64_t v9 = a1 - 3;
      do
      {
        uint64_t v10 = v6;
        char v6 = v7;
        if (sub_100130070(a3, v7, v10))
        {
          long long v16 = *(_OWORD *)v6;
          long long v17 = v6[2];
          v6[1] = 0;
          v6[2] = 0;
          *char v6 = 0;
          uint64_t v11 = v9;
          do
          {
            uint64_t v12 = (void **)(v11 + 6);
            if (*((char *)v11 + 71) < 0) {
              operator delete(*v12);
            }
            *(_OWORD *)uint64_t v12 = *(_OWORD *)(v11 + 3);
            v11[8] = v11[5];
            *((unsigned char *)v11 + 47) = 0;
            *((unsigned char *)v11 + 24) = 0;
            BOOL v13 = sub_100130070(a3, (const void **)&v16, v11);
            v11 -= 3;
          }
          while (v13);
          int v14 = *((char *)v11 + 71);
          int v15 = v11 + 6;
          if (v14 < 0) {
            operator delete((void *)*v15);
          }
          *(_OWORD *)int v15 = v16;
          v15[2] = v17;
        }
        uint64_t v7 = v6 + 3;
        v9 += 3;
      }
      while (v6 + 3 != a2);
    }
  }
}

uint64_t sub_101764310(const void **a1, const void **a2, const void **a3, uint64_t a4)
{
  BOOL v8 = sub_100130070(a4, a2, a1);
  uint64_t result = sub_100130070(a4, a3, a2);
  if (!v8)
  {
    if (!result) {
      return result;
    }
    BOOL v13 = a2[2];
    long long v14 = *(_OWORD *)a2;
    int v15 = a3[2];
    *(_OWORD *)a2 = *(_OWORD *)a3;
    a2[2] = v15;
    *(_OWORD *)a3 = v14;
    a3[2] = v13;
    if (!sub_100130070(a4, a2, a1)) {
      return 1;
    }
    long long v16 = a1[2];
    long long v17 = *(_OWORD *)a1;
    uint64_t v18 = a2[2];
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = v18;
    *(_OWORD *)a2 = v17;
    a2[2] = v16;
    return 2;
  }
  if (!result)
  {
    uint64_t v19 = a1[2];
    long long v20 = *(_OWORD *)a1;
    BOOL v21 = a2[2];
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = v21;
    *(_OWORD *)a2 = v20;
    a2[2] = v19;
    if (!sub_100130070(a4, a3, a2)) {
      return 1;
    }
    uint64_t v22 = a2[2];
    long long v23 = *(_OWORD *)a2;
    unint64_t v24 = a3[2];
    *(_OWORD *)a2 = *(_OWORD *)a3;
    a2[2] = v24;
    *(_OWORD *)a3 = v23;
    a3[2] = v22;
    return 2;
  }
  uint64_t v10 = a1[2];
  long long v11 = *(_OWORD *)a1;
  uint64_t v12 = a3[2];
  *(_OWORD *)a1 = *(_OWORD *)a3;
  a1[2] = v12;
  *(_OWORD *)a3 = v11;
  a3[2] = v10;
  return 1;
}

const void **sub_10176445C(const void **a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = a2;
  long long v16 = *(_OWORD *)a1;
  long long v17 = a1[2];
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  if (sub_100130070(a3, (const void **)&v16, (const void **)(a2 - 24)))
  {
    char v6 = a1;
    do
      v6 += 3;
    while (!sub_100130070(a3, (const void **)&v16, v6));
  }
  else
  {
    uint64_t v7 = a1 + 3;
    do
    {
      char v6 = v7;
      if ((unint64_t)v7 >= v4) {
        break;
      }
      BOOL v8 = sub_100130070(a3, (const void **)&v16, v7);
      uint64_t v7 = v6 + 3;
    }
    while (!v8);
  }
  if ((unint64_t)v6 < v4)
  {
    do
      v4 -= 24;
    while (sub_100130070(a3, (const void **)&v16, (const void **)v4));
  }
  while ((unint64_t)v6 < v4)
  {
    long long v9 = *(_OWORD *)v6;
    uint64_t v19 = v6[2];
    long long v18 = v9;
    long long v10 = *(_OWORD *)v4;
    v6[2] = *(const void **)(v4 + 16);
    *(_OWORD *)char v6 = v10;
    long long v11 = v18;
    *(void *)(v4 + 16) = v19;
    *(_OWORD *)unint64_t v4 = v11;
    do
      v6 += 3;
    while (!sub_100130070(a3, (const void **)&v16, v6));
    do
      v4 -= 24;
    while (sub_100130070(a3, (const void **)&v16, (const void **)v4));
  }
  uint64_t v12 = (void **)(v6 - 3);
  if (v6 - 3 == a1)
  {
    if (*((char *)v6 - 1) < 0) {
      operator delete(*v12);
    }
  }
  else
  {
    if (*((char *)a1 + 23) < 0) {
      operator delete((void *)*a1);
    }
    long long v13 = *(_OWORD *)v12;
    a1[2] = *(v6 - 1);
    *(_OWORD *)a1 = v13;
    *((unsigned char *)v6 - 1) = 0;
    *((unsigned char *)v6 - 24) = 0;
  }
  long long v14 = v16;
  *(v6 - 1) = v17;
  *(_OWORD *)uint64_t v12 = v14;
  return v6;
}

unint64_t sub_1017645F0(long long *a1, const void **a2, uint64_t a3)
{
  uint64_t v6 = 0;
  long long v17 = *a1;
  uint64_t v18 = *((void *)a1 + 2);
  *((void *)a1 + 1) = 0;
  *((void *)a1 + 2) = 0;
  *(void *)a1 = 0;
  do
    v6 += 24;
  while (sub_100130070(a3, (const void **)((char *)a1 + v6), (const void **)&v17));
  unint64_t v7 = (unint64_t)a1 + v6;
  if (v6 == 24)
  {
    do
    {
      if (v7 >= (unint64_t)a2) {
        break;
      }
      a2 -= 3;
    }
    while (!sub_100130070(a3, a2, (const void **)&v17));
  }
  else
  {
    do
      a2 -= 3;
    while (!sub_100130070(a3, a2, (const void **)&v17));
  }
  unint64_t v8 = (unint64_t)a1 + v6;
  if (v7 < (unint64_t)a2)
  {
    long long v9 = a2;
    do
    {
      long long v19 = *(_OWORD *)v8;
      long long v10 = v19;
      long long v20 = *(const void **)(v8 + 16);
      long long v11 = v20;
      uint64_t v12 = v9[2];
      *(_OWORD *)unint64_t v8 = *(_OWORD *)v9;
      *(void *)(v8 + 16) = v12;
      v9[2] = v11;
      *(_OWORD *)long long v9 = v10;
      do
        v8 += 24;
      while (sub_100130070(a3, (const void **)v8, (const void **)&v17));
      do
        v9 -= 3;
      while (!sub_100130070(a3, v9, (const void **)&v17));
    }
    while (v8 < (unint64_t)v9);
  }
  long long v13 = (void **)(v8 - 24);
  if ((long long *)(v8 - 24) == a1)
  {
    if (*(char *)(v8 - 1) < 0) {
      operator delete(*v13);
    }
  }
  else
  {
    if (*((char *)a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v14 = *(_OWORD *)v13;
    *((void *)a1 + 2) = *(void *)(v8 - 8);
    *a1 = v14;
    *(unsigned char *)(v8 - 1) = 0;
    *(unsigned char *)(v8 - 24) = 0;
  }
  long long v15 = v17;
  *(void *)(v8 - 8) = v18;
  *(_OWORD *)long long v13 = v15;
  return v8 - 24;
}

BOOL sub_101764780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xAAAAAAAAAAAAAAABLL * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      uint64_t v8 = a2 - 24;
      if (sub_100130070(a3, (const void **)(a2 - 24), (const void **)a1))
      {
        uint64_t v9 = *(void *)(a1 + 16);
        long long v10 = *(_OWORD *)a1;
        uint64_t v11 = *(void *)(v8 + 16);
        *(_OWORD *)a1 = *(_OWORD *)v8;
        *(void *)(a1 + 16) = v11;
        *(_OWORD *)uint64_t v8 = v10;
        *(void *)(v8 + 16) = v9;
      }
      return 1;
    case 3uLL:
      sub_101764310((const void **)a1, (const void **)(a1 + 24), (const void **)(a2 - 24), a3);
      return 1;
    case 4uLL:
      sub_1017649D4(a1, (const void **)(a1 + 24), (const void **)(a1 + 48), (long long *)(a2 - 24), a3);
      return 1;
    case 5uLL:
      sub_101764AC0(a1, (const void **)(a1 + 24), (const void **)(a1 + 48), (long long *)(a1 + 72), (long long *)(a2 - 24), a3);
      return 1;
    default:
      uint64_t v12 = (const void **)(a1 + 48);
      sub_101764310((const void **)a1, (const void **)(a1 + 24), (const void **)(a1 + 48), a3);
      uint64_t v13 = a1 + 72;
      if (a1 + 72 == a2) {
        return 1;
      }
      uint64_t v14 = 0;
      int v15 = 0;
      break;
  }
  while (1)
  {
    if (sub_100130070(a3, (const void **)v13, v12))
    {
      long long v22 = *(_OWORD *)v13;
      uint64_t v23 = *(void *)(v13 + 16);
      *(void *)(v13 + 8) = 0;
      *(void *)(v13 + 16) = 0;
      *(void *)uint64_t v13 = 0;
      uint64_t v16 = v14;
      do
      {
        uint64_t v17 = a1 + v16;
        uint64_t v18 = (void **)(a1 + v16 + 72);
        if (*(char *)(a1 + v16 + 95) < 0) {
          operator delete(*v18);
        }
        *(_OWORD *)uint64_t v18 = *(_OWORD *)(v17 + 48);
        *(void *)(a1 + v16 + 88) = *(void *)(v17 + 64);
        *(unsigned char *)(v17 + 71) = 0;
        *(unsigned char *)(v17 + 48) = 0;
        if (v16 == -48)
        {
          uint64_t v21 = a1;
          goto LABEL_15;
        }
        BOOL v19 = sub_100130070(a3, (const void **)&v22, (const void **)(a1 + v16 + 24));
        v16 -= 24;
      }
      while (v19);
      int v20 = *(char *)(a1 + v16 + 95);
      uint64_t v21 = a1 + v16 + 72;
      if (v20 < 0) {
        operator delete(*(void **)v21);
      }
LABEL_15:
      *(_OWORD *)uint64_t v21 = v22;
      *(void *)(v21 + 16) = v23;
      if (++v15 == 8) {
        return v13 + 24 == a2;
      }
    }
    uint64_t v12 = (const void **)v13;
    v14 += 24;
    v13 += 24;
    if (v13 == a2) {
      return 1;
    }
  }
}

__n128 sub_1017649D4(uint64_t a1, const void **a2, const void **a3, long long *a4, uint64_t a5)
{
  sub_101764310((const void **)a1, a2, a3, a5);
  if (sub_100130070(a5, (const void **)a4, a3))
  {
    uint64_t v11 = a3[2];
    long long v12 = *(_OWORD *)a3;
    uint64_t v13 = (const void *)*((void *)a4 + 2);
    *(_OWORD *)a3 = *a4;
    a3[2] = v13;
    *a4 = v12;
    *((void *)a4 + 2) = v11;
    if (sub_100130070(a5, a3, a2))
    {
      uint64_t v14 = a2[2];
      long long v15 = *(_OWORD *)a2;
      uint64_t v16 = a3[2];
      *(_OWORD *)a2 = *(_OWORD *)a3;
      a2[2] = v16;
      *(_OWORD *)a3 = v15;
      a3[2] = v14;
      if (sub_100130070(a5, a2, (const void **)a1))
      {
        uint64_t v17 = *(const void **)(a1 + 16);
        __n128 result = *(__n128 *)a1;
        uint64_t v18 = a2[2];
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = v18;
        *(__n128 *)a2 = result;
        a2[2] = v17;
      }
    }
  }
  return result;
}

__n128 sub_101764AC0(uint64_t a1, const void **a2, const void **a3, long long *a4, long long *a5, uint64_t a6)
{
  sub_1017649D4(a1, a2, a3, a4, a6);
  if (sub_100130070(a6, (const void **)a5, (const void **)a4))
  {
    uint64_t v13 = *((void *)a4 + 2);
    long long v14 = *a4;
    uint64_t v15 = *((void *)a5 + 2);
    *a4 = *a5;
    *((void *)a4 + 2) = v15;
    *a5 = v14;
    *((void *)a5 + 2) = v13;
    if (sub_100130070(a6, (const void **)a4, a3))
    {
      uint64_t v16 = a3[2];
      long long v17 = *(_OWORD *)a3;
      uint64_t v18 = (const void *)*((void *)a4 + 2);
      *(_OWORD *)a3 = *a4;
      a3[2] = v18;
      *a4 = v17;
      *((void *)a4 + 2) = v16;
      if (sub_100130070(a6, a3, a2))
      {
        BOOL v19 = a2[2];
        long long v20 = *(_OWORD *)a2;
        uint64_t v21 = a3[2];
        *(_OWORD *)a2 = *(_OWORD *)a3;
        a2[2] = v21;
        *(_OWORD *)a3 = v20;
        a3[2] = v19;
        if (sub_100130070(a6, a2, (const void **)a1))
        {
          long long v22 = *(const void **)(a1 + 16);
          __n128 result = *(__n128 *)a1;
          uint64_t v23 = a2[2];
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(void *)(a1 + 16) = v23;
          *(__n128 *)a2 = result;
          a2[2] = v22;
        }
      }
    }
  }
  return result;
}

long long *sub_101764BE4(uint64_t a1, long long *a2, long long *a3, uint64_t a4)
{
  if ((long long *)a1 != a2)
  {
    uint64_t v8 = (uint64_t)a2 - a1;
    uint64_t v9 = ((uint64_t)a2 - a1) / 24;
    if ((uint64_t)a2 - a1 >= 25)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      long long v12 = (__n128 *)(a1 + 24 * v10);
      do
      {
        sub_101764E30(a1, a4, v9, v12);
        long long v12 = (__n128 *)((char *)v12 - 24);
        --v11;
      }
      while (v11);
    }
    uint64_t v13 = a2;
    if (a2 != a3)
    {
      long long v14 = a2;
      do
      {
        if (sub_100130070(a4, (const void **)v14, (const void **)a1))
        {
          uint64_t v15 = *((void *)v14 + 2);
          long long v16 = *v14;
          uint64_t v17 = *(void *)(a1 + 16);
          *long long v14 = *(_OWORD *)a1;
          *((void *)v14 + 2) = v17;
          *(_OWORD *)a1 = v16;
          *(void *)(a1 + 16) = v15;
          sub_101764E30(a1, a4, v9, (__n128 *)a1);
        }
        long long v14 = (long long *)((char *)v14 + 24);
      }
      while (v14 != a3);
      uint64_t v13 = a3;
    }
    if (v8 >= 25)
    {
      int64_t v18 = v8 / 0x18uLL;
      BOOL v19 = (long long *)((char *)a2 - 24);
      do
      {
        uint64_t v20 = *(void *)a1;
        *(void *)long long v28 = *(void *)(a1 + 8);
        *(void *)&v28[7] = *(void *)(a1 + 15);
        char v21 = *(unsigned char *)(a1 + 23);
        *(void *)(a1 + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)a1 = 0;
        uint64_t v22 = sub_101764FCC(a1, a4, v18);
        uint64_t v23 = v22;
        int v24 = *(char *)(v22 + 23);
        if (v19 == (long long *)v22)
        {
          if (v24 < 0) {
            operator delete(*(void **)v22);
          }
          *(void *)uint64_t v23 = v20;
          *(void *)(v23 + 8) = *(void *)v28;
          *(void *)(v23 + 15) = *(void *)&v28[7];
          *(unsigned char *)(v23 + 23) = v21;
        }
        else
        {
          if (v24 < 0) {
            operator delete(*(void **)v22);
          }
          long long v25 = *v19;
          *(void *)(v23 + 16) = *((void *)v19 + 2);
          *(_OWORD *)uint64_t v23 = v25;
          *(void *)BOOL v19 = v20;
          *((void *)v19 + 1) = *(void *)v28;
          *(void *)((char *)v19 + 15) = *(void *)&v28[7];
          *((unsigned char *)v19 + 23) = v21;
          sub_1017650A8(a1, v23 + 24, a4, 0xAAAAAAAAAAAAAAABLL * ((v23 + 24 - a1) >> 3));
        }
        BOOL v19 = (long long *)((char *)v19 - 24);
      }
      while (v18-- > 2);
    }
    return v13;
  }
  return a3;
}

void sub_101764E18(_Unwind_Exception *exception_object)
{
  if (v2 < 0) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_101764E30(uint64_t a1, uint64_t a2, uint64_t a3, __n128 *a4)
{
  unint64_t v6 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v22 = v4;
    uint64_t v23 = v5;
    unint64_t v7 = a4;
    uint64_t v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= (uint64_t)(0xAAAAAAAAAAAAAAABLL * (((uint64_t)a4 - a1) >> 3)))
    {
      uint64_t v12 = (0x5555555555555556 * (((uint64_t)a4 - a1) >> 3)) | 1;
      uint64_t v13 = a1 + 24 * v12;
      uint64_t v14 = 0x5555555555555556 * (((uint64_t)a4 - a1) >> 3) + 2;
      if (v14 < a3 && sub_100130070(a2, (const void **)(a1 + 24 * v12), (const void **)(v13 + 24)))
      {
        v13 += 24;
        uint64_t v12 = v14;
      }
      if (!sub_100130070(a2, (const void **)v13, (const void **)v7))
      {
        __n128 v20 = *v7;
        unint64_t v21 = v7[1].n128_u64[0];
        v7->n128_u64[1] = 0;
        v7[1].n128_u64[0] = 0;
        v7->n128_u64[0] = 0;
        while (1)
        {
          long long v16 = (__n128 *)v13;
          if (v7[1].n128_i8[7] < 0) {
            operator delete((void *)v7->n128_u64[0]);
          }
          __n128 v17 = *(__n128 *)v13;
          v7[1].n128_u64[0] = *(void *)(v13 + 16);
          *unint64_t v7 = v17;
          *(unsigned char *)(v13 + 23) = 0;
          *(unsigned char *)uint64_t v13 = 0;
          if (v9 < v12) {
            break;
          }
          uint64_t v18 = (2 * v12) | 1;
          uint64_t v13 = a1 + 24 * v18;
          uint64_t v19 = 2 * v12 + 2;
          if (v19 < a3 && sub_100130070(a2, (const void **)(a1 + 24 * v18), (const void **)(v13 + 24)))
          {
            v13 += 24;
            uint64_t v18 = v19;
          }
          unint64_t v7 = v16;
          uint64_t v12 = v18;
          if (sub_100130070(a2, (const void **)v13, (const void **)&v20))
          {
            if (v16[1].n128_i8[7] < 0) {
              operator delete((void *)v16->n128_u64[0]);
            }
            break;
          }
        }
        __n128 result = v20;
        v16[1].n128_u64[0] = v21;
        *long long v16 = result;
      }
    }
  }
  return result;
}

uint64_t sub_101764FCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = a1 + 24 * v6 + 24;
    uint64_t v10 = 2 * v6;
    uint64_t v6 = (2 * v6) | 1;
    uint64_t v11 = v10 + 2;
    if (v10 + 2 < a3 && sub_100130070(a2, (const void **)v9, (const void **)(v9 + 24)))
    {
      v9 += 24;
      uint64_t v6 = v11;
    }
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v12 = *(_OWORD *)v9;
    *(void *)(a1 + 16) = *(void *)(v9 + 16);
    *(_OWORD *)a1 = v12;
    *(unsigned char *)(v9 + 23) = 0;
    *(unsigned char *)uint64_t v9 = 0;
    a1 = v9;
  }
  while (v6 <= v8);
  return v9;
}

double sub_1017650A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 >= 2)
  {
    uint64_t v16 = v4;
    uint64_t v17 = v5;
    unint64_t v8 = (unint64_t)(a4 - 2) >> 1;
    uint64_t v9 = (long long *)(a1 + 24 * v8);
    uint64_t v10 = (long long *)(a2 - 24);
    if (sub_100130070(a3, (const void **)v9, (const void **)(a2 - 24)))
    {
      long long v14 = *v10;
      uint64_t v15 = *((void *)v10 + 2);
      *((void *)v10 + 1) = 0;
      *((void *)v10 + 2) = 0;
      *(void *)uint64_t v10 = 0;
      while (1)
      {
        long long v12 = v9;
        if (*((char *)v10 + 23) < 0) {
          operator delete(*(void **)v10);
        }
        long long v13 = *v9;
        *((void *)v10 + 2) = *((void *)v9 + 2);
        *uint64_t v10 = v13;
        *((unsigned char *)v9 + 23) = 0;
        *(unsigned char *)uint64_t v9 = 0;
        if (!v8) {
          break;
        }
        unint64_t v8 = (v8 - 1) >> 1;
        uint64_t v9 = (long long *)(a1 + 24 * v8);
        uint64_t v10 = v12;
        if (!sub_100130070(a3, (const void **)v9, (const void **)&v14))
        {
          if (*((char *)v12 + 23) < 0) {
            operator delete(*(void **)v12);
          }
          break;
        }
      }
      double result = *(double *)&v14;
      *long long v12 = v14;
      *((void *)v12 + 2) = v15;
    }
  }
  return result;
}

uint64_t sub_1017651AC(uint64_t result)
{
  *(void *)double result = &off_102339C40;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_1017651D4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

double sub_10176520C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102339C40;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    double result = *(double *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(double *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 4) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 4u;
    *(unsigned char *)(a1 + 28) = v3;
    *(_DWORD *)(a1 + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *(double *)(a2 + 16);
    *(unsigned char *)(a1 + 28) = v3 | 2;
    *(double *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_10176528C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 24));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 28) & 2) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "timestampGestureBegin", *(double *)(a1 + 16));
LABEL_5:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101765330(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  for (int i = *((unsigned __int8 *)this + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)this + 24))
  {
    uint64_t v8 = *(void *)this;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)this + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_20;
        }
        v15 += 7;
        unint64_t v2 = v17;
        if (v16++ >= 9)
        {
LABEL_19:
          unint64_t v11 = 0;
          goto LABEL_20;
        }
      }
      int i = 1;
      *((unsigned char *)this + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)this + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_20:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v20 = v11 >> 3;
    if ((v11 >> 3) == 3)
    {
      *(unsigned char *)(a1 + 28) |= 2u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
        goto LABEL_47;
      }
    }
    else
    {
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 28) |= 4u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_52;
            }
            unint64_t v30 = v21++;
            char v31 = *(unsigned char *)(v22 + v30);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_51;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_51:
          unint64_t v2 = v30 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_52:
        *(_DWORD *)(a1 + 24) = v25;
        goto LABEL_53;
      }
      if (v20 != 1)
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        goto LABEL_53;
      }
      *(unsigned char *)(a1 + 28) |= 1u;
      unint64_t v2 = *((void *)this + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
      {
        *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_47:
        unint64_t v2 = *((void *)this + 1) + 8;
        *((void *)this + 1) = v2;
        goto LABEL_53;
      }
    }
    *((unsigned char *)this + 24) = 1;
LABEL_53:
    unint64_t v3 = *((void *)this + 2);
  }
  return i == 0;
}

uint64_t sub_101765600(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 28) & 4) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 24), 2u);
    if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 16);

  return PB::Writer::write(this, v5, 3u);
}

uint64_t sub_10176568C(uint64_t result)
{
  *(void *)uint64_t result = &off_102339C78;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_1017656B4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1017656EC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102339C78;
  *(_DWORD *)(result + 64) = 0;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(result + 64) = 1;
    *(void *)(result + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 64) & 0x800) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 60);
    v3 |= 0x800u;
    *(_WORD *)(result + 64) = v3;
    *(unsigned char *)(result + 60) = v5;
    __int16 v2 = *(_WORD *)(a2 + 64);
  }
LABEL_6:
  if ((v2 & 0x400) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 56);
    v3 |= 0x400u;
    *(_WORD *)(result + 64) = v3;
    *(_DWORD *)(result + 56) = v6;
    __int16 v2 = *(_WORD *)(a2 + 64);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x1000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 64) = v3;
  *(void *)(result + 16) = v7;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x1000) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  char v8 = *(unsigned char *)(a2 + 61);
  v3 |= 0x1000u;
  *(_WORD *)(result + 64) = v3;
  *(unsigned char *)(result + 61) = v8;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v9 = *(_DWORD *)(a2 + 40);
  v3 |= 0x40u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 40) = v9;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v10 = *(_DWORD *)(a2 + 44);
  v3 |= 0x80u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 44) = v10;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v11 = *(_DWORD *)(a2 + 48);
  v3 |= 0x100u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 48) = v11;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v12 = *(_DWORD *)(a2 + 28);
  v3 |= 8u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 28) = v12;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v13 = *(_DWORD *)(a2 + 32);
  v3 |= 0x10u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 32) = v13;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 4) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v14 = *(_DWORD *)(a2 + 36);
  v3 |= 0x20u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 36) = v14;
  __int16 v2 = *(_WORD *)(a2 + 64);
  if ((v2 & 4) == 0)
  {
LABEL_16:
    if ((v2 & 0x200) == 0) {
      return result;
    }
LABEL_28:
    int v16 = *(_DWORD *)(a2 + 52);
    *(_WORD *)(result + 64) = v3 | 0x200;
    *(_DWORD *)(result + 52) = v16;
    return result;
  }
LABEL_27:
  int v15 = *(_DWORD *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 64) = v3;
  *(_DWORD *)(result + 24) = v15;
  if ((*(_WORD *)(a2 + 64) & 0x200) != 0) {
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_101765884(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(this, "classificationType", *(_DWORD *)(a1 + 24));
    __int16 v5 = *(_WORD *)(a1 + 64);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "intervalSleepBeginToSleepDetected", *(float *)(a1 + 28));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "intervalSleepDetectedToGazeDetected", *(float *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "intervalSleepDetectedToWakeDetected", *(float *)(a1 + 36));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "intervalWakeBeginToWakeDetected", *(float *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "intervalWakeDetectedToGazeDetected", *(float *)(a1 + 44));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x100) == 0)
  {
LABEL_8:
    if ((v5 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "intervalWakeDetectedToSleepDetected", *(float *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "shouldNotify", *(unsigned char *)(a1 + 60));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x1000) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "shouldNotifyStats", *(unsigned char *)(a1 + 61));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "sleepType", *(_DWORD *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 64);
  if ((v5 & 1) == 0)
  {
LABEL_13:
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_29:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(_WORD *)(a1 + 64) & 2) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(this, "timestampGestureBegin", *(double *)(a1 + 16));
LABEL_15:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101765A68(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 64) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_39;
            case 2u:
              *(_WORD *)(a1 + 64) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v22 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v21 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v22 = v21 != 0;
              }
              *(unsigned char *)(a1 + 60) = v22;
              goto LABEL_117;
            case 3u:
              *(_WORD *)(a1 + 64) |= 0x400u;
              unint64_t v23 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v24 = *(void *)this;
              if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v27 = 0;
                if (v2 <= v23) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v23)
                  {
                    LODWORD(v27) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_106;
                  }
                  unint64_t v45 = v23++;
                  char v46 = *(unsigned char *)(v24 + v45);
                  *((void *)this + 1) = v23;
                  v27 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    LODWORD(v27) = 0;
LABEL_105:
                    unint64_t v2 = v45 + 1;
                    goto LABEL_106;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v27) = 0;
                }
                goto LABEL_105;
              }
              char v25 = 0;
              unsigned int v26 = 0;
              uint64_t v27 = 0;
              do
              {
                unint64_t v2 = v23 + 1;
                *((void *)this + 1) = v23 + 1;
                char v28 = *(unsigned char *)(v24 + v23);
                v27 |= (unint64_t)(v28 & 0x7F) << v25;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_106;
                }
                v25 += 7;
                unint64_t v23 = v2;
                BOOL v14 = v26++ > 8;
              }
              while (!v14);
              LODWORD(v27) = 0;
LABEL_106:
              *(_DWORD *)(a1 + 56) = v27;
              goto LABEL_117;
            case 4u:
              *(_WORD *)(a1 + 64) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
LABEL_39:
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_101;
            case 5u:
              *(_WORD *)(a1 + 64) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 61) = v30;
              goto LABEL_117;
            case 6u:
              *(_WORD *)(a1 + 64) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 40) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_100;
            case 7u:
              *(_WORD *)(a1 + 64) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_100;
            case 8u:
              *(_WORD *)(a1 + 64) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_100;
            case 9u:
              *(_WORD *)(a1 + 64) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_100;
            case 0xAu:
              *(_WORD *)(a1 + 64) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_59;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_100;
            case 0xBu:
              *(_WORD *)(a1 + 64) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
LABEL_100:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_101:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_59:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_117;
            case 0xCu:
              *(_WORD *)(a1 + 64) |= 4u;
              unint64_t v31 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v32 = *(void *)this;
              if (v31 > 0xFFFFFFFFFFFFFFF5 || v31 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v35 = 0;
                if (v2 <= v31) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v31)
                  {
                    LODWORD(v35) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_111;
                  }
                  unint64_t v49 = v31++;
                  char v50 = *(unsigned char *)(v32 + v49);
                  *((void *)this + 1) = v31;
                  v35 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v35) = 0;
LABEL_110:
                    unint64_t v2 = v49 + 1;
                    goto LABEL_111;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v35) = 0;
                }
                goto LABEL_110;
              }
              char v33 = 0;
              unsigned int v34 = 0;
              uint64_t v35 = 0;
              do
              {
                unint64_t v2 = v31 + 1;
                *((void *)this + 1) = v31 + 1;
                char v36 = *(unsigned char *)(v32 + v31);
                v35 |= (unint64_t)(v36 & 0x7F) << v33;
                if ((v36 & 0x80) == 0) {
                  goto LABEL_111;
                }
                v33 += 7;
                unint64_t v31 = v2;
                BOOL v14 = v34++ > 8;
              }
              while (!v14);
              LODWORD(v35) = 0;
LABEL_111:
              *(_DWORD *)(a1 + 24) = v35;
              goto LABEL_117;
            case 0xDu:
              *(_WORD *)(a1 + 64) |= 0x200u;
              unint64_t v37 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v38 = *(void *)this;
              if (v37 > 0xFFFFFFFFFFFFFFF5 || v37 + 10 > v2)
              {
                char v51 = 0;
                unsigned int v52 = 0;
                uint64_t v41 = 0;
                if (v2 <= v37) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v37)
                  {
                    LODWORD(v41) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_116;
                  }
                  unint64_t v53 = v37++;
                  char v54 = *(unsigned char *)(v38 + v53);
                  *((void *)this + 1) = v37;
                  v41 |= (unint64_t)(v54 & 0x7F) << v51;
                  if ((v54 & 0x80) == 0) {
                    break;
                  }
                  v51 += 7;
                  BOOL v14 = v52++ > 8;
                  if (v14)
                  {
                    LODWORD(v41) = 0;
LABEL_115:
                    unint64_t v2 = v53 + 1;
                    goto LABEL_116;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v41) = 0;
                }
                goto LABEL_115;
              }
              char v39 = 0;
              unsigned int v40 = 0;
              uint64_t v41 = 0;
              do
              {
                unint64_t v2 = v37 + 1;
                *((void *)this + 1) = v37 + 1;
                char v42 = *(unsigned char *)(v38 + v37);
                v41 |= (unint64_t)(v42 & 0x7F) << v39;
                if ((v42 & 0x80) == 0) {
                  goto LABEL_116;
                }
                v39 += 7;
                unint64_t v37 = v2;
                BOOL v14 = v40++ > 8;
              }
              while (!v14);
              LODWORD(v41) = 0;
LABEL_116:
              *(_DWORD *)(a1 + 52) = v41;
LABEL_117:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_117;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101766138(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 64);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    __int16 v4 = *(_WORD *)(v3 + 64);
    if ((v4 & 0x800) == 0)
    {
LABEL_3:
      if ((v4 & 0x400) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((*(_WORD *)(result + 64) & 0x800) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 60), 2u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x400) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 56), 3u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 4u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x1000) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 61), 5u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x40) == 0)
  {
LABEL_7:
    if ((v4 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 40), 6u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x80) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 7u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 8u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 9u);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 0xAu);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x20) == 0)
  {
LABEL_12:
    if ((v4 & 4) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 24), 0xCu);
    if ((*(_WORD *)(v3 + 64) & 0x200) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 0xBu);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 4) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v4 & 0x200) == 0) {
    return result;
  }
LABEL_27:
  unsigned int v5 = *(_DWORD *)(v3 + 52);

  return PB::Writer::writeVarInt(this, v5, 0xDu);
}

uint64_t sub_1017662DC(uint64_t result)
{
  *(void *)uint64_t result = &off_102339CB0;
  *(_DWORD *)(result + 100) = 0;
  return result;
}

void sub_101766304(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10176633C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102339CB0;
  *(_DWORD *)(result + 100) = 0;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x100) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 72);
    __int16 v3 = 256;
    *(_WORD *)(result + 100) = 256;
    *(void *)(result + 72) = v4;
    __int16 v2 = *(_WORD *)(a2 + 100);
    if ((v2 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*(_WORD *)(a2 + 100) & 0x1000) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 96);
    v3 |= 0x1000u;
    *(_WORD *)(result + 100) = v3;
    *(_DWORD *)(result + 96) = v5;
    __int16 v2 = *(_WORD *)(a2 + 100);
  }
LABEL_6:
  if ((v2 & 0x40) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 56);
    v3 |= 0x40u;
    *(_WORD *)(result + 100) = v3;
    *(void *)(result + 56) = v6;
    __int16 v2 = *(_WORD *)(a2 + 100);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 64) = v7;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v8 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 40) = v8;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v9 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 48) = v9;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 8) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v10 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 32) = v10;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v11 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 8) = v11;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v12 = *(void *)(a2 + 80);
  v3 |= 0x200u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 80) = v12;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 2) == 0)
  {
LABEL_14:
    if ((v2 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v13 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 16) = v13;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 4) == 0)
  {
LABEL_15:
    if ((v2 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v14 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 100) = v3;
  *(void *)(result + 24) = v14;
  __int16 v2 = *(_WORD *)(a2 + 100);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x800) == 0) {
      return result;
    }
LABEL_28:
    int v16 = *(_DWORD *)(a2 + 92);
    *(_WORD *)(result + 100) = v3 | 0x800;
    *(_DWORD *)(result + 92) = v16;
    return result;
  }
LABEL_27:
  int v15 = *(_DWORD *)(a2 + 88);
  v3 |= 0x400u;
  *(_WORD *)(result + 100) = v3;
  *(_DWORD *)(result + 88) = v15;
  if ((*(_WORD *)(a2 + 100) & 0x800) != 0) {
    goto LABEL_28;
  }
  return result;
}

uint64_t sub_1017664D4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 100);
  if (v5)
  {
    PB::TextFormatter::format(this, "altitude", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 100);
    if ((v5 & 0x400) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((*(_WORD *)(a1 + 100) & 0x400) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "confidence", *(_DWORD *)(a1 + 88));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "course", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "courseAccuracy", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "horizontalAccuracy", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "latitude", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x800) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "locationLoggingEnabled", *(_DWORD *)(a1 + 92));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v5 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "longitude", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v5 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "speed", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x80) == 0)
  {
LABEL_11:
    if ((v5 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(this, "speedAccuracy", *(double *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x100) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 72));
  __int16 v5 = *(_WORD *)(a1 + 100);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_29:
  PB::TextFormatter::format(this, "type", *(_DWORD *)(a1 + 96));
  if ((*(_WORD *)(a1 + 100) & 0x200) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(this, "verticalAccuracy", *(double *)(a1 + 80));
LABEL_15:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1017666B8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 100) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 2u:
              *(_WORD *)(a1 + 100) |= 0x1000u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_102;
                  }
                  unint64_t v41 = v21++;
                  char v42 = *(unsigned char *)(v22 + v41);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_101:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_102;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_101;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_102;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_102:
              *(_DWORD *)(a1 + 96) = v25;
              goto LABEL_113;
            case 3u:
              *(_WORD *)(a1 + 100) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 4u:
              *(_WORD *)(a1 + 100) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 5u:
              *(_WORD *)(a1 + 100) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 6u:
              *(_WORD *)(a1 + 100) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 7u:
              *(_WORD *)(a1 + 100) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 8u:
              *(_WORD *)(a1 + 100) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 9u:
              *(_WORD *)(a1 + 100) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 0xAu:
              *(_WORD *)(a1 + 100) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_60;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_97;
            case 0xBu:
              *(_WORD *)(a1 + 100) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
LABEL_97:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_60:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_113;
            case 0xCu:
              *(_WORD *)(a1 + 100) |= 0x400u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v43 = 0;
                unsigned int v44 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_107;
                  }
                  unint64_t v45 = v27++;
                  char v46 = *(unsigned char *)(v28 + v45);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v46 & 0x7F) << v43;
                  if ((v46 & 0x80) == 0) {
                    break;
                  }
                  v43 += 7;
                  BOOL v14 = v44++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_106:
                    unint64_t v2 = v45 + 1;
                    goto LABEL_107;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_106;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_107;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_107:
              *(_DWORD *)(a1 + 88) = v31;
              goto LABEL_113;
            case 0xDu:
              *(_WORD *)(a1 + 100) |= 0x800u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v47 = 0;
                unsigned int v48 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_112;
                  }
                  unint64_t v49 = v33++;
                  char v50 = *(unsigned char *)(v34 + v49);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v50 & 0x7F) << v47;
                  if ((v50 & 0x80) == 0) {
                    break;
                  }
                  v47 += 7;
                  BOOL v14 = v48++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_111:
                    unint64_t v2 = v49 + 1;
                    goto LABEL_112;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_111;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_112;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_112:
              *(_DWORD *)(a1 + 92) = v37;
LABEL_113:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_113;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101766D68(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 100);
  if ((v4 & 0x100) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 72), 1u);
    __int16 v4 = *(_WORD *)(v3 + 100);
    if ((v4 & 0x1000) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((*(_WORD *)(result + 100) & 0x1000) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 96), 2u);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 3u);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 4u);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 5u);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 6u);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 7u);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 8u);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80), 9u);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 2) == 0)
  {
LABEL_11:
    if ((v4 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 0xAu);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 4) == 0)
  {
LABEL_12:
    if ((v4 & 0x400) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 88), 0xCu);
    if ((*(_WORD *)(v3 + 100) & 0x800) == 0) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_25:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 0xBu);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x400) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v4 & 0x800) == 0) {
    return result;
  }
LABEL_27:
  unsigned int v5 = *(_DWORD *)(v3 + 92);

  return PB::Writer::writeVarInt(this, v5, 0xDu);
}

uint64_t sub_101766F0C(uint64_t result)
{
  *(void *)uint64_t result = &off_102339CE8;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

void sub_101766F34(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101766F6C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102339CE8;
  *(_DWORD *)(result + 12) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    char v2 = *(unsigned char *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(unsigned char *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_101766FA8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "lockScreen", *(unsigned char *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101767008(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        if (v2 >= v3)
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 8) = v21;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101767198(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::write(this, *(unsigned char *)(result + 8), 1u);
  }
  return result;
}

void *sub_1017671B8(void *result)
{
  *uint64_t result = &off_102339D20;
  result[1] = 0;
  return result;
}

void sub_1017671D8(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102339D20;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101767258(PB::Base *a1)
{
  sub_1017671D8(a1);

  operator delete();
}

void *sub_101767290(void *result, uint64_t a2)
{
  *uint64_t result = &off_102339D20;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_101767338(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1017673B4(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017675B0(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_1017675CC(uint64_t result)
{
  *(void *)uint64_t result = &off_102339D58;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_1017675F4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10176762C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102339D58;
  *(_DWORD *)(result + 20) = 0;
  if (*(unsigned char *)(a2 + 20))
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(unsigned char *)(result + 20) = 1;
    *(void *)(result + 8) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*(unsigned char *)(a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 20) = v2;
    *(_DWORD *)(result + 16) = v4;
  }
  return result;
}

uint64_t sub_101767690(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 20);
  }
  if (v5) {
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10176770C(uint64_t a1, PB::Reader *this)
{
  unint64_t v3 = *((void *)this + 1);
  unint64_t v2 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)this + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 2)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_64;
            }
            unint64_t v40 = v27++;
            char v41 = *(unsigned char *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_63;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_63:
          unint64_t v3 = v40 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v3 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v3;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }
LABEL_64:
        *(_DWORD *)(a1 + 16) = v31;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v3 = *((void *)this + 1);
          }
          else {
            unint64_t v3 = *((void *)this + 2);
          }
          while (1)
          {
            if (v3 == v21)
            {
              uint64_t v25 = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_60;
            }
            unint64_t v36 = v21++;
            char v37 = *(unsigned char *)(v22 + v36);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)this + 24)) {
            uint64_t v25 = 0;
          }
LABEL_59:
          unint64_t v3 = v36 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v3 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v3;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
              break;
            }
          }
        }
LABEL_60:
        *(void *)(a1 + 8) = v25;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v3 >= v2 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101767A38(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 20);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(void *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v5 = *(_DWORD *)(v3 + 16);
    return PB::Writer::writeVarInt(this, v5, 2u);
  }
  return result;
}

uint64_t sub_101767AA4(uint64_t result)
{
  *(void *)uint64_t result = &off_102339D90;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_101767AC8(PB::Base *this)
{
  *(void *)this = &off_102339D90;
  uint64_t v4 = *((void *)this + 1);
  unint64_t v2 = (void *)((char *)this + 8);
  uint64_t v3 = v4;
  *unint64_t v2 = 0;
  if (v4) {
    sub_10068D784((uint64_t)v2, v3);
  }

  PB::Base::~Base(this);
}

void sub_101767B2C(PB::Base *a1)
{
  sub_101767AC8(a1);

  operator delete();
}

uint64_t sub_101767B64(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102339D90;
  *(void *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  char v2 = *(unsigned char *)(a2 + 24);
  if (v2)
  {
    int v3 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 24) |= 1u;
    *(_DWORD *)(result + 16) = v3;
    char v2 = *(unsigned char *)(a2 + 24);
  }
  if ((v2 & 2) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 20);
    *(unsigned char *)(result + 24) |= 2u;
    *(unsigned char *)(result + 20) = v4;
  }
  return result;
}

uint64_t sub_101767C60(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if (v5)
  {
    PB::TextFormatter::format(this, "accessoryType", *(_DWORD *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 24);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(this, "isAttached", *(unsigned char *)(a1 + 20));
  }
  if (*(void *)(a1 + 8)) {
    PB::TextFormatter::format();
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101767CF4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        if (v21 >= *((void *)this + 2))
        {
          BOOL v24 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          unint64_t v22 = v21 + 1;
          int v23 = *(unsigned __int8 *)(*(void *)this + v21);
          *((void *)this + 1) = v22;
          BOOL v24 = v23 != 0;
        }
        *(unsigned char *)(a1 + 20) = v24;
      }
      else if (v20 == 2)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v25 = *((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        uint64_t v27 = *(void *)this;
        if (v25 > 0xFFFFFFFFFFFFFFF5 || v25 + 10 > v26)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v30 = 0;
          if (v26 <= v25) {
            unint64_t v26 = *((void *)this + 1);
          }
          while (1)
          {
            if (v26 == v25)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_48;
            }
            unint64_t v36 = v25 + 1;
            char v37 = *(unsigned char *)(v27 + v25);
            *((void *)this + 1) = v36;
            v30 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            unint64_t v25 = v36;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
LABEL_44:
              LODWORD(v30) = 0;
              goto LABEL_48;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v30) = 0;
          }
        }
        else
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          while (1)
          {
            unint64_t v31 = v25 + 1;
            *((void *)this + 1) = v25 + 1;
            char v32 = *(unsigned char *)(v27 + v25);
            v30 |= (unint64_t)(v32 & 0x7F) << v28;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            unint64_t v25 = v31;
            BOOL v14 = v29++ > 8;
            if (v14) {
              goto LABEL_44;
            }
          }
        }
LABEL_48:
        *(_DWORD *)(a1 + 16) = v30;
      }
      else
      {
        if (v20 == 1) {
          operator new();
        }
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101767FE0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  if (*(void *)(result + 8)) {
    uint64_t result = PB::Writer::write();
  }
  char v4 = *(unsigned char *)(v3 + 24);
  if (v4)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 16), 2u);
    char v4 = *(unsigned char *)(v3 + 24);
  }
  if ((v4 & 2) != 0)
  {
    char v5 = *(unsigned char *)(v3 + 20);
    return PB::Writer::write(this, v5, 3u);
  }
  return result;
}

uint64_t sub_101768060(uint64_t result)
{
  *(void *)uint64_t result = &off_102339DC8;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

void sub_101768088(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1017680C0(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102339DC8;
  *(_DWORD *)(result + 12) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    char v2 = *(unsigned char *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(unsigned char *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_1017680FC(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "isCharging", *(unsigned char *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10176815C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        if (v2 >= v3)
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 8) = v21;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017682EC(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::write(this, *(unsigned char *)(result + 8), 1u);
  }
  return result;
}

uint64_t sub_10176830C(uint64_t result)
{
  *(void *)uint64_t result = &off_102339E00;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

void sub_101768334(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10176836C(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102339E00;
  *(_DWORD *)(result + 36) = 0;
  char v2 = *(unsigned char *)(a2 + 36);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 36) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 36);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 36) & 8) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(result + 36) = v3;
    *(_DWORD *)(result + 24) = v5;
    char v2 = *(unsigned char *)(a2 + 36);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 28);
    v3 |= 0x10u;
    *(unsigned char *)(result + 36) = v3;
    *(_DWORD *)(result + 28) = v6;
    char v2 = *(unsigned char *)(a2 + 36);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(unsigned char *)(result + 36) = v3;
  *(_DWORD *)(result + 32) = v7;
  char v2 = *(unsigned char *)(a2 + 36);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 2) == 0) {
      return result;
    }
LABEL_14:
    int v9 = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(result + 36) = v3 | 2;
    *(_DWORD *)(result + 16) = v9;
    return result;
  }
LABEL_13:
  int v8 = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(result + 36) = v3;
  *(_DWORD *)(result + 20) = v8;
  if ((*(unsigned char *)(a2 + 36) & 2) != 0) {
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_101768440(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "location", *(_DWORD *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 36);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 36) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "temperature", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "x", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 36);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(this, "y", *(float *)(a1 + 28));
  if ((*(unsigned char *)(a1 + 36) & 0x20) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(this, "z", *(float *)(a1 + 32));
LABEL_8:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101768544(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 36) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_38;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              unint64_t v2 = *((void *)this + 1) + 8;
              goto LABEL_55;
            case 2u:
              *(unsigned char *)(a1 + 36) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_38;
              }
              *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_54;
            case 3u:
              *(unsigned char *)(a1 + 36) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_38;
              }
              *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_54;
            case 4u:
              *(unsigned char *)(a1 + 36) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_38;
              }
              *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_54;
            case 5u:
              *(unsigned char *)(a1 + 36) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
LABEL_54:
                unint64_t v2 = *((void *)this + 1) + 4;
LABEL_55:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_38:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_61;
            case 6u:
              *(unsigned char *)(a1 + 36) |= 2u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_60;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_59:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_60;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_59;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_60;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_60:
              *(_DWORD *)(a1 + 16) = v25;
LABEL_61:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_61;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_1017688F0(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 36);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(result + 36) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 2u);
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 3u);
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 5u);
    if ((*(unsigned char *)(v3 + 36) & 2) == 0) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 4u);
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_13:
  int v5 = *(_DWORD *)(v3 + 16);

  return PB::Writer::writeVarInt(this, v5, 6u);
}

double sub_1017689D0(uint64_t a1)
{
  *(void *)a1 = &off_102339E38;
  *(_DWORD *)(a1 + 112) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  return result;
}

void sub_101768A10(PB::Base *this)
{
  *(void *)this = &off_102339E38;
  unint64_t v2 = (void *)*((void *)this + 10);
  if (v2)
  {
    *((void *)this + 11) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 7);
  if (v3)
  {
    *((void *)this + 8) = v3;
    operator delete(v3);
  }
  char v4 = (void *)*((void *)this + 4);
  if (v4)
  {
    *((void *)this + 5) = v4;
    operator delete(v4);
  }
  int v5 = (void *)*((void *)this + 1);
  if (v5)
  {
    *((void *)this + 2) = v5;
    operator delete(v5);
  }

  PB::Base::~Base(this);
}

void sub_101768AA4(PB::Base *a1)
{
  sub_101768A10(a1);

  operator delete();
}

uint64_t sub_101768ADC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102339E38;
  *(_OWORD *)(a1 + 8) = 0u;
  char v4 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 56) = 0u;
  int v5 = (char *)(a1 + 56);
  *(_DWORD *)(a1 + 112) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  if (*(unsigned char *)(a2 + 112))
  {
    uint64_t v6 = *(void *)(a2 + 104);
    *(unsigned char *)(a1 + 112) = 1;
    *(void *)(a1 + 104) = v6;
  }
  if (a1 != a2)
  {
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
    sub_1000FB43C((char *)(a1 + 80), *(char **)(a2 + 80), *(void *)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 2);
    sub_1000FB43C(v5, *(char **)(a2 + 56), *(void *)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 2);
  }
  return a1;
}

uint64_t sub_101768BC8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(float **)(a1 + 32);
  uint64_t v6 = *(float **)(a1 + 40);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "biasEst", v7);
  }
  uint64_t v8 = *(float **)(a1 + 8);
  char v9 = *(float **)(a1 + 16);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "biasEstVar", v10);
  }
  unint64_t v11 = *(float **)(a1 + 56);
  unint64_t v12 = *(float **)(a1 + 64);
  while (v11 != v12)
  {
    float v13 = *v11++;
    PB::TextFormatter::format(this, "residual", v13);
  }
  BOOL v14 = *(float **)(a1 + 80);
  char v15 = *(float **)(a1 + 88);
  while (v14 != v15)
  {
    float v16 = *v14++;
    PB::TextFormatter::format(this, "temperature", v16);
  }
  if (*(unsigned char *)(a1 + 112)) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 104));
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_101768CE8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 56);
    char v9 = (void **)(a1 + 80);
    uint64_t v128 = a1 + 96;
    uint64_t v129 = a1 + 72;
    float v10 = (void **)(a1 + 8);
    uint64_t v127 = a1 + 24;
    unint64_t v11 = (void **)(a1 + 32);
    uint64_t v12 = a1 + 48;
    while (1)
    {
      uint64_t v13 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v16 = 0;
      while (1)
      {
        unint64_t v17 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v18 = *(unsigned char *)(v13 + v2);
        v16 |= (unint64_t)(v18 & 0x7F) << v14;
        if ((v18 & 0x80) == 0) {
          break;
        }
        v14 += 7;
        unint64_t v2 = v17;
        if (v15++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v25 = v16 & 7;
      if (v25 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v16 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 112) |= 1u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_196;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v26);
          uint64_t v27 = *((void *)this + 1) + 8;
          goto LABEL_198;
        case 2u:
          if (v25 != 2)
          {
            uint64_t v85 = *(char **)(a1 + 40);
            unint64_t v84 = *(void *)(a1 + 48);
            if ((unint64_t)v85 >= v84)
            {
              uint64_t v93 = (char *)*v11;
              uint64_t v94 = (v85 - (unsigned char *)*v11) >> 2;
              unint64_t v95 = v94 + 1;
              if ((unint64_t)(v94 + 1) >> 62) {
LABEL_207:
              }
                sub_1001D7FD4();
              uint64_t v96 = v84 - (void)v93;
              if (v96 >> 1 > v95) {
                unint64_t v95 = v96 >> 1;
              }
              if ((unint64_t)v96 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v97 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v97 = v95;
              }
              if (v97)
              {
                char v98 = (char *)sub_10017EA34(v12, v97);
                uint64_t v93 = *(char **)(a1 + 32);
                uint64_t v85 = *(char **)(a1 + 40);
              }
              else
              {
                char v98 = 0;
              }
              unint64_t v117 = &v98[4 * v94];
              *(_DWORD *)unint64_t v117 = 0;
              unint64_t v86 = v117 + 4;
              while (v85 != v93)
              {
                int v118 = *((_DWORD *)v85 - 1);
                v85 -= 4;
                *((_DWORD *)v117 - 1) = v118;
                v117 -= 4;
              }
              *(void *)(a1 + 32) = v117;
              *(void *)(a1 + 40) = v86;
              *(void *)(a1 + 48) = &v98[4 * v97];
              if (v93) {
                operator delete(v93);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v85 = 0;
              unint64_t v86 = v85 + 4;
            }
            *(void *)(a1 + 40) = v86;
            goto LABEL_194;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v28 = *((void *)this + 1);
          unint64_t v29 = *((void *)this + 2);
          while (v28 < v29 && !*((unsigned char *)this + 24))
          {
            unint64_t v31 = *(char **)(a1 + 40);
            unint64_t v30 = *(void *)(a1 + 48);
            if ((unint64_t)v31 >= v30)
            {
              unint64_t v33 = (char *)*v11;
              uint64_t v34 = (v31 - (unsigned char *)*v11) >> 2;
              unint64_t v35 = v34 + 1;
              if ((unint64_t)(v34 + 1) >> 62) {
                goto LABEL_207;
              }
              uint64_t v36 = v30 - (void)v33;
              if (v36 >> 1 > v35) {
                unint64_t v35 = v36 >> 1;
              }
              if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v37 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v37 = v35;
              }
              if (v37)
              {
                char v38 = (char *)sub_10017EA34(v12, v37);
                unint64_t v33 = *(char **)(a1 + 32);
                unint64_t v31 = *(char **)(a1 + 40);
              }
              else
              {
                char v38 = 0;
              }
              unsigned int v39 = &v38[4 * v34];
              *(_DWORD *)unsigned int v39 = 0;
              char v32 = v39 + 4;
              while (v31 != v33)
              {
                int v40 = *((_DWORD *)v31 - 1);
                v31 -= 4;
                *((_DWORD *)v39 - 1) = v40;
                v39 -= 4;
              }
              *(void *)(a1 + 32) = v39;
              *(void *)(a1 + 40) = v32;
              *(void *)(a1 + 48) = &v38[4 * v37];
              if (v33) {
                operator delete(v33);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v31 = 0;
              char v32 = v31 + 4;
            }
            *(void *)(a1 + 40) = v32;
            unint64_t v41 = *((void *)this + 1);
            if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > *((void *)this + 2)) {
              goto LABEL_124;
            }
            *(v32 - 1) = *(_DWORD *)(*(void *)this + v41);
            unint64_t v29 = *((void *)this + 2);
            unint64_t v28 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v28;
          }
          goto LABEL_125;
        case 3u:
          if (v25 != 2)
          {
            unint64_t v88 = *(char **)(a1 + 16);
            unint64_t v87 = *(void *)(a1 + 24);
            if ((unint64_t)v88 >= v87)
            {
              unsigned int v99 = (char *)*v10;
              uint64_t v100 = (v88 - (unsigned char *)*v10) >> 2;
              unint64_t v101 = v100 + 1;
              if ((unint64_t)(v100 + 1) >> 62) {
LABEL_208:
              }
                sub_1001D7FD4();
              uint64_t v102 = v87 - (void)v99;
              if (v102 >> 1 > v101) {
                unint64_t v101 = v102 >> 1;
              }
              if ((unint64_t)v102 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v103 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v103 = v101;
              }
              if (v103)
              {
                unint64_t v104 = (char *)sub_10017EA34(v127, v103);
                unsigned int v99 = *(char **)(a1 + 8);
                unint64_t v88 = *(char **)(a1 + 16);
              }
              else
              {
                unint64_t v104 = 0;
              }
              uint64_t v119 = &v104[4 * v100];
              *(_DWORD *)uint64_t v119 = 0;
              unint64_t v86 = v119 + 4;
              while (v88 != v99)
              {
                int v120 = *((_DWORD *)v88 - 1);
                v88 -= 4;
                *((_DWORD *)v119 - 1) = v120;
                v119 -= 4;
              }
              *(void *)(a1 + 8) = v119;
              *(void *)(a1 + 16) = v86;
              *(void *)(a1 + 24) = &v104[4 * v103];
              if (v99) {
                operator delete(v99);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v88 = 0;
              unint64_t v86 = v88 + 4;
            }
            *(void *)(a1 + 16) = v86;
            goto LABEL_194;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v42 = *((void *)this + 1);
          unint64_t v43 = *((void *)this + 2);
          while (v42 < v43 && !*((unsigned char *)this + 24))
          {
            unint64_t v45 = *(char **)(a1 + 16);
            unint64_t v44 = *(void *)(a1 + 24);
            if ((unint64_t)v45 >= v44)
            {
              char v47 = (char *)*v10;
              uint64_t v48 = (v45 - (unsigned char *)*v10) >> 2;
              unint64_t v49 = v48 + 1;
              if ((unint64_t)(v48 + 1) >> 62) {
                goto LABEL_208;
              }
              uint64_t v50 = v44 - (void)v47;
              if (v50 >> 1 > v49) {
                unint64_t v49 = v50 >> 1;
              }
              if ((unint64_t)v50 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v51 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v51 = v49;
              }
              if (v51)
              {
                unsigned int v52 = (char *)sub_10017EA34(v127, v51);
                char v47 = *(char **)(a1 + 8);
                unint64_t v45 = *(char **)(a1 + 16);
              }
              else
              {
                unsigned int v52 = 0;
              }
              unint64_t v53 = &v52[4 * v48];
              *(_DWORD *)unint64_t v53 = 0;
              char v46 = v53 + 4;
              while (v45 != v47)
              {
                int v54 = *((_DWORD *)v45 - 1);
                v45 -= 4;
                *((_DWORD *)v53 - 1) = v54;
                v53 -= 4;
              }
              *(void *)(a1 + 8) = v53;
              *(void *)(a1 + 16) = v46;
              *(void *)(a1 + 24) = &v52[4 * v51];
              if (v47) {
                operator delete(v47);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v45 = 0;
              char v46 = v45 + 4;
            }
            *(void *)(a1 + 16) = v46;
            unint64_t v55 = *((void *)this + 1);
            if (v55 > 0xFFFFFFFFFFFFFFFBLL || v55 + 4 > *((void *)this + 2)) {
              goto LABEL_124;
            }
            *(v46 - 1) = *(_DWORD *)(*(void *)this + v55);
            unint64_t v43 = *((void *)this + 2);
            unint64_t v42 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v42;
          }
          goto LABEL_125;
        case 4u:
          if (v25 != 2)
          {
            uint64_t v90 = *(char **)(a1 + 88);
            unint64_t v89 = *(void *)(a1 + 96);
            if ((unint64_t)v90 >= v89)
            {
              char v105 = (char *)*v9;
              uint64_t v106 = (v90 - (unsigned char *)*v9) >> 2;
              unint64_t v107 = v106 + 1;
              if ((unint64_t)(v106 + 1) >> 62) {
LABEL_209:
              }
                sub_1001D7FD4();
              uint64_t v108 = v89 - (void)v105;
              if (v108 >> 1 > v107) {
                unint64_t v107 = v108 >> 1;
              }
              if ((unint64_t)v108 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v109 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v109 = v107;
              }
              if (v109)
              {
                char v110 = (char *)sub_10017EA34(v128, v109);
                char v105 = *(char **)(a1 + 80);
                uint64_t v90 = *(char **)(a1 + 88);
              }
              else
              {
                char v110 = 0;
              }
              unint64_t v121 = &v110[4 * v106];
              *(_DWORD *)unint64_t v121 = 0;
              unint64_t v86 = v121 + 4;
              while (v90 != v105)
              {
                int v122 = *((_DWORD *)v90 - 1);
                v90 -= 4;
                *((_DWORD *)v121 - 1) = v122;
                v121 -= 4;
              }
              *(void *)(a1 + 80) = v121;
              *(void *)(a1 + 88) = v86;
              *(void *)(a1 + 96) = &v110[4 * v109];
              if (v105) {
                operator delete(v105);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v90 = 0;
              unint64_t v86 = v90 + 4;
            }
            *(void *)(a1 + 88) = v86;
            goto LABEL_194;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v56 = *((void *)this + 1);
          unint64_t v57 = *((void *)this + 2);
          while (v56 < v57 && !*((unsigned char *)this + 24))
          {
            unint64_t v59 = *(char **)(a1 + 88);
            unint64_t v58 = *(void *)(a1 + 96);
            if ((unint64_t)v59 >= v58)
            {
              char v61 = (char *)*v9;
              uint64_t v62 = (v59 - (unsigned char *)*v9) >> 2;
              unint64_t v63 = v62 + 1;
              if ((unint64_t)(v62 + 1) >> 62) {
                goto LABEL_209;
              }
              uint64_t v64 = v58 - (void)v61;
              if (v64 >> 1 > v63) {
                unint64_t v63 = v64 >> 1;
              }
              if ((unint64_t)v64 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v65 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v65 = v63;
              }
              if (v65)
              {
                unsigned int v66 = (char *)sub_10017EA34(v128, v65);
                char v61 = *(char **)(a1 + 80);
                unint64_t v59 = *(char **)(a1 + 88);
              }
              else
              {
                unsigned int v66 = 0;
              }
              unint64_t v67 = &v66[4 * v62];
              *(_DWORD *)unint64_t v67 = 0;
              char v60 = v67 + 4;
              while (v59 != v61)
              {
                int v68 = *((_DWORD *)v59 - 1);
                v59 -= 4;
                *((_DWORD *)v67 - 1) = v68;
                v67 -= 4;
              }
              *(void *)(a1 + 80) = v67;
              *(void *)(a1 + 88) = v60;
              *(void *)(a1 + 96) = &v66[4 * v65];
              if (v61) {
                operator delete(v61);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v59 = 0;
              char v60 = v59 + 4;
            }
            *(void *)(a1 + 88) = v60;
            unint64_t v69 = *((void *)this + 1);
            if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)this + 2)) {
              goto LABEL_124;
            }
            *(v60 - 1) = *(_DWORD *)(*(void *)this + v69);
            unint64_t v57 = *((void *)this + 2);
            unint64_t v56 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v56;
          }
          goto LABEL_125;
        case 5u:
          if (v25 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v70 = *((void *)this + 1);
            unint64_t v71 = *((void *)this + 2);
            while (v70 < v71 && !*((unsigned char *)this + 24))
            {
              char v73 = *(char **)(a1 + 64);
              unint64_t v72 = *(void *)(a1 + 72);
              if ((unint64_t)v73 >= v72)
              {
                unint64_t v75 = (char *)*v8;
                uint64_t v76 = (v73 - (unsigned char *)*v8) >> 2;
                unint64_t v77 = v76 + 1;
                if ((unint64_t)(v76 + 1) >> 62) {
                  goto LABEL_210;
                }
                uint64_t v78 = v72 - (void)v75;
                if (v78 >> 1 > v77) {
                  unint64_t v77 = v78 >> 1;
                }
                if ((unint64_t)v78 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v79 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v79 = v77;
                }
                if (v79)
                {
                  char v80 = (char *)sub_10017EA34(v129, v79);
                  unint64_t v75 = *(char **)(a1 + 56);
                  char v73 = *(char **)(a1 + 64);
                }
                else
                {
                  char v80 = 0;
                }
                unint64_t v81 = &v80[4 * v76];
                *(_DWORD *)unint64_t v81 = 0;
                unsigned int v74 = v81 + 4;
                while (v73 != v75)
                {
                  int v82 = *((_DWORD *)v73 - 1);
                  v73 -= 4;
                  *((_DWORD *)v81 - 1) = v82;
                  v81 -= 4;
                }
                *(void *)(a1 + 56) = v81;
                *(void *)(a1 + 64) = v74;
                *(void *)(a1 + 72) = &v80[4 * v79];
                if (v75) {
                  operator delete(v75);
                }
              }
              else
              {
                *(_DWORD *)char v73 = 0;
                unsigned int v74 = v73 + 4;
              }
              *(void *)(a1 + 64) = v74;
              unint64_t v83 = *((void *)this + 1);
              if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)this + 2))
              {
LABEL_124:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v74 - 1) = *(_DWORD *)(*(void *)this + v83);
              unint64_t v71 = *((void *)this + 2);
              unint64_t v70 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v70;
            }
LABEL_125:
            PB::Reader::recallMark();
          }
          else
          {
            unsigned int v92 = *(char **)(a1 + 64);
            unint64_t v91 = *(void *)(a1 + 72);
            if ((unint64_t)v92 >= v91)
            {
              unsigned int v111 = (char *)*v8;
              uint64_t v112 = (v92 - (unsigned char *)*v8) >> 2;
              unint64_t v113 = v112 + 1;
              if ((unint64_t)(v112 + 1) >> 62) {
LABEL_210:
              }
                sub_1001D7FD4();
              uint64_t v114 = v91 - (void)v111;
              if (v114 >> 1 > v113) {
                unint64_t v113 = v114 >> 1;
              }
              if ((unint64_t)v114 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v115 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v115 = v113;
              }
              if (v115)
              {
                unint64_t v116 = (char *)sub_10017EA34(v129, v115);
                unsigned int v111 = *(char **)(a1 + 56);
                unsigned int v92 = *(char **)(a1 + 64);
              }
              else
              {
                unint64_t v116 = 0;
              }
              unint64_t v123 = &v116[4 * v112];
              *(_DWORD *)unint64_t v123 = 0;
              unint64_t v86 = v123 + 4;
              while (v92 != v111)
              {
                int v124 = *((_DWORD *)v92 - 1);
                v92 -= 4;
                *((_DWORD *)v123 - 1) = v124;
                v123 -= 4;
              }
              *(void *)(a1 + 56) = v123;
              *(void *)(a1 + 64) = v86;
              *(void *)(a1 + 72) = &v116[4 * v115];
              if (v111) {
                operator delete(v111);
              }
            }
            else
            {
              *(_DWORD *)unsigned int v92 = 0;
              unint64_t v86 = v92 + 4;
            }
            *(void *)(a1 + 64) = v86;
LABEL_194:
            unint64_t v125 = *((void *)this + 1);
            if (v125 <= 0xFFFFFFFFFFFFFFFBLL && v125 + 4 <= *((void *)this + 2))
            {
              *(v86 - 1) = *(_DWORD *)(*(void *)this + v125);
              uint64_t v27 = *((void *)this + 1) + 4;
LABEL_198:
              *((void *)this + 1) = v27;
            }
            else
            {
LABEL_196:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_199:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || *((unsigned char *)this + 24)) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this, v16 >> 3, v25, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_199;
      }
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v16 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v22 = v2 + 1;
      char v23 = *(unsigned char *)(v13 + v2);
      *((void *)this + 1) = v22;
      v16 |= (unint64_t)(v23 & 0x7F) << v20;
      if ((v23 & 0x80) == 0) {
        goto LABEL_21;
      }
      v20 += 7;
      unint64_t v2 = v22;
      if (v21++ >= 9)
      {
LABEL_20:
        unint64_t v16 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017695F8(uint64_t result, PB::Writer *this)
{
  unint64_t v3 = (void *)result;
  if (*(unsigned char *)(result + 112)) {
    double result = PB::Writer::write(this, *(double *)(result + 104), 1u);
  }
  int v4 = (float *)v3[4];
  int v5 = (float *)v3[5];
  while (v4 != v5)
  {
    float v6 = *v4++;
    double result = PB::Writer::write(this, v6, 2u);
  }
  float v7 = (float *)v3[1];
  uint64_t v8 = (float *)v3[2];
  while (v7 != v8)
  {
    float v9 = *v7++;
    double result = PB::Writer::write(this, v9, 3u);
  }
  float v10 = (float *)v3[10];
  unint64_t v11 = (float *)v3[11];
  while (v10 != v11)
  {
    float v12 = *v10++;
    double result = PB::Writer::write(this, v12, 4u);
  }
  char v14 = (float *)v3[7];
  uint64_t v13 = (float *)v3[8];
  while (v14 != v13)
  {
    float v15 = *v14++;
    double result = PB::Writer::write(this, v15, 5u);
  }
  return result;
}

uint64_t sub_1017696BC(uint64_t result)
{
  *(void *)double result = &off_102339E70;
  *(_DWORD *)(result + 44) = 0;
  return result;
}

void sub_1017696E4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10176971C(uint64_t result, uint64_t a2)
{
  *(void *)double result = &off_102339E70;
  *(_DWORD *)(result + 44) = 0;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    char v3 = 4;
    *(unsigned char *)(result + 44) = 4;
    *(void *)(result + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 44) & 2) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 44) = v3;
    *(void *)(result + 16) = v5;
    char v2 = *(unsigned char *)(a2 + 44);
  }
LABEL_6:
  if (v2)
  {
    uint64_t v6 = *(void *)(a2 + 8);
    v3 |= 1u;
    *(unsigned char *)(result + 44) = v3;
    *(void *)(result + 8) = v6;
    char v2 = *(unsigned char *)(a2 + 44);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(unsigned char *)(result + 44) = v3;
  *(void *)(result + 32) = v7;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  char v8 = *(unsigned char *)(a2 + 42);
  v3 |= 0x40u;
  *(unsigned char *)(result + 44) = v3;
  *(unsigned char *)(result + 42) = v8;
  char v2 = *(unsigned char *)(a2 + 44);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x20) == 0) {
      return result;
    }
LABEL_16:
    char v10 = *(unsigned char *)(a2 + 41);
    *(unsigned char *)(result + 44) = v3 | 0x20;
    *(unsigned char *)(result + 41) = v10;
    return result;
  }
LABEL_15:
  char v9 = *(unsigned char *)(a2 + 40);
  v3 |= 0x10u;
  *(unsigned char *)(result + 44) = v3;
  *(unsigned char *)(result + 40) = v9;
  if ((*(unsigned char *)(a2 + 44) & 0x20) != 0) {
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_10176980C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(this, "exitingSaturation", *(unsigned char *)(a1 + 40));
    char v5 = *(unsigned char *)(a1 + 44);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 44) & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "extendedSaturation", *(unsigned char *)(a1 + 41));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "shiftInSaturation", *(unsigned char *)(a1 + 42));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "timeSinceLastRemag", *(void *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 2) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "timeSinceLastRemagTrigger", *(void *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 24));
  if ((*(unsigned char *)(a1 + 44) & 8) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "triggerCount", *(void *)(a1 + 32));
LABEL_9:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101769930(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 44) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_97;
            case 2u:
              *(unsigned char *)(a1 + 44) |= 2u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    uint64_t v25 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_86;
                  }
                  unint64_t v47 = v21++;
                  char v48 = *(unsigned char *)(v22 + v47);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v48 & 0x7F) << v45;
                  if ((v48 & 0x80) == 0) {
                    break;
                  }
                  v45 += 7;
                  BOOL v14 = v46++ > 8;
                  if (v14)
                  {
                    uint64_t v25 = 0;
LABEL_85:
                    unint64_t v2 = v47 + 1;
                    goto LABEL_86;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v25 = 0;
                }
                goto LABEL_85;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_86;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              uint64_t v25 = 0;
LABEL_86:
              *(void *)(a1 + 16) = v25;
              goto LABEL_97;
            case 3u:
              *(unsigned char *)(a1 + 44) |= 1u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    uint64_t v31 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_91;
                  }
                  unint64_t v51 = v27++;
                  char v52 = *(unsigned char *)(v28 + v51);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    uint64_t v31 = 0;
LABEL_90:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_91;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v31 = 0;
                }
                goto LABEL_90;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_91;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              uint64_t v31 = 0;
LABEL_91:
              *(void *)(a1 + 8) = v31;
              goto LABEL_97;
            case 4u:
              *(unsigned char *)(a1 + 44) |= 8u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    uint64_t v37 = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_96;
                  }
                  unint64_t v55 = v33++;
                  char v56 = *(unsigned char *)(v34 + v55);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    uint64_t v37 = 0;
LABEL_95:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_96;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  uint64_t v37 = 0;
                }
                goto LABEL_95;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_96;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              uint64_t v37 = 0;
LABEL_96:
              *(void *)(a1 + 32) = v37;
LABEL_97:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 5u:
              *(unsigned char *)(a1 + 44) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v40 = v39 != 0;
              }
              *(unsigned char *)(a1 + 42) = v40;
              goto LABEL_97;
            case 6u:
              *(unsigned char *)(a1 + 44) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v42 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v41 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v42 = v41 != 0;
              }
              *(unsigned char *)(a1 + 40) = v42;
              goto LABEL_97;
            case 7u:
              *(unsigned char *)(a1 + 44) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v44 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v43 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v44 = v43 != 0;
              }
              *(unsigned char *)(a1 + 41) = v44;
              goto LABEL_97;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_97;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101769E9C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 44);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24), 1u);
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 44) & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 2u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 8), 3u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 32), 4u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 40), 6u);
    if ((*(unsigned char *)(v3 + 44) & 0x20) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 42), 5u);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x10) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 0x20) == 0) {
    return result;
  }
LABEL_15:
  char v5 = *(unsigned char *)(v3 + 41);

  return PB::Writer::write(this, v5, 7u);
}

uint64_t sub_101769F98(uint64_t result)
{
  *(void *)uint64_t result = &off_102339EA8;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

void sub_101769FC0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101769FF8(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102339EA8;
  *(_DWORD *)(result + 20) = 0;
  __int16 v2 = *(_WORD *)(a2 + 20);
  if ((v2 & 0x80) != 0)
  {
    char v4 = *(unsigned char *)(a2 + 15);
    __int16 v3 = 128;
    *(_WORD *)(result + 20) = 128;
    *(unsigned char *)(result + 15) = v4;
    __int16 v2 = *(_WORD *)(a2 + 20);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    char v5 = *(unsigned char *)(a2 + 9);
    v3 |= 2u;
    *(_WORD *)(result + 20) = v3;
    *(unsigned char *)(result + 9) = v5;
    __int16 v2 = *(_WORD *)(a2 + 20);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    char v6 = *(unsigned char *)(a2 + 11);
    v3 |= 8u;
    *(_WORD *)(result + 20) = v3;
    *(unsigned char *)(result + 11) = v6;
    __int16 v2 = *(_WORD *)(a2 + 20);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  char v7 = *(unsigned char *)(a2 + 13);
  v3 |= 0x20u;
  *(_WORD *)(result + 20) = v3;
  *(unsigned char *)(result + 13) = v7;
  __int16 v2 = *(_WORD *)(a2 + 20);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  char v8 = *(unsigned char *)(a2 + 14);
  v3 |= 0x40u;
  *(_WORD *)(result + 20) = v3;
  *(unsigned char *)(result + 14) = v8;
  __int16 v2 = *(_WORD *)(a2 + 20);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  char v9 = *(unsigned char *)(a2 + 12);
  v3 |= 0x10u;
  *(_WORD *)(result + 20) = v3;
  *(unsigned char *)(result + 12) = v9;
  __int16 v2 = *(_WORD *)(a2 + 20);
  if ((v2 & 0x100) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v10 = *(unsigned char *)(a2 + 16);
  v3 |= 0x100u;
  *(_WORD *)(result + 20) = v3;
  *(unsigned char *)(result + 16) = v10;
  __int16 v2 = *(_WORD *)(a2 + 20);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 1) == 0) {
      return result;
    }
LABEL_20:
    char v12 = *(unsigned char *)(a2 + 8);
    *(_WORD *)(result + 20) = v3 | 1;
    *(unsigned char *)(result + 8) = v12;
    return result;
  }
LABEL_19:
  char v11 = *(unsigned char *)(a2 + 10);
  v3 |= 4u;
  *(_WORD *)(result + 20) = v3;
  *(unsigned char *)(result + 10) = v11;
  if (*(_WORD *)(a2 + 20)) {
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_10176A120(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 20);
  if (v5)
  {
    PB::TextFormatter::format(this, "isAppleMapsRoutingActive", *(unsigned char *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 20);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "isBicycleRouting", *(unsigned char *)(a1 + 9));
  __int16 v5 = *(_WORD *)(a1 + 20);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "isBicycleRoutingActive", *(unsigned char *)(a1 + 10));
  __int16 v5 = *(_WORD *)(a1 + 20);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "isPedestrianRouting", *(unsigned char *)(a1 + 11));
  __int16 v5 = *(_WORD *)(a1 + 20);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "isPedestrianRoutingActive", *(unsigned char *)(a1 + 12));
  __int16 v5 = *(_WORD *)(a1 + 20);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "isStepTypeBicycle", *(unsigned char *)(a1 + 13));
  __int16 v5 = *(_WORD *)(a1 + 20);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "isStepTypePedestrian", *(unsigned char *)(a1 + 14));
  __int16 v5 = *(_WORD *)(a1 + 20);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(this, "isVehicularRouting", *(unsigned char *)(a1 + 15));
  if ((*(_WORD *)(a1 + 20) & 0x100) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "isVehicularRoutingActive", *(unsigned char *)(a1 + 16));
LABEL_11:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10176A284(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          if (v10++ > 8) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 20) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v21 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v21 = v20 != 0;
              }
              *(unsigned char *)(a1 + 15) = v21;
              goto LABEL_60;
            case 2u:
              *(_WORD *)(a1 + 20) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v24 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v23 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v24 = v23 != 0;
              }
              *(unsigned char *)(a1 + 9) = v24;
              goto LABEL_60;
            case 3u:
              *(_WORD *)(a1 + 20) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v26 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v25 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v26 = v25 != 0;
              }
              *(unsigned char *)(a1 + 11) = v26;
              goto LABEL_60;
            case 4u:
              *(_WORD *)(a1 + 20) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 13) = v28;
              goto LABEL_60;
            case 5u:
              *(_WORD *)(a1 + 20) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v30 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v29 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v30 = v29 != 0;
              }
              *(unsigned char *)(a1 + 14) = v30;
              goto LABEL_60;
            case 6u:
              *(_WORD *)(a1 + 20) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v32 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v31 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v32 = v31 != 0;
              }
              *(unsigned char *)(a1 + 12) = v32;
              goto LABEL_60;
            case 7u:
              *(_WORD *)(a1 + 20) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 16) = v34;
              goto LABEL_60;
            case 8u:
              *(_WORD *)(a1 + 20) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v36 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v36 = v35 != 0;
              }
              *(unsigned char *)(a1 + 10) = v36;
              goto LABEL_60;
            case 9u:
              *(_WORD *)(a1 + 20) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
              if (v2 >= v3)
              {
                BOOL v38 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v37 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v38 = v37 != 0;
              }
              *(unsigned char *)(a1 + 8) = v38;
              goto LABEL_60;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              unint64_t v3 = *((void *)this + 2);
LABEL_60:
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || *((unsigned char *)this + 24)) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10176A67C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 20);
  if ((v4 & 0x80) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(result + 15), 1u);
    __int16 v4 = *(_WORD *)(v3 + 20);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 9), 2u);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 11), 3u);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 13), 4u);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 14), 5u);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 12), 6u);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 10), 8u);
    if ((*(_WORD *)(v3 + 20) & 1) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 16), 7u);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 4) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 1) == 0) {
    return result;
  }
LABEL_19:
  char v5 = *(unsigned char *)(v3 + 8);

  return PB::Writer::write(this, v5, 9u);
}

uint64_t sub_10176A7B0(uint64_t result)
{
  *(void *)uint64_t result = &off_102339EE0;
  *(_DWORD *)(result + 28) = 0;
  return result;
}

void sub_10176A7D8(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10176A810(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102339EE0;
  *(_DWORD *)(a1 + 28) = 0;
  char v2 = *(unsigned char *)(a2 + 28);
  if (v2)
  {
    float result = *(float *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 28) = 1;
    *(float *)(a1 + 8) = result;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 28) & 4) != 0)
  {
LABEL_5:
    float result = *(float *)(a2 + 16);
    v3 |= 4u;
    *(unsigned char *)(a1 + 28) = v3;
    *(float *)(a1 + 16) = result;
    char v2 = *(unsigned char *)(a2 + 28);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    float result = *(float *)(a2 + 20);
    v3 |= 8u;
    *(unsigned char *)(a1 + 28) = v3;
    *(float *)(a1 + 20) = result;
    char v2 = *(unsigned char *)(a2 + 28);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        return result;
      }
LABEL_12:
      float result = *(float *)(a2 + 12);
      *(unsigned char *)(a1 + 28) = v3 | 2;
      *(float *)(a1 + 12) = result;
      return result;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v5 = *(_DWORD *)(a2 + 24);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 28) = v3;
  *(_DWORD *)(a1 + 24) = v5;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_10176A8C8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 28);
  if (v5)
  {
    PB::TextFormatter::format(this, "mets", *(float *)(a1 + 8));
    char v5 = *(unsigned char *)(a1 + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*(unsigned char *)(a1 + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "metsDiff", *(float *)(a1 + 12));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(this, "metsHR", *(float *)(a1 + 16));
  char v5 = *(unsigned char *)(a1 + 28);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(this, "metsWR", *(float *)(a1 + 20));
  if ((*(unsigned char *)(a1 + 28) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(this, "source", *(_DWORD *)(a1 + 24));
LABEL_7:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10176A9AC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(unsigned char *)(a1 + 28) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_42;
              }
              *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_51;
            case 2u:
              *(unsigned char *)(a1 + 28) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_42;
              }
              *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_51;
            case 3u:
              *(unsigned char *)(a1 + 28) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_42;
              }
              *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_51;
            case 4u:
              *(unsigned char *)(a1 + 28) |= 0x10u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v27 = 0;
                unsigned int v28 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_56;
                  }
                  unint64_t v29 = v21++;
                  char v30 = *(unsigned char *)(v22 + v29);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v30 & 0x7F) << v27;
                  if ((v30 & 0x80) == 0) {
                    break;
                  }
                  v27 += 7;
                  BOOL v14 = v28++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_55:
                    unint64_t v2 = v29 + 1;
                    goto LABEL_56;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_55;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_56;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_56:
              *(_DWORD *)(a1 + 24) = v25;
LABEL_57:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 5u:
              *(unsigned char *)(a1 + 28) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
              {
                *(_DWORD *)(a1 + 12) = *(_DWORD *)(*(void *)this + v2);
LABEL_51:
                unint64_t v2 = *((void *)this + 1) + 4;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_42:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_57;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_57;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_10176AD14(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(result + 28) & 4) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 2u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 24), 4u);
    if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 3u);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 0x10) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_11:
  float v5 = *(float *)(v3 + 12);

  return PB::Writer::write(this, v5, 5u);
}

void *sub_10176ADD8(void *result)
{
  *uint64_t result = &off_102339F18;
  result[23] = 0;
  return result;
}

void sub_10176AE00(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10176AE38(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102339F18;
  *(void *)(a1 + 184) = 0;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    uint64_t v3 = 4;
    *(void *)(a1 + 184) = 4;
    *(void *)(a1 + 24) = v4;
    uint64_t v2 = *(void *)(a2 + 184);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if (v2)
  {
LABEL_5:
    uint64_t v4 = *(void *)(a2 + 8);
    v3 |= 1uLL;
    *(void *)(a1 + 184) = v3;
    *(void *)(a1 + 8) = v4;
    uint64_t v2 = *(void *)(a2 + 184);
  }
LABEL_6:
  if ((v2 & 0x200000) != 0)
  {
    int v5 = *(_DWORD *)(a2 + 104);
    v3 |= 0x200000uLL;
    *(void *)(a1 + 184) = v3;
    *(_DWORD *)(a1 + 104) = v5;
    uint64_t v2 = *(void *)(a2 + 184);
    if ((v2 & 0x1000000000) == 0)
    {
LABEL_8:
      if ((v2 & 0x100000000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_52;
    }
  }
  else if ((v2 & 0x1000000000) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 164);
  v3 |= 0x1000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 164) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x100000000000) == 0)
  {
LABEL_9:
    if ((v2 & 0x800) == 0) {
      goto LABEL_10;
    }
    goto LABEL_53;
  }
LABEL_52:
  char v6 = *(unsigned char *)(a2 + 181);
  v3 |= 0x100000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(unsigned char *)(a1 + 181) = v6;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x800) == 0)
  {
LABEL_10:
    if ((v2 & 0x10000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_54;
  }
LABEL_53:
  LODWORD(v4) = *(_DWORD *)(a2 + 64);
  v3 |= 0x800uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 64) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x10000000000) == 0)
  {
LABEL_11:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_55;
  }
LABEL_54:
  char v7 = *(unsigned char *)(a2 + 177);
  v3 |= 0x10000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(unsigned char *)(a1 + 177) = v7;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_12:
    if ((v2 & 0x80000000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_56;
  }
LABEL_55:
  LODWORD(v4) = *(_DWORD *)(a2 + 120);
  v3 |= 0x2000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 120) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x80000000000) == 0)
  {
LABEL_13:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_57;
  }
LABEL_56:
  char v8 = *(unsigned char *)(a2 + 180);
  v3 |= 0x80000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(unsigned char *)(a1 + 180) = v8;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x4000) == 0)
  {
LABEL_14:
    if ((v2 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v9 = *(_DWORD *)(a2 + 76);
  v3 |= 0x4000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 76) = v9;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 2) == 0)
  {
LABEL_15:
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t v4 = *(void *)(a2 + 16);
  v3 |= 2uLL;
  *(void *)(a1 + 184) = v3;
  *(void *)(a1 + 16) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 8) == 0)
  {
LABEL_16:
    if ((v2 & 0x8000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_60;
  }
LABEL_59:
  LODWORD(v4) = *(_DWORD *)(a2 + 32);
  v3 |= 8uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 32) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x8000000000) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_61;
  }
LABEL_60:
  char v10 = *(unsigned char *)(a2 + 176);
  v3 |= 0x8000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(unsigned char *)(a1 + 176) = v10;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x2000) == 0)
  {
LABEL_18:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v11 = *(_DWORD *)(a2 + 72);
  v3 |= 0x2000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 72) = v11;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_19:
    if ((v2 & 0x4000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v12 = *(_DWORD *)(a2 + 152);
  v3 |= 0x200000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 152) = v12;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x4000000000) == 0)
  {
LABEL_20:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_64;
  }
LABEL_63:
  int v13 = *(_DWORD *)(a2 + 172);
  v3 |= 0x4000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 172) = v13;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x100000) == 0)
  {
LABEL_21:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v14 = *(_DWORD *)(a2 + 100);
  v3 |= 0x100000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 100) = v14;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x20000) == 0)
  {
LABEL_22:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_66;
  }
LABEL_65:
  int v15 = *(_DWORD *)(a2 + 88);
  v3 |= 0x20000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 88) = v15;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x10000) == 0)
  {
LABEL_23:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v16 = *(_DWORD *)(a2 + 84);
  v3 |= 0x10000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 84) = v16;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x40000) == 0)
  {
LABEL_24:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v17 = *(_DWORD *)(a2 + 92);
  v3 |= 0x40000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 92) = v17;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x80000) == 0)
  {
LABEL_25:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_69;
  }
LABEL_68:
  int v18 = *(_DWORD *)(a2 + 96);
  v3 |= 0x80000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 96) = v18;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x8000) == 0)
  {
LABEL_26:
    if ((v2 & 0x400) == 0) {
      goto LABEL_27;
    }
    goto LABEL_70;
  }
LABEL_69:
  int v19 = *(_DWORD *)(a2 + 80);
  v3 |= 0x8000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 80) = v19;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x400) == 0)
  {
LABEL_27:
    if ((v2 & 0x2000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_71;
  }
LABEL_70:
  int v20 = *(_DWORD *)(a2 + 60);
  v3 |= 0x400uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 60) = v20;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x2000000000) == 0)
  {
LABEL_28:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_72;
  }
LABEL_71:
  int v21 = *(_DWORD *)(a2 + 168);
  v3 |= 0x2000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 168) = v21;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x1000) == 0)
  {
LABEL_29:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_73;
  }
LABEL_72:
  int v22 = *(_DWORD *)(a2 + 68);
  v3 |= 0x1000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 68) = v22;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_30:
    if ((v2 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_74;
  }
LABEL_73:
  int v23 = *(_DWORD *)(a2 + 136);
  v3 |= 0x20000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 136) = v23;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x10) == 0)
  {
LABEL_31:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v24 = *(_DWORD *)(a2 + 36);
  v3 |= 0x10uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 36) = v24;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x20000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_76;
  }
LABEL_75:
  LODWORD(v4) = *(_DWORD *)(a2 + 156);
  v3 |= 0x400000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 156) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x20000000000) == 0)
  {
LABEL_33:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_77;
  }
LABEL_76:
  char v25 = *(unsigned char *)(a2 + 178);
  v3 |= 0x20000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(unsigned char *)(a1 + 178) = v25;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x40000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_78;
  }
LABEL_77:
  LODWORD(v4) = *(_DWORD *)(a2 + 160);
  v3 |= 0x800000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 160) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x40000000000) == 0)
  {
LABEL_35:
    if ((v2 & 0x20) == 0) {
      goto LABEL_36;
    }
    goto LABEL_79;
  }
LABEL_78:
  char v26 = *(unsigned char *)(a2 + 179);
  v3 |= 0x40000000000uLL;
  *(void *)(a1 + 184) = v3;
  *(unsigned char *)(a1 + 179) = v26;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x20) == 0)
  {
LABEL_36:
    if ((v2 & 0x80) == 0) {
      goto LABEL_37;
    }
    goto LABEL_80;
  }
LABEL_79:
  int v27 = *(_DWORD *)(a2 + 40);
  v3 |= 0x20uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 40) = v27;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x80) == 0)
  {
LABEL_37:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_81;
  }
LABEL_80:
  LODWORD(v4) = *(_DWORD *)(a2 + 48);
  v3 |= 0x80uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 48) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_38:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_82;
  }
LABEL_81:
  LODWORD(v4) = *(_DWORD *)(a2 + 124);
  v3 |= 0x4000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 124) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_39:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_83;
  }
LABEL_82:
  LODWORD(v4) = *(_DWORD *)(a2 + 128);
  v3 |= 0x8000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 128) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_40:
    if ((v2 & 0x40) == 0) {
      goto LABEL_41;
    }
    goto LABEL_84;
  }
LABEL_83:
  LODWORD(v4) = *(_DWORD *)(a2 + 132);
  v3 |= 0x10000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 132) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x40) == 0)
  {
LABEL_41:
    if ((v2 & 0x100) == 0) {
      goto LABEL_42;
    }
    goto LABEL_85;
  }
LABEL_84:
  LODWORD(v4) = *(_DWORD *)(a2 + 44);
  v3 |= 0x40uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 44) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x100) == 0)
  {
LABEL_42:
    if ((v2 & 0x200) == 0) {
      goto LABEL_43;
    }
    goto LABEL_86;
  }
LABEL_85:
  LODWORD(v4) = *(_DWORD *)(a2 + 52);
  v3 |= 0x100uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 52) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x200) == 0)
  {
LABEL_43:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_87;
  }
LABEL_86:
  LODWORD(v4) = *(_DWORD *)(a2 + 56);
  v3 |= 0x200uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 56) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x400000) == 0)
  {
LABEL_44:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_88;
  }
LABEL_87:
  LODWORD(v4) = *(_DWORD *)(a2 + 108);
  v3 |= 0x400000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 108) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x800000) == 0)
  {
LABEL_45:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_89;
  }
LABEL_88:
  LODWORD(v4) = *(_DWORD *)(a2 + 112);
  v3 |= 0x800000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 112) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_46:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_90;
  }
LABEL_89:
  LODWORD(v4) = *(_DWORD *)(a2 + 116);
  v3 |= 0x1000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 116) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_47:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_91;
  }
LABEL_90:
  LODWORD(v4) = *(_DWORD *)(a2 + 140);
  v3 |= 0x40000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 140) = v4;
  uint64_t v2 = *(void *)(a2 + 184);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_48:
    if ((v2 & 0x100000000) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_92;
  }
LABEL_91:
  LODWORD(v4) = *(_DWORD *)(a2 + 144);
  v3 |= 0x80000000uLL;
  *(void *)(a1 + 184) = v3;
  *(_DWORD *)(a1 + 144) = v4;
  if ((*(void *)(a2 + 184) & 0x100000000) == 0) {
    return *(float *)&v4;
  }
LABEL_92:
  LODWORD(v4) = *(_DWORD *)(a2 + 148);
  *(void *)(a1 + 184) = v3 | (unint64_t)&_mh_execute_header;
  *(_DWORD *)(a1 + 148) = v4;
  return *(float *)&v4;
}

uint64_t sub_10176B350(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(this, "asymmetryPercentage", *(float *)(a1 + 32));
    uint64_t v5 = *(void *)(a1 + 184);
    if ((v5 & 0x8000000000) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_52;
    }
  }
  else if ((v5 & 0x8000000000) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "asymmetryPercentageIsValid", *(unsigned char *)(a1 + 176));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "asymmetryPercentageRejectionStatus", *(_DWORD *)(a1 + 36));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "boundaryType", *(_DWORD *)(a1 + 40));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "cycleTimeEntropy", *(float *)(a1 + 44));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "cycleTimeMean", *(float *)(a1 + 48));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x100) == 0)
  {
LABEL_8:
    if ((v5 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "cycleTimePoincareSD1", *(float *)(a1 + 52));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x200) == 0)
  {
LABEL_9:
    if ((v5 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "cycleTimePoincareSD2", *(float *)(a1 + 56));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x400) == 0)
  {
LABEL_10:
    if ((v5 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "deviceSide", *(_DWORD *)(a1 + 60));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x800) == 0)
  {
LABEL_11:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "doubleSupportPercentage", *(float *)(a1 + 64));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x10000000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "doubleSupportPercentageIsValid", *(unsigned char *)(a1 + 177));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "doubleSupportPercentageRejectionStatus", *(_DWORD *)(a1 + 68));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 1) == 0)
  {
LABEL_14:
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "endTime", *(double *)(a1 + 8));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 2) == 0)
  {
LABEL_15:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "invalidGradePercentage", *(double *)(a1 + 16));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x20000000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "isHeightSet", *(unsigned char *)(a1 + 178));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x40000000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "isWeightSet", *(unsigned char *)(a1 + 179));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x2000) == 0)
  {
LABEL_18:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "numGaitMetrics", *(_DWORD *)(a1 + 72));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x4000) == 0)
  {
LABEL_19:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "rejectionStatus", *(_DWORD *)(a1 + 76));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x8000) == 0)
  {
LABEL_20:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "segmentsRejectedByIsCadenceConcordant", *(_DWORD *)(a1 + 80));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x10000) == 0)
  {
LABEL_21:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "segmentsRejectedByIsFeasibleWalkingSpeed", *(_DWORD *)(a1 + 84));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x20000) == 0)
  {
LABEL_22:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "segmentsRejectedByIsNotRunning", *(_DWORD *)(a1 + 88));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x40000) == 0)
  {
LABEL_23:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "segmentsRejectedByIsPendular", *(_DWORD *)(a1 + 92));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x80000) == 0)
  {
LABEL_24:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "segmentsRejectedByIsSufficientVerticalTwist", *(_DWORD *)(a1 + 96));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x100000) == 0)
  {
LABEL_25:
    if ((v5 & 4) == 0) {
      goto LABEL_26;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "segmentsRejectedByIsSwingStanceCycle", *(_DWORD *)(a1 + 100));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 4) == 0)
  {
LABEL_26:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 24));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x200000) == 0)
  {
LABEL_27:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "stepCount", *(_DWORD *)(a1 + 104));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x400000) == 0)
  {
LABEL_28:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "stepIndexOfHarmonicityAP", *(float *)(a1 + 108));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x800000) == 0)
  {
LABEL_29:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_78;
  }
LABEL_77:
  PB::TextFormatter::format(this, "stepIndexOfHarmonicityML", *(float *)(a1 + 112));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(this, "stepIndexOfHarmonicityVT", *(float *)(a1 + 116));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(this, "stepLength", *(float *)(a1 + 120));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(this, "stepLengthEntropy", *(float *)(a1 + 124));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x80000000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "stepLengthIsValid", *(unsigned char *)(a1 + 180));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(this, "stepLengthPoincareSD1", *(float *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_84;
  }
LABEL_83:
  PB::TextFormatter::format(this, "stepLengthPoincareSD2", *(float *)(a1 + 132));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_85;
  }
LABEL_84:
  PB::TextFormatter::format(this, "stepLengthRejectionStatus", *(_DWORD *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_37:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_86;
  }
LABEL_85:
  PB::TextFormatter::format(this, "swingIndexOfHarmonicityAP", *(float *)(a1 + 140));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_38:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_87;
  }
LABEL_86:
  PB::TextFormatter::format(this, "swingIndexOfHarmonicityML", *(float *)(a1 + 144));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_88;
  }
LABEL_87:
  PB::TextFormatter::format(this, "swingIndexOfHarmonicityVT", *(float *)(a1 + 148));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_89;
  }
LABEL_88:
  PB::TextFormatter::format(this, "terminationReason", *(_DWORD *)(a1 + 152));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x400000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_90;
  }
LABEL_89:
  PB::TextFormatter::format(this, "userHeight", *(float *)(a1 + 156));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x800000000) == 0)
  {
LABEL_42:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_91;
  }
LABEL_90:
  PB::TextFormatter::format(this, "userWeight", *(float *)(a1 + 160));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x1000000000) == 0)
  {
LABEL_43:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(this, "walkingSpeed", *(float *)(a1 + 164));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x100000000000) == 0)
  {
LABEL_44:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(this, "walkingSpeedIsValid", *(unsigned char *)(a1 + 181));
  uint64_t v5 = *(void *)(a1 + 184);
  if ((v5 & 0x2000000000) == 0)
  {
LABEL_45:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
LABEL_93:
  PB::TextFormatter::format(this, "walkingSpeedRejectionStatus", *(_DWORD *)(a1 + 168));
  if ((*(void *)(a1 + 184) & 0x4000000000) != 0) {
LABEL_46:
  }
    PB::TextFormatter::format(this, "workoutType", *(_DWORD *)(a1 + 172));
LABEL_47:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10176B934(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(void *)(a1 + 184) |= 4uLL;
          unint64_t v20 = *((void *)this + 1);
          if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v20);
          goto LABEL_62;
        case 2u:
          *(void *)(a1 + 184) |= 1uLL;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v22);
          goto LABEL_62;
        case 3u:
          *(void *)(a1 + 184) |= 0x200000uLL;
          unint64_t v23 = *((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          uint64_t v25 = *(void *)this;
          if (v23 <= 0xFFFFFFFFFFFFFFF5 && v23 + 10 <= v24)
          {
            char v26 = 0;
            unsigned int v27 = 0;
            uint64_t v28 = 0;
            do
            {
              unint64_t v29 = v23 + 1;
              *((void *)this + 1) = v23 + 1;
              char v30 = *(unsigned char *)(v25 + v23);
              v28 |= (unint64_t)(v30 & 0x7F) << v26;
              if ((v30 & 0x80) == 0) {
                goto LABEL_364;
              }
              v26 += 7;
              unint64_t v23 = v29;
              BOOL v14 = v27++ > 8;
            }
            while (!v14);
LABEL_228:
            LODWORD(v28) = 0;
            goto LABEL_364;
          }
          char v204 = 0;
          unsigned int v205 = 0;
          uint64_t v28 = 0;
          if (v24 <= v23) {
            unint64_t v24 = *((void *)this + 1);
          }
          while (2)
          {
            if (v24 == v23)
            {
              LODWORD(v28) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v206 = v23 + 1;
              char v207 = *(unsigned char *)(v25 + v23);
              *((void *)this + 1) = v206;
              v28 |= (unint64_t)(v207 & 0x7F) << v204;
              if (v207 < 0)
              {
                v204 += 7;
                unint64_t v23 = v206;
                BOOL v14 = v205++ > 8;
                if (v14) {
                  goto LABEL_228;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v28) = 0;
              }
            }
            break;
          }
LABEL_364:
          *(_DWORD *)(a1 + 104) = v28;
          goto LABEL_356;
        case 4u:
          *(void *)(a1 + 184) |= 0x1000000000uLL;
          unint64_t v31 = *((void *)this + 1);
          if (v31 > 0xFFFFFFFFFFFFFFFBLL || v31 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 164) = *(_DWORD *)(*(void *)this + v31);
          goto LABEL_354;
        case 5u:
          *(void *)(a1 + 184) |= 0x100000000000uLL;
          unint64_t v32 = *((void *)this + 1);
          if (v32 >= *((void *)this + 2))
          {
            BOOL v35 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v33 = v32 + 1;
            int v34 = *(unsigned __int8 *)(*(void *)this + v32);
            *((void *)this + 1) = v33;
            BOOL v35 = v34 != 0;
          }
          *(unsigned char *)(a1 + 181) = v35;
          goto LABEL_356;
        case 6u:
          *(void *)(a1 + 184) |= 0x800uLL;
          unint64_t v36 = *((void *)this + 1);
          if (v36 > 0xFFFFFFFFFFFFFFFBLL || v36 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 64) = *(_DWORD *)(*(void *)this + v36);
          goto LABEL_354;
        case 7u:
          *(void *)(a1 + 184) |= 0x10000000000uLL;
          unint64_t v37 = *((void *)this + 1);
          if (v37 >= *((void *)this + 2))
          {
            BOOL v40 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v38 = v37 + 1;
            int v39 = *(unsigned __int8 *)(*(void *)this + v37);
            *((void *)this + 1) = v38;
            BOOL v40 = v39 != 0;
          }
          *(unsigned char *)(a1 + 177) = v40;
          goto LABEL_356;
        case 8u:
          *(void *)(a1 + 184) |= 0x2000000uLL;
          unint64_t v41 = *((void *)this + 1);
          if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 120) = *(_DWORD *)(*(void *)this + v41);
          goto LABEL_354;
        case 9u:
          *(void *)(a1 + 184) |= 0x80000000000uLL;
          unint64_t v42 = *((void *)this + 1);
          if (v42 >= *((void *)this + 2))
          {
            BOOL v45 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v43 = v42 + 1;
            int v44 = *(unsigned __int8 *)(*(void *)this + v42);
            *((void *)this + 1) = v43;
            BOOL v45 = v44 != 0;
          }
          *(unsigned char *)(a1 + 180) = v45;
          goto LABEL_356;
        case 0xAu:
          *(void *)(a1 + 184) |= 0x4000uLL;
          unint64_t v46 = *((void *)this + 1);
          unint64_t v47 = *((void *)this + 2);
          uint64_t v48 = *(void *)this;
          if (v46 <= 0xFFFFFFFFFFFFFFF5 && v46 + 10 <= v47)
          {
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            do
            {
              unint64_t v52 = v46 + 1;
              *((void *)this + 1) = v46 + 1;
              char v53 = *(unsigned char *)(v48 + v46);
              v51 |= (unint64_t)(v53 & 0x7F) << v49;
              if ((v53 & 0x80) == 0) {
                goto LABEL_368;
              }
              v49 += 7;
              unint64_t v46 = v52;
              BOOL v14 = v50++ > 8;
            }
            while (!v14);
LABEL_241:
            LODWORD(v51) = 0;
            goto LABEL_368;
          }
          char v208 = 0;
          unsigned int v209 = 0;
          uint64_t v51 = 0;
          if (v47 <= v46) {
            unint64_t v47 = *((void *)this + 1);
          }
          while (2)
          {
            if (v47 == v46)
            {
              LODWORD(v51) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v210 = v46 + 1;
              char v211 = *(unsigned char *)(v48 + v46);
              *((void *)this + 1) = v210;
              v51 |= (unint64_t)(v211 & 0x7F) << v208;
              if (v211 < 0)
              {
                v208 += 7;
                unint64_t v46 = v210;
                BOOL v14 = v209++ > 8;
                if (v14) {
                  goto LABEL_241;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v51) = 0;
              }
            }
            break;
          }
LABEL_368:
          *(_DWORD *)(a1 + 76) = v51;
          goto LABEL_356;
        case 0xBu:
          *(void *)(a1 + 184) |= 2uLL;
          unint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v54);
LABEL_62:
          uint64_t v55 = *((void *)this + 1) + 8;
          goto LABEL_355;
        case 0xCu:
          *(void *)(a1 + 184) |= 8uLL;
          unint64_t v56 = *((void *)this + 1);
          if (v56 > 0xFFFFFFFFFFFFFFFBLL || v56 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v56);
          goto LABEL_354;
        case 0xDu:
          *(void *)(a1 + 184) |= 0x8000000000uLL;
          unint64_t v57 = *((void *)this + 1);
          if (v57 >= *((void *)this + 2))
          {
            BOOL v60 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v58 = v57 + 1;
            int v59 = *(unsigned __int8 *)(*(void *)this + v57);
            *((void *)this + 1) = v58;
            BOOL v60 = v59 != 0;
          }
          *(unsigned char *)(a1 + 176) = v60;
          goto LABEL_356;
        case 0xEu:
          *(void *)(a1 + 184) |= 0x2000uLL;
          unint64_t v61 = *((void *)this + 1);
          unint64_t v62 = *((void *)this + 2);
          uint64_t v63 = *(void *)this;
          if (v61 <= 0xFFFFFFFFFFFFFFF5 && v61 + 10 <= v62)
          {
            char v64 = 0;
            unsigned int v65 = 0;
            uint64_t v66 = 0;
            do
            {
              unint64_t v67 = v61 + 1;
              *((void *)this + 1) = v61 + 1;
              char v68 = *(unsigned char *)(v63 + v61);
              v66 |= (unint64_t)(v68 & 0x7F) << v64;
              if ((v68 & 0x80) == 0) {
                goto LABEL_372;
              }
              v64 += 7;
              unint64_t v61 = v67;
              BOOL v14 = v65++ > 8;
            }
            while (!v14);
LABEL_250:
            LODWORD(v66) = 0;
            goto LABEL_372;
          }
          char v212 = 0;
          unsigned int v213 = 0;
          uint64_t v66 = 0;
          if (v62 <= v61) {
            unint64_t v62 = *((void *)this + 1);
          }
          while (2)
          {
            if (v62 == v61)
            {
              LODWORD(v66) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v214 = v61 + 1;
              char v215 = *(unsigned char *)(v63 + v61);
              *((void *)this + 1) = v214;
              v66 |= (unint64_t)(v215 & 0x7F) << v212;
              if (v215 < 0)
              {
                v212 += 7;
                unint64_t v61 = v214;
                BOOL v14 = v213++ > 8;
                if (v14) {
                  goto LABEL_250;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v66) = 0;
              }
            }
            break;
          }
LABEL_372:
          *(_DWORD *)(a1 + 72) = v66;
          goto LABEL_356;
        case 0xFu:
          *(void *)(a1 + 184) |= 0x200000000uLL;
          unint64_t v69 = *((void *)this + 1);
          unint64_t v70 = *((void *)this + 2);
          uint64_t v71 = *(void *)this;
          if (v69 <= 0xFFFFFFFFFFFFFFF5 && v69 + 10 <= v70)
          {
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            do
            {
              unint64_t v75 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              char v76 = *(unsigned char *)(v71 + v69);
              v74 |= (unint64_t)(v76 & 0x7F) << v72;
              if ((v76 & 0x80) == 0) {
                goto LABEL_376;
              }
              v72 += 7;
              unint64_t v69 = v75;
              BOOL v14 = v73++ > 8;
            }
            while (!v14);
LABEL_257:
            LODWORD(v74) = 0;
            goto LABEL_376;
          }
          char v216 = 0;
          unsigned int v217 = 0;
          uint64_t v74 = 0;
          if (v70 <= v69) {
            unint64_t v70 = *((void *)this + 1);
          }
          while (2)
          {
            if (v70 == v69)
            {
              LODWORD(v74) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v218 = v69 + 1;
              char v219 = *(unsigned char *)(v71 + v69);
              *((void *)this + 1) = v218;
              v74 |= (unint64_t)(v219 & 0x7F) << v216;
              if (v219 < 0)
              {
                v216 += 7;
                unint64_t v69 = v218;
                BOOL v14 = v217++ > 8;
                if (v14) {
                  goto LABEL_257;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v74) = 0;
              }
            }
            break;
          }
LABEL_376:
          *(_DWORD *)(a1 + 152) = v74;
          goto LABEL_356;
        case 0x10u:
          *(void *)(a1 + 184) |= 0x4000000000uLL;
          unint64_t v77 = *((void *)this + 1);
          unint64_t v78 = *((void *)this + 2);
          uint64_t v79 = *(void *)this;
          if (v77 <= 0xFFFFFFFFFFFFFFF5 && v77 + 10 <= v78)
          {
            char v80 = 0;
            unsigned int v81 = 0;
            uint64_t v82 = 0;
            do
            {
              unint64_t v83 = v77 + 1;
              *((void *)this + 1) = v77 + 1;
              char v84 = *(unsigned char *)(v79 + v77);
              v82 |= (unint64_t)(v84 & 0x7F) << v80;
              if ((v84 & 0x80) == 0) {
                goto LABEL_380;
              }
              v80 += 7;
              unint64_t v77 = v83;
              BOOL v14 = v81++ > 8;
            }
            while (!v14);
LABEL_264:
            LODWORD(v82) = 0;
            goto LABEL_380;
          }
          char v220 = 0;
          unsigned int v221 = 0;
          uint64_t v82 = 0;
          if (v78 <= v77) {
            unint64_t v78 = *((void *)this + 1);
          }
          while (2)
          {
            if (v78 == v77)
            {
              LODWORD(v82) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v222 = v77 + 1;
              char v223 = *(unsigned char *)(v79 + v77);
              *((void *)this + 1) = v222;
              v82 |= (unint64_t)(v223 & 0x7F) << v220;
              if (v223 < 0)
              {
                v220 += 7;
                unint64_t v77 = v222;
                BOOL v14 = v221++ > 8;
                if (v14) {
                  goto LABEL_264;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v82) = 0;
              }
            }
            break;
          }
LABEL_380:
          *(_DWORD *)(a1 + 172) = v82;
          goto LABEL_356;
        case 0x11u:
          *(void *)(a1 + 184) |= 0x100000uLL;
          unint64_t v85 = *((void *)this + 1);
          unint64_t v86 = *((void *)this + 2);
          uint64_t v87 = *(void *)this;
          if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
          {
            char v88 = 0;
            unsigned int v89 = 0;
            uint64_t v90 = 0;
            do
            {
              unint64_t v91 = v85 + 1;
              *((void *)this + 1) = v85 + 1;
              char v92 = *(unsigned char *)(v87 + v85);
              v90 |= (unint64_t)(v92 & 0x7F) << v88;
              if ((v92 & 0x80) == 0) {
                goto LABEL_384;
              }
              v88 += 7;
              unint64_t v85 = v91;
              BOOL v14 = v89++ > 8;
            }
            while (!v14);
LABEL_271:
            LODWORD(v90) = 0;
            goto LABEL_384;
          }
          char v224 = 0;
          unsigned int v225 = 0;
          uint64_t v90 = 0;
          if (v86 <= v85) {
            unint64_t v86 = *((void *)this + 1);
          }
          while (2)
          {
            if (v86 == v85)
            {
              LODWORD(v90) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v226 = v85 + 1;
              char v227 = *(unsigned char *)(v87 + v85);
              *((void *)this + 1) = v226;
              v90 |= (unint64_t)(v227 & 0x7F) << v224;
              if (v227 < 0)
              {
                v224 += 7;
                unint64_t v85 = v226;
                BOOL v14 = v225++ > 8;
                if (v14) {
                  goto LABEL_271;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v90) = 0;
              }
            }
            break;
          }
LABEL_384:
          *(_DWORD *)(a1 + 100) = v90;
          goto LABEL_356;
        case 0x12u:
          *(void *)(a1 + 184) |= 0x20000uLL;
          unint64_t v93 = *((void *)this + 1);
          unint64_t v94 = *((void *)this + 2);
          uint64_t v95 = *(void *)this;
          if (v93 <= 0xFFFFFFFFFFFFFFF5 && v93 + 10 <= v94)
          {
            char v96 = 0;
            unsigned int v97 = 0;
            uint64_t v98 = 0;
            do
            {
              unint64_t v99 = v93 + 1;
              *((void *)this + 1) = v93 + 1;
              char v100 = *(unsigned char *)(v95 + v93);
              v98 |= (unint64_t)(v100 & 0x7F) << v96;
              if ((v100 & 0x80) == 0) {
                goto LABEL_388;
              }
              v96 += 7;
              unint64_t v93 = v99;
              BOOL v14 = v97++ > 8;
            }
            while (!v14);
LABEL_278:
            LODWORD(v98) = 0;
            goto LABEL_388;
          }
          char v228 = 0;
          unsigned int v229 = 0;
          uint64_t v98 = 0;
          if (v94 <= v93) {
            unint64_t v94 = *((void *)this + 1);
          }
          while (2)
          {
            if (v94 == v93)
            {
              LODWORD(v98) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v230 = v93 + 1;
              char v231 = *(unsigned char *)(v95 + v93);
              *((void *)this + 1) = v230;
              v98 |= (unint64_t)(v231 & 0x7F) << v228;
              if (v231 < 0)
              {
                v228 += 7;
                unint64_t v93 = v230;
                BOOL v14 = v229++ > 8;
                if (v14) {
                  goto LABEL_278;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v98) = 0;
              }
            }
            break;
          }
LABEL_388:
          *(_DWORD *)(a1 + 88) = v98;
          goto LABEL_356;
        case 0x13u:
          *(void *)(a1 + 184) |= 0x10000uLL;
          unint64_t v101 = *((void *)this + 1);
          unint64_t v102 = *((void *)this + 2);
          uint64_t v103 = *(void *)this;
          if (v101 <= 0xFFFFFFFFFFFFFFF5 && v101 + 10 <= v102)
          {
            char v104 = 0;
            unsigned int v105 = 0;
            uint64_t v106 = 0;
            do
            {
              unint64_t v107 = v101 + 1;
              *((void *)this + 1) = v101 + 1;
              char v108 = *(unsigned char *)(v103 + v101);
              v106 |= (unint64_t)(v108 & 0x7F) << v104;
              if ((v108 & 0x80) == 0) {
                goto LABEL_392;
              }
              v104 += 7;
              unint64_t v101 = v107;
              BOOL v14 = v105++ > 8;
            }
            while (!v14);
LABEL_285:
            LODWORD(v106) = 0;
            goto LABEL_392;
          }
          char v232 = 0;
          unsigned int v233 = 0;
          uint64_t v106 = 0;
          if (v102 <= v101) {
            unint64_t v102 = *((void *)this + 1);
          }
          while (2)
          {
            if (v102 == v101)
            {
              LODWORD(v106) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v234 = v101 + 1;
              char v235 = *(unsigned char *)(v103 + v101);
              *((void *)this + 1) = v234;
              v106 |= (unint64_t)(v235 & 0x7F) << v232;
              if (v235 < 0)
              {
                v232 += 7;
                unint64_t v101 = v234;
                BOOL v14 = v233++ > 8;
                if (v14) {
                  goto LABEL_285;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v106) = 0;
              }
            }
            break;
          }
LABEL_392:
          *(_DWORD *)(a1 + 84) = v106;
          goto LABEL_356;
        case 0x14u:
          *(void *)(a1 + 184) |= 0x40000uLL;
          unint64_t v109 = *((void *)this + 1);
          unint64_t v110 = *((void *)this + 2);
          uint64_t v111 = *(void *)this;
          if (v109 <= 0xFFFFFFFFFFFFFFF5 && v109 + 10 <= v110)
          {
            char v112 = 0;
            unsigned int v113 = 0;
            uint64_t v114 = 0;
            do
            {
              unint64_t v115 = v109 + 1;
              *((void *)this + 1) = v109 + 1;
              char v116 = *(unsigned char *)(v111 + v109);
              v114 |= (unint64_t)(v116 & 0x7F) << v112;
              if ((v116 & 0x80) == 0) {
                goto LABEL_396;
              }
              v112 += 7;
              unint64_t v109 = v115;
              BOOL v14 = v113++ > 8;
            }
            while (!v14);
LABEL_292:
            LODWORD(v114) = 0;
            goto LABEL_396;
          }
          char v236 = 0;
          unsigned int v237 = 0;
          uint64_t v114 = 0;
          if (v110 <= v109) {
            unint64_t v110 = *((void *)this + 1);
          }
          while (2)
          {
            if (v110 == v109)
            {
              LODWORD(v114) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v238 = v109 + 1;
              char v239 = *(unsigned char *)(v111 + v109);
              *((void *)this + 1) = v238;
              v114 |= (unint64_t)(v239 & 0x7F) << v236;
              if (v239 < 0)
              {
                v236 += 7;
                unint64_t v109 = v238;
                BOOL v14 = v237++ > 8;
                if (v14) {
                  goto LABEL_292;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v114) = 0;
              }
            }
            break;
          }
LABEL_396:
          *(_DWORD *)(a1 + 92) = v114;
          goto LABEL_356;
        case 0x15u:
          *(void *)(a1 + 184) |= 0x80000uLL;
          unint64_t v117 = *((void *)this + 1);
          unint64_t v118 = *((void *)this + 2);
          uint64_t v119 = *(void *)this;
          if (v117 <= 0xFFFFFFFFFFFFFFF5 && v117 + 10 <= v118)
          {
            char v120 = 0;
            unsigned int v121 = 0;
            uint64_t v122 = 0;
            do
            {
              unint64_t v123 = v117 + 1;
              *((void *)this + 1) = v117 + 1;
              char v124 = *(unsigned char *)(v119 + v117);
              v122 |= (unint64_t)(v124 & 0x7F) << v120;
              if ((v124 & 0x80) == 0) {
                goto LABEL_400;
              }
              v120 += 7;
              unint64_t v117 = v123;
              BOOL v14 = v121++ > 8;
            }
            while (!v14);
LABEL_299:
            LODWORD(v122) = 0;
            goto LABEL_400;
          }
          char v240 = 0;
          unsigned int v241 = 0;
          uint64_t v122 = 0;
          if (v118 <= v117) {
            unint64_t v118 = *((void *)this + 1);
          }
          while (2)
          {
            if (v118 == v117)
            {
              LODWORD(v122) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v242 = v117 + 1;
              char v243 = *(unsigned char *)(v119 + v117);
              *((void *)this + 1) = v242;
              v122 |= (unint64_t)(v243 & 0x7F) << v240;
              if (v243 < 0)
              {
                v240 += 7;
                unint64_t v117 = v242;
                BOOL v14 = v241++ > 8;
                if (v14) {
                  goto LABEL_299;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v122) = 0;
              }
            }
            break;
          }
LABEL_400:
          *(_DWORD *)(a1 + 96) = v122;
          goto LABEL_356;
        case 0x16u:
          *(void *)(a1 + 184) |= 0x8000uLL;
          unint64_t v125 = *((void *)this + 1);
          unint64_t v126 = *((void *)this + 2);
          uint64_t v127 = *(void *)this;
          if (v125 <= 0xFFFFFFFFFFFFFFF5 && v125 + 10 <= v126)
          {
            char v128 = 0;
            unsigned int v129 = 0;
            uint64_t v130 = 0;
            do
            {
              unint64_t v131 = v125 + 1;
              *((void *)this + 1) = v125 + 1;
              char v132 = *(unsigned char *)(v127 + v125);
              v130 |= (unint64_t)(v132 & 0x7F) << v128;
              if ((v132 & 0x80) == 0) {
                goto LABEL_404;
              }
              v128 += 7;
              unint64_t v125 = v131;
              BOOL v14 = v129++ > 8;
            }
            while (!v14);
LABEL_306:
            LODWORD(v130) = 0;
            goto LABEL_404;
          }
          char v244 = 0;
          unsigned int v245 = 0;
          uint64_t v130 = 0;
          if (v126 <= v125) {
            unint64_t v126 = *((void *)this + 1);
          }
          while (2)
          {
            if (v126 == v125)
            {
              LODWORD(v130) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v246 = v125 + 1;
              char v247 = *(unsigned char *)(v127 + v125);
              *((void *)this + 1) = v246;
              v130 |= (unint64_t)(v247 & 0x7F) << v244;
              if (v247 < 0)
              {
                v244 += 7;
                unint64_t v125 = v246;
                BOOL v14 = v245++ > 8;
                if (v14) {
                  goto LABEL_306;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v130) = 0;
              }
            }
            break;
          }
LABEL_404:
          *(_DWORD *)(a1 + 80) = v130;
          goto LABEL_356;
        case 0x17u:
          *(void *)(a1 + 184) |= 0x400uLL;
          unint64_t v133 = *((void *)this + 1);
          unint64_t v134 = *((void *)this + 2);
          uint64_t v135 = *(void *)this;
          if (v133 <= 0xFFFFFFFFFFFFFFF5 && v133 + 10 <= v134)
          {
            char v136 = 0;
            unsigned int v137 = 0;
            uint64_t v138 = 0;
            do
            {
              unint64_t v139 = v133 + 1;
              *((void *)this + 1) = v133 + 1;
              char v140 = *(unsigned char *)(v135 + v133);
              v138 |= (unint64_t)(v140 & 0x7F) << v136;
              if ((v140 & 0x80) == 0) {
                goto LABEL_408;
              }
              v136 += 7;
              unint64_t v133 = v139;
              BOOL v14 = v137++ > 8;
            }
            while (!v14);
LABEL_313:
            LODWORD(v138) = 0;
            goto LABEL_408;
          }
          char v248 = 0;
          unsigned int v249 = 0;
          uint64_t v138 = 0;
          if (v134 <= v133) {
            unint64_t v134 = *((void *)this + 1);
          }
          while (2)
          {
            if (v134 == v133)
            {
              LODWORD(v138) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v250 = v133 + 1;
              char v251 = *(unsigned char *)(v135 + v133);
              *((void *)this + 1) = v250;
              v138 |= (unint64_t)(v251 & 0x7F) << v248;
              if (v251 < 0)
              {
                v248 += 7;
                unint64_t v133 = v250;
                BOOL v14 = v249++ > 8;
                if (v14) {
                  goto LABEL_313;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v138) = 0;
              }
            }
            break;
          }
LABEL_408:
          *(_DWORD *)(a1 + 60) = v138;
          goto LABEL_356;
        case 0x18u:
          *(void *)(a1 + 184) |= 0x2000000000uLL;
          unint64_t v141 = *((void *)this + 1);
          unint64_t v142 = *((void *)this + 2);
          uint64_t v143 = *(void *)this;
          if (v141 <= 0xFFFFFFFFFFFFFFF5 && v141 + 10 <= v142)
          {
            char v144 = 0;
            unsigned int v145 = 0;
            uint64_t v146 = 0;
            do
            {
              unint64_t v147 = v141 + 1;
              *((void *)this + 1) = v141 + 1;
              char v148 = *(unsigned char *)(v143 + v141);
              v146 |= (unint64_t)(v148 & 0x7F) << v144;
              if ((v148 & 0x80) == 0) {
                goto LABEL_412;
              }
              v144 += 7;
              unint64_t v141 = v147;
              BOOL v14 = v145++ > 8;
            }
            while (!v14);
LABEL_320:
            LODWORD(v146) = 0;
            goto LABEL_412;
          }
          char v252 = 0;
          unsigned int v253 = 0;
          uint64_t v146 = 0;
          if (v142 <= v141) {
            unint64_t v142 = *((void *)this + 1);
          }
          while (2)
          {
            if (v142 == v141)
            {
              LODWORD(v146) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v254 = v141 + 1;
              char v255 = *(unsigned char *)(v143 + v141);
              *((void *)this + 1) = v254;
              v146 |= (unint64_t)(v255 & 0x7F) << v252;
              if (v255 < 0)
              {
                v252 += 7;
                unint64_t v141 = v254;
                BOOL v14 = v253++ > 8;
                if (v14) {
                  goto LABEL_320;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v146) = 0;
              }
            }
            break;
          }
LABEL_412:
          *(_DWORD *)(a1 + 168) = v146;
          goto LABEL_356;
        case 0x19u:
          *(void *)(a1 + 184) |= 0x1000uLL;
          unint64_t v149 = *((void *)this + 1);
          unint64_t v150 = *((void *)this + 2);
          uint64_t v151 = *(void *)this;
          if (v149 <= 0xFFFFFFFFFFFFFFF5 && v149 + 10 <= v150)
          {
            char v152 = 0;
            unsigned int v153 = 0;
            uint64_t v154 = 0;
            do
            {
              unint64_t v155 = v149 + 1;
              *((void *)this + 1) = v149 + 1;
              char v156 = *(unsigned char *)(v151 + v149);
              v154 |= (unint64_t)(v156 & 0x7F) << v152;
              if ((v156 & 0x80) == 0) {
                goto LABEL_416;
              }
              v152 += 7;
              unint64_t v149 = v155;
              BOOL v14 = v153++ > 8;
            }
            while (!v14);
LABEL_327:
            LODWORD(v154) = 0;
            goto LABEL_416;
          }
          char v256 = 0;
          unsigned int v257 = 0;
          uint64_t v154 = 0;
          if (v150 <= v149) {
            unint64_t v150 = *((void *)this + 1);
          }
          while (2)
          {
            if (v150 == v149)
            {
              LODWORD(v154) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v258 = v149 + 1;
              char v259 = *(unsigned char *)(v151 + v149);
              *((void *)this + 1) = v258;
              v154 |= (unint64_t)(v259 & 0x7F) << v256;
              if (v259 < 0)
              {
                v256 += 7;
                unint64_t v149 = v258;
                BOOL v14 = v257++ > 8;
                if (v14) {
                  goto LABEL_327;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v154) = 0;
              }
            }
            break;
          }
LABEL_416:
          *(_DWORD *)(a1 + 68) = v154;
          goto LABEL_356;
        case 0x1Au:
          *(void *)(a1 + 184) |= 0x20000000uLL;
          unint64_t v157 = *((void *)this + 1);
          unint64_t v158 = *((void *)this + 2);
          uint64_t v159 = *(void *)this;
          if (v157 <= 0xFFFFFFFFFFFFFFF5 && v157 + 10 <= v158)
          {
            char v160 = 0;
            unsigned int v161 = 0;
            uint64_t v162 = 0;
            do
            {
              unint64_t v163 = v157 + 1;
              *((void *)this + 1) = v157 + 1;
              char v164 = *(unsigned char *)(v159 + v157);
              v162 |= (unint64_t)(v164 & 0x7F) << v160;
              if ((v164 & 0x80) == 0) {
                goto LABEL_420;
              }
              v160 += 7;
              unint64_t v157 = v163;
              BOOL v14 = v161++ > 8;
            }
            while (!v14);
LABEL_334:
            LODWORD(v162) = 0;
            goto LABEL_420;
          }
          char v260 = 0;
          unsigned int v261 = 0;
          uint64_t v162 = 0;
          if (v158 <= v157) {
            unint64_t v158 = *((void *)this + 1);
          }
          while (2)
          {
            if (v158 == v157)
            {
              LODWORD(v162) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v262 = v157 + 1;
              char v263 = *(unsigned char *)(v159 + v157);
              *((void *)this + 1) = v262;
              v162 |= (unint64_t)(v263 & 0x7F) << v260;
              if (v263 < 0)
              {
                v260 += 7;
                unint64_t v157 = v262;
                BOOL v14 = v261++ > 8;
                if (v14) {
                  goto LABEL_334;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v162) = 0;
              }
            }
            break;
          }
LABEL_420:
          *(_DWORD *)(a1 + 136) = v162;
          goto LABEL_356;
        case 0x1Bu:
          *(void *)(a1 + 184) |= 0x10uLL;
          unint64_t v165 = *((void *)this + 1);
          unint64_t v166 = *((void *)this + 2);
          uint64_t v167 = *(void *)this;
          if (v165 <= 0xFFFFFFFFFFFFFFF5 && v165 + 10 <= v166)
          {
            char v168 = 0;
            unsigned int v169 = 0;
            uint64_t v170 = 0;
            do
            {
              unint64_t v171 = v165 + 1;
              *((void *)this + 1) = v165 + 1;
              char v172 = *(unsigned char *)(v167 + v165);
              v170 |= (unint64_t)(v172 & 0x7F) << v168;
              if ((v172 & 0x80) == 0) {
                goto LABEL_424;
              }
              v168 += 7;
              unint64_t v165 = v171;
              BOOL v14 = v169++ > 8;
            }
            while (!v14);
LABEL_341:
            LODWORD(v170) = 0;
            goto LABEL_424;
          }
          char v264 = 0;
          unsigned int v265 = 0;
          uint64_t v170 = 0;
          if (v166 <= v165) {
            unint64_t v166 = *((void *)this + 1);
          }
          while (2)
          {
            if (v166 == v165)
            {
              LODWORD(v170) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v266 = v165 + 1;
              char v267 = *(unsigned char *)(v167 + v165);
              *((void *)this + 1) = v266;
              v170 |= (unint64_t)(v267 & 0x7F) << v264;
              if (v267 < 0)
              {
                v264 += 7;
                unint64_t v165 = v266;
                BOOL v14 = v265++ > 8;
                if (v14) {
                  goto LABEL_341;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v170) = 0;
              }
            }
            break;
          }
LABEL_424:
          *(_DWORD *)(a1 + 36) = v170;
          goto LABEL_356;
        case 0x1Cu:
          *(void *)(a1 + 184) |= 0x400000000uLL;
          unint64_t v173 = *((void *)this + 1);
          if (v173 > 0xFFFFFFFFFFFFFFFBLL || v173 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v173);
          goto LABEL_354;
        case 0x1Du:
          *(void *)(a1 + 184) |= 0x20000000000uLL;
          unint64_t v174 = *((void *)this + 1);
          if (v174 >= *((void *)this + 2))
          {
            BOOL v177 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v175 = v174 + 1;
            int v176 = *(unsigned __int8 *)(*(void *)this + v174);
            *((void *)this + 1) = v175;
            BOOL v177 = v176 != 0;
          }
          *(unsigned char *)(a1 + 178) = v177;
          goto LABEL_356;
        case 0x1Eu:
          *(void *)(a1 + 184) |= 0x800000000uLL;
          unint64_t v178 = *((void *)this + 1);
          if (v178 > 0xFFFFFFFFFFFFFFFBLL || v178 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 160) = *(_DWORD *)(*(void *)this + v178);
          goto LABEL_354;
        case 0x1Fu:
          *(void *)(a1 + 184) |= 0x40000000000uLL;
          unint64_t v179 = *((void *)this + 1);
          if (v179 >= *((void *)this + 2))
          {
            BOOL v182 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v180 = v179 + 1;
            int v181 = *(unsigned __int8 *)(*(void *)this + v179);
            *((void *)this + 1) = v180;
            BOOL v182 = v181 != 0;
          }
          *(unsigned char *)(a1 + 179) = v182;
          goto LABEL_356;
        case 0x20u:
          *(void *)(a1 + 184) |= 0x20uLL;
          unint64_t v183 = *((void *)this + 1);
          unint64_t v184 = *((void *)this + 2);
          uint64_t v185 = *(void *)this;
          if (v183 <= 0xFFFFFFFFFFFFFFF5 && v183 + 10 <= v184)
          {
            char v186 = 0;
            unsigned int v187 = 0;
            uint64_t v188 = 0;
            do
            {
              unint64_t v189 = v183 + 1;
              *((void *)this + 1) = v183 + 1;
              char v190 = *(unsigned char *)(v185 + v183);
              v188 |= (unint64_t)(v190 & 0x7F) << v186;
              if ((v190 & 0x80) == 0) {
                goto LABEL_428;
              }
              v186 += 7;
              unint64_t v183 = v189;
              BOOL v14 = v187++ > 8;
            }
            while (!v14);
LABEL_352:
            LODWORD(v188) = 0;
            goto LABEL_428;
          }
          char v268 = 0;
          unsigned int v269 = 0;
          uint64_t v188 = 0;
          if (v184 <= v183) {
            unint64_t v184 = *((void *)this + 1);
          }
          break;
        case 0x21u:
          *(void *)(a1 + 184) |= 0x80uLL;
          unint64_t v191 = *((void *)this + 1);
          if (v191 > 0xFFFFFFFFFFFFFFFBLL || v191 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 48) = *(_DWORD *)(*(void *)this + v191);
          goto LABEL_354;
        case 0x22u:
          *(void *)(a1 + 184) |= 0x4000000uLL;
          unint64_t v192 = *((void *)this + 1);
          if (v192 > 0xFFFFFFFFFFFFFFFBLL || v192 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v192);
          goto LABEL_354;
        case 0x23u:
          *(void *)(a1 + 184) |= 0x8000000uLL;
          unint64_t v193 = *((void *)this + 1);
          if (v193 > 0xFFFFFFFFFFFFFFFBLL || v193 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v193);
          goto LABEL_354;
        case 0x24u:
          *(void *)(a1 + 184) |= 0x10000000uLL;
          unint64_t v194 = *((void *)this + 1);
          if (v194 > 0xFFFFFFFFFFFFFFFBLL || v194 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v194);
          goto LABEL_354;
        case 0x25u:
          *(void *)(a1 + 184) |= 0x40uLL;
          unint64_t v195 = *((void *)this + 1);
          if (v195 > 0xFFFFFFFFFFFFFFFBLL || v195 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 44) = *(_DWORD *)(*(void *)this + v195);
          goto LABEL_354;
        case 0x26u:
          *(void *)(a1 + 184) |= 0x100uLL;
          unint64_t v196 = *((void *)this + 1);
          if (v196 > 0xFFFFFFFFFFFFFFFBLL || v196 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v196);
          goto LABEL_354;
        case 0x27u:
          *(void *)(a1 + 184) |= 0x200uLL;
          unint64_t v197 = *((void *)this + 1);
          if (v197 > 0xFFFFFFFFFFFFFFFBLL || v197 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v197);
          goto LABEL_354;
        case 0x28u:
          *(void *)(a1 + 184) |= 0x400000uLL;
          unint64_t v198 = *((void *)this + 1);
          if (v198 > 0xFFFFFFFFFFFFFFFBLL || v198 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 108) = *(_DWORD *)(*(void *)this + v198);
          goto LABEL_354;
        case 0x29u:
          *(void *)(a1 + 184) |= 0x800000uLL;
          unint64_t v199 = *((void *)this + 1);
          if (v199 > 0xFFFFFFFFFFFFFFFBLL || v199 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 112) = *(_DWORD *)(*(void *)this + v199);
          goto LABEL_354;
        case 0x2Au:
          *(void *)(a1 + 184) |= 0x1000000uLL;
          unint64_t v200 = *((void *)this + 1);
          if (v200 > 0xFFFFFFFFFFFFFFFBLL || v200 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 116) = *(_DWORD *)(*(void *)this + v200);
          goto LABEL_354;
        case 0x2Bu:
          *(void *)(a1 + 184) |= 0x40000000uLL;
          unint64_t v201 = *((void *)this + 1);
          if (v201 > 0xFFFFFFFFFFFFFFFBLL || v201 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v201);
          goto LABEL_354;
        case 0x2Cu:
          *(void *)(a1 + 184) |= 0x80000000uLL;
          unint64_t v202 = *((void *)this + 1);
          if (v202 > 0xFFFFFFFFFFFFFFFBLL || v202 + 4 > *((void *)this + 2)) {
            goto LABEL_221;
          }
          *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v202);
          goto LABEL_354;
        case 0x2Du:
          *(void *)(a1 + 184) |= (unint64_t)&_mh_execute_header;
          unint64_t v203 = *((void *)this + 1);
          if (v203 <= 0xFFFFFFFFFFFFFFFBLL && v203 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v203);
LABEL_354:
            uint64_t v55 = *((void *)this + 1) + 4;
LABEL_355:
            *((void *)this + 1) = v55;
          }
          else
          {
LABEL_221:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_356;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_356;
      }
      while (1)
      {
        if (v184 == v183)
        {
          LODWORD(v188) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_428;
        }
        unint64_t v270 = v183 + 1;
        char v271 = *(unsigned char *)(v185 + v183);
        *((void *)this + 1) = v270;
        v188 |= (unint64_t)(v271 & 0x7F) << v268;
        if ((v271 & 0x80) == 0) {
          break;
        }
        v268 += 7;
        unint64_t v183 = v270;
        BOOL v14 = v269++ > 8;
        if (v14) {
          goto LABEL_352;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v188) = 0;
      }
LABEL_428:
      *(_DWORD *)(a1 + 40) = v188;
LABEL_356:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10176D154(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 184);
  if ((v4 & 4) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 24), 1u);
    uint64_t v4 = *(void *)(v3 + 184);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 0x200000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_49;
    }
  }
  else if ((v4 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 2u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x200000) == 0)
  {
LABEL_4:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 104), 3u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x1000000000) == 0)
  {
LABEL_5:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 164), 4u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x100000000000) == 0)
  {
LABEL_6:
    if ((v4 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 181), 5u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x800) == 0)
  {
LABEL_7:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 64), 6u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x10000000000) == 0)
  {
LABEL_8:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 177), 7u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 120), 8u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x80000000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 180), 9u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x4000) == 0)
  {
LABEL_11:
    if ((v4 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 76), 0xAu);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 2) == 0)
  {
LABEL_12:
    if ((v4 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 0xBu);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 0xCu);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x8000000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 176), 0xDu);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x2000) == 0)
  {
LABEL_15:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 72), 0xEu);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 152), 0xFu);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x4000000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 172), 0x10u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x100000) == 0)
  {
LABEL_18:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 100), 0x11u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x20000) == 0)
  {
LABEL_19:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 88), 0x12u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x10000) == 0)
  {
LABEL_20:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 84), 0x13u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x40000) == 0)
  {
LABEL_21:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 92), 0x14u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x80000) == 0)
  {
LABEL_22:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 96), 0x15u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x8000) == 0)
  {
LABEL_23:
    if ((v4 & 0x400) == 0) {
      goto LABEL_24;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 80), 0x16u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x400) == 0)
  {
LABEL_24:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 60), 0x17u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x2000000000) == 0)
  {
LABEL_25:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 168), 0x18u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x1000) == 0)
  {
LABEL_26:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 68), 0x19u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_27:
    if ((v4 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 136), 0x1Au);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x10) == 0)
  {
LABEL_28:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 36), 0x1Bu);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156), 0x1Cu);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x20000000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 178), 0x1Du);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 160), 0x1Eu);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x40000000000) == 0)
  {
LABEL_32:
    if ((v4 & 0x20) == 0) {
      goto LABEL_33;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 179), 0x1Fu);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x20) == 0)
  {
LABEL_33:
    if ((v4 & 0x80) == 0) {
      goto LABEL_34;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 40), 0x20u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x80) == 0)
  {
LABEL_34:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 48), 0x21u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_35:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_81;
  }
LABEL_80:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124), 0x22u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_36:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_82;
  }
LABEL_81:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 0x23u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_37:
    if ((v4 & 0x40) == 0) {
      goto LABEL_38;
    }
    goto LABEL_83;
  }
LABEL_82:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132), 0x24u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x40) == 0)
  {
LABEL_38:
    if ((v4 & 0x100) == 0) {
      goto LABEL_39;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 44), 0x25u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x100) == 0)
  {
LABEL_39:
    if ((v4 & 0x200) == 0) {
      goto LABEL_40;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0x26u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x200) == 0)
  {
LABEL_40:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_86;
  }
LABEL_85:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0x27u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x400000) == 0)
  {
LABEL_41:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 108), 0x28u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x800000) == 0)
  {
LABEL_42:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_88;
  }
LABEL_87:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 112), 0x29u);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_43:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 116), 0x2Au);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_44:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_45;
    }
LABEL_90:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144), 0x2Cu);
    if ((*(void *)(v3 + 184) & 0x100000000) == 0) {
      return result;
    }
    goto LABEL_91;
  }
LABEL_89:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140), 0x2Bu);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x80000000) != 0) {
    goto LABEL_90;
  }
LABEL_45:
  if ((v4 & 0x100000000) == 0) {
    return result;
  }
LABEL_91:
  float v5 = *(float *)(v3 + 148);

  return PB::Writer::write(this, v5, 0x2Du);
}

uint64_t sub_10176D678(uint64_t result)
{
  *(void *)uint64_t result = &off_102339F50;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_10176D6A0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_10176D6D8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_102339F50;
  *(_DWORD *)(a1 + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 40) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 0x40) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 36);
    v3 |= 0x40u;
    *(unsigned char *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 36) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 32);
    v3 |= 0x20u;
    *(unsigned char *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 32) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 24);
  v3 |= 8u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 24) = v4;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  LODWORD(v4) = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 20) = v4;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 2) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_16;
  }
LABEL_15:
  LODWORD(v4) = *(_DWORD *)(a2 + 28);
  v3 |= 0x10u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 28) = v4;
  if ((*(unsigned char *)(a2 + 40) & 2) == 0) {
    return *(float *)&v4;
  }
LABEL_16:
  LODWORD(v4) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 40) = v3 | 2;
  *(_DWORD *)(a1 + 16) = v4;
  return *(float *)&v4;
}

uint64_t sub_10176D7C8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "asymmetryProbability", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "cycleTime", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "distance", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "doubleSupportPercentage", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 1) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "stepLength", *(float *)(a1 + 32));
  if ((*(unsigned char *)(a1 + 40) & 0x40) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "walkingSpeed", *(float *)(a1 + 36));
LABEL_9:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10176D8EC(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 40) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_47;
        case 2u:
          *(unsigned char *)(a1 + 40) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 3u:
          *(unsigned char *)(a1 + 40) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 4u:
          *(unsigned char *)(a1 + 40) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 5u:
          *(unsigned char *)(a1 + 40) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 6u:
          *(unsigned char *)(a1 + 40) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 7u:
          *(unsigned char *)(a1 + 40) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
LABEL_46:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_47:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_44:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10176DC20(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 0x40) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 0x40) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 2u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 3u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 4u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 4) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 28), 6u);
    if ((*(unsigned char *)(v3 + 40) & 2) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 5u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x10) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 2) == 0) {
    return result;
  }
LABEL_15:
  float v5 = *(float *)(v3 + 16);

  return PB::Writer::write(this, v5, 7u);
}

void *sub_10176DD1C(void *result)
{
  *uint64_t result = &off_102339F88;
  result[1] = 0;
  return result;
}

void sub_10176DD3C(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_102339F88;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10176DDBC(PB::Base *a1)
{
  sub_10176DD3C(a1);

  operator delete();
}

void *sub_10176DDF4(void *result, uint64_t a2)
{
  *uint64_t result = &off_102339F88;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_10176DE9C(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10176DF18(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10176E114(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_10176E130(uint64_t result)
{
  *(void *)uint64_t result = &off_102339FC0;
  *(_DWORD *)(result + 116) = 0;
  return result;
}

void sub_10176E158(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10176E190(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102339FC0;
  *(_DWORD *)(result + 116) = 0;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x10000) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 92);
    int v3 = 0x10000;
    *(_DWORD *)(result + 116) = 0x10000;
    *(_DWORD *)(result + 92) = v4;
    int v2 = *(_DWORD *)(a2 + 116);
    if ((v2 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x200) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 64);
    v3 |= 0x200u;
    *(_DWORD *)(result + 116) = v3;
    *(_DWORD *)(result + 64) = v5;
    int v2 = *(_DWORD *)(a2 + 116);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 48);
    v3 |= 0x20u;
    *(_DWORD *)(result + 116) = v3;
    *(_DWORD *)(result + 48) = v6;
    int v2 = *(_DWORD *)(a2 + 116);
    if ((v2 & 0x400) == 0)
    {
LABEL_8:
      if ((v2 & 0x100000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_34;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *(_DWORD *)(a2 + 68);
  v3 |= 0x400u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 68) = v7;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x100000) == 0)
  {
LABEL_9:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_34:
  char v8 = *(unsigned char *)(a2 + 108);
  v3 |= 0x100000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 108) = v8;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x8000) == 0)
  {
LABEL_10:
    if ((v2 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v9 = *(_DWORD *)(a2 + 88);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 88) = v9;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 4) == 0)
  {
LABEL_11:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v10 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 24) = v10;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x200000) == 0)
  {
LABEL_12:
    if ((v2 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  char v11 = *(unsigned char *)(a2 + 109);
  v3 |= 0x200000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 109) = v11;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x100) == 0)
  {
LABEL_13:
    if ((v2 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v12 = *(_DWORD *)(a2 + 60);
  v3 |= 0x100u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 60) = v12;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 1) == 0)
  {
LABEL_14:
    if ((v2 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v13 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 8) = v13;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 2) == 0)
  {
LABEL_15:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v14 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 16) = v14;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x1000) == 0)
  {
LABEL_16:
    if ((v2 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v15 = *(_DWORD *)(a2 + 76);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 76) = v15;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x800) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v16 = *(_DWORD *)(a2 + 72);
  v3 |= 0x800u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 72) = v16;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_44;
  }
LABEL_43:
  char v17 = *(unsigned char *)(a2 + 113);
  v3 |= 0x2000000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 113) = v17;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_19:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_45;
  }
LABEL_44:
  char v18 = *(unsigned char *)(a2 + 112);
  v3 |= 0x1000000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 112) = v18;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x400000) == 0)
  {
LABEL_20:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_46;
  }
LABEL_45:
  char v19 = *(unsigned char *)(a2 + 110);
  v3 |= 0x400000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 110) = v19;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_21:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_47;
  }
LABEL_46:
  char v20 = *(unsigned char *)(a2 + 114);
  v3 |= 0x4000000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 114) = v20;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x800000) == 0)
  {
LABEL_22:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_48;
  }
LABEL_47:
  char v21 = *(unsigned char *)(a2 + 111);
  v3 |= 0x800000u;
  *(_DWORD *)(result + 116) = v3;
  *(unsigned char *)(result + 111) = v21;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x40000) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v22 = *(_DWORD *)(a2 + 100);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 100) = v22;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x80) == 0)
  {
LABEL_24:
    if ((v2 & 0x40) == 0) {
      goto LABEL_25;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v23 = *(_DWORD *)(a2 + 56);
  v3 |= 0x80u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 56) = v23;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x40) == 0)
  {
LABEL_25:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v24 = *(_DWORD *)(a2 + 52);
  v3 |= 0x40u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 52) = v24;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x4000) == 0)
  {
LABEL_26:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v25 = *(_DWORD *)(a2 + 84);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 84) = v25;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x80000) == 0)
  {
LABEL_27:
    if ((v2 & 8) == 0) {
      goto LABEL_28;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v26 = *(_DWORD *)(a2 + 104);
  v3 |= 0x80000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 104) = v26;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 8) == 0)
  {
LABEL_28:
    if ((v2 & 0x10) == 0) {
      goto LABEL_29;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v27 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 32) = v27;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x10) == 0)
  {
LABEL_29:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v28 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(result + 116) = v3;
  *(void *)(result + 40) = v28;
  int v2 = *(_DWORD *)(a2 + 116);
  if ((v2 & 0x20000) == 0)
  {
LABEL_30:
    if ((v2 & 0x2000) == 0) {
      return result;
    }
LABEL_56:
    int v30 = *(_DWORD *)(a2 + 80);
    *(_DWORD *)(result + 116) = v3 | 0x2000;
    *(_DWORD *)(result + 80) = v30;
    return result;
  }
LABEL_55:
  int v29 = *(_DWORD *)(a2 + 96);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 116) = v3;
  *(_DWORD *)(result + 96) = v29;
  if ((*(_DWORD *)(a2 + 116) & 0x2000) != 0) {
    goto LABEL_56;
  }
  return result;
}

uint64_t sub_10176E4B0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x20) != 0)
  {
    PB::TextFormatter::format(this, "confidence", *(_DWORD *)(a1 + 48));
    int v5 = *(_DWORD *)(a1 + 116);
    if ((v5 & 0x40) == 0)
    {
LABEL_3:
      if ((v5 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_34;
    }
  }
  else if ((v5 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "drivingArmLikelihoodSum", *(float *)(a1 + 52));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x80) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(this, "drivingStowedLikelihoodSum", *(float *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(this, "estExitTime", *(double *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x100) == 0)
  {
LABEL_6:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(this, "exitState", *(_DWORD *)(a1 + 60));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x100000) == 0)
  {
LABEL_7:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "isStanding", *(unsigned char *)(a1 + 108));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x200000) == 0)
  {
LABEL_8:
    if ((v5 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "isVehicleConnected", *(unsigned char *)(a1 + 109));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x200) == 0)
  {
LABEL_9:
    if ((v5 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "mountedConfidence", *(_DWORD *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x400) == 0)
  {
LABEL_10:
    if ((v5 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "mountedState", *(_DWORD *)(a1 + 68));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x800) == 0)
  {
LABEL_11:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "rawConfidence", *(_DWORD *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x1000) == 0)
  {
LABEL_12:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "rawType", *(_DWORD *)(a1 + 76));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x2000) == 0)
  {
LABEL_13:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "source", *(_DWORD *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x4000) == 0)
  {
LABEL_14:
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "ssLikelihoodSum", *(float *)(a1 + 84));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 2) == 0)
  {
LABEL_15:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x8000) == 0)
  {
LABEL_16:
    if ((v5 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "tilt", *(float *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 4) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "type", *(_DWORD *)(a1 + 92));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "typeYouth", *(_DWORD *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x400000) == 0)
  {
LABEL_20:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "vehicularBasebandHint", *(unsigned char *)(a1 + 110));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x800000) == 0)
  {
LABEL_21:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "vehicularBtHint", *(unsigned char *)(a1 + 111));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x40000) == 0)
  {
LABEL_22:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "vehicularConfidence", *(_DWORD *)(a1 + 100));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_23:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "vehicularGpsHint", *(unsigned char *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_24:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "vehicularMotionHint", *(unsigned char *)(a1 + 113));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_25:
    if ((v5 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "vehicularWifiHint", *(unsigned char *)(a1 + 114));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 8) == 0)
  {
LABEL_26:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "workoutDetectionTime", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 116);
  if ((v5 & 0x80000) == 0)
  {
LABEL_27:
    if ((v5 & 0x10) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
LABEL_57:
  PB::TextFormatter::format(this, "workoutDetectionType", *(_DWORD *)(a1 + 104));
  if ((*(_DWORD *)(a1 + 116) & 0x10) != 0) {
LABEL_28:
  }
    PB::TextFormatter::format(this, "workoutEscalationTime", *(void *)(a1 + 40));
LABEL_29:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10176E854(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 116) |= 0x10000u;
          unint64_t v20 = *((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v21)
          {
            char v154 = 0;
            unsigned int v155 = 0;
            uint64_t v25 = 0;
            if (v21 <= v20) {
              unint64_t v21 = *((void *)this + 1);
            }
            do
            {
              if (v21 == v20)
              {
                LODWORD(v25) = 0;
                *((unsigned char *)this + 24) = 1;
                goto LABEL_251;
              }
              unint64_t v156 = v20 + 1;
              char v157 = *(unsigned char *)(v22 + v20);
              *((void *)this + 1) = v156;
              v25 |= (unint64_t)(v157 & 0x7F) << v154;
              if ((v157 & 0x80) == 0)
              {
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_251;
              }
              v154 += 7;
              unint64_t v20 = v156;
              BOOL v14 = v155++ > 8;
            }
            while (!v14);
LABEL_153:
            LODWORD(v25) = 0;
          }
          else
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            while (1)
            {
              unint64_t v26 = v20 + 1;
              *((void *)this + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                break;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
              if (v14) {
                goto LABEL_153;
              }
            }
          }
LABEL_251:
          *(_DWORD *)(a1 + 92) = v25;
          goto LABEL_296;
        case 2u:
          *(_DWORD *)(a1 + 116) |= 0x200u;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_255;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_160:
            LODWORD(v34) = 0;
            goto LABEL_255;
          }
          char v158 = 0;
          unsigned int v159 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          while (2)
          {
            if (v30 == v29)
            {
              LODWORD(v34) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v160 = v29 + 1;
              char v161 = *(unsigned char *)(v31 + v29);
              *((void *)this + 1) = v160;
              v34 |= (unint64_t)(v161 & 0x7F) << v158;
              if (v161 < 0)
              {
                v158 += 7;
                unint64_t v29 = v160;
                BOOL v14 = v159++ > 8;
                if (v14) {
                  goto LABEL_160;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v34) = 0;
              }
            }
            break;
          }
LABEL_255:
          *(_DWORD *)(a1 + 64) = v34;
          goto LABEL_296;
        case 3u:
          *(_DWORD *)(a1 + 116) |= 0x20u;
          unint64_t v37 = *((void *)this + 1);
          unint64_t v38 = *((void *)this + 2);
          uint64_t v39 = *(void *)this;
          if (v37 <= 0xFFFFFFFFFFFFFFF5 && v37 + 10 <= v38)
          {
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            do
            {
              unint64_t v43 = v37 + 1;
              *((void *)this + 1) = v37 + 1;
              char v44 = *(unsigned char *)(v39 + v37);
              v42 |= (unint64_t)(v44 & 0x7F) << v40;
              if ((v44 & 0x80) == 0) {
                goto LABEL_259;
              }
              v40 += 7;
              unint64_t v37 = v43;
              BOOL v14 = v41++ > 8;
            }
            while (!v14);
LABEL_167:
            LODWORD(v42) = 0;
            goto LABEL_259;
          }
          char v162 = 0;
          unsigned int v163 = 0;
          uint64_t v42 = 0;
          if (v38 <= v37) {
            unint64_t v38 = *((void *)this + 1);
          }
          while (2)
          {
            if (v38 == v37)
            {
              LODWORD(v42) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v164 = v37 + 1;
              char v165 = *(unsigned char *)(v39 + v37);
              *((void *)this + 1) = v164;
              v42 |= (unint64_t)(v165 & 0x7F) << v162;
              if (v165 < 0)
              {
                v162 += 7;
                unint64_t v37 = v164;
                BOOL v14 = v163++ > 8;
                if (v14) {
                  goto LABEL_167;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v42) = 0;
              }
            }
            break;
          }
LABEL_259:
          *(_DWORD *)(a1 + 48) = v42;
          goto LABEL_296;
        case 4u:
          *(_DWORD *)(a1 + 116) |= 0x400u;
          unint64_t v45 = *((void *)this + 1);
          unint64_t v46 = *((void *)this + 2);
          uint64_t v47 = *(void *)this;
          if (v45 <= 0xFFFFFFFFFFFFFFF5 && v45 + 10 <= v46)
          {
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v50 = 0;
            do
            {
              unint64_t v51 = v45 + 1;
              *((void *)this + 1) = v45 + 1;
              char v52 = *(unsigned char *)(v47 + v45);
              v50 |= (unint64_t)(v52 & 0x7F) << v48;
              if ((v52 & 0x80) == 0) {
                goto LABEL_263;
              }
              v48 += 7;
              unint64_t v45 = v51;
              BOOL v14 = v49++ > 8;
            }
            while (!v14);
LABEL_174:
            LODWORD(v50) = 0;
            goto LABEL_263;
          }
          char v166 = 0;
          unsigned int v167 = 0;
          uint64_t v50 = 0;
          if (v46 <= v45) {
            unint64_t v46 = *((void *)this + 1);
          }
          while (2)
          {
            if (v46 == v45)
            {
              LODWORD(v50) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v168 = v45 + 1;
              char v169 = *(unsigned char *)(v47 + v45);
              *((void *)this + 1) = v168;
              v50 |= (unint64_t)(v169 & 0x7F) << v166;
              if (v169 < 0)
              {
                v166 += 7;
                unint64_t v45 = v168;
                BOOL v14 = v167++ > 8;
                if (v14) {
                  goto LABEL_174;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v50) = 0;
              }
            }
            break;
          }
LABEL_263:
          *(_DWORD *)(a1 + 68) = v50;
          goto LABEL_296;
        case 5u:
          *(_DWORD *)(a1 + 116) |= 0x100000u;
          unint64_t v53 = *((void *)this + 1);
          if (v53 >= *((void *)this + 2))
          {
            BOOL v56 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v54 = v53 + 1;
            int v55 = *(unsigned __int8 *)(*(void *)this + v53);
            *((void *)this + 1) = v54;
            BOOL v56 = v55 != 0;
          }
          *(unsigned char *)(a1 + 108) = v56;
          goto LABEL_296;
        case 6u:
          *(_DWORD *)(a1 + 116) |= 0x8000u;
          unint64_t v57 = *((void *)this + 1);
          if (v57 > 0xFFFFFFFFFFFFFFFBLL || v57 + 4 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 88) = *(_DWORD *)(*(void *)this + v57);
          goto LABEL_115;
        case 7u:
          *(_DWORD *)(a1 + 116) |= 4u;
          unint64_t v58 = *((void *)this + 1);
          if (v58 > 0xFFFFFFFFFFFFFFF7 || v58 + 8 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v58);
          goto LABEL_246;
        case 8u:
          *(_DWORD *)(a1 + 116) |= 0x200000u;
          unint64_t v59 = *((void *)this + 1);
          if (v59 >= *((void *)this + 2))
          {
            BOOL v62 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v60 = v59 + 1;
            int v61 = *(unsigned __int8 *)(*(void *)this + v59);
            *((void *)this + 1) = v60;
            BOOL v62 = v61 != 0;
          }
          *(unsigned char *)(a1 + 109) = v62;
          goto LABEL_296;
        case 9u:
          *(_DWORD *)(a1 + 116) |= 0x100u;
          unint64_t v63 = *((void *)this + 1);
          unint64_t v64 = *((void *)this + 2);
          uint64_t v65 = *(void *)this;
          if (v63 <= 0xFFFFFFFFFFFFFFF5 && v63 + 10 <= v64)
          {
            char v66 = 0;
            unsigned int v67 = 0;
            uint64_t v68 = 0;
            do
            {
              unint64_t v69 = v63 + 1;
              *((void *)this + 1) = v63 + 1;
              char v70 = *(unsigned char *)(v65 + v63);
              v68 |= (unint64_t)(v70 & 0x7F) << v66;
              if ((v70 & 0x80) == 0) {
                goto LABEL_267;
              }
              v66 += 7;
              unint64_t v63 = v69;
              BOOL v14 = v67++ > 8;
            }
            while (!v14);
LABEL_185:
            LODWORD(v68) = 0;
            goto LABEL_267;
          }
          char v170 = 0;
          unsigned int v171 = 0;
          uint64_t v68 = 0;
          if (v64 <= v63) {
            unint64_t v64 = *((void *)this + 1);
          }
          while (2)
          {
            if (v64 == v63)
            {
              LODWORD(v68) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v172 = v63 + 1;
              char v173 = *(unsigned char *)(v65 + v63);
              *((void *)this + 1) = v172;
              v68 |= (unint64_t)(v173 & 0x7F) << v170;
              if (v173 < 0)
              {
                v170 += 7;
                unint64_t v63 = v172;
                BOOL v14 = v171++ > 8;
                if (v14) {
                  goto LABEL_185;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v68) = 0;
              }
            }
            break;
          }
LABEL_267:
          *(_DWORD *)(a1 + 60) = v68;
          goto LABEL_296;
        case 0xAu:
          *(_DWORD *)(a1 + 116) |= 1u;
          unint64_t v71 = *((void *)this + 1);
          if (v71 > 0xFFFFFFFFFFFFFFF7 || v71 + 8 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v71);
          goto LABEL_246;
        case 0xBu:
          *(_DWORD *)(a1 + 116) |= 2u;
          unint64_t v72 = *((void *)this + 1);
          if (v72 > 0xFFFFFFFFFFFFFFF7 || v72 + 8 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v72);
          goto LABEL_246;
        case 0xCu:
          *(_DWORD *)(a1 + 116) |= 0x1000u;
          unint64_t v73 = *((void *)this + 1);
          unint64_t v74 = *((void *)this + 2);
          uint64_t v75 = *(void *)this;
          if (v73 <= 0xFFFFFFFFFFFFFFF5 && v73 + 10 <= v74)
          {
            char v76 = 0;
            unsigned int v77 = 0;
            uint64_t v78 = 0;
            do
            {
              unint64_t v79 = v73 + 1;
              *((void *)this + 1) = v73 + 1;
              char v80 = *(unsigned char *)(v75 + v73);
              v78 |= (unint64_t)(v80 & 0x7F) << v76;
              if ((v80 & 0x80) == 0) {
                goto LABEL_271;
              }
              v76 += 7;
              unint64_t v73 = v79;
              BOOL v14 = v77++ > 8;
            }
            while (!v14);
LABEL_192:
            LODWORD(v78) = 0;
            goto LABEL_271;
          }
          char v174 = 0;
          unsigned int v175 = 0;
          uint64_t v78 = 0;
          if (v74 <= v73) {
            unint64_t v74 = *((void *)this + 1);
          }
          while (2)
          {
            if (v74 == v73)
            {
              LODWORD(v78) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v176 = v73 + 1;
              char v177 = *(unsigned char *)(v75 + v73);
              *((void *)this + 1) = v176;
              v78 |= (unint64_t)(v177 & 0x7F) << v174;
              if (v177 < 0)
              {
                v174 += 7;
                unint64_t v73 = v176;
                BOOL v14 = v175++ > 8;
                if (v14) {
                  goto LABEL_192;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v78) = 0;
              }
            }
            break;
          }
LABEL_271:
          *(_DWORD *)(a1 + 76) = v78;
          goto LABEL_296;
        case 0xDu:
          *(_DWORD *)(a1 + 116) |= 0x800u;
          unint64_t v81 = *((void *)this + 1);
          unint64_t v82 = *((void *)this + 2);
          uint64_t v83 = *(void *)this;
          if (v81 <= 0xFFFFFFFFFFFFFFF5 && v81 + 10 <= v82)
          {
            char v84 = 0;
            unsigned int v85 = 0;
            uint64_t v86 = 0;
            do
            {
              unint64_t v87 = v81 + 1;
              *((void *)this + 1) = v81 + 1;
              char v88 = *(unsigned char *)(v83 + v81);
              v86 |= (unint64_t)(v88 & 0x7F) << v84;
              if ((v88 & 0x80) == 0) {
                goto LABEL_275;
              }
              v84 += 7;
              unint64_t v81 = v87;
              BOOL v14 = v85++ > 8;
            }
            while (!v14);
LABEL_199:
            LODWORD(v86) = 0;
            goto LABEL_275;
          }
          char v178 = 0;
          unsigned int v179 = 0;
          uint64_t v86 = 0;
          if (v82 <= v81) {
            unint64_t v82 = *((void *)this + 1);
          }
          while (2)
          {
            if (v82 == v81)
            {
              LODWORD(v86) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v180 = v81 + 1;
              char v181 = *(unsigned char *)(v83 + v81);
              *((void *)this + 1) = v180;
              v86 |= (unint64_t)(v181 & 0x7F) << v178;
              if (v181 < 0)
              {
                v178 += 7;
                unint64_t v81 = v180;
                BOOL v14 = v179++ > 8;
                if (v14) {
                  goto LABEL_199;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v86) = 0;
              }
            }
            break;
          }
LABEL_275:
          *(_DWORD *)(a1 + 72) = v86;
          goto LABEL_296;
        case 0xEu:
          *(_DWORD *)(a1 + 116) |= 0x2000000u;
          unint64_t v89 = *((void *)this + 1);
          if (v89 >= *((void *)this + 2))
          {
            BOOL v92 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v90 = v89 + 1;
            int v91 = *(unsigned __int8 *)(*(void *)this + v89);
            *((void *)this + 1) = v90;
            BOOL v92 = v91 != 0;
          }
          *(unsigned char *)(a1 + 113) = v92;
          goto LABEL_296;
        case 0xFu:
          *(_DWORD *)(a1 + 116) |= 0x1000000u;
          unint64_t v93 = *((void *)this + 1);
          if (v93 >= *((void *)this + 2))
          {
            BOOL v96 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v94 = v93 + 1;
            int v95 = *(unsigned __int8 *)(*(void *)this + v93);
            *((void *)this + 1) = v94;
            BOOL v96 = v95 != 0;
          }
          *(unsigned char *)(a1 + 112) = v96;
          goto LABEL_296;
        case 0x10u:
          *(_DWORD *)(a1 + 116) |= 0x400000u;
          unint64_t v97 = *((void *)this + 1);
          if (v97 >= *((void *)this + 2))
          {
            BOOL v100 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v98 = v97 + 1;
            int v99 = *(unsigned __int8 *)(*(void *)this + v97);
            *((void *)this + 1) = v98;
            BOOL v100 = v99 != 0;
          }
          *(unsigned char *)(a1 + 110) = v100;
          goto LABEL_296;
        case 0x11u:
          *(_DWORD *)(a1 + 116) |= 0x4000000u;
          unint64_t v101 = *((void *)this + 1);
          if (v101 >= *((void *)this + 2))
          {
            BOOL v104 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v102 = v101 + 1;
            int v103 = *(unsigned __int8 *)(*(void *)this + v101);
            *((void *)this + 1) = v102;
            BOOL v104 = v103 != 0;
          }
          *(unsigned char *)(a1 + 114) = v104;
          goto LABEL_296;
        case 0x12u:
          *(_DWORD *)(a1 + 116) |= 0x800000u;
          unint64_t v105 = *((void *)this + 1);
          if (v105 >= *((void *)this + 2))
          {
            BOOL v108 = 0;
            *((unsigned char *)this + 24) = 1;
          }
          else
          {
            unint64_t v106 = v105 + 1;
            int v107 = *(unsigned __int8 *)(*(void *)this + v105);
            *((void *)this + 1) = v106;
            BOOL v108 = v107 != 0;
          }
          *(unsigned char *)(a1 + 111) = v108;
          goto LABEL_296;
        case 0x13u:
          *(_DWORD *)(a1 + 116) |= 0x40000u;
          unint64_t v109 = *((void *)this + 1);
          unint64_t v110 = *((void *)this + 2);
          uint64_t v111 = *(void *)this;
          if (v109 <= 0xFFFFFFFFFFFFFFF5 && v109 + 10 <= v110)
          {
            char v112 = 0;
            unsigned int v113 = 0;
            uint64_t v114 = 0;
            do
            {
              unint64_t v115 = v109 + 1;
              *((void *)this + 1) = v109 + 1;
              char v116 = *(unsigned char *)(v111 + v109);
              v114 |= (unint64_t)(v116 & 0x7F) << v112;
              if ((v116 & 0x80) == 0) {
                goto LABEL_279;
              }
              v112 += 7;
              unint64_t v109 = v115;
              BOOL v14 = v113++ > 8;
            }
            while (!v14);
LABEL_216:
            LODWORD(v114) = 0;
            goto LABEL_279;
          }
          char v182 = 0;
          unsigned int v183 = 0;
          uint64_t v114 = 0;
          if (v110 <= v109) {
            unint64_t v110 = *((void *)this + 1);
          }
          while (2)
          {
            if (v110 == v109)
            {
              LODWORD(v114) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v184 = v109 + 1;
              char v185 = *(unsigned char *)(v111 + v109);
              *((void *)this + 1) = v184;
              v114 |= (unint64_t)(v185 & 0x7F) << v182;
              if (v185 < 0)
              {
                v182 += 7;
                unint64_t v109 = v184;
                BOOL v14 = v183++ > 8;
                if (v14) {
                  goto LABEL_216;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v114) = 0;
              }
            }
            break;
          }
LABEL_279:
          *(_DWORD *)(a1 + 100) = v114;
          goto LABEL_296;
        case 0x14u:
          *(_DWORD *)(a1 + 116) |= 0x80u;
          unint64_t v117 = *((void *)this + 1);
          if (v117 > 0xFFFFFFFFFFFFFFFBLL || v117 + 4 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 56) = *(_DWORD *)(*(void *)this + v117);
          goto LABEL_115;
        case 0x15u:
          *(_DWORD *)(a1 + 116) |= 0x40u;
          unint64_t v118 = *((void *)this + 1);
          if (v118 > 0xFFFFFFFFFFFFFFFBLL || v118 + 4 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 52) = *(_DWORD *)(*(void *)this + v118);
          goto LABEL_115;
        case 0x16u:
          *(_DWORD *)(a1 + 116) |= 0x4000u;
          unint64_t v119 = *((void *)this + 1);
          if (v119 > 0xFFFFFFFFFFFFFFFBLL || v119 + 4 > *((void *)this + 2)) {
            goto LABEL_125;
          }
          *(_DWORD *)(a1 + 84) = *(_DWORD *)(*(void *)this + v119);
LABEL_115:
          uint64_t v120 = *((void *)this + 1) + 4;
          goto LABEL_247;
        case 0x17u:
          *(_DWORD *)(a1 + 116) |= 0x80000u;
          unint64_t v121 = *((void *)this + 1);
          unint64_t v122 = *((void *)this + 2);
          uint64_t v123 = *(void *)this;
          if (v121 <= 0xFFFFFFFFFFFFFFF5 && v121 + 10 <= v122)
          {
            char v124 = 0;
            unsigned int v125 = 0;
            uint64_t v126 = 0;
            do
            {
              unint64_t v127 = v121 + 1;
              *((void *)this + 1) = v121 + 1;
              char v128 = *(unsigned char *)(v123 + v121);
              v126 |= (unint64_t)(v128 & 0x7F) << v124;
              if ((v128 & 0x80) == 0) {
                goto LABEL_283;
              }
              v124 += 7;
              unint64_t v121 = v127;
              BOOL v14 = v125++ > 8;
            }
            while (!v14);
LABEL_223:
            LODWORD(v126) = 0;
            goto LABEL_283;
          }
          char v186 = 0;
          unsigned int v187 = 0;
          uint64_t v126 = 0;
          if (v122 <= v121) {
            unint64_t v122 = *((void *)this + 1);
          }
          while (2)
          {
            if (v122 == v121)
            {
              LODWORD(v126) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v188 = v121 + 1;
              char v189 = *(unsigned char *)(v123 + v121);
              *((void *)this + 1) = v188;
              v126 |= (unint64_t)(v189 & 0x7F) << v186;
              if (v189 < 0)
              {
                v186 += 7;
                unint64_t v121 = v188;
                BOOL v14 = v187++ > 8;
                if (v14) {
                  goto LABEL_223;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v126) = 0;
              }
            }
            break;
          }
LABEL_283:
          *(_DWORD *)(a1 + 104) = v126;
          goto LABEL_296;
        case 0x18u:
          *(_DWORD *)(a1 + 116) |= 8u;
          unint64_t v129 = *((void *)this + 1);
          if (v129 <= 0xFFFFFFFFFFFFFFF7 && v129 + 8 <= *((void *)this + 2))
          {
            *(void *)(a1 + 32) = *(void *)(*(void *)this + v129);
LABEL_246:
            uint64_t v120 = *((void *)this + 1) + 8;
LABEL_247:
            *((void *)this + 1) = v120;
          }
          else
          {
LABEL_125:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_296;
        case 0x19u:
          *(_DWORD *)(a1 + 116) |= 0x10u;
          unint64_t v130 = *((void *)this + 1);
          unint64_t v131 = *((void *)this + 2);
          uint64_t v132 = *(void *)this;
          if (v130 <= 0xFFFFFFFFFFFFFFF5 && v130 + 10 <= v131)
          {
            char v133 = 0;
            unsigned int v134 = 0;
            uint64_t v135 = 0;
            do
            {
              unint64_t v136 = v130 + 1;
              *((void *)this + 1) = v130 + 1;
              char v137 = *(unsigned char *)(v132 + v130);
              v135 |= (unint64_t)(v137 & 0x7F) << v133;
              if ((v137 & 0x80) == 0) {
                goto LABEL_287;
              }
              v133 += 7;
              unint64_t v130 = v136;
              BOOL v14 = v134++ > 8;
            }
            while (!v14);
LABEL_230:
            uint64_t v135 = 0;
            goto LABEL_287;
          }
          char v190 = 0;
          unsigned int v191 = 0;
          uint64_t v135 = 0;
          if (v131 <= v130) {
            unint64_t v131 = *((void *)this + 1);
          }
          while (2)
          {
            if (v131 == v130)
            {
              uint64_t v135 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v192 = v130 + 1;
              char v193 = *(unsigned char *)(v132 + v130);
              *((void *)this + 1) = v192;
              v135 |= (unint64_t)(v193 & 0x7F) << v190;
              if (v193 < 0)
              {
                v190 += 7;
                unint64_t v130 = v192;
                BOOL v14 = v191++ > 8;
                if (v14) {
                  goto LABEL_230;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v135 = 0;
              }
            }
            break;
          }
LABEL_287:
          *(void *)(a1 + 40) = v135;
          goto LABEL_296;
        case 0x1Au:
          *(_DWORD *)(a1 + 116) |= 0x20000u;
          unint64_t v138 = *((void *)this + 1);
          unint64_t v139 = *((void *)this + 2);
          uint64_t v140 = *(void *)this;
          if (v138 <= 0xFFFFFFFFFFFFFFF5 && v138 + 10 <= v139)
          {
            char v141 = 0;
            unsigned int v142 = 0;
            uint64_t v143 = 0;
            do
            {
              unint64_t v144 = v138 + 1;
              *((void *)this + 1) = v138 + 1;
              char v145 = *(unsigned char *)(v140 + v138);
              v143 |= (unint64_t)(v145 & 0x7F) << v141;
              if ((v145 & 0x80) == 0) {
                goto LABEL_291;
              }
              v141 += 7;
              unint64_t v138 = v144;
              BOOL v14 = v142++ > 8;
            }
            while (!v14);
LABEL_237:
            LODWORD(v143) = 0;
            goto LABEL_291;
          }
          char v194 = 0;
          unsigned int v195 = 0;
          uint64_t v143 = 0;
          if (v139 <= v138) {
            unint64_t v139 = *((void *)this + 1);
          }
          while (2)
          {
            if (v139 == v138)
            {
              LODWORD(v143) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v196 = v138 + 1;
              char v197 = *(unsigned char *)(v140 + v138);
              *((void *)this + 1) = v196;
              v143 |= (unint64_t)(v197 & 0x7F) << v194;
              if (v197 < 0)
              {
                v194 += 7;
                unint64_t v138 = v196;
                BOOL v14 = v195++ > 8;
                if (v14) {
                  goto LABEL_237;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v143) = 0;
              }
            }
            break;
          }
LABEL_291:
          *(_DWORD *)(a1 + 96) = v143;
          goto LABEL_296;
        case 0x1Bu:
          *(_DWORD *)(a1 + 116) |= 0x2000u;
          unint64_t v146 = *((void *)this + 1);
          unint64_t v147 = *((void *)this + 2);
          uint64_t v148 = *(void *)this;
          if (v146 <= 0xFFFFFFFFFFFFFFF5 && v146 + 10 <= v147)
          {
            char v149 = 0;
            unsigned int v150 = 0;
            uint64_t v151 = 0;
            do
            {
              unint64_t v152 = v146 + 1;
              *((void *)this + 1) = v146 + 1;
              char v153 = *(unsigned char *)(v148 + v146);
              v151 |= (unint64_t)(v153 & 0x7F) << v149;
              if ((v153 & 0x80) == 0) {
                goto LABEL_295;
              }
              v149 += 7;
              unint64_t v146 = v152;
              BOOL v14 = v150++ > 8;
            }
            while (!v14);
LABEL_244:
            LODWORD(v151) = 0;
            goto LABEL_295;
          }
          char v198 = 0;
          unsigned int v199 = 0;
          uint64_t v151 = 0;
          if (v147 <= v146) {
            unint64_t v147 = *((void *)this + 1);
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_296;
      }
      while (1)
      {
        if (v147 == v146)
        {
          LODWORD(v151) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_295;
        }
        unint64_t v200 = v146 + 1;
        char v201 = *(unsigned char *)(v148 + v146);
        *((void *)this + 1) = v200;
        v151 |= (unint64_t)(v201 & 0x7F) << v198;
        if ((v201 & 0x80) == 0) {
          break;
        }
        v198 += 7;
        unint64_t v146 = v200;
        BOOL v14 = v199++ > 8;
        if (v14) {
          goto LABEL_244;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v151) = 0;
      }
LABEL_295:
      *(_DWORD *)(a1 + 80) = v151;
LABEL_296:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_10176F8DC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 116);
  if ((v4 & 0x10000) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 92), 1u);
    int v4 = *(_DWORD *)(v3 + 116);
    if ((v4 & 0x200) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_31;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 64), 2u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 0x400) == 0) {
      goto LABEL_5;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 48), 3u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x400) == 0)
  {
LABEL_5:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 68), 4u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x100000) == 0)
  {
LABEL_6:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 108), 5u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x8000) == 0)
  {
LABEL_7:
    if ((v4 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 88), 6u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 7u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x200000) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 109), 8u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 60), 9u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 1) == 0)
  {
LABEL_11:
    if ((v4 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 0xAu);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 2) == 0)
  {
LABEL_12:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 0xBu);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x1000) == 0)
  {
LABEL_13:
    if ((v4 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 76), 0xCu);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x800) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 72), 0xDu);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 113), 0xEu);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 112), 0xFu);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x400000) == 0)
  {
LABEL_17:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 110), 0x10u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_18:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 114), 0x11u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x800000) == 0)
  {
LABEL_19:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 111), 0x12u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x40000) == 0)
  {
LABEL_20:
    if ((v4 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 100), 0x13u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x80) == 0)
  {
LABEL_21:
    if ((v4 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 56), 0x14u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x40) == 0)
  {
LABEL_22:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 52), 0x15u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x4000) == 0)
  {
LABEL_23:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 84), 0x16u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x80000) == 0)
  {
LABEL_24:
    if ((v4 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 104), 0x17u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 8) == 0)
  {
LABEL_25:
    if ((v4 & 0x10) == 0) {
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 0x18u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x10) == 0)
  {
LABEL_26:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_27;
    }
LABEL_54:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 96), 0x1Au);
    if ((*(_DWORD *)(v3 + 116) & 0x2000) == 0) {
      return result;
    }
    goto LABEL_55;
  }
LABEL_53:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 40), 0x19u);
  int v4 = *(_DWORD *)(v3 + 116);
  if ((v4 & 0x20000) != 0) {
    goto LABEL_54;
  }
LABEL_27:
  if ((v4 & 0x2000) == 0) {
    return result;
  }
LABEL_55:
  unsigned int v5 = *(_DWORD *)(v3 + 80);

  return PB::Writer::writeVarInt(this, v5, 0x1Bu);
}

uint64_t sub_10176FC08(uint64_t result)
{
  *(void *)uint64_t result = &off_102339FF8;
  *(_DWORD *)(result + 36) = 0;
  return result;
}

void sub_10176FC30(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10176FC68(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_102339FF8;
  *(_DWORD *)(result + 36) = 0;
  __int16 v2 = *(_WORD *)(a2 + 36);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v3 = 1;
    *(_WORD *)(result + 36) = 1;
    *(void *)(result + 8) = v4;
    __int16 v2 = *(_WORD *)(a2 + 36);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 28);
    v3 |= 0x10u;
    *(_WORD *)(result + 36) = v3;
    *(_DWORD *)(result + 28) = v5;
    __int16 v2 = *(_WORD *)(a2 + 36);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(_WORD *)(result + 36) = v3;
    *(_DWORD *)(result + 24) = v6;
    __int16 v2 = *(_WORD *)(a2 + 36);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 0x100) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  char v7 = *(unsigned char *)(a2 + 34);
  v3 |= 0x80u;
  *(_WORD *)(result + 36) = v3;
  *(unsigned char *)(result + 34) = v7;
  __int16 v2 = *(_WORD *)(a2 + 36);
  if ((v2 & 0x100) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  char v8 = *(unsigned char *)(a2 + 35);
  v3 |= 0x100u;
  *(_WORD *)(result + 36) = v3;
  *(unsigned char *)(result + 35) = v8;
  __int16 v2 = *(_WORD *)(a2 + 36);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  char v9 = *(unsigned char *)(a2 + 32);
  v3 |= 0x20u;
  *(_WORD *)(result + 36) = v3;
  *(unsigned char *)(result + 32) = v9;
  __int16 v2 = *(_WORD *)(a2 + 36);
  if ((v2 & 0x40) == 0)
  {
LABEL_11:
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v10 = *(unsigned char *)(a2 + 33);
  v3 |= 0x40u;
  *(_WORD *)(result + 36) = v3;
  *(unsigned char *)(result + 33) = v10;
  __int16 v2 = *(_WORD *)(a2 + 36);
  if ((v2 & 2) == 0)
  {
LABEL_12:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_20:
    int v12 = *(_DWORD *)(a2 + 20);
    *(_WORD *)(result + 36) = v3 | 4;
    *(_DWORD *)(result + 20) = v12;
    return result;
  }
LABEL_19:
  int v11 = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 36) = v3;
  *(_DWORD *)(result + 16) = v11;
  if ((*(_WORD *)(a2 + 36) & 4) != 0) {
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_10176FD90(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 36);
  if (v5)
  {
    PB::TextFormatter::format(this, "iostime", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "outdoorCyclingStateMachineFrom", *(_DWORD *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 36);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "outdoorCyclingStateMachineTo", *(_DWORD *)(a1 + 20));
  __int16 v5 = *(_WORD *)(a1 + 36);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(this, "workoutLocationType", *(_DWORD *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 36);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "workoutPause", *(unsigned char *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 36);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "workoutResume", *(unsigned char *)(a1 + 33));
  __int16 v5 = *(_WORD *)(a1 + 36);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "workoutStart", *(unsigned char *)(a1 + 34));
  __int16 v5 = *(_WORD *)(a1 + 36);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(this, "workoutStop", *(unsigned char *)(a1 + 35));
  if ((*(_WORD *)(a1 + 36) & 0x10) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(this, "workoutType", *(_DWORD *)(a1 + 28));
LABEL_11:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10176FEF4(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 36) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_120;
            case 2u:
              *(_WORD *)(a1 + 36) |= 0x10u;
              unint64_t v20 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v21 = *(void *)this;
              if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v24 = 0;
                if (v2 <= v20) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v20)
                  {
                    LODWORD(v24) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_104;
                  }
                  unint64_t v55 = v20++;
                  char v56 = *(unsigned char *)(v21 + v55);
                  *((void *)this + 1) = v20;
                  v24 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v24) = 0;
LABEL_103:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_104;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v24) = 0;
                }
                goto LABEL_103;
              }
              char v22 = 0;
              unsigned int v23 = 0;
              uint64_t v24 = 0;
              do
              {
                unint64_t v2 = v20 + 1;
                *((void *)this + 1) = v20 + 1;
                char v25 = *(unsigned char *)(v21 + v20);
                v24 |= (unint64_t)(v25 & 0x7F) << v22;
                if ((v25 & 0x80) == 0) {
                  goto LABEL_104;
                }
                v22 += 7;
                unint64_t v20 = v2;
                BOOL v14 = v23++ > 8;
              }
              while (!v14);
              LODWORD(v24) = 0;
LABEL_104:
              *(_DWORD *)(a1 + 28) = v24;
              goto LABEL_120;
            case 3u:
              *(_WORD *)(a1 + 36) |= 8u;
              unint64_t v26 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v27 = *(void *)this;
              if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v30 = 0;
                if (v2 <= v26) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v26)
                  {
                    LODWORD(v30) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_109;
                  }
                  unint64_t v59 = v26++;
                  char v60 = *(unsigned char *)(v27 + v59);
                  *((void *)this + 1) = v26;
                  v30 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v30) = 0;
LABEL_108:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_109;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v30) = 0;
                }
                goto LABEL_108;
              }
              char v28 = 0;
              unsigned int v29 = 0;
              uint64_t v30 = 0;
              do
              {
                unint64_t v2 = v26 + 1;
                *((void *)this + 1) = v26 + 1;
                char v31 = *(unsigned char *)(v27 + v26);
                v30 |= (unint64_t)(v31 & 0x7F) << v28;
                if ((v31 & 0x80) == 0) {
                  goto LABEL_109;
                }
                v28 += 7;
                unint64_t v26 = v2;
                BOOL v14 = v29++ > 8;
              }
              while (!v14);
              LODWORD(v30) = 0;
LABEL_109:
              *(_DWORD *)(a1 + 24) = v30;
              goto LABEL_120;
            case 0xAu:
              *(_WORD *)(a1 + 36) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 34) = v34;
              goto LABEL_120;
            case 0xBu:
              *(_WORD *)(a1 + 36) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v36 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v35 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v36 = v35 != 0;
              }
              *(unsigned char *)(a1 + 35) = v36;
              goto LABEL_120;
            case 0xCu:
              *(_WORD *)(a1 + 36) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v38 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v37 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v38 = v37 != 0;
              }
              *(unsigned char *)(a1 + 32) = v38;
              goto LABEL_120;
            case 0xDu:
              *(_WORD *)(a1 + 36) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v40 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v39 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v40 = v39 != 0;
              }
              *(unsigned char *)(a1 + 33) = v40;
              goto LABEL_120;
            case 0x15u:
              *(_WORD *)(a1 + 36) |= 2u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v61 = 0;
                unsigned int v62 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    LODWORD(v45) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_114;
                  }
                  unint64_t v63 = v41++;
                  char v64 = *(unsigned char *)(v42 + v63);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v64 & 0x7F) << v61;
                  if ((v64 & 0x80) == 0) {
                    break;
                  }
                  v61 += 7;
                  BOOL v14 = v62++ > 8;
                  if (v14)
                  {
                    LODWORD(v45) = 0;
LABEL_113:
                    unint64_t v2 = v63 + 1;
                    goto LABEL_114;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v45) = 0;
                }
                goto LABEL_113;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_114;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              LODWORD(v45) = 0;
LABEL_114:
              *(_DWORD *)(a1 + 16) = v45;
              goto LABEL_120;
            case 0x16u:
              *(_WORD *)(a1 + 36) |= 4u;
              unint64_t v47 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v48 = *(void *)this;
              if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
              {
                char v65 = 0;
                unsigned int v66 = 0;
                uint64_t v51 = 0;
                if (v2 <= v47) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v47)
                  {
                    LODWORD(v51) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_119;
                  }
                  unint64_t v67 = v47++;
                  char v68 = *(unsigned char *)(v48 + v67);
                  *((void *)this + 1) = v47;
                  v51 |= (unint64_t)(v68 & 0x7F) << v65;
                  if ((v68 & 0x80) == 0) {
                    break;
                  }
                  v65 += 7;
                  BOOL v14 = v66++ > 8;
                  if (v14)
                  {
                    LODWORD(v51) = 0;
LABEL_118:
                    unint64_t v2 = v67 + 1;
                    goto LABEL_119;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v51) = 0;
                }
                goto LABEL_118;
              }
              char v49 = 0;
              unsigned int v50 = 0;
              uint64_t v51 = 0;
              do
              {
                unint64_t v2 = v47 + 1;
                *((void *)this + 1) = v47 + 1;
                char v52 = *(unsigned char *)(v48 + v47);
                v51 |= (unint64_t)(v52 & 0x7F) << v49;
                if ((v52 & 0x80) == 0) {
                  goto LABEL_119;
                }
                v49 += 7;
                unint64_t v47 = v2;
                BOOL v14 = v50++ > 8;
              }
              while (!v14);
              LODWORD(v51) = 0;
LABEL_119:
              *(_DWORD *)(a1 + 20) = v51;
LABEL_120:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_120;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_1017705CC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 36);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    __int16 v4 = *(_WORD *)(v3 + 36);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 28), 2u);
  __int16 v4 = *(_WORD *)(v3 + 36);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 24), 3u);
  __int16 v4 = *(_WORD *)(v3 + 36);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 34), 0xAu);
  __int16 v4 = *(_WORD *)(v3 + 36);
  if ((v4 & 0x100) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 35), 0xBu);
  __int16 v4 = *(_WORD *)(v3 + 36);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 32), 0xCu);
  __int16 v4 = *(_WORD *)(v3 + 36);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 2) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 16), 0x15u);
    if ((*(_WORD *)(v3 + 36) & 4) == 0) {
      return result;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 33), 0xDu);
  __int16 v4 = *(_WORD *)(v3 + 36);
  if ((v4 & 2) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_19:
  int v5 = *(_DWORD *)(v3 + 20);

  return PB::Writer::writeVarInt(this, v5, 0x16u);
}

void *sub_101770700(void *result)
{
  *uint64_t result = &off_10233A030;
  result[1] = 0;
  result[3] = 0;
  return result;
}

void sub_101770724(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_10233A030;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_1017707A4(PB::Base *a1)
{
  sub_101770724(a1);

  operator delete();
}

uint64_t sub_1017707DC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_10233A030;
  *(void *)(result + 8) = 0;
  *(void *)(result + 24) = 0;
  if ((*(unsigned char *)(a2 + 28) & 2) != 0)
  {
    int v3 = *(_DWORD *)(a2 + 24);
    *(unsigned char *)(result + 28) = 2;
    *(_DWORD *)(result + 24) = v3;
    char v2 = 3;
    if ((*(unsigned char *)(a2 + 28) & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v2 = 1;
  if (*(unsigned char *)(a2 + 28))
  {
LABEL_5:
    uint64_t v4 = *(void *)(a2 + 16);
    *(unsigned char *)(result + 28) = v2;
    *(void *)(result + 16) = v4;
  }
LABEL_6:
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017708C8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "impulse");
  }
  char v6 = *(unsigned char *)(a1 + 28);
  if ((v6 & 2) != 0)
  {
    PB::TextFormatter::format(this, "state", *(_DWORD *)(a1 + 24));
    char v6 = *(unsigned char *)(a1 + 28);
  }
  if (v6) {
    PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 16));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10177097C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3) {
        operator new();
      }
      if (v20 == 2)
      {
        *(unsigned char *)(a1 + 28) |= 1u;
        unint64_t v29 = *((void *)this + 1);
        if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v29);
          *((void *)this + 1) += 8;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 28) |= 2u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        uint64_t v23 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v22)
        {
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v26 = 0;
          if (v22 <= v21) {
            unint64_t v22 = *((void *)this + 1);
          }
          while (1)
          {
            if (v22 == v21)
            {
              LODWORD(v26) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_48;
            }
            unint64_t v33 = v21 + 1;
            char v34 = *(unsigned char *)(v23 + v21);
            *((void *)this + 1) = v33;
            v26 |= (unint64_t)(v34 & 0x7F) << v31;
            if ((v34 & 0x80) == 0) {
              break;
            }
            v31 += 7;
            unint64_t v21 = v33;
            BOOL v14 = v32++ > 8;
            if (v14)
            {
LABEL_43:
              LODWORD(v26) = 0;
              goto LABEL_48;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v26) = 0;
          }
        }
        else
        {
          char v24 = 0;
          unsigned int v25 = 0;
          uint64_t v26 = 0;
          while (1)
          {
            unint64_t v27 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v28 = *(unsigned char *)(v23 + v21);
            v26 |= (unint64_t)(v28 & 0x7F) << v24;
            if ((v28 & 0x80) == 0) {
              break;
            }
            v24 += 7;
            unint64_t v21 = v27;
            BOOL v14 = v25++ > 8;
            if (v14) {
              goto LABEL_43;
            }
          }
        }
LABEL_48:
        *(_DWORD *)(a1 + 24) = v26;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101770CD8(uint64_t result)
{
  *(void *)uint64_t result = &off_10233A6F8;
  *(_DWORD *)(result + 20) = 0;
  return result;
}

uint64_t sub_101770CFC(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 28);
  if ((v4 & 2) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 24), 1u);
    char v4 = *(unsigned char *)(v3 + 28);
  }
  if (v4) {
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 2u);
  }
  uint64_t v5 = *(const PB::Base **)(v3 + 8);
  if (v5)
  {
    return PB::Writer::writeSubmessage(this, v5, 3u);
  }
  return result;
}

uint64_t sub_101770D7C(uint64_t result)
{
  *(void *)uint64_t result = &off_10233A068;
  *(void *)(result + 112) = 0;
  *(_DWORD *)(result + 180) = 0;
  return result;
}

void sub_101770DA4(PB::Base *this)
{
  *(void *)this = &off_10233A068;
  uint64_t v2 = *((void *)this + 14);
  *((void *)this + 14) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_101770E28(PB::Base *a1)
{
  sub_101770DA4(a1);

  operator delete();
}

uint64_t sub_101770E60(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_10233A068;
  *(void *)(result + 112) = 0;
  *(_DWORD *)(result + 180) = 0;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x800) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 96);
    int v3 = 2048;
    *(_DWORD *)(result + 180) = 2048;
    *(void *)(result + 96) = v4;
    int v2 = *(_DWORD *)(a2 + 180);
    if ((v2 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x40) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 56);
    v3 |= 0x40u;
    *(_DWORD *)(result + 180) = v3;
    *(void *)(result + 56) = v5;
    int v2 = *(_DWORD *)(a2 + 180);
  }
LABEL_6:
  if ((v2 & 0x80) != 0)
  {
    uint64_t v10 = *(void *)(a2 + 64);
    v3 |= 0x80u;
    *(_DWORD *)(result + 180) = v3;
    *(void *)(result + 64) = v10;
    int v2 = *(_DWORD *)(a2 + 180);
    if ((v2 & 0x200) == 0)
    {
LABEL_8:
      if ((v2 & 0x400) == 0) {
        goto LABEL_9;
      }
      goto LABEL_39;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(a2 + 80);
  v3 |= 0x200u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 80) = v11;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x400) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v12 = *(void *)(a2 + 88);
  v3 |= 0x400u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 88) = v12;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v13 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 48) = v13;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 2) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t v14 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 16) = v14;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t v15 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 24) = v15;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 1) == 0)
  {
LABEL_13:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v16 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 8) = v16;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x2000) == 0)
  {
LABEL_14:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v17 = *(void *)(a2 + 120);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 120) = v17;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x800000) == 0)
  {
LABEL_15:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v18 = *(_DWORD *)(a2 + 164);
  v3 |= 0x800000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 164) = v18;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x1000) == 0)
  {
LABEL_16:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v19 = *(void *)(a2 + 104);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 104) = v19;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_48;
  }
LABEL_47:
  int v20 = *(_DWORD *)(a2 + 168);
  v3 |= 0x1000000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 168) = v20;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v21 = *(_DWORD *)(a2 + 172);
  v3 |= 0x2000000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 172) = v21;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x20000) == 0)
  {
LABEL_19:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v22 = *(_DWORD *)(a2 + 140);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 140) = v22;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x80000) == 0)
  {
LABEL_20:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v23 = *(_DWORD *)(a2 + 148);
  v3 |= 0x80000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 148) = v23;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x40000) == 0)
  {
LABEL_21:
    if ((v2 & 0x100) == 0) {
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v24 = *(_DWORD *)(a2 + 144);
  v3 |= 0x40000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 144) = v24;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x100) == 0)
  {
LABEL_22:
    if ((v2 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v25 = *(void *)(a2 + 72);
  v3 |= 0x100u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 72) = v25;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 8) == 0)
  {
LABEL_23:
    if ((v2 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v26 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 32) = v26;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x10) == 0)
  {
LABEL_24:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v27 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(result + 180) = v3;
  *(void *)(result + 40) = v27;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x200000) == 0)
  {
LABEL_25:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v28 = *(_DWORD *)(a2 + 156);
  v3 |= 0x200000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 156) = v28;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_26:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_57;
  }
LABEL_56:
  v3 |= 0x4000000u;
  *(_DWORD *)(result + 176) = *(_DWORD *)(a2 + 176);
  *(_DWORD *)(result + 180) = v3;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x400000) == 0)
  {
LABEL_27:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v29 = *(_DWORD *)(a2 + 160);
  v3 |= 0x400000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 160) = v29;
  int v2 = *(_DWORD *)(a2 + 180);
  if ((v2 & 0x10000) == 0)
  {
LABEL_28:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
LABEL_58:
  int v30 = *(_DWORD *)(a2 + 136);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 180) = v3;
  *(_DWORD *)(result + 136) = v30;
  if ((*(_DWORD *)(a2 + 180) & 0x100000) != 0)
  {
LABEL_29:
    int v6 = *(_DWORD *)(a2 + 152);
    *(_DWORD *)(result + 180) = v3 | 0x100000;
    *(_DWORD *)(result + 152) = v6;
  }
LABEL_30:
  if (*(void *)(a2 + 112)) {
    operator new();
  }
  int v7 = *(_DWORD *)(a2 + 180);
  if ((v7 & 0x8000) != 0)
  {
    int v8 = *(_DWORD *)(a2 + 132);
    *(_DWORD *)(result + 180) |= 0x8000u;
    *(_DWORD *)(result + 132) = v8;
    int v7 = *(_DWORD *)(a2 + 180);
  }
  if ((v7 & 0x4000) != 0)
  {
    int v9 = *(_DWORD *)(a2 + 128);
    *(_DWORD *)(result + 180) |= 0x4000u;
    *(_DWORD *)(result + 128) = v9;
  }
  return result;
}

uint64_t sub_101771204(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 180);
  if (v5)
  {
    PB::TextFormatter::format(this, "altitude", *(double *)(a1 + 8));
    int v5 = *(_DWORD *)(a1 + 180);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_37;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "course", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(this, "courseAccuracy", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(this, "deltaDistance", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "deltaDistanceAccuracy", *(double *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x4000) == 0)
  {
LABEL_7:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "demConfidence", *(float *)(a1 + 128));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x8000) == 0)
  {
LABEL_8:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "demNumContiguousFlatPoints", *(_DWORD *)(a1 + 132));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x10000) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "gnssModesOfOperation", *(_DWORD *)(a1 + 136));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "horizontalAccuracy", *(double *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x20000) == 0)
  {
LABEL_11:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "horzUncSemiMaj", *(float *)(a1 + 140));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x40000) == 0)
  {
LABEL_12:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "horzUncSemiMajAz", *(float *)(a1 + 144));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x80000) == 0)
  {
LABEL_13:
    if ((v5 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "horzUncSemiMin", *(float *)(a1 + 148));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x40) == 0)
  {
LABEL_14:
    if ((v5 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "latitude", *(double *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x80) == 0)
  {
LABEL_15:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "longitude", *(double *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x100000) == 0)
  {
LABEL_16:
    if ((v5 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "notificationType", *(_DWORD *)(a1 + 152));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x100) == 0)
  {
LABEL_17:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "odometer", *(double *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x200000) == 0)
  {
LABEL_18:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "originDevice", *(_DWORD *)(a1 + 156));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x400000) == 0)
  {
LABEL_19:
    if ((v5 & 0x200) == 0) {
      goto LABEL_20;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "roadClass", *(_DWORD *)(a1 + 160));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x200) == 0)
  {
LABEL_20:
    if ((v5 & 0x400) == 0) {
      goto LABEL_21;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "speed", *(double *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x400) == 0)
  {
LABEL_21:
    if ((v5 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "speedAccuracy", *(double *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 180);
  if ((v5 & 0x800) == 0)
  {
LABEL_22:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
LABEL_55:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 96));
  if ((*(_DWORD *)(a1 + 180) & 0x1000) != 0) {
LABEL_23:
  }
    PB::TextFormatter::format(this, "timestampGps", *(double *)(a1 + 104));
LABEL_24:
  uint64_t v6 = *(void *)(a1 + 112);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "trackRunData");
  }
  int v7 = *(_DWORD *)(a1 + 180);
  if ((v7 & 0x800000) != 0)
  {
    PB::TextFormatter::format(this, "type", *(_DWORD *)(a1 + 164));
    int v7 = *(_DWORD *)(a1 + 180);
    if ((v7 & 0x1000000) == 0)
    {
LABEL_28:
      if ((v7 & 0x2000000) == 0) {
        goto LABEL_29;
      }
      goto LABEL_59;
    }
  }
  else if ((v7 & 0x1000000) == 0)
  {
    goto LABEL_28;
  }
  PB::TextFormatter::format(this, "undulation", *(float *)(a1 + 168));
  int v7 = *(_DWORD *)(a1 + 180);
  if ((v7 & 0x2000000) == 0)
  {
LABEL_29:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "undulationModel", *(_DWORD *)(a1 + 172));
  int v7 = *(_DWORD *)(a1 + 180);
  if ((v7 & 0x2000) == 0)
  {
LABEL_30:
    if ((v7 & 0x4000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
LABEL_60:
  PB::TextFormatter::format(this, "verticalAccuracy", *(double *)(a1 + 120));
  if ((*(_DWORD *)(a1 + 180) & 0x4000000) != 0) {
LABEL_31:
  }
    PB::TextFormatter::format(this, "wayForm", *(_DWORD *)(a1 + 176));
LABEL_32:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1017715E0(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(_DWORD *)(a1 + 180) |= 0x800u;
          unint64_t v20 = *((void *)this + 1);
          if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 96) = *(void *)(*(void *)this + v20);
          goto LABEL_92;
        case 2u:
          *(_DWORD *)(a1 + 180) |= 0x40u;
          unint64_t v22 = *((void *)this + 1);
          if (v22 > 0xFFFFFFFFFFFFFFF7 || v22 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v22);
          goto LABEL_92;
        case 3u:
          *(_DWORD *)(a1 + 180) |= 0x80u;
          unint64_t v23 = *((void *)this + 1);
          if (v23 > 0xFFFFFFFFFFFFFFF7 || v23 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 64) = *(void *)(*(void *)this + v23);
          goto LABEL_92;
        case 4u:
          *(_DWORD *)(a1 + 180) |= 0x200u;
          unint64_t v24 = *((void *)this + 1);
          if (v24 > 0xFFFFFFFFFFFFFFF7 || v24 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 80) = *(void *)(*(void *)this + v24);
          goto LABEL_92;
        case 5u:
          *(_DWORD *)(a1 + 180) |= 0x400u;
          unint64_t v25 = *((void *)this + 1);
          if (v25 > 0xFFFFFFFFFFFFFFF7 || v25 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 88) = *(void *)(*(void *)this + v25);
          goto LABEL_92;
        case 6u:
          *(_DWORD *)(a1 + 180) |= 0x20u;
          unint64_t v26 = *((void *)this + 1);
          if (v26 > 0xFFFFFFFFFFFFFFF7 || v26 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 48) = *(void *)(*(void *)this + v26);
          goto LABEL_92;
        case 7u:
          *(_DWORD *)(a1 + 180) |= 2u;
          unint64_t v27 = *((void *)this + 1);
          if (v27 > 0xFFFFFFFFFFFFFFF7 || v27 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 16) = *(void *)(*(void *)this + v27);
          goto LABEL_92;
        case 8u:
          *(_DWORD *)(a1 + 180) |= 4u;
          unint64_t v28 = *((void *)this + 1);
          if (v28 > 0xFFFFFFFFFFFFFFF7 || v28 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 24) = *(void *)(*(void *)this + v28);
          goto LABEL_92;
        case 9u:
          *(_DWORD *)(a1 + 180) |= 1u;
          unint64_t v29 = *((void *)this + 1);
          if (v29 > 0xFFFFFFFFFFFFFFF7 || v29 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v29);
          goto LABEL_92;
        case 0xAu:
          *(_DWORD *)(a1 + 180) |= 0x2000u;
          unint64_t v30 = *((void *)this + 1);
          if (v30 > 0xFFFFFFFFFFFFFFF7 || v30 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 120) = *(void *)(*(void *)this + v30);
          goto LABEL_92;
        case 0xBu:
          *(_DWORD *)(a1 + 180) |= 0x800000u;
          unint64_t v31 = *((void *)this + 1);
          unint64_t v32 = *((void *)this + 2);
          uint64_t v33 = *(void *)this;
          if (v31 <= 0xFFFFFFFFFFFFFFF5 && v31 + 10 <= v32)
          {
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            do
            {
              unint64_t v37 = v31 + 1;
              *((void *)this + 1) = v31 + 1;
              char v38 = *(unsigned char *)(v33 + v31);
              v36 |= (unint64_t)(v38 & 0x7F) << v34;
              if ((v38 & 0x80) == 0) {
                goto LABEL_213;
              }
              v34 += 7;
              unint64_t v31 = v37;
              BOOL v14 = v35++ > 8;
            }
            while (!v14);
LABEL_145:
            LODWORD(v36) = 0;
            goto LABEL_213;
          }
          char v105 = 0;
          unsigned int v106 = 0;
          uint64_t v36 = 0;
          if (v32 <= v31) {
            unint64_t v32 = *((void *)this + 1);
          }
          while (2)
          {
            if (v32 == v31)
            {
              LODWORD(v36) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v107 = v31 + 1;
              char v108 = *(unsigned char *)(v33 + v31);
              *((void *)this + 1) = v107;
              v36 |= (unint64_t)(v108 & 0x7F) << v105;
              if (v108 < 0)
              {
                v105 += 7;
                unint64_t v31 = v107;
                BOOL v14 = v106++ > 8;
                if (v14) {
                  goto LABEL_145;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v36) = 0;
              }
            }
            break;
          }
LABEL_213:
          *(_DWORD *)(a1 + 164) = v36;
          goto LABEL_198;
        case 0xCu:
          *(_DWORD *)(a1 + 180) |= 0x1000u;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 104) = *(void *)(*(void *)this + v39);
          goto LABEL_92;
        case 0xDu:
          *(_DWORD *)(a1 + 180) |= 0x1000000u;
          unint64_t v40 = *((void *)this + 1);
          if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v40);
          goto LABEL_196;
        case 0xEu:
          *(_DWORD *)(a1 + 180) |= 0x2000000u;
          unint64_t v41 = *((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
          uint64_t v43 = *(void *)this;
          if (v41 <= 0xFFFFFFFFFFFFFFF5 && v41 + 10 <= v42)
          {
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            do
            {
              unint64_t v47 = v41 + 1;
              *((void *)this + 1) = v41 + 1;
              char v48 = *(unsigned char *)(v43 + v41);
              v46 |= (unint64_t)(v48 & 0x7F) << v44;
              if ((v48 & 0x80) == 0) {
                goto LABEL_216;
              }
              v44 += 7;
              unint64_t v41 = v47;
              BOOL v14 = v45++ > 8;
            }
            while (!v14);
LABEL_152:
            LODWORD(v46) = 0;
            goto LABEL_216;
          }
          char v109 = 0;
          unsigned int v110 = 0;
          uint64_t v46 = 0;
          if (v42 <= v41) {
            unint64_t v42 = *((void *)this + 1);
          }
          while (2)
          {
            if (v42 == v41)
            {
              LODWORD(v46) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v111 = v41 + 1;
              char v112 = *(unsigned char *)(v43 + v41);
              *((void *)this + 1) = v111;
              v46 |= (unint64_t)(v112 & 0x7F) << v109;
              if (v112 < 0)
              {
                v109 += 7;
                unint64_t v41 = v111;
                BOOL v14 = v110++ > 8;
                if (v14) {
                  goto LABEL_152;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v46) = 0;
              }
            }
            break;
          }
LABEL_216:
          *(_DWORD *)(a1 + 172) = v46;
          goto LABEL_198;
        case 0xFu:
          *(_DWORD *)(a1 + 180) |= 0x20000u;
          unint64_t v49 = *((void *)this + 1);
          if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v49);
          goto LABEL_196;
        case 0x10u:
          *(_DWORD *)(a1 + 180) |= 0x80000u;
          unint64_t v50 = *((void *)this + 1);
          if (v50 > 0xFFFFFFFFFFFFFFFBLL || v50 + 4 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(_DWORD *)(a1 + 148) = *(_DWORD *)(*(void *)this + v50);
          goto LABEL_196;
        case 0x11u:
          *(_DWORD *)(a1 + 180) |= 0x40000u;
          unint64_t v51 = *((void *)this + 1);
          if (v51 > 0xFFFFFFFFFFFFFFFBLL || v51 + 4 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(_DWORD *)(a1 + 144) = *(_DWORD *)(*(void *)this + v51);
          goto LABEL_196;
        case 0x12u:
          *(_DWORD *)(a1 + 180) |= 0x100u;
          unint64_t v52 = *((void *)this + 1);
          if (v52 > 0xFFFFFFFFFFFFFFF7 || v52 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 72) = *(void *)(*(void *)this + v52);
          goto LABEL_92;
        case 0x13u:
          *(_DWORD *)(a1 + 180) |= 8u;
          unint64_t v53 = *((void *)this + 1);
          if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 32) = *(void *)(*(void *)this + v53);
          goto LABEL_92;
        case 0x14u:
          *(_DWORD *)(a1 + 180) |= 0x10u;
          unint64_t v54 = *((void *)this + 1);
          if (v54 > 0xFFFFFFFFFFFFFFF7 || v54 + 8 > *((void *)this + 2)) {
            goto LABEL_138;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v54);
LABEL_92:
          uint64_t v55 = *((void *)this + 1) + 8;
          goto LABEL_197;
        case 0x15u:
          *(_DWORD *)(a1 + 180) |= 0x200000u;
          unint64_t v56 = *((void *)this + 1);
          unint64_t v57 = *((void *)this + 2);
          uint64_t v58 = *(void *)this;
          if (v56 <= 0xFFFFFFFFFFFFFFF5 && v56 + 10 <= v57)
          {
            char v59 = 0;
            unsigned int v60 = 0;
            uint64_t v61 = 0;
            do
            {
              unint64_t v62 = v56 + 1;
              *((void *)this + 1) = v56 + 1;
              char v63 = *(unsigned char *)(v58 + v56);
              v61 |= (unint64_t)(v63 & 0x7F) << v59;
              if ((v63 & 0x80) == 0) {
                goto LABEL_219;
              }
              v59 += 7;
              unint64_t v56 = v62;
              BOOL v14 = v60++ > 8;
            }
            while (!v14);
LABEL_159:
            LODWORD(v61) = 0;
            goto LABEL_219;
          }
          char v113 = 0;
          unsigned int v114 = 0;
          uint64_t v61 = 0;
          if (v57 <= v56) {
            unint64_t v57 = *((void *)this + 1);
          }
          while (2)
          {
            if (v57 == v56)
            {
              LODWORD(v61) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v115 = v56 + 1;
              char v116 = *(unsigned char *)(v58 + v56);
              *((void *)this + 1) = v115;
              v61 |= (unint64_t)(v116 & 0x7F) << v113;
              if (v116 < 0)
              {
                v113 += 7;
                unint64_t v56 = v115;
                BOOL v14 = v114++ > 8;
                if (v14) {
                  goto LABEL_159;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v61) = 0;
              }
            }
            break;
          }
LABEL_219:
          *(_DWORD *)(a1 + 156) = v61;
          goto LABEL_198;
        case 0x16u:
          *(_DWORD *)(a1 + 180) |= 0x4000000u;
          unint64_t v64 = *((void *)this + 1);
          unint64_t v65 = *((void *)this + 2);
          uint64_t v66 = *(void *)this;
          if (v64 <= 0xFFFFFFFFFFFFFFF5 && v64 + 10 <= v65)
          {
            char v67 = 0;
            unsigned int v68 = 0;
            uint64_t v69 = 0;
            do
            {
              unint64_t v70 = v64 + 1;
              *((void *)this + 1) = v64 + 1;
              char v71 = *(unsigned char *)(v66 + v64);
              v69 |= (unint64_t)(v71 & 0x7F) << v67;
              if ((v71 & 0x80) == 0) {
                goto LABEL_222;
              }
              v67 += 7;
              unint64_t v64 = v70;
              BOOL v14 = v68++ > 8;
            }
            while (!v14);
LABEL_166:
            LODWORD(v69) = 0;
            goto LABEL_222;
          }
          char v117 = 0;
          unsigned int v118 = 0;
          uint64_t v69 = 0;
          if (v65 <= v64) {
            unint64_t v65 = *((void *)this + 1);
          }
          while (2)
          {
            if (v65 == v64)
            {
              LODWORD(v69) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v119 = v64 + 1;
              char v120 = *(unsigned char *)(v66 + v64);
              *((void *)this + 1) = v119;
              v69 |= (unint64_t)(v120 & 0x7F) << v117;
              if (v120 < 0)
              {
                v117 += 7;
                unint64_t v64 = v119;
                BOOL v14 = v118++ > 8;
                if (v14) {
                  goto LABEL_166;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v69) = 0;
              }
            }
            break;
          }
LABEL_222:
          *(_DWORD *)(a1 + 176) = v69;
          goto LABEL_198;
        case 0x17u:
          *(_DWORD *)(a1 + 180) |= 0x400000u;
          unint64_t v72 = *((void *)this + 1);
          unint64_t v73 = *((void *)this + 2);
          uint64_t v74 = *(void *)this;
          if (v72 <= 0xFFFFFFFFFFFFFFF5 && v72 + 10 <= v73)
          {
            char v75 = 0;
            unsigned int v76 = 0;
            uint64_t v77 = 0;
            do
            {
              unint64_t v78 = v72 + 1;
              *((void *)this + 1) = v72 + 1;
              char v79 = *(unsigned char *)(v74 + v72);
              v77 |= (unint64_t)(v79 & 0x7F) << v75;
              if ((v79 & 0x80) == 0) {
                goto LABEL_225;
              }
              v75 += 7;
              unint64_t v72 = v78;
              BOOL v14 = v76++ > 8;
            }
            while (!v14);
LABEL_173:
            LODWORD(v77) = 0;
            goto LABEL_225;
          }
          char v121 = 0;
          unsigned int v122 = 0;
          uint64_t v77 = 0;
          if (v73 <= v72) {
            unint64_t v73 = *((void *)this + 1);
          }
          while (2)
          {
            if (v73 == v72)
            {
              LODWORD(v77) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v123 = v72 + 1;
              char v124 = *(unsigned char *)(v74 + v72);
              *((void *)this + 1) = v123;
              v77 |= (unint64_t)(v124 & 0x7F) << v121;
              if (v124 < 0)
              {
                v121 += 7;
                unint64_t v72 = v123;
                BOOL v14 = v122++ > 8;
                if (v14) {
                  goto LABEL_173;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v77) = 0;
              }
            }
            break;
          }
LABEL_225:
          *(_DWORD *)(a1 + 160) = v77;
          goto LABEL_198;
        case 0x18u:
          *(_DWORD *)(a1 + 180) |= 0x10000u;
          unint64_t v80 = *((void *)this + 1);
          unint64_t v81 = *((void *)this + 2);
          uint64_t v82 = *(void *)this;
          if (v80 <= 0xFFFFFFFFFFFFFFF5 && v80 + 10 <= v81)
          {
            char v83 = 0;
            unsigned int v84 = 0;
            uint64_t v85 = 0;
            do
            {
              unint64_t v86 = v80 + 1;
              *((void *)this + 1) = v80 + 1;
              char v87 = *(unsigned char *)(v82 + v80);
              v85 |= (unint64_t)(v87 & 0x7F) << v83;
              if ((v87 & 0x80) == 0) {
                goto LABEL_228;
              }
              v83 += 7;
              unint64_t v80 = v86;
              BOOL v14 = v84++ > 8;
            }
            while (!v14);
LABEL_180:
            LODWORD(v85) = 0;
            goto LABEL_228;
          }
          char v125 = 0;
          unsigned int v126 = 0;
          uint64_t v85 = 0;
          if (v81 <= v80) {
            unint64_t v81 = *((void *)this + 1);
          }
          while (2)
          {
            if (v81 == v80)
            {
              LODWORD(v85) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v127 = v80 + 1;
              char v128 = *(unsigned char *)(v82 + v80);
              *((void *)this + 1) = v127;
              v85 |= (unint64_t)(v128 & 0x7F) << v125;
              if (v128 < 0)
              {
                v125 += 7;
                unint64_t v80 = v127;
                BOOL v14 = v126++ > 8;
                if (v14) {
                  goto LABEL_180;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v85) = 0;
              }
            }
            break;
          }
LABEL_228:
          *(_DWORD *)(a1 + 136) = v85;
          goto LABEL_198;
        case 0x19u:
          *(_DWORD *)(a1 + 180) |= 0x100000u;
          unint64_t v88 = *((void *)this + 1);
          unint64_t v89 = *((void *)this + 2);
          uint64_t v90 = *(void *)this;
          if (v88 <= 0xFFFFFFFFFFFFFFF5 && v88 + 10 <= v89)
          {
            char v91 = 0;
            unsigned int v92 = 0;
            uint64_t v93 = 0;
            do
            {
              unint64_t v94 = v88 + 1;
              *((void *)this + 1) = v88 + 1;
              char v95 = *(unsigned char *)(v90 + v88);
              v93 |= (unint64_t)(v95 & 0x7F) << v91;
              if ((v95 & 0x80) == 0) {
                goto LABEL_231;
              }
              v91 += 7;
              unint64_t v88 = v94;
              BOOL v14 = v92++ > 8;
            }
            while (!v14);
LABEL_187:
            LODWORD(v93) = 0;
            goto LABEL_231;
          }
          char v129 = 0;
          unsigned int v130 = 0;
          uint64_t v93 = 0;
          if (v89 <= v88) {
            unint64_t v89 = *((void *)this + 1);
          }
          while (2)
          {
            if (v89 == v88)
            {
              LODWORD(v93) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v131 = v88 + 1;
              char v132 = *(unsigned char *)(v90 + v88);
              *((void *)this + 1) = v131;
              v93 |= (unint64_t)(v132 & 0x7F) << v129;
              if (v132 < 0)
              {
                v129 += 7;
                unint64_t v88 = v131;
                BOOL v14 = v130++ > 8;
                if (v14) {
                  goto LABEL_187;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v93) = 0;
              }
            }
            break;
          }
LABEL_231:
          *(_DWORD *)(a1 + 152) = v93;
          goto LABEL_198;
        case 0x1Au:
          operator new();
        case 0x1Bu:
          *(_DWORD *)(a1 + 180) |= 0x8000u;
          unint64_t v96 = *((void *)this + 1);
          unint64_t v97 = *((void *)this + 2);
          uint64_t v98 = *(void *)this;
          if (v96 <= 0xFFFFFFFFFFFFFFF5 && v96 + 10 <= v97)
          {
            char v99 = 0;
            unsigned int v100 = 0;
            uint64_t v101 = 0;
            do
            {
              unint64_t v102 = v96 + 1;
              *((void *)this + 1) = v96 + 1;
              char v103 = *(unsigned char *)(v98 + v96);
              v101 |= (unint64_t)(v103 & 0x7F) << v99;
              if ((v103 & 0x80) == 0) {
                goto LABEL_234;
              }
              v99 += 7;
              unint64_t v96 = v102;
              BOOL v14 = v100++ > 8;
            }
            while (!v14);
LABEL_194:
            LODWORD(v101) = 0;
            goto LABEL_234;
          }
          char v133 = 0;
          unsigned int v134 = 0;
          uint64_t v101 = 0;
          if (v97 <= v96) {
            unint64_t v97 = *((void *)this + 1);
          }
          break;
        case 0x1Cu:
          *(_DWORD *)(a1 + 180) |= 0x4000u;
          unint64_t v104 = *((void *)this + 1);
          if (v104 <= 0xFFFFFFFFFFFFFFFBLL && v104 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v104);
LABEL_196:
            uint64_t v55 = *((void *)this + 1) + 4;
LABEL_197:
            *((void *)this + 1) = v55;
          }
          else
          {
LABEL_138:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_198;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_198;
      }
      while (1)
      {
        if (v97 == v96)
        {
          LODWORD(v101) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_234;
        }
        unint64_t v135 = v96 + 1;
        char v136 = *(unsigned char *)(v98 + v96);
        *((void *)this + 1) = v135;
        v101 |= (unint64_t)(v136 & 0x7F) << v133;
        if ((v136 & 0x80) == 0) {
          break;
        }
        v133 += 7;
        unint64_t v96 = v135;
        BOOL v14 = v134++ > 8;
        if (v14) {
          goto LABEL_194;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v101) = 0;
      }
LABEL_234:
      *(_DWORD *)(a1 + 132) = v101;
LABEL_198:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_1017723F8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 180);
  if ((v4 & 0x800) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 96), 1u);
    int v4 = *(_DWORD *)(v3 + 180);
    if ((v4 & 0x40) == 0)
    {
LABEL_3:
      if ((v4 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_35;
    }
  }
  else if ((v4 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 2u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x80) == 0)
  {
LABEL_4:
    if ((v4 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 3u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x200) == 0)
  {
LABEL_5:
    if ((v4 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80), 4u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x400) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 88), 5u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 6u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 2) == 0)
  {
LABEL_8:
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 7u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 4) == 0)
  {
LABEL_9:
    if ((v4 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 8u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 1) == 0)
  {
LABEL_10:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 9u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x2000) == 0)
  {
LABEL_11:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 120), 0xAu);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x800000) == 0)
  {
LABEL_12:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 164), 0xBu);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x1000) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 104), 0xCu);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 168), 0xDu);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 172), 0xEu);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x20000) == 0)
  {
LABEL_16:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140), 0xFu);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x80000) == 0)
  {
LABEL_17:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 148), 0x10u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x40000) == 0)
  {
LABEL_18:
    if ((v4 & 0x100) == 0) {
      goto LABEL_19;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 144), 0x11u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x100) == 0)
  {
LABEL_19:
    if ((v4 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72), 0x12u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 8) == 0)
  {
LABEL_20:
    if ((v4 & 0x10) == 0) {
      goto LABEL_21;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 0x13u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x10) == 0)
  {
LABEL_21:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 0x14u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x200000) == 0)
  {
LABEL_22:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 156), 0x15u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 176), 0x16u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x400000) == 0)
  {
LABEL_24:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 160), 0x17u);
  int v4 = *(_DWORD *)(v3 + 180);
  if ((v4 & 0x10000) == 0)
  {
LABEL_25:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_56:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 136), 0x18u);
  if ((*(_DWORD *)(v3 + 180) & 0x100000) != 0) {
LABEL_26:
  }
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 152), 0x19u);
LABEL_27:
  int v5 = *(const PB::Base **)(v3 + 112);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5, 0x1Au);
  }
  int v6 = *(_DWORD *)(v3 + 180);
  if ((v6 & 0x8000) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 132), 0x1Bu);
    int v6 = *(_DWORD *)(v3 + 180);
  }
  if ((v6 & 0x4000) != 0)
  {
    float v7 = *(float *)(v3 + 128);
    return PB::Writer::write(this, v7, 0x1Cu);
  }
  return result;
}

uint64_t sub_101772734(uint64_t result)
{
  *(void *)uint64_t result = &off_10233A0A0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void sub_10177275C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101772794(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_10233A0A0;
  *(_DWORD *)(result + 24) = 0;
  char v2 = *(unsigned char *)(a2 + 24);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(result + 24) = 1;
    *(void *)(result + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 24);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 24) & 2) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 16);
    v3 |= 2u;
    *(unsigned char *)(result + 24) = v3;
    *(_DWORD *)(result + 16) = v5;
    char v2 = *(unsigned char *)(a2 + 24);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 20);
    *(unsigned char *)(result + 24) = v3 | 4;
    *(_DWORD *)(result + 20) = v6;
  }
  return result;
}

uint64_t sub_101772814(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 24);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "event", *(_DWORD *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 24);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  if ((*(unsigned char *)(a1 + 24) & 4) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(this, "value", *(_DWORD *)(a1 + 20));
LABEL_5:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_1017728B8(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v20 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 24) |= 4u;
        unint64_t v21 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v22 = *(void *)this;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_62;
            }
            unint64_t v36 = v21++;
            char v37 = *(unsigned char *)(v22 + v36);
            *((void *)this + 1) = v21;
            v25 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_61;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_61:
          unint64_t v2 = v36 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)this + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_62:
        *(_DWORD *)(a1 + 20) = v25;
      }
      else if (v20 == 2)
      {
        *(unsigned char *)(a1 + 24) |= 2u;
        unint64_t v27 = *((void *)this + 1);
        unint64_t v2 = *((void *)this + 2);
        uint64_t v28 = *(void *)this;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v2 = *((void *)this + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)this + 24) = 1;
              goto LABEL_67;
            }
            unint64_t v40 = v27++;
            char v41 = *(unsigned char *)(v28 + v40);
            *((void *)this + 1) = v27;
            v31 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              goto LABEL_66;
            }
          }
          if (*((unsigned char *)this + 24)) {
            LODWORD(v31) = 0;
          }
LABEL_66:
          unint64_t v2 = v40 + 1;
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v2 = v27 + 1;
            *((void *)this + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v27 = v2;
            BOOL v14 = v30++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
              break;
            }
          }
        }
LABEL_67:
        *(_DWORD *)(a1 + 16) = v31;
      }
      else if (v20 == 1)
      {
        *(unsigned char *)(a1 + 24) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
        {
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v20, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101772C3C(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 24);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(result + 24) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 16), 2u);
    if ((*(unsigned char *)(v3 + 24) & 4) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
  char v4 = *(unsigned char *)(v3 + 24);
  if ((v4 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 4) == 0) {
    return result;
  }
LABEL_7:
  unsigned int v5 = *(_DWORD *)(v3 + 20);

  return PB::Writer::writeVarInt(this, v5, 3u);
}

uint64_t sub_101772CC8(uint64_t result)
{
  *(void *)uint64_t result = &off_10233A0D8;
  *(_DWORD *)(result + 220) = 0;
  return result;
}

void sub_101772CF0(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101772D28(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_10233A0D8;
  *(_DWORD *)(result + 220) = 0;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x40000) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 152);
    int v3 = 0x40000;
    *(_DWORD *)(result + 220) = 0x40000;
    *(void *)(result + 152) = v4;
    int v2 = *(_DWORD *)(a2 + 220);
    if ((v2 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x100) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 72);
    v3 |= 0x100u;
    *(_DWORD *)(result + 220) = v3;
    *(void *)(result + 72) = v5;
    int v2 = *(_DWORD *)(a2 + 220);
  }
LABEL_6:
  if ((v2 & 0x200) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 80);
    v3 |= 0x200u;
    *(_DWORD *)(result + 220) = v3;
    *(void *)(result + 80) = v6;
    int v2 = *(_DWORD *)(a2 + 220);
    if ((v2 & 0x10000) == 0)
    {
LABEL_8:
      if ((v2 & 0x20000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_39;
    }
  }
  else if ((v2 & 0x10000) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 136);
  v3 |= 0x10000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 136) = v7;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x20000) == 0)
  {
LABEL_9:
    if ((v2 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v8 = *(void *)(a2 + 144);
  v3 |= 0x20000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 144) = v8;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x80) == 0)
  {
LABEL_10:
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v9 = *(void *)(a2 + 64);
  v3 |= 0x80u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 64) = v9;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 2) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t v10 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 16) = v10;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t v11 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 24) = v11;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 1) == 0)
  {
LABEL_13:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v12 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 8) = v12;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x100000) == 0)
  {
LABEL_14:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v13 = *(void *)(a2 + 168);
  v3 |= 0x100000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 168) = v13;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_15:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v14 = *(_DWORD *)(a2 + 204);
  v3 |= 0x10000000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 204) = v14;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x80000) == 0)
  {
LABEL_16:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v15 = *(void *)(a2 + 160);
  v3 |= 0x80000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 160) = v15;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_17:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_48;
  }
LABEL_47:
  int v16 = *(_DWORD *)(a2 + 208);
  v3 |= 0x20000000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 208) = v16;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v17 = *(_DWORD *)(a2 + 212);
  v3 |= 0x40000000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 212) = v17;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x200000) == 0)
  {
LABEL_19:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v18 = *(_DWORD *)(a2 + 176);
  v3 |= 0x200000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 176) = v18;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x800000) == 0)
  {
LABEL_20:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v19 = *(_DWORD *)(a2 + 184);
  v3 |= 0x800000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 184) = v19;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x400000) == 0)
  {
LABEL_21:
    if ((v2 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v20 = *(_DWORD *)(a2 + 180);
  v3 |= 0x400000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 180) = v20;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x800) == 0)
  {
LABEL_22:
    if ((v2 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v21 = *(void *)(a2 + 96);
  v3 |= 0x800u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 96) = v21;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 8) == 0)
  {
LABEL_23:
    if ((v2 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t v22 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 32) = v22;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x10) == 0)
  {
LABEL_24:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v23 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 40) = v23;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_25:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v24 = *(_DWORD *)(a2 + 192);
  v3 |= 0x2000000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 192) = v24;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_26:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_57;
  }
LABEL_56:
  int v25 = *(_DWORD *)(a2 + 200);
  v3 |= 0x8000000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 200) = v25;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_27:
    if ((v2 & 0x20) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v26 = *(_DWORD *)(a2 + 188);
  v3 |= 0x1000000u;
  *(_DWORD *)(result + 220) = v3;
  *(_DWORD *)(result + 188) = v26;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x20) == 0)
  {
LABEL_28:
    if ((v2 & 0x40) == 0) {
      goto LABEL_29;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t v27 = *(void *)(a2 + 48);
  v3 |= 0x20u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 48) = v27;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x40) == 0)
  {
LABEL_29:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t v28 = *(void *)(a2 + 56);
  v3 |= 0x40u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 56) = v28;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x8000) == 0)
  {
LABEL_30:
    if ((v2 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t v29 = *(void *)(a2 + 128);
  v3 |= 0x8000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 128) = v29;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x400) == 0)
  {
LABEL_31:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t v30 = *(void *)(a2 + 88);
  v3 |= 0x400u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 88) = v30;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_63;
  }
LABEL_62:
  char v31 = *(unsigned char *)(a2 + 216);
  v3 |= 0x80000000;
  *(_DWORD *)(result + 220) = v3;
  *(unsigned char *)(result + 216) = v31;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x1000) == 0)
  {
LABEL_33:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t v32 = *(void *)(a2 + 104);
  v3 |= 0x1000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 104) = v32;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x4000) == 0)
  {
LABEL_34:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t v33 = *(void *)(a2 + 120);
  v3 |= 0x4000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 120) = v33;
  int v2 = *(_DWORD *)(a2 + 220);
  if ((v2 & 0x2000) == 0)
  {
LABEL_35:
    if ((v2 & 0x4000000) == 0) {
      return result;
    }
LABEL_66:
    int v35 = *(_DWORD *)(a2 + 196);
    *(_DWORD *)(result + 220) = v3 | 0x4000000;
    *(_DWORD *)(result + 196) = v35;
    return result;
  }
LABEL_65:
  uint64_t v34 = *(void *)(a2 + 112);
  v3 |= 0x2000u;
  *(_DWORD *)(result + 220) = v3;
  *(void *)(result + 112) = v34;
  if ((*(_DWORD *)(a2 + 220) & 0x4000000) != 0) {
    goto LABEL_66;
  }
  return result;
}

uint64_t sub_1017730D4(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  int v5 = *(_DWORD *)(a1 + 220);
  if (v5)
  {
    PB::TextFormatter::format(this, "altitude", *(double *)(a1 + 8));
    int v5 = *(_DWORD *)(a1 + 220);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_39;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "course", *(double *)(a1 + 16));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(this, "courseAccuracy", *(double *)(a1 + 24));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(this, "deltaDistance", *(double *)(a1 + 32));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(this, "deltaDistanceAccuracy", *(double *)(a1 + 40));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(this, "groundAltitude", *(double *)(a1 + 48));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(this, "groundAltitudeUncertainty", *(double *)(a1 + 56));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(this, "horizontalAccuracy", *(double *)(a1 + 64));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x200000) == 0)
  {
LABEL_10:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(this, "horzUncSemiMaj", *(float *)(a1 + 176));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x400000) == 0)
  {
LABEL_11:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(this, "horzUncSemiMajAz", *(float *)(a1 + 180));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x800000) == 0)
  {
LABEL_12:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(this, "horzUncSemiMin", *(float *)(a1 + 184));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_13:
    if ((v5 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "isPrefilteredLocation", *(unsigned char *)(a1 + 216));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x100) == 0)
  {
LABEL_14:
    if ((v5 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "latitude", *(double *)(a1 + 72));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x200) == 0)
  {
LABEL_15:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "longitude", *(double *)(a1 + 80));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "matchQuality", *(_DWORD *)(a1 + 188));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "maxAbsSlope", *(double *)(a1 + 88));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "odometer", *(double *)(a1 + 96));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "originDevice", *(_DWORD *)(a1 + 192));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x1000) == 0)
  {
LABEL_20:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "rawAltitude", *(double *)(a1 + 104));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x2000) == 0)
  {
LABEL_21:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "rawUndulation", *(double *)(a1 + 112));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "rawUndulationModel", *(_DWORD *)(a1 + 196));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x4000) == 0)
  {
LABEL_23:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "rawVerticalAccuracy", *(double *)(a1 + 120));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_24:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "signalEnvironment", *(_DWORD *)(a1 + 200));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x8000) == 0)
  {
LABEL_25:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "slope", *(double *)(a1 + 128));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x10000) == 0)
  {
LABEL_26:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "speed", *(double *)(a1 + 136));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x20000) == 0)
  {
LABEL_27:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "speedAccuracy", *(double *)(a1 + 144));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x40000) == 0)
  {
LABEL_28:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 152));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x80000) == 0)
  {
LABEL_29:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "timestampGps", *(double *)(a1 + 160));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "type", *(_DWORD *)(a1 + 204));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "undulation", *(float *)(a1 + 208));
  int v5 = *(_DWORD *)(a1 + 220);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
LABEL_67:
  PB::TextFormatter::format(this, "undulationModel", *(_DWORD *)(a1 + 212));
  if ((*(_DWORD *)(a1 + 220) & 0x100000) != 0) {
LABEL_33:
  }
    PB::TextFormatter::format(this, "verticalAccuracy", *(double *)(a1 + 168));
LABEL_34:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101773518(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_DWORD *)(a1 + 220) |= 0x40000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 152) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 2u:
              *(_DWORD *)(a1 + 220) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 3u:
              *(_DWORD *)(a1 + 220) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 80) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 4u:
              *(_DWORD *)(a1 + 220) |= 0x10000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 136) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 5u:
              *(_DWORD *)(a1 + 220) |= 0x20000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 144) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 6u:
              *(_DWORD *)(a1 + 220) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 7u:
              *(_DWORD *)(a1 + 220) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 8u:
              *(_DWORD *)(a1 + 220) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 9u:
              *(_DWORD *)(a1 + 220) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0xAu:
              *(_DWORD *)(a1 + 220) |= 0x100000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 168) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0xBu:
              *(_DWORD *)(a1 + 220) |= 0x10000000u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v59 = 0;
                unsigned int v60 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_200;
                  }
                  unint64_t v61 = v21++;
                  char v62 = *(unsigned char *)(v22 + v61);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v62 & 0x7F) << v59;
                  if ((v62 & 0x80) == 0) {
                    break;
                  }
                  v59 += 7;
                  BOOL v14 = v60++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_199:
                    unint64_t v2 = v61 + 1;
                    goto LABEL_200;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_199;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_200;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_200:
              *(_DWORD *)(a1 + 204) = v25;
              goto LABEL_191;
            case 0xCu:
              *(_DWORD *)(a1 + 220) |= 0x80000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 160) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0xDu:
              *(_DWORD *)(a1 + 220) |= 0x20000000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(_DWORD *)(a1 + 208) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_83;
            case 0xEu:
              *(_DWORD *)(a1 + 220) |= 0x40000000u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v63 = 0;
                unsigned int v64 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_205;
                  }
                  unint64_t v65 = v27++;
                  char v66 = *(unsigned char *)(v28 + v65);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v66 & 0x7F) << v63;
                  if ((v66 & 0x80) == 0) {
                    break;
                  }
                  v63 += 7;
                  BOOL v14 = v64++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_204:
                    unint64_t v2 = v65 + 1;
                    goto LABEL_205;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_204;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_205;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_205:
              *(_DWORD *)(a1 + 212) = v31;
              goto LABEL_191;
            case 0xFu:
              *(_DWORD *)(a1 + 220) |= 0x200000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(_DWORD *)(a1 + 176) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_83;
            case 0x10u:
              *(_DWORD *)(a1 + 220) |= 0x800000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(_DWORD *)(a1 + 184) = *(_DWORD *)(*(void *)this + v2);
              goto LABEL_83;
            case 0x11u:
              *(_DWORD *)(a1 + 220) |= 0x400000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(_DWORD *)(a1 + 180) = *(_DWORD *)(*(void *)this + v2);
LABEL_83:
              unint64_t v2 = *((void *)this + 1) + 4;
              goto LABEL_190;
            case 0x12u:
              *(_DWORD *)(a1 + 220) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 96) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x13u:
              *(_DWORD *)(a1 + 220) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x14u:
              *(_DWORD *)(a1 + 220) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x15u:
              *(_DWORD *)(a1 + 220) |= 0x2000000u;
              unint64_t v33 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v34 = *(void *)this;
              if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
              {
                char v67 = 0;
                unsigned int v68 = 0;
                uint64_t v37 = 0;
                if (v2 <= v33) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v33)
                  {
                    LODWORD(v37) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_210;
                  }
                  unint64_t v69 = v33++;
                  char v70 = *(unsigned char *)(v34 + v69);
                  *((void *)this + 1) = v33;
                  v37 |= (unint64_t)(v70 & 0x7F) << v67;
                  if ((v70 & 0x80) == 0) {
                    break;
                  }
                  v67 += 7;
                  BOOL v14 = v68++ > 8;
                  if (v14)
                  {
                    LODWORD(v37) = 0;
LABEL_209:
                    unint64_t v2 = v69 + 1;
                    goto LABEL_210;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v37) = 0;
                }
                goto LABEL_209;
              }
              char v35 = 0;
              unsigned int v36 = 0;
              uint64_t v37 = 0;
              do
              {
                unint64_t v2 = v33 + 1;
                *((void *)this + 1) = v33 + 1;
                char v38 = *(unsigned char *)(v34 + v33);
                v37 |= (unint64_t)(v38 & 0x7F) << v35;
                if ((v38 & 0x80) == 0) {
                  goto LABEL_210;
                }
                v35 += 7;
                unint64_t v33 = v2;
                BOOL v14 = v36++ > 8;
              }
              while (!v14);
              LODWORD(v37) = 0;
LABEL_210:
              *(_DWORD *)(a1 + 192) = v37;
              goto LABEL_191;
            case 0x16u:
              *(_DWORD *)(a1 + 220) |= 0x8000000u;
              unint64_t v39 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v40 = *(void *)this;
              if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
              {
                char v71 = 0;
                unsigned int v72 = 0;
                uint64_t v43 = 0;
                if (v2 <= v39) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v39)
                  {
                    LODWORD(v43) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_215;
                  }
                  unint64_t v73 = v39++;
                  char v74 = *(unsigned char *)(v40 + v73);
                  *((void *)this + 1) = v39;
                  v43 |= (unint64_t)(v74 & 0x7F) << v71;
                  if ((v74 & 0x80) == 0) {
                    break;
                  }
                  v71 += 7;
                  BOOL v14 = v72++ > 8;
                  if (v14)
                  {
                    LODWORD(v43) = 0;
LABEL_214:
                    unint64_t v2 = v73 + 1;
                    goto LABEL_215;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v43) = 0;
                }
                goto LABEL_214;
              }
              char v41 = 0;
              unsigned int v42 = 0;
              uint64_t v43 = 0;
              do
              {
                unint64_t v2 = v39 + 1;
                *((void *)this + 1) = v39 + 1;
                char v44 = *(unsigned char *)(v40 + v39);
                v43 |= (unint64_t)(v44 & 0x7F) << v41;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_215;
                }
                v41 += 7;
                unint64_t v39 = v2;
                BOOL v14 = v42++ > 8;
              }
              while (!v14);
              LODWORD(v43) = 0;
LABEL_215:
              *(_DWORD *)(a1 + 200) = v43;
              goto LABEL_191;
            case 0x17u:
              *(_DWORD *)(a1 + 220) |= 0x1000000u;
              unint64_t v45 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v46 = *(void *)this;
              if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
              {
                char v75 = 0;
                unsigned int v76 = 0;
                uint64_t v49 = 0;
                if (v2 <= v45) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v45)
                  {
                    LODWORD(v49) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_220;
                  }
                  unint64_t v77 = v45++;
                  char v78 = *(unsigned char *)(v46 + v77);
                  *((void *)this + 1) = v45;
                  v49 |= (unint64_t)(v78 & 0x7F) << v75;
                  if ((v78 & 0x80) == 0) {
                    break;
                  }
                  v75 += 7;
                  BOOL v14 = v76++ > 8;
                  if (v14)
                  {
                    LODWORD(v49) = 0;
LABEL_219:
                    unint64_t v2 = v77 + 1;
                    goto LABEL_220;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v49) = 0;
                }
                goto LABEL_219;
              }
              char v47 = 0;
              unsigned int v48 = 0;
              uint64_t v49 = 0;
              do
              {
                unint64_t v2 = v45 + 1;
                *((void *)this + 1) = v45 + 1;
                char v50 = *(unsigned char *)(v46 + v45);
                v49 |= (unint64_t)(v50 & 0x7F) << v47;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_220;
                }
                v47 += 7;
                unint64_t v45 = v2;
                BOOL v14 = v48++ > 8;
              }
              while (!v14);
              LODWORD(v49) = 0;
LABEL_220:
              *(_DWORD *)(a1 + 188) = v49;
              goto LABEL_191;
            case 0x18u:
              *(_DWORD *)(a1 + 220) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x19u:
              *(_DWORD *)(a1 + 220) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x1Au:
              *(_DWORD *)(a1 + 220) |= 0x8000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 128) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x1Bu:
              *(_DWORD *)(a1 + 220) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 88) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x1Cu:
              *(_DWORD *)(a1 + 220) |= 0x80000000;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v52 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v51 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v52 = v51 != 0;
              }
              *(unsigned char *)(a1 + 216) = v52;
              goto LABEL_191;
            case 0x1Du:
              *(_DWORD *)(a1 + 220) |= 0x1000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 104) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x1Eu:
              *(_DWORD *)(a1 + 220) |= 0x4000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_136;
              }
              *(void *)(a1 + 120) = *(void *)(*(void *)this + v2);
              goto LABEL_189;
            case 0x1Fu:
              *(_DWORD *)(a1 + 220) |= 0x2000u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 112) = *(void *)(*(void *)this + v2);
LABEL_189:
                unint64_t v2 = *((void *)this + 1) + 8;
LABEL_190:
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_136:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_191;
            case 0x20u:
              *(_DWORD *)(a1 + 220) |= 0x4000000u;
              unint64_t v53 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v54 = *(void *)this;
              if (v53 > 0xFFFFFFFFFFFFFFF5 || v53 + 10 > v2)
              {
                char v79 = 0;
                unsigned int v80 = 0;
                uint64_t v57 = 0;
                if (v2 <= v53) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v53)
                  {
                    LODWORD(v57) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_225;
                  }
                  unint64_t v81 = v53++;
                  char v82 = *(unsigned char *)(v54 + v81);
                  *((void *)this + 1) = v53;
                  v57 |= (unint64_t)(v82 & 0x7F) << v79;
                  if ((v82 & 0x80) == 0) {
                    break;
                  }
                  v79 += 7;
                  BOOL v14 = v80++ > 8;
                  if (v14)
                  {
                    LODWORD(v57) = 0;
LABEL_224:
                    unint64_t v2 = v81 + 1;
                    goto LABEL_225;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v57) = 0;
                }
                goto LABEL_224;
              }
              char v55 = 0;
              unsigned int v56 = 0;
              uint64_t v57 = 0;
              do
              {
                unint64_t v2 = v53 + 1;
                *((void *)this + 1) = v53 + 1;
                char v58 = *(unsigned char *)(v54 + v53);
                v57 |= (unint64_t)(v58 & 0x7F) << v55;
                if ((v58 & 0x80) == 0) {
                  goto LABEL_225;
                }
                v55 += 7;
                unint64_t v53 = v2;
                BOOL v14 = v56++ > 8;
              }
              while (!v14);
              LODWORD(v57) = 0;
LABEL_225:
              *(_DWORD *)(a1 + 196) = v57;
LABEL_191:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_191;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101774280(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(result + 220);
  if ((v4 & 0x40000) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 152), 1u);
    int v4 = *(_DWORD *)(v3 + 220);
    if ((v4 & 0x100) == 0)
    {
LABEL_3:
      if ((v4 & 0x200) == 0) {
        goto LABEL_4;
      }
      goto LABEL_36;
    }
  }
  else if ((v4 & 0x100) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72), 2u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x200) == 0)
  {
LABEL_4:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 80), 3u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x10000) == 0)
  {
LABEL_5:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 136), 4u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x20000) == 0)
  {
LABEL_6:
    if ((v4 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 144), 5u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x80) == 0)
  {
LABEL_7:
    if ((v4 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 6u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 2) == 0)
  {
LABEL_8:
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 7u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 4) == 0)
  {
LABEL_9:
    if ((v4 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 8u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 1) == 0)
  {
LABEL_10:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 9u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x100000) == 0)
  {
LABEL_11:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 168), 0xAu);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 204), 0xBu);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x80000) == 0)
  {
LABEL_13:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 160), 0xCu);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 208), 0xDu);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 212), 0xEu);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x200000) == 0)
  {
LABEL_16:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 176), 0xFu);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x800000) == 0)
  {
LABEL_17:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 184), 0x10u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x400000) == 0)
  {
LABEL_18:
    if ((v4 & 0x800) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 180), 0x11u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x800) == 0)
  {
LABEL_19:
    if ((v4 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 96), 0x12u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 8) == 0)
  {
LABEL_20:
    if ((v4 & 0x10) == 0) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 0x13u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x10) == 0)
  {
LABEL_21:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 0x14u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_22:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 192), 0x15u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 200), 0x16u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_24:
    if ((v4 & 0x20) == 0) {
      goto LABEL_25;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 188), 0x17u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x20) == 0)
  {
LABEL_25:
    if ((v4 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 0x18u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x40) == 0)
  {
LABEL_26:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 56), 0x19u);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x8000) == 0)
  {
LABEL_27:
    if ((v4 & 0x400) == 0) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 128), 0x1Au);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x400) == 0)
  {
LABEL_28:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 88), 0x1Bu);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this, *(unsigned char *)(v3 + 216), 0x1Cu);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x1000) == 0)
  {
LABEL_30:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 104), 0x1Du);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x4000) == 0)
  {
LABEL_31:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_32;
    }
LABEL_64:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 112), 0x1Fu);
    if ((*(_DWORD *)(v3 + 220) & 0x4000000) == 0) {
      return result;
    }
    goto LABEL_65;
  }
LABEL_63:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 120), 0x1Eu);
  int v4 = *(_DWORD *)(v3 + 220);
  if ((v4 & 0x2000) != 0) {
    goto LABEL_64;
  }
LABEL_32:
  if ((v4 & 0x4000000) == 0) {
    return result;
  }
LABEL_65:
  unsigned int v5 = *(_DWORD *)(v3 + 196);

  return PB::Writer::writeVarInt(this, v5, 0x20u);
}

double sub_101774638(uint64_t a1)
{
  *(void *)a1 = &off_10233A110;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_101774668(PB::Base *this)
{
  *(void *)this = &off_10233A110;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_1017746DC(PB::Base *a1)
{
  sub_101774668(a1);

  operator delete();
}

uint64_t sub_101774714(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_10233A110;
  *(_OWORD *)(a1 + 8) = 0u;
  uint64_t v3 = (char *)(a1 + 8);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  if (a1 != a2)
  {
    sub_1002DD194(v3, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 3);
    sub_1002DD194((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 3);
  }
  return a1;
}

uint64_t sub_1017747A0(void *a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  unsigned int v5 = (double *)a1[1];
  uint64_t v6 = (double *)a1[2];
  while (v5 != v6)
  {
    double v7 = *v5++;
    PB::TextFormatter::format(this, "loiAltitude", v7);
  }
  uint64_t v8 = (double *)a1[4];
  char v9 = (double *)a1[5];
  while (v8 != v9)
  {
    double v10 = *v8++;
    PB::TextFormatter::format(this, "loiVerticalUncertainty", v10);
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_10177484C(void *a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 4);
    uint64_t v9 = (uint64_t)(a1 + 6);
    double v10 = (void **)(a1 + 1);
    uint64_t v11 = (uint64_t)(a1 + 3);
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        unint64_t v15 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v21 = v2 + 1;
          char v22 = *(unsigned char *)(v12 + v2);
          *((void *)this + 1) = v21;
          v15 |= (unint64_t)(v22 & 0x7F) << v19;
          if ((v22 & 0x80) == 0) {
            goto LABEL_21;
          }
          v19 += 7;
          unint64_t v2 = v21;
          if (v20++ >= 9)
          {
LABEL_20:
            unint64_t v15 = 0;
            goto LABEL_21;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
        return v4 == 0;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        if (v14++ > 8) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v25 = v15 >> 3;
      if ((v15 >> 3) == 2) {
        break;
      }
      if (v25 == 1)
      {
        if (v24 != 2)
        {
          char v55 = (char *)a1[2];
          unint64_t v54 = a1[3];
          if ((unint64_t)v55 >= v54)
          {
            char v59 = (char *)*v10;
            uint64_t v60 = (v55 - (unsigned char *)*v10) >> 3;
            unint64_t v61 = v60 + 1;
            if ((unint64_t)(v60 + 1) >> 61) {
LABEL_122:
            }
              sub_1001D7FD4();
            uint64_t v62 = v54 - (void)v59;
            if (v62 >> 2 > v61) {
              unint64_t v61 = v62 >> 2;
            }
            if ((unint64_t)v62 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v63 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v63 = v61;
            }
            if (v63)
            {
              unsigned int v64 = (char *)sub_1000DA54C(v11, v63);
              char v59 = (char *)a1[1];
              char v55 = (char *)a1[2];
            }
            else
            {
              unsigned int v64 = 0;
            }
            char v71 = &v64[8 * v60];
            *(void *)char v71 = 0;
            unsigned int v56 = v71 + 8;
            while (v55 != v59)
            {
              uint64_t v72 = *((void *)v55 - 1);
              v55 -= 8;
              *((void *)v71 - 1) = v72;
              v71 -= 8;
            }
            a1[1] = v71;
            a1[2] = v56;
            a1[3] = &v64[8 * v63];
            if (v59) {
              operator delete(v59);
            }
          }
          else
          {
            *(void *)char v55 = 0;
            unsigned int v56 = v55 + 8;
          }
          a1[2] = v56;
LABEL_110:
          unint64_t v75 = *((void *)this + 1);
          if (v75 <= 0xFFFFFFFFFFFFFFF7 && v75 + 8 <= *((void *)this + 2))
          {
            *(v56 - 1) = *(void *)(*(void *)this + v75);
            *((void *)this + 1) += 8;
          }
          else
          {
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_114;
        }
        if (PB::Reader::placeMark()) {
          return 0;
        }
        unint64_t v26 = *((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        while (v26 < v27 && !*((unsigned char *)this + 24))
        {
          char v29 = (char *)a1[2];
          unint64_t v28 = a1[3];
          if ((unint64_t)v29 >= v28)
          {
            uint64_t v31 = (char *)*v10;
            uint64_t v32 = (v29 - (unsigned char *)*v10) >> 3;
            unint64_t v33 = v32 + 1;
            if ((unint64_t)(v32 + 1) >> 61) {
              goto LABEL_122;
            }
            uint64_t v34 = v28 - (void)v31;
            if (v34 >> 2 > v33) {
              unint64_t v33 = v34 >> 2;
            }
            if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v35 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v35 = v33;
            }
            if (v35)
            {
              unsigned int v36 = (char *)sub_1000DA54C(v11, v35);
              uint64_t v31 = (char *)a1[1];
              char v29 = (char *)a1[2];
            }
            else
            {
              unsigned int v36 = 0;
            }
            uint64_t v37 = &v36[8 * v32];
            *(void *)uint64_t v37 = 0;
            unsigned int v30 = v37 + 8;
            while (v29 != v31)
            {
              uint64_t v38 = *((void *)v29 - 1);
              v29 -= 8;
              *((void *)v37 - 1) = v38;
              v37 -= 8;
            }
            a1[1] = v37;
            a1[2] = v30;
            a1[3] = &v36[8 * v35];
            if (v31) {
              operator delete(v31);
            }
          }
          else
          {
            *(void *)char v29 = 0;
            unsigned int v30 = v29 + 8;
          }
          a1[2] = v30;
          unint64_t v39 = *((void *)this + 1);
          if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > *((void *)this + 2)) {
            goto LABEL_78;
          }
          *(v30 - 1) = *(void *)(*(void *)this + v39);
          unint64_t v27 = *((void *)this + 2);
          unint64_t v26 = *((void *)this + 1) + 8;
          *((void *)this + 1) = v26;
        }
LABEL_79:
        PB::Reader::recallMark();
        goto LABEL_114;
      }
      if ((PB::Reader::skip(this, v25, v24, 0) & 1) == 0) {
        return 0;
      }
LABEL_114:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    if (v24 != 2)
    {
      char v58 = (char *)a1[5];
      unint64_t v57 = a1[6];
      if ((unint64_t)v58 >= v57)
      {
        unint64_t v65 = (char *)*v8;
        uint64_t v66 = (v58 - (unsigned char *)*v8) >> 3;
        unint64_t v67 = v66 + 1;
        if ((unint64_t)(v66 + 1) >> 61) {
LABEL_123:
        }
          sub_1001D7FD4();
        uint64_t v68 = v57 - (void)v65;
        if (v68 >> 2 > v67) {
          unint64_t v67 = v68 >> 2;
        }
        if ((unint64_t)v68 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v69 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v69 = v67;
        }
        if (v69)
        {
          char v70 = (char *)sub_1000DA54C(v9, v69);
          unint64_t v65 = (char *)a1[4];
          char v58 = (char *)a1[5];
        }
        else
        {
          char v70 = 0;
        }
        unint64_t v73 = &v70[8 * v66];
        *(void *)unint64_t v73 = 0;
        unsigned int v56 = v73 + 8;
        while (v58 != v65)
        {
          uint64_t v74 = *((void *)v58 - 1);
          v58 -= 8;
          *((void *)v73 - 1) = v74;
          v73 -= 8;
        }
        a1[4] = v73;
        a1[5] = v56;
        a1[6] = &v70[8 * v69];
        if (v65) {
          operator delete(v65);
        }
      }
      else
      {
        *(void *)char v58 = 0;
        unsigned int v56 = v58 + 8;
      }
      a1[5] = v56;
      goto LABEL_110;
    }
    if (PB::Reader::placeMark()) {
      return 0;
    }
    unint64_t v40 = *((void *)this + 1);
    unint64_t v41 = *((void *)this + 2);
    while (v40 < v41 && !*((unsigned char *)this + 24))
    {
      uint64_t v43 = (char *)a1[5];
      unint64_t v42 = a1[6];
      if ((unint64_t)v43 >= v42)
      {
        unint64_t v45 = (char *)*v8;
        uint64_t v46 = (v43 - (unsigned char *)*v8) >> 3;
        unint64_t v47 = v46 + 1;
        if ((unint64_t)(v46 + 1) >> 61) {
          goto LABEL_123;
        }
        uint64_t v48 = v42 - (void)v45;
        if (v48 >> 2 > v47) {
          unint64_t v47 = v48 >> 2;
        }
        if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v49 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v49 = v47;
        }
        if (v49)
        {
          char v50 = (char *)sub_1000DA54C(v9, v49);
          unint64_t v45 = (char *)a1[4];
          uint64_t v43 = (char *)a1[5];
        }
        else
        {
          char v50 = 0;
        }
        int v51 = &v50[8 * v46];
        *(void *)int v51 = 0;
        char v44 = v51 + 8;
        while (v43 != v45)
        {
          uint64_t v52 = *((void *)v43 - 1);
          v43 -= 8;
          *((void *)v51 - 1) = v52;
          v51 -= 8;
        }
        a1[4] = v51;
        a1[5] = v44;
        a1[6] = &v50[8 * v49];
        if (v45) {
          operator delete(v45);
        }
      }
      else
      {
        *(void *)uint64_t v43 = 0;
        char v44 = v43 + 8;
      }
      a1[5] = v44;
      unint64_t v53 = *((void *)this + 1);
      if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)this + 2))
      {
LABEL_78:
        *((unsigned char *)this + 24) = 1;
        goto LABEL_79;
      }
      *(v44 - 1) = *(void *)(*(void *)this + v53);
      unint64_t v41 = *((void *)this + 2);
      unint64_t v40 = *((void *)this + 1) + 8;
      *((void *)this + 1) = v40;
    }
    goto LABEL_79;
  }
  return v4 == 0;
}

uint64_t sub_101774D80(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  int v4 = *(double **)(result + 8);
  unsigned int v5 = *(double **)(result + 16);
  while (v4 != v5)
  {
    double v6 = *v4++;
    double result = PB::Writer::write(this, v6, 1u);
  }
  uint64_t v8 = *(double **)(v3 + 32);
  double v7 = *(double **)(v3 + 40);
  while (v8 != v7)
  {
    double v9 = *v8++;
    double result = PB::Writer::write(this, v9, 2u);
  }
  return result;
}

uint64_t sub_101774DEC(uint64_t result)
{
  *(void *)double result = &off_10233A148;
  *(_DWORD *)(result + 84) = -1;
  *(_DWORD *)(result + 92) = 0;
  return result;
}

void sub_101774E1C(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_101774E54(uint64_t result, uint64_t a2)
{
  *(void *)double result = &off_10233A148;
  *(_DWORD *)(result + 84) = -1;
  *(_DWORD *)(result + 92) = 0;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x40) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 56);
    __int16 v3 = 64;
    *(_WORD *)(result + 92) = 64;
    *(void *)(result + 56) = v4;
    __int16 v2 = *(_WORD *)(a2 + 92);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    uint64_t v5 = *(void *)(a2 + 48);
    v3 |= 0x20u;
    *(_WORD *)(result + 92) = v3;
    *(void *)(result + 48) = v5;
    __int16 v2 = *(_WORD *)(a2 + 92);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    v3 |= 4u;
    *(_WORD *)(result + 92) = v3;
    *(void *)(result + 24) = v6;
    __int16 v2 = *(_WORD *)(a2 + 92);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 8) = v7;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v8 = *(void *)(a2 + 40);
  v3 |= 0x10u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 40) = v8;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x200) == 0)
  {
LABEL_10:
    if ((v2 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v9 = *(_DWORD *)(a2 + 80);
  v3 |= 0x200u;
  *(_WORD *)(result + 92) = v3;
  *(_DWORD *)(result + 80) = v9;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x100) == 0)
  {
LABEL_11:
    if ((v2 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v10 = *(void *)(a2 + 72);
  v3 |= 0x100u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 72) = v10;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x80) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v11 = *(void *)(a2 + 64);
  v3 |= 0x80u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 64) = v11;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 2) == 0)
  {
LABEL_13:
    if ((v2 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v12 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 16) = v12;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 0x400) == 0)
  {
LABEL_14:
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v13 = *(_DWORD *)(a2 + 84);
  v3 |= 0x400u;
  *(_WORD *)(result + 92) = v3;
  *(_DWORD *)(result + 84) = v13;
  __int16 v2 = *(_WORD *)(a2 + 92);
  if ((v2 & 8) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      return result;
    }
LABEL_26:
    char v15 = *(unsigned char *)(a2 + 88);
    *(_WORD *)(result + 92) = v3 | 0x800;
    *(unsigned char *)(result + 88) = v15;
    return result;
  }
LABEL_25:
  uint64_t v14 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 92) = v3;
  *(void *)(result + 32) = v14;
  if ((*(_WORD *)(a2 + 92) & 0x800) != 0) {
    goto LABEL_26;
  }
  return result;
}

uint64_t sub_101774FD8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 92);
  if (v5)
  {
    PB::TextFormatter::format(this, "arrivalDate", *(double *)(a1 + 8));
    __int16 v5 = *(_WORD *)(a1 + 92);
    if ((v5 & 0x200) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((*(_WORD *)(a1 + 92) & 0x200) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "confidence", *(_DWORD *)(a1 + 80));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "confidenceOfGeoLocation", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "departureDate", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "distanceToLoi", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x800) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "hashedLatLong", *(unsigned char *)(a1 + 88));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "horizontalAccuracy", *(double *)(a1 + 40));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v5 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "latitude", *(double *)(a1 + 48));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v5 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(this, "longitude", *(double *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x400) == 0)
  {
LABEL_11:
    if ((v5 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(this, "type", *(_DWORD *)(a1 + 84));
  __int16 v5 = *(_WORD *)(a1 + 92);
  if ((v5 & 0x80) == 0)
  {
LABEL_12:
    if ((v5 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_27:
  PB::TextFormatter::format(this, "uncertaintyOfGeoLocation", *(double *)(a1 + 64));
  if ((*(_WORD *)(a1 + 92) & 0x100) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(this, "withinDistance", *(double *)(a1 + 72));
LABEL_14:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10177519C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 92) |= 0x40u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 56) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 2u:
              *(_WORD *)(a1 + 92) |= 0x20u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 48) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 3u:
              *(_WORD *)(a1 + 92) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 4u:
              *(_WORD *)(a1 + 92) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 5u:
              *(_WORD *)(a1 + 92) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 6u:
              *(_WORD *)(a1 + 92) |= 0x200u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v35 = 0;
                unsigned int v36 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_89;
                  }
                  unint64_t v37 = v21++;
                  char v38 = *(unsigned char *)(v22 + v37);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v38 & 0x7F) << v35;
                  if ((v38 & 0x80) == 0) {
                    break;
                  }
                  v35 += 7;
                  BOOL v14 = v36++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_88:
                    unint64_t v2 = v37 + 1;
                    goto LABEL_89;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_88;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_89;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_89:
              *(_DWORD *)(a1 + 80) = v25;
              goto LABEL_95;
            case 7u:
              *(_WORD *)(a1 + 92) |= 0x100u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 72) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 8u:
              *(_WORD *)(a1 + 92) |= 0x80u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 64) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 9u:
              *(_WORD *)(a1 + 92) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_64;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_84;
            case 0xAu:
              *(_WORD *)(a1 + 92) |= 0x400u;
              unint64_t v27 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v28 = *(void *)this;
              if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
              {
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v31 = 0;
                if (v2 <= v27) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v27)
                  {
                    LODWORD(v31) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_94;
                  }
                  unint64_t v41 = v27++;
                  char v42 = *(unsigned char *)(v28 + v41);
                  *((void *)this + 1) = v27;
                  v31 |= (unint64_t)(v42 & 0x7F) << v39;
                  if ((v42 & 0x80) == 0) {
                    break;
                  }
                  v39 += 7;
                  BOOL v14 = v40++ > 8;
                  if (v14)
                  {
                    LODWORD(v31) = 0;
LABEL_93:
                    unint64_t v2 = v41 + 1;
                    goto LABEL_94;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v31) = 0;
                }
                goto LABEL_93;
              }
              char v29 = 0;
              unsigned int v30 = 0;
              uint64_t v31 = 0;
              do
              {
                unint64_t v2 = v27 + 1;
                *((void *)this + 1) = v27 + 1;
                char v32 = *(unsigned char *)(v28 + v27);
                v31 |= (unint64_t)(v32 & 0x7F) << v29;
                if ((v32 & 0x80) == 0) {
                  goto LABEL_94;
                }
                v29 += 7;
                unint64_t v27 = v2;
                BOOL v14 = v30++ > 8;
              }
              while (!v14);
              LODWORD(v31) = 0;
LABEL_94:
              *(_DWORD *)(a1 + 84) = v31;
LABEL_95:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 0xBu:
              *(_WORD *)(a1 + 92) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
LABEL_84:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_64:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_95;
            case 0xCu:
              *(_WORD *)(a1 + 92) |= 0x800u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v34 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v33 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v34 = v33 != 0;
              }
              *(unsigned char *)(a1 + 88) = v34;
              goto LABEL_95;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_95;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t sub_101775768(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  __int16 v4 = *(_WORD *)(result + 92);
  if ((v4 & 0x40) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 56), 1u);
    __int16 v4 = *(_WORD *)(v3 + 92);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 48), 2u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 24), 3u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 4u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x200) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 5u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x200) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 80), 6u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 72), 7u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 64), 8u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 2) == 0)
  {
LABEL_10:
    if ((v4 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 16), 9u);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 0x400) == 0)
  {
LABEL_11:
    if ((v4 & 8) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    uint64_t result = PB::Writer::write(this, *(double *)(v3 + 32), 0xBu);
    if ((*(_WORD *)(v3 + 92) & 0x800) == 0) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 84), 0xAu);
  __int16 v4 = *(_WORD *)(v3 + 92);
  if ((v4 & 8) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v4 & 0x800) == 0) {
    return result;
  }
LABEL_25:
  char v5 = *(unsigned char *)(v3 + 88);

  return PB::Writer::write(this, v5, 0xCu);
}

void *sub_1017758F0(void *result)
{
  *uint64_t result = &off_10233A180;
  result[4] = 0;
  result[24] = 0;
  return result;
}

void sub_101775918(PB::Base *this)
{
  *(void *)this = &off_10233A180;
  uint64_t v2 = *((void *)this + 4);
  *((void *)this + 4) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_10177599C(PB::Base *a1)
{
  sub_101775918(a1);

  operator delete();
}

uint64_t sub_1017759D4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_10233A180;
  *(void *)(result + 32) = 0;
  *(void *)(result + 192) = 0;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x8000) != 0)
  {
    int v4 = *(_DWORD *)(a2 + 100);
    uint64_t v3 = 0x8000;
    *(void *)(result + 192) = 0x8000;
    *(_DWORD *)(result + 100) = v4;
    uint64_t v2 = *(void *)(a2 + 192);
    if ((v2 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if ((v2 & 0x100) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 72);
    v3 |= 0x100uLL;
    *(void *)(result + 192) = v3;
    *(_DWORD *)(result + 72) = v5;
    uint64_t v2 = *(void *)(a2 + 192);
  }
LABEL_6:
  if ((v2 & 0x10000) != 0)
  {
    int v9 = *(_DWORD *)(a2 + 104);
    v3 |= 0x10000uLL;
    *(void *)(result + 192) = v3;
    *(_DWORD *)(result + 104) = v9;
    uint64_t v2 = *(void *)(a2 + 192);
    if ((v2 & 0x20000) == 0)
    {
LABEL_8:
      if ((v2 & 0x800) == 0) {
        goto LABEL_9;
      }
      goto LABEL_49;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_8;
  }
  int v10 = *(_DWORD *)(a2 + 108);
  v3 |= 0x20000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 108) = v10;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x800) == 0)
  {
LABEL_9:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v11 = *(_DWORD *)(a2 + 84);
  v3 |= 0x800uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 84) = v11;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_10:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v12 = *(_DWORD *)(a2 + 148);
  v3 |= 0x8000000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 148) = v12;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x2000) == 0)
  {
LABEL_11:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v13 = *(_DWORD *)(a2 + 92);
  v3 |= 0x2000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 92) = v13;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x1000) == 0)
  {
LABEL_12:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v14 = *(_DWORD *)(a2 + 88);
  v3 |= 0x1000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 88) = v14;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_13:
    if ((v2 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v15 = *(_DWORD *)(a2 + 136);
  v3 |= 0x1000000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 136) = v15;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 8) == 0)
  {
LABEL_14:
    if ((v2 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v16 = *(void *)(a2 + 40);
  v3 |= 8uLL;
  *(void *)(result + 192) = v3;
  *(void *)(result + 40) = v16;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 1) == 0)
  {
LABEL_15:
    if ((v2 & 4) == 0) {
      goto LABEL_16;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t v17 = *(void *)(a2 + 8);
  v3 |= 1uLL;
  *(void *)(result + 192) = v3;
  *(void *)(result + 8) = v17;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 4) == 0)
  {
LABEL_16:
    if ((v2 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t v18 = *(void *)(a2 + 24);
  v3 |= 4uLL;
  *(void *)(result + 192) = v3;
  *(void *)(result + 24) = v18;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 2) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t v19 = *(void *)(a2 + 16);
  v3 |= 2uLL;
  *(void *)(result + 192) = v3;
  *(void *)(result + 16) = v19;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x80) == 0)
  {
LABEL_18:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v20 = *(_DWORD *)(a2 + 68);
  v3 |= 0x80uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 68) = v20;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_19:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v21 = *(_DWORD *)(a2 + 156);
  v3 |= 0x20000000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 156) = v21;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_20:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v22 = *(_DWORD *)(a2 + 144);
  v3 |= 0x4000000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 144) = v22;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x4000) == 0)
  {
LABEL_21:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v23 = *(_DWORD *)(a2 + 96);
  v3 |= 0x4000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 96) = v23;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x400000) == 0)
  {
LABEL_22:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v24 = *(_DWORD *)(a2 + 128);
  v3 |= 0x400000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 128) = v24;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x200000) == 0)
  {
LABEL_23:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_64;
  }
LABEL_63:
  int v25 = *(_DWORD *)(a2 + 124);
  v3 |= 0x200000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 124) = v25;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x800000) == 0)
  {
LABEL_24:
    if ((v2 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v26 = *(_DWORD *)(a2 + 132);
  v3 |= 0x800000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 132) = v26;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x10) == 0)
  {
LABEL_25:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t v27 = *(void *)(a2 + 48);
  v3 |= 0x10uLL;
  *(void *)(result + 192) = v3;
  *(void *)(result + 48) = v27;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_26:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v28 = *(_DWORD *)(a2 + 180);
  v3 |= 0x800000000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 180) = v28;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_27:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v29 = *(_DWORD *)(a2 + 160);
  v3 |= 0x40000000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 160) = v29;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x100000) == 0)
  {
LABEL_28:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_69;
  }
LABEL_68:
  int v30 = *(_DWORD *)(a2 + 120);
  v3 |= 0x100000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 120) = v30;
  uint64_t v2 = *(void *)(a2 + 192);
  if ((v2 & 0x80000) == 0)
  {
LABEL_29:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_69:
  int v31 = *(_DWORD *)(a2 + 116);
  v3 |= 0x80000uLL;
  *(void *)(result + 192) = v3;
  *(_DWORD *)(result + 116) = v31;
  if ((*(void *)(a2 + 192) & 0x40000) != 0)
  {
LABEL_30:
    int v6 = *(_DWORD *)(a2 + 112);
    *(void *)(result + 192) = v3 | 0x40000;
    *(_DWORD *)(result + 112) = v6;
  }
LABEL_31:
  if (*(void *)(a2 + 32)) {
    operator new();
  }
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x400) != 0)
  {
    int v32 = *(_DWORD *)(a2 + 80);
    *(void *)(result + 192) |= 0x400uLL;
    *(_DWORD *)(result + 80) = v32;
    uint64_t v7 = *(void *)(a2 + 192);
    if ((v7 & 0x200) == 0)
    {
LABEL_35:
      if ((v7 & 0x2000000) == 0) {
        goto LABEL_36;
      }
      goto LABEL_73;
    }
  }
  else if ((v7 & 0x200) == 0)
  {
    goto LABEL_35;
  }
  int v33 = *(_DWORD *)(a2 + 76);
  *(void *)(result + 192) |= 0x200uLL;
  *(_DWORD *)(result + 76) = v33;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x2000000) == 0)
  {
LABEL_36:
    if ((v7 & 0x1000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_74;
  }
LABEL_73:
  int v34 = *(_DWORD *)(a2 + 140);
  *(void *)(result + 192) |= 0x2000000uLL;
  *(_DWORD *)(result + 140) = v34;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x1000000000) == 0)
  {
LABEL_37:
    if ((v7 & 0x20) == 0) {
      goto LABEL_38;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v35 = *(_DWORD *)(a2 + 184);
  *(void *)(result + 192) |= 0x1000000000uLL;
  *(_DWORD *)(result + 184) = v35;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x20) == 0)
  {
LABEL_38:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t v36 = *(void *)(a2 + 56);
  *(void *)(result + 192) |= 0x20uLL;
  *(void *)(result + 56) = v36;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v7 & 0x2000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_77;
  }
LABEL_76:
  int v37 = *(_DWORD *)(a2 + 152);
  *(void *)(result + 192) |= 0x10000000uLL;
  *(_DWORD *)(result + 152) = v37;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x2000000000) == 0)
  {
LABEL_40:
    if ((v7 & 0x40) == 0) {
      goto LABEL_41;
    }
    goto LABEL_78;
  }
LABEL_77:
  int v38 = *(_DWORD *)(a2 + 188);
  *(void *)(result + 192) |= 0x2000000000uLL;
  *(_DWORD *)(result + 188) = v38;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x40) == 0)
  {
LABEL_41:
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_79;
  }
LABEL_78:
  int v39 = *(_DWORD *)(a2 + 64);
  *(void *)(result + 192) |= 0x40uLL;
  *(_DWORD *)(result + 64) = v39;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x80000000) == 0)
  {
LABEL_42:
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_80;
  }
LABEL_79:
  int v40 = *(_DWORD *)(a2 + 164);
  *(void *)(result + 192) |= 0x80000000uLL;
  *(_DWORD *)(result + 164) = v40;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x100000000) == 0)
  {
LABEL_43:
    if ((v7 & 0x200000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_81;
  }
LABEL_80:
  int v41 = *(_DWORD *)(a2 + 168);
  *(void *)(result + 192) |= (unint64_t)&_mh_execute_header;
  *(_DWORD *)(result + 168) = v41;
  uint64_t v7 = *(void *)(a2 + 192);
  if ((v7 & 0x200000000) == 0)
  {
LABEL_44:
    if ((v7 & 0x400000000) == 0) {
      return result;
    }
    goto LABEL_45;
  }
LABEL_81:
  int v42 = *(_DWORD *)(a2 + 172);
  *(void *)(result + 192) |= 0x200000000uLL;
  *(_DWORD *)(result + 172) = v42;
  if ((*(void *)(a2 + 192) & 0x400000000) == 0) {
    return result;
  }
LABEL_45:
  int v8 = *(_DWORD *)(a2 + 176);
  *(void *)(result + 192) |= 0x400000000uLL;
  *(_DWORD *)(result + 176) = v8;
  return result;
}

uint64_t sub_101775EE0(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x40) != 0)
  {
    PB::TextFormatter::format(this, "alsLux", *(_DWORD *)(a1 + 64));
    uint64_t v5 = *(void *)(a1 + 192);
    if ((v5 & 0x80) == 0)
    {
LABEL_3:
      if ((v5 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_48;
    }
  }
  else if ((v5 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "caltype", *(_DWORD *)(a1 + 68));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x100) == 0)
  {
LABEL_4:
    if ((v5 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(this, "confidence", *(_DWORD *)(a1 + 72));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x200) == 0)
  {
LABEL_5:
    if ((v5 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(this, "drivingArmLikelihoodSum", *(float *)(a1 + 76));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x400) == 0)
  {
LABEL_6:
    if ((v5 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(this, "drivingStowedLikelihoodSum", *(float *)(a1 + 80));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x800) == 0)
  {
LABEL_7:
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(this, "exitState", *(_DWORD *)(a1 + 84));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 1) == 0)
  {
LABEL_8:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(this, "hidTimestamp", *(double *)(a1 + 8));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x1000) == 0)
  {
LABEL_9:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(this, "isMoving", *(_DWORD *)(a1 + 88));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x2000) == 0)
  {
LABEL_10:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(this, "isVehicular", *(_DWORD *)(a1 + 92));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x4000) == 0)
  {
LABEL_11:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(this, "machineFrequency", *(float *)(a1 + 96));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x8000) == 0)
  {
LABEL_12:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(this, "motionType", *(_DWORD *)(a1 + 100));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x10000) == 0)
  {
LABEL_13:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(this, "mounted", *(_DWORD *)(a1 + 104));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x20000) == 0)
  {
LABEL_14:
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(this, "mountedConfidence", *(_DWORD *)(a1 + 108));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 2) == 0)
  {
LABEL_15:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(this, "now", *(void *)(a1 + 16));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x40000) == 0)
  {
LABEL_16:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(this, "rawConfidence", *(_DWORD *)(a1 + 112));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x80000) == 0)
  {
LABEL_17:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(this, "rawIsVehicular", *(_DWORD *)(a1 + 116));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x100000) == 0)
  {
LABEL_18:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(this, "rawMotionType", *(_DWORD *)(a1 + 120));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x200000) == 0)
  {
LABEL_19:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(this, "rowStrokeAmplitude", *(float *)(a1 + 124));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x400000) == 0)
  {
LABEL_20:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(this, "rowStrokeFrequency", *(float *)(a1 + 128));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x800000) == 0)
  {
LABEL_21:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(this, "rowStrokePower", *(float *)(a1 + 132));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(this, "seq", *(_DWORD *)(a1 + 136));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_23:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(this, "ssLikelihoodSum", *(float *)(a1 + 140));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_24:
    if ((v5 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(this, "standing", *(_DWORD *)(a1 + 144));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 4) == 0)
  {
LABEL_25:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(this, "startTime", *(void *)(a1 + 24));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(this, "turn", *(_DWORD *)(a1 + 148));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(this, "typeYouth", *(_DWORD *)(a1 + 152));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(this, "vectorMagnitude", *(float *)(a1 + 156));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(this, "vehicleExitState", *(_DWORD *)(a1 + 160));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(this, "vehicleProbabilityLongTermMean0", *(float *)(a1 + 164));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(this, "vehicleProbabilityLongTermMean1", *(float *)(a1 + 168));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(this, "vehicleProbabilityLongTermMean2", *(float *)(a1 + 172));
  uint64_t v5 = *(void *)(a1 + 192);
  if ((v5 & 0x400000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }
LABEL_77:
  PB::TextFormatter::format(this, "vehicleType", *(_DWORD *)(a1 + 176));
  if ((*(void *)(a1 + 192) & 0x800000000) != 0) {
LABEL_34:
  }
    PB::TextFormatter::format(this, "vehicularConfidence", *(_DWORD *)(a1 + 180));
LABEL_35:
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v6 + 32))(v6, this, "vehicularFlags");
  }
  uint64_t v7 = *(void *)(a1 + 192);
  if ((v7 & 8) != 0)
  {
    PB::TextFormatter::format(this, "wallStartTime", *(double *)(a1 + 40));
    uint64_t v7 = *(void *)(a1 + 192);
    if ((v7 & 0x10) == 0)
    {
LABEL_39:
      if ((v7 & 0x1000000000) == 0) {
        goto LABEL_40;
      }
      goto LABEL_81;
    }
  }
  else if ((v7 & 0x10) == 0)
  {
    goto LABEL_39;
  }
  PB::TextFormatter::format(this, "workoutDetectionTime", *(void *)(a1 + 48));
  uint64_t v7 = *(void *)(a1 + 192);
  if ((v7 & 0x1000000000) == 0)
  {
LABEL_40:
    if ((v7 & 0x20) == 0) {
      goto LABEL_41;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(this, "workoutDetectionType", *(_DWORD *)(a1 + 184));
  uint64_t v7 = *(void *)(a1 + 192);
  if ((v7 & 0x20) == 0)
  {
LABEL_41:
    if ((v7 & 0x2000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_42;
  }
LABEL_82:
  PB::TextFormatter::format(this, "workoutEscalationTime", *(void *)(a1 + 56));
  if ((*(void *)(a1 + 192) & 0x2000000000) != 0) {
LABEL_42:
  }
    PB::TextFormatter::format(this, "youthClassificationReason", *(_DWORD *)(a1 + 188));
LABEL_43:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10177641C(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(void *)(a1 + 192) |= 0x8000uLL;
          unint64_t v20 = *((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          uint64_t v22 = *(void *)this;
          if (v20 <= 0xFFFFFFFFFFFFFFF5 && v20 + 10 <= v21)
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v26 = v20 + 1;
              *((void *)this + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                goto LABEL_445;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
LABEL_246:
            LODWORD(v25) = 0;
            goto LABEL_445;
          }
          char v235 = 0;
          unsigned int v236 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)this + 1);
          }
          while (2)
          {
            if (v21 == v20)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v237 = v20 + 1;
              char v238 = *(unsigned char *)(v22 + v20);
              *((void *)this + 1) = v237;
              v25 |= (unint64_t)(v238 & 0x7F) << v235;
              if (v238 < 0)
              {
                v235 += 7;
                unint64_t v20 = v237;
                BOOL v14 = v236++ > 8;
                if (v14) {
                  goto LABEL_246;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v25) = 0;
              }
            }
            break;
          }
LABEL_445:
          *(_DWORD *)(a1 + 100) = v25;
          goto LABEL_518;
        case 2u:
          *(void *)(a1 + 192) |= 0x100uLL;
          unint64_t v29 = *((void *)this + 1);
          unint64_t v30 = *((void *)this + 2);
          uint64_t v31 = *(void *)this;
          if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
          {
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            do
            {
              unint64_t v35 = v29 + 1;
              *((void *)this + 1) = v29 + 1;
              char v36 = *(unsigned char *)(v31 + v29);
              v34 |= (unint64_t)(v36 & 0x7F) << v32;
              if ((v36 & 0x80) == 0) {
                goto LABEL_448;
              }
              v32 += 7;
              unint64_t v29 = v35;
              BOOL v14 = v33++ > 8;
            }
            while (!v14);
LABEL_253:
            LODWORD(v34) = 0;
            goto LABEL_448;
          }
          char v239 = 0;
          unsigned int v240 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)this + 1);
          }
          while (2)
          {
            if (v30 == v29)
            {
              LODWORD(v34) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v241 = v29 + 1;
              char v242 = *(unsigned char *)(v31 + v29);
              *((void *)this + 1) = v241;
              v34 |= (unint64_t)(v242 & 0x7F) << v239;
              if (v242 < 0)
              {
                v239 += 7;
                unint64_t v29 = v241;
                BOOL v14 = v240++ > 8;
                if (v14) {
                  goto LABEL_253;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v34) = 0;
              }
            }
            break;
          }
LABEL_448:
          *(_DWORD *)(a1 + 72) = v34;
          goto LABEL_518;
        case 3u:
          *(void *)(a1 + 192) |= 0x10000uLL;
          unint64_t v37 = *((void *)this + 1);
          unint64_t v38 = *((void *)this + 2);
          uint64_t v39 = *(void *)this;
          if (v37 <= 0xFFFFFFFFFFFFFFF5 && v37 + 10 <= v38)
          {
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            do
            {
              unint64_t v43 = v37 + 1;
              *((void *)this + 1) = v37 + 1;
              char v44 = *(unsigned char *)(v39 + v37);
              v42 |= (unint64_t)(v44 & 0x7F) << v40;
              if ((v44 & 0x80) == 0) {
                goto LABEL_451;
              }
              v40 += 7;
              unint64_t v37 = v43;
              BOOL v14 = v41++ > 8;
            }
            while (!v14);
LABEL_260:
            LODWORD(v42) = 0;
            goto LABEL_451;
          }
          char v243 = 0;
          unsigned int v244 = 0;
          uint64_t v42 = 0;
          if (v38 <= v37) {
            unint64_t v38 = *((void *)this + 1);
          }
          while (2)
          {
            if (v38 == v37)
            {
              LODWORD(v42) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v245 = v37 + 1;
              char v246 = *(unsigned char *)(v39 + v37);
              *((void *)this + 1) = v245;
              v42 |= (unint64_t)(v246 & 0x7F) << v243;
              if (v246 < 0)
              {
                v243 += 7;
                unint64_t v37 = v245;
                BOOL v14 = v244++ > 8;
                if (v14) {
                  goto LABEL_260;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v42) = 0;
              }
            }
            break;
          }
LABEL_451:
          *(_DWORD *)(a1 + 104) = v42;
          goto LABEL_518;
        case 4u:
          *(void *)(a1 + 192) |= 0x20000uLL;
          unint64_t v45 = *((void *)this + 1);
          unint64_t v46 = *((void *)this + 2);
          uint64_t v47 = *(void *)this;
          if (v45 <= 0xFFFFFFFFFFFFFFF5 && v45 + 10 <= v46)
          {
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v50 = 0;
            do
            {
              unint64_t v51 = v45 + 1;
              *((void *)this + 1) = v45 + 1;
              char v52 = *(unsigned char *)(v47 + v45);
              v50 |= (unint64_t)(v52 & 0x7F) << v48;
              if ((v52 & 0x80) == 0) {
                goto LABEL_454;
              }
              v48 += 7;
              unint64_t v45 = v51;
              BOOL v14 = v49++ > 8;
            }
            while (!v14);
LABEL_267:
            LODWORD(v50) = 0;
            goto LABEL_454;
          }
          char v247 = 0;
          unsigned int v248 = 0;
          uint64_t v50 = 0;
          if (v46 <= v45) {
            unint64_t v46 = *((void *)this + 1);
          }
          while (2)
          {
            if (v46 == v45)
            {
              LODWORD(v50) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v249 = v45 + 1;
              char v250 = *(unsigned char *)(v47 + v45);
              *((void *)this + 1) = v249;
              v50 |= (unint64_t)(v250 & 0x7F) << v247;
              if (v250 < 0)
              {
                v247 += 7;
                unint64_t v45 = v249;
                BOOL v14 = v248++ > 8;
                if (v14) {
                  goto LABEL_267;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v50) = 0;
              }
            }
            break;
          }
LABEL_454:
          *(_DWORD *)(a1 + 108) = v50;
          goto LABEL_518;
        case 5u:
          *(void *)(a1 + 192) |= 0x800uLL;
          unint64_t v53 = *((void *)this + 1);
          unint64_t v54 = *((void *)this + 2);
          uint64_t v55 = *(void *)this;
          if (v53 <= 0xFFFFFFFFFFFFFFF5 && v53 + 10 <= v54)
          {
            char v56 = 0;
            unsigned int v57 = 0;
            uint64_t v58 = 0;
            do
            {
              unint64_t v59 = v53 + 1;
              *((void *)this + 1) = v53 + 1;
              char v60 = *(unsigned char *)(v55 + v53);
              v58 |= (unint64_t)(v60 & 0x7F) << v56;
              if ((v60 & 0x80) == 0) {
                goto LABEL_457;
              }
              v56 += 7;
              unint64_t v53 = v59;
              BOOL v14 = v57++ > 8;
            }
            while (!v14);
LABEL_274:
            LODWORD(v58) = 0;
            goto LABEL_457;
          }
          char v251 = 0;
          unsigned int v252 = 0;
          uint64_t v58 = 0;
          if (v54 <= v53) {
            unint64_t v54 = *((void *)this + 1);
          }
          while (2)
          {
            if (v54 == v53)
            {
              LODWORD(v58) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v253 = v53 + 1;
              char v254 = *(unsigned char *)(v55 + v53);
              *((void *)this + 1) = v253;
              v58 |= (unint64_t)(v254 & 0x7F) << v251;
              if (v254 < 0)
              {
                v251 += 7;
                unint64_t v53 = v253;
                BOOL v14 = v252++ > 8;
                if (v14) {
                  goto LABEL_274;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v58) = 0;
              }
            }
            break;
          }
LABEL_457:
          *(_DWORD *)(a1 + 84) = v58;
          goto LABEL_518;
        case 6u:
          *(void *)(a1 + 192) |= 0x8000000uLL;
          unint64_t v61 = *((void *)this + 1);
          unint64_t v62 = *((void *)this + 2);
          uint64_t v63 = *(void *)this;
          if (v61 <= 0xFFFFFFFFFFFFFFF5 && v61 + 10 <= v62)
          {
            char v64 = 0;
            unsigned int v65 = 0;
            uint64_t v66 = 0;
            do
            {
              unint64_t v67 = v61 + 1;
              *((void *)this + 1) = v61 + 1;
              char v68 = *(unsigned char *)(v63 + v61);
              v66 |= (unint64_t)(v68 & 0x7F) << v64;
              if ((v68 & 0x80) == 0) {
                goto LABEL_460;
              }
              v64 += 7;
              unint64_t v61 = v67;
              BOOL v14 = v65++ > 8;
            }
            while (!v14);
LABEL_281:
            LODWORD(v66) = 0;
            goto LABEL_460;
          }
          char v255 = 0;
          unsigned int v256 = 0;
          uint64_t v66 = 0;
          if (v62 <= v61) {
            unint64_t v62 = *((void *)this + 1);
          }
          while (2)
          {
            if (v62 == v61)
            {
              LODWORD(v66) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v257 = v61 + 1;
              char v258 = *(unsigned char *)(v63 + v61);
              *((void *)this + 1) = v257;
              v66 |= (unint64_t)(v258 & 0x7F) << v255;
              if (v258 < 0)
              {
                v255 += 7;
                unint64_t v61 = v257;
                BOOL v14 = v256++ > 8;
                if (v14) {
                  goto LABEL_281;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v66) = 0;
              }
            }
            break;
          }
LABEL_460:
          *(_DWORD *)(a1 + 148) = v66;
          goto LABEL_518;
        case 7u:
          *(void *)(a1 + 192) |= 0x2000uLL;
          unint64_t v69 = *((void *)this + 1);
          unint64_t v70 = *((void *)this + 2);
          uint64_t v71 = *(void *)this;
          if (v69 <= 0xFFFFFFFFFFFFFFF5 && v69 + 10 <= v70)
          {
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            do
            {
              unint64_t v75 = v69 + 1;
              *((void *)this + 1) = v69 + 1;
              char v76 = *(unsigned char *)(v71 + v69);
              v74 |= (unint64_t)(v76 & 0x7F) << v72;
              if ((v76 & 0x80) == 0) {
                goto LABEL_463;
              }
              v72 += 7;
              unint64_t v69 = v75;
              BOOL v14 = v73++ > 8;
            }
            while (!v14);
LABEL_288:
            LODWORD(v74) = 0;
            goto LABEL_463;
          }
          char v259 = 0;
          unsigned int v260 = 0;
          uint64_t v74 = 0;
          if (v70 <= v69) {
            unint64_t v70 = *((void *)this + 1);
          }
          while (2)
          {
            if (v70 == v69)
            {
              LODWORD(v74) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v261 = v69 + 1;
              char v262 = *(unsigned char *)(v71 + v69);
              *((void *)this + 1) = v261;
              v74 |= (unint64_t)(v262 & 0x7F) << v259;
              if (v262 < 0)
              {
                v259 += 7;
                unint64_t v69 = v261;
                BOOL v14 = v260++ > 8;
                if (v14) {
                  goto LABEL_288;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v74) = 0;
              }
            }
            break;
          }
LABEL_463:
          *(_DWORD *)(a1 + 92) = v74;
          goto LABEL_518;
        case 8u:
          *(void *)(a1 + 192) |= 0x1000uLL;
          unint64_t v77 = *((void *)this + 1);
          unint64_t v78 = *((void *)this + 2);
          uint64_t v79 = *(void *)this;
          if (v77 <= 0xFFFFFFFFFFFFFFF5 && v77 + 10 <= v78)
          {
            char v80 = 0;
            unsigned int v81 = 0;
            uint64_t v82 = 0;
            do
            {
              unint64_t v83 = v77 + 1;
              *((void *)this + 1) = v77 + 1;
              char v84 = *(unsigned char *)(v79 + v77);
              v82 |= (unint64_t)(v84 & 0x7F) << v80;
              if ((v84 & 0x80) == 0) {
                goto LABEL_466;
              }
              v80 += 7;
              unint64_t v77 = v83;
              BOOL v14 = v81++ > 8;
            }
            while (!v14);
LABEL_295:
            LODWORD(v82) = 0;
            goto LABEL_466;
          }
          char v263 = 0;
          unsigned int v264 = 0;
          uint64_t v82 = 0;
          if (v78 <= v77) {
            unint64_t v78 = *((void *)this + 1);
          }
          while (2)
          {
            if (v78 == v77)
            {
              LODWORD(v82) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v265 = v77 + 1;
              char v266 = *(unsigned char *)(v79 + v77);
              *((void *)this + 1) = v265;
              v82 |= (unint64_t)(v266 & 0x7F) << v263;
              if (v266 < 0)
              {
                v263 += 7;
                unint64_t v77 = v265;
                BOOL v14 = v264++ > 8;
                if (v14) {
                  goto LABEL_295;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v82) = 0;
              }
            }
            break;
          }
LABEL_466:
          *(_DWORD *)(a1 + 88) = v82;
          goto LABEL_518;
        case 9u:
          *(void *)(a1 + 192) |= 0x1000000uLL;
          unint64_t v85 = *((void *)this + 1);
          unint64_t v86 = *((void *)this + 2);
          uint64_t v87 = *(void *)this;
          if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
          {
            char v88 = 0;
            unsigned int v89 = 0;
            uint64_t v90 = 0;
            do
            {
              unint64_t v91 = v85 + 1;
              *((void *)this + 1) = v85 + 1;
              char v92 = *(unsigned char *)(v87 + v85);
              v90 |= (unint64_t)(v92 & 0x7F) << v88;
              if ((v92 & 0x80) == 0) {
                goto LABEL_469;
              }
              v88 += 7;
              unint64_t v85 = v91;
              BOOL v14 = v89++ > 8;
            }
            while (!v14);
LABEL_302:
            LODWORD(v90) = 0;
            goto LABEL_469;
          }
          char v267 = 0;
          unsigned int v268 = 0;
          uint64_t v90 = 0;
          if (v86 <= v85) {
            unint64_t v86 = *((void *)this + 1);
          }
          while (2)
          {
            if (v86 == v85)
            {
              LODWORD(v90) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v269 = v85 + 1;
              char v270 = *(unsigned char *)(v87 + v85);
              *((void *)this + 1) = v269;
              v90 |= (unint64_t)(v270 & 0x7F) << v267;
              if (v270 < 0)
              {
                v267 += 7;
                unint64_t v85 = v269;
                BOOL v14 = v268++ > 8;
                if (v14) {
                  goto LABEL_302;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v90) = 0;
              }
            }
            break;
          }
LABEL_469:
          *(_DWORD *)(a1 + 136) = v90;
          goto LABEL_518;
        case 0xAu:
          *(void *)(a1 + 192) |= 8uLL;
          unint64_t v93 = *((void *)this + 1);
          if (v93 > 0xFFFFFFFFFFFFFFF7 || v93 + 8 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(void *)(a1 + 40) = *(void *)(*(void *)this + v93);
          goto LABEL_93;
        case 0xBu:
          *(void *)(a1 + 192) |= 1uLL;
          unint64_t v94 = *((void *)this + 1);
          if (v94 > 0xFFFFFFFFFFFFFFF7 || v94 + 8 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v94);
LABEL_93:
          uint64_t v95 = *((void *)this + 1) + 8;
          goto LABEL_417;
        case 0xCu:
          *(void *)(a1 + 192) |= 4uLL;
          unint64_t v96 = *((void *)this + 1);
          unint64_t v97 = *((void *)this + 2);
          uint64_t v98 = *(void *)this;
          if (v96 <= 0xFFFFFFFFFFFFFFF5 && v96 + 10 <= v97)
          {
            char v99 = 0;
            unsigned int v100 = 0;
            uint64_t v101 = 0;
            do
            {
              unint64_t v102 = v96 + 1;
              *((void *)this + 1) = v96 + 1;
              char v103 = *(unsigned char *)(v98 + v96);
              v101 |= (unint64_t)(v103 & 0x7F) << v99;
              if ((v103 & 0x80) == 0) {
                goto LABEL_472;
              }
              v99 += 7;
              unint64_t v96 = v102;
              BOOL v14 = v100++ > 8;
            }
            while (!v14);
LABEL_309:
            uint64_t v101 = 0;
            goto LABEL_472;
          }
          char v271 = 0;
          unsigned int v272 = 0;
          uint64_t v101 = 0;
          if (v97 <= v96) {
            unint64_t v97 = *((void *)this + 1);
          }
          while (2)
          {
            if (v97 == v96)
            {
              uint64_t v101 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v273 = v96 + 1;
              char v274 = *(unsigned char *)(v98 + v96);
              *((void *)this + 1) = v273;
              v101 |= (unint64_t)(v274 & 0x7F) << v271;
              if (v274 < 0)
              {
                v271 += 7;
                unint64_t v96 = v273;
                BOOL v14 = v272++ > 8;
                if (v14) {
                  goto LABEL_309;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v101 = 0;
              }
            }
            break;
          }
LABEL_472:
          *(void *)(a1 + 24) = v101;
          goto LABEL_518;
        case 0xDu:
          *(void *)(a1 + 192) |= 2uLL;
          unint64_t v104 = *((void *)this + 1);
          unint64_t v105 = *((void *)this + 2);
          uint64_t v106 = *(void *)this;
          if (v104 <= 0xFFFFFFFFFFFFFFF5 && v104 + 10 <= v105)
          {
            char v107 = 0;
            unsigned int v108 = 0;
            uint64_t v109 = 0;
            do
            {
              unint64_t v110 = v104 + 1;
              *((void *)this + 1) = v104 + 1;
              char v111 = *(unsigned char *)(v106 + v104);
              v109 |= (unint64_t)(v111 & 0x7F) << v107;
              if ((v111 & 0x80) == 0) {
                goto LABEL_475;
              }
              v107 += 7;
              unint64_t v104 = v110;
              BOOL v14 = v108++ > 8;
            }
            while (!v14);
LABEL_316:
            uint64_t v109 = 0;
            goto LABEL_475;
          }
          char v275 = 0;
          unsigned int v276 = 0;
          uint64_t v109 = 0;
          if (v105 <= v104) {
            unint64_t v105 = *((void *)this + 1);
          }
          while (2)
          {
            if (v105 == v104)
            {
              uint64_t v109 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v277 = v104 + 1;
              char v278 = *(unsigned char *)(v106 + v104);
              *((void *)this + 1) = v277;
              v109 |= (unint64_t)(v278 & 0x7F) << v275;
              if (v278 < 0)
              {
                v275 += 7;
                unint64_t v104 = v277;
                BOOL v14 = v276++ > 8;
                if (v14) {
                  goto LABEL_316;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v109 = 0;
              }
            }
            break;
          }
LABEL_475:
          *(void *)(a1 + 16) = v109;
          goto LABEL_518;
        case 0xEu:
          *(void *)(a1 + 192) |= 0x80uLL;
          unint64_t v112 = *((void *)this + 1);
          unint64_t v113 = *((void *)this + 2);
          uint64_t v114 = *(void *)this;
          if (v112 <= 0xFFFFFFFFFFFFFFF5 && v112 + 10 <= v113)
          {
            char v115 = 0;
            unsigned int v116 = 0;
            uint64_t v117 = 0;
            do
            {
              unint64_t v118 = v112 + 1;
              *((void *)this + 1) = v112 + 1;
              char v119 = *(unsigned char *)(v114 + v112);
              v117 |= (unint64_t)(v119 & 0x7F) << v115;
              if ((v119 & 0x80) == 0) {
                goto LABEL_478;
              }
              v115 += 7;
              unint64_t v112 = v118;
              BOOL v14 = v116++ > 8;
            }
            while (!v14);
LABEL_323:
            LODWORD(v117) = 0;
            goto LABEL_478;
          }
          char v279 = 0;
          unsigned int v280 = 0;
          uint64_t v117 = 0;
          if (v113 <= v112) {
            unint64_t v113 = *((void *)this + 1);
          }
          while (2)
          {
            if (v113 == v112)
            {
              LODWORD(v117) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v281 = v112 + 1;
              char v282 = *(unsigned char *)(v114 + v112);
              *((void *)this + 1) = v281;
              v117 |= (unint64_t)(v282 & 0x7F) << v279;
              if (v282 < 0)
              {
                v279 += 7;
                unint64_t v112 = v281;
                BOOL v14 = v280++ > 8;
                if (v14) {
                  goto LABEL_323;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v117) = 0;
              }
            }
            break;
          }
LABEL_478:
          *(_DWORD *)(a1 + 68) = v117;
          goto LABEL_518;
        case 0xFu:
          *(void *)(a1 + 192) |= 0x20000000uLL;
          unint64_t v120 = *((void *)this + 1);
          if (v120 > 0xFFFFFFFFFFFFFFFBLL || v120 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 156) = *(_DWORD *)(*(void *)this + v120);
          goto LABEL_416;
        case 0x10u:
          *(void *)(a1 + 192) |= 0x4000000uLL;
          unint64_t v121 = *((void *)this + 1);
          unint64_t v122 = *((void *)this + 2);
          uint64_t v123 = *(void *)this;
          if (v121 <= 0xFFFFFFFFFFFFFFF5 && v121 + 10 <= v122)
          {
            char v124 = 0;
            unsigned int v125 = 0;
            uint64_t v126 = 0;
            do
            {
              unint64_t v127 = v121 + 1;
              *((void *)this + 1) = v121 + 1;
              char v128 = *(unsigned char *)(v123 + v121);
              v126 |= (unint64_t)(v128 & 0x7F) << v124;
              if ((v128 & 0x80) == 0) {
                goto LABEL_481;
              }
              v124 += 7;
              unint64_t v121 = v127;
              BOOL v14 = v125++ > 8;
            }
            while (!v14);
LABEL_330:
            LODWORD(v126) = 0;
            goto LABEL_481;
          }
          char v283 = 0;
          unsigned int v284 = 0;
          uint64_t v126 = 0;
          if (v122 <= v121) {
            unint64_t v122 = *((void *)this + 1);
          }
          while (2)
          {
            if (v122 == v121)
            {
              LODWORD(v126) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v285 = v121 + 1;
              char v286 = *(unsigned char *)(v123 + v121);
              *((void *)this + 1) = v285;
              v126 |= (unint64_t)(v286 & 0x7F) << v283;
              if (v286 < 0)
              {
                v283 += 7;
                unint64_t v121 = v285;
                BOOL v14 = v284++ > 8;
                if (v14) {
                  goto LABEL_330;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v126) = 0;
              }
            }
            break;
          }
LABEL_481:
          *(_DWORD *)(a1 + 144) = v126;
          goto LABEL_518;
        case 0x11u:
          *(void *)(a1 + 192) |= 0x4000uLL;
          unint64_t v129 = *((void *)this + 1);
          if (v129 > 0xFFFFFFFFFFFFFFFBLL || v129 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 96) = *(_DWORD *)(*(void *)this + v129);
          goto LABEL_416;
        case 0x12u:
          *(void *)(a1 + 192) |= 0x400000uLL;
          unint64_t v130 = *((void *)this + 1);
          if (v130 > 0xFFFFFFFFFFFFFFFBLL || v130 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 128) = *(_DWORD *)(*(void *)this + v130);
          goto LABEL_416;
        case 0x13u:
          *(void *)(a1 + 192) |= 0x200000uLL;
          unint64_t v131 = *((void *)this + 1);
          if (v131 > 0xFFFFFFFFFFFFFFFBLL || v131 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 124) = *(_DWORD *)(*(void *)this + v131);
          goto LABEL_416;
        case 0x14u:
          *(void *)(a1 + 192) |= 0x800000uLL;
          unint64_t v132 = *((void *)this + 1);
          if (v132 > 0xFFFFFFFFFFFFFFFBLL || v132 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 132) = *(_DWORD *)(*(void *)this + v132);
          goto LABEL_416;
        case 0x15u:
          *(void *)(a1 + 192) |= 0x10uLL;
          unint64_t v133 = *((void *)this + 1);
          unint64_t v134 = *((void *)this + 2);
          uint64_t v135 = *(void *)this;
          if (v133 <= 0xFFFFFFFFFFFFFFF5 && v133 + 10 <= v134)
          {
            char v136 = 0;
            unsigned int v137 = 0;
            uint64_t v138 = 0;
            do
            {
              unint64_t v139 = v133 + 1;
              *((void *)this + 1) = v133 + 1;
              char v140 = *(unsigned char *)(v135 + v133);
              v138 |= (unint64_t)(v140 & 0x7F) << v136;
              if ((v140 & 0x80) == 0) {
                goto LABEL_484;
              }
              v136 += 7;
              unint64_t v133 = v139;
              BOOL v14 = v137++ > 8;
            }
            while (!v14);
LABEL_337:
            uint64_t v138 = 0;
            goto LABEL_484;
          }
          char v287 = 0;
          unsigned int v288 = 0;
          uint64_t v138 = 0;
          if (v134 <= v133) {
            unint64_t v134 = *((void *)this + 1);
          }
          while (2)
          {
            if (v134 == v133)
            {
              uint64_t v138 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v289 = v133 + 1;
              char v290 = *(unsigned char *)(v135 + v133);
              *((void *)this + 1) = v289;
              v138 |= (unint64_t)(v290 & 0x7F) << v287;
              if (v290 < 0)
              {
                v287 += 7;
                unint64_t v133 = v289;
                BOOL v14 = v288++ > 8;
                if (v14) {
                  goto LABEL_337;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v138 = 0;
              }
            }
            break;
          }
LABEL_484:
          *(void *)(a1 + 48) = v138;
          goto LABEL_518;
        case 0x16u:
          *(void *)(a1 + 192) |= 0x800000000uLL;
          unint64_t v141 = *((void *)this + 1);
          unint64_t v142 = *((void *)this + 2);
          uint64_t v143 = *(void *)this;
          if (v141 <= 0xFFFFFFFFFFFFFFF5 && v141 + 10 <= v142)
          {
            char v144 = 0;
            unsigned int v145 = 0;
            uint64_t v146 = 0;
            do
            {
              unint64_t v147 = v141 + 1;
              *((void *)this + 1) = v141 + 1;
              char v148 = *(unsigned char *)(v143 + v141);
              v146 |= (unint64_t)(v148 & 0x7F) << v144;
              if ((v148 & 0x80) == 0) {
                goto LABEL_487;
              }
              v144 += 7;
              unint64_t v141 = v147;
              BOOL v14 = v145++ > 8;
            }
            while (!v14);
LABEL_344:
            LODWORD(v146) = 0;
            goto LABEL_487;
          }
          char v291 = 0;
          unsigned int v292 = 0;
          uint64_t v146 = 0;
          if (v142 <= v141) {
            unint64_t v142 = *((void *)this + 1);
          }
          while (2)
          {
            if (v142 == v141)
            {
              LODWORD(v146) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v293 = v141 + 1;
              char v294 = *(unsigned char *)(v143 + v141);
              *((void *)this + 1) = v293;
              v146 |= (unint64_t)(v294 & 0x7F) << v291;
              if (v294 < 0)
              {
                v291 += 7;
                unint64_t v141 = v293;
                BOOL v14 = v292++ > 8;
                if (v14) {
                  goto LABEL_344;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v146) = 0;
              }
            }
            break;
          }
LABEL_487:
          *(_DWORD *)(a1 + 180) = v146;
          goto LABEL_518;
        case 0x17u:
          *(void *)(a1 + 192) |= 0x40000000uLL;
          unint64_t v149 = *((void *)this + 1);
          unint64_t v150 = *((void *)this + 2);
          uint64_t v151 = *(void *)this;
          if (v149 <= 0xFFFFFFFFFFFFFFF5 && v149 + 10 <= v150)
          {
            char v152 = 0;
            unsigned int v153 = 0;
            uint64_t v154 = 0;
            do
            {
              unint64_t v155 = v149 + 1;
              *((void *)this + 1) = v149 + 1;
              char v156 = *(unsigned char *)(v151 + v149);
              v154 |= (unint64_t)(v156 & 0x7F) << v152;
              if ((v156 & 0x80) == 0) {
                goto LABEL_490;
              }
              v152 += 7;
              unint64_t v149 = v155;
              BOOL v14 = v153++ > 8;
            }
            while (!v14);
LABEL_351:
            LODWORD(v154) = 0;
            goto LABEL_490;
          }
          char v295 = 0;
          unsigned int v296 = 0;
          uint64_t v154 = 0;
          if (v150 <= v149) {
            unint64_t v150 = *((void *)this + 1);
          }
          while (2)
          {
            if (v150 == v149)
            {
              LODWORD(v154) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v297 = v149 + 1;
              char v298 = *(unsigned char *)(v151 + v149);
              *((void *)this + 1) = v297;
              v154 |= (unint64_t)(v298 & 0x7F) << v295;
              if (v298 < 0)
              {
                v295 += 7;
                unint64_t v149 = v297;
                BOOL v14 = v296++ > 8;
                if (v14) {
                  goto LABEL_351;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v154) = 0;
              }
            }
            break;
          }
LABEL_490:
          *(_DWORD *)(a1 + 160) = v154;
          goto LABEL_518;
        case 0x18u:
          *(void *)(a1 + 192) |= 0x100000uLL;
          unint64_t v157 = *((void *)this + 1);
          unint64_t v158 = *((void *)this + 2);
          uint64_t v159 = *(void *)this;
          if (v157 <= 0xFFFFFFFFFFFFFFF5 && v157 + 10 <= v158)
          {
            char v160 = 0;
            unsigned int v161 = 0;
            uint64_t v162 = 0;
            do
            {
              unint64_t v163 = v157 + 1;
              *((void *)this + 1) = v157 + 1;
              char v164 = *(unsigned char *)(v159 + v157);
              v162 |= (unint64_t)(v164 & 0x7F) << v160;
              if ((v164 & 0x80) == 0) {
                goto LABEL_493;
              }
              v160 += 7;
              unint64_t v157 = v163;
              BOOL v14 = v161++ > 8;
            }
            while (!v14);
LABEL_358:
            LODWORD(v162) = 0;
            goto LABEL_493;
          }
          char v299 = 0;
          unsigned int v300 = 0;
          uint64_t v162 = 0;
          if (v158 <= v157) {
            unint64_t v158 = *((void *)this + 1);
          }
          while (2)
          {
            if (v158 == v157)
            {
              LODWORD(v162) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v301 = v157 + 1;
              char v302 = *(unsigned char *)(v159 + v157);
              *((void *)this + 1) = v301;
              v162 |= (unint64_t)(v302 & 0x7F) << v299;
              if (v302 < 0)
              {
                v299 += 7;
                unint64_t v157 = v301;
                BOOL v14 = v300++ > 8;
                if (v14) {
                  goto LABEL_358;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v162) = 0;
              }
            }
            break;
          }
LABEL_493:
          *(_DWORD *)(a1 + 120) = v162;
          goto LABEL_518;
        case 0x19u:
          *(void *)(a1 + 192) |= 0x80000uLL;
          unint64_t v165 = *((void *)this + 1);
          unint64_t v166 = *((void *)this + 2);
          uint64_t v167 = *(void *)this;
          if (v165 <= 0xFFFFFFFFFFFFFFF5 && v165 + 10 <= v166)
          {
            char v168 = 0;
            unsigned int v169 = 0;
            uint64_t v170 = 0;
            do
            {
              unint64_t v171 = v165 + 1;
              *((void *)this + 1) = v165 + 1;
              char v172 = *(unsigned char *)(v167 + v165);
              v170 |= (unint64_t)(v172 & 0x7F) << v168;
              if ((v172 & 0x80) == 0) {
                goto LABEL_496;
              }
              v168 += 7;
              unint64_t v165 = v171;
              BOOL v14 = v169++ > 8;
            }
            while (!v14);
LABEL_365:
            LODWORD(v170) = 0;
            goto LABEL_496;
          }
          char v303 = 0;
          unsigned int v304 = 0;
          uint64_t v170 = 0;
          if (v166 <= v165) {
            unint64_t v166 = *((void *)this + 1);
          }
          while (2)
          {
            if (v166 == v165)
            {
              LODWORD(v170) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v305 = v165 + 1;
              char v306 = *(unsigned char *)(v167 + v165);
              *((void *)this + 1) = v305;
              v170 |= (unint64_t)(v306 & 0x7F) << v303;
              if (v306 < 0)
              {
                v303 += 7;
                unint64_t v165 = v305;
                BOOL v14 = v304++ > 8;
                if (v14) {
                  goto LABEL_365;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v170) = 0;
              }
            }
            break;
          }
LABEL_496:
          *(_DWORD *)(a1 + 116) = v170;
          goto LABEL_518;
        case 0x1Au:
          *(void *)(a1 + 192) |= 0x40000uLL;
          unint64_t v173 = *((void *)this + 1);
          unint64_t v174 = *((void *)this + 2);
          uint64_t v175 = *(void *)this;
          if (v173 <= 0xFFFFFFFFFFFFFFF5 && v173 + 10 <= v174)
          {
            char v176 = 0;
            unsigned int v177 = 0;
            uint64_t v178 = 0;
            do
            {
              unint64_t v179 = v173 + 1;
              *((void *)this + 1) = v173 + 1;
              char v180 = *(unsigned char *)(v175 + v173);
              v178 |= (unint64_t)(v180 & 0x7F) << v176;
              if ((v180 & 0x80) == 0) {
                goto LABEL_499;
              }
              v176 += 7;
              unint64_t v173 = v179;
              BOOL v14 = v177++ > 8;
            }
            while (!v14);
LABEL_372:
            LODWORD(v178) = 0;
            goto LABEL_499;
          }
          char v307 = 0;
          unsigned int v308 = 0;
          uint64_t v178 = 0;
          if (v174 <= v173) {
            unint64_t v174 = *((void *)this + 1);
          }
          while (2)
          {
            if (v174 == v173)
            {
              LODWORD(v178) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v309 = v173 + 1;
              char v310 = *(unsigned char *)(v175 + v173);
              *((void *)this + 1) = v309;
              v178 |= (unint64_t)(v310 & 0x7F) << v307;
              if (v310 < 0)
              {
                v307 += 7;
                unint64_t v173 = v309;
                BOOL v14 = v308++ > 8;
                if (v14) {
                  goto LABEL_372;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v178) = 0;
              }
            }
            break;
          }
LABEL_499:
          *(_DWORD *)(a1 + 112) = v178;
          goto LABEL_518;
        case 0x1Bu:
          operator new();
        case 0x1Cu:
          *(void *)(a1 + 192) |= 0x400uLL;
          unint64_t v181 = *((void *)this + 1);
          if (v181 > 0xFFFFFFFFFFFFFFFBLL || v181 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 80) = *(_DWORD *)(*(void *)this + v181);
          goto LABEL_416;
        case 0x1Du:
          *(void *)(a1 + 192) |= 0x200uLL;
          unint64_t v182 = *((void *)this + 1);
          if (v182 > 0xFFFFFFFFFFFFFFFBLL || v182 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 76) = *(_DWORD *)(*(void *)this + v182);
          goto LABEL_416;
        case 0x1Eu:
          *(void *)(a1 + 192) |= 0x2000000uLL;
          unint64_t v183 = *((void *)this + 1);
          if (v183 > 0xFFFFFFFFFFFFFFFBLL || v183 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 140) = *(_DWORD *)(*(void *)this + v183);
          goto LABEL_416;
        case 0x1Fu:
          *(void *)(a1 + 192) |= 0x1000000000uLL;
          unint64_t v184 = *((void *)this + 1);
          unint64_t v185 = *((void *)this + 2);
          uint64_t v186 = *(void *)this;
          if (v184 <= 0xFFFFFFFFFFFFFFF5 && v184 + 10 <= v185)
          {
            char v187 = 0;
            unsigned int v188 = 0;
            uint64_t v189 = 0;
            do
            {
              unint64_t v190 = v184 + 1;
              *((void *)this + 1) = v184 + 1;
              char v191 = *(unsigned char *)(v186 + v184);
              v189 |= (unint64_t)(v191 & 0x7F) << v187;
              if ((v191 & 0x80) == 0) {
                goto LABEL_502;
              }
              v187 += 7;
              unint64_t v184 = v190;
              BOOL v14 = v188++ > 8;
            }
            while (!v14);
LABEL_379:
            LODWORD(v189) = 0;
            goto LABEL_502;
          }
          char v311 = 0;
          unsigned int v312 = 0;
          uint64_t v189 = 0;
          if (v185 <= v184) {
            unint64_t v185 = *((void *)this + 1);
          }
          while (2)
          {
            if (v185 == v184)
            {
              LODWORD(v189) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v313 = v184 + 1;
              char v314 = *(unsigned char *)(v186 + v184);
              *((void *)this + 1) = v313;
              v189 |= (unint64_t)(v314 & 0x7F) << v311;
              if (v314 < 0)
              {
                v311 += 7;
                unint64_t v184 = v313;
                BOOL v14 = v312++ > 8;
                if (v14) {
                  goto LABEL_379;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v189) = 0;
              }
            }
            break;
          }
LABEL_502:
          *(_DWORD *)(a1 + 184) = v189;
          goto LABEL_518;
        case 0x20u:
          *(void *)(a1 + 192) |= 0x20uLL;
          unint64_t v192 = *((void *)this + 1);
          unint64_t v193 = *((void *)this + 2);
          uint64_t v194 = *(void *)this;
          if (v192 <= 0xFFFFFFFFFFFFFFF5 && v192 + 10 <= v193)
          {
            char v195 = 0;
            unsigned int v196 = 0;
            uint64_t v197 = 0;
            do
            {
              unint64_t v198 = v192 + 1;
              *((void *)this + 1) = v192 + 1;
              char v199 = *(unsigned char *)(v194 + v192);
              v197 |= (unint64_t)(v199 & 0x7F) << v195;
              if ((v199 & 0x80) == 0) {
                goto LABEL_505;
              }
              v195 += 7;
              unint64_t v192 = v198;
              BOOL v14 = v196++ > 8;
            }
            while (!v14);
LABEL_386:
            uint64_t v197 = 0;
            goto LABEL_505;
          }
          char v315 = 0;
          unsigned int v316 = 0;
          uint64_t v197 = 0;
          if (v193 <= v192) {
            unint64_t v193 = *((void *)this + 1);
          }
          while (2)
          {
            if (v193 == v192)
            {
              uint64_t v197 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v317 = v192 + 1;
              char v318 = *(unsigned char *)(v194 + v192);
              *((void *)this + 1) = v317;
              v197 |= (unint64_t)(v318 & 0x7F) << v315;
              if (v318 < 0)
              {
                v315 += 7;
                unint64_t v192 = v317;
                BOOL v14 = v316++ > 8;
                if (v14) {
                  goto LABEL_386;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v197 = 0;
              }
            }
            break;
          }
LABEL_505:
          *(void *)(a1 + 56) = v197;
          goto LABEL_518;
        case 0x21u:
          *(void *)(a1 + 192) |= 0x10000000uLL;
          unint64_t v200 = *((void *)this + 1);
          unint64_t v201 = *((void *)this + 2);
          uint64_t v202 = *(void *)this;
          if (v200 <= 0xFFFFFFFFFFFFFFF5 && v200 + 10 <= v201)
          {
            char v203 = 0;
            unsigned int v204 = 0;
            uint64_t v205 = 0;
            do
            {
              unint64_t v206 = v200 + 1;
              *((void *)this + 1) = v200 + 1;
              char v207 = *(unsigned char *)(v202 + v200);
              v205 |= (unint64_t)(v207 & 0x7F) << v203;
              if ((v207 & 0x80) == 0) {
                goto LABEL_508;
              }
              v203 += 7;
              unint64_t v200 = v206;
              BOOL v14 = v204++ > 8;
            }
            while (!v14);
LABEL_393:
            LODWORD(v205) = 0;
            goto LABEL_508;
          }
          char v319 = 0;
          unsigned int v320 = 0;
          uint64_t v205 = 0;
          if (v201 <= v200) {
            unint64_t v201 = *((void *)this + 1);
          }
          while (2)
          {
            if (v201 == v200)
            {
              LODWORD(v205) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v321 = v200 + 1;
              char v322 = *(unsigned char *)(v202 + v200);
              *((void *)this + 1) = v321;
              v205 |= (unint64_t)(v322 & 0x7F) << v319;
              if (v322 < 0)
              {
                v319 += 7;
                unint64_t v200 = v321;
                BOOL v14 = v320++ > 8;
                if (v14) {
                  goto LABEL_393;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v205) = 0;
              }
            }
            break;
          }
LABEL_508:
          *(_DWORD *)(a1 + 152) = v205;
          goto LABEL_518;
        case 0x22u:
          *(void *)(a1 + 192) |= 0x2000000000uLL;
          unint64_t v208 = *((void *)this + 1);
          unint64_t v209 = *((void *)this + 2);
          uint64_t v210 = *(void *)this;
          if (v208 <= 0xFFFFFFFFFFFFFFF5 && v208 + 10 <= v209)
          {
            char v211 = 0;
            unsigned int v212 = 0;
            uint64_t v213 = 0;
            do
            {
              unint64_t v214 = v208 + 1;
              *((void *)this + 1) = v208 + 1;
              char v215 = *(unsigned char *)(v210 + v208);
              v213 |= (unint64_t)(v215 & 0x7F) << v211;
              if ((v215 & 0x80) == 0) {
                goto LABEL_511;
              }
              v211 += 7;
              unint64_t v208 = v214;
              BOOL v14 = v212++ > 8;
            }
            while (!v14);
LABEL_400:
            LODWORD(v213) = 0;
            goto LABEL_511;
          }
          char v323 = 0;
          unsigned int v324 = 0;
          uint64_t v213 = 0;
          if (v209 <= v208) {
            unint64_t v209 = *((void *)this + 1);
          }
          while (2)
          {
            if (v209 == v208)
            {
              LODWORD(v213) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v325 = v208 + 1;
              char v326 = *(unsigned char *)(v210 + v208);
              *((void *)this + 1) = v325;
              v213 |= (unint64_t)(v326 & 0x7F) << v323;
              if (v326 < 0)
              {
                v323 += 7;
                unint64_t v208 = v325;
                BOOL v14 = v324++ > 8;
                if (v14) {
                  goto LABEL_400;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v213) = 0;
              }
            }
            break;
          }
LABEL_511:
          *(_DWORD *)(a1 + 188) = v213;
          goto LABEL_518;
        case 0x23u:
          *(void *)(a1 + 192) |= 0x40uLL;
          unint64_t v216 = *((void *)this + 1);
          unint64_t v217 = *((void *)this + 2);
          uint64_t v218 = *(void *)this;
          if (v216 <= 0xFFFFFFFFFFFFFFF5 && v216 + 10 <= v217)
          {
            char v219 = 0;
            unsigned int v220 = 0;
            uint64_t v221 = 0;
            do
            {
              unint64_t v222 = v216 + 1;
              *((void *)this + 1) = v216 + 1;
              char v223 = *(unsigned char *)(v218 + v216);
              v221 |= (unint64_t)(v223 & 0x7F) << v219;
              if ((v223 & 0x80) == 0) {
                goto LABEL_514;
              }
              v219 += 7;
              unint64_t v216 = v222;
              BOOL v14 = v220++ > 8;
            }
            while (!v14);
LABEL_407:
            LODWORD(v221) = 0;
            goto LABEL_514;
          }
          char v327 = 0;
          unsigned int v328 = 0;
          uint64_t v221 = 0;
          if (v217 <= v216) {
            unint64_t v217 = *((void *)this + 1);
          }
          while (2)
          {
            if (v217 == v216)
            {
              LODWORD(v221) = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v329 = v216 + 1;
              char v330 = *(unsigned char *)(v218 + v216);
              *((void *)this + 1) = v329;
              v221 |= (unint64_t)(v330 & 0x7F) << v327;
              if (v330 < 0)
              {
                v327 += 7;
                unint64_t v216 = v329;
                BOOL v14 = v328++ > 8;
                if (v14) {
                  goto LABEL_407;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                LODWORD(v221) = 0;
              }
            }
            break;
          }
LABEL_514:
          *(_DWORD *)(a1 + 64) = v221;
          goto LABEL_518;
        case 0x24u:
          *(void *)(a1 + 192) |= 0x80000000uLL;
          unint64_t v224 = *((void *)this + 1);
          if (v224 > 0xFFFFFFFFFFFFFFFBLL || v224 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 164) = *(_DWORD *)(*(void *)this + v224);
          goto LABEL_416;
        case 0x25u:
          *(void *)(a1 + 192) |= (unint64_t)&_mh_execute_header;
          unint64_t v225 = *((void *)this + 1);
          if (v225 > 0xFFFFFFFFFFFFFFFBLL || v225 + 4 > *((void *)this + 2)) {
            goto LABEL_232;
          }
          *(_DWORD *)(a1 + 168) = *(_DWORD *)(*(void *)this + v225);
          goto LABEL_416;
        case 0x26u:
          *(void *)(a1 + 192) |= 0x200000000uLL;
          unint64_t v226 = *((void *)this + 1);
          if (v226 <= 0xFFFFFFFFFFFFFFFBLL && v226 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 172) = *(_DWORD *)(*(void *)this + v226);
LABEL_416:
            uint64_t v95 = *((void *)this + 1) + 4;
LABEL_417:
            *((void *)this + 1) = v95;
          }
          else
          {
LABEL_232:
            *((unsigned char *)this + 24) = 1;
          }
          goto LABEL_518;
        case 0x27u:
          *(void *)(a1 + 192) |= 0x400000000uLL;
          unint64_t v227 = *((void *)this + 1);
          unint64_t v228 = *((void *)this + 2);
          uint64_t v229 = *(void *)this;
          if (v227 <= 0xFFFFFFFFFFFFFFF5 && v227 + 10 <= v228)
          {
            char v230 = 0;
            unsigned int v231 = 0;
            uint64_t v232 = 0;
            do
            {
              unint64_t v233 = v227 + 1;
              *((void *)this + 1) = v227 + 1;
              char v234 = *(unsigned char *)(v229 + v227);
              v232 |= (unint64_t)(v234 & 0x7F) << v230;
              if ((v234 & 0x80) == 0) {
                goto LABEL_517;
              }
              v230 += 7;
              unint64_t v227 = v233;
              BOOL v14 = v231++ > 8;
            }
            while (!v14);
LABEL_414:
            LODWORD(v232) = 0;
            goto LABEL_517;
          }
          char v331 = 0;
          unsigned int v332 = 0;
          uint64_t v232 = 0;
          if (v228 <= v227) {
            unint64_t v228 = *((void *)this + 1);
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          goto LABEL_518;
      }
      while (1)
      {
        if (v228 == v227)
        {
          LODWORD(v232) = 0;
          *((unsigned char *)this + 24) = 1;
          goto LABEL_517;
        }
        unint64_t v333 = v227 + 1;
        char v334 = *(unsigned char *)(v229 + v227);
        *((void *)this + 1) = v333;
        v232 |= (unint64_t)(v334 & 0x7F) << v331;
        if ((v334 & 0x80) == 0) {
          break;
        }
        v331 += 7;
        unint64_t v227 = v333;
        BOOL v14 = v332++ > 8;
        if (v14) {
          goto LABEL_414;
        }
      }
      if (*((unsigned char *)this + 24)) {
        LODWORD(v232) = 0;
      }
LABEL_517:
      *(_DWORD *)(a1 + 176) = v232;
LABEL_518:
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101778078(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  uint64_t v4 = *(void *)(result + 192);
  if ((v4 & 0x8000) != 0)
  {
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(result + 100), 1u);
    uint64_t v4 = *(void *)(v3 + 192);
    if ((v4 & 0x100) == 0)
    {
LABEL_3:
      if ((v4 & 0x10000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_45;
    }
  }
  else if ((v4 & 0x100) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 72), 2u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x10000) == 0)
  {
LABEL_4:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 104), 3u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x20000) == 0)
  {
LABEL_5:
    if ((v4 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 108), 4u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x800) == 0)
  {
LABEL_6:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 84), 5u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_7:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 148), 6u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x2000) == 0)
  {
LABEL_8:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 92), 7u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x1000) == 0)
  {
LABEL_9:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 88), 8u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_10:
    if ((v4 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 136), 9u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 8) == 0)
  {
LABEL_11:
    if ((v4 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 40), 0xAu);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 1) == 0)
  {
LABEL_12:
    if ((v4 & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = PB::Writer::write(this, *(double *)(v3 + 8), 0xBu);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 4) == 0)
  {
LABEL_13:
    if ((v4 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 24), 0xCu);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 2) == 0)
  {
LABEL_14:
    if ((v4 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 16), 0xDu);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x80) == 0)
  {
LABEL_15:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 68), 0xEu);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 156), 0xFu);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 144), 0x10u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x4000) == 0)
  {
LABEL_18:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_60;
  }
LABEL_59:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 96), 0x11u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x400000) == 0)
  {
LABEL_19:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 128), 0x12u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x200000) == 0)
  {
LABEL_20:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 124), 0x13u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x800000) == 0)
  {
LABEL_21:
    if ((v4 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 132), 0x14u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x10) == 0)
  {
LABEL_22:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 48), 0x15u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 180), 0x16u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_24:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 160), 0x17u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x100000) == 0)
  {
LABEL_25:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 120), 0x18u);
  uint64_t v4 = *(void *)(v3 + 192);
  if ((v4 & 0x80000) == 0)
  {
LABEL_26:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_67:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 116), 0x19u);
  if ((*(void *)(v3 + 192) & 0x40000) != 0) {
LABEL_27:
  }
    uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 112), 0x1Au);
LABEL_28:
  uint64_t v5 = *(const PB::Base **)(v3 + 32);
  if (v5) {
    uint64_t result = PB::Writer::writeSubmessage(this, v5, 0x1Bu);
  }
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x400) != 0)
  {
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 80), 0x1Cu);
    uint64_t v6 = *(void *)(v3 + 192);
    if ((v6 & 0x200) == 0)
    {
LABEL_32:
      if ((v6 & 0x2000000) == 0) {
        goto LABEL_33;
      }
      goto LABEL_71;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_32;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 76), 0x1Du);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 140), 0x1Eu);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x1000000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x20) == 0) {
      goto LABEL_35;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 184), 0x1Fu);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x20) == 0)
  {
LABEL_35:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t result = PB::Writer::writeVarInt(this, *(void *)(v3 + 56), 0x20u);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 152), 0x21u);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x2000000000) == 0)
  {
LABEL_37:
    if ((v6 & 0x40) == 0) {
      goto LABEL_38;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 188), 0x22u);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x40) == 0)
  {
LABEL_38:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t result = PB::Writer::writeVarInt(this, *(_DWORD *)(v3 + 64), 0x23u);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x80000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 164), 0x24u);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x100000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_41;
    }
LABEL_79:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 172), 0x26u);
    if ((*(void *)(v3 + 192) & 0x400000000) == 0) {
      return result;
    }
    goto LABEL_80;
  }
LABEL_78:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 168), 0x25u);
  uint64_t v6 = *(void *)(v3 + 192);
  if ((v6 & 0x200000000) != 0) {
    goto LABEL_79;
  }
LABEL_41:
  if ((v6 & 0x400000000) == 0) {
    return result;
  }
LABEL_80:
  unsigned int v7 = *(_DWORD *)(v3 + 176);

  return PB::Writer::writeVarInt(this, v7, 0x27u);
}

uint64_t sub_1017784EC(uint64_t result)
{
  if (!*(void *)(result + 32)) {
    operator new();
  }
  return result;
}

uint64_t sub_10177857C(uint64_t result)
{
  *(void *)uint64_t result = &off_10233A1B8;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

void sub_1017785A4(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_1017785DC(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_10233A1B8;
  *(_DWORD *)(result + 12) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    char v2 = *(unsigned char *)(a2 + 8);
    *(unsigned char *)(result + 12) = 1;
    *(unsigned char *)(result + 8) = v2;
  }
  return result;
}

uint64_t sub_101778618(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "isWifiAssociated", *(unsigned char *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101778678(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
        if (v2 >= v3)
        {
          BOOL v21 = 0;
          *((unsigned char *)this + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)this + v2++);
          *((void *)this + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *(unsigned char *)(a1 + 8) = v21;
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
        unint64_t v3 = *((void *)this + 2);
      }
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101778808(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::write(this, *(unsigned char *)(result + 8), 1u);
  }
  return result;
}

void *sub_101778828(void *result)
{
  *uint64_t result = &off_10233A1F0;
  result[1] = 0;
  return result;
}

void sub_101778848(PB::Base *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &off_10233A1F0;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  PB::Base::~Base(this);
}

void sub_1017788C8(PB::Base *a1)
{
  sub_101778848(a1);

  operator delete();
}

void *sub_101778900(void *result, uint64_t a2)
{
  *uint64_t result = &off_10233A1F0;
  result[1] = 0;
  if (*(void *)(a2 + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_1017789A8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, this, "super");
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101778A24(int a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        if (v9++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
      uint64_t result = PB::Reader::skip(this, v10 >> 3, v10 & 7, 0);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)this + 1);
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)this + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      if (v15++ >= 9)
      {
LABEL_19:
        unint64_t v10 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101778C40(uint64_t result, PB::Writer *this)
{
  unint64_t v2 = *(const PB::Base **)(result + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(this, v2, 1u);
  }
  return result;
}

uint64_t sub_101778C5C(uint64_t result)
{
  if (!*(void *)(result + 8)) {
    operator new();
  }
  return result;
}

uint64_t sub_101778D0C(uint64_t result)
{
  *(void *)uint64_t result = &off_10233A228;
  *(_DWORD *)(result + 12) = 0;
  return result;
}

void sub_101778D34(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_101778D6C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_10233A228;
  *(_DWORD *)(a1 + 12) = 0;
  if (*(unsigned char *)(a2 + 12))
  {
    float result = *(float *)(a2 + 8);
    *(unsigned char *)(a1 + 12) = 1;
    *(float *)(a1 + 8) = result;
  }
  return result;
}

uint64_t sub_101778DA8(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  if (*(unsigned char *)(a1 + 12)) {
    PB::TextFormatter::format(this, "walkingVariable01", *(float *)(a1 + 8));
  }

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101778E08(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *(unsigned char *)(a1 + 12) |= 1u;
        unint64_t v2 = *((void *)this + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
        {
          *(_DWORD *)(a1 + 8) = *(_DWORD *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 4;
          *((void *)this + 1) = v2;
        }
        else
        {
          *((unsigned char *)this + 24) = 1;
        }
      }
      else
      {
        uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)this + 1);
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101778FA4(uint64_t result, PB::Writer *this)
{
  if (*(unsigned char *)(result + 12)) {
    return PB::Writer::write(this, *(float *)(result + 8), 1u);
  }
  return result;
}

double sub_101778FC0(uint64_t a1)
{
  *(void *)a1 = &off_10233A260;
  *(_DWORD *)(a1 + 76) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return result;
}

void sub_101778FF4(PB::Base *this)
{
  *(void *)this = &off_10233A260;
  unint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  unint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }

  PB::Base::~Base(this);
}

void sub_101779068(PB::Base *a1)
{
  sub_101778FF4(a1);

  operator delete();
}

uint64_t sub_1017790A0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_10233A260;
  *(_OWORD *)(a1 + 8) = 0u;
  int v4 = (char *)(a1 + 8);
  *(_DWORD *)(a1 + 76) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  char v5 = *(unsigned char *)(a2 + 76);
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    char v6 = 2;
    *(unsigned char *)(a1 + 76) = 2;
    *(void *)(a1 + 64) = v7;
    char v5 = *(unsigned char *)(a2 + 76);
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v6 = 0;
  if (*(unsigned char *)(a2 + 76))
  {
LABEL_5:
    uint64_t v8 = *(void *)(a2 + 56);
    v6 |= 1u;
    *(unsigned char *)(a1 + 76) = v6;
    *(void *)(a1 + 56) = v8;
    char v5 = *(unsigned char *)(a2 + 76);
  }
LABEL_6:
  if ((v5 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a2 + 72);
    *(unsigned char *)(a1 + 76) = v6 | 4;
    *(_DWORD *)(a1 + 72) = v9;
  }
  if (a1 != a2)
  {
    sub_1000FB43C((char *)(a1 + 32), *(char **)(a2 + 32), *(void *)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 2);
    sub_1000FB43C(v4, *(char **)(a2 + 8), *(void *)(a2 + 16), (uint64_t)(*(void *)(a2 + 16) - *(void *)(a2 + 8)) >> 2);
  }
  return a1;
}

uint64_t sub_101779190(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(float **)(a1 + 8);
  char v6 = *(float **)(a1 + 16);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(this, "accel", v7);
  }
  if (*(unsigned char *)(a1 + 76)) {
    PB::TextFormatter::format(this, "adjustedTimestamp", *(double *)(a1 + 56));
  }
  uint64_t v8 = *(float **)(a1 + 32);
  int v9 = *(float **)(a1 + 40);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(this, "gravity", v10);
  }
  char v11 = *(unsigned char *)(a1 + 76);
  if ((v11 & 4) != 0)
  {
    PB::TextFormatter::format(this, "rawProjectedSignal", *(float *)(a1 + 72));
    char v11 = *(unsigned char *)(a1 + 76);
  }
  if ((v11 & 2) != 0) {
    PB::TextFormatter::format(this, "timestamp", *(void *)(a1 + 64));
  }

  return PB::TextFormatter::endObject(this);
}

BOOL sub_101779290(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    uint64_t v8 = (void **)(a1 + 8);
    uint64_t v9 = a1 + 24;
    float v10 = (void **)(a1 + 32);
    uint64_t v11 = a1 + 48;
    while (1)
    {
      uint64_t v12 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v13 = 0;
      unsigned int v14 = 0;
      unint64_t v15 = 0;
      while (1)
      {
        unint64_t v16 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v17 = *(unsigned char *)(v12 + v2);
        v15 |= (unint64_t)(v17 & 0x7F) << v13;
        if ((v17 & 0x80) == 0) {
          break;
        }
        v13 += 7;
        unint64_t v2 = v16;
        BOOL v18 = v14++ > 8;
        if (v18) {
          goto LABEL_20;
        }
      }
LABEL_21:
      int v24 = v15 & 7;
      if (v24 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v15 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 76) |= 2u;
          unint64_t v25 = *((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
          uint64_t v27 = *(void *)this;
          if (v25 <= 0xFFFFFFFFFFFFFFF5 && v25 + 10 <= v26)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v30 = 0;
            do
            {
              unint64_t v31 = v25 + 1;
              *((void *)this + 1) = v25 + 1;
              char v32 = *(unsigned char *)(v27 + v25);
              v30 |= (unint64_t)(v32 & 0x7F) << v28;
              if ((v32 & 0x80) == 0) {
                goto LABEL_118;
              }
              v28 += 7;
              unint64_t v25 = v31;
              BOOL v18 = v29++ > 8;
            }
            while (!v18);
LABEL_92:
            uint64_t v30 = 0;
            goto LABEL_118;
          }
          char v64 = 0;
          unsigned int v65 = 0;
          uint64_t v30 = 0;
          if (v26 <= v25) {
            unint64_t v26 = *((void *)this + 1);
          }
          while (2)
          {
            if (v26 == v25)
            {
              uint64_t v30 = 0;
              *((unsigned char *)this + 24) = 1;
            }
            else
            {
              unint64_t v66 = v25 + 1;
              char v67 = *(unsigned char *)(v27 + v25);
              *((void *)this + 1) = v66;
              v30 |= (unint64_t)(v67 & 0x7F) << v64;
              if (v67 < 0)
              {
                v64 += 7;
                unint64_t v25 = v66;
                BOOL v18 = v65++ > 8;
                if (v18) {
                  goto LABEL_92;
                }
                continue;
              }
              if (*((unsigned char *)this + 24)) {
                uint64_t v30 = 0;
              }
            }
            break;
          }
LABEL_118:
          *(void *)(a1 + 64) = v30;
          goto LABEL_139;
        case 2u:
          *(unsigned char *)(a1 + 76) |= 1u;
          unint64_t v33 = *((void *)this + 1);
          if (v33 > 0xFFFFFFFFFFFFFFF7 || v33 + 8 > *((void *)this + 2)) {
            goto LABEL_135;
          }
          *(void *)(a1 + 56) = *(void *)(*(void *)this + v33);
          uint64_t v34 = *((void *)this + 1) + 8;
          goto LABEL_138;
        case 3u:
          *(unsigned char *)(a1 + 76) |= 4u;
          unint64_t v35 = *((void *)this + 1);
          if (v35 > 0xFFFFFFFFFFFFFFFBLL || v35 + 4 > *((void *)this + 2)) {
            goto LABEL_135;
          }
          *(_DWORD *)(a1 + 72) = *(_DWORD *)(*(void *)this + v35);
          goto LABEL_137;
        case 4u:
          if (v24 != 2)
          {
            unint64_t v69 = *(char **)(a1 + 40);
            unint64_t v68 = *(void *)(a1 + 48);
            if ((unint64_t)v69 >= v68)
            {
              unsigned int v73 = (char *)*v10;
              uint64_t v74 = (v69 - (unsigned char *)*v10) >> 2;
              unint64_t v75 = v74 + 1;
              if ((unint64_t)(v74 + 1) >> 62) {
LABEL_149:
              }
                sub_1001D7FD4();
              uint64_t v76 = v68 - (void)v73;
              if (v76 >> 1 > v75) {
                unint64_t v75 = v76 >> 1;
              }
              if ((unint64_t)v76 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v77 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v77 = v75;
              }
              if (v77)
              {
                unint64_t v78 = (char *)sub_10017EA34(v11, v77);
                unsigned int v73 = *(char **)(a1 + 32);
                unint64_t v69 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v78 = 0;
              }
              unint64_t v85 = &v78[4 * v74];
              *(_DWORD *)unint64_t v85 = 0;
              unint64_t v70 = v85 + 4;
              while (v69 != v73)
              {
                int v86 = *((_DWORD *)v69 - 1);
                v69 -= 4;
                *((_DWORD *)v85 - 1) = v86;
                v85 -= 4;
              }
              *(void *)(a1 + 32) = v85;
              *(void *)(a1 + 40) = v70;
              *(void *)(a1 + 48) = &v78[4 * v77];
              if (v73) {
                operator delete(v73);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v69 = 0;
              unint64_t v70 = v69 + 4;
            }
            *(void *)(a1 + 40) = v70;
            goto LABEL_133;
          }
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v36 = *((void *)this + 1);
          unint64_t v37 = *((void *)this + 2);
          while (v36 < v37 && !*((unsigned char *)this + 24))
          {
            uint64_t v39 = *(char **)(a1 + 40);
            unint64_t v38 = *(void *)(a1 + 48);
            if ((unint64_t)v39 >= v38)
            {
              unsigned int v41 = (char *)*v10;
              uint64_t v42 = (v39 - (unsigned char *)*v10) >> 2;
              unint64_t v43 = v42 + 1;
              if ((unint64_t)(v42 + 1) >> 62) {
                goto LABEL_149;
              }
              uint64_t v44 = v38 - (void)v41;
              if (v44 >> 1 > v43) {
                unint64_t v43 = v44 >> 1;
              }
              if ((unint64_t)v44 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v45 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v45 = v43;
              }
              if (v45)
              {
                unint64_t v46 = (char *)sub_10017EA34(v11, v45);
                unsigned int v41 = *(char **)(a1 + 32);
                uint64_t v39 = *(char **)(a1 + 40);
              }
              else
              {
                unint64_t v46 = 0;
              }
              uint64_t v47 = &v46[4 * v42];
              *(_DWORD *)uint64_t v47 = 0;
              char v40 = v47 + 4;
              while (v39 != v41)
              {
                int v48 = *((_DWORD *)v39 - 1);
                v39 -= 4;
                *((_DWORD *)v47 - 1) = v48;
                v47 -= 4;
              }
              *(void *)(a1 + 32) = v47;
              *(void *)(a1 + 40) = v40;
              *(void *)(a1 + 48) = &v46[4 * v45];
              if (v41) {
                operator delete(v41);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v39 = 0;
              char v40 = v39 + 4;
            }
            *(void *)(a1 + 40) = v40;
            unint64_t v49 = *((void *)this + 1);
            if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)this + 2)) {
              goto LABEL_97;
            }
            *(v40 - 1) = *(_DWORD *)(*(void *)this + v49);
            unint64_t v37 = *((void *)this + 2);
            unint64_t v36 = *((void *)this + 1) + 4;
            *((void *)this + 1) = v36;
          }
          goto LABEL_98;
        case 5u:
          if (v24 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v50 = *((void *)this + 1);
            unint64_t v51 = *((void *)this + 2);
            while (v50 < v51 && !*((unsigned char *)this + 24))
            {
              unint64_t v53 = *(char **)(a1 + 16);
              unint64_t v52 = *(void *)(a1 + 24);
              if ((unint64_t)v53 >= v52)
              {
                uint64_t v55 = (char *)*v8;
                uint64_t v56 = (v53 - (unsigned char *)*v8) >> 2;
                unint64_t v57 = v56 + 1;
                if ((unint64_t)(v56 + 1) >> 62) {
                  goto LABEL_150;
                }
                uint64_t v58 = v52 - (void)v55;
                if (v58 >> 1 > v57) {
                  unint64_t v57 = v58 >> 1;
                }
                if ((unint64_t)v58 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v59 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v59 = v57;
                }
                if (v59)
                {
                  char v60 = (char *)sub_10017EA34(v9, v59);
                  uint64_t v55 = *(char **)(a1 + 8);
                  unint64_t v53 = *(char **)(a1 + 16);
                }
                else
                {
                  char v60 = 0;
                }
                unint64_t v61 = &v60[4 * v56];
                *(_DWORD *)unint64_t v61 = 0;
                unint64_t v54 = v61 + 4;
                while (v53 != v55)
                {
                  int v62 = *((_DWORD *)v53 - 1);
                  v53 -= 4;
                  *((_DWORD *)v61 - 1) = v62;
                  v61 -= 4;
                }
                *(void *)(a1 + 8) = v61;
                *(void *)(a1 + 16) = v54;
                *(void *)(a1 + 24) = &v60[4 * v59];
                if (v55) {
                  operator delete(v55);
                }
              }
              else
              {
                *(_DWORD *)unint64_t v53 = 0;
                unint64_t v54 = v53 + 4;
              }
              *(void *)(a1 + 16) = v54;
              unint64_t v63 = *((void *)this + 1);
              if (v63 > 0xFFFFFFFFFFFFFFFBLL || v63 + 4 > *((void *)this + 2))
              {
LABEL_97:
                *((unsigned char *)this + 24) = 1;
                break;
              }
              *(v54 - 1) = *(_DWORD *)(*(void *)this + v63);
              unint64_t v51 = *((void *)this + 2);
              unint64_t v50 = *((void *)this + 1) + 4;
              *((void *)this + 1) = v50;
            }
LABEL_98:
            PB::Reader::recallMark();
          }
          else
          {
            char v72 = *(char **)(a1 + 16);
            unint64_t v71 = *(void *)(a1 + 24);
            if ((unint64_t)v72 >= v71)
            {
              uint64_t v79 = (char *)*v8;
              uint64_t v80 = (v72 - (unsigned char *)*v8) >> 2;
              unint64_t v81 = v80 + 1;
              if ((unint64_t)(v80 + 1) >> 62) {
LABEL_150:
              }
                sub_1001D7FD4();
              uint64_t v82 = v71 - (void)v79;
              if (v82 >> 1 > v81) {
                unint64_t v81 = v82 >> 1;
              }
              if ((unint64_t)v82 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v83 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v83 = v81;
              }
              if (v83)
              {
                char v84 = (char *)sub_10017EA34(v9, v83);
                uint64_t v79 = *(char **)(a1 + 8);
                char v72 = *(char **)(a1 + 16);
              }
              else
              {
                char v84 = 0;
              }
              uint64_t v87 = &v84[4 * v80];
              *(_DWORD *)uint64_t v87 = 0;
              unint64_t v70 = v87 + 4;
              while (v72 != v79)
              {
                int v88 = *((_DWORD *)v72 - 1);
                v72 -= 4;
                *((_DWORD *)v87 - 1) = v88;
                v87 -= 4;
              }
              *(void *)(a1 + 8) = v87;
              *(void *)(a1 + 16) = v70;
              *(void *)(a1 + 24) = &v84[4 * v83];
              if (v79) {
                operator delete(v79);
              }
            }
            else
            {
              *(_DWORD *)char v72 = 0;
              unint64_t v70 = v72 + 4;
            }
            *(void *)(a1 + 16) = v70;
LABEL_133:
            unint64_t v89 = *((void *)this + 1);
            if (v89 <= 0xFFFFFFFFFFFFFFFBLL && v89 + 4 <= *((void *)this + 2))
            {
              *(v70 - 1) = *(_DWORD *)(*(void *)this + v89);
LABEL_137:
              uint64_t v34 = *((void *)this + 1) + 4;
LABEL_138:
              *((void *)this + 1) = v34;
            }
            else
            {
LABEL_135:
              *((unsigned char *)this + 24) = 1;
            }
          }
LABEL_139:
          unint64_t v2 = *((void *)this + 1);
          unint64_t v3 = *((void *)this + 2);
          int v4 = *((unsigned __int8 *)this + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          break;
        default:
          if ((PB::Reader::skip(this, v15 >> 3, v24, 0) & 1) == 0) {
            return 0;
          }
          goto LABEL_139;
      }
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v15 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v21 = v2 + 1;
      char v22 = *(unsigned char *)(v12 + v2);
      *((void *)this + 1) = v21;
      v15 |= (unint64_t)(v22 & 0x7F) << v19;
      if ((v22 & 0x80) == 0) {
        goto LABEL_21;
      }
      v19 += 7;
      unint64_t v2 = v21;
      if (v20++ >= 9)
      {
LABEL_20:
        unint64_t v15 = 0;
        goto LABEL_21;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101779950(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 76);
  if ((v4 & 2) == 0)
  {
    if ((*(unsigned char *)(result + 76) & 1) == 0) {
      goto LABEL_3;
    }
LABEL_13:
    double result = PB::Writer::write(this, *(double *)(v3 + 56), 2u);
    if ((*(unsigned char *)(v3 + 76) & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  double result = PB::Writer::writeVarInt(this, *(void *)(result + 64), 1u);
  char v4 = *(unsigned char *)(v3 + 76);
  if (v4) {
    goto LABEL_13;
  }
LABEL_3:
  if ((v4 & 4) != 0) {
LABEL_4:
  }
    double result = PB::Writer::write(this, *(float *)(v3 + 72), 3u);
LABEL_5:
  char v5 = *(float **)(v3 + 32);
  char v6 = *(float **)(v3 + 40);
  while (v5 != v6)
  {
    float v7 = *v5++;
    double result = PB::Writer::write(this, v7, 4u);
  }
  uint64_t v9 = *(float **)(v3 + 8);
  uint64_t v8 = *(float **)(v3 + 16);
  while (v9 != v8)
  {
    float v10 = *v9++;
    double result = PB::Writer::write(this, v10, 5u);
  }
  return result;
}

uint64_t sub_101779A10(uint64_t result)
{
  *(void *)double result = &off_10233A298;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_101779A38(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

float sub_101779A70(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_10233A298;
  *(_DWORD *)(a1 + 40) = 0;
  char v2 = *(unsigned char *)(a2 + 40);
  if (v2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    char v3 = 1;
    *(unsigned char *)(a1 + 40) = 1;
    *(void *)(a1 + 8) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*(unsigned char *)(a2 + 40) & 8) != 0)
  {
LABEL_5:
    LODWORD(v4) = *(_DWORD *)(a2 + 24);
    v3 |= 8u;
    *(unsigned char *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 24) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
  }
LABEL_6:
  if ((v2 & 0x40) != 0)
  {
    LODWORD(v4) = *(_DWORD *)(a2 + 36);
    v3 |= 0x40u;
    *(unsigned char *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 36) = v4;
    char v2 = *(unsigned char *)(a2 + 40);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *(_DWORD *)(a2 + 16);
  v3 |= 2u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 0x20) == 0)
  {
LABEL_9:
    if ((v2 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  LODWORD(v4) = *(_DWORD *)(a2 + 32);
  v3 |= 0x20u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 32) = v4;
  char v2 = *(unsigned char *)(a2 + 40);
  if ((v2 & 4) == 0)
  {
LABEL_10:
    if ((v2 & 0x10) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_16;
  }
LABEL_15:
  LODWORD(v4) = *(_DWORD *)(a2 + 20);
  v3 |= 4u;
  *(unsigned char *)(a1 + 40) = v3;
  *(_DWORD *)(a1 + 20) = v4;
  if ((*(unsigned char *)(a2 + 40) & 0x10) == 0) {
    return *(float *)&v4;
  }
LABEL_16:
  LODWORD(v4) = *(_DWORD *)(a2 + 28);
  *(unsigned char *)(a1 + 40) = v3 | 0x10;
  *(_DWORD *)(a1 + 28) = v4;
  return *(float *)&v4;
}

uint64_t sub_101779B60(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(this, "cadence", *(float *)(a1 + 16));
    char v5 = *(unsigned char *)(a1 + 40);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "horizontalRotationRateFiltered", *(float *)(a1 + 20));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(this, "sample", *(float *)(a1 + 24));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(this, "timestamp", *(double *)(a1 + 8));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(this, "verticalRotationRateFiltered", *(float *)(a1 + 28));
  char v5 = *(unsigned char *)(a1 + 40);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(this, "verticalUserAcceleration", *(float *)(a1 + 32));
  if ((*(unsigned char *)(a1 + 40) & 0x40) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(this, "walkSpeedFilteredSample", *(float *)(a1 + 36));
LABEL_9:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_101779C84(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)this + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        if (v10++ > 8) {
          goto LABEL_19;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *(unsigned char *)(a1 + 40) |= 1u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
          unint64_t v2 = *((void *)this + 1) + 8;
          goto LABEL_47;
        case 2u:
          *(unsigned char *)(a1 + 40) |= 8u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 24) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 3u:
          *(unsigned char *)(a1 + 40) |= 0x40u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 36) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 4u:
          *(unsigned char *)(a1 + 40) |= 2u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 16) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 5u:
          *(unsigned char *)(a1 + 40) |= 0x20u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 32) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 6u:
          *(unsigned char *)(a1 + 40) |= 4u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)this + 2)) {
            goto LABEL_44;
          }
          *(_DWORD *)(a1 + 20) = *(_DWORD *)(*(void *)this + v2);
          goto LABEL_46;
        case 7u:
          *(unsigned char *)(a1 + 40) |= 0x10u;
          unint64_t v2 = *((void *)this + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)this + 2))
          {
            *(_DWORD *)(a1 + 28) = *(_DWORD *)(*(void *)this + v2);
LABEL_46:
            unint64_t v2 = *((void *)this + 1) + 4;
LABEL_47:
            *((void *)this + 1) = v2;
          }
          else
          {
LABEL_44:
            *((unsigned char *)this + 24) = 1;
          }
          break;
        default:
          uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)this + 1);
          break;
      }
      unint64_t v3 = *((void *)this + 2);
      int v4 = *((unsigned __int8 *)this + 24);
      if (v2 >= v3 || *((unsigned char *)this + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)this + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      if (v16++ >= 9)
      {
LABEL_19:
        unint64_t v11 = 0;
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)this + 24) = 1;
  }
  return v4 == 0;
}

uint64_t sub_101779FB8(uint64_t result, PB::Writer *this)
{
  uint64_t v3 = result;
  char v4 = *(unsigned char *)(result + 40);
  if (v4)
  {
    uint64_t result = PB::Writer::write(this, *(double *)(result + 8), 1u);
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(result + 40) & 8) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 24), 2u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 36), 3u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 16), 4u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x20) == 0)
  {
LABEL_6:
    if ((v4 & 4) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t result = PB::Writer::write(this, *(float *)(v3 + 20), 6u);
    if ((*(unsigned char *)(v3 + 40) & 0x10) == 0) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t result = PB::Writer::write(this, *(float *)(v3 + 32), 5u);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 0x10) == 0) {
    return result;
  }
LABEL_15:
  float v5 = *(float *)(v3 + 28);

  return PB::Writer::write(this, v5, 7u);
}

uint64_t sub_10177A0B4(uint64_t result)
{
  *(void *)uint64_t result = &off_10233A2D0;
  *(_DWORD *)(result + 68) = 0;
  return result;
}

void sub_10177A0DC(PB::Base *a1)
{
  PB::Base::~Base(a1);

  operator delete();
}

uint64_t sub_10177A114(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &off_10233A2D0;
  *(_DWORD *)(result + 68) = 0;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x10) != 0)
  {
    uint64_t v4 = *(void *)(a2 + 40);
    __int16 v3 = 16;
    *(_WORD *)(result + 68) = 16;
    *(void *)(result + 40) = v4;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_5:
    int v5 = *(_DWORD *)(a2 + 48);
    v3 |= 0x20u;
    *(_WORD *)(result + 68) = v3;
    *(_DWORD *)(result + 48) = v5;
    __int16 v2 = *(_WORD *)(a2 + 68);
  }
LABEL_6:
  if ((v2 & 0x400) != 0)
  {
    char v6 = *(unsigned char *)(a2 + 65);
    v3 |= 0x400u;
    *(_WORD *)(result + 68) = v3;
    *(unsigned char *)(result + 65) = v6;
    __int16 v2 = *(_WORD *)(a2 + 68);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  v3 |= 2u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 16) = v7;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v8 = *(_DWORD *)(a2 + 52);
  v3 |= 0x40u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 52) = v8;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x100) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v9 = *(_DWORD *)(a2 + 60);
  v3 |= 0x100u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 60) = v9;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v10 = *(_DWORD *)(a2 + 56);
  v3 |= 0x80u;
  *(_WORD *)(result + 68) = v3;
  *(_DWORD *)(result + 56) = v10;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v11 = *(void *)(a2 + 24);
  v3 |= 4u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 24) = v11;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v12 = *(void *)(a2 + 32);
  v3 |= 8u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 32) = v12;
  __int16 v2 = *(_WORD *)(a2 + 68);
  if ((v2 & 1) == 0)
  {
LABEL_14:
    if ((v2 & 0x200) == 0) {
      return result;
    }
LABEL_24:
    char v14 = *(unsigned char *)(a2 + 64);
    *(_WORD *)(result + 68) = v3 | 0x200;
    *(unsigned char *)(result + 64) = v14;
    return result;
  }
LABEL_23:
  uint64_t v13 = *(void *)(a2 + 8);
  v3 |= 1u;
  *(_WORD *)(result + 68) = v3;
  *(void *)(result + 8) = v13;
  if ((*(_WORD *)(a2 + 68) & 0x200) != 0) {
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_10177A274(uint64_t a1, PB::TextFormatter *this, char *a3)
{
  PB::TextFormatter::beginObject(this, a3);
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x20) != 0)
  {
    PB::TextFormatter::format(this, "activityType", *(_DWORD *)(a1 + 48));
    __int16 v5 = *(_WORD *)(a1 + 68);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 0x200) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(this, "duration", *(double *)(a1 + 8));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x200) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(this, "fGpsAvailability", *(unsigned char *)(a1 + 64));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(this, "fractionalGrade", *(double *)(a1 + 16));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(this, "gradeType", *(_DWORD *)(a1 + 52));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(this, "hrmin", *(double *)(a1 + 24));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x400) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(this, "isStanding", *(unsigned char *)(a1 + 65));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(this, "metSource", *(_DWORD *)(a1 + 56));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(this, "mets", *(double *)(a1 + 32));
  __int16 v5 = *(_WORD *)(a1 + 68);
  if ((v5 & 0x100) == 0)
  {
LABEL_11:
    if ((v5 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_25:
  PB::TextFormatter::format(this, "rawGradeType", *(_DWORD *)(a1 + 60));
  if ((*(_WORD *)(a1 + 68) & 0x10) != 0) {
LABEL_12:
  }
    PB::TextFormatter::format(this, "startTime", *(double *)(a1 + 40));
LABEL_13:

  return PB::TextFormatter::endObject(this);
}

uint64_t sub_10177A418(uint64_t a1, PB::Reader *this)
{
  unint64_t v2 = *((void *)this + 1);
  unint64_t v3 = *((void *)this + 2);
  int v4 = *((unsigned __int8 *)this + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)this;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)this + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_20;
          }
          v15 += 7;
          unint64_t v2 = v17;
          if (v16++ >= 9)
          {
LABEL_19:
            unint64_t v11 = 0;
            goto LABEL_20;
          }
        }
        int v4 = 1;
        *((unsigned char *)this + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)this + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_20:
        if ((v11 & 7) != 4)
        {
          switch((v11 >> 3))
          {
            case 1u:
              *(_WORD *)(a1 + 68) |= 0x10u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_68;
              }
              *(void *)(a1 + 40) = *(void *)(*(void *)this + v2);
              goto LABEL_104;
            case 2u:
              *(_WORD *)(a1 + 68) |= 0x20u;
              unint64_t v21 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v22 = *(void *)this;
              if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
              {
                char v49 = 0;
                unsigned int v50 = 0;
                uint64_t v25 = 0;
                if (v2 <= v21) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v21)
                  {
                    LODWORD(v25) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_109;
                  }
                  unint64_t v51 = v21++;
                  char v52 = *(unsigned char *)(v22 + v51);
                  *((void *)this + 1) = v21;
                  v25 |= (unint64_t)(v52 & 0x7F) << v49;
                  if ((v52 & 0x80) == 0) {
                    break;
                  }
                  v49 += 7;
                  BOOL v14 = v50++ > 8;
                  if (v14)
                  {
                    LODWORD(v25) = 0;
LABEL_108:
                    unint64_t v2 = v51 + 1;
                    goto LABEL_109;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v25) = 0;
                }
                goto LABEL_108;
              }
              char v23 = 0;
              unsigned int v24 = 0;
              uint64_t v25 = 0;
              do
              {
                unint64_t v2 = v21 + 1;
                *((void *)this + 1) = v21 + 1;
                char v26 = *(unsigned char *)(v22 + v21);
                v25 |= (unint64_t)(v26 & 0x7F) << v23;
                if ((v26 & 0x80) == 0) {
                  goto LABEL_109;
                }
                v23 += 7;
                unint64_t v21 = v2;
                BOOL v14 = v24++ > 8;
              }
              while (!v14);
              LODWORD(v25) = 0;
LABEL_109:
              *(_DWORD *)(a1 + 48) = v25;
              goto LABEL_125;
            case 3u:
              *(_WORD *)(a1 + 68) |= 0x400u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v28 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v27 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v28 = v27 != 0;
              }
              *(unsigned char *)(a1 + 65) = v28;
              goto LABEL_125;
            case 4u:
              *(_WORD *)(a1 + 68) |= 2u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_68;
              }
              *(void *)(a1 + 16) = *(void *)(*(void *)this + v2);
              goto LABEL_104;
            case 5u:
              *(_WORD *)(a1 + 68) |= 0x40u;
              unint64_t v29 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v30 = *(void *)this;
              if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
              {
                char v53 = 0;
                unsigned int v54 = 0;
                uint64_t v33 = 0;
                if (v2 <= v29) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v29)
                  {
                    LODWORD(v33) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_114;
                  }
                  unint64_t v55 = v29++;
                  char v56 = *(unsigned char *)(v30 + v55);
                  *((void *)this + 1) = v29;
                  v33 |= (unint64_t)(v56 & 0x7F) << v53;
                  if ((v56 & 0x80) == 0) {
                    break;
                  }
                  v53 += 7;
                  BOOL v14 = v54++ > 8;
                  if (v14)
                  {
                    LODWORD(v33) = 0;
LABEL_113:
                    unint64_t v2 = v55 + 1;
                    goto LABEL_114;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v33) = 0;
                }
                goto LABEL_113;
              }
              char v31 = 0;
              unsigned int v32 = 0;
              uint64_t v33 = 0;
              do
              {
                unint64_t v2 = v29 + 1;
                *((void *)this + 1) = v29 + 1;
                char v34 = *(unsigned char *)(v30 + v29);
                v33 |= (unint64_t)(v34 & 0x7F) << v31;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_114;
                }
                v31 += 7;
                unint64_t v29 = v2;
                BOOL v14 = v32++ > 8;
              }
              while (!v14);
              LODWORD(v33) = 0;
LABEL_114:
              *(_DWORD *)(a1 + 52) = v33;
              goto LABEL_125;
            case 6u:
              *(_WORD *)(a1 + 68) |= 0x100u;
              unint64_t v35 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v36 = *(void *)this;
              if (v35 > 0xFFFFFFFFFFFFFFF5 || v35 + 10 > v2)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v39 = 0;
                if (v2 <= v35) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v35)
                  {
                    LODWORD(v39) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_119;
                  }
                  unint64_t v59 = v35++;
                  char v60 = *(unsigned char *)(v36 + v59);
                  *((void *)this + 1) = v35;
                  v39 |= (unint64_t)(v60 & 0x7F) << v57;
                  if ((v60 & 0x80) == 0) {
                    break;
                  }
                  v57 += 7;
                  BOOL v14 = v58++ > 8;
                  if (v14)
                  {
                    LODWORD(v39) = 0;
LABEL_118:
                    unint64_t v2 = v59 + 1;
                    goto LABEL_119;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v39) = 0;
                }
                goto LABEL_118;
              }
              char v37 = 0;
              unsigned int v38 = 0;
              uint64_t v39 = 0;
              do
              {
                unint64_t v2 = v35 + 1;
                *((void *)this + 1) = v35 + 1;
                char v40 = *(unsigned char *)(v36 + v35);
                v39 |= (unint64_t)(v40 & 0x7F) << v37;
                if ((v40 & 0x80) == 0) {
                  goto LABEL_119;
                }
                v37 += 7;
                unint64_t v35 = v2;
                BOOL v14 = v38++ > 8;
              }
              while (!v14);
              LODWORD(v39) = 0;
LABEL_119:
              *(_DWORD *)(a1 + 60) = v39;
              goto LABEL_125;
            case 7u:
              *(_WORD *)(a1 + 68) |= 0x80u;
              unint64_t v41 = *((void *)this + 1);
              unint64_t v2 = *((void *)this + 2);
              uint64_t v42 = *(void *)this;
              if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
              {
                char v61 = 0;
                unsigned int v62 = 0;
                uint64_t v45 = 0;
                if (v2 <= v41) {
                  unint64_t v2 = *((void *)this + 1);
                }
                while (1)
                {
                  if (v2 == v41)
                  {
                    LODWORD(v45) = 0;
                    *((unsigned char *)this + 24) = 1;
                    goto LABEL_124;
                  }
                  unint64_t v63 = v41++;
                  char v64 = *(unsigned char *)(v42 + v63);
                  *((void *)this + 1) = v41;
                  v45 |= (unint64_t)(v64 & 0x7F) << v61;
                  if ((v64 & 0x80) == 0) {
                    break;
                  }
                  v61 += 7;
                  BOOL v14 = v62++ > 8;
                  if (v14)
                  {
                    LODWORD(v45) = 0;
LABEL_123:
                    unint64_t v2 = v63 + 1;
                    goto LABEL_124;
                  }
                }
                if (*((unsigned char *)this + 24)) {
                  LODWORD(v45) = 0;
                }
                goto LABEL_123;
              }
              char v43 = 0;
              unsigned int v44 = 0;
              uint64_t v45 = 0;
              do
              {
                unint64_t v2 = v41 + 1;
                *((void *)this + 1) = v41 + 1;
                char v46 = *(unsigned char *)(v42 + v41);
                v45 |= (unint64_t)(v46 & 0x7F) << v43;
                if ((v46 & 0x80) == 0) {
                  goto LABEL_124;
                }
                v43 += 7;
                unint64_t v41 = v2;
                BOOL v14 = v44++ > 8;
              }
              while (!v14);
              LODWORD(v45) = 0;
LABEL_124:
              *(_DWORD *)(a1 + 56) = v45;
LABEL_125:
              unint64_t v3 = *((void *)this + 2);
              int v4 = *((unsigned __int8 *)this + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
            case 8u:
              *(_WORD *)(a1 + 68) |= 4u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_68;
              }
              *(void *)(a1 + 24) = *(void *)(*(void *)this + v2);
              goto LABEL_104;
            case 9u:
              *(_WORD *)(a1 + 68) |= 8u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)this + 2)) {
                goto LABEL_68;
              }
              *(void *)(a1 + 32) = *(void *)(*(void *)this + v2);
              goto LABEL_104;
            case 0xAu:
              *(_WORD *)(a1 + 68) |= 1u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)this + 2))
              {
                *(void *)(a1 + 8) = *(void *)(*(void *)this + v2);
LABEL_104:
                unint64_t v2 = *((void *)this + 1) + 8;
                *((void *)this + 1) = v2;
              }
              else
              {
LABEL_68:
                *((unsigned char *)this + 24) = 1;
              }
              goto LABEL_125;
            case 0xBu:
              *(_WORD *)(a1 + 68) |= 0x200u;
              unint64_t v2 = *((void *)this + 1);
              if (v2 >= *((void *)this + 2))
              {
                BOOL v48 = 0;
                *((unsigned char *)this + 24) = 1;
              }
              else
              {
                int v47 = *(unsigned __int8 *)(*(void *)this + v2++);
                *((void *)this + 1) = v2;
                BOOL v48 = v47 != 0;
              }
              *(unsigned char *)(a1 + 64) = v48;
              goto LABEL_125;
            default:
              uint64_t result = PB::Reader::skip(this, v11 >> 3, v11 & 7, 0);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)this + 1);
              goto LABEL_125;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}